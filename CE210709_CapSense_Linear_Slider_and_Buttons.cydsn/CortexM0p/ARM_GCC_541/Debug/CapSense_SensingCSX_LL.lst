ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_SensingCSX_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsCSXPostSingleScan,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsCSXPostSingleScan, %function
  24              	CapSense_SsCSXPostSingleScan:
  25              	.LFB8:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_SensingCSX_LL.c"
   1:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \file CapSense_SensingCSX_LL.c
   3:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \version 5.0
   4:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   implementation for the low-level APIs of the CSX part of
   8:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   initialization, calibration and scanning.
  10:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \see CapSense v5.0 Datasheet
  12:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 2


  32:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include <cytypes.h>
  42:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CyLib.h"
  43:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  44:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_Structure.h"
  45:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_Configuration.h"
  46:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_SensingCSX_LL.h"
  47:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #include "CapSense_Sensing.h"
  48:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  49:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  50:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  51:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
  53:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function constants
  54:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  56:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #define  CapSense_NUM_HALF_CYCLES                       (2u)
  57:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  58:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  59:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
  60:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Defines module variables
  61:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  62:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  63:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable used to store the Scan period */
  64:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** volatile uint16 CapSense_csxScanPeriod = 0u;
  65:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable used to return raw count from the post scan ISR */
  66:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** volatile uint16 CapSense_csxRawCount = 0u;
  67:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  68:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE != CapSense_CSDV2)
  69:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     volatile uint32 CapSense_csxRawGarbage = 0u;
  70:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
  71:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  72:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Tx electrode that was connected previously */
  73:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static CapSense_FLASH_IO_STRUCT const *CapSense_curTxIOPtr;
  74:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Rx electrode that was connected previously */
  75:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static CapSense_FLASH_IO_STRUCT const *CapSense_curRxIOPtr;
  76:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable to hold total Tx in widget, while scanning all the sensors in widget */
  77:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_curWdgtTotalRx = 0u;
  78:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Local variable to hold total Rx in widget, while scanning all the sensors in widget */
  79:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_curWdgtTotalTx = 0u;
  80:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Flag to indicate that electrodes were connected previously */
  81:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_eleCsxDisconnectFlag = 0u;
  82:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Flash structure holding info of sensor to be scanned */
  83:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
  84:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static CapSense_FLASH_SNS_STRUCT const *CapSense_curGangRxPtr = 0u;
  85:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static CapSense_FLASH_SNS_STRUCT const *CapSense_curGangTxPtr = 0u;
  86:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
  87:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  88:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 3


  89:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Module local function declarations
  90:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
  91:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /**
  92:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \cond SECTION_C_INTERNAL
  93:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \addtogroup group_c_internal
  94:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \{
  95:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** */
  96:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
  97:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXStartSample(void);
  98:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostMultiScan(void);
  99:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostSingleScan(void);
 100:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_SsCalcCsxScanPeriod(CapSense_RAM_WD_BASE_STRUCT const *wdgtPtr);
 101:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 102:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE == CapSense_CSDV2)
 103:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_INLINE static void CapSense_SsCSXStartSampleExt(void);
 104:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
 105:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 106:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 107:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static uint32 CapSense_SsCSXOversample(void);
 108:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
 109:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 110:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 111:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static void CapSense_SsCSXPostMultiScanGanged(void);
 112:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif
 113:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 114:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Pointer to Pointer to function used to register callback in ISR */
 115:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void (*CapSense_CSXPostScanApiPtr)(void) = &CapSense_SsCSXPostMultiScan;
 116:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /** \}
 117:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \endcond */
 118:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 119:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXInitialize
 121:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 122:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 123:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 124:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Performs hardware and firmware initialization required for the CSX operation
 125:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   of the CapSense Component.
 126:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 127:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 128:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function initializes hardware to perform the CSX sensing operation. This
 129:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   function is called by the CapSense_Start() API during the Component
 130:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   initialization. If both CSX and CSD sensing methods are used in the Component,
 131:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   this function is called by the CapSense_SetupWidget() API to change hardware
 132:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   configured for CSD to re-initialize for the CSX sensing.
 133:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 134:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   If the CSD and CSX widgets are used in the Component, it is recommended not to
 135:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   mix the CSD widgets between the CSX widgets, instead, place all CSX widgets in
 136:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the required scanning order and then place the CSD widgets in the customizer.
 137:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   For the Component API, this action will eliminate the need for changing the hardware
 138:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   configuration for every widget scan and will increase the execution speed
 139:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   in the CapSense_ScanAllWidgets() when the API is called.
 140:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 141:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Similarly, it is recommended to set up and scan all the CSX widgets in such
 142:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   a sequence that the CapSense_SetupWidget() API  shouldn't need
 143:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   hardware  sensing-configuration change.
 144:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 145:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   It is highly not recommended to call this API directly from the application layer.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 4


 146:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 147:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 148:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXInitialize(void)
 149:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 150:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
 151:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint8  interruptState;
 152:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 tmpRegVal;
 153:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 154:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_PTR,             CapSense_DEFAULT_CSD_INTR_CFG);
 155:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET_CFG);
 156:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR,        CapSense_DEFAULT_CSD_INTR_MASK_CFG);
 157:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_CSD_HSCMP_CFG);
 158:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_DEFAULT_CSD_AMBUF_CFG);
 159:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_REFGEN_PTR,           CapSense_DEFAULT_CSD_REFGEN_CFG);
 160:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR,           CapSense_DEFAULT_CSD_CSDCMP_CFG);
 161:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR,         CapSense_DEFAULT_CSD_IDACA_CFG);
 162:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 163:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if((0u != CapSense_ADC_EN) || (0u != CapSense_IDACB_USED))
 164:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CY_SET_REG32(CapSense_IDAC_COMP_PTR,    CapSense_DEFAULT_CSD_IDACB_CFG);
 165:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (0u != CapSense_ADC_EN) || (0u != CapSense_IDACB_USED) */
 166:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 167:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_RES_PTR,           CapSense_DEFAULT_CSD_SW_RES_CFG);
 168:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR,     CapSense_DEFAULT_CSD_SENSE_PERIOD_CFG);
 169:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_DUTY_PTR,       CapSense_DEFAULT_CSD_SENSE_DUTY_CFG);
 170:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 171:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 172:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 173:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR,   CapSense_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 174:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 175:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 176:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_BYP_SEL_PTR);
 177:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~(CapSense_SW_BYP_SEL_SW_BYA_MASK);
 178:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_BYP_SEL_CFG;
 179:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR,       tmpRegVal);
 180:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 181:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 182:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_P_SEL_PTR,     CapSense_DEFAULT_CSD_SW_CMP_P_SEL_CFG);
 183:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_N_SEL_PTR,     CapSense_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 184:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 185:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 186:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 187:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_SW_REFGEN_SEL_SW_MASK;
 188:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 189:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR,    tmpRegVal);
 190:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 191:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 192:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR,    CapSense_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 193:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 194:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 195:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_TIME_PTR,         CapSense_DEFAULT_CSD_SEQ_TIME_CFG);
 196:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_INIT_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 197:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 198:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL_CFG);
 199:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR,        CapSense_DEFAULT_CSD_SEQ_START_CFG);
 200:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR,           CapSense_DEFAULT_CSD_CONFIG_CFG);
 201:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 202:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_BistDischargeExtCapacitors();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 5


 203:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 204:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 205:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_PC_PTR);
 206:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintA_SHIFT * CapSense_GPIO_PC_BIT_SIZE)
 207:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_PC_PTR, tmpRegVal);
 208:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 209:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 210:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 211:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_PC_PTR);
 212:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintB__SHIFT * CapSense_GPIO_PC_BIT_SIZE
 213:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_PC_PTR, tmpRegVal);
 214:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 215:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 216:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 217:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 218:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 219:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintA_HSIOM_MASK;
 220:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintA_HSIOM_SHIFT);
 221:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, tmpRegVal);
 222:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 223:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 224:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 225:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 226:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 227:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintB_HSIOM_MASK;
 228:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintB_HSIOM_SHIFT);
 229:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, tmpRegVal);
 230:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 231:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 232:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsxClk);
 233:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 234:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
 235:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsSetSnsClockDivider((uint32)CapSense_dsRam.snsCsxClk);
 236:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 237:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 238:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set all IO states to default state */
 239:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetIOsInDefaultState();
 240:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 241:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 242:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 trimValue;
 243:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 244:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set all IO states to default state */
 245:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetIOsInDefaultState();
 246:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 247:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
 248:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             trimValue = CY_GET_REG32(CapSense_IDAC_PTR);
 249:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             trimValue &= ~(CapSense_IDAC_COMP_CFG_MASK | CapSense_IDAC_FEEDBACK_MODE_MASK);
 250:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CY_SET_REG32(CapSense_IDAC_PTR, trimValue);
 251:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
 252:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 253:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 254:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 255:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 256:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~CapSense_CintB_HSIOM_MASK;
 257:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintB_HSIOM_SHIFT);
 258:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, trimValue);
 259:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 6


 260:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set drive mode of CintB pin to High-Z Analog state in PC register
 261:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             and set logic high on DR register. */
 262:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintB_PC_PTR);
 263:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(CapSense_GPIO_PC_MASK << (CapSense_CintB__SHIFT * CapSense_GPIO_PC_BIT_SIZE 
 264:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_PC_PTR, trimValue);
 265:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 266:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintB_DR_PTR);
 267:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(uint32)((uint32)0x01u << CapSense_CintB__SHIFT);
 268:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_DR_PTR, trimValue);
 269:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 270:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 271:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 272:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~CapSense_CintA_HSIOM_MASK;
 273:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintA_HSIOM_SHIFT);
 274:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, trimValue);
 275:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 276:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set drive mode of CintA_tank pin to High-Z Analog state in PC register
 277:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             and set logic high on DR register. */
 278:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintA_PC_PTR);
 279:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(CapSense_GPIO_PC_MASK << (CapSense_CintA_SHIFT * CapSense_GPIO_PC_BIT_SIZE )
 280:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_PC_PTR, trimValue);
 281:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 282:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CintA_DR_PTR);
 283:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue &= ~(uint32)((uint32)0x01u << CapSense_CintA_SHIFT);
 284:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_DR_PTR, trimValue);
 285:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 286:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Connect CSD comparator to CintB via AMUXBUS-A */
 287:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_CONFIG_PTR);
 288:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         trimValue |= CapSense_CONFIG_SENSE_INSEL_MASK;
 289:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, trimValue);
 290:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 291:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* If common clocks are enabled for Component, set clock
 292:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them */
 293:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_CSX_COMMON_TX_CLK_EN == CapSense_ENABLE)
 294:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsSetClockDividers((uint32)CapSense_dsRam.snsCsxClk, (uint32)CapSense_dsRam.mo
 295:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 296:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 297:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Enable CapSense ISR and set ISR for CSX sensing */
 298:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsIsrInitialize(&CapSense_CSXScanISR);
 299:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 300:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 301:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 302:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 303:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXElectrodeCheck
 304:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 305:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 306:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 307:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Check if electrodes were previously connected using
 308:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the CapSense_CSXSetupWidgetExt() API and if yes, disconnect them.
 309:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 310:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 311:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function checks if CapSense_eleCsxDisconnectFlag is set.
 312:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   If it is set, the function disconnects the previously connected electrode.
 313:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 314:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 315:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXElectrodeCheck(void)
 316:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 7


 317:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 318:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 numElectrodes;
 319:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN) */
 320:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 321:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if (0u != CapSense_eleCsxDisconnectFlag)
 322:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 323:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        /* Disconnect if electrodes were previous connected by SetupWidgetExt() API */
 324:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 325:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Check ganged sns flag */
 326:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             if (CapSense_GANGED_SNS_MASK == (CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANG
 327:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 328:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Tx electrode
 329:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     3. Get Tx pointer
 330:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     4. Disconnect all Tx */
 331:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins;
 332:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 333:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 334:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 335:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 336:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectTx(CapSense_curTxIOPtr++);
 337:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 338:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 339:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 340:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Rx electrode
 341:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     3. Get Rx pointer
 342:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     4. Disconnect all Rx */
 343:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangRxPtr->numPins;
 344:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 345:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 346:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 347:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 348:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
 349:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 350:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 351:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 352:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             else
 353:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 354:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 355:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectTx(CapSense_curTxIOPtr);
 356:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 357:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 358:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #else
 359:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 360:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXDisconnectTx(CapSense_curTxIOPtr);
 361:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 362:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 363:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_eleCsxDisconnectFlag = 0u;
 364:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 365:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 366:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 367:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 368:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 369:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXSetupWidget
 370:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 371:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 372:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 373:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 8


 374:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  in a specific widget using the CSX sensing method. This function requires
 375:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  using the CapSense_CSXScan() function to start scanning.
 376:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 377:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 378:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function initializes the widgets specific common parameters to perform
 379:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  the CSX scanning. The initialization includes the following:
 380:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    1. The CSD_CONFIG register.
 381:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    2. The IDAC register.
 382:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    3. The Sense clock frequency
 383:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    4. The phase alignment of the sense and modulator clocks.
 384:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 385:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function does not connect any specific sensors to the scanning hardware
 386:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  and neither does it start a scanning process. The CapSense_CSXScan()
 387:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  function must be called after initializing the widget to start scanning.
 388:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 389:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 390:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
 391:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 392:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called by the CapSense_SetupWidget() API if the
 393:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  given widget uses the CSX sensing method.
 394:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 395:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 396:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 397:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 398:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 399:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetId
 400:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 401:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  initialization required for scanning sensors in the specific widget.
 402:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 403:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 404:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 405:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 406:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXSetupWidget(uint32 widgetId)
 407:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 408:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* variable to access widget details */
 409:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
 410:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 411:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 412:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 tmpRegVal;
 413:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 snsClkVal;
 414:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSDV2) */
 415:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 416:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Save the current widget Id */
 417:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_widgetIndex = (uint8)widgetId;
 418:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 419:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 420:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 421:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /*
 422:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *  Check if CSX electrodes were previously connected using
 423:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *  CapSense_CSXSetupWidgetExt API and if yes, disconnect them
 424:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     */
 425:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_CSXElectrodeCheck();
 426:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 427:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Configure hardware block */
 428:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSDV2)
 429:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curFlashWdgtPtr = &CapSense_dsFlash.wdgtArray[widgetId];
 430:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 9


 431:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_curFlashWdgtPtr->ptr2WdgtRam;
 432:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 433:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
 434:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             snsClkVal = (uint32)CapSense_dsRam.snsCsxClk;
 435:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #else
 436:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             snsClkVal = (uint32)curRamWdgtBasePtr->snsClk;
 437:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
 438:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 439:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (uint32)curRamWdgtBasePtr->resolution);
 440:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod  = CapSense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 441:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 442:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = (uint32)curRamWdgtBasePtr->snsClkSource;
 443:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 444:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         snsClkVal = (snsClkVal - 1uL) & CapSense_SENSE_PERIOD_SENSE_DIV_MASK;
 445:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << CapSense_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 446:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, tmpRegVal);
 447:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsxClk);
 448:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 449:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /*
 450:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         * initialize access pointers for current:
 451:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *    1. Pointer to widget configuration in Flash
 452:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *    2. Widget configuration in RAM
 453:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *    3. Make a local copy of widget index
 454:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         */
 455:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curFlashWdgtPtr = &CapSense_dsFlash.wdgtArray[widgetId];
 456:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_curFlashWdgtPtr->ptr2WdgtRam;
 457:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 458:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_CONFIG_ENABLE_MASK);
 459:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, (CY_GET_REG32(CapSense_CONFIG_PTR) |
 460:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_MUTUALCAP_EN_MASK     |
 461:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_SENSE_COMP_BW_MASK    |
 462:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_SENSE_COMP_EN_MASK    |
 463:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_SENSE_INSEL_MASK      |
 464:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_REFBUF_EN_MASK        |
 465:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                 CapSense_CONFIG_REFBUF_DRV_MASK));
 466:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 467:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* If individual clocks are enabled for each widget, set clock
 468:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them. */
 469:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_CSX_COMMON_TX_CLK_EN == CapSense_DISABLE)
 470:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsSetClockDividers((uint32)curRamWdgtBasePtr->snsClk, (uint32)CapSense_dsRam.m
 471:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 472:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 473:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Find scan period */
 474:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod = CapSense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 475:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 476:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 477:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 478:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 479:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXSetupWidgetExt
 480:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 481:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 482:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 483:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Performs extended initialization for the CSX widget and also performs
 484:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  initialization required for a specific sensor in the widget. This function
 485:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  requires using the CapSense_CSXScan() function to initiate a scan.
 486:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 10


 488:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function does the same tasks as CapSense_CSXSetupWidget() and
 489:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  also connects a sensor in the widget for scanning. Once this function is
 490:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  called to initialize a widget and a sensor, the CapSense_CSXScanExt()
 491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  function must be called to scan the sensor.
 492:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 493:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 494:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
 495:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 496:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 497:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 498:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 499:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 500:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetId
 501:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 502:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  initialization required for scanning a specific sensor in a specific widget.
 503:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 504:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 505:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 506:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param sensorId
 507:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 508:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
 509:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  specific widget.
 510:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
 511:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense Configuration header file defined as
 512:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 513:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 514:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 515:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 516:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXSetupWidgetExt(uint32 widgetId, uint32 sensorId)
 517:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 518:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 txIndex;
 519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 rxIndex;
 520:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 521:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 522:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint16 numElectrodes;
 523:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN) */
 524:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 525:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Initialize widget */
 526:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_CSXSetupWidget(widgetId);
 527:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_sensorIndex = (uint8)sensorId;
 528:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 529:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* initialize sensor data structure pointer to appropriate address */
 530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = CapSense_curFlashWdgtPtr->ptr2SnsRam;
 531:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = &CapSense_curRamSnsPtr[sensorId];
 532:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 533:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 534:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (0u != CapSense_curRamSnsPtr->subConvNum)
 535:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 536:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 537:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 538:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /*
 539:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *  Find Tx and Rx index for given snsIndex
 540:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    rxIndex = sensorId / TxCount
 541:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    txIndex = sensorId % TxCount
 542:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     */
 543:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     rxIndex = sensorId /CapSense_curFlashWdgtPtr->numRows;
 544:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     txIndex = sensorId % CapSense_curFlashWdgtPtr->numRows;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 11


 545:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 546:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* If widget is APA, find node (Tx/Rx) to be connected for scanning */
 547:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 548:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANGED_S
 549:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 550:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
 551:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  1. Get access to Rx sensor pointer (Rx = Base + rxIndex).
 552:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  2. Get number of Rx electrodes
 553:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  3. Get Rx pointer
 554:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  4. Connect all Rx
 555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
 556:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangRxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 557:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangRxPtr += rxIndex;
 558:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             numElectrodes = CapSense_curGangRxPtr->numPins;
 559:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 560:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 561:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             do
 562:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 563:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
 564:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes--;
 565:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             } while (0u != numElectrodes);
 566:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 567:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
 568:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  1. Get access to Tx sensor pointer (Tx = Base + NumberRx + TxIndex).
 569:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  2. Get number of Tx electrodes
 570:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  3. Get Tx pointer
 571:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  4. Connect all Tx
 572:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
 573:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 574:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curGangTxPtr += (CapSense_curFlashWdgtPtr->numCols + txIndex);
 575:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 576:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             numElectrodes = CapSense_curGangTxPtr->numPins;
 577:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 578:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 579:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             do
 580:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 581:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
 582:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes--;
 583:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }while (0u != numElectrodes);
 584:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 585:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set callback to scan connected ganged sensor only */
 586:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostSingleScan;
 587:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 588:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
 589:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif  /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
 590:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 591:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
 592:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *  If no ganged sensor in Component OR current widget no contains ganged sns, then:
 593:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *    1. Find Rx pointer: Rx = Base address + RxIndex
 594:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *    2. Find Tx pointer: Tx = Base address + (total Rx + TxIndex)
 595:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
 596:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->ptr2S
 597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = &CapSense_curRxIOPtr[rxIndex];
 598:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 599:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->ptr2S
 600:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = &CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numCols + txIndex
 601:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 12


 602:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Connect Tx and Rx IOs for scan ad set flag to indicate that IOs should be disconnect
 603:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 604:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 605:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_eleCsxDisconnectFlag = CapSense_DISCONNECT_IO_FLAG;
 606:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 607:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set callback to scan all the sensors in widget */
 608:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostSingleScan;
 609:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 610:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 611:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 612:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 613:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 614:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 615:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 616:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXScan
 617:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 618:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 619:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 620:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by
 621:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  the CapSense_CSXSetupWidget() function.
 622:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 623:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 624:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
 625:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  the CapSense_CSXSetupWidget() function. It does the following tasks:
 626:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    1. Connects the first sensor of the widget.
 627:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    2. Initializes an interrupt callback function to initialize a scan of the
 628:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *       next sensors in a widget.
 629:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    3. Starts scanning for the first sensor in the widget.
 630:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 631:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called by the CapSense_Scan() API if the given
 632:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widget uses the CSX sensing method.
 633:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 634:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 635:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 636:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 637:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 638:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 639:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status. The widget must be
 640:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  preconfigured by the CapSense_CSXSetupWidget() function if any other
 641:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widget was previously scanned or any other type of scan functions were used.
 642:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 643:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 644:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 645:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXScan(void)
 646:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 647:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 648:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 numElectrodes;
 649:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 650:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 651:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 snsIndex = 0u;
 652:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 snsNum;
 653:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 654:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 655:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_sensorIndex = 0u;
 656:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 657:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* initialize pointer to access sensor RAM elements */
 658:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = CapSense_curFlashWdgtPtr->ptr2SnsRam;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 13


 659:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 660:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 661:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Loop through the sensors until non-skipped is found */
 662:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         snsNum = CapSense_curFlashWdgtPtr->totalNumSns;
 663:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         while ((snsIndex < snsNum) && (CapSense_curRamSnsPtr->subConvNum == 0u))
 664:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 665:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Increment sensor pointers */
 666:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr++;
 667:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_sensorIndex++;
 668:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             snsIndex++;
 669:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 670:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /*
 671:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 672:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 673:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         */
 674:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalTx = (uint16)(CapSense_curFlashWdgtPtr->numRows - (snsIndex % CapSense
 675:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalRx  = (uint16)(CapSense_curFlashWdgtPtr->numCols - (snsIndex / CapSens
 676:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 677:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Scan sensor if it's index within a valid range otherwise do nothing as all the sensors a
 678:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (snsIndex < snsNum)
 679:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 680:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 681:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if ((CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANGED_SNS_MASK) != 0u)
 682:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 683:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect all Rx electrodes */
 684:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangRxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 685:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangRxPtr += snsIndex /CapSense_curFlashWdgtPtr->numRows;
 686:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangRxPtr->numPins;
 687:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 688:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
 689:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 690:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
 691:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
 692:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
 693:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 694:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect all Tx electrodes */
 695:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 696:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangTxPtr += (CapSense_curFlashWdgtPtr->numCols + snsIndex % CapSen
 697:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangTxPtr->numPins;
 698:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 699:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
 700:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 701:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
 702:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
 703:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }while (0u != numElectrodes);
 704:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Assign callback to ISR */
 705:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScanGanged;
 706:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 707:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
 708:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN) */
 709:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 710:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Find Rx pointer: Rx = Base_address + SnsIndex / total_Tx */
 711:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->p
 712:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr += (snsIndex / CapSense_curFlashWdgtPtr->numRows);
 713:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Find Tx pointer: Tx = Base_address + total_Rx + SnsIndex % total_Tx */
 714:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->p
 715:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr += CapSense_curFlashWdgtPtr->numCols;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 14


 716:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr += (snsIndex % CapSense_curFlashWdgtPtr->numRows);
 717:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Connect Tx and Rx electrodes for scan */
 718:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 719:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 720:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 721:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScan;
 722:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 723:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 724:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 725:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
 726:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 727:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 728:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 729:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set scan status, enter critical section and initiate scan */
 730:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 731:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 732:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 733:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 734:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 735:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
 736:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 737:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
 738:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 739:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 740:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 741:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 742:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /*
 743:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 744:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 745:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         */
 746:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalTx = CapSense_curFlashWdgtPtr->numRows;
 747:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalRx  = CapSense_curFlashWdgtPtr->numCols;
 748:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 749:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* If Component contains CSX ganged sensor, then check if widget contains ganged sensor */
 750:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if (CapSense_CSX_GANGED_SNS_EN == 1u)
 751:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             if ((CapSense_curFlashWdgtPtr->staticConfig & CapSense_GANGED_SNS_MASK) != 0u)
 752:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 753:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
 754:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Rx
 755:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  2. Get number of Rx pin
 756:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  3. Get pointer to the Rx pin
 757:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  4. Connect all Rx pins
 758:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
 759:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curGangRxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 760:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangRxPtr->numPins ;
 761:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
 762:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 763:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 764:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
 765:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 766:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 767:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 768:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
 769:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Tx (Tx = Base + number of Rx).
 770:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  2. Get number of Tx electrodes
 771:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  3. Get pointer the Tx electrode
 772:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  4. Connect all Tx
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 15


 773:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
 774:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
 775:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curGangTxPtr += CapSense_curFlashWdgtPtr->numCols;
 776:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins ;
 777:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
 778:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 779:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 780:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 781:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
 782:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
 783:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }while (0u != numElectrodes);
 784:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 785:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Assign callback to ISR */
 786:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScanGanged;
 787:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 788:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 789:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             else
 790:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 791:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 792:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
 793:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  If no ganged sensor in the Component OR current widget contains no ganged sns, t
 794:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *    1. Find Rx pointer: Rx = Base address.
 795:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *    2. Find Tx pointer: Tx = Base address + total Rx
 796:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
 797:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWdgtPtr->p
 798:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = CapSense_curRxIOPtr;
 799:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numCols)];
 800:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 801:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Connect first Tx and first Rx IOs for scan */
 802:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 803:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 804:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 805:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 806:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXPostScanApiPtr = &CapSense_SsCSXPostMultiScan;
 807:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 808:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 809:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 810:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
 811:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 812:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 813:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set scan status, enter critical section and initiate scan */
 815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 816:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 818:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 819:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 820:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
 821:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 822:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsCSXStartSample();
 823:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 824:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 825:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 826:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 827:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXScanExt()
 829:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 16


 830:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 831:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 832:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Starts the CSX conversion on the preconfigured sensor. This function requires
 833:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  using the CapSense_CSXSetupWidgetExt() function to set up a
 834:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widget.
 835:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 836:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
 837:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function performs single scanning of one sensor in the widget configured
 838:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  by the CapSense_CSXSetupWidgetExt() function. It does the following
 839:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  tasks:
 840:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    1. Sets a busy flag in the CapSense_dsRam structure.
 841:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    2. Configures the Tx clock frequency.
 842:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    3. Configures the Modulator clock frequency.
 843:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    4. Configures the IDAC value.
 844:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *    5. Starts single scanning.
 845:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 846:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 847:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 848:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example). This
 849:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  function is called when no scanning is in progress. I.e.
 850:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_IsBusy() returns a non-busy status.
 851:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 852:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  The sensor must be preconfigured by using the
 853:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXSetupWidgetExt() API prior to calling this function.
 854:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  The sensor remains ready for the next scan if a previous scan was triggered
 855:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  by using the CapSense_CSXScanExt() function. In this case, calling
 856:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXSetupWidgetExt() is not required every time before the
 857:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXScanExt() function. If a previous scan was triggered in
 858:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets()
 859:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  or CapSense_RunTuner() - (see the CapSense_RunTuner() function
 860:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  description for more details), the sensor must be preconfigured again by
 861:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  using the CapSense_CSXSetupWidgetExt() API prior to calling the
 862:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXScanExt() function.
 863:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 864:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  If disconnection of the sensors is required after calling
 865:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXScanExt(), the CapSense_CSXDisconnectTx() and
 866:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_CSXDisconnectRx() APIs can be used.
 867:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 868:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 869:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 870:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXScanExt(void)
 871:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 872:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 873:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
 874:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 875:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 876:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 877:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 878:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (0u != CapSense_curRamSnsPtr->subConvNum)
 879:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 880:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Set busy flag and start conversion */
 881:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 882:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 883:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 884:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 885:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 886:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 17


 887:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 888:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
 889:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 890:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 891:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Set busy flag and start conversion */
 892:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsRam.status |= CapSense_SW_STS_BUSY;
 893:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 894:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_CSDV2) &&\
 895:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_ENABLE != CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
 896:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****            (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 897:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
 898:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 899:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsCSXStartSample();
 900:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 901:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 902:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 903:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 904:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
 905:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXPostMultiScan
 906:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
 907:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 908:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
 909:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   ISR function implements the multiple-sensor scanning for un-ganged CSX widgets.
 910:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, it should not be used by
 911:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the application layer.
 912:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
 913:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
 914:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 915:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostMultiScan(void)
 916:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
 917:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
 918:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_EntryCallback();
 919:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_ENTRY_CALLBACK */
 920:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 921:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
 922:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = \
 923:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                              (CapSense_csxScanPeriod - CapSense_csxRawCount);
 924:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 925:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 926:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
 927:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
 928:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 929:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
 930:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_scanFreqIndex++;
 931:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 932:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 933:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeImoFreq((uint32)CapSense_scanFreqIndex);
 934:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else
 935:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeClkFreq((uint32)CapSense_scanFreqIndex);
 936:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 937:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 938:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
 939:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 940:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
 941:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
 942:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 943:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 18


 944:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
 945:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
 946:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 947:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
 948:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
 949:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #else
 950:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
 951:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
 952:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 953:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
 954:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 955:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 956:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect Tx/Rx electrodes of previously scanned sensor as preparation for next
 957:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectTx(CapSense_curTxIOPtr);
 958:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 959:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 960:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
 961:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
 962:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 963:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
 964:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_sensorIndex++;
 965:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 966:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment sensor pointers */
 967:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
 968:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalTx--;
 969:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalTx > 0u)
 970:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 971:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr++;
 972:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
 973:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
 974:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 975:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalRx--;
 976:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_curWdgtTotalRx > 0u)
 977:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
 978:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curRxIOPtr++;
 979:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curWdgtTotalTx  = CapSense_curFlashWdgtPtr->numRows;
 980:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFla
 981:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curTxIOPtr = & CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->
 982:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
 983:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
 984:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while ((CapSense_curWdgtTotalRx != 0u) && (CapSense_curRamSnsPtr->subConvNum == 0
 985:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 986:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Perform the next scan or switch to the next widget */
 987:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if(CapSense_curWdgtTotalRx != 0u)
 988:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 989:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect Tx/Rx electrodes for the next scan */
 990:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 991:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 992:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
 993:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
 994:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 995:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
 996:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 997:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
 998:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_requestScanAllWidget != 0u)
 999:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1000:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsPostAllWidgetsScan();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 19


1001:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1002:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1003:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1004:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.scanCounter++;
1005:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1006:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1007:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1008:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1009:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1010:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
1011:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  Disconnect Tx electrodes of previously scanned sensor as
1012:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  preparation for next sensor scan
1013:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
1014:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXDisconnectTx (CapSense_curTxIOPtr);
1015:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1016:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1017:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_sensorIndex++;
1018:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1019:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /*
1020:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  Initiate scan for next sensor in widget, if all the sensors in
1021:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *  widget are not scanned
1022:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
1023:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curWdgtTotalTx--;
1024:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curWdgtTotalTx > 0u)
1025:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1026:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /*
1027:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  1. Increment pointer to next Tx
1028:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  2. Connect next Rx for scan
1029:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  3. Increment pointer to sns data
1030:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     */
1031:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr++;
1032:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx (CapSense_curTxIOPtr);
1033:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
1034:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1035:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1036:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
1037:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1038:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1039:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Check if all Rx are looped through */
1040:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
1041:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1042:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalRx--;
1043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalRx > 0u)
1044:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1045:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /*
1046:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  1. Disconnect current Rx electrode
1047:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  2. Connect next Rx electrode
1048:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1049:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  4. Find first Tx electrode again
1050:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  5. Connect first Tx electrode
1051:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         */
1052:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
1053:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr++;
1054:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr);
1055:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalTx  = CapSense_curFlashWdgtPtr->numRows;
1056:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWd
1057:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = & CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numC
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 20


1058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr);
1059:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1060:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Increment RAM sensor pointer pointer */
1061:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr++;
1062:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1063:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Initiate sample */
1064:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsCSXStartSample();
1065:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1066:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1067:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1068:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* If all the sensors are scanned, disconnect Tx */
1069:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
1070:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1071:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1072:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_requestScanAllWidget != 0u)
1073:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1074:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_SsPostAllWidgetsScan();
1075:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1076:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         else
1077:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1078:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             /*
1079:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *  All pending scans completed,
1080:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    1. update the counter to indicat same
1081:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
1082:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             */
1083:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.scanCounter++;
1084:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1085:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1086:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1087:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1088:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1089:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1090:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1091:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_EXIT_CALLBACK
1092:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_ExitCallback();
1093:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_EXIT_CALLBACK */
1094:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1095:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1096:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1097:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXPostMultiScanGanged
1099:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1100:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1101:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1102:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1103:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1104:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the application layer.
1105:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1106:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1107:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1108:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1109:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the application layer.
1110:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1111:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1112:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_CSX_GANGED_SNS_EN == 1u)
1113:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1114:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostMultiScanGanged(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 21


1115:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1116:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 numElectrodes;
1117:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1118:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
1119:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_EntryCallback();
1120:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_ENTRY_CALLBACK */
1121:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1122:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
1123:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] = \
1124:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (CapSense_csxScanPeriod - CapSense_csxRawCount);
1125:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1126:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1127:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1128:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
1129:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1130:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1131:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_scanFreqIndex++;
1132:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1133:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1134:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeImoFreq((uint32)CapSense_scanFreqIndex);
1135:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else
1136:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeClkFreq((uint32)CapSense_scanFreqIndex);
1137:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1138:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1139:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
1140:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1141:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
1142:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
1143:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1144:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
1145:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1146:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1147:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1148:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1149:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
1150:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #else
1151:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
1152:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1153:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1154:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
1155:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1156:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1157:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect Tx electrodes of previously scanned sensor as preparation for next se
1158:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins;
1159:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1160:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1161:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1162:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectTx(CapSense_curTxIOPtr++);
1163:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
1164:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1165:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect Rx electrodes of previously scanned sensor as preparation for next se
1166:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangRxPtr->numPins;
1167:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1168:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1169:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1170:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
1171:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 22


1172:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1173:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1174:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
1175:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1176:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1177:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
1178:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_sensorIndex++;
1179:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1180:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment RAM sensor pointer */
1181:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
1182:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalTx--;
1183:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalTx > 0u)
1184:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1185:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangTxPtr++;
1186:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1187:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1188:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1189:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1190:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalRx--;
1191:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_curWdgtTotalRx > 0u)
1192:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1193:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curGangRxPtr++;
1194:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curWdgtTotalTx = CapSense_curFlashWdgtPtr->numRows;
1195:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
1196:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_curGangTxPtr += CapSense_curFlashWdgtPtr->numCols;
1197:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1198:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1199:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while ((CapSense_curWdgtTotalRx != 0u) && (CapSense_curRamSnsPtr->subConvNum == 0
1200:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1201:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if(CapSense_curWdgtTotalRx != 0u)
1202:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1203:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1204:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangTxPtr->numPins;
1205:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1206:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
1207:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1208:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
1209:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
1210:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1211:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1212:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangRxPtr->numPins ;
1213:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1214:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
1215:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1216:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
1217:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
1218:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1219:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1220:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
1221:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1222:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
1223:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1224:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
1225:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_requestScanAllWidget != 0u)
1226:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1227:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsPostAllWidgetsScan();
1228:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 23


1229:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1230:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1231:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.scanCounter++;
1232:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1233:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1234:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1235:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1236:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1237:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Disconnect ALL pins of previously scanned Tx */
1238:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 numElectrodes = CapSense_curGangTxPtr->numPins ;
1239:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1240:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 do
1241:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1242:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXDisconnectTx (CapSense_curTxIOPtr++);
1243:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes--;
1244:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1245:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1246:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1247:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_sensorIndex++;
1248:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1249:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Check if all Tx are scanned, if not, initiate scan for next Tx */
1250:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curWdgtTotalTx--;
1251:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curWdgtTotalTx > 0u)
1252:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1253:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /*
1254:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  1. Find pointer of next Tx (ganged)
1255:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     *  2. Connect all Tx pins
1256:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     */
1257:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curGangTxPtr++;
1258:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     numElectrodes = CapSense_curGangTxPtr->numPins ;
1259:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1260:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     do
1261:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1262:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
1263:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes--;
1264:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1265:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1266:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Increment RAM pointer to next sensor */
1267:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
1268:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1269:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Reset scan result holder and initiate scan */
1270:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsCSXStartSample();
1271:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1272:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 else
1273:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1274:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1275:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curWdgtTotalRx--;
1276:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalRx > 0u)
1277:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1278:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* 1. Disconnect current Rx ALL pins */
1279:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangRxPtr->numPins ;
1280:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1281:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1282:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1283:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
1284:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1285:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 24


1286:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1287:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* 2. Connect next Rx ALL pins */
1288:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangRxPtr++;
1289:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangRxPtr->numPins ;
1290:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1291:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1292:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1293:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXConnectRx(CapSense_curRxIOPtr++);
1294:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1295:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1296:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1297:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /*
1298:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1299:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  4. Find first Tx  again
1300:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         *  5. Connect first Tx ALL pins
1301:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         */
1302:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalTx = CapSense_curFlashWdgtPtr->numRows;
1303:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangTxPtr = CapSense_curFlashWdgtPtr->ptr2SnsFlash;
1304:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curGangTxPtr += CapSense_curFlashWdgtPtr->numCols;
1305:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1306:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* 6. Connect Tx ALL pins */
1307:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangTxPtr->numPins ;
1308:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = &CapSense_ioList[CapSense_curGangTxPtr->firstPinId];
1309:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1310:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1311:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXConnectTx(CapSense_curTxIOPtr++);
1312:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1313:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1314:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1315:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Increment RAM pointer to next sensor */
1316:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr++;
1317:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1318:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Reset scan result holder and initiate scan */
1319:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_SsCSXStartSample();
1320:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1321:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     else
1322:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1323:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Disconnect ALL electrodes of previously scanned Rx */
1324:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         numElectrodes = CapSense_curGangRxPtr->numPins ;
1325:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr = &CapSense_ioList[CapSense_curGangRxPtr->firstPinId];
1326:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         do
1327:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1328:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr++);
1329:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             numElectrodes--;
1330:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1331:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1332:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1333:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         if (CapSense_requestScanAllWidget != 0u)
1334:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1335:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_SsPostAllWidgetsScan();
1336:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1337:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         else
1338:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
1339:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             /*
1340:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *  All pending scans completed,
1341:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    1. update the counter to indicate same
1342:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 25


1343:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             */
1344:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.scanCounter++;
1345:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1346:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
1347:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1348:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1349:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1350:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1351:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1352:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_EXIT_CALLBACK
1353:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_ExitCallback();
1354:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_EXIT_CALLBACK */
1355:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1356:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1357:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif  /* (CapSense_CSX_GANGED_SNS_EN == 1u) */
1358:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1359:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1360:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXPostSingleScan
1361:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1362:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1363:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1364:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The ISR function for single-sensor scanning implementation.
1365:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1366:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1367:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function is used by CapSense ISR in the CSX scanning mode to implement
1368:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   the single-sensor scanning.
1369:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function should not be used by the application layer.
1370:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1371:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1372:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1373:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXPostSingleScan(void)
1374:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
  27              		.loc 1 1374 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1375:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
1376:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_EntryCallback();
1377:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_ENTRY_CALLBACK */
1378:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1379:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /*
1380:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     * Copy scan result into sensor raw count array and clear busy flag
1381:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    No sensor is connected or disconnected in this function
1382:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    Calling CapSense_ScanExt from application would perform
1383:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     *    one more scan of same sensor. Specifically for low-power mode.
1384:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     */
1385:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr->raw[CapSense_scanFreqIndex] =
  32              		.loc 1 1385 0
  33 0000 094B     		ldr	r3, .L2
  34 0002 1868     		ldr	r0, [r3]
  35 0004 094B     		ldr	r3, .L2+4
  36 0006 1B78     		ldrb	r3, [r3]
  37 0008 0949     		ldr	r1, .L2+8
  38 000a 0A88     		ldrh	r2, [r1]
  39 000c 4988     		ldrh	r1, [r1, #2]
  40 000e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 26


  41 0010 521A     		subs	r2, r2, r1
  42 0012 1A52     		strh	r2, [r3, r0]
1386:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         (CapSense_csxScanPeriod - CapSense_csxRawCount);
1387:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1388:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1389:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1390:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if (CapSense_FREQ_CHANNEL_2 > CapSense_scanFreqIndex)
1391:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1392:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1393:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_scanFreqIndex++;
1394:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1395:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1396:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeImoFreq((uint32)CapSense_scanFreqIndex);
1397:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #else
1398:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_SsChangeClkFreq((uint32)CapSense_scanFreqIndex);
1399:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1400:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1401:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_SsCSXStartSample();
1402:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1403:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
1404:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
1405:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1406:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_MULTI_FREQ_SCAN_EN == CapSense_ENABLE)
1407:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1408:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_scanFreqIndex = CapSense_FREQ_CHANNEL_0;
1409:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1410:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_MFS_IMO == CapSense_MFS_METHOD)
1411:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeImoFreq(CapSense_FREQ_CHANNEL_0);
1412:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #else
1413:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_SsChangeClkFreq(CapSense_FREQ_CHANNEL_0);
1414:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif /* (CapSense_MFS_IMO == CapSense_MFS_METHOD) */
1415:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1416:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
1417:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /*
1418:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             * All pending scans completed,
1419:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *   1. Update the counter to indicate same
1420:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             *   2. Clear busy state as scanning is completed
1421:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             */
1422:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.scanCounter++;
  43              		.loc 1 1422 0
  44 0014 074B     		ldr	r3, .L2+12
  45 0016 1A89     		ldrh	r2, [r3, #8]
  46 0018 0132     		adds	r2, r2, #1
  47 001a 1A81     		strh	r2, [r3, #8]
1423:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
  48              		.loc 1 1423 0
  49 001c DA68     		ldr	r2, [r3, #12]
  50 001e 8021     		movs	r1, #128
  51 0020 8A43     		bics	r2, r1
  52 0022 DA60     		str	r2, [r3, #12]
1424:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1425:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1426:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_EXIT_CALLBACK
1427:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_ExitCallback();
1428:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_EXIT_CALLBACK */
1429:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
  53              		.loc 1 1429 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 27


  54              		@ sp needed
  55 0024 7047     		bx	lr
  56              	.L3:
  57 0026 C046     		.align	2
  58              	.L2:
  59 0028 00000000 		.word	CapSense_curRamSnsPtr
  60 002c 00000000 		.word	CapSense_scanFreqIndex
  61 0030 00000000 		.word	.LANCHOR0
  62 0034 00000000 		.word	CapSense_dsRam
  63              		.cfi_endproc
  64              	.LFE8:
  65              		.size	CapSense_SsCSXPostSingleScan, .-CapSense_SsCSXPostSingleScan
  66              		.section	.text.CapSense_SsCalcCsxScanPeriod,"ax",%progbits
  67              		.align	2
  68              		.code	16
  69              		.thumb_func
  70              		.type	CapSense_SsCalcCsxScanPeriod, %function
  71              	CapSense_SsCalcCsxScanPeriod:
  72              	.LFB16:
1430:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1431:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1432:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXCalibrateWidget
1433:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1434:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1435:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1436:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calibrates the raw count values of all the sensors/nodes in a CSX widget.
1437:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1438:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1439:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Performs a successive approximation search algorithm to find appropriate
1440:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  IDAC values for sensors in the specified widget that provides a raw count
1441:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  to the level specified by the target parameter.
1442:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1443:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function is available when the CSX Enable IDAC auto-calibration
1444:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  parameter is enabled.
1445:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1446:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetId
1447:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the ID number of the CSX widget to calibrate its raw count.
1448:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the
1449:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense Configuration header file defined as
1450:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  CapSense_<WidgetName>_WDGT_ID.
1451:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1452:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param target
1453:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the calibration target in percentages of the maximum raw count.
1454:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1455:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1456:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1457:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1458:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXCalibrateWidget(uint32 widgetId, uint16 target)
1459:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1460:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
1461:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 rawTarget;
1462:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Counter for loop execution */
1463:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 totalSns;
1464:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Counter for loop execution */
1465:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 calibrationIndex;
1466:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Currently used IDAC-bit */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 28


1468:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint8 curIdacMask = (1u << (CapSense_CSX_IDAC_BITS_USED-1u));
1469:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Next used IDAC-bit */
1470:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint8 nextIdacMask = (curIdacMask >> 1u);
1471:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1472:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* initialize ptr to sensor structures */
1473:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId].ptr2Sns
1474:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1475:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1476:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Calculate target raw count */
1477:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod  = CapSense_SsCalcCsxScanPeriod(
1478:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
1479:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         rawTarget = CapSense_csxScanPeriod;
1480:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / CapSense_PERCENTAGE_100;
1481:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1482:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1483:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if (CapSense_SENSE_METHOD_CSX_E ==
1484:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1485:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1486:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Find out total sensors/nodes in widget */
1487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         totalSns = ((uint32)CapSense_dsFlash.wdgtArray[widgetId].numCols *
1488:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (uint32)CapSense_dsFlash.wdgtArray[widgetId].numRows);
1489:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1490:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Clear raw count registers and IDAC registers of all the sensors/nodes */
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1492:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1493:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_0] = 0u;
1494:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] = curIdacMask;
1495:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1496:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_1] = 0u;
1497:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_2] = 0u;
1498:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] = curIdacMask;
1499:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] = curIdacMask;
1500:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #endif
1501:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr++;
1502:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1503:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1504:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Perform binary search for accurate IDAC value for each sensor/node */
1505:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         do
1506:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
1507:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Scan all the sensors/nodes in widget */
1508:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (void)CapSense_SetupWidget(widgetId);
1509:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (void)CapSense_Scan();
1510:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1511:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             while ((CapSense_dsRam.status & CapSense_SW_STS_BUSY) != 0u)
1512:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
1513:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
1514:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1515:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Get access to sensor data */
1516:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr = (CapSense_RAM_SNS_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId]
1517:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1518:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Check raw count and adjust IDAC, loop through all the sensors/nodes */
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1520:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
1521:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Calculate raw count target for specified node */
1522:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1523:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     rawTarget = (CapSense_SsCSXOversample() * target) / CapSense_PERCENTAGE_100;
1524:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 29


1525:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1526:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 /* Check if current raw count is above target,
1527:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *   if yes, clear the MS bit of bit
1528:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 *   if no, keep the MS bit and set next bit
1529:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 */
1530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_0] > rawTarget)
1531:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
1532:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] &= (uint8)(~curIdacMas
1533:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
1534:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] |= nextIdacMask;
1535:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1536:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1537:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_1] > rawTarget)
1538:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1539:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] &= (uint8)(~curIda
1540:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1541:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1542:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curRamSnsPtr->raw[CapSense_FREQ_CHANNEL_2] > rawTarget)
1543:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
1544:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] &= (uint8)(~curIda
1545:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
1546:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1547:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_1] |= nextIdacMask;
1548:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_2] |= nextIdacMask;
1549:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 #endif
1550:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curRamSnsPtr++;
1551:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
1552:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1553:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             /* Shift both current idac and pre Idac values to right by 1 */
1554:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             curIdacMask = nextIdacMask;
1555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             nextIdacMask = nextIdacMask >> 1u;
1556:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
1557:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         while (curIdacMask != 0u);
1558:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1559:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1560:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1561:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_CSX_IDAC_AUTOCAL_EN == CapSense_ENABLE) */
1562:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1563:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE == CapSense_CSDV2)
1564:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1565:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXStartSample
1566:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1567:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1568:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1569:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1570:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1571:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1572:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1573:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1574:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXStartSample(void)
1576:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1577:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
1578:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1579:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = (uint32)CapSense_curRamSnsPtr->idacComp[CapSense_scanFreqIndex];
1580:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = (tmpRegVal & CapSense_IDAC_MOD_VAL_MASK) | CapSense_DEFAULT_CSD_IDACA_CFG;
1581:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_IDAC_MOD_PTR, tmpRegVal);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 30


1582:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1583:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1584:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1585:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod = (uint16)CapSense_SsCSXOversample();
1586:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (uint32)CapSense_curRamSnsPtr->subConvNum);
1587:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1588:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1589:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Clear scan result holder */
1590:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount = 0u;
1591:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1592:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_START_SAMPLE_CALLBACK
1593:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_StartSampleCallback(CapSense_widgetIndex, CapSense_sensorIndex);
1594:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_START_SAMPLE_CALLBACK */
1595:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1596:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsCSXStartSampleExt();
1597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1598:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #else
1599:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1600:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1601:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXStartSample
1602:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1603:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1604:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1605:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1606:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1607:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param widgetIndex The ID of the widget to be calibrated.
1608:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1609:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1610:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1611:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1612:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static void CapSense_SsCSXStartSample(void)
1613:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1614:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint8 critSect;
1615:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
1616:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1617:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1618:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(CapSense_IDAC_PTR);
1619:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal &= ~(CapSense_IDAC_MOD_MASK);
1620:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal |= (CapSense_IDAC_MOD_MODE_VARIABLE | (uint32)CapSense_curRamSnsPtr->idacComp[CapSens
1621:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_IDAC_PTR, tmpRegVal);
1622:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1623:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1624:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Clear scan result holder */
1625:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount = 0u;
1626:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1627:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_START_SAMPLE_CALLBACK
1628:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_StartSampleCallback(CapSense_widgetIndex, CapSense_sensorIndex);
1629:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* CapSense_START_SAMPLE_CALLBACK */
1630:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1631:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1632:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1633:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod = (uint16)CapSense_SsCSXOversample();
1634:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1635:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1636:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Disable interrupts and initiate scan */
1637:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1638:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_SsCSXStartSampleExt();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 31


1639:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1640:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1641:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1642:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1643:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1644:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXConnectTx
1645:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1646:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1647:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1648:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Connects a Tx electrode to the CSX scanning hardware.
1649:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1650:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1651:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function connects a port pin (Tx electrode) to the CSD_SENSE signal.
1652:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  It is assumed that drive mode of the port pin is already set to STRONG
1653:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  in the HSIOM_PORT_SELx register.
1654:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1655:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1656:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1657:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1658:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  electrode for example).
1659:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1660:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param txPtr
1661:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1662:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  to be connected to the sensing HW block as a Tx pin.
1663:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1664:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1665:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXConnectTx(CapSense_FLASH_IO_STRUCT const *txPtr)
1666:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1667:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1668:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1669:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->pcPtr);
1670:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_GPIO_STRGDRV << txPtr->shift);
1671:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->pcPtr, regValue);
1672:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1673:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1674:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift);
1675:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1676:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1677:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1678:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1679:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXConnectRx
1680:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1681:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1682:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1683:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Connects an Rx electrode to the CSX scanning hardware.
1684:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1685:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1686:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function connects a port pin (Rx electrode) to AMUXBUS-A and sets
1687:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  drive mode of the port pin to High-Z in the GPIO_PRT_PCx register.
1688:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1689:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1690:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1691:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1692:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  electrode for example).
1693:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1694:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param rxPtr
1695:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 32


1696:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  to be connected to the sensing HW block as an Rx pin.
1697:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1698:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1699:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXConnectRx(CapSense_FLASH_IO_STRUCT const *rxPtr)
1700:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1701:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1702:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1703:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->pcPtr);
1704:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
1705:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
1706:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1707:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1708:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_HSIOM_SEL_AMUXA << rxPtr->hsiomShift);
1709:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1710:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1711:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1712:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1713:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXDisconnectTx
1714:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1715:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1716:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1717:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Disconnects a Tx electrode from the CSX scanning hardware.
1718:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1719:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1720:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function disconnects a port pin (Tx electrode) from the CSD_SENSE
1721:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  signal and configures the port pin to the strong drive mode. It is assumed
1722:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  that the data register (GPIO_PRTx_DR) of the port pin is already 0.
1723:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1724:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1725:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1726:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1727:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  electrode for example).
1728:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1729:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param txPtr
1730:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a Tx pin
1731:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1732:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1733:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1734:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXDisconnectTx(CapSense_FLASH_IO_STRUCT const *txPtr)
1735:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1736:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1737:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1738:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1739:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
1740:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1741:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1742:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1743:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1744:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXDisconnectRx
1745:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1746:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1747:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1748:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Disconnects an Rx electrode from the CSX scanning hardware.
1749:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1750:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1751:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function disconnects a port pin (Rx electrode) from AMUXBUS_A and
1752:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  configures the port pin to the strong drive mode. It is assumed that the
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 33


1753:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  data register (GPIO_PRTx_DR) of the port pin is already 0.
1754:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1755:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1756:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1757:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for
1758:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  an electrode for example).
1759:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1760:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param rxPtr
1761:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to an Rx pin
1762:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1763:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1764:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1765:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** void CapSense_CSXDisconnectRx(CapSense_FLASH_IO_STRUCT const *rxPtr)
1766:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1767:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
1768:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1769:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1770:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
1771:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1772:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1773:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->pcPtr);
1774:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
1775:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_GPIO_STRGDRV << rxPtr->shift);
1776:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
1777:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1778:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->drPtr);
1779:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
1780:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
1781:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1782:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1783:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1784:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1785:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXGetTxClkDivider
1786:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1787:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1788:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1789:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value for one-dimension widgets
1790:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  and the Column Sense Clock divider value for two-dimension widgets.
1791:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1792:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1793:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value based on the Component
1794:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  configuration. The function is applicable for one-dimension widgets and for
1795:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  two-dimension widgets.
1796:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1797:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param
1798:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  widgetId Specifies the ID of the widget.
1799:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1800:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \return The Sense Clock Divider value for one-dimension widgets
1801:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *         and the Column Sense Clock divider value for two-dimension widgets.
1802:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1803:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1804:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** uint32 CapSense_SsCSXGetTxClkDivider(uint32 widgetId)
1805:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1806:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 retVal;
1807:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1808:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Get sense divider based on configuration */
1809:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 34


1810:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
1811:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1812:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1813:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
1814:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         retVal = (uint32)(ptrWdgt->snsClk);
1816:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1817:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         retVal = (uint32)CapSense_dsRam.snsCsxClk;
1818:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
1819:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1820:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(widgetId == 0uL)
1821:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1822:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         ;
1823:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1824:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1825:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     return (retVal);
1826:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1827:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1828:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1829:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1830:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCalcCsxScanPeriod
1831:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1832:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1833:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1834:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Calculates scan period for a desired CSX widget.
1835:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1836:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1837:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This function calculates a scan period for a desired CSX widget considering
1838:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  common Tx clock option.
1839:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1840:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \param wdgtPtr
1841:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  The pointer to a register map object that contains widget information.
1842:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1843:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \return
1844:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  Returns the CSX scan period for the widget.
1845:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1846:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1847:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint16 CapSense_SsCalcCsxScanPeriod(CapSense_RAM_WD_BASE_STRUCT const *wdgtPtr)
1848:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
  73              		.loc 1 1848 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.LVL0:
1849:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 temp;
1850:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1851:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN)
1852:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(wdgtPtr->snsClk);
  79              		.loc 1 1852 0
  80 0000 4389     		ldrh	r3, [r0, #10]
  81              	.LVL1:
1853:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1854:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(CapSense_dsRam.snsCsxClk);
1855:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
1856:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1857:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 35


1858:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp  = LO16((uint32)wdgtPtr->resolution * (temp - CapSense_CSX_DEADBAND_CYCLES_NUMBER));
  82              		.loc 1 1858 0
  83 0002 0288     		ldrh	r2, [r0]
  84 0004 981E     		subs	r0, r3, #2
  85              	.LVL2:
  86 0006 5043     		muls	r0, r2
  87 0008 80B2     		uxth	r0, r0
  88              	.LVL3:
1859:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1860:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1861:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             temp = (temp / (uint32)CapSense_dsRam.modCsxClk);
1862:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1863:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1864:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = ((uint32)wdgtPtr->resolution * CapSense_NUM_HALF_CYCLES * temp);
1865:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1866:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1867:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* return the scan period */
1868:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     return ((uint16)temp);
1869:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
  89              		.loc 1 1869 0
  90              		@ sp needed
  91 000a 7047     		bx	lr
  92              		.cfi_endproc
  93              	.LFE16:
  94              		.size	CapSense_SsCalcCsxScanPeriod, .-CapSense_SsCalcCsxScanPeriod
  95              		.global	__aeabi_uidiv
  96              		.section	.text.CapSense_SsCSXStartSample,"ax",%progbits
  97              		.align	2
  98              		.code	16
  99              		.thumb_func
 100              		.type	CapSense_SsCSXStartSample, %function
 101              	CapSense_SsCSXStartSample:
 102              	.LFB10:
1576:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
 103              		.loc 1 1576 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 10B5     		push	{r4, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
1579:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = (tmpRegVal & CapSense_IDAC_MOD_VAL_MASK) | CapSense_DEFAULT_CSD_IDACA_CFG;
 111              		.loc 1 1579 0
 112 0002 344B     		ldr	r3, .L13
 113 0004 1A68     		ldr	r2, [r3]
 114 0006 344B     		ldr	r3, .L13+4
 115 0008 1B78     		ldrb	r3, [r3]
 116 000a D318     		adds	r3, r2, r3
 117 000c 5B7A     		ldrb	r3, [r3, #9]
 118              	.LVL4:
1580:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_IDAC_MOD_PTR, tmpRegVal);
 119              		.loc 1 1580 0
 120 000e 334A     		ldr	r2, .L13+8
 121 0010 1343     		orrs	r3, r2
 122              	.LVL5:
1581:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 36


 123              		.loc 1 1581 0
 124 0012 334A     		ldr	r2, .L13+12
 125 0014 1360     		str	r3, [r2]
1590:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 126              		.loc 1 1590 0
 127 0016 0022     		movs	r2, #0
 128 0018 324B     		ldr	r3, .L13+16
 129              	.LVL6:
 130 001a 5A80     		strh	r2, [r3, #2]
 131              	.LVL7:
 132              	.LBB4:
 133              	.LBB5:
1870:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1871:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1872:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1873:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1874:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXOversample
1875:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1876:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1877:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1878:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Calculates the scan period of specific node.
1879:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1880:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1881:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Calculates the scan period of specific node that is used as maximum
1882:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   raw count at raw count inversion (CapSense_csxScanPeriod variable).
1883:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   The CapSense_curFlashWdgtPtr and CapSense_curRamSnsPtr
1884:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   must be configured to proper widget/sensor before calling this function.
1885:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1886:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \return
1887:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Returns the scan period of specific node (used as maximum raw count)
1888:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1889:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1890:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static uint32 CapSense_SsCSXOversample(void)
1891:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1892:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 temp;
1893:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1894:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN)
1895:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
1896:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_curFlashWdgtPtr->ptr2WdgtRam;
1897:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(curRamWdgtBasePtr->snsClk);
1898:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1899:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = (uint32)(CapSense_dsRam.snsCsxClk);
1900:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
1901:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1902:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
1903:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp  = LO16((uint32)CapSense_curRamSnsPtr->subConvNum * (temp - CapSense_CSX_DEADBAND_CYCL
1904:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
1905:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1906:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             temp = (temp / (uint32)CapSense_dsRam.modCsxClk);
1907:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1908:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1909:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         temp = ((uint32)CapSense_curRamSnsPtr->subConvNum * CapSense_NUM_HALF_CYCLES * temp);
1910:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1911:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1912:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* return the scan period */
1913:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     return (temp);
1914:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 37


1915:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1916:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1917:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1918:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(CapSense_ENABLE == CapSense_CSDV2)
1919:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /**
1920:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \cond SECTION_C_INTERRUPT
1921:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \addtogroup group_c_interrupt
1922:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \{
1923:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** */
1924:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
1925:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_CSXScanISR
1926:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
1927:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1928:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
1929:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This is an internal ISR function to handle the CSX sensing method operation.
1930:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1931:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
1932:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *  This handler covers the following functionality:
1933:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Read the result of the measurement and store it into the corresponding register of
1934:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     the data structure.
1935:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - If the Noise Metric functionality is enabled, then check the number of bad
1936:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     conversions and repeat the scan of the current sensor of the number of bad
1937:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     conversions is greater than the Noise Metric Threshold.
1938:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Initiate the scan of the next sensor for multiple sensor scanning mode.
1939:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Update the Status register in the data structure.
1940:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   - Switch the HW block to the default state if scanning of all the sensors is
1941:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *     completed.
1942:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
1943:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
1944:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** CY_ISR(CapSense_CSXScanISR)
1945:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
1946:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
1947:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 tmpRegVal;
1948:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
1949:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
1950:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     static uint32 CapSense_resamplingCyclesCnt = CapSense_RESAMPLING_CYCLES_MAX_NUMBER;
1951:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
1952:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1953:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyIntDisable(CapSense_ISR_NUMBER);
1954:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1955:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_INTR_PTR, CapSense_DEFAULT_CSD_INTR_CFG);
1956:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1957:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount  = (uint16)(CY_GET_REG32(CapSense_RESULT_VAL1_PTR) &\
1958:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL1_VALUE_MASK);
1959:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1960:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_csxRawCount += (uint16)(CY_GET_REG32(CapSense_RESULT_VAL2_PTR) &\
1961:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL2_VALUE_MASK);
1962:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1963:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* This workaround neded to prevent overflow in the SW register map. Cypress ID #234358 */
1964:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(CapSense_csxRawCount > CapSense_csxScanPeriod)
1965:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1966:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxRawCount = CapSense_csxScanPeriod;
1967:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1968:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1969:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
1970:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(CapSense_RESULT_VAL1_PTR) >> CapSense_RESULT_VAL1_BAD_CONVS_SHIFT;
1971:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 38


1972:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if((tmpRegVal > CapSense_CSX_NOISE_METRIC_TH) && (CapSense_resamplingCyclesCnt > 0uL))
1973:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1974:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SCAN_CSD_SEQ_START_CFG);
1975:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_resamplingCyclesCnt--;
1976:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1977:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     else
1978:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1979:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_CSXPostScanApiPtr();
1980:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_resamplingCyclesCnt = CapSense_RESAMPLING_CYCLES_MAX_NUMBER;
1981:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1982:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #else
1983:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_CSXPostScanApiPtr();
1984:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
1985:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1986:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(CapSense_NOT_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1987:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
1988:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_DEFAULT_CSD_CONFIG_CFG);
1989:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_DEFAULT_CSD_CSDCMP_CFG);
1990:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR, CapSense_DEFAULT_CSD_IDACA_CFG);
1991:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
1992:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1993:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CyIntEnable(CapSense_ISR_NUMBER);
1994:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
1995:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1996:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /** \}
1997:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \endcond */
1998:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
1999:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /*******************************************************************************
2000:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * Function Name: CapSense_SsCSXStartSampleExt
2001:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** ****************************************************************************//**
2002:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
2003:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \brief
2004:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   Starts the HW sequencer to perform the CSX conversion.
2005:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   specific widget.
2006:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
2007:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** * \details
2008:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *   This function covers the following functionality:
2009:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      1. Configures the HW sequencer to perform the coarse initialization.
2010:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      2. Waiting for completion of the coarse initialization.
2011:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      3. Configures the HW sequencer to perform the normal conversion.
2012:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *      4. Starts the normal conversion
2013:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *
2014:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** *******************************************************************************/
2015:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** static CY_INLINE void CapSense_SsCSXStartSampleExt(void)
2016:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** {
2017:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 filterDelay;
2018:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 watchdogCounter;
2019:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2020:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         uint32 sampleClkFreqHz;
2021:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2022:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2023:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the coarse initialization. */
2024:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_CONFIG_PTR,           CapSense_DEFAULT_CSD_CONFIG_CFG);
 134              		.loc 1 2024 0
 135 001c 324A     		ldr	r2, .L13+20
 136 001e 334B     		ldr	r3, .L13+24
 137 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 39


2025:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_PRECHARGE_CSD_HSCMP_CFG);
 138              		.loc 1 2025 0
 139 0022 0122     		movs	r2, #1
 140 0024 324B     		ldr	r3, .L13+28
 141 0026 1A60     		str	r2, [r3]
2026:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_PRECHARGE_CSD_SW_HS_P_SEL_CFG);
 142              		.loc 1 2026 0
 143 0028 1123     		movs	r3, #17
 144 002a 324A     		ldr	r2, .L13+32
 145 002c 1360     		str	r3, [r2]
2027:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_PRECHARGE_CSD_SW_HS_N_SEL_CFG);
 146              		.loc 1 2027 0
 147 002e 8021     		movs	r1, #128
 148 0030 4904     		lsls	r1, r1, #17
 149 0032 314A     		ldr	r2, .L13+36
 150 0034 1160     		str	r1, [r2]
2028:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_PRECHARGE_CSD_SW_DSI_SEL_CFG);
 151              		.loc 1 2028 0
 152 0036 314A     		ldr	r2, .L13+40
 153 0038 1360     		str	r3, [r2]
2029:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_PRECHARGE_CSD_SW_SHIELD_SEL_CFG);
 154              		.loc 1 2029 0
 155 003a 0622     		movs	r2, #6
 156 003c 304B     		ldr	r3, .L13+44
 157 003e 1A60     		str	r2, [r3]
2030:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR,    CapSense_PRECHARGE_CSD_SW_FW_MOD_SEL_CFG);
 158              		.loc 1 2030 0
 159 0040 304A     		ldr	r2, .L13+48
 160 0042 314B     		ldr	r3, .L13+52
 161 0044 1A60     		str	r2, [r3]
2031:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_PRECHARGE_CSD_SW_FW_TANK_SEL_CFG);
 162              		.loc 1 2031 0
 163 0046 314A     		ldr	r2, .L13+56
 164 0048 314B     		ldr	r3, .L13+60
 165 004a 1A60     		str	r2, [r3]
2032:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2033:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2) &&\
2034:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        (CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) &&\
2035:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        (CapSense_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
2036:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CyDelayUs(CapSense_CSX_ANALOG_STARTUP_DELAY_US);
2037:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif
2038:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2039:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SEQ_START_PTR,        CapSense_PRECHARGE_CSD_SEQ_START_CFG);
 166              		.loc 1 2039 0
 167 004c 314A     		ldr	r2, .L13+64
 168 004e 324B     		ldr	r3, .L13+68
 169 0050 1A60     		str	r2, [r3]
 170              	.LVL8:
2040:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2041:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Wait for the HSCMP trigger and retutn the sequencer to the IDLE state. */
2042:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     watchdogCounter = CapSense_CSX_PRECHARGE_WATCHDOG_CYCLES_NUM;
 171              		.loc 1 2042 0
 172 0052 F023     		movs	r3, #240
 173 0054 5B00     		lsls	r3, r3, #1
 174 0056 00E0     		b	.L6
 175              	.LVL9:
 176              	.L8:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 40


2043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     while((0u != (CapSense_SEQ_START_START_MASK & CY_GET_REG32(CapSense_SEQ_START_PTR))) && (0u != 
2044:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
2045:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         watchdogCounter--;
 177              		.loc 1 2045 0
 178 0058 013B     		subs	r3, r3, #1
 179              	.LVL10:
 180              	.L6:
2043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     while((0u != (CapSense_SEQ_START_START_MASK & CY_GET_REG32(CapSense_SEQ_START_PTR))) && (0u != 
 181              		.loc 1 2043 0
 182 005a 2F4A     		ldr	r2, .L13+68
 183 005c 1268     		ldr	r2, [r2]
 184 005e D207     		lsls	r2, r2, #31
 185 0060 01D5     		bpl	.L7
 186 0062 002B     		cmp	r3, #0
 187 0064 F8D1     		bne	.L8
 188              	.L7:
2046:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
2047:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2048:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Reset the sequencer to the IDLE state if HSCMP not triggered till watchdog period is out. */
2049:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     if(0u != (CapSense_SEQ_START_START_MASK & CY_GET_REG32(CapSense_SEQ_START_PTR)))
 189              		.loc 1 2049 0
 190 0066 2C4B     		ldr	r3, .L13+68
 191              	.LVL11:
 192 0068 1B68     		ldr	r3, [r3]
 193 006a DB07     		lsls	r3, r3, #31
 194 006c 03D5     		bpl	.L9
2050:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
2051:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR,  CapSense_DEFAULT_CSD_SEQ_START_CFG);
 195              		.loc 1 2051 0
 196 006e C222     		movs	r2, #194
 197 0070 9200     		lsls	r2, r2, #2
 198 0072 294B     		ldr	r3, .L13+68
 199 0074 1A60     		str	r2, [r3]
 200              	.L9:
2052:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
2053:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2054:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2055:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_dsRam.modCsxClk;
 201              		.loc 1 2055 0
 202 0076 294B     		ldr	r3, .L13+72
 203 0078 D97F     		ldrb	r1, [r3, #31]
 204 007a 2948     		ldr	r0, .L13+76
 205 007c FFF7FEFF 		bl	__aeabi_uidiv
 206              	.LVL12:
2056:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_12MHZ)
 207              		.loc 1 2056 0
 208 0080 284B     		ldr	r3, .L13+80
 209 0082 9842     		cmp	r0, r3
 210 0084 04D9     		bls	.L11
2057:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
2058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             filterDelay = CapSense_CONFIG_FILTER_DELAY_12MHZ;
2059:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
2060:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else if(sampleClkFreqHz <= CapSense_MOD_CSD_CLK_24MHZ)
 211              		.loc 1 2060 0
 212 0086 264B     		ldr	r3, .L13+76
 213 0088 9842     		cmp	r0, r3
 214 008a 03D8     		bhi	.L12
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 41


2061:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
2062:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             filterDelay = CapSense_CONFIG_FILTER_DELAY_24MHZ;
 215              		.loc 1 2062 0
 216 008c 3023     		movs	r3, #48
 217 008e 02E0     		b	.L10
 218              	.L11:
2058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 219              		.loc 1 2058 0
 220 0090 2023     		movs	r3, #32
 221 0092 00E0     		b	.L10
 222              	.L12:
2063:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
2064:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         else
2065:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
2066:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             filterDelay = CapSense_CONFIG_FILTER_DELAY_48MHZ;
 223              		.loc 1 2066 0
 224 0094 4023     		movs	r3, #64
 225              	.L10:
 226              	.LVL13:
2067:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
2068:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
2069:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         filterDelay = CapSense_CONFIG_FILTER_DELAY_12MHZ;
2070:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2071:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2072:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the normal conversion. */
2073:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_PRESCAN_CSD_CONFIG_CFG | filterDelay);
 227              		.loc 1 2073 0
 228 0096 244A     		ldr	r2, .L13+84
 229 0098 1343     		orrs	r3, r2
 230              	.LVL14:
 231 009a 144A     		ldr	r2, .L13+24
 232 009c 1360     		str	r3, [r2]
2074:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_PRESCAN_CSD_CSDCMP_CFG);
 233              		.loc 1 2074 0
 234 009e 234A     		ldr	r2, .L13+88
 235 00a0 234B     		ldr	r3, .L13+92
 236 00a2 1A60     		str	r2, [r3]
2075:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_HSCMP_PTR, CapSense_DEFAULT_CSD_HSCMP_CFG);
 237              		.loc 1 2075 0
 238 00a4 0023     		movs	r3, #0
 239 00a6 1249     		ldr	r1, .L13+28
 240 00a8 0B60     		str	r3, [r1]
2076:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR, CapSense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 241              		.loc 1 2076 0
 242 00aa 1249     		ldr	r1, .L13+32
 243 00ac 0B60     		str	r3, [r1]
2077:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR, CapSense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 244              		.loc 1 2077 0
 245 00ae 1249     		ldr	r1, .L13+36
 246 00b0 0B60     		str	r3, [r1]
2078:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_DSI_SEL_PTR, CapSense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 247              		.loc 1 2078 0
 248 00b2 2320     		movs	r0, #35
 249              	.LVL15:
 250 00b4 1149     		ldr	r1, .L13+40
 251 00b6 0860     		str	r0, [r1]
2079:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR, CapSense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 42


 252              		.loc 1 2079 0
 253 00b8 1149     		ldr	r1, .L13+44
 254 00ba 0B60     		str	r3, [r1]
2080:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_MOD_SEL_PTR, CapSense_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 255              		.loc 1 2080 0
 256 00bc 1249     		ldr	r1, .L13+52
 257 00be 0B60     		str	r3, [r1]
2081:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR, CapSense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 258              		.loc 1 2081 0
 259 00c0 1349     		ldr	r1, .L13+60
 260 00c2 0B60     		str	r3, [r1]
2082:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2083:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Clear all pending interrupts of CSD block */
2084:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_INTR_PTR, CapSense_DEFAULT_CSD_INTR_CFG);
 261              		.loc 1 2084 0
 262 00c4 8321     		movs	r1, #131
 263 00c6 4900     		lsls	r1, r1, #1
 264 00c8 1A4B     		ldr	r3, .L13+96
 265 00ca 1960     		str	r1, [r3]
2085:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
2086:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Start the normal conversion. */
2087:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_SEQ_START_PTR, CapSense_SCAN_CSD_SEQ_START_CFG);
 266              		.loc 1 2087 0
 267 00cc 124B     		ldr	r3, .L13+68
 268 00ce 1A60     		str	r2, [r3]
 269              	.LBE5:
 270              	.LBE4:
1597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #else
 271              		.loc 1 1597 0
 272              		@ sp needed
 273 00d0 10BD     		pop	{r4, pc}
 274              	.L14:
 275 00d2 C046     		.align	2
 276              	.L13:
 277 00d4 00000000 		.word	CapSense_curRamSnsPtr
 278 00d8 00000000 		.word	CapSense_scanFreqIndex
 279 00dc 800E4301 		.word	21171840
 280 00e0 C0010B40 		.word	1074463168
 281 00e4 00000000 		.word	.LANCHOR0
 282 00e8 20100480 		.word	-2147217376
 283 00ec 00000B40 		.word	1074462720
 284 00f0 80010B40 		.word	1074463104
 285 00f4 80020B40 		.word	1074463360
 286 00f8 84020B40 		.word	1074463364
 287 00fc C0020B40 		.word	1074463424
 288 0100 88020B40 		.word	1074463368
 289 0104 01010100 		.word	65793
 290 0108 B0020B40 		.word	1074463408
 291 010c 10100000 		.word	4112
 292 0110 B4020B40 		.word	1074463412
 293 0114 03030000 		.word	771
 294 0118 40030B40 		.word	1074463552
 295 011c 00000000 		.word	CapSense_dsRam
 296 0120 00366E01 		.word	24000000
 297 0124 001BB700 		.word	12000000
 298 0128 00100C80 		.word	-2146693120
 299 012c 01030000 		.word	769
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 43


 300 0130 8C010B40 		.word	1074463116
 301 0134 F0000B40 		.word	1074462960
 302              		.cfi_endproc
 303              	.LFE10:
 304              		.size	CapSense_SsCSXStartSample, .-CapSense_SsCSXStartSample
 305              		.section	.text.CapSense_CSXScanISR,"ax",%progbits
 306              		.align	2
 307              		.global	CapSense_CSXScanISR
 308              		.code	16
 309              		.thumb_func
 310              		.type	CapSense_CSXScanISR, %function
 311              	CapSense_CSXScanISR:
 312              	.LFB17:
1945:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #if(0u != CapSense_CSX_NOISE_METRIC_EN)
 313              		.loc 1 1945 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
1953:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 321              		.loc 1 1953 0
 322 0002 0A20     		movs	r0, #10
 323 0004 FFF7FEFF 		bl	CyIntDisable
 324              	.LVL16:
1955:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 325              		.loc 1 1955 0
 326 0008 8322     		movs	r2, #131
 327 000a 5200     		lsls	r2, r2, #1
 328 000c 154B     		ldr	r3, .L18
 329 000e 1A60     		str	r2, [r3]
1957:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL1_VALUE_MASK);
 330              		.loc 1 1957 0
 331 0010 154B     		ldr	r3, .L18+4
 332 0012 1B68     		ldr	r3, [r3]
 333 0014 9BB2     		uxth	r3, r3
 334 0016 154A     		ldr	r2, .L18+8
 335 0018 5380     		strh	r3, [r2, #2]
1960:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                                                          CapSense_RESULT_VAL2_VALUE_MASK);
 336              		.loc 1 1960 0
 337 001a 154B     		ldr	r3, .L18+12
 338 001c 1B68     		ldr	r3, [r3]
 339 001e 9BB2     		uxth	r3, r3
 340 0020 5188     		ldrh	r1, [r2, #2]
 341 0022 CB18     		adds	r3, r1, r3
 342 0024 9BB2     		uxth	r3, r3
 343 0026 5380     		strh	r3, [r2, #2]
1964:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 344              		.loc 1 1964 0
 345 0028 5188     		ldrh	r1, [r2, #2]
 346 002a 89B2     		uxth	r1, r1
 347 002c 1388     		ldrh	r3, [r2]
 348 002e 9BB2     		uxth	r3, r3
 349 0030 9942     		cmp	r1, r3
 350 0032 02D9     		bls	.L16
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 44


1966:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 351              		.loc 1 1966 0
 352 0034 1388     		ldrh	r3, [r2]
 353 0036 9BB2     		uxth	r3, r3
 354 0038 5380     		strh	r3, [r2, #2]
 355              	.L16:
1983:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** #endif /* (0u != CapSense_CSX_NOISE_METRIC_EN) */
 356              		.loc 1 1983 0
 357 003a 0E4B     		ldr	r3, .L18+16
 358 003c 1B68     		ldr	r3, [r3]
 359 003e 9847     		blx	r3
 360              	.LVL17:
1986:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 361              		.loc 1 1986 0
 362 0040 0D4B     		ldr	r3, .L18+20
 363 0042 DB68     		ldr	r3, [r3, #12]
 364 0044 1B06     		lsls	r3, r3, #24
 365 0046 09D4     		bmi	.L17
1988:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR, CapSense_DEFAULT_CSD_CSDCMP_CFG);
 366              		.loc 1 1988 0
 367 0048 0C4A     		ldr	r2, .L18+24
 368 004a 0D4B     		ldr	r3, .L18+28
 369 004c 1A60     		str	r2, [r3]
1989:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR, CapSense_DEFAULT_CSD_IDACA_CFG);
 370              		.loc 1 1989 0
 371 004e C022     		movs	r2, #192
 372 0050 9200     		lsls	r2, r2, #2
 373 0052 0C4B     		ldr	r3, .L18+32
 374 0054 1A60     		str	r2, [r3]
1990:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 375              		.loc 1 1990 0
 376 0056 0C4A     		ldr	r2, .L18+36
 377 0058 0C4B     		ldr	r3, .L18+40
 378 005a 1A60     		str	r2, [r3]
 379              	.L17:
1993:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 380              		.loc 1 1993 0
 381 005c 0A20     		movs	r0, #10
 382 005e FFF7FEFF 		bl	CyIntEnable
 383              	.LVL18:
1994:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 384              		.loc 1 1994 0
 385              		@ sp needed
 386 0062 10BD     		pop	{r4, pc}
 387              	.L19:
 388              		.align	2
 389              	.L18:
 390 0064 F0000B40 		.word	1074462960
 391 0068 D0000B40 		.word	1074462928
 392 006c 00000000 		.word	.LANCHOR0
 393 0070 D4000B40 		.word	1074462932
 394 0074 00000000 		.word	.LANCHOR1
 395 0078 00000000 		.word	CapSense_dsRam
 396 007c 20100480 		.word	-2147217376
 397 0080 00000B40 		.word	1074462720
 398 0084 8C010B40 		.word	1074463116
 399 0088 800E4301 		.word	21171840
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 45


 400 008c C0010B40 		.word	1074463168
 401              		.cfi_endproc
 402              	.LFE17:
 403              		.size	CapSense_CSXScanISR, .-CapSense_CSXScanISR
 404              		.section	.text.CapSense_CSXInitialize,"ax",%progbits
 405              		.align	2
 406              		.global	CapSense_CSXInitialize
 407              		.code	16
 408              		.thumb_func
 409              		.type	CapSense_CSXInitialize, %function
 410              	CapSense_CSXInitialize:
 411              	.LFB1:
 149:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if(CapSense_ENABLE == CapSense_CSDV2)
 412              		.loc 1 149 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 10B5     		push	{r4, lr}
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 4, -8
 419              		.cfi_offset 14, -4
 154:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_SET_PTR,         CapSense_DEFAULT_CSD_INTR_SET_CFG);
 420              		.loc 1 154 0
 421 0002 8322     		movs	r2, #131
 422 0004 5200     		lsls	r2, r2, #1
 423 0006 4A4B     		ldr	r3, .L21
 424 0008 1A60     		str	r2, [r3]
 155:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_INTR_MASK_PTR,        CapSense_DEFAULT_CSD_INTR_MASK_CFG);
 425              		.loc 1 155 0
 426 000a 0024     		movs	r4, #0
 427 000c 494B     		ldr	r3, .L21+4
 428 000e 1C60     		str	r4, [r3]
 156:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_HSCMP_PTR,            CapSense_DEFAULT_CSD_HSCMP_CFG);
 429              		.loc 1 156 0
 430 0010 053A     		subs	r2, r2, #5
 431 0012 FF3A     		subs	r2, r2, #255
 432 0014 484B     		ldr	r3, .L21+8
 433 0016 1A60     		str	r2, [r3]
 157:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_AMBUF_PTR,            CapSense_DEFAULT_CSD_AMBUF_CFG);
 434              		.loc 1 157 0
 435 0018 484B     		ldr	r3, .L21+12
 436 001a 1C60     		str	r4, [r3]
 158:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_REFGEN_PTR,           CapSense_DEFAULT_CSD_REFGEN_CFG);
 437              		.loc 1 158 0
 438 001c 484B     		ldr	r3, .L21+16
 439 001e 1C60     		str	r4, [r3]
 159:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CSDCMP_PTR,           CapSense_DEFAULT_CSD_CSDCMP_CFG);
 440              		.loc 1 159 0
 441 0020 484A     		ldr	r2, .L21+20
 442 0022 494B     		ldr	r3, .L21+24
 443 0024 1A60     		str	r2, [r3]
 160:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_IDAC_MOD_PTR,         CapSense_DEFAULT_CSD_IDACA_CFG);
 444              		.loc 1 160 0
 445 0026 C022     		movs	r2, #192
 446 0028 9200     		lsls	r2, r2, #2
 447 002a 484B     		ldr	r3, .L21+28
 448 002c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 46


 161:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 449              		.loc 1 161 0
 450 002e 484A     		ldr	r2, .L21+32
 451 0030 484B     		ldr	r3, .L21+36
 452 0032 1A60     		str	r2, [r3]
 164:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (0u != CapSense_ADC_EN) || (0u != CapSense_IDACB_USED) */
 453              		.loc 1 164 0
 454 0034 484B     		ldr	r3, .L21+40
 455 0036 1C60     		str	r4, [r3]
 167:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR,     CapSense_DEFAULT_CSD_SENSE_PERIOD_CFG);
 456              		.loc 1 167 0
 457 0038 484A     		ldr	r2, .L21+44
 458 003a 494B     		ldr	r3, .L21+48
 459 003c 1A60     		str	r2, [r3]
 168:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_DUTY_PTR,       CapSense_DEFAULT_CSD_SENSE_DUTY_CFG);
 460              		.loc 1 168 0
 461 003e 5022     		movs	r2, #80
 462 0040 484B     		ldr	r3, .L21+52
 463 0042 1A60     		str	r2, [r3]
 169:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_P_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 464              		.loc 1 169 0
 465 0044 484B     		ldr	r3, .L21+56
 466 0046 1C60     		str	r4, [r3]
 170:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_HS_N_SEL_PTR,      CapSense_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 467              		.loc 1 170 0
 468 0048 484B     		ldr	r3, .L21+60
 469 004a 1C60     		str	r4, [r3]
 171:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_SHIELD_SEL_PTR,    CapSense_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 470              		.loc 1 171 0
 471 004c 484B     		ldr	r3, .L21+64
 472 004e 1C60     		str	r4, [r3]
 172:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_AMUXBUF_SEL_PTR,   CapSense_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 473              		.loc 1 172 0
 474 0050 484B     		ldr	r3, .L21+68
 475 0052 1C60     		str	r4, [r3]
 173:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 476              		.loc 1 173 0
 477 0054 484B     		ldr	r3, .L21+72
 478 0056 1C60     		str	r4, [r3]
 175:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_BYP_SEL_PTR);
 479              		.loc 1 175 0
 480 0058 FFF7FEFF 		bl	CyEnterCriticalSection
 481              	.LVL19:
 176:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~(CapSense_SW_BYP_SEL_SW_BYA_MASK);
 482              		.loc 1 176 0
 483 005c 474A     		ldr	r2, .L21+76
 484 005e 1168     		ldr	r1, [r2]
 485              	.LVL20:
 177:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_BYP_SEL_CFG;
 486              		.loc 1 177 0
 487 0060 474B     		ldr	r3, .L21+80
 488 0062 0B40     		ands	r3, r1
 489              	.LVL21:
 178:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_BYP_SEL_PTR,       tmpRegVal);
 490              		.loc 1 178 0
 491 0064 8021     		movs	r1, #128
 492 0066 4901     		lsls	r1, r1, #5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 47


 493 0068 0B43     		orrs	r3, r1
 494              	.LVL22:
 179:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 495              		.loc 1 179 0
 496 006a 1360     		str	r3, [r2]
 180:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 497              		.loc 1 180 0
 498 006c FFF7FEFF 		bl	CyExitCriticalSection
 499              	.LVL23:
 182:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_CMP_N_SEL_PTR,     CapSense_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 500              		.loc 1 182 0
 501 0070 3222     		movs	r2, #50
 502 0072 444B     		ldr	r3, .L21+84
 503 0074 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 504              		.loc 1 183 0
 505 0076 8022     		movs	r2, #128
 506 0078 5204     		lsls	r2, r2, #17
 507 007a 434B     		ldr	r3, .L21+88
 508 007c 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 509              		.loc 1 185 0
 510 007e FFF7FEFF 		bl	CyEnterCriticalSection
 511              	.LVL24:
 186:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_SW_REFGEN_SEL_SW_MASK;
 512              		.loc 1 186 0
 513 0082 424A     		ldr	r2, .L21+92
 514 0084 1168     		ldr	r1, [r2]
 515              	.LVL25:
 187:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= CapSense_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 516              		.loc 1 187 0
 517 0086 424B     		ldr	r3, .L21+96
 518 0088 0B40     		ands	r3, r1
 519              	.LVL26:
 188:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR,    tmpRegVal);
 520              		.loc 1 188 0
 521 008a 8021     		movs	r1, #128
 522 008c 4905     		lsls	r1, r1, #21
 523 008e 0B43     		orrs	r3, r1
 524              	.LVL27:
 189:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 525              		.loc 1 189 0
 526 0090 1360     		str	r3, [r2]
 190:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 527              		.loc 1 190 0
 528 0092 FFF7FEFF 		bl	CyExitCriticalSection
 529              	.LVL28:
 192:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_FW_TANK_SEL_PTR,   CapSense_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 530              		.loc 1 192 0
 531 0096 3F4B     		ldr	r3, .L21+100
 532 0098 1C60     		str	r4, [r3]
 193:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SW_DSI_SEL_PTR,       CapSense_DEFAULT_CSD_SW_DSI_SEL_CFG);
 533              		.loc 1 193 0
 534 009a 3F4B     		ldr	r3, .L21+104
 535 009c 1C60     		str	r4, [r3]
 194:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_TIME_PTR,         CapSense_DEFAULT_CSD_SEQ_TIME_CFG);
 536              		.loc 1 194 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 48


 537 009e 2322     		movs	r2, #35
 538 00a0 3E4B     		ldr	r3, .L21+108
 539 00a2 1A60     		str	r2, [r3]
 195:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_INIT_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 540              		.loc 1 195 0
 541 00a4 223A     		subs	r2, r2, #34
 542 00a6 3E4B     		ldr	r3, .L21+112
 543 00a8 1A60     		str	r2, [r3]
 196:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR,     CapSense_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 544              		.loc 1 196 0
 545 00aa 0332     		adds	r2, r2, #3
 546 00ac 3D4B     		ldr	r3, .L21+116
 547 00ae 1A60     		str	r2, [r3]
 197:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_ADC_CTL_PTR,          CapSense_DEFAULT_CSD_ADC_CTL_CFG);
 548              		.loc 1 197 0
 549 00b0 3D4B     		ldr	r3, .L21+120
 550 00b2 1C60     		str	r4, [r3]
 198:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SEQ_START_PTR,        CapSense_DEFAULT_CSD_SEQ_START_CFG);
 551              		.loc 1 198 0
 552 00b4 3D4B     		ldr	r3, .L21+124
 553 00b6 1C60     		str	r4, [r3]
 199:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CONFIG_PTR,           CapSense_DEFAULT_CSD_CONFIG_CFG);
 554              		.loc 1 199 0
 555 00b8 C222     		movs	r2, #194
 556 00ba 9200     		lsls	r2, r2, #2
 557 00bc 3C4B     		ldr	r3, .L21+128
 558 00be 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 559              		.loc 1 200 0
 560 00c0 3C4A     		ldr	r2, .L21+132
 561 00c2 3D4B     		ldr	r3, .L21+136
 562 00c4 1A60     		str	r2, [r3]
 202:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 563              		.loc 1 202 0
 564 00c6 FFF7FEFF 		bl	CapSense_BistDischargeExtCapacitors
 565              	.LVL29:
 204:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_PC_PTR);
 566              		.loc 1 204 0
 567 00ca FFF7FEFF 		bl	CyEnterCriticalSection
 568              	.LVL30:
 205:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintA_SHIFT * CapSense_GPIO_PC_BIT_SIZE)
 569              		.loc 1 205 0
 570 00ce 3B4C     		ldr	r4, .L21+140
 571 00d0 2268     		ldr	r2, [r4]
 572              	.LVL31:
 206:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_PC_PTR, tmpRegVal);
 573              		.loc 1 206 0
 574 00d2 3B4B     		ldr	r3, .L21+144
 575 00d4 1340     		ands	r3, r2
 576              	.LVL32:
 207:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 577              		.loc 1 207 0
 578 00d6 2360     		str	r3, [r4]
 208:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 579              		.loc 1 208 0
 580 00d8 FFF7FEFF 		bl	CyExitCriticalSection
 581              	.LVL33:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 49


 210:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_PC_PTR);
 582              		.loc 1 210 0
 583 00dc FFF7FEFF 		bl	CyEnterCriticalSection
 584              	.LVL34:
 211:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_GPIO_PC_MASK << (CapSense_CintB__SHIFT * CapSense_GPIO_PC_BIT_SIZE
 585              		.loc 1 211 0
 586 00e0 2268     		ldr	r2, [r4]
 587              	.LVL35:
 212:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_PC_PTR, tmpRegVal);
 588              		.loc 1 212 0
 589 00e2 384B     		ldr	r3, .L21+148
 590 00e4 1340     		ands	r3, r2
 591              	.LVL36:
 213:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 592              		.loc 1 213 0
 593 00e6 2360     		str	r3, [r4]
 214:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 594              		.loc 1 214 0
 595 00e8 FFF7FEFF 		bl	CyExitCriticalSection
 596              	.LVL37:
 217:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 597              		.loc 1 217 0
 598 00ec FFF7FEFF 		bl	CyEnterCriticalSection
 599              	.LVL38:
 218:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintA_HSIOM_MASK;
 600              		.loc 1 218 0
 601 00f0 354C     		ldr	r4, .L21+152
 602 00f2 2268     		ldr	r2, [r4]
 603              	.LVL39:
 219:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintA_HSIOM_SHIFT);
 604              		.loc 1 219 0
 605 00f4 354B     		ldr	r3, .L21+156
 606 00f6 1340     		ands	r3, r2
 607              	.LVL40:
 220:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, tmpRegVal);
 608              		.loc 1 220 0
 609 00f8 C022     		movs	r2, #192
 610 00fa D200     		lsls	r2, r2, #3
 611 00fc 1343     		orrs	r3, r2
 612              	.LVL41:
 221:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 613              		.loc 1 221 0
 614 00fe 2360     		str	r3, [r4]
 222:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 615              		.loc 1 222 0
 616 0100 FFF7FEFF 		bl	CyExitCriticalSection
 617              	.LVL42:
 225:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 618              		.loc 1 225 0
 619 0104 FFF7FEFF 		bl	CyEnterCriticalSection
 620              	.LVL43:
 226:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_CintB_HSIOM_MASK;
 621              		.loc 1 226 0
 622 0108 2268     		ldr	r2, [r4]
 623              	.LVL44:
 227:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_HSIOM_SEL_AMUXA << CapSense_CintB_HSIOM_SHIFT);
 624              		.loc 1 227 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 50


 625 010a 314B     		ldr	r3, .L21+160
 626 010c 1340     		ands	r3, r2
 627              	.LVL45:
 228:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, tmpRegVal);
 628              		.loc 1 228 0
 629 010e C022     		movs	r2, #192
 630 0110 D201     		lsls	r2, r2, #7
 631 0112 1343     		orrs	r3, r2
 632              	.LVL46:
 229:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 633              		.loc 1 229 0
 634 0114 2360     		str	r3, [r4]
 230:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 635              		.loc 1 230 0
 636 0116 FFF7FEFF 		bl	CyExitCriticalSection
 637              	.LVL47:
 232:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 638              		.loc 1 232 0
 639 011a 2E4B     		ldr	r3, .L21+164
 640 011c D87F     		ldrb	r0, [r3, #31]
 641 011e FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 642              	.LVL48:
 239:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 643              		.loc 1 239 0
 644 0122 FFF7FEFF 		bl	CapSense_SsSetIOsInDefaultState
 645              	.LVL49:
 298:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 646              		.loc 1 298 0
 647 0126 2C48     		ldr	r0, .L21+168
 648 0128 FFF7FEFF 		bl	CapSense_SsIsrInitialize
 649              	.LVL50:
 299:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 650              		.loc 1 299 0
 651              		@ sp needed
 652 012c 10BD     		pop	{r4, pc}
 653              	.L22:
 654 012e C046     		.align	2
 655              	.L21:
 656 0130 F0000B40 		.word	1074462960
 657 0134 F4000B40 		.word	1074462964
 658 0138 F8000B40 		.word	1074462968
 659 013c 80010B40 		.word	1074463104
 660 0140 84010B40 		.word	1074463108
 661 0144 411F0000 		.word	8001
 662 0148 88010B40 		.word	1074463112
 663 014c 8C010B40 		.word	1074463116
 664 0150 800E4301 		.word	21171840
 665 0154 C0010B40 		.word	1074463168
 666 0158 C4010B40 		.word	1074463172
 667 015c AA000500 		.word	327850
 668 0160 F0010B40 		.word	1074463216
 669 0164 00020B40 		.word	1074463232
 670 0168 04020B40 		.word	1074463236
 671 016c 80020B40 		.word	1074463360
 672 0170 84020B40 		.word	1074463364
 673 0174 88020B40 		.word	1074463368
 674 0178 90020B40 		.word	1074463376
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 51


 675 017c 94020B40 		.word	1074463380
 676 0180 FFEFFFFF 		.word	-4097
 677 0184 A0020B40 		.word	1074463392
 678 0188 A4020B40 		.word	1074463396
 679 018c A8020B40 		.word	1074463400
 680 0190 EEFFFEEE 		.word	-285278226
 681 0194 B0020B40 		.word	1074463408
 682 0198 B4020B40 		.word	1074463412
 683 019c C0020B40 		.word	1074463424
 684 01a0 00030B40 		.word	1074463488
 685 01a4 10030B40 		.word	1074463504
 686 01a8 14030B40 		.word	1074463508
 687 01ac 20030B40 		.word	1074463520
 688 01b0 40030B40 		.word	1074463552
 689 01b4 20100480 		.word	-2147217376
 690 01b8 00000B40 		.word	1074462720
 691 01bc 08040440 		.word	1074005000
 692 01c0 3FFEFFFF 		.word	-449
 693 01c4 FFF1FFFF 		.word	-3585
 694 01c8 00040240 		.word	1073873920
 695 01cc FFF0FFFF 		.word	-3841
 696 01d0 FF0FFFFF 		.word	-61441
 697 01d4 00000000 		.word	CapSense_dsRam
 698 01d8 00000000 		.word	CapSense_CSXScanISR
 699              		.cfi_endproc
 700              	.LFE1:
 701              		.size	CapSense_CSXInitialize, .-CapSense_CSXInitialize
 702              		.section	.text.CapSense_CSXScanExt,"ax",%progbits
 703              		.align	2
 704              		.global	CapSense_CSXScanExt
 705              		.code	16
 706              		.thumb_func
 707              		.type	CapSense_CSXScanExt, %function
 708              	CapSense_CSXScanExt:
 709              	.LFB6:
 871:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 710              		.loc 1 871 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714 0000 10B5     		push	{r4, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 4, -8
 717              		.cfi_offset 14, -4
 892:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 718              		.loc 1 892 0
 719 0002 054A     		ldr	r2, .L24
 720 0004 D168     		ldr	r1, [r2, #12]
 721 0006 8023     		movs	r3, #128
 722 0008 0B43     		orrs	r3, r1
 723 000a D360     		str	r3, [r2, #12]
 897:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 724              		.loc 1 897 0
 725 000c 1720     		movs	r0, #23
 726 000e FFF7FEFF 		bl	CyDelayUs
 727              	.LVL51:
 899:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 52


 728              		.loc 1 899 0
 729 0012 FFF7FEFF 		bl	CapSense_SsCSXStartSample
 730              	.LVL52:
 901:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 731              		.loc 1 901 0
 732              		@ sp needed
 733 0016 10BD     		pop	{r4, pc}
 734              	.L25:
 735              		.align	2
 736              	.L24:
 737 0018 00000000 		.word	CapSense_dsRam
 738              		.cfi_endproc
 739              	.LFE6:
 740              		.size	CapSense_CSXScanExt, .-CapSense_CSXScanExt
 741              		.section	.text.CapSense_CSXCalibrateWidget,"ax",%progbits
 742              		.align	2
 743              		.global	CapSense_CSXCalibrateWidget
 744              		.code	16
 745              		.thumb_func
 746              		.type	CapSense_CSXCalibrateWidget, %function
 747              	CapSense_CSXCalibrateWidget:
 748              	.LFB9:
1459:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
 749              		.loc 1 1459 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 8
 752              		@ frame_needed = 0, uses_anonymous_args = 0
 753              	.LVL53:
 754 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 755              		.cfi_def_cfa_offset 20
 756              		.cfi_offset 4, -20
 757              		.cfi_offset 5, -16
 758              		.cfi_offset 6, -12
 759              		.cfi_offset 7, -8
 760              		.cfi_offset 14, -4
 761 0002 4F46     		mov	r7, r9
 762 0004 80B4     		push	{r7}
 763              		.cfi_def_cfa_offset 24
 764              		.cfi_offset 9, -24
 765 0006 82B0     		sub	sp, sp, #8
 766              		.cfi_def_cfa_offset 32
 767 0008 0190     		str	r0, [sp, #4]
 768 000a 0E00     		movs	r6, r1
 769              	.LVL54:
1473:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 770              		.loc 1 1473 0
 771 000c 8300     		lsls	r3, r0, #2
 772 000e 8446     		mov	ip, r0
 773 0010 6344     		add	r3, r3, ip
 774 0012 DA00     		lsls	r2, r3, #3
 775 0014 2B4C     		ldr	r4, .L36
 776 0016 A418     		adds	r4, r4, r2
 777 0018 A368     		ldr	r3, [r4, #8]
 778 001a 9946     		mov	r9, r3
 779 001c 2A4B     		ldr	r3, .L36+4
 780 001e 4A46     		mov	r2, r9
 781 0020 1A60     		str	r2, [r3]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 53


1477:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
 782              		.loc 1 1477 0
 783 0022 6068     		ldr	r0, [r4, #4]
 784              	.LVL55:
 785 0024 FFF7FEFF 		bl	CapSense_SsCalcCsxScanPeriod
 786              	.LVL56:
 787 0028 284B     		ldr	r3, .L36+8
 788 002a 1880     		strh	r0, [r3]
1479:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / CapSense_PERCENTAGE_100;
 789              		.loc 1 1479 0
 790 002c 1888     		ldrh	r0, [r3]
 791              	.LVL57:
1480:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #endif /* (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 792              		.loc 1 1480 0
 793 002e 7043     		muls	r0, r6
 794              	.LVL58:
 795 0030 6421     		movs	r1, #100
 796 0032 FFF7FEFF 		bl	__aeabi_uidiv
 797              	.LVL59:
 798 0036 0700     		movs	r7, r0
 799              	.LVL60:
1484:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 800              		.loc 1 1484 0
 801 0038 E37E     		ldrb	r3, [r4, #27]
1483:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****        CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 802              		.loc 1 1483 0
 803 003a 022B     		cmp	r3, #2
 804 003c 3ED1     		bne	.L26
1487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (uint32)CapSense_dsFlash.wdgtArray[widgetId].numRows);
 805              		.loc 1 1487 0
 806 003e 019B     		ldr	r3, [sp, #4]
 807 0040 9A00     		lsls	r2, r3, #2
 808 0042 9C46     		mov	ip, r3
 809 0044 6244     		add	r2, r2, ip
 810 0046 D300     		lsls	r3, r2, #3
 811 0048 1E4A     		ldr	r2, .L36
 812 004a D318     		adds	r3, r2, r3
 813 004c 1A7F     		ldrb	r2, [r3, #28]
1488:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 814              		.loc 1 1488 0
 815 004e 5E7F     		ldrb	r6, [r3, #29]
1487:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     (uint32)CapSense_dsFlash.wdgtArray[widgetId].numRows);
 816              		.loc 1 1487 0
 817 0050 5643     		muls	r6, r2
 818              	.LVL61:
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 819              		.loc 1 1491 0
 820 0052 0021     		movs	r1, #0
 821 0054 09E0     		b	.L28
 822              	.LVL62:
 823              	.L29:
1493:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRamSnsPtr->idacComp[CapSense_FREQ_CHANNEL_0] = curIdacMask;
 824              		.loc 1 1493 0 discriminator 3
 825 0056 1C4A     		ldr	r2, .L36+4
 826 0058 0023     		movs	r3, #0
 827 005a 1068     		ldr	r0, [r2]
 828 005c 0380     		strh	r3, [r0]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 54


1494:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 829              		.loc 1 1494 0 discriminator 3
 830 005e 1368     		ldr	r3, [r2]
 831 0060 4020     		movs	r0, #64
 832 0062 5872     		strb	r0, [r3, #9]
1501:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 833              		.loc 1 1501 0 discriminator 3
 834 0064 0A33     		adds	r3, r3, #10
 835 0066 1360     		str	r3, [r2]
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 836              		.loc 1 1491 0 discriminator 3
 837 0068 0131     		adds	r1, r1, #1
 838              	.LVL63:
 839              	.L28:
1491:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         {
 840              		.loc 1 1491 0 is_stmt 0 discriminator 1
 841 006a B142     		cmp	r1, r6
 842 006c F3D3     		bcc	.L29
 843 006e 2024     		movs	r4, #32
 844 0070 4025     		movs	r5, #64
 845 0072 00E0     		b	.L34
 846              	.LVL64:
 847              	.L35:
1555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 848              		.loc 1 1555 0 is_stmt 1
 849 0074 1C00     		movs	r4, r3
 850              	.LVL65:
 851              	.L34:
1508:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             (void)CapSense_Scan();
 852              		.loc 1 1508 0
 853 0076 0198     		ldr	r0, [sp, #4]
 854 0078 FFF7FEFF 		bl	CapSense_SetupWidget
 855              	.LVL66:
1509:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 856              		.loc 1 1509 0
 857 007c FFF7FEFF 		bl	CapSense_Scan
 858              	.LVL67:
 859              	.L30:
1511:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 860              		.loc 1 1511 0 discriminator 1
 861 0080 134B     		ldr	r3, .L36+12
 862 0082 DB68     		ldr	r3, [r3, #12]
 863 0084 1B06     		lsls	r3, r3, #24
 864 0086 FBD4     		bmi	.L30
1516:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 865              		.loc 1 1516 0
 866 0088 0F4B     		ldr	r3, .L36+4
 867 008a 4A46     		mov	r2, r9
 868 008c 1A60     		str	r2, [r3]
 869              	.LVL68:
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 870              		.loc 1 1519 0
 871 008e 0021     		movs	r1, #0
 872 0090 0EE0     		b	.L31
 873              	.LVL69:
 874              	.L33:
1530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 55


 875              		.loc 1 1530 0
 876 0092 0D4B     		ldr	r3, .L36+4
 877 0094 1B68     		ldr	r3, [r3]
 878 0096 1A88     		ldrh	r2, [r3]
 879 0098 9742     		cmp	r7, r2
 880 009a 02D2     		bcs	.L32
1532:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 881              		.loc 1 1532 0
 882 009c 5A7A     		ldrb	r2, [r3, #9]
 883 009e AA43     		bics	r2, r5
 884 00a0 5A72     		strb	r2, [r3, #9]
 885              	.L32:
1534:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 886              		.loc 1 1534 0 discriminator 2
 887 00a2 5A7A     		ldrb	r2, [r3, #9]
 888 00a4 2243     		orrs	r2, r4
 889 00a6 5A72     		strb	r2, [r3, #9]
1550:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 890              		.loc 1 1550 0 discriminator 2
 891 00a8 0A33     		adds	r3, r3, #10
 892 00aa 074A     		ldr	r2, .L36+4
 893 00ac 1360     		str	r3, [r2]
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 894              		.loc 1 1519 0 discriminator 2
 895 00ae 0131     		adds	r1, r1, #1
 896              	.LVL70:
 897              	.L31:
1519:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             {
 898              		.loc 1 1519 0 is_stmt 0 discriminator 1
 899 00b0 B142     		cmp	r1, r6
 900 00b2 EED3     		bcc	.L33
 901              	.LVL71:
1555:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 902              		.loc 1 1555 0 is_stmt 1
 903 00b4 6308     		lsrs	r3, r4, #1
 904 00b6 DBB2     		uxtb	r3, r3
 905              	.LVL72:
1554:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             nextIdacMask = nextIdacMask >> 1u;
 906              		.loc 1 1554 0
 907 00b8 251E     		subs	r5, r4, #0
1557:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 908              		.loc 1 1557 0
 909 00ba DBD1     		bne	.L35
 910              	.LVL73:
 911              	.L26:
1559:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 912              		.loc 1 1559 0
 913 00bc 02B0     		add	sp, sp, #8
 914              		@ sp needed
 915              	.LVL74:
 916 00be 04BC     		pop	{r2}
 917 00c0 9146     		mov	r9, r2
 918 00c2 F0BD     		pop	{r4, r5, r6, r7, pc}
 919              	.L37:
 920              		.align	2
 921              	.L36:
 922 00c4 00000000 		.word	CapSense_dsFlash
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 56


 923 00c8 00000000 		.word	CapSense_curRamSnsPtr
 924 00cc 00000000 		.word	.LANCHOR0
 925 00d0 00000000 		.word	CapSense_dsRam
 926              		.cfi_endproc
 927              	.LFE9:
 928              		.size	CapSense_CSXCalibrateWidget, .-CapSense_CSXCalibrateWidget
 929              		.section	.text.CapSense_CSXConnectTx,"ax",%progbits
 930              		.align	2
 931              		.global	CapSense_CSXConnectTx
 932              		.code	16
 933              		.thumb_func
 934              		.type	CapSense_CSXConnectTx, %function
 935              	CapSense_CSXConnectTx:
 936              	.LFB11:
1666:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 937              		.loc 1 1666 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              	.LVL75:
 942 0000 10B5     		push	{r4, lr}
 943              		.cfi_def_cfa_offset 8
 944              		.cfi_offset 4, -8
 945              		.cfi_offset 14, -4
1669:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_GPIO_STRGDRV << txPtr->shift);
 946              		.loc 1 1669 0
 947 0002 4268     		ldr	r2, [r0, #4]
 948 0004 1168     		ldr	r1, [r2]
 949              	.LVL76:
1670:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->pcPtr, regValue);
 950              		.loc 1 1670 0
 951 0006 847E     		ldrb	r4, [r0, #26]
 952 0008 0623     		movs	r3, #6
 953 000a A340     		lsls	r3, r3, r4
 954 000c 0B43     		orrs	r3, r1
 955              	.LVL77:
1671:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 956              		.loc 1 1671 0
 957 000e 1360     		str	r3, [r2]
1673:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |= (CapSense_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift);
 958              		.loc 1 1673 0
 959 0010 0268     		ldr	r2, [r0]
 960 0012 1168     		ldr	r1, [r2]
 961              	.LVL78:
1674:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 962              		.loc 1 1674 0
 963 0014 007E     		ldrb	r0, [r0, #24]
 964              	.LVL79:
 965 0016 0423     		movs	r3, #4
 966 0018 8340     		lsls	r3, r3, r0
 967 001a 0B43     		orrs	r3, r1
 968              	.LVL80:
1675:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 969              		.loc 1 1675 0
 970 001c 1360     		str	r3, [r2]
1676:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 971              		.loc 1 1676 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 57


 972              		@ sp needed
 973 001e 10BD     		pop	{r4, pc}
 974              		.cfi_endproc
 975              	.LFE11:
 976              		.size	CapSense_CSXConnectTx, .-CapSense_CSXConnectTx
 977              		.section	.text.CapSense_CSXConnectRx,"ax",%progbits
 978              		.align	2
 979              		.global	CapSense_CSXConnectRx
 980              		.code	16
 981              		.thumb_func
 982              		.type	CapSense_CSXConnectRx, %function
 983              	CapSense_CSXConnectRx:
 984              	.LFB12:
1700:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 985              		.loc 1 1700 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              	.LVL81:
 990 0000 10B5     		push	{r4, lr}
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 4, -8
 993              		.cfi_offset 14, -4
1703:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
 994              		.loc 1 1703 0
 995 0002 4168     		ldr	r1, [r0, #4]
 996 0004 0B68     		ldr	r3, [r1]
 997              	.LVL82:
1704:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
 998              		.loc 1 1704 0
 999 0006 847E     		ldrb	r4, [r0, #26]
 1000 0008 0722     		movs	r2, #7
 1001 000a A240     		lsls	r2, r2, r4
 1002 000c 9343     		bics	r3, r2
 1003              	.LVL83:
1705:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1004              		.loc 1 1705 0
 1005 000e 0B60     		str	r3, [r1]
1707:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_HSIOM_SEL_AMUXA << rxPtr->hsiomShift);
 1006              		.loc 1 1707 0
 1007 0010 0268     		ldr	r2, [r0]
 1008 0012 1168     		ldr	r1, [r2]
 1009              	.LVL84:
1708:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1010              		.loc 1 1708 0
 1011 0014 007E     		ldrb	r0, [r0, #24]
 1012              	.LVL85:
 1013 0016 0623     		movs	r3, #6
 1014 0018 8340     		lsls	r3, r3, r0
 1015 001a 0B43     		orrs	r3, r1
 1016              	.LVL86:
1709:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 1017              		.loc 1 1709 0
 1018 001c 1360     		str	r3, [r2]
1710:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1019              		.loc 1 1710 0
 1020              		@ sp needed
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 58


 1021 001e 10BD     		pop	{r4, pc}
 1022              		.cfi_endproc
 1023              	.LFE12:
 1024              		.size	CapSense_CSXConnectRx, .-CapSense_CSXConnectRx
 1025              		.section	.text.CapSense_CSXScan,"ax",%progbits
 1026              		.align	2
 1027              		.global	CapSense_CSXScan
 1028              		.code	16
 1029              		.thumb_func
 1030              		.type	CapSense_CSXScan, %function
 1031              	CapSense_CSXScan:
 1032              	.LFB5:
 646:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 1033              		.loc 1 646 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037 0000 10B5     		push	{r4, lr}
 1038              		.cfi_def_cfa_offset 8
 1039              		.cfi_offset 4, -8
 1040              		.cfi_offset 14, -4
 655:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1041              		.loc 1 655 0
 1042 0002 0022     		movs	r2, #0
 1043 0004 124B     		ldr	r3, .L41
 1044 0006 1A70     		strb	r2, [r3]
 658:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1045              		.loc 1 658 0
 1046 0008 124B     		ldr	r3, .L41+4
 1047 000a 1B68     		ldr	r3, [r3]
 1048 000c 124A     		ldr	r2, .L41+8
 1049 000e 9968     		ldr	r1, [r3, #8]
 1050 0010 1160     		str	r1, [r2]
 746:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_curWdgtTotalRx  = CapSense_curFlashWdgtPtr->numCols;
 1051              		.loc 1 746 0
 1052 0012 5A7F     		ldrb	r2, [r3, #29]
 1053 0014 114C     		ldr	r4, .L41+12
 1054 0016 A280     		strh	r2, [r4, #4]
 747:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1055              		.loc 1 747 0
 1056 0018 1A7F     		ldrb	r2, [r3, #28]
 1057 001a E280     		strh	r2, [r4, #6]
 797:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_curTxIOPtr = CapSense_curRxIOPtr;
 1058              		.loc 1 797 0
 1059 001c 1968     		ldr	r1, [r3]
 1060 001e A160     		str	r1, [r4, #8]
 799:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1061              		.loc 1 799 0
 1062 0020 D300     		lsls	r3, r2, #3
 1063 0022 981A     		subs	r0, r3, r2
 1064 0024 8000     		lsls	r0, r0, #2
 1065 0026 0818     		adds	r0, r1, r0
 1066 0028 E060     		str	r0, [r4, #12]
 802:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 1067              		.loc 1 802 0
 1068 002a FFF7FEFF 		bl	CapSense_CSXConnectTx
 1069              	.LVL87:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 59


 803:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1070              		.loc 1 803 0
 1071 002e A068     		ldr	r0, [r4, #8]
 1072 0030 FFF7FEFF 		bl	CapSense_CSXConnectRx
 1073              	.LVL88:
 806:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             }
 1074              		.loc 1 806 0
 1075 0034 0A4A     		ldr	r2, .L41+16
 1076 0036 0B4B     		ldr	r3, .L41+20
 1077 0038 1A60     		str	r2, [r3]
 815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1078              		.loc 1 815 0
 1079 003a 0B4A     		ldr	r2, .L41+24
 1080 003c D168     		ldr	r1, [r2, #12]
 1081 003e 8023     		movs	r3, #128
 1082 0040 0B43     		orrs	r3, r1
 1083 0042 D360     		str	r3, [r2, #12]
 820:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 1084              		.loc 1 820 0
 1085 0044 1720     		movs	r0, #23
 1086 0046 FFF7FEFF 		bl	CyDelayUs
 1087              	.LVL89:
 822:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1088              		.loc 1 822 0
 1089 004a FFF7FEFF 		bl	CapSense_SsCSXStartSample
 1090              	.LVL90:
 825:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1091              		.loc 1 825 0
 1092              		@ sp needed
 1093 004e 10BD     		pop	{r4, pc}
 1094              	.L42:
 1095              		.align	2
 1096              	.L41:
 1097 0050 00000000 		.word	CapSense_sensorIndex
 1098 0054 00000000 		.word	CapSense_curFlashWdgtPtr
 1099 0058 00000000 		.word	CapSense_curRamSnsPtr
 1100 005c 00000000 		.word	.LANCHOR0
 1101 0060 00000000 		.word	CapSense_SsCSXPostMultiScan
 1102 0064 00000000 		.word	.LANCHOR1
 1103 0068 00000000 		.word	CapSense_dsRam
 1104              		.cfi_endproc
 1105              	.LFE5:
 1106              		.size	CapSense_CSXScan, .-CapSense_CSXScan
 1107              		.section	.text.CapSense_CSXDisconnectTx,"ax",%progbits
 1108              		.align	2
 1109              		.global	CapSense_CSXDisconnectTx
 1110              		.code	16
 1111              		.thumb_func
 1112              		.type	CapSense_CSXDisconnectTx, %function
 1113              	CapSense_CSXDisconnectTx:
 1114              	.LFB13:
1735:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 1115              		.loc 1 1735 0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 0
 1118              		@ frame_needed = 0, uses_anonymous_args = 0
 1119              		@ link register save eliminated.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 60


 1120              	.LVL91:
1738:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
 1121              		.loc 1 1738 0
 1122 0000 0268     		ldr	r2, [r0]
 1123 0002 1368     		ldr	r3, [r2]
 1124              	.LVL92:
1739:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 1125              		.loc 1 1739 0
 1126 0004 0169     		ldr	r1, [r0, #16]
 1127 0006 8B43     		bics	r3, r1
 1128              	.LVL93:
1740:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 1129              		.loc 1 1740 0
 1130 0008 1360     		str	r3, [r2]
1741:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1131              		.loc 1 1741 0
 1132              		@ sp needed
 1133 000a 7047     		bx	lr
 1134              		.cfi_endproc
 1135              	.LFE13:
 1136              		.size	CapSense_CSXDisconnectTx, .-CapSense_CSXDisconnectTx
 1137              		.section	.text.CapSense_CSXDisconnectRx,"ax",%progbits
 1138              		.align	2
 1139              		.global	CapSense_CSXDisconnectRx
 1140              		.code	16
 1141              		.thumb_func
 1142              		.type	CapSense_CSXDisconnectRx, %function
 1143              	CapSense_CSXDisconnectRx:
 1144              	.LFB14:
1766:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 regValue;
 1145              		.loc 1 1766 0
 1146              		.cfi_startproc
 1147              		@ args = 0, pretend = 0, frame = 0
 1148              		@ frame_needed = 0, uses_anonymous_args = 0
 1149              	.LVL94:
 1150 0000 10B5     		push	{r4, lr}
 1151              		.cfi_def_cfa_offset 8
 1152              		.cfi_offset 4, -8
 1153              		.cfi_offset 14, -4
1769:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
 1154              		.loc 1 1769 0
 1155 0002 0268     		ldr	r2, [r0]
 1156 0004 1368     		ldr	r3, [r2]
 1157              	.LVL95:
1770:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1158              		.loc 1 1770 0
 1159 0006 0169     		ldr	r1, [r0, #16]
 1160 0008 8B43     		bics	r3, r1
 1161              	.LVL96:
1771:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1162              		.loc 1 1771 0
 1163 000a 1360     		str	r3, [r2]
1773:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &= ~(CapSense_GPIO_PC_MASK << rxPtr->shift);
 1164              		.loc 1 1773 0
 1165 000c 4168     		ldr	r1, [r0, #4]
 1166 000e 0B68     		ldr	r3, [r1]
 1167              	.LVL97:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 61


1774:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue |=  (CapSense_GPIO_STRGDRV << rxPtr->shift);
 1168              		.loc 1 1774 0
 1169 0010 847E     		ldrb	r4, [r0, #26]
 1170 0012 0722     		movs	r2, #7
 1171 0014 A240     		lsls	r2, r2, r4
 1172 0016 9343     		bics	r3, r2
 1173              	.LVL98:
 1174 0018 1A00     		movs	r2, r3
 1175              	.LVL99:
1775:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
 1176              		.loc 1 1775 0
 1177 001a 0623     		movs	r3, #6
 1178 001c A340     		lsls	r3, r3, r4
 1179 001e 1343     		orrs	r3, r2
 1180              	.LVL100:
1776:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1181              		.loc 1 1776 0
 1182 0020 0B60     		str	r3, [r1]
1778:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
 1183              		.loc 1 1778 0
 1184 0022 8268     		ldr	r2, [r0, #8]
 1185 0024 1368     		ldr	r3, [r2]
 1186              	.LVL101:
1779:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
 1187              		.loc 1 1779 0
 1188 0026 4169     		ldr	r1, [r0, #20]
 1189 0028 8B43     		bics	r3, r1
 1190              	.LVL102:
1780:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** }
 1191              		.loc 1 1780 0
 1192 002a 1360     		str	r3, [r2]
1781:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1193              		.loc 1 1781 0
 1194              		@ sp needed
 1195 002c 10BD     		pop	{r4, pc}
 1196              		.cfi_endproc
 1197              	.LFE14:
 1198              		.size	CapSense_CSXDisconnectRx, .-CapSense_CSXDisconnectRx
 1199 002e C046     		.section	.text.CapSense_SsCSXPostMultiScan,"ax",%progbits
 1200              		.align	2
 1201              		.code	16
 1202              		.thumb_func
 1203              		.type	CapSense_SsCSXPostMultiScan, %function
 1204              	CapSense_SsCSXPostMultiScan:
 1205              	.LFB7:
 916:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #ifdef CapSense_ENTRY_CALLBACK
 1206              		.loc 1 916 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210 0000 10B5     		push	{r4, lr}
 1211              		.cfi_def_cfa_offset 8
 1212              		.cfi_offset 4, -8
 1213              		.cfi_offset 14, -4
 922:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                              (CapSense_csxScanPeriod - CapSense_csxRawCount);
 1214              		.loc 1 922 0
 1215 0002 2F4B     		ldr	r3, .L50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 62


 1216 0004 1968     		ldr	r1, [r3]
 1217 0006 2F4B     		ldr	r3, .L50+4
 1218 0008 1B78     		ldrb	r3, [r3]
 1219 000a 2F4C     		ldr	r4, .L50+8
 1220 000c 2288     		ldrh	r2, [r4]
 1221 000e 6088     		ldrh	r0, [r4, #2]
 1222 0010 5B00     		lsls	r3, r3, #1
 1223 0012 121A     		subs	r2, r2, r0
 1224 0014 5A52     		strh	r2, [r3, r1]
1014:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1225              		.loc 1 1014 0
 1226 0016 E068     		ldr	r0, [r4, #12]
 1227 0018 FFF7FEFF 		bl	CapSense_CSXDisconnectTx
 1228              	.LVL103:
1017:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1229              		.loc 1 1017 0
 1230 001c 2B4A     		ldr	r2, .L50+12
 1231 001e 1378     		ldrb	r3, [r2]
 1232 0020 0133     		adds	r3, r3, #1
 1233 0022 DBB2     		uxtb	r3, r3
 1234 0024 1370     		strb	r3, [r2]
1023:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 if (CapSense_curWdgtTotalTx > 0u)
 1235              		.loc 1 1023 0
 1236 0026 A388     		ldrh	r3, [r4, #4]
 1237 0028 013B     		subs	r3, r3, #1
 1238 002a 9BB2     		uxth	r3, r3
 1239 002c A380     		strh	r3, [r4, #4]
1024:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 {
 1240              		.loc 1 1024 0
 1241 002e 002B     		cmp	r3, #0
 1242 0030 0CD0     		beq	.L46
1031:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_CSXConnectTx (CapSense_curTxIOPtr);
 1243              		.loc 1 1031 0
 1244 0032 254B     		ldr	r3, .L50+8
 1245 0034 D868     		ldr	r0, [r3, #12]
 1246 0036 1C30     		adds	r0, r0, #28
 1247 0038 D860     		str	r0, [r3, #12]
1032:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     CapSense_curRamSnsPtr++;
 1248              		.loc 1 1032 0
 1249 003a FFF7FEFF 		bl	CapSense_CSXConnectTx
 1250              	.LVL104:
1033:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1251              		.loc 1 1033 0
 1252 003e 204A     		ldr	r2, .L50
 1253 0040 1368     		ldr	r3, [r2]
 1254 0042 0A33     		adds	r3, r3, #10
 1255 0044 1360     		str	r3, [r2]
1036:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                 }
 1256              		.loc 1 1036 0
 1257 0046 FFF7FEFF 		bl	CapSense_SsCSXStartSample
 1258              	.LVL105:
 1259 004a 37E0     		b	.L45
 1260              	.L46:
1042:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     if (CapSense_curWdgtTotalRx > 0u)
 1261              		.loc 1 1042 0
 1262 004c 1E4A     		ldr	r2, .L50+8
 1263 004e D388     		ldrh	r3, [r2, #6]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 63


 1264 0050 013B     		subs	r3, r3, #1
 1265 0052 9BB2     		uxth	r3, r3
 1266 0054 D380     		strh	r3, [r2, #6]
1043:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     {
 1267              		.loc 1 1043 0
 1268 0056 002B     		cmp	r3, #0
 1269 0058 1DD0     		beq	.L48
1052:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curRxIOPtr++;
 1270              		.loc 1 1052 0
 1271 005a 1400     		movs	r4, r2
 1272 005c 9068     		ldr	r0, [r2, #8]
 1273 005e FFF7FEFF 		bl	CapSense_CSXDisconnectRx
 1274              	.LVL106:
1053:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 1275              		.loc 1 1053 0
 1276 0062 A068     		ldr	r0, [r4, #8]
 1277 0064 1C30     		adds	r0, r0, #28
 1278 0066 A060     		str	r0, [r4, #8]
1054:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curWdgtTotalTx  = CapSense_curFlashWdgtPtr->numRows;
 1279              		.loc 1 1054 0
 1280 0068 FFF7FEFF 		bl	CapSense_CSXConnectRx
 1281              	.LVL107:
1055:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_curFlashWd
 1282              		.loc 1 1055 0
 1283 006c 184B     		ldr	r3, .L50+16
 1284 006e 1B68     		ldr	r3, [r3]
 1285 0070 5A7F     		ldrb	r2, [r3, #29]
 1286 0072 A280     		strh	r2, [r4, #4]
1056:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_curTxIOPtr = & CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numC
 1287              		.loc 1 1056 0
 1288 0074 1868     		ldr	r0, [r3]
 1289 0076 E060     		str	r0, [r4, #12]
1057:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         CapSense_CSXConnectTx(CapSense_curTxIOPtr);
 1290              		.loc 1 1057 0
 1291 0078 1A7F     		ldrb	r2, [r3, #28]
 1292 007a D300     		lsls	r3, r2, #3
 1293 007c 9A1A     		subs	r2, r3, r2
 1294 007e 9300     		lsls	r3, r2, #2
 1295 0080 C018     		adds	r0, r0, r3
 1296 0082 E060     		str	r0, [r4, #12]
1058:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1297              		.loc 1 1058 0
 1298 0084 FFF7FEFF 		bl	CapSense_CSXConnectTx
 1299              	.LVL108:
1061:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1300              		.loc 1 1061 0
 1301 0088 0D4A     		ldr	r2, .L50
 1302 008a 1368     		ldr	r3, [r2]
 1303 008c 0A33     		adds	r3, r3, #10
 1304 008e 1360     		str	r3, [r2]
1064:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                     }
 1305              		.loc 1 1064 0
 1306 0090 FFF7FEFF 		bl	CapSense_SsCSXStartSample
 1307              	.LVL109:
 1308 0094 12E0     		b	.L45
 1309              	.L48:
1069:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 64


 1310              		.loc 1 1069 0
 1311 0096 0C4B     		ldr	r3, .L50+8
 1312 0098 9868     		ldr	r0, [r3, #8]
 1313 009a FFF7FEFF 		bl	CapSense_CSXDisconnectRx
 1314              	.LVL110:
1072:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         {
 1315              		.loc 1 1072 0
 1316 009e 0D4B     		ldr	r3, .L50+20
 1317 00a0 1B78     		ldrb	r3, [r3]
 1318 00a2 002B     		cmp	r3, #0
 1319 00a4 02D0     		beq	.L49
1074:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
 1320              		.loc 1 1074 0
 1321 00a6 FFF7FEFF 		bl	CapSense_SsPostAllWidgetsScan
 1322              	.LVL111:
 1323 00aa 07E0     		b	.L45
 1324              	.L49:
1083:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                             CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 1325              		.loc 1 1083 0
 1326 00ac 0A4B     		ldr	r3, .L50+24
 1327 00ae 1A89     		ldrh	r2, [r3, #8]
 1328 00b0 0132     		adds	r2, r2, #1
 1329 00b2 1A81     		strh	r2, [r3, #8]
1084:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****                         }
 1330              		.loc 1 1084 0
 1331 00b4 DA68     		ldr	r2, [r3, #12]
 1332 00b6 8021     		movs	r1, #128
 1333 00b8 8A43     		bics	r2, r1
 1334 00ba DA60     		str	r2, [r3, #12]
 1335              	.L45:
1094:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1336              		.loc 1 1094 0
 1337              		@ sp needed
 1338 00bc 10BD     		pop	{r4, pc}
 1339              	.L51:
 1340 00be C046     		.align	2
 1341              	.L50:
 1342 00c0 00000000 		.word	CapSense_curRamSnsPtr
 1343 00c4 00000000 		.word	CapSense_scanFreqIndex
 1344 00c8 00000000 		.word	.LANCHOR0
 1345 00cc 00000000 		.word	CapSense_sensorIndex
 1346 00d0 00000000 		.word	CapSense_curFlashWdgtPtr
 1347 00d4 00000000 		.word	CapSense_requestScanAllWidget
 1348 00d8 00000000 		.word	CapSense_dsRam
 1349              		.cfi_endproc
 1350              	.LFE7:
 1351              		.size	CapSense_SsCSXPostMultiScan, .-CapSense_SsCSXPostMultiScan
 1352              		.section	.text.CapSense_CSXElectrodeCheck,"ax",%progbits
 1353              		.align	2
 1354              		.global	CapSense_CSXElectrodeCheck
 1355              		.code	16
 1356              		.thumb_func
 1357              		.type	CapSense_CSXElectrodeCheck, %function
 1358              	CapSense_CSXElectrodeCheck:
 1359              	.LFB2:
 316:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #if (CapSense_ENABLE == CapSense_CSX_GANGED_SNS_EN)
 1360              		.loc 1 316 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 65


 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 0
 1363              		@ frame_needed = 0, uses_anonymous_args = 0
 1364 0000 10B5     		push	{r4, lr}
 1365              		.cfi_def_cfa_offset 8
 1366              		.cfi_offset 4, -8
 1367              		.cfi_offset 14, -4
 321:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     {
 1368              		.loc 1 321 0
 1369 0002 074B     		ldr	r3, .L54
 1370 0004 1B8A     		ldrh	r3, [r3, #16]
 1371 0006 002B     		cmp	r3, #0
 1372 0008 08D0     		beq	.L52
 360:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXDisconnectRx(CapSense_curRxIOPtr);
 1373              		.loc 1 360 0
 1374 000a 054C     		ldr	r4, .L54
 1375 000c E068     		ldr	r0, [r4, #12]
 1376 000e FFF7FEFF 		bl	CapSense_CSXDisconnectTx
 1377              	.LVL112:
 361:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif
 1378              		.loc 1 361 0
 1379 0012 A068     		ldr	r0, [r4, #8]
 1380 0014 FFF7FEFF 		bl	CapSense_CSXDisconnectRx
 1381              	.LVL113:
 363:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     }
 1382              		.loc 1 363 0
 1383 0018 0023     		movs	r3, #0
 1384 001a 2382     		strh	r3, [r4, #16]
 1385              	.L52:
 365:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1386              		.loc 1 365 0
 1387              		@ sp needed
 1388 001c 10BD     		pop	{r4, pc}
 1389              	.L55:
 1390 001e C046     		.align	2
 1391              	.L54:
 1392 0020 00000000 		.word	.LANCHOR0
 1393              		.cfi_endproc
 1394              	.LFE2:
 1395              		.size	CapSense_CSXElectrodeCheck, .-CapSense_CSXElectrodeCheck
 1396              		.section	.text.CapSense_CSXSetupWidget,"ax",%progbits
 1397              		.align	2
 1398              		.global	CapSense_CSXSetupWidget
 1399              		.code	16
 1400              		.thumb_func
 1401              		.type	CapSense_CSXSetupWidget, %function
 1402              	CapSense_CSXSetupWidget:
 1403              	.LFB3:
 407:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     /* variable to access widget details */
 1404              		.loc 1 407 0
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 0
 1407              		@ frame_needed = 0, uses_anonymous_args = 0
 1408              	.LVL114:
 1409 0000 70B5     		push	{r4, r5, r6, lr}
 1410              		.cfi_def_cfa_offset 16
 1411              		.cfi_offset 4, -16
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 66


 1412              		.cfi_offset 5, -12
 1413              		.cfi_offset 6, -8
 1414              		.cfi_offset 14, -4
 1415 0002 0400     		movs	r4, r0
 417:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1416              		.loc 1 417 0
 1417 0004 C2B2     		uxtb	r2, r0
 1418 0006 124B     		ldr	r3, .L57
 1419 0008 1A70     		strb	r2, [r3]
 419:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1420              		.loc 1 419 0
 1421 000a 0220     		movs	r0, #2
 1422              	.LVL115:
 1423 000c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1424              	.LVL116:
 425:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1425              		.loc 1 425 0
 1426 0010 FFF7FEFF 		bl	CapSense_CSXElectrodeCheck
 1427              	.LVL117:
 429:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1428              		.loc 1 429 0
 1429 0014 A300     		lsls	r3, r4, #2
 1430 0016 1C19     		adds	r4, r3, r4
 1431              	.LVL118:
 1432 0018 E200     		lsls	r2, r4, #3
 1433 001a 0E4B     		ldr	r3, .L57+4
 1434 001c D318     		adds	r3, r2, r3
 1435 001e 0E4A     		ldr	r2, .L57+8
 1436 0020 1360     		str	r3, [r2]
 431:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1437              		.loc 1 431 0
 1438 0022 5D68     		ldr	r5, [r3, #4]
 1439              	.LVL119:
 436:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
 1440              		.loc 1 436 0
 1441 0024 6C89     		ldrh	r4, [r5, #10]
 1442              	.LVL120:
 439:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_csxScanPeriod  = CapSense_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 1443              		.loc 1 439 0
 1444 0026 2A88     		ldrh	r2, [r5]
 1445 0028 0C4B     		ldr	r3, .L57+12
 1446 002a 1A60     		str	r2, [r3]
 440:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1447              		.loc 1 440 0
 1448 002c 2800     		movs	r0, r5
 1449 002e FFF7FEFF 		bl	CapSense_SsCalcCsxScanPeriod
 1450              	.LVL121:
 1451 0032 0B4B     		ldr	r3, .L57+16
 1452 0034 1880     		strh	r0, [r3]
 442:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1453              		.loc 1 442 0
 1454 0036 2B7B     		ldrb	r3, [r5, #12]
 1455              	.LVL122:
 444:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << CapSense_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 1456              		.loc 1 444 0
 1457 0038 013C     		subs	r4, r4, #1
 1458              	.LVL123:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 67


 1459 003a 2405     		lsls	r4, r4, #20
 1460              	.LVL124:
 1461 003c 240D     		lsrs	r4, r4, #20
 1462              	.LVL125:
 445:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, tmpRegVal);
 1463              		.loc 1 445 0
 1464 003e 1B04     		lsls	r3, r3, #16
 1465              	.LVL126:
 1466 0040 1C43     		orrs	r4, r3
 1467              	.LVL127:
 446:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_SsSetModClkClockDivider((uint32)CapSense_dsRam.modCsxClk);
 1468              		.loc 1 446 0
 1469 0042 084B     		ldr	r3, .L57+20
 1470 0044 1C60     		str	r4, [r3]
 447:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 1471              		.loc 1 447 0
 1472 0046 084B     		ldr	r3, .L57+24
 1473 0048 D87F     		ldrb	r0, [r3, #31]
 1474 004a FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1475              	.LVL128:
 476:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1476              		.loc 1 476 0
 1477              		@ sp needed
 1478              	.LVL129:
 1479              	.LVL130:
 1480 004e 70BD     		pop	{r4, r5, r6, pc}
 1481              	.L58:
 1482              		.align	2
 1483              	.L57:
 1484 0050 00000000 		.word	CapSense_widgetIndex
 1485 0054 00000000 		.word	CapSense_dsFlash
 1486 0058 00000000 		.word	CapSense_curFlashWdgtPtr
 1487 005c 14030B40 		.word	1074463508
 1488 0060 00000000 		.word	.LANCHOR0
 1489 0064 00020B40 		.word	1074463232
 1490 0068 00000000 		.word	CapSense_dsRam
 1491              		.cfi_endproc
 1492              	.LFE3:
 1493              		.size	CapSense_CSXSetupWidget, .-CapSense_CSXSetupWidget
 1494              		.global	__aeabi_uidivmod
 1495              		.section	.text.CapSense_CSXSetupWidgetExt,"ax",%progbits
 1496              		.align	2
 1497              		.global	CapSense_CSXSetupWidgetExt
 1498              		.code	16
 1499              		.thumb_func
 1500              		.type	CapSense_CSXSetupWidgetExt, %function
 1501              	CapSense_CSXSetupWidgetExt:
 1502              	.LFB4:
 517:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 txIndex;
 1503              		.loc 1 517 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 0
 1506              		@ frame_needed = 0, uses_anonymous_args = 0
 1507              	.LVL131:
 1508 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1509              		.cfi_def_cfa_offset 24
 1510              		.cfi_offset 3, -24
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 68


 1511              		.cfi_offset 4, -20
 1512              		.cfi_offset 5, -16
 1513              		.cfi_offset 6, -12
 1514              		.cfi_offset 7, -8
 1515              		.cfi_offset 14, -4
 1516 0002 0C00     		movs	r4, r1
 526:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_sensorIndex = (uint8)sensorId;
 1517              		.loc 1 526 0
 1518 0004 FFF7FEFF 		bl	CapSense_CSXSetupWidget
 1519              	.LVL132:
 527:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1520              		.loc 1 527 0
 1521 0008 E2B2     		uxtb	r2, r4
 1522 000a 184B     		ldr	r3, .L60
 1523 000c 1A70     		strb	r2, [r3]
 530:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     CapSense_curRamSnsPtr = &CapSense_curRamSnsPtr[sensorId];
 1524              		.loc 1 530 0
 1525 000e 184B     		ldr	r3, .L60+4
 1526 0010 1D68     		ldr	r5, [r3]
 531:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1527              		.loc 1 531 0
 1528 0012 A300     		lsls	r3, r4, #2
 1529 0014 1B19     		adds	r3, r3, r4
 1530 0016 5B00     		lsls	r3, r3, #1
 1531 0018 AA68     		ldr	r2, [r5, #8]
 1532 001a 9446     		mov	ip, r2
 1533 001c 6344     		add	r3, r3, ip
 1534 001e 154A     		ldr	r2, .L60+8
 1535 0020 1360     		str	r3, [r2]
 543:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     txIndex = sensorId % CapSense_curFlashWdgtPtr->numRows;
 1536              		.loc 1 543 0
 1537 0022 6F7F     		ldrb	r7, [r5, #29]
 1538 0024 3900     		movs	r1, r7
 1539 0026 2000     		movs	r0, r4
 1540 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1541              	.LVL133:
 1542 002c 0600     		movs	r6, r0
 1543              	.LVL134:
 544:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1544              		.loc 1 544 0
 1545 002e 3900     		movs	r1, r7
 1546 0030 2000     		movs	r0, r4
 1547              	.LVL135:
 1548 0032 FFF7FEFF 		bl	__aeabi_uidivmod
 1549              	.LVL136:
 596:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curRxIOPtr = &CapSense_curRxIOPtr[rxIndex];
 1550              		.loc 1 596 0
 1551 0036 2A68     		ldr	r2, [r5]
 1552 0038 0F4C     		ldr	r4, .L60+12
 1553              	.LVL137:
 597:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1554              		.loc 1 597 0
 1555 003a F300     		lsls	r3, r6, #3
 1556 003c 9B1B     		subs	r3, r3, r6
 1557 003e 9B00     		lsls	r3, r3, #2
 1558 0040 D318     		adds	r3, r2, r3
 1559 0042 A360     		str	r3, [r4, #8]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 69


 599:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_curTxIOPtr = &CapSense_curTxIOPtr[(CapSense_curFlashWdgtPtr->numCols + txIndex
 1560              		.loc 1 599 0
 1561 0044 E260     		str	r2, [r4, #12]
 600:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1562              		.loc 1 600 0
 1563 0046 287F     		ldrb	r0, [r5, #28]
 1564 0048 4118     		adds	r1, r0, r1
 1565              	.LVL138:
 1566 004a CB00     		lsls	r3, r1, #3
 1567 004c 581A     		subs	r0, r3, r1
 1568 004e 8000     		lsls	r0, r0, #2
 1569 0050 1018     		adds	r0, r2, r0
 1570 0052 E060     		str	r0, [r4, #12]
 603:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_CSXConnectRx(CapSense_curRxIOPtr);
 1571              		.loc 1 603 0
 1572 0054 FFF7FEFF 		bl	CapSense_CSXConnectTx
 1573              	.LVL139:
 604:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****             CapSense_eleCsxDisconnectFlag = CapSense_DISCONNECT_IO_FLAG;
 1574              		.loc 1 604 0
 1575 0058 A068     		ldr	r0, [r4, #8]
 1576 005a FFF7FEFF 		bl	CapSense_CSXConnectRx
 1577              	.LVL140:
 605:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1578              		.loc 1 605 0
 1579 005e 0123     		movs	r3, #1
 1580 0060 2382     		strh	r3, [r4, #16]
 608:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         }
 1581              		.loc 1 608 0
 1582 0062 064A     		ldr	r2, .L60+16
 1583 0064 064B     		ldr	r3, .L60+20
 1584 0066 1A60     		str	r2, [r3]
 613:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1585              		.loc 1 613 0
 1586              		@ sp needed
 1587              	.LVL141:
 1588 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1589              	.L61:
 1590 006a C046     		.align	2
 1591              	.L60:
 1592 006c 00000000 		.word	CapSense_sensorIndex
 1593 0070 00000000 		.word	CapSense_curFlashWdgtPtr
 1594 0074 00000000 		.word	CapSense_curRamSnsPtr
 1595 0078 00000000 		.word	.LANCHOR0
 1596 007c 00000000 		.word	CapSense_SsCSXPostSingleScan
 1597 0080 00000000 		.word	.LANCHOR1
 1598              		.cfi_endproc
 1599              	.LFE4:
 1600              		.size	CapSense_CSXSetupWidgetExt, .-CapSense_CSXSetupWidgetExt
 1601              		.section	.text.CapSense_SsCSXGetTxClkDivider,"ax",%progbits
 1602              		.align	2
 1603              		.global	CapSense_SsCSXGetTxClkDivider
 1604              		.code	16
 1605              		.thumb_func
 1606              		.type	CapSense_SsCSXGetTxClkDivider, %function
 1607              	CapSense_SsCSXGetTxClkDivider:
 1608              	.LFB15:
1805:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     uint32 retVal;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 70


 1609              		.loc 1 1805 0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 0
 1612              		@ frame_needed = 0, uses_anonymous_args = 0
 1613              		@ link register save eliminated.
 1614              	.LVL142:
1812:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****         CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1615              		.loc 1 1812 0
 1616 0000 8300     		lsls	r3, r0, #2
 1617 0002 1818     		adds	r0, r3, r0
 1618              	.LVL143:
 1619 0004 C300     		lsls	r3, r0, #3
 1620 0006 024A     		ldr	r2, .L63
 1621 0008 D318     		adds	r3, r2, r3
 1622 000a 5B68     		ldr	r3, [r3, #4]
 1623              	.LVL144:
1815:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c ****     #else
 1624              		.loc 1 1815 0
 1625 000c 5889     		ldrh	r0, [r3, #10]
 1626              	.LVL145:
1826:Generated_Source\PSoC4/CapSense_SensingCSX_LL.c **** 
 1627              		.loc 1 1826 0
 1628              		@ sp needed
 1629 000e 7047     		bx	lr
 1630              	.L64:
 1631              		.align	2
 1632              	.L63:
 1633 0010 00000000 		.word	CapSense_dsFlash
 1634              		.cfi_endproc
 1635              	.LFE15:
 1636              		.size	CapSense_SsCSXGetTxClkDivider, .-CapSense_SsCSXGetTxClkDivider
 1637              		.global	CapSense_CSXPostScanApiPtr
 1638              		.global	CapSense_csxRawCount
 1639              		.global	CapSense_csxScanPeriod
 1640              		.data
 1641              		.align	2
 1642              		.set	.LANCHOR1,. + 0
 1643              		.type	CapSense_CSXPostScanApiPtr, %object
 1644              		.size	CapSense_CSXPostScanApiPtr, 4
 1645              	CapSense_CSXPostScanApiPtr:
 1646 0000 00000000 		.word	CapSense_SsCSXPostMultiScan
 1647              		.bss
 1648              		.align	2
 1649              		.set	.LANCHOR0,. + 0
 1650              		.type	CapSense_csxScanPeriod, %object
 1651              		.size	CapSense_csxScanPeriod, 2
 1652              	CapSense_csxScanPeriod:
 1653 0000 0000     		.space	2
 1654              		.type	CapSense_csxRawCount, %object
 1655              		.size	CapSense_csxRawCount, 2
 1656              	CapSense_csxRawCount:
 1657 0002 0000     		.space	2
 1658              		.type	CapSense_curWdgtTotalTx, %object
 1659              		.size	CapSense_curWdgtTotalTx, 2
 1660              	CapSense_curWdgtTotalTx:
 1661 0004 0000     		.space	2
 1662              		.type	CapSense_curWdgtTotalRx, %object
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 71


 1663              		.size	CapSense_curWdgtTotalRx, 2
 1664              	CapSense_curWdgtTotalRx:
 1665 0006 0000     		.space	2
 1666              		.type	CapSense_curRxIOPtr, %object
 1667              		.size	CapSense_curRxIOPtr, 4
 1668              	CapSense_curRxIOPtr:
 1669 0008 00000000 		.space	4
 1670              		.type	CapSense_curTxIOPtr, %object
 1671              		.size	CapSense_curTxIOPtr, 4
 1672              	CapSense_curTxIOPtr:
 1673 000c 00000000 		.space	4
 1674              		.type	CapSense_eleCsxDisconnectFlag, %object
 1675              		.size	CapSense_eleCsxDisconnectFlag, 2
 1676              	CapSense_eleCsxDisconnectFlag:
 1677 0010 0000     		.space	2
 1678              		.text
 1679              	.Letext0:
 1680              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1681              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1682              		.file 4 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1683              		.file 5 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 1684              		.file 6 "Generated_Source\\PSoC4\\CyLib.h"
 1685              		.section	.debug_info,"",%progbits
 1686              	.Ldebug_info0:
 1687 0000 5F0E0000 		.4byte	0xe5f
 1688 0004 0400     		.2byte	0x4
 1689 0006 00000000 		.4byte	.Ldebug_abbrev0
 1690 000a 04       		.byte	0x4
 1691 000b 01       		.uleb128 0x1
 1692 000c 09020000 		.4byte	.LASF164
 1693 0010 0C       		.byte	0xc
 1694 0011 BE070000 		.4byte	.LASF165
 1695 0015 F6080000 		.4byte	.LASF166
 1696 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1697 001d 00000000 		.4byte	0
 1698 0021 00000000 		.4byte	.Ldebug_line0
 1699 0025 02       		.uleb128 0x2
 1700 0026 01       		.byte	0x1
 1701 0027 06       		.byte	0x6
 1702 0028 AC0A0000 		.4byte	.LASF0
 1703 002c 02       		.uleb128 0x2
 1704 002d 01       		.byte	0x1
 1705 002e 08       		.byte	0x8
 1706 002f CF080000 		.4byte	.LASF1
 1707 0033 02       		.uleb128 0x2
 1708 0034 02       		.byte	0x2
 1709 0035 05       		.byte	0x5
 1710 0036 20070000 		.4byte	.LASF2
 1711 003a 02       		.uleb128 0x2
 1712 003b 02       		.byte	0x2
 1713 003c 07       		.byte	0x7
 1714 003d D40A0000 		.4byte	.LASF3
 1715 0041 02       		.uleb128 0x2
 1716 0042 04       		.byte	0x4
 1717 0043 05       		.byte	0x5
 1718 0044 3E070000 		.4byte	.LASF4
 1719 0048 02       		.uleb128 0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 72


 1720 0049 04       		.byte	0x4
 1721 004a 07       		.byte	0x7
 1722 004b 55080000 		.4byte	.LASF5
 1723 004f 02       		.uleb128 0x2
 1724 0050 08       		.byte	0x8
 1725 0051 05       		.byte	0x5
 1726 0052 AB040000 		.4byte	.LASF6
 1727 0056 02       		.uleb128 0x2
 1728 0057 08       		.byte	0x8
 1729 0058 07       		.byte	0x7
 1730 0059 DD020000 		.4byte	.LASF7
 1731 005d 03       		.uleb128 0x3
 1732 005e 04       		.byte	0x4
 1733 005f 05       		.byte	0x5
 1734 0060 696E7400 		.ascii	"int\000"
 1735 0064 02       		.uleb128 0x2
 1736 0065 04       		.byte	0x4
 1737 0066 07       		.byte	0x7
 1738 0067 E8000000 		.4byte	.LASF8
 1739 006b 04       		.uleb128 0x4
 1740 006c 240B0000 		.4byte	.LASF9
 1741 0070 02       		.byte	0x2
 1742 0071 E401     		.2byte	0x1e4
 1743 0073 2C000000 		.4byte	0x2c
 1744 0077 04       		.uleb128 0x4
 1745 0078 41040000 		.4byte	.LASF10
 1746 007c 02       		.byte	0x2
 1747 007d E501     		.2byte	0x1e5
 1748 007f 3A000000 		.4byte	0x3a
 1749 0083 04       		.uleb128 0x4
 1750 0084 AE050000 		.4byte	.LASF11
 1751 0088 02       		.byte	0x2
 1752 0089 E601     		.2byte	0x1e6
 1753 008b 48000000 		.4byte	0x48
 1754 008f 02       		.uleb128 0x2
 1755 0090 04       		.byte	0x4
 1756 0091 04       		.byte	0x4
 1757 0092 FD010000 		.4byte	.LASF12
 1758 0096 02       		.uleb128 0x2
 1759 0097 08       		.byte	0x8
 1760 0098 04       		.byte	0x4
 1761 0099 2A0B0000 		.4byte	.LASF13
 1762 009d 02       		.uleb128 0x2
 1763 009e 01       		.byte	0x1
 1764 009f 08       		.byte	0x8
 1765 00a0 1B040000 		.4byte	.LASF14
 1766 00a4 05       		.uleb128 0x5
 1767 00a5 6B000000 		.4byte	0x6b
 1768 00a9 05       		.uleb128 0x5
 1769 00aa 77000000 		.4byte	0x77
 1770 00ae 04       		.uleb128 0x4
 1771 00af 85060000 		.4byte	.LASF15
 1772 00b3 02       		.byte	0x2
 1773 00b4 9002     		.2byte	0x290
 1774 00b6 BA000000 		.4byte	0xba
 1775 00ba 05       		.uleb128 0x5
 1776 00bb 83000000 		.4byte	0x83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 73


 1777 00bf 06       		.uleb128 0x6
 1778 00c0 04       		.byte	0x4
 1779 00c1 C5000000 		.4byte	0xc5
 1780 00c5 07       		.uleb128 0x7
 1781 00c6 02       		.uleb128 0x2
 1782 00c7 08       		.byte	0x8
 1783 00c8 04       		.byte	0x4
 1784 00c9 79060000 		.4byte	.LASF16
 1785 00cd 02       		.uleb128 0x2
 1786 00ce 04       		.byte	0x4
 1787 00cf 07       		.byte	0x7
 1788 00d0 44080000 		.4byte	.LASF17
 1789 00d4 08       		.uleb128 0x8
 1790 00d5 04       		.byte	0x4
 1791 00d6 04       		.uleb128 0x4
 1792 00d7 ED090000 		.4byte	.LASF18
 1793 00db 03       		.byte	0x3
 1794 00dc 2201     		.2byte	0x122
 1795 00de 77000000 		.4byte	0x77
 1796 00e2 04       		.uleb128 0x4
 1797 00e3 66040000 		.4byte	.LASF19
 1798 00e7 03       		.byte	0x3
 1799 00e8 2601     		.2byte	0x126
 1800 00ea 6B000000 		.4byte	0x6b
 1801 00ee 09       		.uleb128 0x9
 1802 00ef 01       		.byte	0x1
 1803 00f0 2C000000 		.4byte	0x2c
 1804 00f4 04       		.byte	0x4
 1805 00f5 6F       		.byte	0x6f
 1806 00f6 19010000 		.4byte	0x119
 1807 00fa 0A       		.uleb128 0xa
 1808 00fb D3000000 		.4byte	.LASF20
 1809 00ff 00       		.byte	0
 1810 0100 0A       		.uleb128 0xa
 1811 0101 28080000 		.4byte	.LASF21
 1812 0105 01       		.byte	0x1
 1813 0106 0A       		.uleb128 0xa
 1814 0107 7D070000 		.4byte	.LASF22
 1815 010b 02       		.byte	0x2
 1816 010c 0A       		.uleb128 0xa
 1817 010d 050A0000 		.4byte	.LASF23
 1818 0111 03       		.byte	0x3
 1819 0112 0A       		.uleb128 0xa
 1820 0113 40060000 		.4byte	.LASF24
 1821 0117 04       		.byte	0x4
 1822 0118 00       		.byte	0
 1823 0119 0B       		.uleb128 0xb
 1824 011a 81040000 		.4byte	.LASF25
 1825 011e 04       		.byte	0x4
 1826 011f 75       		.byte	0x75
 1827 0120 EE000000 		.4byte	0xee
 1828 0124 0C       		.uleb128 0xc
 1829 0125 0E       		.byte	0xe
 1830 0126 04       		.byte	0x4
 1831 0127 8D       		.byte	0x8d
 1832 0128 A5010000 		.4byte	0x1a5
 1833 012c 0D       		.uleb128 0xd
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 74


 1834 012d 48040000 		.4byte	.LASF26
 1835 0131 04       		.byte	0x4
 1836 0132 92       		.byte	0x92
 1837 0133 77000000 		.4byte	0x77
 1838 0137 00       		.byte	0
 1839 0138 0D       		.uleb128 0xd
 1840 0139 A0080000 		.4byte	.LASF27
 1841 013d 04       		.byte	0x4
 1842 013e 97       		.byte	0x97
 1843 013f D6000000 		.4byte	0xd6
 1844 0143 02       		.byte	0x2
 1845 0144 0D       		.uleb128 0xd
 1846 0145 13040000 		.4byte	.LASF28
 1847 0149 04       		.byte	0x4
 1848 014a 9C       		.byte	0x9c
 1849 014b 6B000000 		.4byte	0x6b
 1850 014f 04       		.byte	0x4
 1851 0150 0D       		.uleb128 0xd
 1852 0151 5A050000 		.4byte	.LASF29
 1853 0155 04       		.byte	0x4
 1854 0156 A1       		.byte	0xa1
 1855 0157 6B000000 		.4byte	0x6b
 1856 015b 05       		.byte	0x5
 1857 015c 0D       		.uleb128 0xd
 1858 015d 8A030000 		.4byte	.LASF30
 1859 0161 04       		.byte	0x4
 1860 0162 A7       		.byte	0xa7
 1861 0163 6B000000 		.4byte	0x6b
 1862 0167 06       		.byte	0x6
 1863 0168 0D       		.uleb128 0xd
 1864 0169 DA040000 		.4byte	.LASF31
 1865 016d 04       		.byte	0x4
 1866 016e AD       		.byte	0xad
 1867 016f 6B000000 		.4byte	0x6b
 1868 0173 07       		.byte	0x7
 1869 0174 0D       		.uleb128 0xd
 1870 0175 AE030000 		.4byte	.LASF32
 1871 0179 04       		.byte	0x4
 1872 017a B4       		.byte	0xb4
 1873 017b E2000000 		.4byte	0xe2
 1874 017f 08       		.byte	0x8
 1875 0180 0D       		.uleb128 0xd
 1876 0181 6E080000 		.4byte	.LASF33
 1877 0185 04       		.byte	0x4
 1878 0186 BB       		.byte	0xbb
 1879 0187 A5010000 		.4byte	0x1a5
 1880 018b 09       		.byte	0x9
 1881 018c 0D       		.uleb128 0xd
 1882 018d 5B0A0000 		.4byte	.LASF34
 1883 0191 04       		.byte	0x4
 1884 0192 C3       		.byte	0xc3
 1885 0193 77000000 		.4byte	0x77
 1886 0197 0A       		.byte	0xa
 1887 0198 0D       		.uleb128 0xd
 1888 0199 D0060000 		.4byte	.LASF35
 1889 019d 04       		.byte	0x4
 1890 019e C8       		.byte	0xc8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 75


 1891 019f 6B000000 		.4byte	0x6b
 1892 01a3 0C       		.byte	0xc
 1893 01a4 00       		.byte	0
 1894 01a5 0E       		.uleb128 0xe
 1895 01a6 6B000000 		.4byte	0x6b
 1896 01aa B5010000 		.4byte	0x1b5
 1897 01ae 0F       		.uleb128 0xf
 1898 01af CD000000 		.4byte	0xcd
 1899 01b3 00       		.byte	0
 1900 01b4 00       		.byte	0
 1901 01b5 0B       		.uleb128 0xb
 1902 01b6 6E050000 		.4byte	.LASF36
 1903 01ba 04       		.byte	0x4
 1904 01bb C9       		.byte	0xc9
 1905 01bc 24010000 		.4byte	0x124
 1906 01c0 0C       		.uleb128 0xc
 1907 01c1 0E       		.byte	0xe
 1908 01c2 04       		.byte	0x4
 1909 01c3 CE       		.byte	0xce
 1910 01c4 43020000 		.4byte	0x243
 1911 01c8 0D       		.uleb128 0xd
 1912 01c9 48040000 		.4byte	.LASF26
 1913 01cd 04       		.byte	0x4
 1914 01ce D3       		.byte	0xd3
 1915 01cf 77000000 		.4byte	0x77
 1916 01d3 00       		.byte	0
 1917 01d4 0D       		.uleb128 0xd
 1918 01d5 A0080000 		.4byte	.LASF27
 1919 01d9 04       		.byte	0x4
 1920 01da D8       		.byte	0xd8
 1921 01db D6000000 		.4byte	0xd6
 1922 01df 02       		.byte	0x2
 1923 01e0 0D       		.uleb128 0xd
 1924 01e1 13040000 		.4byte	.LASF28
 1925 01e5 04       		.byte	0x4
 1926 01e6 DD       		.byte	0xdd
 1927 01e7 6B000000 		.4byte	0x6b
 1928 01eb 04       		.byte	0x4
 1929 01ec 0D       		.uleb128 0xd
 1930 01ed 5A050000 		.4byte	.LASF29
 1931 01f1 04       		.byte	0x4
 1932 01f2 E2       		.byte	0xe2
 1933 01f3 6B000000 		.4byte	0x6b
 1934 01f7 05       		.byte	0x5
 1935 01f8 0D       		.uleb128 0xd
 1936 01f9 8A030000 		.4byte	.LASF30
 1937 01fd 04       		.byte	0x4
 1938 01fe E8       		.byte	0xe8
 1939 01ff 6B000000 		.4byte	0x6b
 1940 0203 06       		.byte	0x6
 1941 0204 0D       		.uleb128 0xd
 1942 0205 DA040000 		.4byte	.LASF31
 1943 0209 04       		.byte	0x4
 1944 020a EE       		.byte	0xee
 1945 020b 6B000000 		.4byte	0x6b
 1946 020f 07       		.byte	0x7
 1947 0210 0D       		.uleb128 0xd
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 76


 1948 0211 AE030000 		.4byte	.LASF32
 1949 0215 04       		.byte	0x4
 1950 0216 F5       		.byte	0xf5
 1951 0217 E2000000 		.4byte	0xe2
 1952 021b 08       		.byte	0x8
 1953 021c 0D       		.uleb128 0xd
 1954 021d 6E080000 		.4byte	.LASF33
 1955 0221 04       		.byte	0x4
 1956 0222 FC       		.byte	0xfc
 1957 0223 A5010000 		.4byte	0x1a5
 1958 0227 09       		.byte	0x9
 1959 0228 10       		.uleb128 0x10
 1960 0229 5B0A0000 		.4byte	.LASF34
 1961 022d 04       		.byte	0x4
 1962 022e 0401     		.2byte	0x104
 1963 0230 77000000 		.4byte	0x77
 1964 0234 0A       		.byte	0xa
 1965 0235 10       		.uleb128 0x10
 1966 0236 D0060000 		.4byte	.LASF35
 1967 023a 04       		.byte	0x4
 1968 023b 0901     		.2byte	0x109
 1969 023d 6B000000 		.4byte	0x6b
 1970 0241 0C       		.byte	0xc
 1971 0242 00       		.byte	0
 1972 0243 04       		.uleb128 0x4
 1973 0244 B1080000 		.4byte	.LASF37
 1974 0248 04       		.byte	0x4
 1975 0249 0A01     		.2byte	0x10a
 1976 024b C0010000 		.4byte	0x1c0
 1977 024f 11       		.uleb128 0x11
 1978 0250 10       		.byte	0x10
 1979 0251 04       		.byte	0x4
 1980 0252 0F01     		.2byte	0x10f
 1981 0254 E8020000 		.4byte	0x2e8
 1982 0258 10       		.uleb128 0x10
 1983 0259 48040000 		.4byte	.LASF26
 1984 025d 04       		.byte	0x4
 1985 025e 1401     		.2byte	0x114
 1986 0260 77000000 		.4byte	0x77
 1987 0264 00       		.byte	0
 1988 0265 10       		.uleb128 0x10
 1989 0266 A0080000 		.4byte	.LASF27
 1990 026a 04       		.byte	0x4
 1991 026b 1901     		.2byte	0x119
 1992 026d D6000000 		.4byte	0xd6
 1993 0271 02       		.byte	0x2
 1994 0272 10       		.uleb128 0x10
 1995 0273 13040000 		.4byte	.LASF28
 1996 0277 04       		.byte	0x4
 1997 0278 1E01     		.2byte	0x11e
 1998 027a 6B000000 		.4byte	0x6b
 1999 027e 04       		.byte	0x4
 2000 027f 10       		.uleb128 0x10
 2001 0280 5A050000 		.4byte	.LASF29
 2002 0284 04       		.byte	0x4
 2003 0285 2301     		.2byte	0x123
 2004 0287 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 77


 2005 028b 05       		.byte	0x5
 2006 028c 10       		.uleb128 0x10
 2007 028d 8A030000 		.4byte	.LASF30
 2008 0291 04       		.byte	0x4
 2009 0292 2901     		.2byte	0x129
 2010 0294 6B000000 		.4byte	0x6b
 2011 0298 06       		.byte	0x6
 2012 0299 10       		.uleb128 0x10
 2013 029a DA040000 		.4byte	.LASF31
 2014 029e 04       		.byte	0x4
 2015 029f 2F01     		.2byte	0x12f
 2016 02a1 6B000000 		.4byte	0x6b
 2017 02a5 07       		.byte	0x7
 2018 02a6 10       		.uleb128 0x10
 2019 02a7 AE030000 		.4byte	.LASF32
 2020 02ab 04       		.byte	0x4
 2021 02ac 3601     		.2byte	0x136
 2022 02ae E2000000 		.4byte	0xe2
 2023 02b2 08       		.byte	0x8
 2024 02b3 10       		.uleb128 0x10
 2025 02b4 6E080000 		.4byte	.LASF33
 2026 02b8 04       		.byte	0x4
 2027 02b9 3D01     		.2byte	0x13d
 2028 02bb A5010000 		.4byte	0x1a5
 2029 02bf 09       		.byte	0x9
 2030 02c0 10       		.uleb128 0x10
 2031 02c1 5B0A0000 		.4byte	.LASF34
 2032 02c5 04       		.byte	0x4
 2033 02c6 4501     		.2byte	0x145
 2034 02c8 77000000 		.4byte	0x77
 2035 02cc 0A       		.byte	0xa
 2036 02cd 10       		.uleb128 0x10
 2037 02ce D0060000 		.4byte	.LASF35
 2038 02d2 04       		.byte	0x4
 2039 02d3 4A01     		.2byte	0x14a
 2040 02d5 6B000000 		.4byte	0x6b
 2041 02d9 0C       		.byte	0xc
 2042 02da 10       		.uleb128 0x10
 2043 02db 840B0000 		.4byte	.LASF38
 2044 02df 04       		.byte	0x4
 2045 02e0 4F01     		.2byte	0x14f
 2046 02e2 E8020000 		.4byte	0x2e8
 2047 02e6 0E       		.byte	0xe
 2048 02e7 00       		.byte	0
 2049 02e8 0E       		.uleb128 0xe
 2050 02e9 77000000 		.4byte	0x77
 2051 02ed F8020000 		.4byte	0x2f8
 2052 02f1 0F       		.uleb128 0xf
 2053 02f2 CD000000 		.4byte	0xcd
 2054 02f6 00       		.byte	0
 2055 02f7 00       		.byte	0
 2056 02f8 04       		.uleb128 0x4
 2057 02f9 0A080000 		.4byte	.LASF39
 2058 02fd 04       		.byte	0x4
 2059 02fe 5001     		.2byte	0x150
 2060 0300 4F020000 		.4byte	0x24f
 2061 0304 11       		.uleb128 0x11
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 78


 2062 0305 3A       		.byte	0x3a
 2063 0306 04       		.byte	0x4
 2064 0307 5601     		.2byte	0x156
 2065 0309 42030000 		.4byte	0x342
 2066 030d 10       		.uleb128 0x10
 2067 030e EF030000 		.4byte	.LASF40
 2068 0312 04       		.byte	0x4
 2069 0313 5B01     		.2byte	0x15b
 2070 0315 43020000 		.4byte	0x243
 2071 0319 00       		.byte	0
 2072 031a 10       		.uleb128 0x10
 2073 031b F4030000 		.4byte	.LASF41
 2074 031f 04       		.byte	0x4
 2075 0320 6001     		.2byte	0x160
 2076 0322 43020000 		.4byte	0x243
 2077 0326 0E       		.byte	0xe
 2078 0327 10       		.uleb128 0x10
 2079 0328 F9030000 		.4byte	.LASF42
 2080 032c 04       		.byte	0x4
 2081 032d 6501     		.2byte	0x165
 2082 032f 43020000 		.4byte	0x243
 2083 0333 1C       		.byte	0x1c
 2084 0334 12       		.uleb128 0x12
 2085 0335 736C6400 		.ascii	"sld\000"
 2086 0339 04       		.byte	0x4
 2087 033a 6A01     		.2byte	0x16a
 2088 033c F8020000 		.4byte	0x2f8
 2089 0340 2A       		.byte	0x2a
 2090 0341 00       		.byte	0
 2091 0342 04       		.uleb128 0x4
 2092 0343 9B010000 		.4byte	.LASF43
 2093 0347 04       		.byte	0x4
 2094 0348 6B01     		.2byte	0x16b
 2095 034a 04030000 		.4byte	0x304
 2096 034e 11       		.uleb128 0x11
 2097 034f 0A       		.byte	0xa
 2098 0350 04       		.byte	0x4
 2099 0351 7101     		.2byte	0x171
 2100 0353 A6030000 		.4byte	0x3a6
 2101 0357 12       		.uleb128 0x12
 2102 0358 72617700 		.ascii	"raw\000"
 2103 035c 04       		.byte	0x4
 2104 035d 7601     		.2byte	0x176
 2105 035f E8020000 		.4byte	0x2e8
 2106 0363 00       		.byte	0
 2107 0364 10       		.uleb128 0x10
 2108 0365 CF0A0000 		.4byte	.LASF44
 2109 0369 04       		.byte	0x4
 2110 036a 7B01     		.2byte	0x17b
 2111 036c E8020000 		.4byte	0x2e8
 2112 0370 02       		.byte	0x2
 2113 0371 10       		.uleb128 0x10
 2114 0372 A9080000 		.4byte	.LASF45
 2115 0376 04       		.byte	0x4
 2116 0377 8101     		.2byte	0x181
 2117 0379 A5010000 		.4byte	0x1a5
 2118 037d 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 79


 2119 037e 10       		.uleb128 0x10
 2120 037f 52070000 		.4byte	.LASF46
 2121 0383 04       		.byte	0x4
 2122 0384 8601     		.2byte	0x186
 2123 0386 D6000000 		.4byte	0xd6
 2124 038a 06       		.byte	0x6
 2125 038b 10       		.uleb128 0x10
 2126 038c 310B0000 		.4byte	.LASF47
 2127 0390 04       		.byte	0x4
 2128 0391 8B01     		.2byte	0x18b
 2129 0393 A6030000 		.4byte	0x3a6
 2130 0397 08       		.byte	0x8
 2131 0398 10       		.uleb128 0x10
 2132 0399 9C040000 		.4byte	.LASF48
 2133 039d 04       		.byte	0x4
 2134 039e 9001     		.2byte	0x190
 2135 03a0 A5010000 		.4byte	0x1a5
 2136 03a4 09       		.byte	0x9
 2137 03a5 00       		.byte	0
 2138 03a6 0E       		.uleb128 0xe
 2139 03a7 E2000000 		.4byte	0xe2
 2140 03ab B6030000 		.4byte	0x3b6
 2141 03af 0F       		.uleb128 0xf
 2142 03b0 CD000000 		.4byte	0xcd
 2143 03b4 00       		.byte	0
 2144 03b5 00       		.byte	0
 2145 03b6 04       		.uleb128 0x4
 2146 03b7 65030000 		.4byte	.LASF49
 2147 03bb 04       		.byte	0x4
 2148 03bc 9101     		.2byte	0x191
 2149 03be 4E030000 		.4byte	0x34e
 2150 03c2 11       		.uleb128 0x11
 2151 03c3 50       		.byte	0x50
 2152 03c4 04       		.byte	0x4
 2153 03c5 9701     		.2byte	0x197
 2154 03c7 00040000 		.4byte	0x400
 2155 03cb 10       		.uleb128 0x10
 2156 03cc EF030000 		.4byte	.LASF40
 2157 03d0 04       		.byte	0x4
 2158 03d1 9C01     		.2byte	0x19c
 2159 03d3 00040000 		.4byte	0x400
 2160 03d7 00       		.byte	0
 2161 03d8 10       		.uleb128 0x10
 2162 03d9 F4030000 		.4byte	.LASF41
 2163 03dd 04       		.byte	0x4
 2164 03de A101     		.2byte	0x1a1
 2165 03e0 00040000 		.4byte	0x400
 2166 03e4 0A       		.byte	0xa
 2167 03e5 10       		.uleb128 0x10
 2168 03e6 F9030000 		.4byte	.LASF42
 2169 03ea 04       		.byte	0x4
 2170 03eb A601     		.2byte	0x1a6
 2171 03ed 00040000 		.4byte	0x400
 2172 03f1 14       		.byte	0x14
 2173 03f2 12       		.uleb128 0x12
 2174 03f3 736C6400 		.ascii	"sld\000"
 2175 03f7 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 80


 2176 03f8 AB01     		.2byte	0x1ab
 2177 03fa 10040000 		.4byte	0x410
 2178 03fe 1E       		.byte	0x1e
 2179 03ff 00       		.byte	0
 2180 0400 0E       		.uleb128 0xe
 2181 0401 B6030000 		.4byte	0x3b6
 2182 0405 10040000 		.4byte	0x410
 2183 0409 0F       		.uleb128 0xf
 2184 040a CD000000 		.4byte	0xcd
 2185 040e 00       		.byte	0
 2186 040f 00       		.byte	0
 2187 0410 0E       		.uleb128 0xe
 2188 0411 B6030000 		.4byte	0x3b6
 2189 0415 20040000 		.4byte	0x420
 2190 0419 0F       		.uleb128 0xf
 2191 041a CD000000 		.4byte	0xcd
 2192 041e 04       		.byte	0x4
 2193 041f 00       		.byte	0
 2194 0420 04       		.uleb128 0x4
 2195 0421 8D0B0000 		.4byte	.LASF50
 2196 0425 04       		.byte	0x4
 2197 0426 AC01     		.2byte	0x1ac
 2198 0428 C2030000 		.4byte	0x3c2
 2199 042c 11       		.uleb128 0x11
 2200 042d B0       		.byte	0xb0
 2201 042e 04       		.byte	0x4
 2202 042f B201     		.2byte	0x1b2
 2203 0431 20050000 		.4byte	0x520
 2204 0435 10       		.uleb128 0x10
 2205 0436 9E060000 		.4byte	.LASF51
 2206 043a 04       		.byte	0x4
 2207 043b B901     		.2byte	0x1b9
 2208 043d 77000000 		.4byte	0x77
 2209 0441 00       		.byte	0
 2210 0442 10       		.uleb128 0x10
 2211 0443 540B0000 		.4byte	.LASF52
 2212 0447 04       		.byte	0x4
 2213 0448 BE01     		.2byte	0x1be
 2214 044a 77000000 		.4byte	0x77
 2215 044e 02       		.byte	0x2
 2216 044f 10       		.uleb128 0x10
 2217 0450 29010000 		.4byte	.LASF53
 2218 0454 04       		.byte	0x4
 2219 0455 C301     		.2byte	0x1c3
 2220 0457 77000000 		.4byte	0x77
 2221 045b 04       		.byte	0x4
 2222 045c 10       		.uleb128 0x10
 2223 045d 6F070000 		.4byte	.LASF54
 2224 0461 04       		.byte	0x4
 2225 0462 C901     		.2byte	0x1c9
 2226 0464 77000000 		.4byte	0x77
 2227 0468 06       		.byte	0x6
 2228 0469 10       		.uleb128 0x10
 2229 046a 1D010000 		.4byte	.LASF55
 2230 046e 04       		.byte	0x4
 2231 046f CE01     		.2byte	0x1ce
 2232 0471 77000000 		.4byte	0x77
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 81


 2233 0475 08       		.byte	0x8
 2234 0476 10       		.uleb128 0x10
 2235 0477 53040000 		.4byte	.LASF56
 2236 047b 04       		.byte	0x4
 2237 047c D301     		.2byte	0x1d3
 2238 047e BA000000 		.4byte	0xba
 2239 0482 0C       		.byte	0xc
 2240 0483 10       		.uleb128 0x10
 2241 0484 47070000 		.4byte	.LASF57
 2242 0488 04       		.byte	0x4
 2243 0489 D901     		.2byte	0x1d9
 2244 048b 20050000 		.4byte	0x520
 2245 048f 10       		.byte	0x10
 2246 0490 10       		.uleb128 0x10
 2247 0491 FF070000 		.4byte	.LASF58
 2248 0495 04       		.byte	0x4
 2249 0496 E001     		.2byte	0x1e0
 2250 0498 20050000 		.4byte	0x520
 2251 049c 14       		.byte	0x14
 2252 049d 10       		.uleb128 0x10
 2253 049e C6060000 		.4byte	.LASF59
 2254 04a2 04       		.byte	0x4
 2255 04a3 F001     		.2byte	0x1f0
 2256 04a5 30050000 		.4byte	0x530
 2257 04a9 18       		.byte	0x18
 2258 04aa 10       		.uleb128 0x10
 2259 04ab 63050000 		.4byte	.LASF60
 2260 04af 04       		.byte	0x4
 2261 04b0 F601     		.2byte	0x1f6
 2262 04b2 77000000 		.4byte	0x77
 2263 04b6 1C       		.byte	0x1c
 2264 04b7 10       		.uleb128 0x10
 2265 04b8 5B030000 		.4byte	.LASF61
 2266 04bc 04       		.byte	0x4
 2267 04bd FB01     		.2byte	0x1fb
 2268 04bf 6B000000 		.4byte	0x6b
 2269 04c3 1E       		.byte	0x1e
 2270 04c4 10       		.uleb128 0x10
 2271 04c5 C3090000 		.4byte	.LASF62
 2272 04c9 04       		.byte	0x4
 2273 04ca 0002     		.2byte	0x200
 2274 04cc 6B000000 		.4byte	0x6b
 2275 04d0 1F       		.byte	0x1f
 2276 04d1 10       		.uleb128 0x10
 2277 04d2 F9040000 		.4byte	.LASF63
 2278 04d6 04       		.byte	0x4
 2279 04d7 0502     		.2byte	0x205
 2280 04d9 42030000 		.4byte	0x342
 2281 04dd 20       		.byte	0x20
 2282 04de 10       		.uleb128 0x10
 2283 04df D5020000 		.4byte	.LASF64
 2284 04e3 04       		.byte	0x4
 2285 04e4 0A02     		.2byte	0x20a
 2286 04e6 20040000 		.4byte	0x420
 2287 04ea 5A       		.byte	0x5a
 2288 04eb 10       		.uleb128 0x10
 2289 04ec C3000000 		.4byte	.LASF65
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 82


 2290 04f0 04       		.byte	0x4
 2291 04f1 0F02     		.2byte	0x20f
 2292 04f3 6B000000 		.4byte	0x6b
 2293 04f7 AA       		.byte	0xaa
 2294 04f8 10       		.uleb128 0x10
 2295 04f9 22030000 		.4byte	.LASF66
 2296 04fd 04       		.byte	0x4
 2297 04fe 1402     		.2byte	0x214
 2298 0500 6B000000 		.4byte	0x6b
 2299 0504 AB       		.byte	0xab
 2300 0505 10       		.uleb128 0x10
 2301 0506 8B060000 		.4byte	.LASF67
 2302 050a 04       		.byte	0x4
 2303 050b 1902     		.2byte	0x219
 2304 050d 77000000 		.4byte	0x77
 2305 0511 AC       		.byte	0xac
 2306 0512 10       		.uleb128 0x10
 2307 0513 4A050000 		.4byte	.LASF68
 2308 0517 04       		.byte	0x4
 2309 0518 1E02     		.2byte	0x21e
 2310 051a E8020000 		.4byte	0x2e8
 2311 051e AE       		.byte	0xae
 2312 051f 00       		.byte	0
 2313 0520 0E       		.uleb128 0xe
 2314 0521 83000000 		.4byte	0x83
 2315 0525 30050000 		.4byte	0x530
 2316 0529 0F       		.uleb128 0xf
 2317 052a CD000000 		.4byte	0xcd
 2318 052e 00       		.byte	0
 2319 052f 00       		.byte	0
 2320 0530 0E       		.uleb128 0xe
 2321 0531 6B000000 		.4byte	0x6b
 2322 0535 40050000 		.4byte	0x540
 2323 0539 0F       		.uleb128 0xf
 2324 053a CD000000 		.4byte	0xcd
 2325 053e 03       		.byte	0x3
 2326 053f 00       		.byte	0
 2327 0540 04       		.uleb128 0x4
 2328 0541 2A070000 		.4byte	.LASF69
 2329 0545 04       		.byte	0x4
 2330 0546 1F02     		.2byte	0x21f
 2331 0548 2C040000 		.4byte	0x42c
 2332 054c 11       		.uleb128 0x11
 2333 054d 1C       		.byte	0x1c
 2334 054e 04       		.byte	0x4
 2335 054f 2502     		.2byte	0x225
 2336 0551 CB050000 		.4byte	0x5cb
 2337 0555 10       		.uleb128 0x10
 2338 0556 8A050000 		.4byte	.LASF70
 2339 055a 04       		.byte	0x4
 2340 055b 2A02     		.2byte	0x22a
 2341 055d CB050000 		.4byte	0x5cb
 2342 0561 00       		.byte	0
 2343 0562 10       		.uleb128 0x10
 2344 0563 A5040000 		.4byte	.LASF71
 2345 0567 04       		.byte	0x4
 2346 0568 2F02     		.2byte	0x22f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 83


 2347 056a CB050000 		.4byte	0x5cb
 2348 056e 04       		.byte	0x4
 2349 056f 10       		.uleb128 0x10
 2350 0570 84030000 		.4byte	.LASF72
 2351 0574 04       		.byte	0x4
 2352 0575 3402     		.2byte	0x234
 2353 0577 CB050000 		.4byte	0x5cb
 2354 057b 08       		.byte	0x8
 2355 057c 10       		.uleb128 0x10
 2356 057d 99070000 		.4byte	.LASF73
 2357 0581 04       		.byte	0x4
 2358 0582 3902     		.2byte	0x239
 2359 0584 CB050000 		.4byte	0x5cb
 2360 0588 0C       		.byte	0xc
 2361 0589 10       		.uleb128 0x10
 2362 058a 2A0A0000 		.4byte	.LASF74
 2363 058e 04       		.byte	0x4
 2364 058f 3E02     		.2byte	0x23e
 2365 0591 83000000 		.4byte	0x83
 2366 0595 10       		.byte	0x10
 2367 0596 10       		.uleb128 0x10
 2368 0597 DD050000 		.4byte	.LASF75
 2369 059b 04       		.byte	0x4
 2370 059c 4302     		.2byte	0x243
 2371 059e 83000000 		.4byte	0x83
 2372 05a2 14       		.byte	0x14
 2373 05a3 10       		.uleb128 0x10
 2374 05a4 36040000 		.4byte	.LASF76
 2375 05a8 04       		.byte	0x4
 2376 05a9 4802     		.2byte	0x248
 2377 05ab 6B000000 		.4byte	0x6b
 2378 05af 18       		.byte	0x18
 2379 05b0 10       		.uleb128 0x10
 2380 05b1 4D080000 		.4byte	.LASF77
 2381 05b5 04       		.byte	0x4
 2382 05b6 4D02     		.2byte	0x24d
 2383 05b8 6B000000 		.4byte	0x6b
 2384 05bc 19       		.byte	0x19
 2385 05bd 10       		.uleb128 0x10
 2386 05be 03020000 		.4byte	.LASF78
 2387 05c2 04       		.byte	0x4
 2388 05c3 5202     		.2byte	0x252
 2389 05c5 6B000000 		.4byte	0x6b
 2390 05c9 1A       		.byte	0x1a
 2391 05ca 00       		.byte	0
 2392 05cb 06       		.uleb128 0x6
 2393 05cc 04       		.byte	0x4
 2394 05cd AE000000 		.4byte	0xae
 2395 05d1 04       		.uleb128 0x4
 2396 05d2 09030000 		.4byte	.LASF79
 2397 05d6 04       		.byte	0x4
 2398 05d7 5302     		.2byte	0x253
 2399 05d9 4C050000 		.4byte	0x54c
 2400 05dd 11       		.uleb128 0x11
 2401 05de 28       		.byte	0x28
 2402 05df 04       		.byte	0x4
 2403 05e0 8602     		.2byte	0x286
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 84


 2404 05e2 9D060000 		.4byte	0x69d
 2405 05e6 10       		.uleb128 0x10
 2406 05e7 170B0000 		.4byte	.LASF80
 2407 05eb 04       		.byte	0x4
 2408 05ec 8F02     		.2byte	0x28f
 2409 05ee 9D060000 		.4byte	0x69d
 2410 05f2 00       		.byte	0
 2411 05f3 10       		.uleb128 0x10
 2412 05f4 E1090000 		.4byte	.LASF81
 2413 05f8 04       		.byte	0x4
 2414 05f9 9602     		.2byte	0x296
 2415 05fb D4000000 		.4byte	0xd4
 2416 05ff 04       		.byte	0x4
 2417 0600 10       		.uleb128 0x10
 2418 0601 A7060000 		.4byte	.LASF82
 2419 0605 04       		.byte	0x4
 2420 0606 9C02     		.2byte	0x29c
 2421 0608 A4060000 		.4byte	0x6a4
 2422 060c 08       		.byte	0x8
 2423 060d 10       		.uleb128 0x10
 2424 060e B5050000 		.4byte	.LASF83
 2425 0612 04       		.byte	0x4
 2426 0613 A202     		.2byte	0x2a2
 2427 0615 D4000000 		.4byte	0xd4
 2428 0619 0C       		.byte	0xc
 2429 061a 10       		.uleb128 0x10
 2430 061b 7C080000 		.4byte	.LASF84
 2431 061f 04       		.byte	0x4
 2432 0620 A902     		.2byte	0x2a9
 2433 0622 AA060000 		.4byte	0x6aa
 2434 0626 10       		.byte	0x10
 2435 0627 10       		.uleb128 0x10
 2436 0628 AA090000 		.4byte	.LASF85
 2437 062c 04       		.byte	0x4
 2438 062d AE02     		.2byte	0x2ae
 2439 062f 83000000 		.4byte	0x83
 2440 0633 14       		.byte	0x14
 2441 0634 10       		.uleb128 0x10
 2442 0635 FE030000 		.4byte	.LASF86
 2443 0639 04       		.byte	0x4
 2444 063a B502     		.2byte	0x2b5
 2445 063c 77000000 		.4byte	0x77
 2446 0640 18       		.byte	0x18
 2447 0641 10       		.uleb128 0x10
 2448 0642 48030000 		.4byte	.LASF87
 2449 0646 04       		.byte	0x4
 2450 0647 BC02     		.2byte	0x2bc
 2451 0649 6B000000 		.4byte	0x6b
 2452 064d 1A       		.byte	0x1a
 2453 064e 10       		.uleb128 0x10
 2454 064f B7090000 		.4byte	.LASF88
 2455 0653 04       		.byte	0x4
 2456 0654 C202     		.2byte	0x2c2
 2457 0656 6B000000 		.4byte	0x6b
 2458 065a 1B       		.byte	0x1b
 2459 065b 10       		.uleb128 0x10
 2460 065c B9040000 		.4byte	.LASF89
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 85


 2461 0660 04       		.byte	0x4
 2462 0661 CC02     		.2byte	0x2cc
 2463 0663 6B000000 		.4byte	0x6b
 2464 0667 1C       		.byte	0x1c
 2465 0668 10       		.uleb128 0x10
 2466 0669 220A0000 		.4byte	.LASF90
 2467 066d 04       		.byte	0x4
 2468 066e D402     		.2byte	0x2d4
 2469 0670 6B000000 		.4byte	0x6b
 2470 0674 1D       		.byte	0x1d
 2471 0675 10       		.uleb128 0x10
 2472 0676 FB060000 		.4byte	.LASF91
 2473 067a 04       		.byte	0x4
 2474 067b D902     		.2byte	0x2d9
 2475 067d 77000000 		.4byte	0x77
 2476 0681 1E       		.byte	0x1e
 2477 0682 10       		.uleb128 0x10
 2478 0683 8C080000 		.4byte	.LASF92
 2479 0687 04       		.byte	0x4
 2480 0688 E202     		.2byte	0x2e2
 2481 068a 83000000 		.4byte	0x83
 2482 068e 20       		.byte	0x20
 2483 068f 10       		.uleb128 0x10
 2484 0690 B7010000 		.4byte	.LASF93
 2485 0694 04       		.byte	0x4
 2486 0695 E702     		.2byte	0x2e7
 2487 0697 6B000000 		.4byte	0x6b
 2488 069b 24       		.byte	0x24
 2489 069c 00       		.byte	0
 2490 069d 06       		.uleb128 0x6
 2491 069e 04       		.byte	0x4
 2492 069f A3060000 		.4byte	0x6a3
 2493 06a3 13       		.uleb128 0x13
 2494 06a4 06       		.uleb128 0x6
 2495 06a5 04       		.byte	0x4
 2496 06a6 B6030000 		.4byte	0x3b6
 2497 06aa 06       		.uleb128 0x6
 2498 06ab 04       		.byte	0x4
 2499 06ac 6B000000 		.4byte	0x6b
 2500 06b0 04       		.uleb128 0x4
 2501 06b1 95030000 		.4byte	.LASF94
 2502 06b5 04       		.byte	0x4
 2503 06b6 E802     		.2byte	0x2e8
 2504 06b8 DD050000 		.4byte	0x5dd
 2505 06bc 11       		.uleb128 0x11
 2506 06bd A0       		.byte	0xa0
 2507 06be 04       		.byte	0x4
 2508 06bf EE02     		.2byte	0x2ee
 2509 06c1 D3060000 		.4byte	0x6d3
 2510 06c5 10       		.uleb128 0x10
 2511 06c6 AA0B0000 		.4byte	.LASF95
 2512 06ca 04       		.byte	0x4
 2513 06cb F302     		.2byte	0x2f3
 2514 06cd D3060000 		.4byte	0x6d3
 2515 06d1 00       		.byte	0
 2516 06d2 00       		.byte	0
 2517 06d3 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 86


 2518 06d4 B0060000 		.4byte	0x6b0
 2519 06d8 E3060000 		.4byte	0x6e3
 2520 06dc 0F       		.uleb128 0xf
 2521 06dd CD000000 		.4byte	0xcd
 2522 06e1 03       		.byte	0x3
 2523 06e2 00       		.byte	0
 2524 06e3 04       		.uleb128 0x4
 2525 06e4 17050000 		.4byte	.LASF96
 2526 06e8 04       		.byte	0x4
 2527 06e9 F402     		.2byte	0x2f4
 2528 06eb BC060000 		.4byte	0x6bc
 2529 06ef 14       		.uleb128 0x14
 2530 06f0 37000000 		.4byte	.LASF167
 2531 06f4 01       		.byte	0x1
 2532 06f5 5D05     		.2byte	0x55d
 2533 06f7 00000000 		.4byte	.LFB8
 2534 06fb 38000000 		.4byte	.LFE8-.LFB8
 2535 06ff 01       		.uleb128 0x1
 2536 0700 9C       		.byte	0x9c
 2537 0701 15       		.uleb128 0x15
 2538 0702 D2030000 		.4byte	.LASF168
 2539 0706 01       		.byte	0x1
 2540 0707 3707     		.2byte	0x737
 2541 0709 77000000 		.4byte	0x77
 2542 070d 00000000 		.4byte	.LFB16
 2543 0711 0C000000 		.4byte	.LFE16-.LFB16
 2544 0715 01       		.uleb128 0x1
 2545 0716 9C       		.byte	0x9c
 2546 0717 3C070000 		.4byte	0x73c
 2547 071b 16       		.uleb128 0x16
 2548 071c DD080000 		.4byte	.LASF107
 2549 0720 01       		.byte	0x1
 2550 0721 3707     		.2byte	0x737
 2551 0723 3C070000 		.4byte	0x73c
 2552 0727 00000000 		.4byte	.LLST0
 2553 072b 17       		.uleb128 0x17
 2554 072c 78070000 		.4byte	.LASF100
 2555 0730 01       		.byte	0x1
 2556 0731 3907     		.2byte	0x739
 2557 0733 83000000 		.4byte	0x83
 2558 0737 21000000 		.4byte	.LLST1
 2559 073b 00       		.byte	0
 2560 073c 06       		.uleb128 0x6
 2561 073d 04       		.byte	0x4
 2562 073e 42070000 		.4byte	0x742
 2563 0742 18       		.uleb128 0x18
 2564 0743 B5010000 		.4byte	0x1b5
 2565 0747 19       		.uleb128 0x19
 2566 0748 5C060000 		.4byte	.LASF169
 2567 074c 01       		.byte	0x1
 2568 074d DF07     		.2byte	0x7df
 2569 074f 03       		.byte	0x3
 2570 0750 79070000 		.4byte	0x779
 2571 0754 1A       		.uleb128 0x1a
 2572 0755 5A040000 		.4byte	.LASF97
 2573 0759 01       		.byte	0x1
 2574 075a E107     		.2byte	0x7e1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 87


 2575 075c 83000000 		.4byte	0x83
 2576 0760 1A       		.uleb128 0x1a
 2577 0761 9B020000 		.4byte	.LASF98
 2578 0765 01       		.byte	0x1
 2579 0766 E207     		.2byte	0x7e2
 2580 0768 83000000 		.4byte	0x83
 2581 076c 1A       		.uleb128 0x1a
 2582 076d 15060000 		.4byte	.LASF99
 2583 0771 01       		.byte	0x1
 2584 0772 E407     		.2byte	0x7e4
 2585 0774 83000000 		.4byte	0x83
 2586 0778 00       		.byte	0
 2587 0779 1B       		.uleb128 0x1b
 2588 077a CF010000 		.4byte	.LASF123
 2589 077e 01       		.byte	0x1
 2590 077f 2706     		.2byte	0x627
 2591 0781 00000000 		.4byte	.LFB10
 2592 0785 38010000 		.4byte	.LFE10-.LFB10
 2593 0789 01       		.uleb128 0x1
 2594 078a 9C       		.byte	0x9c
 2595 078b D6070000 		.4byte	0x7d6
 2596 078f 17       		.uleb128 0x17
 2597 0790 400A0000 		.4byte	.LASF101
 2598 0794 01       		.byte	0x1
 2599 0795 2906     		.2byte	0x629
 2600 0797 83000000 		.4byte	0x83
 2601 079b 45000000 		.4byte	.LLST2
 2602 079f 1C       		.uleb128 0x1c
 2603 07a0 47070000 		.4byte	0x747
 2604 07a4 1C000000 		.4byte	.LBB4
 2605 07a8 B4000000 		.4byte	.LBE4-.LBB4
 2606 07ac 01       		.byte	0x1
 2607 07ad 3C06     		.2byte	0x63c
 2608 07af 1D       		.uleb128 0x1d
 2609 07b0 1C000000 		.4byte	.LBB5
 2610 07b4 B4000000 		.4byte	.LBE5-.LBB5
 2611 07b8 1E       		.uleb128 0x1e
 2612 07b9 54070000 		.4byte	0x754
 2613 07bd 77000000 		.4byte	.LLST3
 2614 07c1 1E       		.uleb128 0x1e
 2615 07c2 60070000 		.4byte	0x760
 2616 07c6 8A000000 		.4byte	.LLST4
 2617 07ca 1E       		.uleb128 0x1e
 2618 07cb 6C070000 		.4byte	0x76c
 2619 07cf AB000000 		.4byte	.LLST5
 2620 07d3 00       		.byte	0
 2621 07d4 00       		.byte	0
 2622 07d5 00       		.byte	0
 2623 07d6 1F       		.uleb128 0x1f
 2624 07d7 CD090000 		.4byte	.LASF102
 2625 07db 01       		.byte	0x1
 2626 07dc 9807     		.2byte	0x798
 2627 07de 00000000 		.4byte	.LFB17
 2628 07e2 90000000 		.4byte	.LFE17-.LFB17
 2629 07e6 01       		.uleb128 0x1
 2630 07e7 9C       		.byte	0x9c
 2631 07e8 0F080000 		.4byte	0x80f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 88


 2632 07ec 20       		.uleb128 0x20
 2633 07ed 08000000 		.4byte	.LVL16
 2634 07f1 D30D0000 		.4byte	0xdd3
 2635 07f5 FF070000 		.4byte	0x7ff
 2636 07f9 21       		.uleb128 0x21
 2637 07fa 01       		.uleb128 0x1
 2638 07fb 50       		.byte	0x50
 2639 07fc 01       		.uleb128 0x1
 2640 07fd 3A       		.byte	0x3a
 2641 07fe 00       		.byte	0
 2642 07ff 22       		.uleb128 0x22
 2643 0800 62000000 		.4byte	.LVL18
 2644 0804 DE0D0000 		.4byte	0xdde
 2645 0808 21       		.uleb128 0x21
 2646 0809 01       		.uleb128 0x1
 2647 080a 50       		.byte	0x50
 2648 080b 01       		.uleb128 0x1
 2649 080c 3A       		.byte	0x3a
 2650 080d 00       		.byte	0
 2651 080e 00       		.byte	0
 2652 080f 23       		.uleb128 0x23
 2653 0810 98000000 		.4byte	.LASF103
 2654 0814 01       		.byte	0x1
 2655 0815 94       		.byte	0x94
 2656 0816 00000000 		.4byte	.LFB1
 2657 081a DC010000 		.4byte	.LFE1-.LFB1
 2658 081e 01       		.uleb128 0x1
 2659 081f 9C       		.byte	0x9c
 2660 0820 DD080000 		.4byte	0x8dd
 2661 0824 24       		.uleb128 0x24
 2662 0825 40010000 		.4byte	.LASF104
 2663 0829 01       		.byte	0x1
 2664 082a 97       		.byte	0x97
 2665 082b 6B000000 		.4byte	0x6b
 2666 082f BE000000 		.4byte	.LLST6
 2667 0833 24       		.uleb128 0x24
 2668 0834 400A0000 		.4byte	.LASF101
 2669 0838 01       		.byte	0x1
 2670 0839 98       		.byte	0x98
 2671 083a 83000000 		.4byte	0x83
 2672 083e 08010000 		.4byte	.LLST7
 2673 0842 25       		.uleb128 0x25
 2674 0843 5C000000 		.4byte	.LVL19
 2675 0847 E90D0000 		.4byte	0xde9
 2676 084b 25       		.uleb128 0x25
 2677 084c 70000000 		.4byte	.LVL23
 2678 0850 F40D0000 		.4byte	0xdf4
 2679 0854 25       		.uleb128 0x25
 2680 0855 82000000 		.4byte	.LVL24
 2681 0859 E90D0000 		.4byte	0xde9
 2682 085d 25       		.uleb128 0x25
 2683 085e 96000000 		.4byte	.LVL28
 2684 0862 F40D0000 		.4byte	0xdf4
 2685 0866 25       		.uleb128 0x25
 2686 0867 CA000000 		.4byte	.LVL29
 2687 086b FF0D0000 		.4byte	0xdff
 2688 086f 25       		.uleb128 0x25
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 89


 2689 0870 CE000000 		.4byte	.LVL30
 2690 0874 E90D0000 		.4byte	0xde9
 2691 0878 25       		.uleb128 0x25
 2692 0879 DC000000 		.4byte	.LVL33
 2693 087d F40D0000 		.4byte	0xdf4
 2694 0881 25       		.uleb128 0x25
 2695 0882 E0000000 		.4byte	.LVL34
 2696 0886 E90D0000 		.4byte	0xde9
 2697 088a 25       		.uleb128 0x25
 2698 088b EC000000 		.4byte	.LVL37
 2699 088f F40D0000 		.4byte	0xdf4
 2700 0893 25       		.uleb128 0x25
 2701 0894 F0000000 		.4byte	.LVL38
 2702 0898 E90D0000 		.4byte	0xde9
 2703 089c 25       		.uleb128 0x25
 2704 089d 04010000 		.4byte	.LVL42
 2705 08a1 F40D0000 		.4byte	0xdf4
 2706 08a5 25       		.uleb128 0x25
 2707 08a6 08010000 		.4byte	.LVL43
 2708 08aa E90D0000 		.4byte	0xde9
 2709 08ae 25       		.uleb128 0x25
 2710 08af 1A010000 		.4byte	.LVL47
 2711 08b3 F40D0000 		.4byte	0xdf4
 2712 08b7 25       		.uleb128 0x25
 2713 08b8 22010000 		.4byte	.LVL48
 2714 08bc 0A0E0000 		.4byte	0xe0a
 2715 08c0 25       		.uleb128 0x25
 2716 08c1 26010000 		.4byte	.LVL49
 2717 08c5 150E0000 		.4byte	0xe15
 2718 08c9 22       		.uleb128 0x22
 2719 08ca 2C010000 		.4byte	.LVL50
 2720 08ce 200E0000 		.4byte	0xe20
 2721 08d2 21       		.uleb128 0x21
 2722 08d3 01       		.uleb128 0x1
 2723 08d4 50       		.byte	0x50
 2724 08d5 05       		.uleb128 0x5
 2725 08d6 03       		.byte	0x3
 2726 08d7 00000000 		.4byte	CapSense_CSXScanISR
 2727 08db 00       		.byte	0
 2728 08dc 00       		.byte	0
 2729 08dd 26       		.uleb128 0x26
 2730 08de AF000000 		.4byte	.LASF105
 2731 08e2 01       		.byte	0x1
 2732 08e3 6603     		.2byte	0x366
 2733 08e5 00000000 		.4byte	.LFB6
 2734 08e9 1C000000 		.4byte	.LFE6-.LFB6
 2735 08ed 01       		.uleb128 0x1
 2736 08ee 9C       		.byte	0x9c
 2737 08ef 10090000 		.4byte	0x910
 2738 08f3 20       		.uleb128 0x20
 2739 08f4 12000000 		.4byte	.LVL51
 2740 08f8 2B0E0000 		.4byte	0xe2b
 2741 08fc 06090000 		.4byte	0x906
 2742 0900 21       		.uleb128 0x21
 2743 0901 01       		.uleb128 0x1
 2744 0902 50       		.byte	0x50
 2745 0903 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 90


 2746 0904 47       		.byte	0x47
 2747 0905 00       		.byte	0
 2748 0906 25       		.uleb128 0x25
 2749 0907 16000000 		.4byte	.LVL52
 2750 090b 79070000 		.4byte	0x779
 2751 090f 00       		.byte	0
 2752 0910 1F       		.uleb128 0x1f
 2753 0911 E2050000 		.4byte	.LASF106
 2754 0915 01       		.byte	0x1
 2755 0916 B205     		.2byte	0x5b2
 2756 0918 00000000 		.4byte	.LFB9
 2757 091c D4000000 		.4byte	.LFE9-.LFB9
 2758 0920 01       		.uleb128 0x1
 2759 0921 9C       		.byte	0x9c
 2760 0922 CA090000 		.4byte	0x9ca
 2761 0926 16       		.uleb128 0x16
 2762 0927 5D0B0000 		.4byte	.LASF108
 2763 092b 01       		.byte	0x1
 2764 092c B205     		.2byte	0x5b2
 2765 092e 83000000 		.4byte	0x83
 2766 0932 94010000 		.4byte	.LLST8
 2767 0936 16       		.uleb128 0x16
 2768 0937 7D030000 		.4byte	.LASF109
 2769 093b 01       		.byte	0x1
 2770 093c B205     		.2byte	0x5b2
 2771 093e 77000000 		.4byte	0x77
 2772 0942 BE010000 		.4byte	.LLST9
 2773 0946 17       		.uleb128 0x17
 2774 0947 B4070000 		.4byte	.LASF110
 2775 094b 01       		.byte	0x1
 2776 094c B505     		.2byte	0x5b5
 2777 094e 83000000 		.4byte	0x83
 2778 0952 DF010000 		.4byte	.LLST10
 2779 0956 17       		.uleb128 0x17
 2780 0957 0A040000 		.4byte	.LASF111
 2781 095b 01       		.byte	0x1
 2782 095c B705     		.2byte	0x5b7
 2783 095e 83000000 		.4byte	0x83
 2784 0962 0E020000 		.4byte	.LLST11
 2785 0966 17       		.uleb128 0x17
 2786 0967 E5080000 		.4byte	.LASF112
 2787 096b 01       		.byte	0x1
 2788 096c B905     		.2byte	0x5b9
 2789 096e 83000000 		.4byte	0x83
 2790 0972 21020000 		.4byte	.LLST12
 2791 0976 17       		.uleb128 0x17
 2792 0977 F1010000 		.4byte	.LASF113
 2793 097b 01       		.byte	0x1
 2794 097c BC05     		.2byte	0x5bc
 2795 097e 6B000000 		.4byte	0x6b
 2796 0982 57020000 		.4byte	.LLST13
 2797 0986 17       		.uleb128 0x17
 2798 0987 10010000 		.4byte	.LASF114
 2799 098b 01       		.byte	0x1
 2800 098c BE05     		.2byte	0x5be
 2801 098e 6B000000 		.4byte	0x6b
 2802 0992 8D020000 		.4byte	.LLST14
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 91


 2803 0996 20       		.uleb128 0x20
 2804 0997 28000000 		.4byte	.LVL56
 2805 099b 01070000 		.4byte	0x701
 2806 099f AB090000 		.4byte	0x9ab
 2807 09a3 21       		.uleb128 0x21
 2808 09a4 01       		.uleb128 0x1
 2809 09a5 50       		.byte	0x50
 2810 09a6 03       		.uleb128 0x3
 2811 09a7 74       		.byte	0x74
 2812 09a8 04       		.sleb128 4
 2813 09a9 06       		.byte	0x6
 2814 09aa 00       		.byte	0
 2815 09ab 20       		.uleb128 0x20
 2816 09ac 7C000000 		.4byte	.LVL66
 2817 09b0 360E0000 		.4byte	0xe36
 2818 09b4 C0090000 		.4byte	0x9c0
 2819 09b8 21       		.uleb128 0x21
 2820 09b9 01       		.uleb128 0x1
 2821 09ba 50       		.byte	0x50
 2822 09bb 03       		.uleb128 0x3
 2823 09bc 91       		.byte	0x91
 2824 09bd 64       		.sleb128 -28
 2825 09be 06       		.byte	0x6
 2826 09bf 00       		.byte	0
 2827 09c0 25       		.uleb128 0x25
 2828 09c1 80000000 		.4byte	.LVL67
 2829 09c5 410E0000 		.4byte	0xe41
 2830 09c9 00       		.byte	0
 2831 09ca 26       		.uleb128 0x26
 2832 09cb 32030000 		.4byte	.LASF115
 2833 09cf 01       		.byte	0x1
 2834 09d0 8106     		.2byte	0x681
 2835 09d2 00000000 		.4byte	.LFB11
 2836 09d6 20000000 		.4byte	.LFE11-.LFB11
 2837 09da 01       		.uleb128 0x1
 2838 09db 9C       		.byte	0x9c
 2839 09dc 010A0000 		.4byte	0xa01
 2840 09e0 16       		.uleb128 0x16
 2841 09e1 3A010000 		.4byte	.LASF116
 2842 09e5 01       		.byte	0x1
 2843 09e6 8106     		.2byte	0x681
 2844 09e8 010A0000 		.4byte	0xa01
 2845 09ec C3020000 		.4byte	.LLST15
 2846 09f0 17       		.uleb128 0x17
 2847 09f1 31010000 		.4byte	.LASF117
 2848 09f5 01       		.byte	0x1
 2849 09f6 8306     		.2byte	0x683
 2850 09f8 83000000 		.4byte	0x83
 2851 09fc E4020000 		.4byte	.LLST16
 2852 0a00 00       		.byte	0
 2853 0a01 06       		.uleb128 0x6
 2854 0a02 04       		.byte	0x4
 2855 0a03 070A0000 		.4byte	0xa07
 2856 0a07 18       		.uleb128 0x18
 2857 0a08 D1050000 		.4byte	0x5d1
 2858 0a0c 26       		.uleb128 0x26
 2859 0a0d 57010000 		.4byte	.LASF118
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 92


 2860 0a11 01       		.byte	0x1
 2861 0a12 A306     		.2byte	0x6a3
 2862 0a14 00000000 		.4byte	.LFB12
 2863 0a18 20000000 		.4byte	.LFE12-.LFB12
 2864 0a1c 01       		.uleb128 0x1
 2865 0a1d 9C       		.byte	0x9c
 2866 0a1e 430A0000 		.4byte	0xa43
 2867 0a22 16       		.uleb128 0x16
 2868 0a23 76080000 		.4byte	.LASF119
 2869 0a27 01       		.byte	0x1
 2870 0a28 A306     		.2byte	0x6a3
 2871 0a2a 010A0000 		.4byte	0xa01
 2872 0a2e 18030000 		.4byte	.LLST17
 2873 0a32 17       		.uleb128 0x17
 2874 0a33 31010000 		.4byte	.LASF117
 2875 0a37 01       		.byte	0x1
 2876 0a38 A506     		.2byte	0x6a5
 2877 0a3a 83000000 		.4byte	0x83
 2878 0a3e 39030000 		.4byte	.LLST18
 2879 0a42 00       		.byte	0
 2880 0a43 26       		.uleb128 0x26
 2881 0a44 4A0A0000 		.4byte	.LASF120
 2882 0a48 01       		.byte	0x1
 2883 0a49 8502     		.2byte	0x285
 2884 0a4b 00000000 		.4byte	.LFB5
 2885 0a4f 6C000000 		.4byte	.LFE5-.LFB5
 2886 0a53 01       		.uleb128 0x1
 2887 0a54 9C       		.byte	0x9c
 2888 0a55 880A0000 		.4byte	0xa88
 2889 0a59 25       		.uleb128 0x25
 2890 0a5a 2E000000 		.4byte	.LVL87
 2891 0a5e CA090000 		.4byte	0x9ca
 2892 0a62 25       		.uleb128 0x25
 2893 0a63 34000000 		.4byte	.LVL88
 2894 0a67 0C0A0000 		.4byte	0xa0c
 2895 0a6b 20       		.uleb128 0x20
 2896 0a6c 4A000000 		.4byte	.LVL89
 2897 0a70 2B0E0000 		.4byte	0xe2b
 2898 0a74 7E0A0000 		.4byte	0xa7e
 2899 0a78 21       		.uleb128 0x21
 2900 0a79 01       		.uleb128 0x1
 2901 0a7a 50       		.byte	0x50
 2902 0a7b 01       		.uleb128 0x1
 2903 0a7c 47       		.byte	0x47
 2904 0a7d 00       		.byte	0
 2905 0a7e 25       		.uleb128 0x25
 2906 0a7f 4E000000 		.4byte	.LVL90
 2907 0a83 79070000 		.4byte	0x779
 2908 0a87 00       		.byte	0
 2909 0a88 26       		.uleb128 0x26
 2910 0a89 C1040000 		.4byte	.LASF121
 2911 0a8d 01       		.byte	0x1
 2912 0a8e C606     		.2byte	0x6c6
 2913 0a90 00000000 		.4byte	.LFB13
 2914 0a94 0C000000 		.4byte	.LFE13-.LFB13
 2915 0a98 01       		.uleb128 0x1
 2916 0a99 9C       		.byte	0x9c
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 93


 2917 0a9a BB0A0000 		.4byte	0xabb
 2918 0a9e 27       		.uleb128 0x27
 2919 0a9f 3A010000 		.4byte	.LASF116
 2920 0aa3 01       		.byte	0x1
 2921 0aa4 C606     		.2byte	0x6c6
 2922 0aa6 010A0000 		.4byte	0xa01
 2923 0aaa 01       		.uleb128 0x1
 2924 0aab 50       		.byte	0x50
 2925 0aac 28       		.uleb128 0x28
 2926 0aad 31010000 		.4byte	.LASF117
 2927 0ab1 01       		.byte	0x1
 2928 0ab2 C806     		.2byte	0x6c8
 2929 0ab4 83000000 		.4byte	0x83
 2930 0ab8 01       		.uleb128 0x1
 2931 0ab9 53       		.byte	0x53
 2932 0aba 00       		.byte	0
 2933 0abb 26       		.uleb128 0x26
 2934 0abc B9030000 		.4byte	.LASF122
 2935 0ac0 01       		.byte	0x1
 2936 0ac1 E506     		.2byte	0x6e5
 2937 0ac3 00000000 		.4byte	.LFB14
 2938 0ac7 2E000000 		.4byte	.LFE14-.LFB14
 2939 0acb 01       		.uleb128 0x1
 2940 0acc 9C       		.byte	0x9c
 2941 0acd F00A0000 		.4byte	0xaf0
 2942 0ad1 27       		.uleb128 0x27
 2943 0ad2 76080000 		.4byte	.LASF119
 2944 0ad6 01       		.byte	0x1
 2945 0ad7 E506     		.2byte	0x6e5
 2946 0ad9 010A0000 		.4byte	0xa01
 2947 0add 01       		.uleb128 0x1
 2948 0ade 50       		.byte	0x50
 2949 0adf 17       		.uleb128 0x17
 2950 0ae0 31010000 		.4byte	.LASF117
 2951 0ae4 01       		.byte	0x1
 2952 0ae5 E706     		.2byte	0x6e7
 2953 0ae7 83000000 		.4byte	0x83
 2954 0aeb 62030000 		.4byte	.LLST19
 2955 0aef 00       		.byte	0
 2956 0af0 29       		.uleb128 0x29
 2957 0af1 8E090000 		.4byte	.LASF124
 2958 0af5 01       		.byte	0x1
 2959 0af6 9303     		.2byte	0x393
 2960 0af8 00000000 		.4byte	.LFB7
 2961 0afc DC000000 		.4byte	.LFE7-.LFB7
 2962 0b00 01       		.uleb128 0x1
 2963 0b01 9C       		.byte	0x9c
 2964 0b02 580B0000 		.4byte	0xb58
 2965 0b06 25       		.uleb128 0x25
 2966 0b07 1C000000 		.4byte	.LVL103
 2967 0b0b 880A0000 		.4byte	0xa88
 2968 0b0f 25       		.uleb128 0x25
 2969 0b10 3E000000 		.4byte	.LVL104
 2970 0b14 CA090000 		.4byte	0x9ca
 2971 0b18 25       		.uleb128 0x25
 2972 0b19 4A000000 		.4byte	.LVL105
 2973 0b1d 79070000 		.4byte	0x779
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 94


 2974 0b21 25       		.uleb128 0x25
 2975 0b22 62000000 		.4byte	.LVL106
 2976 0b26 BB0A0000 		.4byte	0xabb
 2977 0b2a 25       		.uleb128 0x25
 2978 0b2b 6C000000 		.4byte	.LVL107
 2979 0b2f 0C0A0000 		.4byte	0xa0c
 2980 0b33 25       		.uleb128 0x25
 2981 0b34 88000000 		.4byte	.LVL108
 2982 0b38 CA090000 		.4byte	0x9ca
 2983 0b3c 25       		.uleb128 0x25
 2984 0b3d 94000000 		.4byte	.LVL109
 2985 0b41 79070000 		.4byte	0x779
 2986 0b45 25       		.uleb128 0x25
 2987 0b46 9E000000 		.4byte	.LVL110
 2988 0b4a BB0A0000 		.4byte	0xabb
 2989 0b4e 25       		.uleb128 0x25
 2990 0b4f AA000000 		.4byte	.LVL111
 2991 0b53 4C0E0000 		.4byte	0xe4c
 2992 0b57 00       		.byte	0
 2993 0b58 26       		.uleb128 0x26
 2994 0b59 93050000 		.4byte	.LASF125
 2995 0b5d 01       		.byte	0x1
 2996 0b5e 3B01     		.2byte	0x13b
 2997 0b60 00000000 		.4byte	.LFB2
 2998 0b64 24000000 		.4byte	.LFE2-.LFB2
 2999 0b68 01       		.uleb128 0x1
 3000 0b69 9C       		.byte	0x9c
 3001 0b6a 810B0000 		.4byte	0xb81
 3002 0b6e 25       		.uleb128 0x25
 3003 0b6f 12000000 		.4byte	.LVL112
 3004 0b73 880A0000 		.4byte	0xa88
 3005 0b77 25       		.uleb128 0x25
 3006 0b78 18000000 		.4byte	.LVL113
 3007 0b7c BB0A0000 		.4byte	0xabb
 3008 0b80 00       		.byte	0
 3009 0b81 26       		.uleb128 0x26
 3010 0b82 B3020000 		.4byte	.LASF126
 3011 0b86 01       		.byte	0x1
 3012 0b87 9601     		.2byte	0x196
 3013 0b89 00000000 		.4byte	.LFB3
 3014 0b8d 6C000000 		.4byte	.LFE3-.LFB3
 3015 0b91 01       		.uleb128 0x1
 3016 0b92 9C       		.byte	0x9c
 3017 0b93 110C0000 		.4byte	0xc11
 3018 0b97 16       		.uleb128 0x16
 3019 0b98 5D0B0000 		.4byte	.LASF108
 3020 0b9c 01       		.byte	0x1
 3021 0b9d 9601     		.2byte	0x196
 3022 0b9f 83000000 		.4byte	0x83
 3023 0ba3 8B030000 		.4byte	.LLST20
 3024 0ba7 17       		.uleb128 0x17
 3025 0ba8 E70A0000 		.4byte	.LASF127
 3026 0bac 01       		.byte	0x1
 3027 0bad 9901     		.2byte	0x199
 3028 0baf 110C0000 		.4byte	0xc11
 3029 0bb3 B7030000 		.4byte	.LLST21
 3030 0bb7 17       		.uleb128 0x17
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 95


 3031 0bb8 400A0000 		.4byte	.LASF101
 3032 0bbc 01       		.byte	0x1
 3033 0bbd 9C01     		.2byte	0x19c
 3034 0bbf 83000000 		.4byte	0x83
 3035 0bc3 CA030000 		.4byte	.LLST22
 3036 0bc7 17       		.uleb128 0x17
 3037 0bc8 51030000 		.4byte	.LASF128
 3038 0bcc 01       		.byte	0x1
 3039 0bcd 9D01     		.2byte	0x19d
 3040 0bcf 83000000 		.4byte	0x83
 3041 0bd3 FA030000 		.4byte	.LLST23
 3042 0bd7 20       		.uleb128 0x20
 3043 0bd8 10000000 		.4byte	.LVL116
 3044 0bdc 570E0000 		.4byte	0xe57
 3045 0be0 EA0B0000 		.4byte	0xbea
 3046 0be4 21       		.uleb128 0x21
 3047 0be5 01       		.uleb128 0x1
 3048 0be6 50       		.byte	0x50
 3049 0be7 01       		.uleb128 0x1
 3050 0be8 32       		.byte	0x32
 3051 0be9 00       		.byte	0
 3052 0bea 25       		.uleb128 0x25
 3053 0beb 14000000 		.4byte	.LVL117
 3054 0bef 580B0000 		.4byte	0xb58
 3055 0bf3 20       		.uleb128 0x20
 3056 0bf4 32000000 		.4byte	.LVL121
 3057 0bf8 01070000 		.4byte	0x701
 3058 0bfc 070C0000 		.4byte	0xc07
 3059 0c00 21       		.uleb128 0x21
 3060 0c01 01       		.uleb128 0x1
 3061 0c02 50       		.byte	0x50
 3062 0c03 02       		.uleb128 0x2
 3063 0c04 75       		.byte	0x75
 3064 0c05 00       		.sleb128 0
 3065 0c06 00       		.byte	0
 3066 0c07 25       		.uleb128 0x25
 3067 0c08 4E000000 		.4byte	.LVL128
 3068 0c0c 0A0E0000 		.4byte	0xe0a
 3069 0c10 00       		.byte	0
 3070 0c11 06       		.uleb128 0x6
 3071 0c12 04       		.byte	0x4
 3072 0c13 B5010000 		.4byte	0x1b5
 3073 0c17 1F       		.uleb128 0x1f
 3074 0c18 25060000 		.4byte	.LASF129
 3075 0c1c 01       		.byte	0x1
 3076 0c1d 0402     		.2byte	0x204
 3077 0c1f 00000000 		.4byte	.LFB4
 3078 0c23 84000000 		.4byte	.LFE4-.LFB4
 3079 0c27 01       		.uleb128 0x1
 3080 0c28 9C       		.byte	0x9c
 3081 0c29 950C0000 		.4byte	0xc95
 3082 0c2d 16       		.uleb128 0x16
 3083 0c2e 5D0B0000 		.4byte	.LASF108
 3084 0c32 01       		.byte	0x1
 3085 0c33 0402     		.2byte	0x204
 3086 0c35 83000000 		.4byte	0x83
 3087 0c39 25040000 		.4byte	.LLST24
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 96


 3088 0c3d 16       		.uleb128 0x16
 3089 0c3e C6010000 		.4byte	.LASF130
 3090 0c42 01       		.byte	0x1
 3091 0c43 0402     		.2byte	0x204
 3092 0c45 83000000 		.4byte	0x83
 3093 0c49 46040000 		.4byte	.LLST25
 3094 0c4d 17       		.uleb128 0x17
 3095 0c4e AB020000 		.4byte	.LASF131
 3096 0c52 01       		.byte	0x1
 3097 0c53 0602     		.2byte	0x206
 3098 0c55 83000000 		.4byte	0x83
 3099 0c59 72040000 		.4byte	.LLST26
 3100 0c5d 17       		.uleb128 0x17
 3101 0c5e 4F010000 		.4byte	.LASF132
 3102 0c62 01       		.byte	0x1
 3103 0c63 0702     		.2byte	0x207
 3104 0c65 83000000 		.4byte	0x83
 3105 0c69 85040000 		.4byte	.LLST27
 3106 0c6d 20       		.uleb128 0x20
 3107 0c6e 08000000 		.4byte	.LVL132
 3108 0c72 810B0000 		.4byte	0xb81
 3109 0c76 820C0000 		.4byte	0xc82
 3110 0c7a 21       		.uleb128 0x21
 3111 0c7b 01       		.uleb128 0x1
 3112 0c7c 50       		.byte	0x50
 3113 0c7d 03       		.uleb128 0x3
 3114 0c7e F3       		.byte	0xf3
 3115 0c7f 01       		.uleb128 0x1
 3116 0c80 50       		.byte	0x50
 3117 0c81 00       		.byte	0
 3118 0c82 25       		.uleb128 0x25
 3119 0c83 58000000 		.4byte	.LVL139
 3120 0c87 CA090000 		.4byte	0x9ca
 3121 0c8b 25       		.uleb128 0x25
 3122 0c8c 5E000000 		.4byte	.LVL140
 3123 0c90 0C0A0000 		.4byte	0xa0c
 3124 0c94 00       		.byte	0
 3125 0c95 2A       		.uleb128 0x2a
 3126 0c96 DD060000 		.4byte	.LASF170
 3127 0c9a 01       		.byte	0x1
 3128 0c9b 0C07     		.2byte	0x70c
 3129 0c9d 83000000 		.4byte	0x83
 3130 0ca1 00000000 		.4byte	.LFB15
 3131 0ca5 14000000 		.4byte	.LFE15-.LFB15
 3132 0ca9 01       		.uleb128 0x1
 3133 0caa 9C       		.byte	0x9c
 3134 0cab DC0C0000 		.4byte	0xcdc
 3135 0caf 16       		.uleb128 0x16
 3136 0cb0 5D0B0000 		.4byte	.LASF108
 3137 0cb4 01       		.byte	0x1
 3138 0cb5 0C07     		.2byte	0x70c
 3139 0cb7 83000000 		.4byte	0x83
 3140 0cbb A3040000 		.4byte	.LLST28
 3141 0cbf 28       		.uleb128 0x28
 3142 0cc0 67080000 		.4byte	.LASF133
 3143 0cc4 01       		.byte	0x1
 3144 0cc5 0E07     		.2byte	0x70e
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 97


 3145 0cc7 83000000 		.4byte	0x83
 3146 0ccb 01       		.uleb128 0x1
 3147 0ccc 50       		.byte	0x50
 3148 0ccd 28       		.uleb128 0x28
 3149 0cce E9010000 		.4byte	.LASF134
 3150 0cd2 01       		.byte	0x1
 3151 0cd3 1207     		.2byte	0x712
 3152 0cd5 110C0000 		.4byte	0xc11
 3153 0cd9 01       		.uleb128 0x1
 3154 0cda 53       		.byte	0x53
 3155 0cdb 00       		.byte	0
 3156 0cdc 2B       		.uleb128 0x2b
 3157 0cdd B2060000 		.4byte	.LASF135
 3158 0ce1 01       		.byte	0x1
 3159 0ce2 49       		.byte	0x49
 3160 0ce3 010A0000 		.4byte	0xa01
 3161 0ce7 05       		.uleb128 0x5
 3162 0ce8 03       		.byte	0x3
 3163 0ce9 0C000000 		.4byte	CapSense_curTxIOPtr
 3164 0ced 2B       		.uleb128 0x2b
 3165 0cee E5040000 		.4byte	.LASF136
 3166 0cf2 01       		.byte	0x1
 3167 0cf3 4B       		.byte	0x4b
 3168 0cf4 010A0000 		.4byte	0xa01
 3169 0cf8 05       		.uleb128 0x5
 3170 0cf9 03       		.byte	0x3
 3171 0cfa 08000000 		.4byte	CapSense_curRxIOPtr
 3172 0cfe 2B       		.uleb128 0x2b
 3173 0cff C5050000 		.4byte	.LASF137
 3174 0d03 01       		.byte	0x1
 3175 0d04 4D       		.byte	0x4d
 3176 0d05 77000000 		.4byte	0x77
 3177 0d09 05       		.uleb128 0x5
 3178 0d0a 03       		.byte	0x3
 3179 0d0b 06000000 		.4byte	CapSense_curWdgtTotalRx
 3180 0d0f 2B       		.uleb128 0x2b
 3181 0d10 57070000 		.4byte	.LASF138
 3182 0d14 01       		.byte	0x1
 3183 0d15 4F       		.byte	0x4f
 3184 0d16 77000000 		.4byte	0x77
 3185 0d1a 05       		.uleb128 0x5
 3186 0d1b 03       		.byte	0x3
 3187 0d1c 04000000 		.4byte	CapSense_curWdgtTotalTx
 3188 0d20 2B       		.uleb128 0x2b
 3189 0d21 19000000 		.4byte	.LASF139
 3190 0d25 01       		.byte	0x1
 3191 0d26 51       		.byte	0x51
 3192 0d27 77000000 		.4byte	0x77
 3193 0d2b 05       		.uleb128 0x5
 3194 0d2c 03       		.byte	0x3
 3195 0d2d 10000000 		.4byte	CapSense_eleCsxDisconnectFlag
 3196 0d31 2C       		.uleb128 0x2c
 3197 0d32 3B050000 		.4byte	.LASF140
 3198 0d36 04       		.byte	0x4
 3199 0d37 8804     		.2byte	0x488
 3200 0d39 40050000 		.4byte	0x540
 3201 0d3d 2C       		.uleb128 0x2c
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 98


 3202 0d3e EE070000 		.4byte	.LASF141
 3203 0d42 04       		.byte	0x4
 3204 0d43 8904     		.2byte	0x489
 3205 0d45 490D0000 		.4byte	0xd49
 3206 0d49 18       		.uleb128 0x18
 3207 0d4a E3060000 		.4byte	0x6e3
 3208 0d4e 2D       		.uleb128 0x2d
 3209 0d4f FE050000 		.4byte	.LASF142
 3210 0d53 01       		.byte	0x1
 3211 0d54 40       		.byte	0x40
 3212 0d55 A9000000 		.4byte	0xa9
 3213 0d59 05       		.uleb128 0x5
 3214 0d5a 03       		.byte	0x3
 3215 0d5b 00000000 		.4byte	CapSense_csxScanPeriod
 3216 0d5f 2D       		.uleb128 0x2d
 3217 0d60 02050000 		.4byte	.LASF143
 3218 0d64 01       		.byte	0x1
 3219 0d65 42       		.byte	0x42
 3220 0d66 A9000000 		.4byte	0xa9
 3221 0d6a 05       		.uleb128 0x5
 3222 0d6b 03       		.byte	0x3
 3223 0d6c 00000000 		.4byte	CapSense_csxRawCount
 3224 0d70 2D       		.uleb128 0x2d
 3225 0d71 F5000000 		.4byte	.LASF144
 3226 0d75 01       		.byte	0x1
 3227 0d76 73       		.byte	0x73
 3228 0d77 BF000000 		.4byte	0xbf
 3229 0d7b 05       		.uleb128 0x5
 3230 0d7c 03       		.byte	0x3
 3231 0d7d 00000000 		.4byte	CapSense_CSXPostScanApiPtr
 3232 0d81 2E       		.uleb128 0x2e
 3233 0d82 3F0B0000 		.4byte	.LASF145
 3234 0d86 05       		.byte	0x5
 3235 0d87 9D       		.byte	0x9d
 3236 0d88 A4000000 		.4byte	0xa4
 3237 0d8c 2E       		.uleb128 0x2e
 3238 0d8d F4020000 		.4byte	.LASF146
 3239 0d91 05       		.byte	0x5
 3240 0d92 9E       		.byte	0x9e
 3241 0d93 A4000000 		.4byte	0xa4
 3242 0d97 2E       		.uleb128 0x2e
 3243 0d98 660B0000 		.4byte	.LASF147
 3244 0d9c 05       		.byte	0x5
 3245 0d9d 9F       		.byte	0x9f
 3246 0d9e 6B000000 		.4byte	0x6b
 3247 0da2 2E       		.uleb128 0x2e
 3248 0da3 960A0000 		.4byte	.LASF148
 3249 0da7 05       		.byte	0x5
 3250 0da8 A1       		.byte	0xa1
 3251 0da9 A4060000 		.4byte	0x6a4
 3252 0dad 2E       		.uleb128 0x2e
 3253 0dae B80A0000 		.4byte	.LASF149
 3254 0db2 05       		.byte	0x5
 3255 0db3 A8       		.byte	0xa8
 3256 0db4 B80D0000 		.4byte	0xdb8
 3257 0db8 18       		.uleb128 0x18
 3258 0db9 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 99


 3259 0dbd 2E       		.uleb128 0x2e
 3260 0dbe 00000000 		.4byte	.LASF150
 3261 0dc2 05       		.byte	0x5
 3262 0dc3 AE       		.byte	0xae
 3263 0dc4 C80D0000 		.4byte	0xdc8
 3264 0dc8 06       		.uleb128 0x6
 3265 0dc9 04       		.byte	0x4
 3266 0dca CE0D0000 		.4byte	0xdce
 3267 0dce 18       		.uleb128 0x18
 3268 0dcf B0060000 		.4byte	0x6b0
 3269 0dd3 2F       		.uleb128 0x2f
 3270 0dd4 6D010000 		.4byte	.LASF151
 3271 0dd8 6D010000 		.4byte	.LASF151
 3272 0ddc 06       		.byte	0x6
 3273 0ddd C5       		.byte	0xc5
 3274 0dde 2F       		.uleb128 0x2f
 3275 0ddf 340A0000 		.4byte	.LASF152
 3276 0de3 340A0000 		.4byte	.LASF152
 3277 0de7 06       		.byte	0x6
 3278 0de8 C3       		.byte	0xc3
 3279 0de9 2F       		.uleb128 0x2f
 3280 0dea 7F0A0000 		.4byte	.LASF153
 3281 0dee 7F0A0000 		.4byte	.LASF153
 3282 0df2 06       		.byte	0x6
 3283 0df3 E5       		.byte	0xe5
 3284 0df4 2F       		.uleb128 0x2f
 3285 0df5 20040000 		.4byte	.LASF154
 3286 0df9 20040000 		.4byte	.LASF154
 3287 0dfd 06       		.byte	0x6
 3288 0dfe E6       		.byte	0xe6
 3289 0dff 2F       		.uleb128 0x2f
 3290 0e00 74000000 		.4byte	.LASF155
 3291 0e04 74000000 		.4byte	.LASF155
 3292 0e08 05       		.byte	0x5
 3293 0e09 93       		.byte	0x93
 3294 0e0a 2F       		.uleb128 0x2f
 3295 0e0b 7A010000 		.4byte	.LASF156
 3296 0e0f 7A010000 		.4byte	.LASF156
 3297 0e13 05       		.byte	0x5
 3298 0e14 68       		.byte	0x68
 3299 0e15 2F       		.uleb128 0x2f
 3300 0e16 54000000 		.4byte	.LASF157
 3301 0e1a 54000000 		.4byte	.LASF157
 3302 0e1e 05       		.byte	0x5
 3303 0e1f 6D       		.byte	0x6d
 3304 0e20 2F       		.uleb128 0x2f
 3305 0e21 07070000 		.4byte	.LASF158
 3306 0e25 07070000 		.4byte	.LASF158
 3307 0e29 05       		.byte	0x5
 3308 0e2a 6B       		.byte	0x6b
 3309 0e2b 2F       		.uleb128 0x2f
 3310 0e2c CB020000 		.4byte	.LASF159
 3311 0e30 CB020000 		.4byte	.LASF159
 3312 0e34 06       		.byte	0x6
 3313 0e35 DA       		.byte	0xda
 3314 0e36 2F       		.uleb128 0x2f
 3315 0e37 9F070000 		.4byte	.LASF160
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 100


 3316 0e3b 9F070000 		.4byte	.LASF160
 3317 0e3f 05       		.byte	0x5
 3318 0e40 49       		.byte	0x49
 3319 0e41 2F       		.uleb128 0x2f
 3320 0e42 2D050000 		.4byte	.LASF161
 3321 0e46 2D050000 		.4byte	.LASF161
 3322 0e4a 05       		.byte	0x5
 3323 0e4b 4A       		.byte	0x4a
 3324 0e4c 2F       		.uleb128 0x2f
 3325 0e4d F90A0000 		.4byte	.LASF162
 3326 0e51 F90A0000 		.4byte	.LASF162
 3327 0e55 05       		.byte	0x5
 3328 0e56 6C       		.byte	0x6c
 3329 0e57 2F       		.uleb128 0x2f
 3330 0e58 620A0000 		.4byte	.LASF163
 3331 0e5c 620A0000 		.4byte	.LASF163
 3332 0e60 05       		.byte	0x5
 3333 0e61 6E       		.byte	0x6e
 3334 0e62 00       		.byte	0
 3335              		.section	.debug_abbrev,"",%progbits
 3336              	.Ldebug_abbrev0:
 3337 0000 01       		.uleb128 0x1
 3338 0001 11       		.uleb128 0x11
 3339 0002 01       		.byte	0x1
 3340 0003 25       		.uleb128 0x25
 3341 0004 0E       		.uleb128 0xe
 3342 0005 13       		.uleb128 0x13
 3343 0006 0B       		.uleb128 0xb
 3344 0007 03       		.uleb128 0x3
 3345 0008 0E       		.uleb128 0xe
 3346 0009 1B       		.uleb128 0x1b
 3347 000a 0E       		.uleb128 0xe
 3348 000b 55       		.uleb128 0x55
 3349 000c 17       		.uleb128 0x17
 3350 000d 11       		.uleb128 0x11
 3351 000e 01       		.uleb128 0x1
 3352 000f 10       		.uleb128 0x10
 3353 0010 17       		.uleb128 0x17
 3354 0011 00       		.byte	0
 3355 0012 00       		.byte	0
 3356 0013 02       		.uleb128 0x2
 3357 0014 24       		.uleb128 0x24
 3358 0015 00       		.byte	0
 3359 0016 0B       		.uleb128 0xb
 3360 0017 0B       		.uleb128 0xb
 3361 0018 3E       		.uleb128 0x3e
 3362 0019 0B       		.uleb128 0xb
 3363 001a 03       		.uleb128 0x3
 3364 001b 0E       		.uleb128 0xe
 3365 001c 00       		.byte	0
 3366 001d 00       		.byte	0
 3367 001e 03       		.uleb128 0x3
 3368 001f 24       		.uleb128 0x24
 3369 0020 00       		.byte	0
 3370 0021 0B       		.uleb128 0xb
 3371 0022 0B       		.uleb128 0xb
 3372 0023 3E       		.uleb128 0x3e
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 101


 3373 0024 0B       		.uleb128 0xb
 3374 0025 03       		.uleb128 0x3
 3375 0026 08       		.uleb128 0x8
 3376 0027 00       		.byte	0
 3377 0028 00       		.byte	0
 3378 0029 04       		.uleb128 0x4
 3379 002a 16       		.uleb128 0x16
 3380 002b 00       		.byte	0
 3381 002c 03       		.uleb128 0x3
 3382 002d 0E       		.uleb128 0xe
 3383 002e 3A       		.uleb128 0x3a
 3384 002f 0B       		.uleb128 0xb
 3385 0030 3B       		.uleb128 0x3b
 3386 0031 05       		.uleb128 0x5
 3387 0032 49       		.uleb128 0x49
 3388 0033 13       		.uleb128 0x13
 3389 0034 00       		.byte	0
 3390 0035 00       		.byte	0
 3391 0036 05       		.uleb128 0x5
 3392 0037 35       		.uleb128 0x35
 3393 0038 00       		.byte	0
 3394 0039 49       		.uleb128 0x49
 3395 003a 13       		.uleb128 0x13
 3396 003b 00       		.byte	0
 3397 003c 00       		.byte	0
 3398 003d 06       		.uleb128 0x6
 3399 003e 0F       		.uleb128 0xf
 3400 003f 00       		.byte	0
 3401 0040 0B       		.uleb128 0xb
 3402 0041 0B       		.uleb128 0xb
 3403 0042 49       		.uleb128 0x49
 3404 0043 13       		.uleb128 0x13
 3405 0044 00       		.byte	0
 3406 0045 00       		.byte	0
 3407 0046 07       		.uleb128 0x7
 3408 0047 15       		.uleb128 0x15
 3409 0048 00       		.byte	0
 3410 0049 27       		.uleb128 0x27
 3411 004a 19       		.uleb128 0x19
 3412 004b 00       		.byte	0
 3413 004c 00       		.byte	0
 3414 004d 08       		.uleb128 0x8
 3415 004e 0F       		.uleb128 0xf
 3416 004f 00       		.byte	0
 3417 0050 0B       		.uleb128 0xb
 3418 0051 0B       		.uleb128 0xb
 3419 0052 00       		.byte	0
 3420 0053 00       		.byte	0
 3421 0054 09       		.uleb128 0x9
 3422 0055 04       		.uleb128 0x4
 3423 0056 01       		.byte	0x1
 3424 0057 0B       		.uleb128 0xb
 3425 0058 0B       		.uleb128 0xb
 3426 0059 49       		.uleb128 0x49
 3427 005a 13       		.uleb128 0x13
 3428 005b 3A       		.uleb128 0x3a
 3429 005c 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 102


 3430 005d 3B       		.uleb128 0x3b
 3431 005e 0B       		.uleb128 0xb
 3432 005f 01       		.uleb128 0x1
 3433 0060 13       		.uleb128 0x13
 3434 0061 00       		.byte	0
 3435 0062 00       		.byte	0
 3436 0063 0A       		.uleb128 0xa
 3437 0064 28       		.uleb128 0x28
 3438 0065 00       		.byte	0
 3439 0066 03       		.uleb128 0x3
 3440 0067 0E       		.uleb128 0xe
 3441 0068 1C       		.uleb128 0x1c
 3442 0069 0B       		.uleb128 0xb
 3443 006a 00       		.byte	0
 3444 006b 00       		.byte	0
 3445 006c 0B       		.uleb128 0xb
 3446 006d 16       		.uleb128 0x16
 3447 006e 00       		.byte	0
 3448 006f 03       		.uleb128 0x3
 3449 0070 0E       		.uleb128 0xe
 3450 0071 3A       		.uleb128 0x3a
 3451 0072 0B       		.uleb128 0xb
 3452 0073 3B       		.uleb128 0x3b
 3453 0074 0B       		.uleb128 0xb
 3454 0075 49       		.uleb128 0x49
 3455 0076 13       		.uleb128 0x13
 3456 0077 00       		.byte	0
 3457 0078 00       		.byte	0
 3458 0079 0C       		.uleb128 0xc
 3459 007a 13       		.uleb128 0x13
 3460 007b 01       		.byte	0x1
 3461 007c 0B       		.uleb128 0xb
 3462 007d 0B       		.uleb128 0xb
 3463 007e 3A       		.uleb128 0x3a
 3464 007f 0B       		.uleb128 0xb
 3465 0080 3B       		.uleb128 0x3b
 3466 0081 0B       		.uleb128 0xb
 3467 0082 01       		.uleb128 0x1
 3468 0083 13       		.uleb128 0x13
 3469 0084 00       		.byte	0
 3470 0085 00       		.byte	0
 3471 0086 0D       		.uleb128 0xd
 3472 0087 0D       		.uleb128 0xd
 3473 0088 00       		.byte	0
 3474 0089 03       		.uleb128 0x3
 3475 008a 0E       		.uleb128 0xe
 3476 008b 3A       		.uleb128 0x3a
 3477 008c 0B       		.uleb128 0xb
 3478 008d 3B       		.uleb128 0x3b
 3479 008e 0B       		.uleb128 0xb
 3480 008f 49       		.uleb128 0x49
 3481 0090 13       		.uleb128 0x13
 3482 0091 38       		.uleb128 0x38
 3483 0092 0B       		.uleb128 0xb
 3484 0093 00       		.byte	0
 3485 0094 00       		.byte	0
 3486 0095 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 103


 3487 0096 01       		.uleb128 0x1
 3488 0097 01       		.byte	0x1
 3489 0098 49       		.uleb128 0x49
 3490 0099 13       		.uleb128 0x13
 3491 009a 01       		.uleb128 0x1
 3492 009b 13       		.uleb128 0x13
 3493 009c 00       		.byte	0
 3494 009d 00       		.byte	0
 3495 009e 0F       		.uleb128 0xf
 3496 009f 21       		.uleb128 0x21
 3497 00a0 00       		.byte	0
 3498 00a1 49       		.uleb128 0x49
 3499 00a2 13       		.uleb128 0x13
 3500 00a3 2F       		.uleb128 0x2f
 3501 00a4 0B       		.uleb128 0xb
 3502 00a5 00       		.byte	0
 3503 00a6 00       		.byte	0
 3504 00a7 10       		.uleb128 0x10
 3505 00a8 0D       		.uleb128 0xd
 3506 00a9 00       		.byte	0
 3507 00aa 03       		.uleb128 0x3
 3508 00ab 0E       		.uleb128 0xe
 3509 00ac 3A       		.uleb128 0x3a
 3510 00ad 0B       		.uleb128 0xb
 3511 00ae 3B       		.uleb128 0x3b
 3512 00af 05       		.uleb128 0x5
 3513 00b0 49       		.uleb128 0x49
 3514 00b1 13       		.uleb128 0x13
 3515 00b2 38       		.uleb128 0x38
 3516 00b3 0B       		.uleb128 0xb
 3517 00b4 00       		.byte	0
 3518 00b5 00       		.byte	0
 3519 00b6 11       		.uleb128 0x11
 3520 00b7 13       		.uleb128 0x13
 3521 00b8 01       		.byte	0x1
 3522 00b9 0B       		.uleb128 0xb
 3523 00ba 0B       		.uleb128 0xb
 3524 00bb 3A       		.uleb128 0x3a
 3525 00bc 0B       		.uleb128 0xb
 3526 00bd 3B       		.uleb128 0x3b
 3527 00be 05       		.uleb128 0x5
 3528 00bf 01       		.uleb128 0x1
 3529 00c0 13       		.uleb128 0x13
 3530 00c1 00       		.byte	0
 3531 00c2 00       		.byte	0
 3532 00c3 12       		.uleb128 0x12
 3533 00c4 0D       		.uleb128 0xd
 3534 00c5 00       		.byte	0
 3535 00c6 03       		.uleb128 0x3
 3536 00c7 08       		.uleb128 0x8
 3537 00c8 3A       		.uleb128 0x3a
 3538 00c9 0B       		.uleb128 0xb
 3539 00ca 3B       		.uleb128 0x3b
 3540 00cb 05       		.uleb128 0x5
 3541 00cc 49       		.uleb128 0x49
 3542 00cd 13       		.uleb128 0x13
 3543 00ce 38       		.uleb128 0x38
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 104


 3544 00cf 0B       		.uleb128 0xb
 3545 00d0 00       		.byte	0
 3546 00d1 00       		.byte	0
 3547 00d2 13       		.uleb128 0x13
 3548 00d3 26       		.uleb128 0x26
 3549 00d4 00       		.byte	0
 3550 00d5 00       		.byte	0
 3551 00d6 00       		.byte	0
 3552 00d7 14       		.uleb128 0x14
 3553 00d8 2E       		.uleb128 0x2e
 3554 00d9 00       		.byte	0
 3555 00da 03       		.uleb128 0x3
 3556 00db 0E       		.uleb128 0xe
 3557 00dc 3A       		.uleb128 0x3a
 3558 00dd 0B       		.uleb128 0xb
 3559 00de 3B       		.uleb128 0x3b
 3560 00df 05       		.uleb128 0x5
 3561 00e0 27       		.uleb128 0x27
 3562 00e1 19       		.uleb128 0x19
 3563 00e2 11       		.uleb128 0x11
 3564 00e3 01       		.uleb128 0x1
 3565 00e4 12       		.uleb128 0x12
 3566 00e5 06       		.uleb128 0x6
 3567 00e6 40       		.uleb128 0x40
 3568 00e7 18       		.uleb128 0x18
 3569 00e8 9742     		.uleb128 0x2117
 3570 00ea 19       		.uleb128 0x19
 3571 00eb 00       		.byte	0
 3572 00ec 00       		.byte	0
 3573 00ed 15       		.uleb128 0x15
 3574 00ee 2E       		.uleb128 0x2e
 3575 00ef 01       		.byte	0x1
 3576 00f0 03       		.uleb128 0x3
 3577 00f1 0E       		.uleb128 0xe
 3578 00f2 3A       		.uleb128 0x3a
 3579 00f3 0B       		.uleb128 0xb
 3580 00f4 3B       		.uleb128 0x3b
 3581 00f5 05       		.uleb128 0x5
 3582 00f6 27       		.uleb128 0x27
 3583 00f7 19       		.uleb128 0x19
 3584 00f8 49       		.uleb128 0x49
 3585 00f9 13       		.uleb128 0x13
 3586 00fa 11       		.uleb128 0x11
 3587 00fb 01       		.uleb128 0x1
 3588 00fc 12       		.uleb128 0x12
 3589 00fd 06       		.uleb128 0x6
 3590 00fe 40       		.uleb128 0x40
 3591 00ff 18       		.uleb128 0x18
 3592 0100 9742     		.uleb128 0x2117
 3593 0102 19       		.uleb128 0x19
 3594 0103 01       		.uleb128 0x1
 3595 0104 13       		.uleb128 0x13
 3596 0105 00       		.byte	0
 3597 0106 00       		.byte	0
 3598 0107 16       		.uleb128 0x16
 3599 0108 05       		.uleb128 0x5
 3600 0109 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 105


 3601 010a 03       		.uleb128 0x3
 3602 010b 0E       		.uleb128 0xe
 3603 010c 3A       		.uleb128 0x3a
 3604 010d 0B       		.uleb128 0xb
 3605 010e 3B       		.uleb128 0x3b
 3606 010f 05       		.uleb128 0x5
 3607 0110 49       		.uleb128 0x49
 3608 0111 13       		.uleb128 0x13
 3609 0112 02       		.uleb128 0x2
 3610 0113 17       		.uleb128 0x17
 3611 0114 00       		.byte	0
 3612 0115 00       		.byte	0
 3613 0116 17       		.uleb128 0x17
 3614 0117 34       		.uleb128 0x34
 3615 0118 00       		.byte	0
 3616 0119 03       		.uleb128 0x3
 3617 011a 0E       		.uleb128 0xe
 3618 011b 3A       		.uleb128 0x3a
 3619 011c 0B       		.uleb128 0xb
 3620 011d 3B       		.uleb128 0x3b
 3621 011e 05       		.uleb128 0x5
 3622 011f 49       		.uleb128 0x49
 3623 0120 13       		.uleb128 0x13
 3624 0121 02       		.uleb128 0x2
 3625 0122 17       		.uleb128 0x17
 3626 0123 00       		.byte	0
 3627 0124 00       		.byte	0
 3628 0125 18       		.uleb128 0x18
 3629 0126 26       		.uleb128 0x26
 3630 0127 00       		.byte	0
 3631 0128 49       		.uleb128 0x49
 3632 0129 13       		.uleb128 0x13
 3633 012a 00       		.byte	0
 3634 012b 00       		.byte	0
 3635 012c 19       		.uleb128 0x19
 3636 012d 2E       		.uleb128 0x2e
 3637 012e 01       		.byte	0x1
 3638 012f 03       		.uleb128 0x3
 3639 0130 0E       		.uleb128 0xe
 3640 0131 3A       		.uleb128 0x3a
 3641 0132 0B       		.uleb128 0xb
 3642 0133 3B       		.uleb128 0x3b
 3643 0134 05       		.uleb128 0x5
 3644 0135 27       		.uleb128 0x27
 3645 0136 19       		.uleb128 0x19
 3646 0137 20       		.uleb128 0x20
 3647 0138 0B       		.uleb128 0xb
 3648 0139 01       		.uleb128 0x1
 3649 013a 13       		.uleb128 0x13
 3650 013b 00       		.byte	0
 3651 013c 00       		.byte	0
 3652 013d 1A       		.uleb128 0x1a
 3653 013e 34       		.uleb128 0x34
 3654 013f 00       		.byte	0
 3655 0140 03       		.uleb128 0x3
 3656 0141 0E       		.uleb128 0xe
 3657 0142 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 106


 3658 0143 0B       		.uleb128 0xb
 3659 0144 3B       		.uleb128 0x3b
 3660 0145 05       		.uleb128 0x5
 3661 0146 49       		.uleb128 0x49
 3662 0147 13       		.uleb128 0x13
 3663 0148 00       		.byte	0
 3664 0149 00       		.byte	0
 3665 014a 1B       		.uleb128 0x1b
 3666 014b 2E       		.uleb128 0x2e
 3667 014c 01       		.byte	0x1
 3668 014d 03       		.uleb128 0x3
 3669 014e 0E       		.uleb128 0xe
 3670 014f 3A       		.uleb128 0x3a
 3671 0150 0B       		.uleb128 0xb
 3672 0151 3B       		.uleb128 0x3b
 3673 0152 05       		.uleb128 0x5
 3674 0153 27       		.uleb128 0x27
 3675 0154 19       		.uleb128 0x19
 3676 0155 11       		.uleb128 0x11
 3677 0156 01       		.uleb128 0x1
 3678 0157 12       		.uleb128 0x12
 3679 0158 06       		.uleb128 0x6
 3680 0159 40       		.uleb128 0x40
 3681 015a 18       		.uleb128 0x18
 3682 015b 9642     		.uleb128 0x2116
 3683 015d 19       		.uleb128 0x19
 3684 015e 01       		.uleb128 0x1
 3685 015f 13       		.uleb128 0x13
 3686 0160 00       		.byte	0
 3687 0161 00       		.byte	0
 3688 0162 1C       		.uleb128 0x1c
 3689 0163 1D       		.uleb128 0x1d
 3690 0164 01       		.byte	0x1
 3691 0165 31       		.uleb128 0x31
 3692 0166 13       		.uleb128 0x13
 3693 0167 11       		.uleb128 0x11
 3694 0168 01       		.uleb128 0x1
 3695 0169 12       		.uleb128 0x12
 3696 016a 06       		.uleb128 0x6
 3697 016b 58       		.uleb128 0x58
 3698 016c 0B       		.uleb128 0xb
 3699 016d 59       		.uleb128 0x59
 3700 016e 05       		.uleb128 0x5
 3701 016f 00       		.byte	0
 3702 0170 00       		.byte	0
 3703 0171 1D       		.uleb128 0x1d
 3704 0172 0B       		.uleb128 0xb
 3705 0173 01       		.byte	0x1
 3706 0174 11       		.uleb128 0x11
 3707 0175 01       		.uleb128 0x1
 3708 0176 12       		.uleb128 0x12
 3709 0177 06       		.uleb128 0x6
 3710 0178 00       		.byte	0
 3711 0179 00       		.byte	0
 3712 017a 1E       		.uleb128 0x1e
 3713 017b 34       		.uleb128 0x34
 3714 017c 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 107


 3715 017d 31       		.uleb128 0x31
 3716 017e 13       		.uleb128 0x13
 3717 017f 02       		.uleb128 0x2
 3718 0180 17       		.uleb128 0x17
 3719 0181 00       		.byte	0
 3720 0182 00       		.byte	0
 3721 0183 1F       		.uleb128 0x1f
 3722 0184 2E       		.uleb128 0x2e
 3723 0185 01       		.byte	0x1
 3724 0186 3F       		.uleb128 0x3f
 3725 0187 19       		.uleb128 0x19
 3726 0188 03       		.uleb128 0x3
 3727 0189 0E       		.uleb128 0xe
 3728 018a 3A       		.uleb128 0x3a
 3729 018b 0B       		.uleb128 0xb
 3730 018c 3B       		.uleb128 0x3b
 3731 018d 05       		.uleb128 0x5
 3732 018e 27       		.uleb128 0x27
 3733 018f 19       		.uleb128 0x19
 3734 0190 11       		.uleb128 0x11
 3735 0191 01       		.uleb128 0x1
 3736 0192 12       		.uleb128 0x12
 3737 0193 06       		.uleb128 0x6
 3738 0194 40       		.uleb128 0x40
 3739 0195 18       		.uleb128 0x18
 3740 0196 9642     		.uleb128 0x2116
 3741 0198 19       		.uleb128 0x19
 3742 0199 01       		.uleb128 0x1
 3743 019a 13       		.uleb128 0x13
 3744 019b 00       		.byte	0
 3745 019c 00       		.byte	0
 3746 019d 20       		.uleb128 0x20
 3747 019e 898201   		.uleb128 0x4109
 3748 01a1 01       		.byte	0x1
 3749 01a2 11       		.uleb128 0x11
 3750 01a3 01       		.uleb128 0x1
 3751 01a4 31       		.uleb128 0x31
 3752 01a5 13       		.uleb128 0x13
 3753 01a6 01       		.uleb128 0x1
 3754 01a7 13       		.uleb128 0x13
 3755 01a8 00       		.byte	0
 3756 01a9 00       		.byte	0
 3757 01aa 21       		.uleb128 0x21
 3758 01ab 8A8201   		.uleb128 0x410a
 3759 01ae 00       		.byte	0
 3760 01af 02       		.uleb128 0x2
 3761 01b0 18       		.uleb128 0x18
 3762 01b1 9142     		.uleb128 0x2111
 3763 01b3 18       		.uleb128 0x18
 3764 01b4 00       		.byte	0
 3765 01b5 00       		.byte	0
 3766 01b6 22       		.uleb128 0x22
 3767 01b7 898201   		.uleb128 0x4109
 3768 01ba 01       		.byte	0x1
 3769 01bb 11       		.uleb128 0x11
 3770 01bc 01       		.uleb128 0x1
 3771 01bd 31       		.uleb128 0x31
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 108


 3772 01be 13       		.uleb128 0x13
 3773 01bf 00       		.byte	0
 3774 01c0 00       		.byte	0
 3775 01c1 23       		.uleb128 0x23
 3776 01c2 2E       		.uleb128 0x2e
 3777 01c3 01       		.byte	0x1
 3778 01c4 3F       		.uleb128 0x3f
 3779 01c5 19       		.uleb128 0x19
 3780 01c6 03       		.uleb128 0x3
 3781 01c7 0E       		.uleb128 0xe
 3782 01c8 3A       		.uleb128 0x3a
 3783 01c9 0B       		.uleb128 0xb
 3784 01ca 3B       		.uleb128 0x3b
 3785 01cb 0B       		.uleb128 0xb
 3786 01cc 27       		.uleb128 0x27
 3787 01cd 19       		.uleb128 0x19
 3788 01ce 11       		.uleb128 0x11
 3789 01cf 01       		.uleb128 0x1
 3790 01d0 12       		.uleb128 0x12
 3791 01d1 06       		.uleb128 0x6
 3792 01d2 40       		.uleb128 0x40
 3793 01d3 18       		.uleb128 0x18
 3794 01d4 9742     		.uleb128 0x2117
 3795 01d6 19       		.uleb128 0x19
 3796 01d7 01       		.uleb128 0x1
 3797 01d8 13       		.uleb128 0x13
 3798 01d9 00       		.byte	0
 3799 01da 00       		.byte	0
 3800 01db 24       		.uleb128 0x24
 3801 01dc 34       		.uleb128 0x34
 3802 01dd 00       		.byte	0
 3803 01de 03       		.uleb128 0x3
 3804 01df 0E       		.uleb128 0xe
 3805 01e0 3A       		.uleb128 0x3a
 3806 01e1 0B       		.uleb128 0xb
 3807 01e2 3B       		.uleb128 0x3b
 3808 01e3 0B       		.uleb128 0xb
 3809 01e4 49       		.uleb128 0x49
 3810 01e5 13       		.uleb128 0x13
 3811 01e6 02       		.uleb128 0x2
 3812 01e7 17       		.uleb128 0x17
 3813 01e8 00       		.byte	0
 3814 01e9 00       		.byte	0
 3815 01ea 25       		.uleb128 0x25
 3816 01eb 898201   		.uleb128 0x4109
 3817 01ee 00       		.byte	0
 3818 01ef 11       		.uleb128 0x11
 3819 01f0 01       		.uleb128 0x1
 3820 01f1 31       		.uleb128 0x31
 3821 01f2 13       		.uleb128 0x13
 3822 01f3 00       		.byte	0
 3823 01f4 00       		.byte	0
 3824 01f5 26       		.uleb128 0x26
 3825 01f6 2E       		.uleb128 0x2e
 3826 01f7 01       		.byte	0x1
 3827 01f8 3F       		.uleb128 0x3f
 3828 01f9 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 109


 3829 01fa 03       		.uleb128 0x3
 3830 01fb 0E       		.uleb128 0xe
 3831 01fc 3A       		.uleb128 0x3a
 3832 01fd 0B       		.uleb128 0xb
 3833 01fe 3B       		.uleb128 0x3b
 3834 01ff 05       		.uleb128 0x5
 3835 0200 27       		.uleb128 0x27
 3836 0201 19       		.uleb128 0x19
 3837 0202 11       		.uleb128 0x11
 3838 0203 01       		.uleb128 0x1
 3839 0204 12       		.uleb128 0x12
 3840 0205 06       		.uleb128 0x6
 3841 0206 40       		.uleb128 0x40
 3842 0207 18       		.uleb128 0x18
 3843 0208 9742     		.uleb128 0x2117
 3844 020a 19       		.uleb128 0x19
 3845 020b 01       		.uleb128 0x1
 3846 020c 13       		.uleb128 0x13
 3847 020d 00       		.byte	0
 3848 020e 00       		.byte	0
 3849 020f 27       		.uleb128 0x27
 3850 0210 05       		.uleb128 0x5
 3851 0211 00       		.byte	0
 3852 0212 03       		.uleb128 0x3
 3853 0213 0E       		.uleb128 0xe
 3854 0214 3A       		.uleb128 0x3a
 3855 0215 0B       		.uleb128 0xb
 3856 0216 3B       		.uleb128 0x3b
 3857 0217 05       		.uleb128 0x5
 3858 0218 49       		.uleb128 0x49
 3859 0219 13       		.uleb128 0x13
 3860 021a 02       		.uleb128 0x2
 3861 021b 18       		.uleb128 0x18
 3862 021c 00       		.byte	0
 3863 021d 00       		.byte	0
 3864 021e 28       		.uleb128 0x28
 3865 021f 34       		.uleb128 0x34
 3866 0220 00       		.byte	0
 3867 0221 03       		.uleb128 0x3
 3868 0222 0E       		.uleb128 0xe
 3869 0223 3A       		.uleb128 0x3a
 3870 0224 0B       		.uleb128 0xb
 3871 0225 3B       		.uleb128 0x3b
 3872 0226 05       		.uleb128 0x5
 3873 0227 49       		.uleb128 0x49
 3874 0228 13       		.uleb128 0x13
 3875 0229 02       		.uleb128 0x2
 3876 022a 18       		.uleb128 0x18
 3877 022b 00       		.byte	0
 3878 022c 00       		.byte	0
 3879 022d 29       		.uleb128 0x29
 3880 022e 2E       		.uleb128 0x2e
 3881 022f 01       		.byte	0x1
 3882 0230 03       		.uleb128 0x3
 3883 0231 0E       		.uleb128 0xe
 3884 0232 3A       		.uleb128 0x3a
 3885 0233 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 110


 3886 0234 3B       		.uleb128 0x3b
 3887 0235 05       		.uleb128 0x5
 3888 0236 27       		.uleb128 0x27
 3889 0237 19       		.uleb128 0x19
 3890 0238 11       		.uleb128 0x11
 3891 0239 01       		.uleb128 0x1
 3892 023a 12       		.uleb128 0x12
 3893 023b 06       		.uleb128 0x6
 3894 023c 40       		.uleb128 0x40
 3895 023d 18       		.uleb128 0x18
 3896 023e 9742     		.uleb128 0x2117
 3897 0240 19       		.uleb128 0x19
 3898 0241 01       		.uleb128 0x1
 3899 0242 13       		.uleb128 0x13
 3900 0243 00       		.byte	0
 3901 0244 00       		.byte	0
 3902 0245 2A       		.uleb128 0x2a
 3903 0246 2E       		.uleb128 0x2e
 3904 0247 01       		.byte	0x1
 3905 0248 3F       		.uleb128 0x3f
 3906 0249 19       		.uleb128 0x19
 3907 024a 03       		.uleb128 0x3
 3908 024b 0E       		.uleb128 0xe
 3909 024c 3A       		.uleb128 0x3a
 3910 024d 0B       		.uleb128 0xb
 3911 024e 3B       		.uleb128 0x3b
 3912 024f 05       		.uleb128 0x5
 3913 0250 27       		.uleb128 0x27
 3914 0251 19       		.uleb128 0x19
 3915 0252 49       		.uleb128 0x49
 3916 0253 13       		.uleb128 0x13
 3917 0254 11       		.uleb128 0x11
 3918 0255 01       		.uleb128 0x1
 3919 0256 12       		.uleb128 0x12
 3920 0257 06       		.uleb128 0x6
 3921 0258 40       		.uleb128 0x40
 3922 0259 18       		.uleb128 0x18
 3923 025a 9742     		.uleb128 0x2117
 3924 025c 19       		.uleb128 0x19
 3925 025d 01       		.uleb128 0x1
 3926 025e 13       		.uleb128 0x13
 3927 025f 00       		.byte	0
 3928 0260 00       		.byte	0
 3929 0261 2B       		.uleb128 0x2b
 3930 0262 34       		.uleb128 0x34
 3931 0263 00       		.byte	0
 3932 0264 03       		.uleb128 0x3
 3933 0265 0E       		.uleb128 0xe
 3934 0266 3A       		.uleb128 0x3a
 3935 0267 0B       		.uleb128 0xb
 3936 0268 3B       		.uleb128 0x3b
 3937 0269 0B       		.uleb128 0xb
 3938 026a 49       		.uleb128 0x49
 3939 026b 13       		.uleb128 0x13
 3940 026c 02       		.uleb128 0x2
 3941 026d 18       		.uleb128 0x18
 3942 026e 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 111


 3943 026f 00       		.byte	0
 3944 0270 2C       		.uleb128 0x2c
 3945 0271 34       		.uleb128 0x34
 3946 0272 00       		.byte	0
 3947 0273 03       		.uleb128 0x3
 3948 0274 0E       		.uleb128 0xe
 3949 0275 3A       		.uleb128 0x3a
 3950 0276 0B       		.uleb128 0xb
 3951 0277 3B       		.uleb128 0x3b
 3952 0278 05       		.uleb128 0x5
 3953 0279 49       		.uleb128 0x49
 3954 027a 13       		.uleb128 0x13
 3955 027b 3F       		.uleb128 0x3f
 3956 027c 19       		.uleb128 0x19
 3957 027d 3C       		.uleb128 0x3c
 3958 027e 19       		.uleb128 0x19
 3959 027f 00       		.byte	0
 3960 0280 00       		.byte	0
 3961 0281 2D       		.uleb128 0x2d
 3962 0282 34       		.uleb128 0x34
 3963 0283 00       		.byte	0
 3964 0284 03       		.uleb128 0x3
 3965 0285 0E       		.uleb128 0xe
 3966 0286 3A       		.uleb128 0x3a
 3967 0287 0B       		.uleb128 0xb
 3968 0288 3B       		.uleb128 0x3b
 3969 0289 0B       		.uleb128 0xb
 3970 028a 49       		.uleb128 0x49
 3971 028b 13       		.uleb128 0x13
 3972 028c 3F       		.uleb128 0x3f
 3973 028d 19       		.uleb128 0x19
 3974 028e 02       		.uleb128 0x2
 3975 028f 18       		.uleb128 0x18
 3976 0290 00       		.byte	0
 3977 0291 00       		.byte	0
 3978 0292 2E       		.uleb128 0x2e
 3979 0293 34       		.uleb128 0x34
 3980 0294 00       		.byte	0
 3981 0295 03       		.uleb128 0x3
 3982 0296 0E       		.uleb128 0xe
 3983 0297 3A       		.uleb128 0x3a
 3984 0298 0B       		.uleb128 0xb
 3985 0299 3B       		.uleb128 0x3b
 3986 029a 0B       		.uleb128 0xb
 3987 029b 49       		.uleb128 0x49
 3988 029c 13       		.uleb128 0x13
 3989 029d 3F       		.uleb128 0x3f
 3990 029e 19       		.uleb128 0x19
 3991 029f 3C       		.uleb128 0x3c
 3992 02a0 19       		.uleb128 0x19
 3993 02a1 00       		.byte	0
 3994 02a2 00       		.byte	0
 3995 02a3 2F       		.uleb128 0x2f
 3996 02a4 2E       		.uleb128 0x2e
 3997 02a5 00       		.byte	0
 3998 02a6 3F       		.uleb128 0x3f
 3999 02a7 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 112


 4000 02a8 3C       		.uleb128 0x3c
 4001 02a9 19       		.uleb128 0x19
 4002 02aa 6E       		.uleb128 0x6e
 4003 02ab 0E       		.uleb128 0xe
 4004 02ac 03       		.uleb128 0x3
 4005 02ad 0E       		.uleb128 0xe
 4006 02ae 3A       		.uleb128 0x3a
 4007 02af 0B       		.uleb128 0xb
 4008 02b0 3B       		.uleb128 0x3b
 4009 02b1 0B       		.uleb128 0xb
 4010 02b2 00       		.byte	0
 4011 02b3 00       		.byte	0
 4012 02b4 00       		.byte	0
 4013              		.section	.debug_loc,"",%progbits
 4014              	.Ldebug_loc0:
 4015              	.LLST0:
 4016 0000 00000000 		.4byte	.LVL0
 4017 0004 06000000 		.4byte	.LVL2
 4018 0008 0100     		.2byte	0x1
 4019 000a 50       		.byte	0x50
 4020 000b 06000000 		.4byte	.LVL2
 4021 000f 0C000000 		.4byte	.LFE16
 4022 0013 0400     		.2byte	0x4
 4023 0015 F3       		.byte	0xf3
 4024 0016 01       		.uleb128 0x1
 4025 0017 50       		.byte	0x50
 4026 0018 9F       		.byte	0x9f
 4027 0019 00000000 		.4byte	0
 4028 001d 00000000 		.4byte	0
 4029              	.LLST1:
 4030 0021 02000000 		.4byte	.LVL1
 4031 0025 0A000000 		.4byte	.LVL3
 4032 0029 0100     		.2byte	0x1
 4033 002b 53       		.byte	0x53
 4034 002c 0A000000 		.4byte	.LVL3
 4035 0030 0C000000 		.4byte	.LFE16
 4036 0034 0700     		.2byte	0x7
 4037 0036 70       		.byte	0x70
 4038 0037 00       		.sleb128 0
 4039 0038 0A       		.byte	0xa
 4040 0039 FFFF     		.2byte	0xffff
 4041 003b 1A       		.byte	0x1a
 4042 003c 9F       		.byte	0x9f
 4043 003d 00000000 		.4byte	0
 4044 0041 00000000 		.4byte	0
 4045              	.LLST2:
 4046 0045 0E000000 		.4byte	.LVL4
 4047 0049 12000000 		.4byte	.LVL5
 4048 004d 0600     		.2byte	0x6
 4049 004f 73       		.byte	0x73
 4050 0050 00       		.sleb128 0
 4051 0051 08       		.byte	0x8
 4052 0052 FF       		.byte	0xff
 4053 0053 1A       		.byte	0x1a
 4054 0054 9F       		.byte	0x9f
 4055 0055 12000000 		.4byte	.LVL5
 4056 0059 1A000000 		.4byte	.LVL6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 113


 4057 005d 0100     		.2byte	0x1
 4058 005f 53       		.byte	0x53
 4059 0060 1A000000 		.4byte	.LVL6
 4060 0064 1C000000 		.4byte	.LVL7
 4061 0068 0500     		.2byte	0x5
 4062 006a 0C       		.byte	0xc
 4063 006b C0010B40 		.4byte	0x400b01c0
 4064 006f 00000000 		.4byte	0
 4065 0073 00000000 		.4byte	0
 4066              	.LLST3:
 4067 0077 96000000 		.4byte	.LVL13
 4068 007b 9A000000 		.4byte	.LVL14
 4069 007f 0100     		.2byte	0x1
 4070 0081 53       		.byte	0x53
 4071 0082 00000000 		.4byte	0
 4072 0086 00000000 		.4byte	0
 4073              	.LLST4:
 4074 008a 52000000 		.4byte	.LVL8
 4075 008e 58000000 		.4byte	.LVL9
 4076 0092 0400     		.2byte	0x4
 4077 0094 0A       		.byte	0xa
 4078 0095 E001     		.2byte	0x1e0
 4079 0097 9F       		.byte	0x9f
 4080 0098 58000000 		.4byte	.LVL9
 4081 009c 68000000 		.4byte	.LVL11
 4082 00a0 0100     		.2byte	0x1
 4083 00a2 53       		.byte	0x53
 4084 00a3 00000000 		.4byte	0
 4085 00a7 00000000 		.4byte	0
 4086              	.LLST5:
 4087 00ab 80000000 		.4byte	.LVL12
 4088 00af B4000000 		.4byte	.LVL15
 4089 00b3 0100     		.2byte	0x1
 4090 00b5 50       		.byte	0x50
 4091 00b6 00000000 		.4byte	0
 4092 00ba 00000000 		.4byte	0
 4093              	.LLST6:
 4094 00be 5C000000 		.4byte	.LVL19
 4095 00c2 6F000000 		.4byte	.LVL23-1
 4096 00c6 0100     		.2byte	0x1
 4097 00c8 50       		.byte	0x50
 4098 00c9 82000000 		.4byte	.LVL24
 4099 00cd 95000000 		.4byte	.LVL28-1
 4100 00d1 0100     		.2byte	0x1
 4101 00d3 50       		.byte	0x50
 4102 00d4 CE000000 		.4byte	.LVL30
 4103 00d8 DB000000 		.4byte	.LVL33-1
 4104 00dc 0100     		.2byte	0x1
 4105 00de 50       		.byte	0x50
 4106 00df E0000000 		.4byte	.LVL34
 4107 00e3 EB000000 		.4byte	.LVL37-1
 4108 00e7 0100     		.2byte	0x1
 4109 00e9 50       		.byte	0x50
 4110 00ea F0000000 		.4byte	.LVL38
 4111 00ee 03010000 		.4byte	.LVL42-1
 4112 00f2 0100     		.2byte	0x1
 4113 00f4 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 114


 4114 00f5 08010000 		.4byte	.LVL43
 4115 00f9 19010000 		.4byte	.LVL47-1
 4116 00fd 0100     		.2byte	0x1
 4117 00ff 50       		.byte	0x50
 4118 0100 00000000 		.4byte	0
 4119 0104 00000000 		.4byte	0
 4120              	.LLST7:
 4121 0108 60000000 		.4byte	.LVL20
 4122 010c 64000000 		.4byte	.LVL21
 4123 0110 0100     		.2byte	0x1
 4124 0112 51       		.byte	0x51
 4125 0113 64000000 		.4byte	.LVL21
 4126 0117 6F000000 		.4byte	.LVL23-1
 4127 011b 0100     		.2byte	0x1
 4128 011d 53       		.byte	0x53
 4129 011e 86000000 		.4byte	.LVL25
 4130 0122 8A000000 		.4byte	.LVL26
 4131 0126 0100     		.2byte	0x1
 4132 0128 51       		.byte	0x51
 4133 0129 8A000000 		.4byte	.LVL26
 4134 012d 95000000 		.4byte	.LVL28-1
 4135 0131 0100     		.2byte	0x1
 4136 0133 53       		.byte	0x53
 4137 0134 D2000000 		.4byte	.LVL31
 4138 0138 D6000000 		.4byte	.LVL32
 4139 013c 0100     		.2byte	0x1
 4140 013e 52       		.byte	0x52
 4141 013f D6000000 		.4byte	.LVL32
 4142 0143 DB000000 		.4byte	.LVL33-1
 4143 0147 0100     		.2byte	0x1
 4144 0149 53       		.byte	0x53
 4145 014a E2000000 		.4byte	.LVL35
 4146 014e E6000000 		.4byte	.LVL36
 4147 0152 0100     		.2byte	0x1
 4148 0154 52       		.byte	0x52
 4149 0155 E6000000 		.4byte	.LVL36
 4150 0159 EB000000 		.4byte	.LVL37-1
 4151 015d 0100     		.2byte	0x1
 4152 015f 53       		.byte	0x53
 4153 0160 F4000000 		.4byte	.LVL39
 4154 0164 F8000000 		.4byte	.LVL40
 4155 0168 0100     		.2byte	0x1
 4156 016a 52       		.byte	0x52
 4157 016b F8000000 		.4byte	.LVL40
 4158 016f 03010000 		.4byte	.LVL42-1
 4159 0173 0100     		.2byte	0x1
 4160 0175 53       		.byte	0x53
 4161 0176 0A010000 		.4byte	.LVL44
 4162 017a 0E010000 		.4byte	.LVL45
 4163 017e 0100     		.2byte	0x1
 4164 0180 52       		.byte	0x52
 4165 0181 0E010000 		.4byte	.LVL45
 4166 0185 19010000 		.4byte	.LVL47-1
 4167 0189 0100     		.2byte	0x1
 4168 018b 53       		.byte	0x53
 4169 018c 00000000 		.4byte	0
 4170 0190 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 115


 4171              	.LLST8:
 4172 0194 00000000 		.4byte	.LVL53
 4173 0198 24000000 		.4byte	.LVL55
 4174 019c 0100     		.2byte	0x1
 4175 019e 50       		.byte	0x50
 4176 019f 24000000 		.4byte	.LVL55
 4177 01a3 27000000 		.4byte	.LVL56-1
 4178 01a7 0100     		.2byte	0x1
 4179 01a9 5C       		.byte	0x5c
 4180 01aa 27000000 		.4byte	.LVL56-1
 4181 01ae D4000000 		.4byte	.LFE9
 4182 01b2 0200     		.2byte	0x2
 4183 01b4 91       		.byte	0x91
 4184 01b5 64       		.sleb128 -28
 4185 01b6 00000000 		.4byte	0
 4186 01ba 00000000 		.4byte	0
 4187              	.LLST9:
 4188 01be 00000000 		.4byte	.LVL53
 4189 01c2 27000000 		.4byte	.LVL56-1
 4190 01c6 0100     		.2byte	0x1
 4191 01c8 51       		.byte	0x51
 4192 01c9 27000000 		.4byte	.LVL56-1
 4193 01cd D4000000 		.4byte	.LFE9
 4194 01d1 0400     		.2byte	0x4
 4195 01d3 F3       		.byte	0xf3
 4196 01d4 01       		.uleb128 0x1
 4197 01d5 51       		.byte	0x51
 4198 01d6 9F       		.byte	0x9f
 4199 01d7 00000000 		.4byte	0
 4200 01db 00000000 		.4byte	0
 4201              	.LLST10:
 4202 01df 2E000000 		.4byte	.LVL57
 4203 01e3 30000000 		.4byte	.LVL58
 4204 01e7 0700     		.2byte	0x7
 4205 01e9 70       		.byte	0x70
 4206 01ea 00       		.sleb128 0
 4207 01eb 0A       		.byte	0xa
 4208 01ec FFFF     		.2byte	0xffff
 4209 01ee 1A       		.byte	0x1a
 4210 01ef 9F       		.byte	0x9f
 4211 01f0 38000000 		.4byte	.LVL60
 4212 01f4 56000000 		.4byte	.LVL62
 4213 01f8 0100     		.2byte	0x1
 4214 01fa 50       		.byte	0x50
 4215 01fb 56000000 		.4byte	.LVL62
 4216 01ff BE000000 		.4byte	.LVL74
 4217 0203 0100     		.2byte	0x1
 4218 0205 57       		.byte	0x57
 4219 0206 00000000 		.4byte	0
 4220 020a 00000000 		.4byte	0
 4221              	.LLST11:
 4222 020e 52000000 		.4byte	.LVL61
 4223 0212 BC000000 		.4byte	.LVL73
 4224 0216 0100     		.2byte	0x1
 4225 0218 56       		.byte	0x56
 4226 0219 00000000 		.4byte	0
 4227 021d 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 116


 4228              	.LLST12:
 4229 0221 52000000 		.4byte	.LVL61
 4230 0225 56000000 		.4byte	.LVL62
 4231 0229 0200     		.2byte	0x2
 4232 022b 30       		.byte	0x30
 4233 022c 9F       		.byte	0x9f
 4234 022d 56000000 		.4byte	.LVL62
 4235 0231 7B000000 		.4byte	.LVL66-1
 4236 0235 0100     		.2byte	0x1
 4237 0237 51       		.byte	0x51
 4238 0238 8E000000 		.4byte	.LVL68
 4239 023c 92000000 		.4byte	.LVL69
 4240 0240 0200     		.2byte	0x2
 4241 0242 30       		.byte	0x30
 4242 0243 9F       		.byte	0x9f
 4243 0244 92000000 		.4byte	.LVL69
 4244 0248 BC000000 		.4byte	.LVL73
 4245 024c 0100     		.2byte	0x1
 4246 024e 51       		.byte	0x51
 4247 024f 00000000 		.4byte	0
 4248 0253 00000000 		.4byte	0
 4249              	.LLST13:
 4250 0257 0C000000 		.4byte	.LVL54
 4251 025b 74000000 		.4byte	.LVL64
 4252 025f 0300     		.2byte	0x3
 4253 0261 08       		.byte	0x8
 4254 0262 40       		.byte	0x40
 4255 0263 9F       		.byte	0x9f
 4256 0264 74000000 		.4byte	.LVL64
 4257 0268 76000000 		.4byte	.LVL65
 4258 026c 0100     		.2byte	0x1
 4259 026e 54       		.byte	0x54
 4260 026f 76000000 		.4byte	.LVL65
 4261 0273 B4000000 		.4byte	.LVL71
 4262 0277 0100     		.2byte	0x1
 4263 0279 55       		.byte	0x55
 4264 027a B4000000 		.4byte	.LVL71
 4265 027e BC000000 		.4byte	.LVL73
 4266 0282 0100     		.2byte	0x1
 4267 0284 54       		.byte	0x54
 4268 0285 00000000 		.4byte	0
 4269 0289 00000000 		.4byte	0
 4270              	.LLST14:
 4271 028d 0C000000 		.4byte	.LVL54
 4272 0291 74000000 		.4byte	.LVL64
 4273 0295 0300     		.2byte	0x3
 4274 0297 08       		.byte	0x8
 4275 0298 20       		.byte	0x20
 4276 0299 9F       		.byte	0x9f
 4277 029a 74000000 		.4byte	.LVL64
 4278 029e 76000000 		.4byte	.LVL65
 4279 02a2 0100     		.2byte	0x1
 4280 02a4 53       		.byte	0x53
 4281 02a5 76000000 		.4byte	.LVL65
 4282 02a9 B8000000 		.4byte	.LVL72
 4283 02ad 0100     		.2byte	0x1
 4284 02af 54       		.byte	0x54
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 117


 4285 02b0 B8000000 		.4byte	.LVL72
 4286 02b4 BC000000 		.4byte	.LVL73
 4287 02b8 0100     		.2byte	0x1
 4288 02ba 53       		.byte	0x53
 4289 02bb 00000000 		.4byte	0
 4290 02bf 00000000 		.4byte	0
 4291              	.LLST15:
 4292 02c3 00000000 		.4byte	.LVL75
 4293 02c7 16000000 		.4byte	.LVL79
 4294 02cb 0100     		.2byte	0x1
 4295 02cd 50       		.byte	0x50
 4296 02ce 16000000 		.4byte	.LVL79
 4297 02d2 20000000 		.4byte	.LFE11
 4298 02d6 0400     		.2byte	0x4
 4299 02d8 F3       		.byte	0xf3
 4300 02d9 01       		.uleb128 0x1
 4301 02da 50       		.byte	0x50
 4302 02db 9F       		.byte	0x9f
 4303 02dc 00000000 		.4byte	0
 4304 02e0 00000000 		.4byte	0
 4305              	.LLST16:
 4306 02e4 06000000 		.4byte	.LVL76
 4307 02e8 0E000000 		.4byte	.LVL77
 4308 02ec 0100     		.2byte	0x1
 4309 02ee 51       		.byte	0x51
 4310 02ef 0E000000 		.4byte	.LVL77
 4311 02f3 14000000 		.4byte	.LVL78
 4312 02f7 0100     		.2byte	0x1
 4313 02f9 53       		.byte	0x53
 4314 02fa 14000000 		.4byte	.LVL78
 4315 02fe 1C000000 		.4byte	.LVL80
 4316 0302 0100     		.2byte	0x1
 4317 0304 51       		.byte	0x51
 4318 0305 1C000000 		.4byte	.LVL80
 4319 0309 20000000 		.4byte	.LFE11
 4320 030d 0100     		.2byte	0x1
 4321 030f 53       		.byte	0x53
 4322 0310 00000000 		.4byte	0
 4323 0314 00000000 		.4byte	0
 4324              	.LLST17:
 4325 0318 00000000 		.4byte	.LVL81
 4326 031c 16000000 		.4byte	.LVL85
 4327 0320 0100     		.2byte	0x1
 4328 0322 50       		.byte	0x50
 4329 0323 16000000 		.4byte	.LVL85
 4330 0327 20000000 		.4byte	.LFE12
 4331 032b 0400     		.2byte	0x4
 4332 032d F3       		.byte	0xf3
 4333 032e 01       		.uleb128 0x1
 4334 032f 50       		.byte	0x50
 4335 0330 9F       		.byte	0x9f
 4336 0331 00000000 		.4byte	0
 4337 0335 00000000 		.4byte	0
 4338              	.LLST18:
 4339 0339 06000000 		.4byte	.LVL82
 4340 033d 14000000 		.4byte	.LVL84
 4341 0341 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 118


 4342 0343 53       		.byte	0x53
 4343 0344 14000000 		.4byte	.LVL84
 4344 0348 1C000000 		.4byte	.LVL86
 4345 034c 0100     		.2byte	0x1
 4346 034e 51       		.byte	0x51
 4347 034f 1C000000 		.4byte	.LVL86
 4348 0353 20000000 		.4byte	.LFE12
 4349 0357 0100     		.2byte	0x1
 4350 0359 53       		.byte	0x53
 4351 035a 00000000 		.4byte	0
 4352 035e 00000000 		.4byte	0
 4353              	.LLST19:
 4354 0362 06000000 		.4byte	.LVL95
 4355 0366 18000000 		.4byte	.LVL98
 4356 036a 0100     		.2byte	0x1
 4357 036c 53       		.byte	0x53
 4358 036d 1A000000 		.4byte	.LVL99
 4359 0371 20000000 		.4byte	.LVL100
 4360 0375 0100     		.2byte	0x1
 4361 0377 52       		.byte	0x52
 4362 0378 20000000 		.4byte	.LVL100
 4363 037c 2E000000 		.4byte	.LFE14
 4364 0380 0100     		.2byte	0x1
 4365 0382 53       		.byte	0x53
 4366 0383 00000000 		.4byte	0
 4367 0387 00000000 		.4byte	0
 4368              	.LLST20:
 4369 038b 00000000 		.4byte	.LVL114
 4370 038f 0C000000 		.4byte	.LVL115
 4371 0393 0100     		.2byte	0x1
 4372 0395 50       		.byte	0x50
 4373 0396 0C000000 		.4byte	.LVL115
 4374 039a 18000000 		.4byte	.LVL118
 4375 039e 0100     		.2byte	0x1
 4376 03a0 54       		.byte	0x54
 4377 03a1 18000000 		.4byte	.LVL118
 4378 03a5 6C000000 		.4byte	.LFE3
 4379 03a9 0400     		.2byte	0x4
 4380 03ab F3       		.byte	0xf3
 4381 03ac 01       		.uleb128 0x1
 4382 03ad 50       		.byte	0x50
 4383 03ae 9F       		.byte	0x9f
 4384 03af 00000000 		.4byte	0
 4385 03b3 00000000 		.4byte	0
 4386              	.LLST21:
 4387 03b7 24000000 		.4byte	.LVL119
 4388 03bb 4E000000 		.4byte	.LVL130
 4389 03bf 0100     		.2byte	0x1
 4390 03c1 55       		.byte	0x55
 4391 03c2 00000000 		.4byte	0
 4392 03c6 00000000 		.4byte	0
 4393              	.LLST22:
 4394 03ca 38000000 		.4byte	.LVL122
 4395 03ce 40000000 		.4byte	.LVL126
 4396 03d2 0100     		.2byte	0x1
 4397 03d4 53       		.byte	0x53
 4398 03d5 40000000 		.4byte	.LVL126
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 119


 4399 03d9 42000000 		.4byte	.LVL127
 4400 03dd 0800     		.2byte	0x8
 4401 03df 75       		.byte	0x75
 4402 03e0 0C       		.sleb128 12
 4403 03e1 94       		.byte	0x94
 4404 03e2 01       		.byte	0x1
 4405 03e3 08       		.byte	0x8
 4406 03e4 FF       		.byte	0xff
 4407 03e5 1A       		.byte	0x1a
 4408 03e6 9F       		.byte	0x9f
 4409 03e7 42000000 		.4byte	.LVL127
 4410 03eb 4E000000 		.4byte	.LVL129
 4411 03ef 0100     		.2byte	0x1
 4412 03f1 54       		.byte	0x54
 4413 03f2 00000000 		.4byte	0
 4414 03f6 00000000 		.4byte	0
 4415              	.LLST23:
 4416 03fa 26000000 		.4byte	.LVL120
 4417 03fe 3A000000 		.4byte	.LVL123
 4418 0402 0100     		.2byte	0x1
 4419 0404 54       		.byte	0x54
 4420 0405 3A000000 		.4byte	.LVL123
 4421 0409 3C000000 		.4byte	.LVL124
 4422 040d 0300     		.2byte	0x3
 4423 040f 74       		.byte	0x74
 4424 0410 01       		.sleb128 1
 4425 0411 9F       		.byte	0x9f
 4426 0412 3E000000 		.4byte	.LVL125
 4427 0416 42000000 		.4byte	.LVL127
 4428 041a 0100     		.2byte	0x1
 4429 041c 54       		.byte	0x54
 4430 041d 00000000 		.4byte	0
 4431 0421 00000000 		.4byte	0
 4432              	.LLST24:
 4433 0425 00000000 		.4byte	.LVL131
 4434 0429 07000000 		.4byte	.LVL132-1
 4435 042d 0100     		.2byte	0x1
 4436 042f 50       		.byte	0x50
 4437 0430 07000000 		.4byte	.LVL132-1
 4438 0434 84000000 		.4byte	.LFE4
 4439 0438 0400     		.2byte	0x4
 4440 043a F3       		.byte	0xf3
 4441 043b 01       		.uleb128 0x1
 4442 043c 50       		.byte	0x50
 4443 043d 9F       		.byte	0x9f
 4444 043e 00000000 		.4byte	0
 4445 0442 00000000 		.4byte	0
 4446              	.LLST25:
 4447 0446 00000000 		.4byte	.LVL131
 4448 044a 07000000 		.4byte	.LVL132-1
 4449 044e 0100     		.2byte	0x1
 4450 0450 51       		.byte	0x51
 4451 0451 07000000 		.4byte	.LVL132-1
 4452 0455 3A000000 		.4byte	.LVL137
 4453 0459 0100     		.2byte	0x1
 4454 045b 54       		.byte	0x54
 4455 045c 3A000000 		.4byte	.LVL137
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 120


 4456 0460 84000000 		.4byte	.LFE4
 4457 0464 0400     		.2byte	0x4
 4458 0466 F3       		.byte	0xf3
 4459 0467 01       		.uleb128 0x1
 4460 0468 51       		.byte	0x51
 4461 0469 9F       		.byte	0x9f
 4462 046a 00000000 		.4byte	0
 4463 046e 00000000 		.4byte	0
 4464              	.LLST26:
 4465 0472 36000000 		.4byte	.LVL136
 4466 0476 4A000000 		.4byte	.LVL138
 4467 047a 0100     		.2byte	0x1
 4468 047c 51       		.byte	0x51
 4469 047d 00000000 		.4byte	0
 4470 0481 00000000 		.4byte	0
 4471              	.LLST27:
 4472 0485 2E000000 		.4byte	.LVL134
 4473 0489 32000000 		.4byte	.LVL135
 4474 048d 0100     		.2byte	0x1
 4475 048f 50       		.byte	0x50
 4476 0490 32000000 		.4byte	.LVL135
 4477 0494 68000000 		.4byte	.LVL141
 4478 0498 0100     		.2byte	0x1
 4479 049a 56       		.byte	0x56
 4480 049b 00000000 		.4byte	0
 4481 049f 00000000 		.4byte	0
 4482              	.LLST28:
 4483 04a3 00000000 		.4byte	.LVL142
 4484 04a7 04000000 		.4byte	.LVL143
 4485 04ab 0100     		.2byte	0x1
 4486 04ad 50       		.byte	0x50
 4487 04ae 04000000 		.4byte	.LVL143
 4488 04b2 14000000 		.4byte	.LFE15
 4489 04b6 0400     		.2byte	0x4
 4490 04b8 F3       		.byte	0xf3
 4491 04b9 01       		.uleb128 0x1
 4492 04ba 50       		.byte	0x50
 4493 04bb 9F       		.byte	0x9f
 4494 04bc 00000000 		.4byte	0
 4495 04c0 00000000 		.4byte	0
 4496              		.section	.debug_aranges,"",%progbits
 4497 0000 9C000000 		.4byte	0x9c
 4498 0004 0200     		.2byte	0x2
 4499 0006 00000000 		.4byte	.Ldebug_info0
 4500 000a 04       		.byte	0x4
 4501 000b 00       		.byte	0
 4502 000c 0000     		.2byte	0
 4503 000e 0000     		.2byte	0
 4504 0010 00000000 		.4byte	.LFB8
 4505 0014 38000000 		.4byte	.LFE8-.LFB8
 4506 0018 00000000 		.4byte	.LFB16
 4507 001c 0C000000 		.4byte	.LFE16-.LFB16
 4508 0020 00000000 		.4byte	.LFB10
 4509 0024 38010000 		.4byte	.LFE10-.LFB10
 4510 0028 00000000 		.4byte	.LFB17
 4511 002c 90000000 		.4byte	.LFE17-.LFB17
 4512 0030 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 121


 4513 0034 DC010000 		.4byte	.LFE1-.LFB1
 4514 0038 00000000 		.4byte	.LFB6
 4515 003c 1C000000 		.4byte	.LFE6-.LFB6
 4516 0040 00000000 		.4byte	.LFB9
 4517 0044 D4000000 		.4byte	.LFE9-.LFB9
 4518 0048 00000000 		.4byte	.LFB11
 4519 004c 20000000 		.4byte	.LFE11-.LFB11
 4520 0050 00000000 		.4byte	.LFB12
 4521 0054 20000000 		.4byte	.LFE12-.LFB12
 4522 0058 00000000 		.4byte	.LFB5
 4523 005c 6C000000 		.4byte	.LFE5-.LFB5
 4524 0060 00000000 		.4byte	.LFB13
 4525 0064 0C000000 		.4byte	.LFE13-.LFB13
 4526 0068 00000000 		.4byte	.LFB14
 4527 006c 2E000000 		.4byte	.LFE14-.LFB14
 4528 0070 00000000 		.4byte	.LFB7
 4529 0074 DC000000 		.4byte	.LFE7-.LFB7
 4530 0078 00000000 		.4byte	.LFB2
 4531 007c 24000000 		.4byte	.LFE2-.LFB2
 4532 0080 00000000 		.4byte	.LFB3
 4533 0084 6C000000 		.4byte	.LFE3-.LFB3
 4534 0088 00000000 		.4byte	.LFB4
 4535 008c 84000000 		.4byte	.LFE4-.LFB4
 4536 0090 00000000 		.4byte	.LFB15
 4537 0094 14000000 		.4byte	.LFE15-.LFB15
 4538 0098 00000000 		.4byte	0
 4539 009c 00000000 		.4byte	0
 4540              		.section	.debug_ranges,"",%progbits
 4541              	.Ldebug_ranges0:
 4542 0000 00000000 		.4byte	.LFB8
 4543 0004 38000000 		.4byte	.LFE8
 4544 0008 00000000 		.4byte	.LFB16
 4545 000c 0C000000 		.4byte	.LFE16
 4546 0010 00000000 		.4byte	.LFB10
 4547 0014 38010000 		.4byte	.LFE10
 4548 0018 00000000 		.4byte	.LFB17
 4549 001c 90000000 		.4byte	.LFE17
 4550 0020 00000000 		.4byte	.LFB1
 4551 0024 DC010000 		.4byte	.LFE1
 4552 0028 00000000 		.4byte	.LFB6
 4553 002c 1C000000 		.4byte	.LFE6
 4554 0030 00000000 		.4byte	.LFB9
 4555 0034 D4000000 		.4byte	.LFE9
 4556 0038 00000000 		.4byte	.LFB11
 4557 003c 20000000 		.4byte	.LFE11
 4558 0040 00000000 		.4byte	.LFB12
 4559 0044 20000000 		.4byte	.LFE12
 4560 0048 00000000 		.4byte	.LFB5
 4561 004c 6C000000 		.4byte	.LFE5
 4562 0050 00000000 		.4byte	.LFB13
 4563 0054 0C000000 		.4byte	.LFE13
 4564 0058 00000000 		.4byte	.LFB14
 4565 005c 2E000000 		.4byte	.LFE14
 4566 0060 00000000 		.4byte	.LFB7
 4567 0064 DC000000 		.4byte	.LFE7
 4568 0068 00000000 		.4byte	.LFB2
 4569 006c 24000000 		.4byte	.LFE2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 122


 4570 0070 00000000 		.4byte	.LFB3
 4571 0074 6C000000 		.4byte	.LFE3
 4572 0078 00000000 		.4byte	.LFB4
 4573 007c 84000000 		.4byte	.LFE4
 4574 0080 00000000 		.4byte	.LFB15
 4575 0084 14000000 		.4byte	.LFE15
 4576 0088 00000000 		.4byte	0
 4577 008c 00000000 		.4byte	0
 4578              		.section	.debug_line,"",%progbits
 4579              	.Ldebug_line0:
 4580 0000 35030000 		.section	.debug_str,"MS",%progbits,1
 4580      0200A800 
 4580      00000201 
 4580      FB0E0D00 
 4580      01010101 
 4581              	.LASF150:
 4582 0000 43617053 		.ascii	"CapSense_curFlashWdgtPtr\000"
 4582      656E7365 
 4582      5F637572 
 4582      466C6173 
 4582      68576467 
 4583              	.LASF139:
 4584 0019 43617053 		.ascii	"CapSense_eleCsxDisconnectFlag\000"
 4584      656E7365 
 4584      5F656C65 
 4584      43737844 
 4584      6973636F 
 4585              	.LASF167:
 4586 0037 43617053 		.ascii	"CapSense_SsCSXPostSingleScan\000"
 4586      656E7365 
 4586      5F537343 
 4586      5358506F 
 4586      73745369 
 4587              	.LASF157:
 4588 0054 43617053 		.ascii	"CapSense_SsSetIOsInDefaultState\000"
 4588      656E7365 
 4588      5F537353 
 4588      6574494F 
 4588      73496E44 
 4589              	.LASF155:
 4590 0074 43617053 		.ascii	"CapSense_BistDischargeExtCapacitors\000"
 4590      656E7365 
 4590      5F426973 
 4590      74446973 
 4590      63686172 
 4591              	.LASF103:
 4592 0098 43617053 		.ascii	"CapSense_CSXInitialize\000"
 4592      656E7365 
 4592      5F435358 
 4592      496E6974 
 4592      69616C69 
 4593              	.LASF105:
 4594 00af 43617053 		.ascii	"CapSense_CSXScanExt\000"
 4594      656E7365 
 4594      5F435358 
 4594      5363616E 
 4594      45787400 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 123


 4595              	.LASF65:
 4596 00c3 736E7254 		.ascii	"snrTestWidgetId\000"
 4596      65737457 
 4596      69646765 
 4596      74496400 
 4597              	.LASF20:
 4598 00d3 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 4598      656E7365 
 4598      5F554E44 
 4598      4546494E 
 4598      45445F45 
 4599              	.LASF8:
 4600 00e8 756E7369 		.ascii	"unsigned int\000"
 4600      676E6564 
 4600      20696E74 
 4600      00
 4601              	.LASF144:
 4602 00f5 43617053 		.ascii	"CapSense_CSXPostScanApiPtr\000"
 4602      656E7365 
 4602      5F435358 
 4602      506F7374 
 4602      5363616E 
 4603              	.LASF114:
 4604 0110 6E657874 		.ascii	"nextIdacMask\000"
 4604      49646163 
 4604      4D61736B 
 4604      00
 4605              	.LASF55:
 4606 011d 7363616E 		.ascii	"scanCounter\000"
 4606      436F756E 
 4606      74657200 
 4607              	.LASF53:
 4608 0129 6877436C 		.ascii	"hwClock\000"
 4608      6F636B00 
 4609              	.LASF117:
 4610 0131 72656756 		.ascii	"regValue\000"
 4610      616C7565 
 4610      00
 4611              	.LASF116:
 4612 013a 74785074 		.ascii	"txPtr\000"
 4612      7200
 4613              	.LASF104:
 4614 0140 696E7465 		.ascii	"interruptState\000"
 4614      72727570 
 4614      74537461 
 4614      746500
 4615              	.LASF132:
 4616 014f 7278496E 		.ascii	"rxIndex\000"
 4616      64657800 
 4617              	.LASF118:
 4618 0157 43617053 		.ascii	"CapSense_CSXConnectRx\000"
 4618      656E7365 
 4618      5F435358 
 4618      436F6E6E 
 4618      65637452 
 4619              	.LASF151:
 4620 016d 4379496E 		.ascii	"CyIntDisable\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 124


 4620      74446973 
 4620      61626C65 
 4620      00
 4621              	.LASF156:
 4622 017a 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 4622      656E7365 
 4622      5F537353 
 4622      65744D6F 
 4622      64436C6B 
 4623              	.LASF43:
 4624 019b 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 4624      656E7365 
 4624      5F52414D 
 4624      5F57445F 
 4624      4C495354 
 4625              	.LASF93:
 4626 01b7 69697246 		.ascii	"iirFilterCoeff\000"
 4626      696C7465 
 4626      72436F65 
 4626      666600
 4627              	.LASF130:
 4628 01c6 73656E73 		.ascii	"sensorId\000"
 4628      6F724964 
 4628      00
 4629              	.LASF123:
 4630 01cf 43617053 		.ascii	"CapSense_SsCSXStartSample\000"
 4630      656E7365 
 4630      5F537343 
 4630      53585374 
 4630      61727453 
 4631              	.LASF134:
 4632 01e9 70747257 		.ascii	"ptrWdgt\000"
 4632      64677400 
 4633              	.LASF113:
 4634 01f1 63757249 		.ascii	"curIdacMask\000"
 4634      6461634D 
 4634      61736B00 
 4635              	.LASF12:
 4636 01fd 666C6F61 		.ascii	"float\000"
 4636      7400
 4637              	.LASF78:
 4638 0203 73686966 		.ascii	"shift\000"
 4638      7400
 4639              	.LASF164:
 4640 0209 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4640      43313120 
 4640      352E342E 
 4640      31203230 
 4640      31363036 
 4641 023c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4641      20726576 
 4641      6973696F 
 4641      6E203233 
 4641      37373135 
 4642 026f 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4642      67202D66 
 4642      66756E63 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 125


 4642      74696F6E 
 4642      2D736563 
 4643              	.LASF98:
 4644 029b 77617463 		.ascii	"watchdogCounter\000"
 4644      68646F67 
 4644      436F756E 
 4644      74657200 
 4645              	.LASF131:
 4646 02ab 7478496E 		.ascii	"txIndex\000"
 4646      64657800 
 4647              	.LASF126:
 4648 02b3 43617053 		.ascii	"CapSense_CSXSetupWidget\000"
 4648      656E7365 
 4648      5F435358 
 4648      53657475 
 4648      70576964 
 4649              	.LASF159:
 4650 02cb 43794465 		.ascii	"CyDelayUs\000"
 4650      6C617955 
 4650      7300
 4651              	.LASF64:
 4652 02d5 736E734C 		.ascii	"snsList\000"
 4652      69737400 
 4653              	.LASF7:
 4654 02dd 6C6F6E67 		.ascii	"long long unsigned int\000"
 4654      206C6F6E 
 4654      6720756E 
 4654      7369676E 
 4654      65642069 
 4655              	.LASF146:
 4656 02f4 43617053 		.ascii	"CapSense_sensorIndex\000"
 4656      656E7365 
 4656      5F73656E 
 4656      736F7249 
 4656      6E646578 
 4657              	.LASF79:
 4658 0309 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 4658      656E7365 
 4658      5F464C41 
 4658      53485F49 
 4658      4F5F5354 
 4659              	.LASF66:
 4660 0322 736E7254 		.ascii	"snrTestSensorId\000"
 4660      65737453 
 4660      656E736F 
 4660      72496400 
 4661              	.LASF115:
 4662 0332 43617053 		.ascii	"CapSense_CSXConnectTx\000"
 4662      656E7365 
 4662      5F435358 
 4662      436F6E6E 
 4662      65637454 
 4663              	.LASF87:
 4664 0348 77646774 		.ascii	"wdgtType\000"
 4664      54797065 
 4664      00
 4665              	.LASF128:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 126


 4666 0351 736E7343 		.ascii	"snsClkVal\000"
 4666      6C6B5661 
 4666      6C00
 4667              	.LASF61:
 4668 035b 6D6F6443 		.ascii	"modCsdClk\000"
 4668      7364436C 
 4668      6B00
 4669              	.LASF49:
 4670 0365 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 4670      656E7365 
 4670      5F52414D 
 4670      5F534E53 
 4670      5F535452 
 4671              	.LASF109:
 4672 037d 74617267 		.ascii	"target\000"
 4672      657400
 4673              	.LASF72:
 4674 0384 64725074 		.ascii	"drPtr\000"
 4674      7200
 4675              	.LASF30:
 4676 038a 68797374 		.ascii	"hysteresis\000"
 4676      65726573 
 4676      697300
 4677              	.LASF94:
 4678 0395 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 4678      656E7365 
 4678      5F464C41 
 4678      53485F57 
 4678      445F5354 
 4679              	.LASF32:
 4680 03ae 6C6F7742 		.ascii	"lowBslnRst\000"
 4680      736C6E52 
 4680      737400
 4681              	.LASF122:
 4682 03b9 43617053 		.ascii	"CapSense_CSXDisconnectRx\000"
 4682      656E7365 
 4682      5F435358 
 4682      44697363 
 4682      6F6E6E65 
 4683              	.LASF168:
 4684 03d2 43617053 		.ascii	"CapSense_SsCalcCsxScanPeriod\000"
 4684      656E7365 
 4684      5F537343 
 4684      616C6343 
 4684      73785363 
 4685              	.LASF40:
 4686 03ef 62746E30 		.ascii	"btn0\000"
 4686      00
 4687              	.LASF41:
 4688 03f4 62746E31 		.ascii	"btn1\000"
 4688      00
 4689              	.LASF42:
 4690 03f9 62746E32 		.ascii	"btn2\000"
 4690      00
 4691              	.LASF86:
 4692 03fe 746F7461 		.ascii	"totalNumSns\000"
 4692      6C4E756D 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 127


 4692      536E7300 
 4693              	.LASF111:
 4694 040a 746F7461 		.ascii	"totalSns\000"
 4694      6C536E73 
 4694      00
 4695              	.LASF28:
 4696 0413 6E6F6973 		.ascii	"noiseTh\000"
 4696      65546800 
 4697              	.LASF14:
 4698 041b 63686172 		.ascii	"char\000"
 4698      00
 4699              	.LASF154:
 4700 0420 43794578 		.ascii	"CyExitCriticalSection\000"
 4700      69744372 
 4700      69746963 
 4700      616C5365 
 4700      6374696F 
 4701              	.LASF76:
 4702 0436 6873696F 		.ascii	"hsiomShift\000"
 4702      6D536869 
 4702      667400
 4703              	.LASF10:
 4704 0441 75696E74 		.ascii	"uint16\000"
 4704      313600
 4705              	.LASF26:
 4706 0448 7265736F 		.ascii	"resolution\000"
 4706      6C757469 
 4706      6F6E00
 4707              	.LASF56:
 4708 0453 73746174 		.ascii	"status\000"
 4708      757300
 4709              	.LASF97:
 4710 045a 66696C74 		.ascii	"filterDelay\000"
 4710      65724465 
 4710      6C617900 
 4711              	.LASF19:
 4712 0466 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 4712      656E7365 
 4712      5F4C4F57 
 4712      5F42534C 
 4712      4E5F5253 
 4713              	.LASF25:
 4714 0481 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 4714      656E7365 
 4714      5F53454E 
 4714      53455F4D 
 4714      4554484F 
 4715              	.LASF48:
 4716 049c 69646163 		.ascii	"idacComp\000"
 4716      436F6D70 
 4716      00
 4717              	.LASF71:
 4718 04a5 70635074 		.ascii	"pcPtr\000"
 4718      7200
 4719              	.LASF6:
 4720 04ab 6C6F6E67 		.ascii	"long long int\000"
 4720      206C6F6E 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 128


 4720      6720696E 
 4720      7400
 4721              	.LASF89:
 4722 04b9 6E756D43 		.ascii	"numCols\000"
 4722      6F6C7300 
 4723              	.LASF121:
 4724 04c1 43617053 		.ascii	"CapSense_CSXDisconnectTx\000"
 4724      656E7365 
 4724      5F435358 
 4724      44697363 
 4724      6F6E6E65 
 4725              	.LASF31:
 4726 04da 6F6E4465 		.ascii	"onDebounce\000"
 4726      626F756E 
 4726      636500
 4727              	.LASF136:
 4728 04e5 43617053 		.ascii	"CapSense_curRxIOPtr\000"
 4728      656E7365 
 4728      5F637572 
 4728      5278494F 
 4728      50747200 
 4729              	.LASF63:
 4730 04f9 77646774 		.ascii	"wdgtList\000"
 4730      4C697374 
 4730      00
 4731              	.LASF143:
 4732 0502 43617053 		.ascii	"CapSense_csxRawCount\000"
 4732      656E7365 
 4732      5F637378 
 4732      52617743 
 4732      6F756E74 
 4733              	.LASF96:
 4734 0517 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 4734      656E7365 
 4734      5F464C41 
 4734      53485F53 
 4734      54525543 
 4735              	.LASF161:
 4736 052d 43617053 		.ascii	"CapSense_Scan\000"
 4736      656E7365 
 4736      5F536361 
 4736      6E00
 4737              	.LASF140:
 4738 053b 43617053 		.ascii	"CapSense_dsRam\000"
 4738      656E7365 
 4738      5F647352 
 4738      616D00
 4739              	.LASF68:
 4740 054a 736E7254 		.ascii	"snrTestRawCount\000"
 4740      65737452 
 4740      6177436F 
 4740      756E7400 
 4741              	.LASF29:
 4742 055a 6E4E6F69 		.ascii	"nNoiseTh\000"
 4742      73655468 
 4742      00
 4743              	.LASF60:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 129


 4744 0563 63736430 		.ascii	"csd0Config\000"
 4744      436F6E66 
 4744      696700
 4745              	.LASF36:
 4746 056e 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 4746      656E7365 
 4746      5F52414D 
 4746      5F57445F 
 4746      42415345 
 4747              	.LASF70:
 4748 058a 6873696F 		.ascii	"hsiomPtr\000"
 4748      6D507472 
 4748      00
 4749              	.LASF125:
 4750 0593 43617053 		.ascii	"CapSense_CSXElectrodeCheck\000"
 4750      656E7365 
 4750      5F435358 
 4750      456C6563 
 4750      74726F64 
 4751              	.LASF11:
 4752 05ae 75696E74 		.ascii	"uint32\000"
 4752      333200
 4753              	.LASF83:
 4754 05b5 70747232 		.ascii	"ptr2FltrHistory\000"
 4754      466C7472 
 4754      48697374 
 4754      6F727900 
 4755              	.LASF137:
 4756 05c5 43617053 		.ascii	"CapSense_curWdgtTotalRx\000"
 4756      656E7365 
 4756      5F637572 
 4756      57646774 
 4756      546F7461 
 4757              	.LASF75:
 4758 05dd 6D61736B 		.ascii	"mask\000"
 4758      00
 4759              	.LASF106:
 4760 05e2 43617053 		.ascii	"CapSense_CSXCalibrateWidget\000"
 4760      656E7365 
 4760      5F435358 
 4760      43616C69 
 4760      62726174 
 4761              	.LASF142:
 4762 05fe 43617053 		.ascii	"CapSense_csxScanPeriod\000"
 4762      656E7365 
 4762      5F637378 
 4762      5363616E 
 4762      50657269 
 4763              	.LASF99:
 4764 0615 73616D70 		.ascii	"sampleClkFreqHz\000"
 4764      6C65436C 
 4764      6B467265 
 4764      71487A00 
 4765              	.LASF129:
 4766 0625 43617053 		.ascii	"CapSense_CSXSetupWidgetExt\000"
 4766      656E7365 
 4766      5F435358 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 130


 4766      53657475 
 4766      70576964 
 4767              	.LASF24:
 4768 0640 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 4768      656E7365 
 4768      5F53454E 
 4768      53455F4D 
 4768      4554484F 
 4769              	.LASF169:
 4770 065c 43617053 		.ascii	"CapSense_SsCSXStartSampleExt\000"
 4770      656E7365 
 4770      5F537343 
 4770      53585374 
 4770      61727453 
 4771              	.LASF16:
 4772 0679 6C6F6E67 		.ascii	"long double\000"
 4772      20646F75 
 4772      626C6500 
 4773              	.LASF15:
 4774 0685 72656733 		.ascii	"reg32\000"
 4774      3200
 4775              	.LASF67:
 4776 068b 736E7254 		.ascii	"snrTestScanCounter\000"
 4776      65737453 
 4776      63616E43 
 4776      6F756E74 
 4776      657200
 4777              	.LASF51:
 4778 069e 636F6E66 		.ascii	"configId\000"
 4778      69674964 
 4778      00
 4779              	.LASF82:
 4780 06a7 70747232 		.ascii	"ptr2SnsRam\000"
 4780      536E7352 
 4780      616D00
 4781              	.LASF135:
 4782 06b2 43617053 		.ascii	"CapSense_curTxIOPtr\000"
 4782      656E7365 
 4782      5F637572 
 4782      5478494F 
 4782      50747200 
 4783              	.LASF59:
 4784 06c6 736E7353 		.ascii	"snsStatus\000"
 4784      74617475 
 4784      7300
 4785              	.LASF35:
 4786 06d0 736E7343 		.ascii	"snsClkSource\000"
 4786      6C6B536F 
 4786      75726365 
 4786      00
 4787              	.LASF170:
 4788 06dd 43617053 		.ascii	"CapSense_SsCSXGetTxClkDivider\000"
 4788      656E7365 
 4788      5F537343 
 4788      53584765 
 4788      74547843 
 4789              	.LASF91:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 131


 4790 06fb 78526573 		.ascii	"xResolution\000"
 4790      6F6C7574 
 4790      696F6E00 
 4791              	.LASF158:
 4792 0707 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 4792      656E7365 
 4792      5F537349 
 4792      7372496E 
 4792      69746961 
 4793              	.LASF2:
 4794 0720 73686F72 		.ascii	"short int\000"
 4794      7420696E 
 4794      7400
 4795              	.LASF69:
 4796 072a 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 4796      656E7365 
 4796      5F52414D 
 4796      5F535452 
 4796      55435400 
 4797              	.LASF4:
 4798 073e 6C6F6E67 		.ascii	"long int\000"
 4798      20696E74 
 4798      00
 4799              	.LASF57:
 4800 0747 77646774 		.ascii	"wdgtEnable\000"
 4800      456E6162 
 4800      6C6500
 4801              	.LASF46:
 4802 0752 64696666 		.ascii	"diff\000"
 4802      00
 4803              	.LASF138:
 4804 0757 43617053 		.ascii	"CapSense_curWdgtTotalTx\000"
 4804      656E7365 
 4804      5F637572 
 4804      57646774 
 4804      546F7461 
 4805              	.LASF54:
 4806 076f 74756E65 		.ascii	"tunerCmd\000"
 4806      72436D64 
 4806      00
 4807              	.LASF100:
 4808 0778 74656D70 		.ascii	"temp\000"
 4808      00
 4809              	.LASF22:
 4810 077d 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 4810      656E7365 
 4810      5F53454E 
 4810      53455F4D 
 4810      4554484F 
 4811              	.LASF73:
 4812 0799 70735074 		.ascii	"psPtr\000"
 4812      7200
 4813              	.LASF160:
 4814 079f 43617053 		.ascii	"CapSense_SetupWidget\000"
 4814      656E7365 
 4814      5F536574 
 4814      75705769 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 132


 4814      64676574 
 4815              	.LASF110:
 4816 07b4 72617754 		.ascii	"rawTarget\000"
 4816      61726765 
 4816      7400
 4817              	.LASF165:
 4818 07be 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_SensingCSX_LL.c\000"
 4818      72617465 
 4818      645F536F 
 4818      75726365 
 4818      5C50536F 
 4819              	.LASF141:
 4820 07ee 43617053 		.ascii	"CapSense_dsFlash\000"
 4820      656E7365 
 4820      5F647346 
 4820      6C617368 
 4820      00
 4821              	.LASF58:
 4822 07ff 77646774 		.ascii	"wdgtStatus\000"
 4822      53746174 
 4822      757300
 4823              	.LASF39:
 4824 080a 43617053 		.ascii	"CapSense_RAM_WD_SLIDER_STRUCT\000"
 4824      656E7365 
 4824      5F52414D 
 4824      5F57445F 
 4824      534C4944 
 4825              	.LASF21:
 4826 0828 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 4826      656E7365 
 4826      5F53454E 
 4826      53455F4D 
 4826      4554484F 
 4827              	.LASF17:
 4828 0844 73697A65 		.ascii	"sizetype\000"
 4828      74797065 
 4828      00
 4829              	.LASF77:
 4830 084d 64725368 		.ascii	"drShift\000"
 4830      69667400 
 4831              	.LASF5:
 4832 0855 6C6F6E67 		.ascii	"long unsigned int\000"
 4832      20756E73 
 4832      69676E65 
 4832      6420696E 
 4832      7400
 4833              	.LASF133:
 4834 0867 72657456 		.ascii	"retVal\000"
 4834      616C00
 4835              	.LASF33:
 4836 086e 69646163 		.ascii	"idacMod\000"
 4836      4D6F6400 
 4837              	.LASF119:
 4838 0876 72785074 		.ascii	"rxPtr\000"
 4838      7200
 4839              	.LASF84:
 4840 087c 70747232 		.ascii	"ptr2DebounceArr\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 133


 4840      4465626F 
 4840      756E6365 
 4840      41727200 
 4841              	.LASF92:
 4842 088c 7843656E 		.ascii	"xCentroidMultiplier\000"
 4842      74726F69 
 4842      644D756C 
 4842      7469706C 
 4842      69657200 
 4843              	.LASF27:
 4844 08a0 66696E67 		.ascii	"fingerTh\000"
 4844      65725468 
 4844      00
 4845              	.LASF45:
 4846 08a9 62736C6E 		.ascii	"bslnExt\000"
 4846      45787400 
 4847              	.LASF37:
 4848 08b1 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 4848      656E7365 
 4848      5F52414D 
 4848      5F57445F 
 4848      42555454 
 4849              	.LASF1:
 4850 08cf 756E7369 		.ascii	"unsigned char\000"
 4850      676E6564 
 4850      20636861 
 4850      7200
 4851              	.LASF107:
 4852 08dd 77646774 		.ascii	"wdgtPtr\000"
 4852      50747200 
 4853              	.LASF112:
 4854 08e5 63616C69 		.ascii	"calibrationIndex\000"
 4854      62726174 
 4854      696F6E49 
 4854      6E646578 
 4854      00
 4855              	.LASF166:
 4856 08f6 433A5C55 		.ascii	"C:\\Users\\michael.machate\\Desktop\\CY8CKIT-145 Co"
 4856      73657273 
 4856      5C6D6963 
 4856      6861656C 
 4856      2E6D6163 
 4857 0925 64652045 		.ascii	"de Example\\CE210709_CapSense_Linear_Slider_and_But"
 4857      78616D70 
 4857      6C655C43 
 4857      45323130 
 4857      3730395F 
 4858 0957 746F6E73 		.ascii	"tons\\CE210709_CapSense_Linear_Slider_and_Buttons.c"
 4858      5C434532 
 4858      31303730 
 4858      395F4361 
 4858      7053656E 
 4859 0989 7964736E 		.ascii	"ydsn\000"
 4859      00
 4860              	.LASF124:
 4861 098e 43617053 		.ascii	"CapSense_SsCSXPostMultiScan\000"
 4861      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 134


 4861      5F537343 
 4861      5358506F 
 4861      73744D75 
 4862              	.LASF85:
 4863 09aa 73746174 		.ascii	"staticConfig\000"
 4863      6963436F 
 4863      6E666967 
 4863      00
 4864              	.LASF88:
 4865 09b7 73656E73 		.ascii	"senseMethod\000"
 4865      654D6574 
 4865      686F6400 
 4866              	.LASF62:
 4867 09c3 6D6F6443 		.ascii	"modCsxClk\000"
 4867      7378436C 
 4867      6B00
 4868              	.LASF102:
 4869 09cd 43617053 		.ascii	"CapSense_CSXScanISR\000"
 4869      656E7365 
 4869      5F435358 
 4869      5363616E 
 4869      49535200 
 4870              	.LASF81:
 4871 09e1 70747232 		.ascii	"ptr2WdgtRam\000"
 4871      57646774 
 4871      52616D00 
 4872              	.LASF18:
 4873 09ed 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 4873      656E7365 
 4873      5F544852 
 4873      4553484F 
 4873      4C445F54 
 4874              	.LASF23:
 4875 0a05 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 4875      656E7365 
 4875      5F53454E 
 4875      53455F4D 
 4875      4554484F 
 4876              	.LASF90:
 4877 0a22 6E756D52 		.ascii	"numRows\000"
 4877      6F777300 
 4878              	.LASF74:
 4879 0a2a 6873696F 		.ascii	"hsiomMask\000"
 4879      6D4D6173 
 4879      6B00
 4880              	.LASF152:
 4881 0a34 4379496E 		.ascii	"CyIntEnable\000"
 4881      74456E61 
 4881      626C6500 
 4882              	.LASF101:
 4883 0a40 746D7052 		.ascii	"tmpRegVal\000"
 4883      65675661 
 4883      6C00
 4884              	.LASF120:
 4885 0a4a 43617053 		.ascii	"CapSense_CSXScan\000"
 4885      656E7365 
 4885      5F435358 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 135


 4885      5363616E 
 4885      00
 4886              	.LASF34:
 4887 0a5b 736E7343 		.ascii	"snsClk\000"
 4887      6C6B00
 4888              	.LASF163:
 4889 0a62 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 4889      656E7365 
 4889      5F537353 
 4889      77697463 
 4889      6853656E 
 4890              	.LASF153:
 4891 0a7f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4891      74657243 
 4891      72697469 
 4891      63616C53 
 4891      65637469 
 4892              	.LASF148:
 4893 0a96 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 4893      656E7365 
 4893      5F637572 
 4893      52616D53 
 4893      6E735074 
 4894              	.LASF0:
 4895 0aac 7369676E 		.ascii	"signed char\000"
 4895      65642063 
 4895      68617200 
 4896              	.LASF149:
 4897 0ab8 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 4897      656E7365 
 4897      5F736361 
 4897      6E467265 
 4897      71496E64 
 4898              	.LASF44:
 4899 0acf 62736C6E 		.ascii	"bsln\000"
 4899      00
 4900              	.LASF3:
 4901 0ad4 73686F72 		.ascii	"short unsigned int\000"
 4901      7420756E 
 4901      7369676E 
 4901      65642069 
 4901      6E7400
 4902              	.LASF127:
 4903 0ae7 63757252 		.ascii	"curRamWdgtBasePtr\000"
 4903      616D5764 
 4903      67744261 
 4903      73655074 
 4903      7200
 4904              	.LASF162:
 4905 0af9 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 4905      656E7365 
 4905      5F537350 
 4905      6F737441 
 4905      6C6C5769 
 4906              	.LASF80:
 4907 0b17 70747232 		.ascii	"ptr2SnsFlash\000"
 4907      536E7346 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccOFvkFu.s 			page 136


 4907      6C617368 
 4907      00
 4908              	.LASF9:
 4909 0b24 75696E74 		.ascii	"uint8\000"
 4909      3800
 4910              	.LASF13:
 4911 0b2a 646F7562 		.ascii	"double\000"
 4911      6C6500
 4912              	.LASF47:
 4913 0b31 6E656742 		.ascii	"negBslnRstCnt\000"
 4913      736C6E52 
 4913      7374436E 
 4913      7400
 4914              	.LASF145:
 4915 0b3f 43617053 		.ascii	"CapSense_widgetIndex\000"
 4915      656E7365 
 4915      5F776964 
 4915      67657449 
 4915      6E646578 
 4916              	.LASF52:
 4917 0b54 64657669 		.ascii	"deviceId\000"
 4917      63654964 
 4917      00
 4918              	.LASF108:
 4919 0b5d 77696467 		.ascii	"widgetId\000"
 4919      65744964 
 4919      00
 4920              	.LASF147:
 4921 0b66 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 4921      656E7365 
 4921      5F726571 
 4921      75657374 
 4921      5363616E 
 4922              	.LASF38:
 4923 0b84 706F7369 		.ascii	"position\000"
 4923      74696F6E 
 4923      00
 4924              	.LASF50:
 4925 0b8d 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 4925      656E7365 
 4925      5F52414D 
 4925      5F534E53 
 4925      5F4C4953 
 4926              	.LASF95:
 4927 0baa 77646774 		.ascii	"wdgtArray\000"
 4927      41727261 
 4927      7900
 4928              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
