ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidivmod
  20              		.section	.text.CapSense_SsCalcLfsrSize,"ax",%progbits
  21              		.align	2
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_SsCalcLfsrSize, %function
  25              	CapSense_SsCalcLfsrSize:
  26              	.LFB21:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 5.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v5.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2017), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (0u != CapSense_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDSetupWidgetExt(), CapSense_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 6


 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_I_REP
 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 7


 316:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 317:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 369:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 8


 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 374:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 9


 430:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 431:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 477:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 10


 487:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 530:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 531:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 534:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 11


 544:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 545:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE != CapSense_USES_MANY_SENSE_MODES)
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for CSD scanning */
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDInitialize();
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for CSX scanning */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXInitialize();
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ISX scanning */
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXInitialize();
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 582:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 585:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 586:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 587:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 588:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 589:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 590:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 592:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 593:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 12


 601:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 645:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 646:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 647:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 648:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 649:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx signal is routed to the sensor
 650:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 651:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 652:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 653:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 654:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 655:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 656:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 13


 658:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 659:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 675:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 676:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 677:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 678:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 679:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 682:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 683:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 685:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 687:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 688:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 691:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 692:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 695:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 696:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 714:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 14


 715:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 716:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 725:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 734:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 735:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 738:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 740:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 742:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 744:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 747:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 770:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 15


 772:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 773:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR);
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 775:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 777:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 778:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 779:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)))
 780:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 781:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 782:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 783:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 784:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 785:Generated_Source\PSoC4/CapSense_Sensing.c ****                    ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 786:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN))) */
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 788:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 789:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 791:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 792:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 793:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 794:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_CSH_HSIOM_PTR);
 795:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_
 796:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 800:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 801:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 802:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 803:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 804:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)) */
 805:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 810:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 811:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 812:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 813:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 814:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 815:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 816:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 817:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 818:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 819:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 820:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 821:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 822:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 823:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
 824:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 825:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 827:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 828:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 16


 829:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 830:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 832:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 833:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 834:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 835:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 837:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 838:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
 839:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 842:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
 849:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 864:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* CapSense_USES_PORT_3 */
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 880:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
 881:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 883:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 884:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 885:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanned.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 17


 886:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 887:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 889:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 890:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 891:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSD mode.
 892:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 895:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 896:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSX mode.
 897:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 898:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
 899:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
 901:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
 902:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
 903:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
 904:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
 905:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 906:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 907:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
 908:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 910:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 935:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 936:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 937:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 18


 943:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 959:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
 966:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 972:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 978:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetIOsInDefaultState
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 988:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 989:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
 990:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 992:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 993:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
 995:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
 996:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 997:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
 998:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 999:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 19


1000:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1001:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1002:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1003:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1004:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1005:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1006:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetIOsInDefaultState(void)
1007:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1010:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 regValue;
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 1. Disconnect HSIOM.
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 2. Set strong DM.
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 3. Set pin state to logic 0.
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1023:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1032:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1036:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 20


1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1066:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1078:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1082:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1090:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_EN) && \
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&  \
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION))
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsSetIOsInDefaultState();
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) && \
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE != CapSense_CSD_SHIELD_EN) &&  \
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION)) */
1098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1103:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1107:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1108:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1109:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1110:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1111:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1112:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1113:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 21


1114:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1115:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1116:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1117:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1119:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1120:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1121:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1122:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1123:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1124:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1125:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1133:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1139:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1141:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1142:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1143:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1144:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1146:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1148:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1149:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1150:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1151:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1152:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1155:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1156:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1157:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1158:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1160:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1162:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1163:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1164:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1165:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1169:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 22


1171:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1174:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1177:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1179:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1183:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1184:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1185:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1186:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1187:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1188:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1189:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1190:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1191:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1192:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1193:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1194:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1195:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1196:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1197:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1198:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1200:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1201:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1202:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1207:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1210:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1211:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1212:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1215:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1219:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1224:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1225:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1226:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1227:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 23


1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1229:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1232:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1233:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1237:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1238:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1242:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1243:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1244:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1246:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1248:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1249:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1250:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1252:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1254:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1255:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1256:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1257:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1259:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1260:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1261:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1262:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1263:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1265:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1271:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1273:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1274:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1275:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1277:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1281:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1282:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1283:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 24


1285:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1289:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1291:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1292:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1293:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1294:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1296:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1297:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1299:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1300:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1301:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1303:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1304:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1305:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1307:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1308:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1309:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1310:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1311:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1312:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1314:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1315:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1316:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1320:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1325:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1326:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1329:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1331:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 25


1342:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1343:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1347:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1356:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1357:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1359:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1360:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1361:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1364:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1365:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1366:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1367:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1368:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1369:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1370:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1371:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1372:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1373:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1378:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1379:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1381:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1382:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1387:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1388:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1389:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1390:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1391:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1392:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1393:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1396:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1397:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1398:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 26


1399:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1400:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1401:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1402:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1403:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1404:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1405:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1406:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1407:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1408:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1409:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1410:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1411:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1412:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1413:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1414:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1415:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1416:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1417:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1418:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1424:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1437:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1443:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1445:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1450:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 27


1456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1457:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1458:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1459:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1463:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1468:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1473:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1474:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1475:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1476:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1477:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1479:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1481:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1482:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1485:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1486:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1492:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1496:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****              /* Update CRC */
1498:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN)
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_DsUpdateWidgetCrc(widgetId);
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN) */
1501:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1503:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1505:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1506:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1512:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 28


1513:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1518:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1526:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1531:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1539:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1547:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1548:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1549:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1551:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1552:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1557:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1558:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
1559:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1561:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense operation.
1563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1564:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1568:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 29


1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1572:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1575:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1576:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1577:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
1578:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1581:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cp = 0uL;
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cpRow = 0uL;
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1586:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cpWidget[CapSense_TOTAL_WIDGETS];
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1590:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Configure common config variables */
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_CSD_IDAC_GAIN_VALUE_NA;
1595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk);
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif ((CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) && (CapSense_DISABLE == CY_PSOC4_400
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1610:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Initialize CSD mode */
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDInitialize();
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
1616:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sensor Cp
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sense clock for all the widgets */
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 30


1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1630:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1632:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = CapSense_CALIBRATION_RESOLUTION;
1635:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_CALIB
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1645:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
1647:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_LEVEL);
1650:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1651:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1657:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get IDAC */
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1660:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calculate achived calibration level */
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcountRow
1663:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Find correct sense clock value */
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1667:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cpRow)
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1672:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1673:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #if (CapSense_ENABLE != CapSense_CSDV2)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 31


1684:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1686:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << CapS
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 {
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_dsRam.modCsdClk;
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 }
1690:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #else
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #endif
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1694:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1696:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calculate achived calibration level */
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcount * CapSense
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1706:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cp)
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1724:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE != CapSense_CSDV2)
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_FLIP_F
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****                              ptrWdgt->snsClk = CapSense_dsRam.modCsdClk;
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1736:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 32


1741:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (cpRow > cp)
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1746:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1749:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1750:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1751:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1752:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_EN)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Non-CSD widget */
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1764:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune resolution for all the widgets */
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1773:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1776:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1779:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set parasitic capacitance for columns */
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1782:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1783:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1785:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1788:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1789:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1790:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1794:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1796:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Set parasitic capacitance for rows */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 33


1798:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get IDAC */
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1803:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1805:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get finger capacitance */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Init pointer to sigPFC */
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1811:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find resolution */
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1823:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1824:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sensitivity for all the widgets */
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1830:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1832:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1834:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1836:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1837:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_DsUpdateWidgetCrc(wdgtIndex);
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
1841:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1846:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
1847:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1848:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 34


1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1856:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1863:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1865:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1868:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1873:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
1874:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1876:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1881:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
1887:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1900:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 35


1912:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
1913:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
1918:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1920:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
1926:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1945:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1952:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
1955:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1956:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
1957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1958:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1959:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
1962:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 36


1969:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
1970:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
1976:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1979:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
1982:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1985:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1989:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2004:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2006:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2011:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2013:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2014:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2017:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2019:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2021:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2024:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2025:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 37


2026:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2045:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2051:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2064:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2065:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2066:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2072:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2077:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 38


2083:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2086:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2091:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2098:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2102:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2104:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2105:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2122:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2130:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2137:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2138:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 39


2140:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2143:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2144:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2157:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2160:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2163:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2169:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2172:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2173:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2174:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2177:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2178:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2179:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2180:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2181:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2182:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2183:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2184:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2185:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2186:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2187:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2188:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2195:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2196:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 40


2197:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2215:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2216:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2218:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2222:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2223:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2230:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2236:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2244:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2251:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 41


2254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2259:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2262:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2280:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2281:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2283:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2289:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2294:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 42


2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2313:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2318:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2321:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2334:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2339:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2345:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2348:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2355:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 43


2368:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2370:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2372:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2373:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2374:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2377:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2381:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2382:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2391:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  28              		.loc 1 2403 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
2404:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
  42              		.loc 1 2407 0
  43 0006 9F28     		cmp	r0, #159
  44 0008 08D9     		bls	.L2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 44


  45              		.loc 1 2407 0 is_stmt 0 discriminator 1
  46 000a 1B4B     		ldr	r3, .L12
  47 000c 9942     		cmp	r1, r3
  48 000e 05D9     		bls	.L2
2408:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
  49              		.loc 1 2409 0 is_stmt 1
  50 0010 1A49     		ldr	r1, .L12+4
  51              	.LVL2:
  52 0012 2800     		movs	r0, r5
  53              	.LVL3:
  54 0014 FFF7FEFF 		bl	__aeabi_uidivmod
  55              	.LVL4:
2408:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
  56              		.loc 1 2408 0
  57 0018 0029     		cmp	r1, #0
  58 001a 21D0     		beq	.L6
  59              	.L2:
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2412:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
  60              		.loc 1 2413 0
  61 001c 9F2C     		cmp	r4, #159
  62 001e 09D9     		bls	.L4
  63              		.loc 1 2413 0 is_stmt 0 discriminator 1
  64 0020 FF23     		movs	r3, #255
  65 0022 5B00     		lsls	r3, r3, #1
  66 0024 9D42     		cmp	r5, r3
  67 0026 05D9     		bls	.L4
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
  68              		.loc 1 2415 0 is_stmt 1
  69 0028 1549     		ldr	r1, .L12+8
  70 002a 2800     		movs	r0, r5
  71 002c FFF7FEFF 		bl	__aeabi_uidivmod
  72              	.LVL5:
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
  73              		.loc 1 2414 0
  74 0030 0029     		cmp	r1, #0
  75 0032 17D0     		beq	.L7
  76              	.L4:
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
  77              		.loc 1 2419 0
  78 0034 9F2C     		cmp	r4, #159
  79 0036 07D9     		bls	.L5
  80              		.loc 1 2419 0 is_stmt 0 discriminator 1
  81 0038 7E2D     		cmp	r5, #126
  82 003a 05D9     		bls	.L5
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
  83              		.loc 1 2421 0 is_stmt 1
  84 003c 7F21     		movs	r1, #127
  85 003e 2800     		movs	r0, r5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 45


  86 0040 FFF7FEFF 		bl	__aeabi_uidivmod
  87              	.LVL6:
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
  88              		.loc 1 2420 0
  89 0044 0029     		cmp	r1, #0
  90 0046 0FD0     		beq	.L8
  91              	.L5:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
  92              		.loc 1 2425 0
  93 0048 9F2C     		cmp	r4, #159
  94 004a 0FD9     		bls	.L9
  95              		.loc 1 2425 0 is_stmt 0 discriminator 1
  96 004c 3E2D     		cmp	r5, #62
  97 004e 0FD9     		bls	.L10
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
  98              		.loc 1 2427 0 is_stmt 1
  99 0050 3F21     		movs	r1, #63
 100 0052 2800     		movs	r0, r5
 101 0054 FFF7FEFF 		bl	__aeabi_uidivmod
 102              	.LVL7:
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 103              		.loc 1 2426 0
 104 0058 0029     		cmp	r1, #0
 105 005a 0BD0     		beq	.L11
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2432:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2433:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
 106              		.loc 1 2433 0
 107 005c 0020     		movs	r0, #0
 108 005e 0AE0     		b	.L3
 109              	.L6:
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 110              		.loc 1 2411 0
 111 0060 0420     		movs	r0, #4
 112 0062 08E0     		b	.L3
 113              	.L7:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 114              		.loc 1 2417 0
 115 0064 0320     		movs	r0, #3
 116 0066 06E0     		b	.L3
 117              	.L8:
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 118              		.loc 1 2423 0
 119 0068 0220     		movs	r0, #2
 120 006a 04E0     		b	.L3
 121              	.L9:
 122              		.loc 1 2433 0
 123 006c 0020     		movs	r0, #0
 124 006e 02E0     		b	.L3
 125              	.L10:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 46


 126 0070 0020     		movs	r0, #0
 127 0072 00E0     		b	.L3
 128              	.L11:
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 129              		.loc 1 2429 0
 130 0074 0120     		movs	r0, #1
 131              	.L3:
 132              	.LVL8:
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 133              		.loc 1 2437 0
 134              		@ sp needed
 135              	.LVL9:
 136              	.LVL10:
 137 0076 70BD     		pop	{r4, r5, r6, pc}
 138              	.L13:
 139              		.align	2
 140              	.L12:
 141 0078 FE030000 		.word	1022
 142 007c FF030000 		.word	1023
 143 0080 FF010000 		.word	511
 144              		.cfi_endproc
 145              	.LFE21:
 146              		.size	CapSense_SsCalcLfsrSize, .-CapSense_SsCalcLfsrSize
 147              		.global	__aeabi_uidiv
 148              		.section	.text.CapSense_SsCalcLfsrScale,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	CapSense_SsCalcLfsrScale, %function
 153              	CapSense_SsCalcLfsrScale:
 154              	.LFB22:
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2440:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2442:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2444:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2446:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2447:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2448:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2449:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2450:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2451:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2452:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2453:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2454:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2455:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2456:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2457:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2458:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2459:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2460:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 47


2461:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2462:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2463:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2464:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2465:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2466:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2467:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2469:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2472:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2473:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2474:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2475:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2476:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2477:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2478:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2479:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 155              		.loc 1 2479 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL11:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
 164              		.loc 1 2485 0
 165 0002 4B1E     		subs	r3, r1, #1
 166 0004 DBB2     		uxtb	r3, r3
 167 0006 032B     		cmp	r3, #3
 168 0008 01D8     		bhi	.L20
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
 169              		.loc 1 2489 0
 170 000a 1023     		movs	r3, #16
 171 000c 00E0     		b	.L15
 172              	.L20:
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2498:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 48


2500:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2507:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
 173              		.loc 1 2509 0
 174 000e 0023     		movs	r3, #0
 175              	.L15:
 176              	.LVL12:
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2513:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
 177              		.loc 1 2517 0
 178 0010 0029     		cmp	r1, #0
 179 0012 11D0     		beq	.L21
 180              		.loc 1 2517 0 is_stmt 0 discriminator 1
 181 0014 002B     		cmp	r3, #0
 182 0016 11D0     		beq	.L22
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
 183              		.loc 1 2520 0 is_stmt 1
 184 0018 6422     		movs	r2, #100
 185 001a 5343     		muls	r3, r2
 186              	.LVL13:
 187 001c 0100     		movs	r1, r0
 188              	.LVL14:
 189 001e 1800     		movs	r0, r3
 190              	.LVL15:
 191 0020 FFF7FEFF 		bl	__aeabi_uidiv
 192              	.LVL16:
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 193              		.loc 1 2521 0
 194 0024 0023     		movs	r3, #0
2522:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
 195              		.loc 1 2523 0
 196 0026 01E0     		b	.L18
 197              	.LVL17:
 198              	.L19:
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
 199              		.loc 1 2525 0
 200 0028 0133     		adds	r3, r3, #1
 201              	.LVL18:
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
 202              		.loc 1 2526 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 49


 203 002a 4000     		lsls	r0, r0, #1
 204              	.LVL19:
 205              	.L18:
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 206              		.loc 1 2523 0
 207 002c 0928     		cmp	r0, #9
 208 002e FBD9     		bls	.L19
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2528:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
 209              		.loc 1 2529 0
 210 0030 0A28     		cmp	r0, #10
 211 0032 04D9     		bls	.L17
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
 212              		.loc 1 2531 0
 213 0034 013B     		subs	r3, r3, #1
 214              	.LVL20:
 215 0036 02E0     		b	.L17
 216              	.LVL21:
 217              	.L21:
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2535:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2536:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 218              		.loc 1 2536 0
 219 0038 0023     		movs	r3, #0
 220              	.LVL22:
 221 003a 00E0     		b	.L17
 222              	.LVL23:
 223              	.L22:
 224 003c 0023     		movs	r3, #0
 225              	.LVL24:
 226              	.L17:
2537:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
 227              		.loc 1 2539 0
 228 003e D8B2     		uxtb	r0, r3
2540:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 229              		.loc 1 2540 0
 230              		@ sp needed
 231 0040 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE22:
 234              		.size	CapSense_SsCalcLfsrScale, .-CapSense_SsCalcLfsrScale
 235 0042 C046     		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
 236              		.align	2
 237              		.code	16
 238              		.thumb_func
 239              		.type	CapSense_SsCSDDisableMode, %function
 240              	CapSense_SsCSDDisableMode:
 241              	.LFB7:
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 242              		.loc 1 769 0
 243              		.cfi_startproc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 50


 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246 0000 10B5     		push	{r4, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 4, -8
 249              		.cfi_offset 14, -4
 773:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 250              		.loc 1 773 0
 251 0002 064A     		ldr	r2, .L24
 252 0004 1368     		ldr	r3, [r2]
 253              	.LVL25:
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 254              		.loc 1 774 0
 255 0006 F021     		movs	r1, #240
 256 0008 8B43     		bics	r3, r1
 257              	.LVL26:
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 258              		.loc 1 775 0
 259 000a 1360     		str	r3, [r2]
 781:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 260              		.loc 1 781 0
 261 000c 044A     		ldr	r2, .L24+4
 262 000e 1368     		ldr	r3, [r2]
 263              	.LVL27:
 782:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 264              		.loc 1 782 0
 265 0010 EF39     		subs	r1, r1, #239
 266 0012 8B43     		bics	r3, r1
 267              	.LVL28:
 783:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 268              		.loc 1 783 0
 269 0014 1360     		str	r3, [r2]
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 270              		.loc 1 789 0
 271 0016 FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 272              	.LVL29:
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 273              		.loc 1 805 0
 274              		@ sp needed
 275 001a 10BD     		pop	{r4, pc}
 276              	.L25:
 277              		.align	2
 278              	.L24:
 279 001c 00040240 		.word	1073873920
 280 0020 A8020B40 		.word	1074463400
 281              		.cfi_endproc
 282              	.LFE7:
 283              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 284              		.section	.text.CapSense_SsDisableCSXMode,"ax",%progbits
 285              		.align	2
 286              		.code	16
 287              		.thumb_func
 288              		.type	CapSense_SsDisableCSXMode, %function
 289              	CapSense_SsDisableCSXMode:
 290              	.LFB8:
 824:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 291              		.loc 1 824 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 51


 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295 0000 10B5     		push	{r4, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 4, -8
 298              		.cfi_offset 14, -4
 828:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 299              		.loc 1 828 0
 300 0002 064B     		ldr	r3, .L27
 301 0004 1968     		ldr	r1, [r3]
 302              	.LVL30:
 829:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 303              		.loc 1 829 0
 304 0006 064A     		ldr	r2, .L27+4
 305 0008 0A40     		ands	r2, r1
 306              	.LVL31:
 830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 307              		.loc 1 830 0
 308 000a 1A60     		str	r2, [r3]
 833:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 309              		.loc 1 833 0
 310 000c 1968     		ldr	r1, [r3]
 311              	.LVL32:
 834:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 312              		.loc 1 834 0
 313 000e 054A     		ldr	r2, .L27+8
 314 0010 0A40     		ands	r2, r1
 315              	.LVL33:
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 316              		.loc 1 835 0
 317 0012 1A60     		str	r2, [r3]
 838:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 318              		.loc 1 838 0
 319 0014 FFF7FEFF 		bl	CapSense_CSXElectrodeCheck
 320              	.LVL34:
 839:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 321              		.loc 1 839 0
 322              		@ sp needed
 323 0018 10BD     		pop	{r4, pc}
 324              	.L28:
 325 001a C046     		.align	2
 326              	.L27:
 327 001c 00040240 		.word	1073873920
 328 0020 FFF0FFFF 		.word	-3841
 329 0024 FF0FFFFF 		.word	-61441
 330              		.cfi_endproc
 331              	.LFE8:
 332              		.size	CapSense_SsDisableCSXMode, .-CapSense_SsDisableCSXMode
 333              		.section	.text.CapSense_SsSetWidgetTxClkSrc,"ax",%progbits
 334              		.align	2
 335              		.code	16
 336              		.thumb_func
 337              		.type	CapSense_SsSetWidgetTxClkSrc, %function
 338              	CapSense_SsSetWidgetTxClkSrc:
 339              	.LFB20:
2339:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 52


 340              		.loc 1 2339 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 0, uses_anonymous_args = 0
 344              	.LVL35:
 345 0000 70B5     		push	{r4, r5, r6, lr}
 346              		.cfi_def_cfa_offset 16
 347              		.cfi_offset 4, -16
 348              		.cfi_offset 5, -12
 349              		.cfi_offset 6, -8
 350              		.cfi_offset 14, -4
 351 0002 0D00     		movs	r5, r1
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
 352              		.loc 1 2351 0
 353 0004 0C88     		ldrh	r4, [r1]
 354              	.LVL36:
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
 355              		.loc 1 2352 0
 356 0006 FFF7FEFF 		bl	CapSense_SsCSXGetTxClkDivider
 357              	.LVL37:
 358 000a 0600     		movs	r6, r0
 359              	.LVL38:
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
 360              		.loc 1 2353 0
 361 000c 2100     		movs	r1, r4
 362 000e FFF7FEFF 		bl	CapSense_SsCalcLfsrSize
 363              	.LVL39:
 364 0012 0400     		movs	r4, r0
 365              	.LVL40:
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 366              		.loc 1 2354 0
 367 0014 0100     		movs	r1, r0
 368 0016 3000     		movs	r0, r6
 369              	.LVL41:
 370 0018 FFF7FEFF 		bl	CapSense_SsCalcLfsrScale
 371              	.LVL42:
2368:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 372              		.loc 1 2368 0
 373 001c 0001     		lsls	r0, r0, #4
 374              	.LVL43:
 375 001e C0B2     		uxtb	r0, r0
 376 0020 2043     		orrs	r0, r4
 377 0022 2873     		strb	r0, [r5, #12]
2369:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
 378              		.loc 1 2369 0
 379              		@ sp needed
 380              	.LVL44:
 381              	.LVL45:
 382 0024 70BD     		pop	{r4, r5, r6, pc}
 383              		.cfi_endproc
 384              	.LFE20:
 385              		.size	CapSense_SsSetWidgetTxClkSrc, .-CapSense_SsSetWidgetTxClkSrc
 386 0026 C046     		.section	.text.CapSense_IsBusy,"ax",%progbits
 387              		.align	2
 388              		.global	CapSense_IsBusy
 389              		.code	16
 390              		.thumb_func
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 53


 391              		.type	CapSense_IsBusy, %function
 392              	CapSense_IsBusy:
 393              	.LFB1:
 234:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 394              		.loc 1 234 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 399              		.loc 1 235 0
 400 0000 024B     		ldr	r3, .L31
 401 0002 DB68     		ldr	r3, [r3, #12]
 402 0004 8020     		movs	r0, #128
 403 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 404              		.loc 1 236 0
 405              		@ sp needed
 406 0008 7047     		bx	lr
 407              	.L32:
 408 000a C046     		.align	2
 409              	.L31:
 410 000c 00000000 		.word	CapSense_dsRam
 411              		.cfi_endproc
 412              	.LFE1:
 413              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 414              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 415              		.align	2
 416              		.global	CapSense_SetupWidget
 417              		.code	16
 418              		.thumb_func
 419              		.type	CapSense_SetupWidget, %function
 420              	CapSense_SetupWidget:
 421              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 422              		.loc 1 286 0
 423              		.cfi_startproc
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              	.LVL46:
 427 0000 10B5     		push	{r4, lr}
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 4, -8
 430              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 431              		.loc 1 289 0
 432 0002 164B     		ldr	r3, .L43
 433 0004 DB68     		ldr	r3, [r3, #12]
 434 0006 DB03     		lsls	r3, r3, #15
 435 0008 0DD4     		bmi	.L38
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 436              		.loc 1 299 0
 437 000a 0328     		cmp	r0, #3
 438 000c 0DD8     		bhi	.L39
 300:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 439              		.loc 1 300 0 discriminator 1
 440 000e 4309     		lsrs	r3, r0, #5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 54


 441 0010 0433     		adds	r3, r3, #4
 442 0012 9B00     		lsls	r3, r3, #2
 443 0014 114A     		ldr	r2, .L43
 444 0016 9B58     		ldr	r3, [r3, r2]
 445 0018 1F22     		movs	r2, #31
 446 001a 0240     		ands	r2, r0
 447 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 448              		.loc 1 299 0 discriminator 1
 449 001e DB07     		lsls	r3, r3, #31
 450 0020 05D4     		bmi	.L40
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 451              		.loc 1 307 0
 452 0022 0124     		movs	r4, #1
 453 0024 04E0     		b	.L34
 454              	.L38:
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 455              		.loc 1 292 0
 456 0026 1124     		movs	r4, #17
 457 0028 02E0     		b	.L34
 458              	.L39:
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 459              		.loc 1 307 0
 460 002a 0124     		movs	r4, #1
 461 002c 00E0     		b	.L34
 462              	.L40:
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 463              		.loc 1 303 0
 464 002e 0024     		movs	r4, #0
 465              	.L34:
 466              	.LVL47:
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 467              		.loc 1 314 0
 468 0030 002C     		cmp	r4, #0
 469 0032 11D1     		bne	.L35
 316:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 470              		.loc 1 316 0
 471 0034 8200     		lsls	r2, r0, #2
 472 0036 1218     		adds	r2, r2, r0
 473 0038 D300     		lsls	r3, r2, #3
 474 003a 094A     		ldr	r2, .L43+4
 475 003c D318     		adds	r3, r2, r3
 476 003e DB7E     		ldrb	r3, [r3, #27]
 477 0040 012B     		cmp	r3, #1
 478 0042 04D0     		beq	.L36
 479 0044 022B     		cmp	r3, #2
 480 0046 05D1     		bne	.L42
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 481              		.loc 1 321 0
 482 0048 FFF7FEFF 		bl	CapSense_CSXSetupWidget
 483              	.LVL48:
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 484              		.loc 1 322 0
 485 004c 04E0     		b	.L35
 486              	.LVL49:
 487              	.L36:
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 55


 488              		.loc 1 327 0
 489 004e FFF7FEFF 		bl	CapSense_CSDSetupWidget
 490              	.LVL50:
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 491              		.loc 1 328 0
 492 0052 01E0     		b	.L35
 493              	.LVL51:
 494              	.L42:
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 495              		.loc 1 338 0
 496 0054 0124     		movs	r4, #1
 497              	.LVL52:
 498 0056 6442     		rsbs	r4, r4, #0
 499              	.LVL53:
 500              	.L35:
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 501              		.loc 1 343 0
 502 0058 2000     		movs	r0, r4
 503              		@ sp needed
 504              	.LVL54:
 505 005a 10BD     		pop	{r4, pc}
 506              	.L44:
 507              		.align	2
 508              	.L43:
 509 005c 00000000 		.word	CapSense_dsRam
 510 0060 00000000 		.word	CapSense_dsFlash
 511              		.cfi_endproc
 512              	.LFE2:
 513              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 514              		.section	.text.CapSense_Scan,"ax",%progbits
 515              		.align	2
 516              		.global	CapSense_Scan
 517              		.code	16
 518              		.thumb_func
 519              		.type	CapSense_Scan, %function
 520              	CapSense_Scan:
 521              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 522              		.loc 1 369 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526 0000 10B5     		push	{r4, lr}
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 4, -8
 529              		.cfi_offset 14, -4
 530              	.LVL55:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 531              		.loc 1 372 0
 532 0002 0B4B     		ldr	r3, .L52
 533 0004 DB68     		ldr	r3, [r3, #12]
 534 0006 DB03     		lsls	r3, r3, #15
 535 0008 0DD4     		bmi	.L49
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 536              		.loc 1 379 0
 537 000a 0A4B     		ldr	r3, .L52+4
 538 000c 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 56


 539 000e 012B     		cmp	r3, #1
 540 0010 05D0     		beq	.L47
 541 0012 022B     		cmp	r3, #2
 542 0014 09D1     		bne	.L51
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 543              		.loc 1 383 0
 544 0016 FFF7FEFF 		bl	CapSense_CSXScan
 545              	.LVL56:
 370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 546              		.loc 1 370 0
 547 001a 0020     		movs	r0, #0
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 548              		.loc 1 384 0
 549 001c 07E0     		b	.L46
 550              	.L47:
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 551              		.loc 1 388 0
 552 001e FFF7FEFF 		bl	CapSense_CSDScan
 553              	.LVL57:
 370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 554              		.loc 1 370 0
 555 0022 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 556              		.loc 1 389 0
 557 0024 03E0     		b	.L46
 558              	.L49:
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 559              		.loc 1 375 0
 560 0026 1120     		movs	r0, #17
 561 0028 01E0     		b	.L46
 562              	.L51:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 563              		.loc 1 397 0
 564 002a 0120     		movs	r0, #1
 565 002c 4042     		rsbs	r0, r0, #0
 566              	.L46:
 567              	.LVL58:
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 568              		.loc 1 402 0
 569              		@ sp needed
 570 002e 10BD     		pop	{r4, pc}
 571              	.L53:
 572              		.align	2
 573              	.L52:
 574 0030 00000000 		.word	CapSense_dsRam
 575 0034 00000000 		.word	.LANCHOR0
 576              		.cfi_endproc
 577              	.LFE3:
 578              		.size	CapSense_Scan, .-CapSense_Scan
 579              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 580              		.align	2
 581              		.global	CapSense_ScanAllWidgets
 582              		.code	16
 583              		.thumb_func
 584              		.type	CapSense_ScanAllWidgets, %function
 585              	CapSense_ScanAllWidgets:
 586              	.LFB4:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 57


 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 587              		.loc 1 431 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591 0000 10B5     		push	{r4, lr}
 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 4, -8
 594              		.cfi_offset 14, -4
 595              	.LVL59:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 596              		.loc 1 436 0
 597 0002 0F4B     		ldr	r3, .L62
 598 0004 DB68     		ldr	r3, [r3, #12]
 599 0006 1B06     		lsls	r3, r3, #24
 600 0008 18D4     		bmi	.L61
 601 000a 0024     		movs	r4, #0
 602 000c 0120     		movs	r0, #1
 603 000e 4042     		rsbs	r0, r0, #0
 604 0010 11E0     		b	.L56
 605              	.LVL60:
 606              	.L60:
 452:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 607              		.loc 1 452 0
 608 0012 2000     		movs	r0, r4
 609              	.LVL61:
 610 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 611              	.LVL62:
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 612              		.loc 1 454 0
 613 0018 0028     		cmp	r0, #0
 614 001a 0BD1     		bne	.L57
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 615              		.loc 1 458 0
 616 001c 022C     		cmp	r4, #2
 617 001e 03D8     		bhi	.L58
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 618              		.loc 1 461 0
 619 0020 0122     		movs	r2, #1
 620 0022 084B     		ldr	r3, .L62+4
 621 0024 5A70     		strb	r2, [r3, #1]
 622 0026 02E0     		b	.L59
 623              	.L58:
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 624              		.loc 1 466 0
 625 0028 0022     		movs	r2, #0
 626 002a 064B     		ldr	r3, .L62+4
 627 002c 5A70     		strb	r2, [r3, #1]
 628              	.L59:
 476:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 629              		.loc 1 476 0
 630 002e FFF7FEFF 		bl	CapSense_Scan
 631              	.LVL63:
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 632              		.loc 1 478 0
 633 0032 04E0     		b	.L55
 634              	.L57:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 58


 449:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 635              		.loc 1 449 0
 636 0034 0134     		adds	r4, r4, #1
 637              	.LVL64:
 638              	.L56:
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 639              		.loc 1 447 0 discriminator 1
 640 0036 032C     		cmp	r4, #3
 641 0038 EBD9     		bls	.L60
 642 003a 00E0     		b	.L55
 643              	.LVL65:
 644              	.L61:
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 645              		.loc 1 439 0
 646 003c 1120     		movs	r0, #17
 647              	.LVL66:
 648              	.L55:
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 649              		.loc 1 484 0
 650              		@ sp needed
 651 003e 10BD     		pop	{r4, pc}
 652              	.L63:
 653              		.align	2
 654              	.L62:
 655 0040 00000000 		.word	CapSense_dsRam
 656 0044 00000000 		.word	.LANCHOR0
 657              		.cfi_endproc
 658              	.LFE4:
 659              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 660              		.section	.text.CapSense_SetPinState,"ax",%progbits
 661              		.align	2
 662              		.global	CapSense_SetPinState
 663              		.code	16
 664              		.thumb_func
 665              		.type	CapSense_SetPinState, %function
 666              	CapSense_SetPinState:
 667              	.LFB6:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 668              		.loc 1 656 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              	.LVL67:
 673 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 674              		.cfi_def_cfa_offset 24
 675              		.cfi_offset 3, -24
 676              		.cfi_offset 4, -20
 677              		.cfi_offset 5, -16
 678              		.cfi_offset 6, -12
 679              		.cfi_offset 7, -8
 680              		.cfi_offset 14, -4
 681 0002 1600     		movs	r6, r2
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 682              		.loc 1 681 0
 683 0004 8300     		lsls	r3, r0, #2
 684 0006 1818     		adds	r0, r3, r0
 685              	.LVL68:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 59


 686 0008 C300     		lsls	r3, r0, #3
 687 000a 364A     		ldr	r2, .L74
 688              	.LVL69:
 689 000c 9C58     		ldr	r4, [r3, r2]
 690 000e CB00     		lsls	r3, r1, #3
 691 0010 591A     		subs	r1, r3, r1
 692              	.LVL70:
 693 0012 8B00     		lsls	r3, r1, #2
 694 0014 E418     		adds	r4, r4, r3
 695              	.LVL71:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 696              		.loc 1 686 0
 697 0016 0025     		movs	r5, #0
 698 0018 61E0     		b	.L65
 699              	.LVL72:
 700              	.L73:
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 701              		.loc 1 689 0
 702 001a FFF7FEFF 		bl	CyEnterCriticalSection
 703              	.LVL73:
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 704              		.loc 1 690 0
 705 001e 2168     		ldr	r1, [r4]
 706 0020 0B68     		ldr	r3, [r1]
 707 0022 277E     		ldrb	r7, [r4, #24]
 708 0024 0F22     		movs	r2, #15
 709 0026 BA40     		lsls	r2, r2, r7
 710 0028 9343     		bics	r3, r2
 711 002a 0B60     		str	r3, [r1]
 691:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 712              		.loc 1 691 0
 713 002c 6168     		ldr	r1, [r4, #4]
 714 002e 0B68     		ldr	r3, [r1]
 715 0030 A77E     		ldrb	r7, [r4, #26]
 716 0032 0722     		movs	r2, #7
 717 0034 BA40     		lsls	r2, r2, r7
 718 0036 9343     		bics	r3, r2
 719 0038 0B60     		str	r3, [r1]
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 720              		.loc 1 692 0
 721 003a FFF7FEFF 		bl	CyExitCriticalSection
 722              	.LVL74:
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 723              		.loc 1 694 0
 724 003e 052E     		cmp	r6, #5
 725 0040 4BD8     		bhi	.L66
 726 0042 B300     		lsls	r3, r6, #2
 727 0044 284A     		ldr	r2, .L74+4
 728 0046 D358     		ldr	r3, [r2, r3]
 729 0048 9F46     		mov	pc, r3
 730              		.section	.rodata
 731              		.align	2
 732              	.L68:
 733 0000 4A000000 		.word	.L67
 734 0004 70000000 		.word	.L69
 735 0008 DA000000 		.word	.L66
 736 000c 88000000 		.word	.L70
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 60


 737 0010 90000000 		.word	.L71
 738 0014 B6000000 		.word	.L72
 739              		.section	.text.CapSense_SetPinState
 740              	.L67:
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 741              		.loc 1 698 0
 742 004a FFF7FEFF 		bl	CyEnterCriticalSection
 743              	.LVL75:
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 744              		.loc 1 699 0
 745 004e 6268     		ldr	r2, [r4, #4]
 746 0050 1168     		ldr	r1, [r2]
 747 0052 A77E     		ldrb	r7, [r4, #26]
 748 0054 0623     		movs	r3, #6
 749 0056 BB40     		lsls	r3, r3, r7
 750 0058 0B43     		orrs	r3, r1
 751 005a 1360     		str	r3, [r2]
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 752              		.loc 1 700 0
 753 005c A168     		ldr	r1, [r4, #8]
 754 005e 0B68     		ldr	r3, [r1]
 755 0060 677E     		ldrb	r7, [r4, #25]
 756 0062 0122     		movs	r2, #1
 757 0064 BA40     		lsls	r2, r2, r7
 758 0066 9343     		bics	r3, r2
 759 0068 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 760              		.loc 1 701 0
 761 006a FFF7FEFF 		bl	CyExitCriticalSection
 762              	.LVL76:
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 763              		.loc 1 702 0
 764 006e 34E0     		b	.L66
 765              	.L69:
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 766              		.loc 1 705 0
 767 0070 FFF7FEFF 		bl	CyEnterCriticalSection
 768              	.LVL77:
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 769              		.loc 1 706 0
 770 0074 A168     		ldr	r1, [r4, #8]
 771 0076 0B68     		ldr	r3, [r1]
 772 0078 677E     		ldrb	r7, [r4, #25]
 773 007a 0122     		movs	r2, #1
 774 007c BA40     		lsls	r2, r2, r7
 775 007e 9343     		bics	r3, r2
 776 0080 0B60     		str	r3, [r1]
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 777              		.loc 1 707 0
 778 0082 FFF7FEFF 		bl	CyExitCriticalSection
 779              	.LVL78:
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 780              		.loc 1 708 0
 781 0086 28E0     		b	.L66
 782              	.L70:
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 783              		.loc 1 713 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 61


 784 0088 2000     		movs	r0, r4
 785 008a FFF7FEFF 		bl	CapSense_CSDConnectSns
 786              	.LVL79:
 714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 787              		.loc 1 714 0
 788 008e 24E0     		b	.L66
 789              	.L71:
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 790              		.loc 1 729 0
 791 0090 FFF7FEFF 		bl	CyEnterCriticalSection
 792              	.LVL80:
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 793              		.loc 1 730 0
 794 0094 2268     		ldr	r2, [r4]
 795 0096 1168     		ldr	r1, [r2]
 796 0098 277E     		ldrb	r7, [r4, #24]
 797 009a 0423     		movs	r3, #4
 798 009c BB40     		lsls	r3, r3, r7
 799 009e 0B43     		orrs	r3, r1
 800 00a0 1360     		str	r3, [r2]
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 801              		.loc 1 731 0
 802 00a2 6268     		ldr	r2, [r4, #4]
 803 00a4 1168     		ldr	r1, [r2]
 804 00a6 A77E     		ldrb	r7, [r4, #26]
 805 00a8 0623     		movs	r3, #6
 806 00aa BB40     		lsls	r3, r3, r7
 807 00ac 0B43     		orrs	r3, r1
 808 00ae 1360     		str	r3, [r2]
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 809              		.loc 1 732 0
 810 00b0 FFF7FEFF 		bl	CyExitCriticalSection
 811              	.LVL81:
 733:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 812              		.loc 1 733 0
 813 00b4 11E0     		b	.L66
 814              	.L72:
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 815              		.loc 1 736 0
 816 00b6 FFF7FEFF 		bl	CyEnterCriticalSection
 817              	.LVL82:
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 818              		.loc 1 737 0
 819 00ba 2268     		ldr	r2, [r4]
 820 00bc 1168     		ldr	r1, [r2]
 821 00be 277E     		ldrb	r7, [r4, #24]
 822 00c0 0623     		movs	r3, #6
 823 00c2 BB40     		lsls	r3, r3, r7
 824 00c4 0B43     		orrs	r3, r1
 825 00c6 1360     		str	r3, [r2]
 738:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 826              		.loc 1 738 0
 827 00c8 6168     		ldr	r1, [r4, #4]
 828 00ca 0B68     		ldr	r3, [r1]
 829 00cc A77E     		ldrb	r7, [r4, #26]
 830 00ce 0722     		movs	r2, #7
 831 00d0 BA40     		lsls	r2, r2, r7
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 62


 832 00d2 9343     		bics	r3, r2
 833 00d4 0B60     		str	r3, [r1]
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 834              		.loc 1 739 0
 835 00d6 FFF7FEFF 		bl	CyExitCriticalSection
 836              	.LVL83:
 837              	.L66:
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 838              		.loc 1 748 0 discriminator 2
 839 00da 1C34     		adds	r4, r4, #28
 840              	.LVL84:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 841              		.loc 1 686 0 discriminator 2
 842 00dc 0135     		adds	r5, r5, #1
 843              	.LVL85:
 844              	.L65:
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 845              		.loc 1 686 0 is_stmt 0 discriminator 1
 846 00de 002D     		cmp	r5, #0
 847 00e0 9BD0     		beq	.L73
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 848              		.loc 1 750 0 is_stmt 1
 849              		@ sp needed
 850              	.LVL86:
 851              	.LVL87:
 852              	.LVL88:
 853 00e2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 854              	.L75:
 855              		.align	2
 856              	.L74:
 857 00e4 00000000 		.word	CapSense_dsFlash
 858 00e8 00000000 		.word	.L68
 859              		.cfi_endproc
 860              	.LFE6:
 861              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 862              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 863              		.align	2
 864              		.global	CapSense_SsSwitchSensingMode
 865              		.code	16
 866              		.thumb_func
 867              		.type	CapSense_SsSwitchSensingMode, %function
 868              	CapSense_SsSwitchSensingMode:
 869              	.LFB9:
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 870              		.loc 1 908 0
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 0
 873              		@ frame_needed = 0, uses_anonymous_args = 0
 874              	.LVL89:
 875 0000 10B5     		push	{r4, lr}
 876              		.cfi_def_cfa_offset 8
 877              		.cfi_offset 4, -8
 878              		.cfi_offset 14, -4
 879 0002 0400     		movs	r4, r0
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 880              		.loc 1 909 0
 881 0004 124B     		ldr	r3, .L82
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 63


 882 0006 1B78     		ldrb	r3, [r3]
 883 0008 8342     		cmp	r3, r0
 884 000a 1FD0     		beq	.L76
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 885              		.loc 1 912 0
 886 000c 012B     		cmp	r3, #1
 887 000e 02D1     		bne	.L78
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 888              		.loc 1 915 0
 889 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 890              	.LVL90:
 891 0014 03E0     		b	.L79
 892              	.LVL91:
 893              	.L78:
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 894              		.loc 1 918 0
 895 0016 022B     		cmp	r3, #2
 896 0018 01D1     		bne	.L79
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 897              		.loc 1 921 0
 898 001a FFF7FEFF 		bl	CapSense_SsDisableCSXMode
 899              	.LVL92:
 900              	.L79:
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 901              		.loc 1 945 0
 902 001e 012C     		cmp	r4, #1
 903 0020 05D1     		bne	.L80
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 904              		.loc 1 949 0
 905 0022 FFF7FEFF 		bl	CapSense_SsCSDInitialize
 906              	.LVL93:
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 907              		.loc 1 950 0
 908 0026 0122     		movs	r2, #1
 909 0028 094B     		ldr	r3, .L82
 910 002a 1A70     		strb	r2, [r3]
 911 002c 0EE0     		b	.L76
 912              	.L80:
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 913              		.loc 1 953 0
 914 002e 022C     		cmp	r4, #2
 915 0030 05D1     		bne	.L81
 957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 916              		.loc 1 957 0
 917 0032 FFF7FEFF 		bl	CapSense_CSXInitialize
 918              	.LVL94:
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 919              		.loc 1 958 0
 920 0036 0222     		movs	r2, #2
 921 0038 054B     		ldr	r3, .L82
 922 003a 1A70     		strb	r2, [r3]
 923 003c 06E0     		b	.L76
 924              	.L81:
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 925              		.loc 1 961 0
 926 003e 042C     		cmp	r4, #4
 927 0040 04D0     		beq	.L76
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 64


 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 928              		.loc 1 969 0
 929 0042 032C     		cmp	r4, #3
 930 0044 02D0     		beq	.L76
 978:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 931              		.loc 1 978 0
 932 0046 0022     		movs	r2, #0
 933 0048 014B     		ldr	r3, .L82
 934 004a 1A70     		strb	r2, [r3]
 935              	.L76:
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 936              		.loc 1 981 0
 937              		@ sp needed
 938 004c 10BD     		pop	{r4, pc}
 939              	.L83:
 940 004e C046     		.align	2
 941              	.L82:
 942 0050 00000000 		.word	.LANCHOR0
 943              		.cfi_endproc
 944              	.LFE9:
 945              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 946              		.section	.text.CapSense_SsSetIOsInDefaultState,"ax",%progbits
 947              		.align	2
 948              		.global	CapSense_SsSetIOsInDefaultState
 949              		.code	16
 950              		.thumb_func
 951              		.type	CapSense_SsSetIOsInDefaultState, %function
 952              	CapSense_SsSetIOsInDefaultState:
 953              	.LFB10:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
 954              		.loc 1 1007 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958 0000 30B5     		push	{r4, r5, lr}
 959              		.cfi_def_cfa_offset 12
 960              		.cfi_offset 4, -12
 961              		.cfi_offset 5, -8
 962              		.cfi_offset 14, -4
 963              	.LVL95:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 964              		.loc 1 1013 0
 965 0002 0020     		movs	r0, #0
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
 966              		.loc 1 1008 0
 967 0004 0D4B     		ldr	r3, .L87
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 968              		.loc 1 1013 0
 969 0006 16E0     		b	.L85
 970              	.LVL96:
 971              	.L86:
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 972              		.loc 1 1020 0 discriminator 3
 973 0008 1968     		ldr	r1, [r3]
 974 000a 0A68     		ldr	r2, [r1]
 975              	.LVL97:
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 65


 976              		.loc 1 1021 0 discriminator 3
 977 000c 1C69     		ldr	r4, [r3, #16]
 978 000e A243     		bics	r2, r4
 979              	.LVL98:
1022:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 980              		.loc 1 1022 0 discriminator 3
 981 0010 0A60     		str	r2, [r1]
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
 982              		.loc 1 1024 0 discriminator 3
 983 0012 5C68     		ldr	r4, [r3, #4]
 984 0014 2268     		ldr	r2, [r4]
 985              	.LVL99:
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
 986              		.loc 1 1025 0 discriminator 3
 987 0016 9D7E     		ldrb	r5, [r3, #26]
 988 0018 0721     		movs	r1, #7
 989 001a A940     		lsls	r1, r1, r5
 990 001c 8A43     		bics	r2, r1
 991              	.LVL100:
 992 001e 1100     		movs	r1, r2
 993              	.LVL101:
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 994              		.loc 1 1026 0 discriminator 3
 995 0020 0622     		movs	r2, #6
 996 0022 AA40     		lsls	r2, r2, r5
 997 0024 0A43     		orrs	r2, r1
 998              	.LVL102:
1027:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 999              		.loc 1 1027 0 discriminator 3
 1000 0026 2260     		str	r2, [r4]
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
 1001              		.loc 1 1029 0 discriminator 3
 1002 0028 9968     		ldr	r1, [r3, #8]
 1003 002a 0A68     		ldr	r2, [r1]
 1004              	.LVL103:
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 1005              		.loc 1 1030 0 discriminator 3
 1006 002c 5C69     		ldr	r4, [r3, #20]
 1007 002e A243     		bics	r2, r4
 1008              	.LVL104:
1031:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1009              		.loc 1 1031 0 discriminator 3
 1010 0030 0A60     		str	r2, [r1]
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1011              		.loc 1 1034 0 discriminator 3
 1012 0032 1C33     		adds	r3, r3, #28
 1013              	.LVL105:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1014              		.loc 1 1013 0 discriminator 3
 1015 0034 0130     		adds	r0, r0, #1
 1016              	.LVL106:
 1017              	.L85:
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1018              		.loc 1 1013 0 is_stmt 0 discriminator 1
 1019 0036 0A28     		cmp	r0, #10
 1020 0038 E6D9     		bls	.L86
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 66


 1021              		.loc 1 1040 0 is_stmt 1
 1022              		@ sp needed
 1023 003a 30BD     		pop	{r4, r5, pc}
 1024              	.L88:
 1025              		.align	2
 1026              	.L87:
 1027 003c 00000000 		.word	CapSense_ioList
 1028              		.cfi_endproc
 1029              	.LFE10:
 1030              		.size	CapSense_SsSetIOsInDefaultState, .-CapSense_SsSetIOsInDefaultState
 1031              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 1032              		.align	2
 1033              		.global	CapSense_SsPostAllWidgetsScan
 1034              		.code	16
 1035              		.thumb_func
 1036              		.type	CapSense_SsPostAllWidgetsScan, %function
 1037              	CapSense_SsPostAllWidgetsScan:
 1038              	.LFB11:
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 1039              		.loc 1 1125 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043 0000 10B5     		push	{r4, lr}
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 4, -8
 1046              		.cfi_offset 14, -4
 1047              	.L94:
1136:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1048              		.loc 1 1136 0
 1049 0002 1B4A     		ldr	r2, .L95
 1050 0004 9378     		ldrb	r3, [r2, #2]
 1051 0006 0133     		adds	r3, r3, #1
 1052 0008 DBB2     		uxtb	r3, r3
 1053 000a 9370     		strb	r3, [r2, #2]
1138:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1054              		.loc 1 1138 0
 1055 000c 9078     		ldrb	r0, [r2, #2]
 1056 000e C0B2     		uxtb	r0, r0
 1057 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 1058              	.LVL107:
 1059 0014 041E     		subs	r4, r0, #0
 1060              	.LVL108:
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1061              		.loc 1 1140 0
 1062 0016 09D1     		bne	.L90
1142:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1063              		.loc 1 1142 0
 1064 0018 154B     		ldr	r3, .L95
 1065 001a 9B78     		ldrb	r3, [r3, #2]
 1066 001c 032B     		cmp	r3, #3
 1067 001e 02D1     		bne	.L91
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1068              		.loc 1 1145 0
 1069 0020 0022     		movs	r2, #0
 1070 0022 134B     		ldr	r3, .L95
 1071 0024 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 67


 1072              	.L91:
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1073              		.loc 1 1147 0
 1074 0026 FFF7FEFF 		bl	CapSense_Scan
 1075              	.LVL109:
 1076 002a 1EE0     		b	.L92
 1077              	.LVL110:
 1078              	.L90:
1149:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1079              		.loc 1 1149 0
 1080 002c 104B     		ldr	r3, .L95
 1081 002e 9B78     		ldrb	r3, [r3, #2]
 1082 0030 032B     		cmp	r3, #3
 1083 0032 11D1     		bne	.L93
1163:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 1084              		.loc 1 1163 0
 1085 0034 0F4B     		ldr	r3, .L95+4
 1086 0036 1A89     		ldrh	r2, [r3, #8]
 1087 0038 0132     		adds	r2, r2, #1
 1088 003a 1A81     		strh	r2, [r3, #8]
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1089              		.loc 1 1165 0
 1090 003c DA68     		ldr	r2, [r3, #12]
 1091 003e 8021     		movs	r1, #128
 1092 0040 8A43     		bics	r2, r1
 1093 0042 DA60     		str	r2, [r3, #12]
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 1094              		.loc 1 1168 0
 1095 0044 DA68     		ldr	r2, [r3, #12]
 1096 0046 1202     		lsls	r2, r2, #8
 1097 0048 120A     		lsrs	r2, r2, #8
 1098 004a DA60     		str	r2, [r3, #12]
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1099              		.loc 1 1169 0
 1100 004c DA68     		ldr	r2, [r3, #12]
 1101 004e 0406     		lsls	r4, r0, #24
 1102 0050 1443     		orrs	r4, r2
 1103 0052 DC60     		str	r4, [r3, #12]
 1104              	.LVL111:
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1105              		.loc 1 1172 0
 1106 0054 0024     		movs	r4, #0
 1107 0056 08E0     		b	.L92
 1108              	.LVL112:
 1109              	.L93:
1177:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 1110              		.loc 1 1177 0
 1111 0058 064A     		ldr	r2, .L95+4
 1112 005a D368     		ldr	r3, [r2, #12]
 1113 005c 1B02     		lsls	r3, r3, #8
 1114 005e 1B0A     		lsrs	r3, r3, #8
 1115 0060 D360     		str	r3, [r2, #12]
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1116              		.loc 1 1178 0
 1117 0062 D168     		ldr	r1, [r2, #12]
 1118 0064 0306     		lsls	r3, r0, #24
 1119 0066 0B43     		orrs	r3, r1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 68


 1120 0068 D360     		str	r3, [r2, #12]
 1121              	.LVL113:
 1122              	.L92:
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
 1123              		.loc 1 1180 0
 1124 006a 002C     		cmp	r4, #0
 1125 006c C9D1     		bne	.L94
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1126              		.loc 1 1182 0
 1127              		@ sp needed
 1128              	.LVL114:
 1129 006e 10BD     		pop	{r4, pc}
 1130              	.L96:
 1131              		.align	2
 1132              	.L95:
 1133 0070 00000000 		.word	.LANCHOR0
 1134 0074 00000000 		.word	CapSense_dsRam
 1135              		.cfi_endproc
 1136              	.LFE11:
 1137              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 1138              		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 1139              		.align	2
 1140              		.global	CapSense_SsIsrInitialize
 1141              		.code	16
 1142              		.thumb_func
 1143              		.type	CapSense_SsIsrInitialize, %function
 1144              	CapSense_SsIsrInitialize:
 1145              	.LFB12:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 1146              		.loc 1 1202 0
 1147              		.cfi_startproc
 1148              		@ args = 0, pretend = 0, frame = 0
 1149              		@ frame_needed = 0, uses_anonymous_args = 0
 1150              	.LVL115:
 1151 0000 10B5     		push	{r4, lr}
 1152              		.cfi_def_cfa_offset 8
 1153              		.cfi_offset 4, -8
 1154              		.cfi_offset 14, -4
1203:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1155              		.loc 1 1203 0
 1156 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 1157              	.LVL116:
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1158              		.loc 1 1204 0
 1159              		@ sp needed
 1160 0006 10BD     		pop	{r4, pc}
 1161              		.cfi_endproc
 1162              	.LFE12:
 1163              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 1164              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 1165              		.align	2
 1166              		.global	CapSense_SsSetModClkClockDivider
 1167              		.code	16
 1168              		.thumb_func
 1169              		.type	CapSense_SsSetModClkClockDivider, %function
 1170              	CapSense_SsSetModClkClockDivider:
 1171              	.LFB13:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 69


1225:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 1172              		.loc 1 1225 0
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 0, uses_anonymous_args = 0
 1176              		@ link register save eliminated.
 1177              	.LVL117:
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 1178              		.loc 1 1228 0
 1179 0000 074A     		ldr	r2, .L100
 1180 0002 084B     		ldr	r3, .L100+4
 1181 0004 1A60     		str	r2, [r3]
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1182              		.loc 1 1238 0
 1183 0006 0138     		subs	r0, r0, #1
 1184              	.LVL118:
 1185 0008 0002     		lsls	r0, r0, #8
 1186              	.LVL119:
 1187 000a 074B     		ldr	r3, .L100+8
 1188 000c 1860     		str	r0, [r3]
 1189              	.L99:
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1190              		.loc 1 1241 0 discriminator 1
 1191 000e 054B     		ldr	r3, .L100+4
 1192 0010 1B68     		ldr	r3, [r3]
 1193 0012 002B     		cmp	r3, #0
 1194 0014 FBDB     		blt	.L99
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 1195              		.loc 1 1247 0
 1196 0016 054A     		ldr	r2, .L100+12
 1197 0018 024B     		ldr	r3, .L100+4
 1198 001a 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1199              		.loc 1 1272 0
 1200              		@ sp needed
 1201 001c 7047     		bx	lr
 1202              	.L101:
 1203 001e C046     		.align	2
 1204              	.L100:
 1205 0020 40000040 		.word	1073741888
 1206 0024 00000140 		.word	1073807360
 1207 0028 00030140 		.word	1073808128
 1208 002c 40FF0080 		.word	-2147418304
 1209              		.cfi_endproc
 1210              	.LFE13:
 1211              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 1212              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 1213              		.align	2
 1214              		.global	CapSense_SsSetSnsClockDivider
 1215              		.code	16
 1216              		.thumb_func
 1217              		.type	CapSense_SsSetSnsClockDivider, %function
 1218              	CapSense_SsSetSnsClockDivider:
 1219              	.LFB14:
1293:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 1220              		.loc 1 1293 0
 1221              		.cfi_startproc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 70


 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 0, uses_anonymous_args = 0
 1224              		@ link register save eliminated.
 1225              	.LVL120:
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
 1226              		.loc 1 1302 0
 1227 0000 034A     		ldr	r2, .L103
 1228 0002 1368     		ldr	r3, [r2]
 1229              	.LVL121:
1303:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 1230              		.loc 1 1303 0
 1231 0004 1B0B     		lsrs	r3, r3, #12
 1232              	.LVL122:
 1233 0006 1B03     		lsls	r3, r3, #12
 1234              	.LVL123:
1304:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 1235              		.loc 1 1304 0
 1236 0008 0138     		subs	r0, r0, #1
 1237              	.LVL124:
 1238 000a 1843     		orrs	r0, r3
 1239              	.LVL125:
1305:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 1240              		.loc 1 1305 0
 1241 000c 1060     		str	r0, [r2]
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1242              		.loc 1 1354 0
 1243              		@ sp needed
 1244 000e 7047     		bx	lr
 1245              	.L104:
 1246              		.align	2
 1247              	.L103:
 1248 0010 00020B40 		.word	1074463232
 1249              		.cfi_endproc
 1250              	.LFE14:
 1251              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 1252              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 1253              		.align	2
 1254              		.global	CapSense_SsSetClockDividers
 1255              		.code	16
 1256              		.thumb_func
 1257              		.type	CapSense_SsSetClockDividers, %function
 1258              	CapSense_SsSetClockDividers:
 1259              	.LFB15:
1377:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 1260              		.loc 1 1377 0
 1261              		.cfi_startproc
 1262              		@ args = 0, pretend = 0, frame = 0
 1263              		@ frame_needed = 0, uses_anonymous_args = 0
 1264              	.LVL126:
 1265 0000 10B5     		push	{r4, lr}
 1266              		.cfi_def_cfa_offset 8
 1267              		.cfi_offset 4, -8
 1268              		.cfi_offset 14, -4
 1269 0002 0400     		movs	r4, r0
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1270              		.loc 1 1379 0
 1271 0004 0800     		movs	r0, r1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 71


 1272              	.LVL127:
 1273 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1274              	.LVL128:
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1275              		.loc 1 1382 0
 1276 000a 2000     		movs	r0, r4
 1277 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 1278              	.LVL129:
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1279              		.loc 1 1383 0
 1280              		@ sp needed
 1281              	.LVL130:
 1282 0010 10BD     		pop	{r4, pc}
 1283              		.cfi_endproc
 1284              	.LFE15:
 1285              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 1286 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 1287              		.align	2
 1288              		.global	CapSense_CalibrateWidget
 1289              		.code	16
 1290              		.thumb_func
 1291              		.type	CapSense_CalibrateWidget, %function
 1292              	CapSense_CalibrateWidget:
 1293              	.LFB16:
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1294              		.loc 1 1429 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 0, uses_anonymous_args = 0
 1298              	.LVL131:
 1299 0000 70B5     		push	{r4, r5, r6, lr}
 1300              		.cfi_def_cfa_offset 16
 1301              		.cfi_offset 4, -16
 1302              		.cfi_offset 5, -12
 1303              		.cfi_offset 6, -8
 1304              		.cfi_offset 14, -4
 1305 0002 0400     		movs	r4, r0
 1306              	.LVL132:
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1307              		.loc 1 1434 0
 1308 0004 0328     		cmp	r0, #3
 1309 0006 01D8     		bhi	.L110
1430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1310              		.loc 1 1430 0
 1311 0008 0025     		movs	r5, #0
 1312 000a 00E0     		b	.L107
 1313              	.L110:
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1314              		.loc 1 1436 0
 1315 000c 0125     		movs	r5, #1
 1316              	.L107:
 1317              	.LVL133:
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1318              		.loc 1 1454 0
 1319 000e 002D     		cmp	r5, #0
 1320 0010 12D1     		bne	.L108
1465:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 72


 1321              		.loc 1 1465 0
 1322 0012 A200     		lsls	r2, r4, #2
 1323 0014 1219     		adds	r2, r2, r4
 1324 0016 D300     		lsls	r3, r2, #3
 1325 0018 084A     		ldr	r2, .L111
 1326 001a D318     		adds	r3, r2, r3
 1327 001c DE7E     		ldrb	r6, [r3, #27]
1464:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 1328              		.loc 1 1464 0
 1329 001e 022E     		cmp	r6, #2
 1330 0020 03D1     		bne	.L109
1468:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 1331              		.loc 1 1468 0
 1332 0022 2821     		movs	r1, #40
 1333 0024 2000     		movs	r0, r4
 1334              	.LVL134:
 1335 0026 FFF7FEFF 		bl	CapSense_CSXCalibrateWidget
 1336              	.LVL135:
 1337              	.L109:
1473:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 1338              		.loc 1 1473 0
 1339 002a 012E     		cmp	r6, #1
 1340 002c 04D1     		bne	.L108
1477:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 1341              		.loc 1 1477 0
 1342 002e 5521     		movs	r1, #85
 1343 0030 2000     		movs	r0, r4
 1344 0032 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1345              	.LVL136:
 1346 0036 0500     		movs	r5, r0
 1347              	.LVL137:
 1348              	.L108:
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1349              		.loc 1 1505 0
 1350 0038 2800     		movs	r0, r5
 1351              		@ sp needed
 1352              	.LVL138:
 1353              	.LVL139:
 1354 003a 70BD     		pop	{r4, r5, r6, pc}
 1355              	.L112:
 1356              		.align	2
 1357              	.L111:
 1358 003c 00000000 		.word	CapSense_dsFlash
 1359              		.cfi_endproc
 1360              	.LFE16:
 1361              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 1362              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 1363              		.align	2
 1364              		.global	CapSense_CalibrateAllWidgets
 1365              		.code	16
 1366              		.thumb_func
 1367              		.type	CapSense_CalibrateAllWidgets, %function
 1368              	CapSense_CalibrateAllWidgets:
 1369              	.LFB17:
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1370              		.loc 1 1542 0
 1371              		.cfi_startproc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 73


 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374 0000 70B5     		push	{r4, r5, r6, lr}
 1375              		.cfi_def_cfa_offset 16
 1376              		.cfi_offset 4, -16
 1377              		.cfi_offset 5, -12
 1378              		.cfi_offset 6, -8
 1379              		.cfi_offset 14, -4
 1380              	.LVL140:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1381              		.loc 1 1546 0
 1382 0002 0024     		movs	r4, #0
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1383              		.loc 1 1543 0
 1384 0004 0025     		movs	r5, #0
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1385              		.loc 1 1546 0
 1386 0006 04E0     		b	.L114
 1387              	.LVL141:
 1388              	.L115:
1548:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1389              		.loc 1 1548 0 discriminator 3
 1390 0008 2000     		movs	r0, r4
 1391 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1392              	.LVL142:
 1393 000e 0543     		orrs	r5, r0
 1394              	.LVL143:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1395              		.loc 1 1546 0 discriminator 3
 1396 0010 0134     		adds	r4, r4, #1
 1397              	.LVL144:
 1398              	.L114:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1399              		.loc 1 1546 0 is_stmt 0 discriminator 1
 1400 0012 032C     		cmp	r4, #3
 1401 0014 F8D9     		bls	.L115
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1402              		.loc 1 1552 0 is_stmt 1
 1403 0016 2800     		movs	r0, r5
 1404              		@ sp needed
 1405              	.LVL145:
 1406              	.LVL146:
 1407 0018 70BD     		pop	{r4, r5, r6, pc}
 1408              		.cfi_endproc
 1409              	.LFE17:
 1410              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1411 001a C046     		.section	.text.CapSense_SsClearCSDSensors,"ax",%progbits
 1412              		.align	2
 1413              		.global	CapSense_SsClearCSDSensors
 1414              		.code	16
 1415              		.thumb_func
 1416              		.type	CapSense_SsClearCSDSensors, %function
 1417              	CapSense_SsClearCSDSensors:
 1418              	.LFB23:
2541:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2542:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 74


2544:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2550:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2551:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsClearCSDSensors
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2559:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  an inactive state.
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  connection is Ground or Hi-Z.
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsClearCSDSensors(void)
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1419              		.loc 1 2569 0
 1420              		.cfi_startproc
 1421              		@ args = 0, pretend = 0, frame = 0
 1422              		@ frame_needed = 0, uses_anonymous_args = 0
 1423 0000 70B5     		push	{r4, r5, r6, lr}
 1424              		.cfi_def_cfa_offset 16
 1425              		.cfi_offset 4, -16
 1426              		.cfi_offset 5, -12
 1427              		.cfi_offset 6, -8
 1428              		.cfi_offset 14, -4
 1429              	.LVL147:
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
2572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 pinIndex;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Declare ptr to sensor IO structure */
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr;
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
 1430              		.loc 1 2585 0
 1431 0002 0025     		movs	r5, #0
 1432 0004 1EE0     		b	.L117
 1433              	.LVL148:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 75


 1434              	.L121:
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2587:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2588:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
 1435              		.loc 1 2588 0
 1436 0006 AA00     		lsls	r2, r5, #2
 1437 0008 5219     		adds	r2, r2, r5
 1438 000a D300     		lsls	r3, r2, #3
 1439 000c 0F4A     		ldr	r2, .L122
 1440 000e D318     		adds	r3, r2, r3
 1441 0010 DB7E     		ldrb	r3, [r3, #27]
2587:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
 1442              		.loc 1 2587 0
 1443 0012 012B     		cmp	r3, #1
 1444 0014 15D1     		bne	.L118
2589:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2590:Generated_Source\PSoC4/CapSense_Sensing.c ****                 curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 1445              		.loc 1 2590 0
 1446 0016 AB00     		lsls	r3, r5, #2
 1447 0018 5B19     		adds	r3, r3, r5
 1448 001a DA00     		lsls	r2, r3, #3
 1449 001c 0B4B     		ldr	r3, .L122
 1450 001e D658     		ldr	r6, [r2, r3]
 1451              	.LVL149:
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                 CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash;
2592:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Go through all the sensors in widget */
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_dsFlash.wdgtArray[wdgtIndex].totalNu
 1452              		.loc 1 2594 0
 1453 0020 0024     		movs	r4, #0
 1454 0022 06E0     		b	.L119
 1455              	.LVL150:
 1456              	.L120:
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2597:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Check ganged sns flag */
2598:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[wdgtIndex].stat
2599:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                  CapSense_GANGED_SNS_MASK))
2600:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2601:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get sns pointer */
2602:Generated_Source\PSoC4/CapSense_Sensing.c ****                             curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
2603:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                CapSense_dsFlash.wdgtArray[wdgtIndex
2604:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                snsIndex;
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2606:Generated_Source\PSoC4/CapSense_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2607:Generated_Source\PSoC4/CapSense_Sensing.c ****                             {
2608:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2609:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId 
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2611:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Disconnect dedicated pin */
2612:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 CapSense_CSDDisconnectSns(curDedicatedSnsIOPtr);
2613:Generated_Source\PSoC4/CapSense_Sensing.c ****                             }
2614:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2615:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2616:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2617:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Disable sensor */
2618:Generated_Source\PSoC4/CapSense_Sensing.c ****                             CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 76


2619:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2620:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable sensor */
2622:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 1457              		.loc 1 2622 0 discriminator 3
 1458 0024 E300     		lsls	r3, r4, #3
 1459 0026 1B1B     		subs	r3, r3, r4
 1460 0028 9800     		lsls	r0, r3, #2
 1461 002a 3018     		adds	r0, r6, r0
 1462 002c FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1463              	.LVL151:
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1464              		.loc 1 2594 0 discriminator 3
 1465 0030 0134     		adds	r4, r4, #1
 1466              	.LVL152:
 1467              	.L119:
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1468              		.loc 1 2594 0 is_stmt 0 discriminator 1
 1469 0032 AA00     		lsls	r2, r5, #2
 1470 0034 5219     		adds	r2, r2, r5
 1471 0036 D300     		lsls	r3, r2, #3
 1472 0038 044A     		ldr	r2, .L122
 1473 003a D318     		adds	r3, r2, r3
 1474 003c 1B7E     		ldrb	r3, [r3, #24]
 1475 003e 9C42     		cmp	r4, r3
 1476 0040 F0D3     		bcc	.L120
 1477              	.LVL153:
 1478              	.L118:
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1479              		.loc 1 2585 0 is_stmt 1 discriminator 2
 1480 0042 0135     		adds	r5, r5, #1
 1481              	.LVL154:
 1482              	.L117:
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1483              		.loc 1 2585 0 is_stmt 0 discriminator 1
 1484 0044 032D     		cmp	r5, #3
 1485 0046 DED9     		bls	.L121
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1486              		.loc 1 2627 0 is_stmt 1
 1487              		@ sp needed
 1488              	.LVL155:
 1489 0048 70BD     		pop	{r4, r5, r6, pc}
 1490              	.L123:
 1491 004a C046     		.align	2
 1492              	.L122:
 1493 004c 00000000 		.word	CapSense_dsFlash
 1494              		.cfi_endproc
 1495              	.LFE23:
 1496              		.size	CapSense_SsClearCSDSensors, .-CapSense_SsClearCSDSensors
 1497              		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1498              		.align	2
 1499              		.global	CapSense_SsCSDGetColSnsClkDivider
 1500              		.code	16
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 77


 1501              		.thumb_func
 1502              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1503              	CapSense_SsCSDGetColSnsClkDivider:
 1504              	.LFB24:
2628:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1505              		.loc 1 2651 0
 1506              		.cfi_startproc
 1507              		@ args = 0, pretend = 0, frame = 0
 1508              		@ frame_needed = 0, uses_anonymous_args = 0
 1509              		@ link register save eliminated.
 1510              	.LVL156:
2652:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2653:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2654:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2655:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2656:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2658:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1511              		.loc 1 2658 0
 1512 0000 8300     		lsls	r3, r0, #2
 1513 0002 1818     		adds	r0, r3, r0
 1514              	.LVL157:
 1515 0004 C300     		lsls	r3, r0, #3
 1516 0006 024A     		ldr	r2, .L125
 1517 0008 D318     		adds	r3, r2, r3
 1518 000a 5B68     		ldr	r3, [r3, #4]
 1519              	.LVL158:
2659:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2661:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1520              		.loc 1 2661 0
 1521 000c 5889     		ldrh	r0, [r3, #10]
 1522              	.LVL159:
2662:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 78


2663:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2665:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2666:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2668:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2669:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1523              		.loc 1 2669 0
 1524              		@ sp needed
 1525 000e 7047     		bx	lr
 1526              	.L126:
 1527              		.align	2
 1528              	.L125:
 1529 0010 00000000 		.word	CapSense_dsFlash
 1530              		.cfi_endproc
 1531              	.LFE24:
 1532              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1533              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1534              		.align	2
 1535              		.global	CapSense_SsCSDCalcPrsSize
 1536              		.code	16
 1537              		.thumb_func
 1538              		.type	CapSense_SsCSDCalcPrsSize, %function
 1539              	CapSense_SsCSDCalcPrsSize:
 1540              	.LFB25:
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2672:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2673:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2674:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2675:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2676:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2677:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2678:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2679:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2680:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2681:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2682:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2683:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2684:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2685:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2686:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2687:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2688:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2689:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2690:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2691:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2692:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2693:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2694:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2695:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2696:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2700:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 79


2702:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2704:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2708:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2711:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2715:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2716:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2730:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1541              		.loc 1 2738 0
 1542              		.cfi_startproc
 1543              		@ args = 0, pretend = 0, frame = 0
 1544              		@ frame_needed = 0, uses_anonymous_args = 0
 1545              		@ link register save eliminated.
 1546              	.LVL160:
2739:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if ((CapSense_ENABLE != CapSense_CSDV2) && \
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK))
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2745:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1547              		.loc 1 2747 0
 1548 0000 0203     		lsls	r2, r0, #12
 1549 0002 121A     		subs	r2, r2, r0
 1550 0004 0123     		movs	r3, #1
 1551 0006 8B40     		lsls	r3, r3, r1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 80


 1552 0008 013B     		subs	r3, r3, #1
 1553 000a 9A42     		cmp	r2, r3
 1554 000c 05D9     		bls	.L129
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1555              		.loc 1 2752 0
 1556 000e 0202     		lsls	r2, r0, #8
 1557 0010 101A     		subs	r0, r2, r0
 1558              	.LVL161:
 1559 0012 8342     		cmp	r3, r0
 1560 0014 03D3     		bcc	.L130
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2755:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1561              		.loc 1 2755 0
 1562 0016 0520     		movs	r0, #5
 1563 0018 02E0     		b	.L128
 1564              	.LVL162:
 1565              	.L129:
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1566              		.loc 1 2750 0
 1567 001a 0620     		movs	r0, #6
 1568              	.LVL163:
 1569 001c 00E0     		b	.L128
 1570              	.L130:
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2757:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2758:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2759:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1571              		.loc 1 2760 0
 1572 001e 0020     		movs	r0, #0
 1573              	.L128:
 1574              	.LVL164:
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2762:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1575              		.loc 1 2763 0
 1576 0020 C0B2     		uxtb	r0, r0
 1577              	.LVL165:
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1578              		.loc 1 2764 0
 1579              		@ sp needed
 1580 0022 7047     		bx	lr
 1581              		.cfi_endproc
 1582              	.LFE25:
 1583              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1584              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1585              		.align	2
 1586              		.code	16
 1587              		.thumb_func
 1588              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1589              	CapSense_SsSetWidgetSenseClkSrc:
 1590              	.LFB19:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 81


2241:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1591              		.loc 1 2241 0
 1592              		.cfi_startproc
 1593              		@ args = 0, pretend = 0, frame = 0
 1594              		@ frame_needed = 0, uses_anonymous_args = 0
 1595              	.LVL166:
 1596 0000 70B5     		push	{r4, r5, r6, lr}
 1597              		.cfi_def_cfa_offset 16
 1598              		.cfi_offset 4, -16
 1599              		.cfi_offset 5, -12
 1600              		.cfi_offset 6, -8
 1601              		.cfi_offset 14, -4
 1602 0002 0E00     		movs	r6, r1
2253:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1603              		.loc 1 2253 0
 1604 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1605              	.LVL167:
 1606 0008 0500     		movs	r5, r0
 1607              	.LVL168:
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
 1608              		.loc 1 2256 0
 1609 000a 3188     		ldrh	r1, [r6]
 1610 000c 0022     		movs	r2, #0
 1611 000e FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 1612              	.LVL169:
 1613 0012 0100     		movs	r1, r0
 1614              	.LVL170:
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
 1615              		.loc 1 2258 0
 1616 0014 2800     		movs	r0, r5
 1617              	.LVL171:
 1618 0016 FFF7FEFF 		bl	CapSense_SsCalcLfsrSize
 1619              	.LVL172:
 1620 001a 041E     		subs	r4, r0, #0
 1621              	.LVL173:
2259:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1622              		.loc 1 2259 0
 1623 001c 04D1     		bne	.L132
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1624              		.loc 1 2265 0
 1625 001e 6800     		lsls	r0, r5, #1
 1626              	.LVL174:
 1627 0020 3188     		ldrh	r1, [r6]
 1628 0022 FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1629              	.LVL175:
 1630 0026 0400     		movs	r4, r0
 1631              	.LVL176:
 1632              	.L132:
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 1633              		.loc 1 2267 0
 1634 0028 2100     		movs	r1, r4
 1635 002a 2800     		movs	r0, r5
 1636 002c FFF7FEFF 		bl	CapSense_SsCalcLfsrScale
 1637              	.LVL177:
2282:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1638              		.loc 1 2282 0
 1639 0030 0001     		lsls	r0, r0, #4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 82


 1640              	.LVL178:
 1641 0032 C0B2     		uxtb	r0, r0
 1642 0034 2043     		orrs	r0, r4
 1643 0036 3073     		strb	r0, [r6, #12]
2317:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1644              		.loc 1 2317 0
 1645              		@ sp needed
 1646              	.LVL179:
 1647              	.LVL180:
 1648              	.LVL181:
 1649 0038 70BD     		pop	{r4, r5, r6, pc}
 1650              		.cfi_endproc
 1651              	.LFE19:
 1652              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1653 003a C046     		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1654              		.align	2
 1655              		.global	CapSense_SsInitializeSourceSenseClk
 1656              		.code	16
 1657              		.thumb_func
 1658              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1659              	CapSense_SsInitializeSourceSenseClk:
 1660              	.LFB18:
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1661              		.loc 1 2188 0
 1662              		.cfi_startproc
 1663              		@ args = 0, pretend = 0, frame = 0
 1664              		@ frame_needed = 0, uses_anonymous_args = 0
 1665 0000 10B5     		push	{r4, lr}
 1666              		.cfi_def_cfa_offset 8
 1667              		.cfi_offset 4, -8
 1668              		.cfi_offset 14, -4
 1669              	.LVL182:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1670              		.loc 1 2192 0
 1671 0002 0024     		movs	r4, #0
 1672 0004 13E0     		b	.L134
 1673              	.LVL183:
 1674              	.L138:
2194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1675              		.loc 1 2194 0
 1676 0006 A200     		lsls	r2, r4, #2
 1677 0008 1219     		adds	r2, r2, r4
 1678 000a D300     		lsls	r3, r2, #3
 1679 000c 094A     		ldr	r2, .L139
 1680 000e D318     		adds	r3, r2, r3
 1681 0010 5968     		ldr	r1, [r3, #4]
 1682              	.LVL184:
2196:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1683              		.loc 1 2196 0
 1684 0012 DB7E     		ldrb	r3, [r3, #27]
 1685 0014 012B     		cmp	r3, #1
 1686 0016 02D0     		beq	.L136
 1687 0018 022B     		cmp	r3, #2
 1688 001a 04D0     		beq	.L137
 1689 001c 06E0     		b	.L135
 1690              	.L136:
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 83


 1691              		.loc 1 2200 0
 1692 001e 2000     		movs	r0, r4
 1693 0020 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1694              	.LVL185:
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1695              		.loc 1 2201 0
 1696 0024 02E0     		b	.L135
 1697              	.LVL186:
 1698              	.L137:
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1699              		.loc 1 2205 0
 1700 0026 2000     		movs	r0, r4
 1701 0028 FFF7FEFF 		bl	CapSense_SsSetWidgetTxClkSrc
 1702              	.LVL187:
 1703              	.L135:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1704              		.loc 1 2192 0 discriminator 2
 1705 002c 0134     		adds	r4, r4, #1
 1706              	.LVL188:
 1707              	.L134:
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1708              		.loc 1 2192 0 is_stmt 0 discriminator 1
 1709 002e 032C     		cmp	r4, #3
 1710 0030 E9D9     		bls	.L138
2215:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1711              		.loc 1 2215 0 is_stmt 1
 1712              		@ sp needed
 1713              	.LVL189:
 1714 0032 10BD     		pop	{r4, pc}
 1715              	.L140:
 1716              		.align	2
 1717              	.L139:
 1718 0034 00000000 		.word	CapSense_dsFlash
 1719              		.cfi_endproc
 1720              	.LFE18:
 1721              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1722              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1723              		.align	2
 1724              		.global	CapSense_SsInitialize
 1725              		.code	16
 1726              		.thumb_func
 1727              		.type	CapSense_SsInitialize, %function
 1728              	CapSense_SsInitialize:
 1729              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1730              		.loc 1 517 0
 1731              		.cfi_startproc
 1732              		@ args = 0, pretend = 0, frame = 0
 1733              		@ frame_needed = 0, uses_anonymous_args = 0
 1734 0000 10B5     		push	{r4, lr}
 1735              		.cfi_def_cfa_offset 8
 1736              		.cfi_offset 4, -8
 1737              		.cfi_offset 14, -4
 1738              	.LVL190:
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1739              		.loc 1 556 0
 1740 0002 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 84


 1741              	.LVL191:
 561:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1742              		.loc 1 561 0
 1743 0006 FFF7FEFF 		bl	CapSense_SsSetIOsInDefaultState
 1744              	.LVL192:
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 1745              		.loc 1 565 0
 1746 000a 0020     		movs	r0, #0
 1747 000c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1748              	.LVL193:
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1749              		.loc 1 584 0
 1750 0010 0020     		movs	r0, #0
 1751              		@ sp needed
 1752 0012 10BD     		pop	{r4, pc}
 1753              		.cfi_endproc
 1754              	.LFE5:
 1755              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1756              		.section	.text.CapSense_BistDischargeExtCapacitors,"ax",%progbits
 1757              		.align	2
 1758              		.global	CapSense_BistDischargeExtCapacitors
 1759              		.code	16
 1760              		.thumb_func
 1761              		.type	CapSense_BistDischargeExtCapacitors, %function
 1762              	CapSense_BistDischargeExtCapacitors:
 1763              	.LFB26:
2765:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2766:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2769:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2770:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_BistDischargeExtCapacitors
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors.
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects 
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses 
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2783:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_BistDischargeExtCapacitors(void)
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1764              		.loc 1 2786 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768 0000 70B5     		push	{r4, r5, r6, lr}
 1769              		.cfi_def_cfa_offset 16
 1770              		.cfi_offset 4, -16
 1771              		.cfi_offset 5, -12
 1772              		.cfi_offset 6, -8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 85


 1773              		.cfi_offset 14, -4
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****         
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1774              		.loc 1 2791 0
 1775 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1776              	.LVL194:
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1777              		.loc 1 2792 0
 1778 0006 134A     		ldr	r2, .L143
 1779 0008 1168     		ldr	r1, [r2]
 1780              	.LVL195:
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1781              		.loc 1 2793 0
 1782 000a 134B     		ldr	r3, .L143+4
 1783 000c 0B40     		ands	r3, r1
 1784              	.LVL196:
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1785              		.loc 1 2794 0
 1786 000e 1360     		str	r3, [r2]
2795:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1787              		.loc 1 2795 0
 1788 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1789              	.LVL197:
2796:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1790              		.loc 1 2798 0
 1791 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1792              	.LVL198:
2799:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1793              		.loc 1 2799 0
 1794 0018 104A     		ldr	r2, .L143+8
 1795 001a 1368     		ldr	r3, [r2]
 1796              	.LVL199:
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1797              		.loc 1 2800 0
 1798 001c 0E21     		movs	r1, #14
 1799 001e 8B43     		bics	r3, r1
 1800              	.LVL200:
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1801              		.loc 1 2801 0
 1802 0020 1360     		str	r3, [r2]
2802:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1803              		.loc 1 2802 0
 1804 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1805              	.LVL201:
2803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2804:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2805:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1806              		.loc 1 2805 0
 1807 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 1808              	.LVL202:
2806:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1809              		.loc 1 2806 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 86


 1810 002a 0D4C     		ldr	r4, .L143+12
 1811 002c 2368     		ldr	r3, [r4]
 1812              	.LVL203:
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1813              		.loc 1 2807 0
 1814 002e 0D4D     		ldr	r5, .L143+16
 1815 0030 2B40     		ands	r3, r5
 1816              	.LVL204:
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 1817              		.loc 1 2808 0
 1818 0032 DB22     		movs	r2, #219
 1819 0034 1201     		lsls	r2, r2, #4
 1820 0036 1343     		orrs	r3, r2
 1821              	.LVL205:
2809:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1822              		.loc 1 2809 0
 1823 0038 2360     		str	r3, [r4]
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1824              		.loc 1 2810 0
 1825 003a FFF7FEFF 		bl	CyExitCriticalSection
 1826              	.LVL206:
2811:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2812:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2813:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs(CapSense_EXT_CAP_DISCHARGE_TIME);
 1827              		.loc 1 2813 0
 1828 003e 0120     		movs	r0, #1
 1829 0040 FFF7FEFF 		bl	CyDelayUs
 1830              	.LVL207:
2814:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1831              		.loc 1 2816 0
 1832 0044 FFF7FEFF 		bl	CyEnterCriticalSection
 1833              	.LVL208:
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1834              		.loc 1 2817 0
 1835 0048 2368     		ldr	r3, [r4]
 1836              	.LVL209:
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1837              		.loc 1 2818 0
 1838 004a 1D40     		ands	r5, r3
 1839              	.LVL210:
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1840              		.loc 1 2819 0
 1841 004c 2560     		str	r5, [r4]
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1842              		.loc 1 2820 0
 1843 004e FFF7FEFF 		bl	CyExitCriticalSection
 1844              	.LVL211:
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1845              		.loc 1 2821 0
 1846              		@ sp needed
 1847              	.LVL212:
 1848 0052 70BD     		pop	{r4, r5, r6, pc}
 1849              	.L144:
 1850              		.align	2
 1851              	.L143:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 87


 1852 0054 00040240 		.word	1073873920
 1853 0058 0F00FFFF 		.word	-65521
 1854 005c 00040440 		.word	1074004992
 1855 0060 08040440 		.word	1074005000
 1856 0064 07F0FFFF 		.word	-4089
 1857              		.cfi_endproc
 1858              	.LFE26:
 1859              		.size	CapSense_BistDischargeExtCapacitors, .-CapSense_BistDischargeExtCapacitors
 1860              		.comm	CapSense_curSnsIOPtr,4,4
 1861              		.global	CapSense_curFlashWdgtPtr
 1862              		.comm	CapSense_curRamSnsPtr,4,4
 1863              		.global	CapSense_requestScanAllWidget
 1864              		.global	CapSense_sensorIndex
 1865              		.global	CapSense_widgetIndex
 1866              		.global	CapSense_scanFreqIndex
 1867              		.global	CapSense_currentSenseMethod
 1868              		.section	.rodata
 1869              		.type	CapSense_scanFreqIndex, %object
 1870              		.size	CapSense_scanFreqIndex, 1
 1871              	CapSense_scanFreqIndex:
 1872 0018 00       		.space	1
 1873              		.bss
 1874              		.align	2
 1875              		.set	.LANCHOR0,. + 0
 1876              		.type	CapSense_currentSenseMethod, %object
 1877              		.size	CapSense_currentSenseMethod, 1
 1878              	CapSense_currentSenseMethod:
 1879 0000 00       		.space	1
 1880              		.type	CapSense_requestScanAllWidget, %object
 1881              		.size	CapSense_requestScanAllWidget, 1
 1882              	CapSense_requestScanAllWidget:
 1883 0001 00       		.space	1
 1884              		.type	CapSense_widgetIndex, %object
 1885              		.size	CapSense_widgetIndex, 1
 1886              	CapSense_widgetIndex:
 1887 0002 00       		.space	1
 1888 0003 00       		.space	1
 1889              		.type	CapSense_curFlashWdgtPtr, %object
 1890              		.size	CapSense_curFlashWdgtPtr, 4
 1891              	CapSense_curFlashWdgtPtr:
 1892 0004 00000000 		.space	4
 1893              		.type	CapSense_sensorIndex, %object
 1894              		.size	CapSense_sensorIndex, 1
 1895              	CapSense_sensorIndex:
 1896 0008 00       		.space	1
 1897              		.text
 1898              	.Letext0:
 1899              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1900              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1901              		.file 4 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1902              		.file 5 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1903              		.file 6 "Generated_Source\\PSoC4\\CapSense_SensingCSX_LL.h"
 1904              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 1905              		.file 8 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1906              		.section	.debug_info,"",%progbits
 1907              	.Ldebug_info0:
 1908 0000 07120000 		.4byte	0x1207
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 88


 1909 0004 0400     		.2byte	0x4
 1910 0006 00000000 		.4byte	.Ldebug_abbrev0
 1911 000a 04       		.byte	0x4
 1912 000b 01       		.uleb128 0x1
 1913 000c 36020000 		.4byte	.LASF184
 1914 0010 0C       		.byte	0xc
 1915 0011 70080000 		.4byte	.LASF185
 1916 0015 DD090000 		.4byte	.LASF186
 1917 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1918 001d 00000000 		.4byte	0
 1919 0021 00000000 		.4byte	.Ldebug_line0
 1920 0025 02       		.uleb128 0x2
 1921 0026 01       		.byte	0x1
 1922 0027 06       		.byte	0x6
 1923 0028 980B0000 		.4byte	.LASF0
 1924 002c 02       		.uleb128 0x2
 1925 002d 01       		.byte	0x1
 1926 002e 08       		.byte	0x8
 1927 002f BA090000 		.4byte	.LASF1
 1928 0033 02       		.uleb128 0x2
 1929 0034 02       		.byte	0x2
 1930 0035 05       		.byte	0x5
 1931 0036 97070000 		.4byte	.LASF2
 1932 003a 02       		.uleb128 0x2
 1933 003b 02       		.byte	0x2
 1934 003c 07       		.byte	0x7
 1935 003d C00B0000 		.4byte	.LASF3
 1936 0041 02       		.uleb128 0x2
 1937 0042 04       		.byte	0x4
 1938 0043 05       		.byte	0x5
 1939 0044 CF070000 		.4byte	.LASF4
 1940 0048 02       		.uleb128 0x2
 1941 0049 04       		.byte	0x4
 1942 004a 07       		.byte	0x7
 1943 004b 09090000 		.4byte	.LASF5
 1944 004f 02       		.uleb128 0x2
 1945 0050 08       		.byte	0x8
 1946 0051 05       		.byte	0x5
 1947 0052 2D050000 		.4byte	.LASF6
 1948 0056 02       		.uleb128 0x2
 1949 0057 08       		.byte	0x8
 1950 0058 07       		.byte	0x7
 1951 0059 24030000 		.4byte	.LASF7
 1952 005d 03       		.uleb128 0x3
 1953 005e 04       		.byte	0x4
 1954 005f 05       		.byte	0x5
 1955 0060 696E7400 		.ascii	"int\000"
 1956 0064 02       		.uleb128 0x2
 1957 0065 04       		.byte	0x4
 1958 0066 07       		.byte	0x7
 1959 0067 03010000 		.4byte	.LASF8
 1960 006b 04       		.uleb128 0x4
 1961 006c 330C0000 		.4byte	.LASF9
 1962 0070 02       		.byte	0x2
 1963 0071 E401     		.2byte	0x1e4
 1964 0073 2C000000 		.4byte	0x2c
 1965 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 89


 1966 0078 89040000 		.4byte	.LASF10
 1967 007c 02       		.byte	0x2
 1968 007d E501     		.2byte	0x1e5
 1969 007f 3A000000 		.4byte	0x3a
 1970 0083 04       		.uleb128 0x4
 1971 0084 41060000 		.4byte	.LASF11
 1972 0088 02       		.byte	0x2
 1973 0089 E601     		.2byte	0x1e6
 1974 008b 48000000 		.4byte	0x48
 1975 008f 02       		.uleb128 0x2
 1976 0090 04       		.byte	0x4
 1977 0091 04       		.byte	0x4
 1978 0092 0F020000 		.4byte	.LASF12
 1979 0096 02       		.uleb128 0x2
 1980 0097 08       		.byte	0x8
 1981 0098 04       		.byte	0x4
 1982 0099 390C0000 		.4byte	.LASF13
 1983 009d 02       		.uleb128 0x2
 1984 009e 01       		.byte	0x1
 1985 009f 08       		.byte	0x8
 1986 00a0 3E040000 		.4byte	.LASF14
 1987 00a4 04       		.uleb128 0x4
 1988 00a5 B1090000 		.4byte	.LASF15
 1989 00a9 02       		.byte	0x2
 1990 00aa 8602     		.2byte	0x286
 1991 00ac 48000000 		.4byte	0x48
 1992 00b0 05       		.uleb128 0x5
 1993 00b1 6B000000 		.4byte	0x6b
 1994 00b5 04       		.uleb128 0x4
 1995 00b6 E5060000 		.4byte	.LASF16
 1996 00ba 02       		.byte	0x2
 1997 00bb 9002     		.2byte	0x290
 1998 00bd C1000000 		.4byte	0xc1
 1999 00c1 05       		.uleb128 0x5
 2000 00c2 83000000 		.4byte	0x83
 2001 00c6 04       		.uleb128 0x4
 2002 00c7 F4050000 		.4byte	.LASF17
 2003 00cb 02       		.byte	0x2
 2004 00cc A002     		.2byte	0x2a0
 2005 00ce D2000000 		.4byte	0xd2
 2006 00d2 06       		.uleb128 0x6
 2007 00d3 04       		.byte	0x4
 2008 00d4 D8000000 		.4byte	0xd8
 2009 00d8 07       		.uleb128 0x7
 2010 00d9 04       		.uleb128 0x4
 2011 00da AA0A0000 		.4byte	.LASF18
 2012 00de 03       		.byte	0x3
 2013 00df 2201     		.2byte	0x122
 2014 00e1 77000000 		.4byte	0x77
 2015 00e5 04       		.uleb128 0x4
 2016 00e6 CA040000 		.4byte	.LASF19
 2017 00ea 03       		.byte	0x3
 2018 00eb 2601     		.2byte	0x126
 2019 00ed 6B000000 		.4byte	0x6b
 2020 00f1 08       		.uleb128 0x8
 2021 00f2 01       		.byte	0x1
 2022 00f3 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 90


 2023 00f7 04       		.byte	0x4
 2024 00f8 6F       		.byte	0x6f
 2025 00f9 1C010000 		.4byte	0x11c
 2026 00fd 09       		.uleb128 0x9
 2027 00fe EE000000 		.4byte	.LASF20
 2028 0102 00       		.byte	0
 2029 0103 09       		.uleb128 0x9
 2030 0104 B8080000 		.4byte	.LASF21
 2031 0108 01       		.byte	0x1
 2032 0109 09       		.uleb128 0x9
 2033 010a F1070000 		.4byte	.LASF22
 2034 010e 02       		.byte	0x2
 2035 010f 09       		.uleb128 0x9
 2036 0110 D30A0000 		.4byte	.LASF23
 2037 0114 03       		.byte	0x3
 2038 0115 09       		.uleb128 0x9
 2039 0116 BD060000 		.4byte	.LASF24
 2040 011a 04       		.byte	0x4
 2041 011b 00       		.byte	0
 2042 011c 0A       		.uleb128 0xa
 2043 011d 03050000 		.4byte	.LASF25
 2044 0121 04       		.byte	0x4
 2045 0122 75       		.byte	0x75
 2046 0123 F1000000 		.4byte	0xf1
 2047 0127 0B       		.uleb128 0xb
 2048 0128 0E       		.byte	0xe
 2049 0129 04       		.byte	0x4
 2050 012a 8D       		.byte	0x8d
 2051 012b A8010000 		.4byte	0x1a8
 2052 012f 0C       		.uleb128 0xc
 2053 0130 9F040000 		.4byte	.LASF26
 2054 0134 04       		.byte	0x4
 2055 0135 92       		.byte	0x92
 2056 0136 77000000 		.4byte	0x77
 2057 013a 00       		.byte	0
 2058 013b 0C       		.uleb128 0xc
 2059 013c 82090000 		.4byte	.LASF27
 2060 0140 04       		.byte	0x4
 2061 0141 97       		.byte	0x97
 2062 0142 D9000000 		.4byte	0xd9
 2063 0146 02       		.byte	0x2
 2064 0147 0C       		.uleb128 0xc
 2065 0148 36040000 		.4byte	.LASF28
 2066 014c 04       		.byte	0x4
 2067 014d 9C       		.byte	0x9c
 2068 014e 6B000000 		.4byte	0x6b
 2069 0152 04       		.byte	0x4
 2070 0153 0C       		.uleb128 0xc
 2071 0154 E0050000 		.4byte	.LASF29
 2072 0158 04       		.byte	0x4
 2073 0159 A1       		.byte	0xa1
 2074 015a 6B000000 		.4byte	0x6b
 2075 015e 05       		.byte	0x5
 2076 015f 0C       		.uleb128 0xc
 2077 0160 D4030000 		.4byte	.LASF30
 2078 0164 04       		.byte	0x4
 2079 0165 A7       		.byte	0xa7
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 91


 2080 0166 6B000000 		.4byte	0x6b
 2081 016a 06       		.byte	0x6
 2082 016b 0C       		.uleb128 0xc
 2083 016c 5C050000 		.4byte	.LASF31
 2084 0170 04       		.byte	0x4
 2085 0171 AD       		.byte	0xad
 2086 0172 6B000000 		.4byte	0x6b
 2087 0176 07       		.byte	0x7
 2088 0177 0C       		.uleb128 0xc
 2089 0178 F8030000 		.4byte	.LASF32
 2090 017c 04       		.byte	0x4
 2091 017d B4       		.byte	0xb4
 2092 017e E5000000 		.4byte	0xe5
 2093 0182 08       		.byte	0x8
 2094 0183 0C       		.uleb128 0xc
 2095 0184 2A090000 		.4byte	.LASF33
 2096 0188 04       		.byte	0x4
 2097 0189 BB       		.byte	0xbb
 2098 018a A8010000 		.4byte	0x1a8
 2099 018e 09       		.byte	0x9
 2100 018f 0C       		.uleb128 0xc
 2101 0190 470B0000 		.4byte	.LASF34
 2102 0194 04       		.byte	0x4
 2103 0195 C3       		.byte	0xc3
 2104 0196 77000000 		.4byte	0x77
 2105 019a 0A       		.byte	0xa
 2106 019b 0C       		.uleb128 0xc
 2107 019c 48070000 		.4byte	.LASF35
 2108 01a0 04       		.byte	0x4
 2109 01a1 C8       		.byte	0xc8
 2110 01a2 6B000000 		.4byte	0x6b
 2111 01a6 0C       		.byte	0xc
 2112 01a7 00       		.byte	0
 2113 01a8 0D       		.uleb128 0xd
 2114 01a9 6B000000 		.4byte	0x6b
 2115 01ad B8010000 		.4byte	0x1b8
 2116 01b1 0E       		.uleb128 0xe
 2117 01b2 B8010000 		.4byte	0x1b8
 2118 01b6 00       		.byte	0
 2119 01b7 00       		.byte	0
 2120 01b8 02       		.uleb128 0x2
 2121 01b9 04       		.byte	0x4
 2122 01ba 07       		.byte	0x7
 2123 01bb F8080000 		.4byte	.LASF36
 2124 01bf 0A       		.uleb128 0xa
 2125 01c0 01060000 		.4byte	.LASF37
 2126 01c4 04       		.byte	0x4
 2127 01c5 C9       		.byte	0xc9
 2128 01c6 27010000 		.4byte	0x127
 2129 01ca 0B       		.uleb128 0xb
 2130 01cb 0E       		.byte	0xe
 2131 01cc 04       		.byte	0x4
 2132 01cd CE       		.byte	0xce
 2133 01ce 4D020000 		.4byte	0x24d
 2134 01d2 0C       		.uleb128 0xc
 2135 01d3 9F040000 		.4byte	.LASF26
 2136 01d7 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 92


 2137 01d8 D3       		.byte	0xd3
 2138 01d9 77000000 		.4byte	0x77
 2139 01dd 00       		.byte	0
 2140 01de 0C       		.uleb128 0xc
 2141 01df 82090000 		.4byte	.LASF27
 2142 01e3 04       		.byte	0x4
 2143 01e4 D8       		.byte	0xd8
 2144 01e5 D9000000 		.4byte	0xd9
 2145 01e9 02       		.byte	0x2
 2146 01ea 0C       		.uleb128 0xc
 2147 01eb 36040000 		.4byte	.LASF28
 2148 01ef 04       		.byte	0x4
 2149 01f0 DD       		.byte	0xdd
 2150 01f1 6B000000 		.4byte	0x6b
 2151 01f5 04       		.byte	0x4
 2152 01f6 0C       		.uleb128 0xc
 2153 01f7 E0050000 		.4byte	.LASF29
 2154 01fb 04       		.byte	0x4
 2155 01fc E2       		.byte	0xe2
 2156 01fd 6B000000 		.4byte	0x6b
 2157 0201 05       		.byte	0x5
 2158 0202 0C       		.uleb128 0xc
 2159 0203 D4030000 		.4byte	.LASF30
 2160 0207 04       		.byte	0x4
 2161 0208 E8       		.byte	0xe8
 2162 0209 6B000000 		.4byte	0x6b
 2163 020d 06       		.byte	0x6
 2164 020e 0C       		.uleb128 0xc
 2165 020f 5C050000 		.4byte	.LASF31
 2166 0213 04       		.byte	0x4
 2167 0214 EE       		.byte	0xee
 2168 0215 6B000000 		.4byte	0x6b
 2169 0219 07       		.byte	0x7
 2170 021a 0C       		.uleb128 0xc
 2171 021b F8030000 		.4byte	.LASF32
 2172 021f 04       		.byte	0x4
 2173 0220 F5       		.byte	0xf5
 2174 0221 E5000000 		.4byte	0xe5
 2175 0225 08       		.byte	0x8
 2176 0226 0C       		.uleb128 0xc
 2177 0227 2A090000 		.4byte	.LASF33
 2178 022b 04       		.byte	0x4
 2179 022c FC       		.byte	0xfc
 2180 022d A8010000 		.4byte	0x1a8
 2181 0231 09       		.byte	0x9
 2182 0232 0F       		.uleb128 0xf
 2183 0233 470B0000 		.4byte	.LASF34
 2184 0237 04       		.byte	0x4
 2185 0238 0401     		.2byte	0x104
 2186 023a 77000000 		.4byte	0x77
 2187 023e 0A       		.byte	0xa
 2188 023f 0F       		.uleb128 0xf
 2189 0240 48070000 		.4byte	.LASF35
 2190 0244 04       		.byte	0x4
 2191 0245 0901     		.2byte	0x109
 2192 0247 6B000000 		.4byte	0x6b
 2193 024b 0C       		.byte	0xc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 93


 2194 024c 00       		.byte	0
 2195 024d 04       		.uleb128 0x4
 2196 024e 93090000 		.4byte	.LASF38
 2197 0252 04       		.byte	0x4
 2198 0253 0A01     		.2byte	0x10a
 2199 0255 CA010000 		.4byte	0x1ca
 2200 0259 10       		.uleb128 0x10
 2201 025a 10       		.byte	0x10
 2202 025b 04       		.byte	0x4
 2203 025c 0F01     		.2byte	0x10f
 2204 025e F2020000 		.4byte	0x2f2
 2205 0262 0F       		.uleb128 0xf
 2206 0263 9F040000 		.4byte	.LASF26
 2207 0267 04       		.byte	0x4
 2208 0268 1401     		.2byte	0x114
 2209 026a 77000000 		.4byte	0x77
 2210 026e 00       		.byte	0
 2211 026f 0F       		.uleb128 0xf
 2212 0270 82090000 		.4byte	.LASF27
 2213 0274 04       		.byte	0x4
 2214 0275 1901     		.2byte	0x119
 2215 0277 D9000000 		.4byte	0xd9
 2216 027b 02       		.byte	0x2
 2217 027c 0F       		.uleb128 0xf
 2218 027d 36040000 		.4byte	.LASF28
 2219 0281 04       		.byte	0x4
 2220 0282 1E01     		.2byte	0x11e
 2221 0284 6B000000 		.4byte	0x6b
 2222 0288 04       		.byte	0x4
 2223 0289 0F       		.uleb128 0xf
 2224 028a E0050000 		.4byte	.LASF29
 2225 028e 04       		.byte	0x4
 2226 028f 2301     		.2byte	0x123
 2227 0291 6B000000 		.4byte	0x6b
 2228 0295 05       		.byte	0x5
 2229 0296 0F       		.uleb128 0xf
 2230 0297 D4030000 		.4byte	.LASF30
 2231 029b 04       		.byte	0x4
 2232 029c 2901     		.2byte	0x129
 2233 029e 6B000000 		.4byte	0x6b
 2234 02a2 06       		.byte	0x6
 2235 02a3 0F       		.uleb128 0xf
 2236 02a4 5C050000 		.4byte	.LASF31
 2237 02a8 04       		.byte	0x4
 2238 02a9 2F01     		.2byte	0x12f
 2239 02ab 6B000000 		.4byte	0x6b
 2240 02af 07       		.byte	0x7
 2241 02b0 0F       		.uleb128 0xf
 2242 02b1 F8030000 		.4byte	.LASF32
 2243 02b5 04       		.byte	0x4
 2244 02b6 3601     		.2byte	0x136
 2245 02b8 E5000000 		.4byte	0xe5
 2246 02bc 08       		.byte	0x8
 2247 02bd 0F       		.uleb128 0xf
 2248 02be 2A090000 		.4byte	.LASF33
 2249 02c2 04       		.byte	0x4
 2250 02c3 3D01     		.2byte	0x13d
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 94


 2251 02c5 A8010000 		.4byte	0x1a8
 2252 02c9 09       		.byte	0x9
 2253 02ca 0F       		.uleb128 0xf
 2254 02cb 470B0000 		.4byte	.LASF34
 2255 02cf 04       		.byte	0x4
 2256 02d0 4501     		.2byte	0x145
 2257 02d2 77000000 		.4byte	0x77
 2258 02d6 0A       		.byte	0xa
 2259 02d7 0F       		.uleb128 0xf
 2260 02d8 48070000 		.4byte	.LASF35
 2261 02dc 04       		.byte	0x4
 2262 02dd 4A01     		.2byte	0x14a
 2263 02df 6B000000 		.4byte	0x6b
 2264 02e3 0C       		.byte	0xc
 2265 02e4 0F       		.uleb128 0xf
 2266 02e5 E10C0000 		.4byte	.LASF39
 2267 02e9 04       		.byte	0x4
 2268 02ea 4F01     		.2byte	0x14f
 2269 02ec F2020000 		.4byte	0x2f2
 2270 02f0 0E       		.byte	0xe
 2271 02f1 00       		.byte	0
 2272 02f2 0D       		.uleb128 0xd
 2273 02f3 77000000 		.4byte	0x77
 2274 02f7 02030000 		.4byte	0x302
 2275 02fb 0E       		.uleb128 0xe
 2276 02fc B8010000 		.4byte	0x1b8
 2277 0300 00       		.byte	0
 2278 0301 00       		.byte	0
 2279 0302 04       		.uleb128 0x4
 2280 0303 9A080000 		.4byte	.LASF40
 2281 0307 04       		.byte	0x4
 2282 0308 5001     		.2byte	0x150
 2283 030a 59020000 		.4byte	0x259
 2284 030e 10       		.uleb128 0x10
 2285 030f 3A       		.byte	0x3a
 2286 0310 04       		.byte	0x4
 2287 0311 5601     		.2byte	0x156
 2288 0313 4C030000 		.4byte	0x34c
 2289 0317 0F       		.uleb128 0xf
 2290 0318 1B040000 		.4byte	.LASF41
 2291 031c 04       		.byte	0x4
 2292 031d 5B01     		.2byte	0x15b
 2293 031f 4D020000 		.4byte	0x24d
 2294 0323 00       		.byte	0
 2295 0324 0F       		.uleb128 0xf
 2296 0325 20040000 		.4byte	.LASF42
 2297 0329 04       		.byte	0x4
 2298 032a 6001     		.2byte	0x160
 2299 032c 4D020000 		.4byte	0x24d
 2300 0330 0E       		.byte	0xe
 2301 0331 0F       		.uleb128 0xf
 2302 0332 25040000 		.4byte	.LASF43
 2303 0336 04       		.byte	0x4
 2304 0337 6501     		.2byte	0x165
 2305 0339 4D020000 		.4byte	0x24d
 2306 033d 1C       		.byte	0x1c
 2307 033e 11       		.uleb128 0x11
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 95


 2308 033f 736C6400 		.ascii	"sld\000"
 2309 0343 04       		.byte	0x4
 2310 0344 6A01     		.2byte	0x16a
 2311 0346 02030000 		.4byte	0x302
 2312 034a 2A       		.byte	0x2a
 2313 034b 00       		.byte	0
 2314 034c 04       		.uleb128 0x4
 2315 034d 91010000 		.4byte	.LASF44
 2316 0351 04       		.byte	0x4
 2317 0352 6B01     		.2byte	0x16b
 2318 0354 0E030000 		.4byte	0x30e
 2319 0358 10       		.uleb128 0x10
 2320 0359 0A       		.byte	0xa
 2321 035a 04       		.byte	0x4
 2322 035b 7101     		.2byte	0x171
 2323 035d B0030000 		.4byte	0x3b0
 2324 0361 11       		.uleb128 0x11
 2325 0362 72617700 		.ascii	"raw\000"
 2326 0366 04       		.byte	0x4
 2327 0367 7601     		.2byte	0x176
 2328 0369 F2020000 		.4byte	0x2f2
 2329 036d 00       		.byte	0
 2330 036e 0F       		.uleb128 0xf
 2331 036f BB0B0000 		.4byte	.LASF45
 2332 0373 04       		.byte	0x4
 2333 0374 7B01     		.2byte	0x17b
 2334 0376 F2020000 		.4byte	0x2f2
 2335 037a 02       		.byte	0x2
 2336 037b 0F       		.uleb128 0xf
 2337 037c 8B090000 		.4byte	.LASF46
 2338 0380 04       		.byte	0x4
 2339 0381 8101     		.2byte	0x181
 2340 0383 A8010000 		.4byte	0x1a8
 2341 0387 04       		.byte	0x4
 2342 0388 0F       		.uleb128 0xf
 2343 0389 E3070000 		.4byte	.LASF47
 2344 038d 04       		.byte	0x4
 2345 038e 8601     		.2byte	0x186
 2346 0390 D9000000 		.4byte	0xd9
 2347 0394 06       		.byte	0x6
 2348 0395 0F       		.uleb128 0xf
 2349 0396 400C0000 		.4byte	.LASF48
 2350 039a 04       		.byte	0x4
 2351 039b 8B01     		.2byte	0x18b
 2352 039d B0030000 		.4byte	0x3b0
 2353 03a1 08       		.byte	0x8
 2354 03a2 0F       		.uleb128 0xf
 2355 03a3 1E050000 		.4byte	.LASF49
 2356 03a7 04       		.byte	0x4
 2357 03a8 9001     		.2byte	0x190
 2358 03aa A8010000 		.4byte	0x1a8
 2359 03ae 09       		.byte	0x9
 2360 03af 00       		.byte	0
 2361 03b0 0D       		.uleb128 0xd
 2362 03b1 E5000000 		.4byte	0xe5
 2363 03b5 C0030000 		.4byte	0x3c0
 2364 03b9 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 96


 2365 03ba B8010000 		.4byte	0x1b8
 2366 03be 00       		.byte	0
 2367 03bf 00       		.byte	0
 2368 03c0 04       		.uleb128 0x4
 2369 03c1 95030000 		.4byte	.LASF50
 2370 03c5 04       		.byte	0x4
 2371 03c6 9101     		.2byte	0x191
 2372 03c8 58030000 		.4byte	0x358
 2373 03cc 10       		.uleb128 0x10
 2374 03cd 50       		.byte	0x50
 2375 03ce 04       		.byte	0x4
 2376 03cf 9701     		.2byte	0x197
 2377 03d1 0A040000 		.4byte	0x40a
 2378 03d5 0F       		.uleb128 0xf
 2379 03d6 1B040000 		.4byte	.LASF41
 2380 03da 04       		.byte	0x4
 2381 03db 9C01     		.2byte	0x19c
 2382 03dd 0A040000 		.4byte	0x40a
 2383 03e1 00       		.byte	0
 2384 03e2 0F       		.uleb128 0xf
 2385 03e3 20040000 		.4byte	.LASF42
 2386 03e7 04       		.byte	0x4
 2387 03e8 A101     		.2byte	0x1a1
 2388 03ea 0A040000 		.4byte	0x40a
 2389 03ee 0A       		.byte	0xa
 2390 03ef 0F       		.uleb128 0xf
 2391 03f0 25040000 		.4byte	.LASF43
 2392 03f4 04       		.byte	0x4
 2393 03f5 A601     		.2byte	0x1a6
 2394 03f7 0A040000 		.4byte	0x40a
 2395 03fb 14       		.byte	0x14
 2396 03fc 11       		.uleb128 0x11
 2397 03fd 736C6400 		.ascii	"sld\000"
 2398 0401 04       		.byte	0x4
 2399 0402 AB01     		.2byte	0x1ab
 2400 0404 1A040000 		.4byte	0x41a
 2401 0408 1E       		.byte	0x1e
 2402 0409 00       		.byte	0
 2403 040a 0D       		.uleb128 0xd
 2404 040b C0030000 		.4byte	0x3c0
 2405 040f 1A040000 		.4byte	0x41a
 2406 0413 0E       		.uleb128 0xe
 2407 0414 B8010000 		.4byte	0x1b8
 2408 0418 00       		.byte	0
 2409 0419 00       		.byte	0
 2410 041a 0D       		.uleb128 0xd
 2411 041b C0030000 		.4byte	0x3c0
 2412 041f 2A040000 		.4byte	0x42a
 2413 0423 0E       		.uleb128 0xe
 2414 0424 B8010000 		.4byte	0x1b8
 2415 0428 04       		.byte	0x4
 2416 0429 00       		.byte	0
 2417 042a 04       		.uleb128 0x4
 2418 042b EA0C0000 		.4byte	.LASF51
 2419 042f 04       		.byte	0x4
 2420 0430 AC01     		.2byte	0x1ac
 2421 0432 CC030000 		.4byte	0x3cc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 97


 2422 0436 10       		.uleb128 0x10
 2423 0437 B0       		.byte	0xb0
 2424 0438 04       		.byte	0x4
 2425 0439 B201     		.2byte	0x1b2
 2426 043b 2A050000 		.4byte	0x52a
 2427 043f 0F       		.uleb128 0xf
 2428 0440 FE060000 		.4byte	.LASF52
 2429 0444 04       		.byte	0x4
 2430 0445 B901     		.2byte	0x1b9
 2431 0447 77000000 		.4byte	0x77
 2432 044b 00       		.byte	0
 2433 044c 0F       		.uleb128 0xf
 2434 044d 800C0000 		.4byte	.LASF53
 2435 0451 04       		.byte	0x4
 2436 0452 BE01     		.2byte	0x1be
 2437 0454 77000000 		.4byte	0x77
 2438 0458 02       		.byte	0x2
 2439 0459 0F       		.uleb128 0xf
 2440 045a 1C010000 		.4byte	.LASF54
 2441 045e 04       		.byte	0x4
 2442 045f C301     		.2byte	0x1c3
 2443 0461 77000000 		.4byte	0x77
 2444 0465 04       		.byte	0x4
 2445 0466 0F       		.uleb128 0xf
 2446 0467 E8070000 		.4byte	.LASF55
 2447 046b 04       		.byte	0x4
 2448 046c C901     		.2byte	0x1c9
 2449 046e 77000000 		.4byte	0x77
 2450 0472 06       		.byte	0x6
 2451 0473 0F       		.uleb128 0xf
 2452 0474 10010000 		.4byte	.LASF56
 2453 0478 04       		.byte	0x4
 2454 0479 CE01     		.2byte	0x1ce
 2455 047b 77000000 		.4byte	0x77
 2456 047f 08       		.byte	0x8
 2457 0480 0F       		.uleb128 0xf
 2458 0481 AA040000 		.4byte	.LASF57
 2459 0485 04       		.byte	0x4
 2460 0486 D301     		.2byte	0x1d3
 2461 0488 C1000000 		.4byte	0xc1
 2462 048c 0C       		.byte	0xc
 2463 048d 0F       		.uleb128 0xf
 2464 048e D8070000 		.4byte	.LASF58
 2465 0492 04       		.byte	0x4
 2466 0493 D901     		.2byte	0x1d9
 2467 0495 2A050000 		.4byte	0x52a
 2468 0499 10       		.byte	0x10
 2469 049a 0F       		.uleb128 0xf
 2470 049b 55080000 		.4byte	.LASF59
 2471 049f 04       		.byte	0x4
 2472 04a0 E001     		.2byte	0x1e0
 2473 04a2 2A050000 		.4byte	0x52a
 2474 04a6 14       		.byte	0x14
 2475 04a7 0F       		.uleb128 0xf
 2476 04a8 2F070000 		.4byte	.LASF60
 2477 04ac 04       		.byte	0x4
 2478 04ad F001     		.2byte	0x1f0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 98


 2479 04af 3A050000 		.4byte	0x53a
 2480 04b3 18       		.byte	0x18
 2481 04b4 0F       		.uleb128 0xf
 2482 04b5 E9050000 		.4byte	.LASF61
 2483 04b9 04       		.byte	0x4
 2484 04ba F601     		.2byte	0x1f6
 2485 04bc 77000000 		.4byte	0x77
 2486 04c0 1C       		.byte	0x1c
 2487 04c1 0F       		.uleb128 0xf
 2488 04c2 8B030000 		.4byte	.LASF62
 2489 04c6 04       		.byte	0x4
 2490 04c7 FB01     		.2byte	0x1fb
 2491 04c9 6B000000 		.4byte	0x6b
 2492 04cd 1E       		.byte	0x1e
 2493 04ce 0F       		.uleb128 0xf
 2494 04cf 8E0A0000 		.4byte	.LASF63
 2495 04d3 04       		.byte	0x4
 2496 04d4 0002     		.2byte	0x200
 2497 04d6 6B000000 		.4byte	0x6b
 2498 04da 1F       		.byte	0x1f
 2499 04db 0F       		.uleb128 0xf
 2500 04dc 77050000 		.4byte	.LASF64
 2501 04e0 04       		.byte	0x4
 2502 04e1 0502     		.2byte	0x205
 2503 04e3 4C030000 		.4byte	0x34c
 2504 04e7 20       		.byte	0x20
 2505 04e8 0F       		.uleb128 0xf
 2506 04e9 1C030000 		.4byte	.LASF65
 2507 04ed 04       		.byte	0x4
 2508 04ee 0A02     		.2byte	0x20a
 2509 04f0 2A040000 		.4byte	0x42a
 2510 04f4 5A       		.byte	0x5a
 2511 04f5 0F       		.uleb128 0xf
 2512 04f6 DE000000 		.4byte	.LASF66
 2513 04fa 04       		.byte	0x4
 2514 04fb 0F02     		.2byte	0x20f
 2515 04fd 6B000000 		.4byte	0x6b
 2516 0501 AA       		.byte	0xaa
 2517 0502 0F       		.uleb128 0xf
 2518 0503 69030000 		.4byte	.LASF67
 2519 0507 04       		.byte	0x4
 2520 0508 1402     		.2byte	0x214
 2521 050a 6B000000 		.4byte	0x6b
 2522 050e AB       		.byte	0xab
 2523 050f 0F       		.uleb128 0xf
 2524 0510 EB060000 		.4byte	.LASF68
 2525 0514 04       		.byte	0x4
 2526 0515 1902     		.2byte	0x219
 2527 0517 77000000 		.4byte	0x77
 2528 051b AC       		.byte	0xac
 2529 051c 0F       		.uleb128 0xf
 2530 051d D0050000 		.4byte	.LASF69
 2531 0521 04       		.byte	0x4
 2532 0522 1E02     		.2byte	0x21e
 2533 0524 F2020000 		.4byte	0x2f2
 2534 0528 AE       		.byte	0xae
 2535 0529 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 99


 2536 052a 0D       		.uleb128 0xd
 2537 052b 83000000 		.4byte	0x83
 2538 052f 3A050000 		.4byte	0x53a
 2539 0533 0E       		.uleb128 0xe
 2540 0534 B8010000 		.4byte	0x1b8
 2541 0538 00       		.byte	0
 2542 0539 00       		.byte	0
 2543 053a 0D       		.uleb128 0xd
 2544 053b 6B000000 		.4byte	0x6b
 2545 053f 4A050000 		.4byte	0x54a
 2546 0543 0E       		.uleb128 0xe
 2547 0544 B8010000 		.4byte	0x1b8
 2548 0548 03       		.byte	0x3
 2549 0549 00       		.byte	0
 2550 054a 04       		.uleb128 0x4
 2551 054b A1070000 		.4byte	.LASF70
 2552 054f 04       		.byte	0x4
 2553 0550 1F02     		.2byte	0x21f
 2554 0552 36040000 		.4byte	0x436
 2555 0556 10       		.uleb128 0x10
 2556 0557 1C       		.byte	0x1c
 2557 0558 04       		.byte	0x4
 2558 0559 2502     		.2byte	0x225
 2559 055b D5050000 		.4byte	0x5d5
 2560 055f 0F       		.uleb128 0xf
 2561 0560 1D060000 		.4byte	.LASF71
 2562 0564 04       		.byte	0x4
 2563 0565 2A02     		.2byte	0x22a
 2564 0567 D5050000 		.4byte	0x5d5
 2565 056b 00       		.byte	0
 2566 056c 0F       		.uleb128 0xf
 2567 056d 27050000 		.4byte	.LASF72
 2568 0571 04       		.byte	0x4
 2569 0572 2F02     		.2byte	0x22f
 2570 0574 D5050000 		.4byte	0x5d5
 2571 0578 04       		.byte	0x4
 2572 0579 0F       		.uleb128 0xf
 2573 057a C7030000 		.4byte	.LASF73
 2574 057e 04       		.byte	0x4
 2575 057f 3402     		.2byte	0x234
 2576 0581 D5050000 		.4byte	0x5d5
 2577 0585 08       		.byte	0x8
 2578 0586 0F       		.uleb128 0xf
 2579 0587 0D080000 		.4byte	.LASF74
 2580 058b 04       		.byte	0x4
 2581 058c 3902     		.2byte	0x239
 2582 058e D5050000 		.4byte	0x5d5
 2583 0592 0C       		.byte	0xc
 2584 0593 0F       		.uleb128 0xf
 2585 0594 200B0000 		.4byte	.LASF75
 2586 0598 04       		.byte	0x4
 2587 0599 3E02     		.2byte	0x23e
 2588 059b 83000000 		.4byte	0x83
 2589 059f 10       		.byte	0x10
 2590 05a0 0F       		.uleb128 0xf
 2591 05a1 6D060000 		.4byte	.LASF76
 2592 05a5 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 100


 2593 05a6 4302     		.2byte	0x243
 2594 05a8 83000000 		.4byte	0x83
 2595 05ac 14       		.byte	0x14
 2596 05ad 0F       		.uleb128 0xf
 2597 05ae 7E040000 		.4byte	.LASF77
 2598 05b2 04       		.byte	0x4
 2599 05b3 4802     		.2byte	0x248
 2600 05b5 6B000000 		.4byte	0x6b
 2601 05b9 18       		.byte	0x18
 2602 05ba 0F       		.uleb128 0xf
 2603 05bb 01090000 		.4byte	.LASF78
 2604 05bf 04       		.byte	0x4
 2605 05c0 4D02     		.2byte	0x24d
 2606 05c2 6B000000 		.4byte	0x6b
 2607 05c6 19       		.byte	0x19
 2608 05c7 0F       		.uleb128 0xf
 2609 05c8 15020000 		.4byte	.LASF79
 2610 05cc 04       		.byte	0x4
 2611 05cd 5202     		.2byte	0x252
 2612 05cf 6B000000 		.4byte	0x6b
 2613 05d3 1A       		.byte	0x1a
 2614 05d4 00       		.byte	0
 2615 05d5 06       		.uleb128 0x6
 2616 05d6 04       		.byte	0x4
 2617 05d7 B5000000 		.4byte	0xb5
 2618 05db 04       		.uleb128 0x4
 2619 05dc 50030000 		.4byte	.LASF80
 2620 05e0 04       		.byte	0x4
 2621 05e1 5302     		.2byte	0x253
 2622 05e3 56050000 		.4byte	0x556
 2623 05e7 10       		.uleb128 0x10
 2624 05e8 28       		.byte	0x28
 2625 05e9 04       		.byte	0x4
 2626 05ea 8602     		.2byte	0x286
 2627 05ec A7060000 		.4byte	0x6a7
 2628 05f0 0F       		.uleb128 0xf
 2629 05f1 F10B0000 		.4byte	.LASF81
 2630 05f5 04       		.byte	0x4
 2631 05f6 8F02     		.2byte	0x28f
 2632 05f8 A7060000 		.4byte	0x6a7
 2633 05fc 00       		.byte	0
 2634 05fd 0F       		.uleb128 0xf
 2635 05fe 9E0A0000 		.4byte	.LASF82
 2636 0602 04       		.byte	0x4
 2637 0603 9602     		.2byte	0x296
 2638 0605 AE060000 		.4byte	0x6ae
 2639 0609 04       		.byte	0x4
 2640 060a 0F       		.uleb128 0xf
 2641 060b 07070000 		.4byte	.LASF83
 2642 060f 04       		.byte	0x4
 2643 0610 9C02     		.2byte	0x29c
 2644 0612 B0060000 		.4byte	0x6b0
 2645 0616 08       		.byte	0x8
 2646 0617 0F       		.uleb128 0xf
 2647 0618 48060000 		.4byte	.LASF84
 2648 061c 04       		.byte	0x4
 2649 061d A202     		.2byte	0x2a2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 101


 2650 061f AE060000 		.4byte	0x6ae
 2651 0623 0C       		.byte	0xc
 2652 0624 0F       		.uleb128 0xf
 2653 0625 47090000 		.4byte	.LASF85
 2654 0629 04       		.byte	0x4
 2655 062a A902     		.2byte	0x2a9
 2656 062c B6060000 		.4byte	0x6b6
 2657 0630 10       		.byte	0x10
 2658 0631 0F       		.uleb128 0xf
 2659 0632 750A0000 		.4byte	.LASF86
 2660 0636 04       		.byte	0x4
 2661 0637 AE02     		.2byte	0x2ae
 2662 0639 83000000 		.4byte	0x83
 2663 063d 14       		.byte	0x14
 2664 063e 0F       		.uleb128 0xf
 2665 063f 2A040000 		.4byte	.LASF87
 2666 0643 04       		.byte	0x4
 2667 0644 B502     		.2byte	0x2b5
 2668 0646 77000000 		.4byte	0x77
 2669 064a 18       		.byte	0x18
 2670 064b 0F       		.uleb128 0xf
 2671 064c 79030000 		.4byte	.LASF88
 2672 0650 04       		.byte	0x4
 2673 0651 BC02     		.2byte	0x2bc
 2674 0653 6B000000 		.4byte	0x6b
 2675 0657 1A       		.byte	0x1a
 2676 0658 0F       		.uleb128 0xf
 2677 0659 820A0000 		.4byte	.LASF89
 2678 065d 04       		.byte	0x4
 2679 065e C202     		.2byte	0x2c2
 2680 0660 6B000000 		.4byte	0x6b
 2681 0664 1B       		.byte	0x1b
 2682 0665 0F       		.uleb128 0xf
 2683 0666 3B050000 		.4byte	.LASF90
 2684 066a 04       		.byte	0x4
 2685 066b CC02     		.2byte	0x2cc
 2686 066d 6B000000 		.4byte	0x6b
 2687 0671 1C       		.byte	0x1c
 2688 0672 0F       		.uleb128 0xf
 2689 0673 F00A0000 		.4byte	.LASF91
 2690 0677 04       		.byte	0x4
 2691 0678 D402     		.2byte	0x2d4
 2692 067a 6B000000 		.4byte	0x6b
 2693 067e 1D       		.byte	0x1d
 2694 067f 0F       		.uleb128 0xf
 2695 0680 72070000 		.4byte	.LASF92
 2696 0684 04       		.byte	0x4
 2697 0685 D902     		.2byte	0x2d9
 2698 0687 77000000 		.4byte	0x77
 2699 068b 1E       		.byte	0x1e
 2700 068c 0F       		.uleb128 0xf
 2701 068d 6E090000 		.4byte	.LASF93
 2702 0691 04       		.byte	0x4
 2703 0692 E202     		.2byte	0x2e2
 2704 0694 83000000 		.4byte	0x83
 2705 0698 20       		.byte	0x20
 2706 0699 0F       		.uleb128 0xf
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 102


 2707 069a AD010000 		.4byte	.LASF94
 2708 069e 04       		.byte	0x4
 2709 069f E702     		.2byte	0x2e7
 2710 06a1 6B000000 		.4byte	0x6b
 2711 06a5 24       		.byte	0x24
 2712 06a6 00       		.byte	0
 2713 06a7 06       		.uleb128 0x6
 2714 06a8 04       		.byte	0x4
 2715 06a9 AD060000 		.4byte	0x6ad
 2716 06ad 12       		.uleb128 0x12
 2717 06ae 13       		.uleb128 0x13
 2718 06af 04       		.byte	0x4
 2719 06b0 06       		.uleb128 0x6
 2720 06b1 04       		.byte	0x4
 2721 06b2 C0030000 		.4byte	0x3c0
 2722 06b6 06       		.uleb128 0x6
 2723 06b7 04       		.byte	0x4
 2724 06b8 6B000000 		.4byte	0x6b
 2725 06bc 04       		.uleb128 0x4
 2726 06bd DF030000 		.4byte	.LASF95
 2727 06c1 04       		.byte	0x4
 2728 06c2 E802     		.2byte	0x2e8
 2729 06c4 E7050000 		.4byte	0x5e7
 2730 06c8 10       		.uleb128 0x10
 2731 06c9 A0       		.byte	0xa0
 2732 06ca 04       		.byte	0x4
 2733 06cb EE02     		.2byte	0x2ee
 2734 06cd DF060000 		.4byte	0x6df
 2735 06d1 0F       		.uleb128 0xf
 2736 06d2 070D0000 		.4byte	.LASF96
 2737 06d6 04       		.byte	0x4
 2738 06d7 F302     		.2byte	0x2f3
 2739 06d9 DF060000 		.4byte	0x6df
 2740 06dd 00       		.byte	0
 2741 06de 00       		.byte	0
 2742 06df 0D       		.uleb128 0xd
 2743 06e0 BC060000 		.4byte	0x6bc
 2744 06e4 EF060000 		.4byte	0x6ef
 2745 06e8 0E       		.uleb128 0xe
 2746 06e9 B8010000 		.4byte	0x1b8
 2747 06ed 03       		.byte	0x3
 2748 06ee 00       		.byte	0
 2749 06ef 04       		.uleb128 0x4
 2750 06f0 9D050000 		.4byte	.LASF97
 2751 06f4 04       		.byte	0x4
 2752 06f5 F402     		.2byte	0x2f4
 2753 06f7 C8060000 		.4byte	0x6c8
 2754 06fb 02       		.uleb128 0x2
 2755 06fc 08       		.byte	0x8
 2756 06fd 04       		.byte	0x4
 2757 06fe D9060000 		.4byte	.LASF98
 2758 0702 14       		.uleb128 0x14
 2759 0703 03040000 		.4byte	.LASF101
 2760 0707 01       		.byte	0x1
 2761 0708 6209     		.2byte	0x962
 2762 070a 6B000000 		.4byte	0x6b
 2763 070e 00000000 		.4byte	.LFB21
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 103


 2764 0712 84000000 		.4byte	.LFE21-.LFB21
 2765 0716 01       		.uleb128 0x1
 2766 0717 9C       		.byte	0x9c
 2767 0718 4D070000 		.4byte	0x74d
 2768 071c 15       		.uleb128 0x15
 2769 071d 640C0000 		.4byte	.LASF99
 2770 0721 01       		.byte	0x1
 2771 0722 6209     		.2byte	0x962
 2772 0724 83000000 		.4byte	0x83
 2773 0728 00000000 		.4byte	.LLST0
 2774 072c 15       		.uleb128 0x15
 2775 072d 90040000 		.4byte	.LASF100
 2776 0731 01       		.byte	0x1
 2777 0732 6209     		.2byte	0x962
 2778 0734 83000000 		.4byte	0x83
 2779 0738 2C000000 		.4byte	.LLST1
 2780 073c 16       		.uleb128 0x16
 2781 073d 82030000 		.4byte	.LASF103
 2782 0741 01       		.byte	0x1
 2783 0742 6409     		.2byte	0x964
 2784 0744 6B000000 		.4byte	0x6b
 2785 0748 58000000 		.4byte	.LLST2
 2786 074c 00       		.byte	0
 2787 074d 14       		.uleb128 0x14
 2788 074e F6010000 		.4byte	.LASF102
 2789 0752 01       		.byte	0x1
 2790 0753 AE09     		.2byte	0x9ae
 2791 0755 6B000000 		.4byte	0x6b
 2792 0759 00000000 		.4byte	.LFB22
 2793 075d 42000000 		.4byte	.LFE22-.LFB22
 2794 0761 01       		.uleb128 0x1
 2795 0762 9C       		.byte	0x9c
 2796 0763 B8070000 		.4byte	0x7b8
 2797 0767 15       		.uleb128 0x15
 2798 0768 640C0000 		.4byte	.LASF99
 2799 076c 01       		.byte	0x1
 2800 076d AE09     		.2byte	0x9ae
 2801 076f 83000000 		.4byte	0x83
 2802 0773 77000000 		.4byte	.LLST3
 2803 0777 15       		.uleb128 0x15
 2804 0778 82030000 		.4byte	.LASF103
 2805 077c 01       		.byte	0x1
 2806 077d AE09     		.2byte	0x9ae
 2807 077f 6B000000 		.4byte	0x6b
 2808 0783 BC000000 		.4byte	.LLST4
 2809 0787 16       		.uleb128 0x16
 2810 0788 47010000 		.4byte	.LASF104
 2811 078c 01       		.byte	0x1
 2812 078d B009     		.2byte	0x9b0
 2813 078f 83000000 		.4byte	0x83
 2814 0793 F6000000 		.4byte	.LLST5
 2815 0797 16       		.uleb128 0x16
 2816 0798 51010000 		.4byte	.LASF105
 2817 079c 01       		.byte	0x1
 2818 079d B109     		.2byte	0x9b1
 2819 079f 83000000 		.4byte	0x83
 2820 07a3 20010000 		.4byte	.LLST6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 104


 2821 07a7 16       		.uleb128 0x16
 2822 07a8 FE0B0000 		.4byte	.LASF106
 2823 07ac 01       		.byte	0x1
 2824 07ad B209     		.2byte	0x9b2
 2825 07af 83000000 		.4byte	0x83
 2826 07b3 49010000 		.4byte	.LLST7
 2827 07b7 00       		.byte	0
 2828 07b8 17       		.uleb128 0x17
 2829 07b9 54000000 		.4byte	.LASF108
 2830 07bd 01       		.byte	0x1
 2831 07be 0003     		.2byte	0x300
 2832 07c0 00000000 		.4byte	.LFB7
 2833 07c4 24000000 		.4byte	.LFE7-.LFB7
 2834 07c8 01       		.uleb128 0x1
 2835 07c9 9C       		.byte	0x9c
 2836 07ca E8070000 		.4byte	0x7e8
 2837 07ce 16       		.uleb128 0x16
 2838 07cf 090C0000 		.4byte	.LASF107
 2839 07d3 01       		.byte	0x1
 2840 07d4 0203     		.2byte	0x302
 2841 07d6 83000000 		.4byte	0x83
 2842 07da 5C010000 		.4byte	.LLST8
 2843 07de 18       		.uleb128 0x18
 2844 07df 1A000000 		.4byte	.LVL29
 2845 07e3 3C110000 		.4byte	0x113c
 2846 07e7 00       		.byte	0
 2847 07e8 17       		.uleb128 0x17
 2848 07e9 C8020000 		.4byte	.LASF109
 2849 07ed 01       		.byte	0x1
 2850 07ee 3703     		.2byte	0x337
 2851 07f0 00000000 		.4byte	.LFB8
 2852 07f4 28000000 		.4byte	.LFE8-.LFB8
 2853 07f8 01       		.uleb128 0x1
 2854 07f9 9C       		.byte	0x9c
 2855 07fa 18080000 		.4byte	0x818
 2856 07fe 16       		.uleb128 0x16
 2857 07ff 090C0000 		.4byte	.LASF107
 2858 0803 01       		.byte	0x1
 2859 0804 3903     		.2byte	0x339
 2860 0806 83000000 		.4byte	0x83
 2861 080a 6F010000 		.4byte	.LLST9
 2862 080e 18       		.uleb128 0x18
 2863 080f 18000000 		.4byte	.LVL34
 2864 0813 48110000 		.4byte	0x1148
 2865 0817 00       		.byte	0
 2866 0818 17       		.uleb128 0x17
 2867 0819 12070000 		.4byte	.LASF110
 2868 081d 01       		.byte	0x1
 2869 081e 2209     		.2byte	0x922
 2870 0820 00000000 		.4byte	.LFB20
 2871 0824 26000000 		.4byte	.LFE20-.LFB20
 2872 0828 01       		.uleb128 0x1
 2873 0829 9C       		.byte	0x9c
 2874 082a D4080000 		.4byte	0x8d4
 2875 082e 15       		.uleb128 0x15
 2876 082f AA060000 		.4byte	.LASF111
 2877 0833 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 105


 2878 0834 2209     		.2byte	0x922
 2879 0836 83000000 		.4byte	0x83
 2880 083a A3010000 		.4byte	.LLST10
 2881 083e 15       		.uleb128 0x15
 2882 083f C4010000 		.4byte	.LASF112
 2883 0843 01       		.byte	0x1
 2884 0844 2209     		.2byte	0x922
 2885 0846 D4080000 		.4byte	0x8d4
 2886 084a C4010000 		.4byte	.LLST11
 2887 084e 16       		.uleb128 0x16
 2888 084f 82030000 		.4byte	.LASF103
 2889 0853 01       		.byte	0x1
 2890 0854 2409     		.2byte	0x924
 2891 0856 6B000000 		.4byte	0x6b
 2892 085a F0010000 		.4byte	.LLST12
 2893 085e 16       		.uleb128 0x16
 2894 085f 47010000 		.4byte	.LASF104
 2895 0863 01       		.byte	0x1
 2896 0864 2509     		.2byte	0x925
 2897 0866 6B000000 		.4byte	0x6b
 2898 086a 03020000 		.4byte	.LLST13
 2899 086e 16       		.uleb128 0x16
 2900 086f 90040000 		.4byte	.LASF100
 2901 0873 01       		.byte	0x1
 2902 0874 2909     		.2byte	0x929
 2903 0876 83000000 		.4byte	0x83
 2904 087a 16020000 		.4byte	.LLST14
 2905 087e 16       		.uleb128 0x16
 2906 087f 640C0000 		.4byte	.LASF99
 2907 0883 01       		.byte	0x1
 2908 0884 2A09     		.2byte	0x92a
 2909 0886 83000000 		.4byte	0x83
 2910 088a 29020000 		.4byte	.LLST15
 2911 088e 19       		.uleb128 0x19
 2912 088f 0A000000 		.4byte	.LVL37
 2913 0893 53110000 		.4byte	0x1153
 2914 0897 A3080000 		.4byte	0x8a3
 2915 089b 1A       		.uleb128 0x1a
 2916 089c 01       		.uleb128 0x1
 2917 089d 50       		.byte	0x50
 2918 089e 03       		.uleb128 0x3
 2919 089f F3       		.byte	0xf3
 2920 08a0 01       		.uleb128 0x1
 2921 08a1 50       		.byte	0x50
 2922 08a2 00       		.byte	0
 2923 08a3 19       		.uleb128 0x19
 2924 08a4 12000000 		.4byte	.LVL39
 2925 08a8 02070000 		.4byte	0x702
 2926 08ac BD080000 		.4byte	0x8bd
 2927 08b0 1A       		.uleb128 0x1a
 2928 08b1 01       		.uleb128 0x1
 2929 08b2 50       		.byte	0x50
 2930 08b3 02       		.uleb128 0x2
 2931 08b4 76       		.byte	0x76
 2932 08b5 00       		.sleb128 0
 2933 08b6 1A       		.uleb128 0x1a
 2934 08b7 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 106


 2935 08b8 51       		.byte	0x51
 2936 08b9 02       		.uleb128 0x2
 2937 08ba 74       		.byte	0x74
 2938 08bb 00       		.sleb128 0
 2939 08bc 00       		.byte	0
 2940 08bd 1B       		.uleb128 0x1b
 2941 08be 1C000000 		.4byte	.LVL42
 2942 08c2 4D070000 		.4byte	0x74d
 2943 08c6 1A       		.uleb128 0x1a
 2944 08c7 01       		.uleb128 0x1
 2945 08c8 50       		.byte	0x50
 2946 08c9 02       		.uleb128 0x2
 2947 08ca 76       		.byte	0x76
 2948 08cb 00       		.sleb128 0
 2949 08cc 1A       		.uleb128 0x1a
 2950 08cd 01       		.uleb128 0x1
 2951 08ce 51       		.byte	0x51
 2952 08cf 02       		.uleb128 0x2
 2953 08d0 74       		.byte	0x74
 2954 08d1 00       		.sleb128 0
 2955 08d2 00       		.byte	0
 2956 08d3 00       		.byte	0
 2957 08d4 06       		.uleb128 0x6
 2958 08d5 04       		.byte	0x4
 2959 08d6 BF010000 		.4byte	0x1bf
 2960 08da 1C       		.uleb128 0x1c
 2961 08db 60010000 		.4byte	.LASF187
 2962 08df 01       		.byte	0x1
 2963 08e0 E9       		.byte	0xe9
 2964 08e1 83000000 		.4byte	0x83
 2965 08e5 00000000 		.4byte	.LFB1
 2966 08e9 10000000 		.4byte	.LFE1-.LFB1
 2967 08ed 01       		.uleb128 0x1
 2968 08ee 9C       		.byte	0x9c
 2969 08ef 1D       		.uleb128 0x1d
 2970 08f0 13080000 		.4byte	.LASF115
 2971 08f4 01       		.byte	0x1
 2972 08f5 1D01     		.2byte	0x11d
 2973 08f7 A4000000 		.4byte	0xa4
 2974 08fb 00000000 		.4byte	.LFB2
 2975 08ff 64000000 		.4byte	.LFE2-.LFB2
 2976 0903 01       		.uleb128 0x1
 2977 0904 9C       		.byte	0x9c
 2978 0905 48090000 		.4byte	0x948
 2979 0909 15       		.uleb128 0x15
 2980 090a 960C0000 		.4byte	.LASF113
 2981 090e 01       		.byte	0x1
 2982 090f 1D01     		.2byte	0x11d
 2983 0911 83000000 		.4byte	0x83
 2984 0915 47020000 		.4byte	.LLST16
 2985 0919 16       		.uleb128 0x16
 2986 091a 890C0000 		.4byte	.LASF114
 2987 091e 01       		.byte	0x1
 2988 091f 1F01     		.2byte	0x11f
 2989 0921 A4000000 		.4byte	0xa4
 2990 0925 9A020000 		.4byte	.LLST17
 2991 0929 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 107


 2992 092a 4C000000 		.4byte	.LVL48
 2993 092e 5E110000 		.4byte	0x115e
 2994 0932 3E090000 		.4byte	0x93e
 2995 0936 1A       		.uleb128 0x1a
 2996 0937 01       		.uleb128 0x1
 2997 0938 50       		.byte	0x50
 2998 0939 03       		.uleb128 0x3
 2999 093a F3       		.byte	0xf3
 3000 093b 01       		.uleb128 0x1
 3001 093c 50       		.byte	0x50
 3002 093d 00       		.byte	0
 3003 093e 18       		.uleb128 0x18
 3004 093f 52000000 		.4byte	.LVL50
 3005 0943 69110000 		.4byte	0x1169
 3006 0947 00       		.byte	0
 3007 0948 1D       		.uleb128 0x1d
 3008 0949 B3050000 		.4byte	.LASF116
 3009 094d 01       		.byte	0x1
 3010 094e 7001     		.2byte	0x170
 3011 0950 A4000000 		.4byte	0xa4
 3012 0954 00000000 		.4byte	.LFB3
 3013 0958 38000000 		.4byte	.LFE3-.LFB3
 3014 095c 01       		.uleb128 0x1
 3015 095d 9C       		.byte	0x9c
 3016 095e 85090000 		.4byte	0x985
 3017 0962 16       		.uleb128 0x16
 3018 0963 49000000 		.4byte	.LASF117
 3019 0967 01       		.byte	0x1
 3020 0968 7201     		.2byte	0x172
 3021 096a A4000000 		.4byte	0xa4
 3022 096e C3020000 		.4byte	.LLST18
 3023 0972 18       		.uleb128 0x18
 3024 0973 1A000000 		.4byte	.LVL56
 3025 0977 75110000 		.4byte	0x1175
 3026 097b 18       		.uleb128 0x18
 3027 097c 22000000 		.4byte	.LVL57
 3028 0980 80110000 		.4byte	0x1180
 3029 0984 00       		.byte	0
 3030 0985 1D       		.uleb128 0x1d
 3031 0986 080B0000 		.4byte	.LASF118
 3032 098a 01       		.byte	0x1
 3033 098b AE01     		.2byte	0x1ae
 3034 098d A4000000 		.4byte	0xa4
 3035 0991 00000000 		.4byte	.LFB4
 3036 0995 48000000 		.4byte	.LFE4-.LFB4
 3037 0999 01       		.uleb128 0x1
 3038 099a 9C       		.byte	0x9c
 3039 099b DD090000 		.4byte	0x9dd
 3040 099f 16       		.uleb128 0x16
 3041 09a0 49000000 		.4byte	.LASF117
 3042 09a4 01       		.byte	0x1
 3043 09a5 B001     		.2byte	0x1b0
 3044 09a7 A4000000 		.4byte	0xa4
 3045 09ab E2020000 		.4byte	.LLST19
 3046 09af 16       		.uleb128 0x16
 3047 09b0 AA060000 		.4byte	.LASF111
 3048 09b4 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 108


 3049 09b5 B201     		.2byte	0x1b2
 3050 09b7 83000000 		.4byte	0x83
 3051 09bb 30030000 		.4byte	.LLST20
 3052 09bf 19       		.uleb128 0x19
 3053 09c0 18000000 		.4byte	.LVL62
 3054 09c4 EF080000 		.4byte	0x8ef
 3055 09c8 D3090000 		.4byte	0x9d3
 3056 09cc 1A       		.uleb128 0x1a
 3057 09cd 01       		.uleb128 0x1
 3058 09ce 50       		.byte	0x50
 3059 09cf 02       		.uleb128 0x2
 3060 09d0 74       		.byte	0x74
 3061 09d1 00       		.sleb128 0
 3062 09d2 00       		.byte	0
 3063 09d3 18       		.uleb128 0x18
 3064 09d4 32000000 		.4byte	.LVL63
 3065 09d8 48090000 		.4byte	0x948
 3066 09dc 00       		.byte	0
 3067 09dd 1E       		.uleb128 0x1e
 3068 09de C8090000 		.4byte	.LASF125
 3069 09e2 01       		.byte	0x1
 3070 09e3 8F02     		.2byte	0x28f
 3071 09e5 00000000 		.4byte	.LFB6
 3072 09e9 EC000000 		.4byte	.LFE6-.LFB6
 3073 09ed 01       		.uleb128 0x1
 3074 09ee 9C       		.byte	0x9c
 3075 09ef CF0A0000 		.4byte	0xacf
 3076 09f3 15       		.uleb128 0x15
 3077 09f4 960C0000 		.4byte	.LASF113
 3078 09f8 01       		.byte	0x1
 3079 09f9 8F02     		.2byte	0x28f
 3080 09fb 83000000 		.4byte	0x83
 3081 09ff 43030000 		.4byte	.LLST21
 3082 0a03 15       		.uleb128 0x15
 3083 0a04 3B000000 		.4byte	.LASF119
 3084 0a08 01       		.byte	0x1
 3085 0a09 8F02     		.2byte	0x28f
 3086 0a0b 83000000 		.4byte	0x83
 3087 0a0f 64030000 		.4byte	.LLST22
 3088 0a13 15       		.uleb128 0x15
 3089 0a14 F80A0000 		.4byte	.LASF120
 3090 0a18 01       		.byte	0x1
 3091 0a19 8F02     		.2byte	0x28f
 3092 0a1b 83000000 		.4byte	0x83
 3093 0a1f 85030000 		.4byte	.LLST23
 3094 0a23 1F       		.uleb128 0x1f
 3095 0a24 BC010000 		.4byte	.LASF121
 3096 0a28 01       		.byte	0x1
 3097 0a29 9102     		.2byte	0x291
 3098 0a2b 83000000 		.4byte	0x83
 3099 0a2f 01       		.byte	0x1
 3100 0a30 16       		.uleb128 0x16
 3101 0a31 FE0A0000 		.4byte	.LASF122
 3102 0a35 01       		.byte	0x1
 3103 0a36 9202     		.2byte	0x292
 3104 0a38 83000000 		.4byte	0x83
 3105 0a3c B1030000 		.4byte	.LLST24
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 109


 3106 0a40 16       		.uleb128 0x16
 3107 0a41 38010000 		.4byte	.LASF123
 3108 0a45 01       		.byte	0x1
 3109 0a46 9302     		.2byte	0x293
 3110 0a48 6B000000 		.4byte	0x6b
 3111 0a4c D0030000 		.4byte	.LLST25
 3112 0a50 16       		.uleb128 0x16
 3113 0a51 980A0000 		.4byte	.LASF124
 3114 0a55 01       		.byte	0x1
 3115 0a56 9402     		.2byte	0x294
 3116 0a58 CF0A0000 		.4byte	0xacf
 3117 0a5c 0F040000 		.4byte	.LLST26
 3118 0a60 18       		.uleb128 0x18
 3119 0a61 1E000000 		.4byte	.LVL73
 3120 0a65 8C110000 		.4byte	0x118c
 3121 0a69 18       		.uleb128 0x18
 3122 0a6a 3E000000 		.4byte	.LVL74
 3123 0a6e 97110000 		.4byte	0x1197
 3124 0a72 18       		.uleb128 0x18
 3125 0a73 4E000000 		.4byte	.LVL75
 3126 0a77 8C110000 		.4byte	0x118c
 3127 0a7b 18       		.uleb128 0x18
 3128 0a7c 6E000000 		.4byte	.LVL76
 3129 0a80 97110000 		.4byte	0x1197
 3130 0a84 18       		.uleb128 0x18
 3131 0a85 74000000 		.4byte	.LVL77
 3132 0a89 8C110000 		.4byte	0x118c
 3133 0a8d 18       		.uleb128 0x18
 3134 0a8e 86000000 		.4byte	.LVL78
 3135 0a92 97110000 		.4byte	0x1197
 3136 0a96 19       		.uleb128 0x19
 3137 0a97 8E000000 		.4byte	.LVL79
 3138 0a9b A2110000 		.4byte	0x11a2
 3139 0a9f AA0A0000 		.4byte	0xaaa
 3140 0aa3 1A       		.uleb128 0x1a
 3141 0aa4 01       		.uleb128 0x1
 3142 0aa5 50       		.byte	0x50
 3143 0aa6 02       		.uleb128 0x2
 3144 0aa7 74       		.byte	0x74
 3145 0aa8 00       		.sleb128 0
 3146 0aa9 00       		.byte	0
 3147 0aaa 18       		.uleb128 0x18
 3148 0aab 94000000 		.4byte	.LVL80
 3149 0aaf 8C110000 		.4byte	0x118c
 3150 0ab3 18       		.uleb128 0x18
 3151 0ab4 B4000000 		.4byte	.LVL81
 3152 0ab8 97110000 		.4byte	0x1197
 3153 0abc 18       		.uleb128 0x18
 3154 0abd BA000000 		.4byte	.LVL82
 3155 0ac1 8C110000 		.4byte	0x118c
 3156 0ac5 18       		.uleb128 0x18
 3157 0ac6 DA000000 		.4byte	.LVL83
 3158 0aca 97110000 		.4byte	0x1197
 3159 0ace 00       		.byte	0
 3160 0acf 06       		.uleb128 0x6
 3161 0ad0 04       		.byte	0x4
 3162 0ad1 D50A0000 		.4byte	0xad5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 110


 3163 0ad5 20       		.uleb128 0x20
 3164 0ad6 DB050000 		.4byte	0x5db
 3165 0ada 1E       		.uleb128 0x1e
 3166 0adb 4E0B0000 		.4byte	.LASF126
 3167 0adf 01       		.byte	0x1
 3168 0ae0 8B03     		.2byte	0x38b
 3169 0ae2 00000000 		.4byte	.LFB9
 3170 0ae6 54000000 		.4byte	.LFE9-.LFB9
 3171 0aea 01       		.uleb128 0x1
 3172 0aeb 9C       		.byte	0x9c
 3173 0aec 250B0000 		.4byte	0xb25
 3174 0af0 15       		.uleb128 0x15
 3175 0af1 5B010000 		.4byte	.LASF127
 3176 0af5 01       		.byte	0x1
 3177 0af6 8B03     		.2byte	0x38b
 3178 0af8 1C010000 		.4byte	0x11c
 3179 0afc 22040000 		.4byte	.LLST27
 3180 0b00 18       		.uleb128 0x18
 3181 0b01 14000000 		.4byte	.LVL90
 3182 0b05 B8070000 		.4byte	0x7b8
 3183 0b09 18       		.uleb128 0x18
 3184 0b0a 1E000000 		.4byte	.LVL92
 3185 0b0e E8070000 		.4byte	0x7e8
 3186 0b12 18       		.uleb128 0x18
 3187 0b13 26000000 		.4byte	.LVL93
 3188 0b17 AE110000 		.4byte	0x11ae
 3189 0b1b 18       		.uleb128 0x18
 3190 0b1c 36000000 		.4byte	.LVL94
 3191 0b20 BA110000 		.4byte	0x11ba
 3192 0b24 00       		.byte	0
 3193 0b25 1E       		.uleb128 0x1e
 3194 0b26 6E000000 		.4byte	.LASF128
 3195 0b2a 01       		.byte	0x1
 3196 0b2b EE03     		.2byte	0x3ee
 3197 0b2d 00000000 		.4byte	.LFB10
 3198 0b31 40000000 		.4byte	.LFE10-.LFB10
 3199 0b35 01       		.uleb128 0x1
 3200 0b36 9C       		.byte	0x9c
 3201 0b37 6C0B0000 		.4byte	0xb6c
 3202 0b3b 16       		.uleb128 0x16
 3203 0b3c 980A0000 		.4byte	.LASF124
 3204 0b40 01       		.byte	0x1
 3205 0b41 F003     		.2byte	0x3f0
 3206 0b43 CF0A0000 		.4byte	0xacf
 3207 0b47 5C040000 		.4byte	.LLST28
 3208 0b4b 16       		.uleb128 0x16
 3209 0b4c EC010000 		.4byte	.LASF129
 3210 0b50 01       		.byte	0x1
 3211 0b51 F103     		.2byte	0x3f1
 3212 0b53 83000000 		.4byte	0x83
 3213 0b57 6F040000 		.4byte	.LLST29
 3214 0b5b 16       		.uleb128 0x16
 3215 0b5c 2F010000 		.4byte	.LASF130
 3216 0b60 01       		.byte	0x1
 3217 0b61 F203     		.2byte	0x3f2
 3218 0b63 83000000 		.4byte	0x83
 3219 0b67 8E040000 		.4byte	.LLST30
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 111


 3220 0b6b 00       		.byte	0
 3221 0b6c 1E       		.uleb128 0x1e
 3222 0b6d D30B0000 		.4byte	.LASF131
 3223 0b71 01       		.byte	0x1
 3224 0b72 6404     		.2byte	0x464
 3225 0b74 00000000 		.4byte	.LFB11
 3226 0b78 78000000 		.4byte	.LFE11-.LFB11
 3227 0b7c 01       		.uleb128 0x1
 3228 0b7d 9C       		.byte	0x9c
 3229 0b7e A50B0000 		.4byte	0xba5
 3230 0b82 16       		.uleb128 0x16
 3231 0b83 39070000 		.4byte	.LASF132
 3232 0b87 01       		.byte	0x1
 3233 0b88 6C04     		.2byte	0x46c
 3234 0b8a A4000000 		.4byte	0xa4
 3235 0b8e B7040000 		.4byte	.LLST31
 3236 0b92 18       		.uleb128 0x18
 3237 0b93 14000000 		.4byte	.LVL107
 3238 0b97 EF080000 		.4byte	0x8ef
 3239 0b9b 18       		.uleb128 0x18
 3240 0b9c 2A000000 		.4byte	.LVL109
 3241 0ba0 48090000 		.4byte	0x948
 3242 0ba4 00       		.byte	0
 3243 0ba5 1E       		.uleb128 0x1e
 3244 0ba6 7E070000 		.4byte	.LASF133
 3245 0baa 01       		.byte	0x1
 3246 0bab B104     		.2byte	0x4b1
 3247 0bad 00000000 		.4byte	.LFB12
 3248 0bb1 08000000 		.4byte	.LFE12-.LFB12
 3249 0bb5 01       		.uleb128 0x1
 3250 0bb6 9C       		.byte	0x9c
 3251 0bb7 DD0B0000 		.4byte	0xbdd
 3252 0bbb 15       		.uleb128 0x15
 3253 0bbc 22090000 		.4byte	.LASF134
 3254 0bc0 01       		.byte	0x1
 3255 0bc1 B104     		.2byte	0x4b1
 3256 0bc3 C6000000 		.4byte	0xc6
 3257 0bc7 02050000 		.4byte	.LLST32
 3258 0bcb 1B       		.uleb128 0x1b
 3259 0bcc 06000000 		.4byte	.LVL116
 3260 0bd0 C5110000 		.4byte	0x11c5
 3261 0bd4 1A       		.uleb128 0x1a
 3262 0bd5 01       		.uleb128 0x1
 3263 0bd6 50       		.byte	0x50
 3264 0bd7 03       		.uleb128 0x3
 3265 0bd8 F3       		.byte	0xf3
 3266 0bd9 01       		.uleb128 0x1
 3267 0bda 50       		.byte	0x50
 3268 0bdb 00       		.byte	0
 3269 0bdc 00       		.byte	0
 3270 0bdd 1E       		.uleb128 0x1e
 3271 0bde 70010000 		.4byte	.LASF135
 3272 0be2 01       		.byte	0x1
 3273 0be3 C804     		.2byte	0x4c8
 3274 0be5 00000000 		.4byte	.LFB13
 3275 0be9 30000000 		.4byte	.LFE13-.LFB13
 3276 0bed 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 112


 3277 0bee 9C       		.byte	0x9c
 3278 0bef 040C0000 		.4byte	0xc04
 3279 0bf3 15       		.uleb128 0x15
 3280 0bf4 CD030000 		.4byte	.LASF136
 3281 0bf8 01       		.byte	0x1
 3282 0bf9 C804     		.2byte	0x4c8
 3283 0bfb 83000000 		.4byte	0x83
 3284 0bff 23050000 		.4byte	.LLST33
 3285 0c03 00       		.byte	0
 3286 0c04 1E       		.uleb128 0x1e
 3287 0c05 E5040000 		.4byte	.LASF137
 3288 0c09 01       		.byte	0x1
 3289 0c0a 0C05     		.2byte	0x50c
 3290 0c0c 00000000 		.4byte	.LFB14
 3291 0c10 14000000 		.4byte	.LFE14-.LFB14
 3292 0c14 01       		.uleb128 0x1
 3293 0c15 9C       		.byte	0x9c
 3294 0c16 3B0C0000 		.4byte	0xc3b
 3295 0c1a 15       		.uleb128 0x15
 3296 0c1b 470B0000 		.4byte	.LASF34
 3297 0c1f 01       		.byte	0x1
 3298 0c20 0C05     		.2byte	0x50c
 3299 0c22 83000000 		.4byte	0x83
 3300 0c26 51050000 		.4byte	.LLST34
 3301 0c2a 16       		.uleb128 0x16
 3302 0c2b 090C0000 		.4byte	.LASF107
 3303 0c2f 01       		.byte	0x1
 3304 0c30 0F05     		.2byte	0x50f
 3305 0c32 83000000 		.4byte	0x83
 3306 0c36 7F050000 		.4byte	.LLST35
 3307 0c3a 00       		.byte	0
 3308 0c3b 1E       		.uleb128 0x1e
 3309 0c3c 72060000 		.4byte	.LASF138
 3310 0c40 01       		.byte	0x1
 3311 0c41 6005     		.2byte	0x560
 3312 0c43 00000000 		.4byte	.LFB15
 3313 0c47 12000000 		.4byte	.LFE15-.LFB15
 3314 0c4b 01       		.uleb128 0x1
 3315 0c4c 9C       		.byte	0x9c
 3316 0c4d 970C0000 		.4byte	0xc97
 3317 0c51 15       		.uleb128 0x15
 3318 0c52 470B0000 		.4byte	.LASF34
 3319 0c56 01       		.byte	0x1
 3320 0c57 6005     		.2byte	0x560
 3321 0c59 83000000 		.4byte	0x83
 3322 0c5d A8050000 		.4byte	.LLST36
 3323 0c61 15       		.uleb128 0x15
 3324 0c62 CD030000 		.4byte	.LASF136
 3325 0c66 01       		.byte	0x1
 3326 0c67 6005     		.2byte	0x560
 3327 0c69 83000000 		.4byte	0x83
 3328 0c6d D4050000 		.4byte	.LLST37
 3329 0c71 19       		.uleb128 0x19
 3330 0c72 0A000000 		.4byte	.LVL128
 3331 0c76 DD0B0000 		.4byte	0xbdd
 3332 0c7a 860C0000 		.4byte	0xc86
 3333 0c7e 1A       		.uleb128 0x1a
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 113


 3334 0c7f 01       		.uleb128 0x1
 3335 0c80 50       		.byte	0x50
 3336 0c81 03       		.uleb128 0x3
 3337 0c82 F3       		.byte	0xf3
 3338 0c83 01       		.uleb128 0x1
 3339 0c84 51       		.byte	0x51
 3340 0c85 00       		.byte	0
 3341 0c86 1B       		.uleb128 0x1b
 3342 0c87 10000000 		.4byte	.LVL129
 3343 0c8b 040C0000 		.4byte	0xc04
 3344 0c8f 1A       		.uleb128 0x1a
 3345 0c90 01       		.uleb128 0x1
 3346 0c91 50       		.byte	0x50
 3347 0c92 02       		.uleb128 0x2
 3348 0c93 74       		.byte	0x74
 3349 0c94 00       		.sleb128 0
 3350 0c95 00       		.byte	0
 3351 0c96 00       		.byte	0
 3352 0c97 1D       		.uleb128 0x1d
 3353 0c98 B1040000 		.4byte	.LASF139
 3354 0c9c 01       		.byte	0x1
 3355 0c9d 9405     		.2byte	0x594
 3356 0c9f A4000000 		.4byte	0xa4
 3357 0ca3 00000000 		.4byte	.LFB16
 3358 0ca7 40000000 		.4byte	.LFE16-.LFB16
 3359 0cab 01       		.uleb128 0x1
 3360 0cac 9C       		.byte	0x9c
 3361 0cad 020D0000 		.4byte	0xd02
 3362 0cb1 15       		.uleb128 0x15
 3363 0cb2 960C0000 		.4byte	.LASF113
 3364 0cb6 01       		.byte	0x1
 3365 0cb7 9405     		.2byte	0x594
 3366 0cb9 83000000 		.4byte	0x83
 3367 0cbd F5050000 		.4byte	.LLST38
 3368 0cc1 16       		.uleb128 0x16
 3369 0cc2 67050000 		.4byte	.LASF140
 3370 0cc6 01       		.byte	0x1
 3371 0cc7 9605     		.2byte	0x596
 3372 0cc9 A4000000 		.4byte	0xa4
 3373 0ccd 21060000 		.4byte	.LLST39
 3374 0cd1 19       		.uleb128 0x19
 3375 0cd2 2A000000 		.4byte	.LVL135
 3376 0cd6 D0110000 		.4byte	0x11d0
 3377 0cda EB0C0000 		.4byte	0xceb
 3378 0cde 1A       		.uleb128 0x1a
 3379 0cdf 01       		.uleb128 0x1
 3380 0ce0 50       		.byte	0x50
 3381 0ce1 02       		.uleb128 0x2
 3382 0ce2 74       		.byte	0x74
 3383 0ce3 00       		.sleb128 0
 3384 0ce4 1A       		.uleb128 0x1a
 3385 0ce5 01       		.uleb128 0x1
 3386 0ce6 51       		.byte	0x51
 3387 0ce7 02       		.uleb128 0x2
 3388 0ce8 08       		.byte	0x8
 3389 0ce9 28       		.byte	0x28
 3390 0cea 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 114


 3391 0ceb 1B       		.uleb128 0x1b
 3392 0cec 36000000 		.4byte	.LVL136
 3393 0cf0 DB110000 		.4byte	0x11db
 3394 0cf4 1A       		.uleb128 0x1a
 3395 0cf5 01       		.uleb128 0x1
 3396 0cf6 50       		.byte	0x50
 3397 0cf7 02       		.uleb128 0x2
 3398 0cf8 74       		.byte	0x74
 3399 0cf9 00       		.sleb128 0
 3400 0cfa 1A       		.uleb128 0x1a
 3401 0cfb 01       		.uleb128 0x1
 3402 0cfc 51       		.byte	0x51
 3403 0cfd 02       		.uleb128 0x2
 3404 0cfe 08       		.byte	0x8
 3405 0cff 55       		.byte	0x55
 3406 0d00 00       		.byte	0
 3407 0d01 00       		.byte	0
 3408 0d02 1D       		.uleb128 0x1d
 3409 0d03 80050000 		.4byte	.LASF141
 3410 0d07 01       		.byte	0x1
 3411 0d08 0506     		.2byte	0x605
 3412 0d0a A4000000 		.4byte	0xa4
 3413 0d0e 00000000 		.4byte	.LFB17
 3414 0d12 1A000000 		.4byte	.LFE17-.LFB17
 3415 0d16 01       		.uleb128 0x1
 3416 0d17 9C       		.byte	0x9c
 3417 0d18 4D0D0000 		.4byte	0xd4d
 3418 0d1c 16       		.uleb128 0x16
 3419 0d1d 67050000 		.4byte	.LASF140
 3420 0d21 01       		.byte	0x1
 3421 0d22 0706     		.2byte	0x607
 3422 0d24 A4000000 		.4byte	0xa4
 3423 0d28 4B060000 		.4byte	.LLST40
 3424 0d2c 16       		.uleb128 0x16
 3425 0d2d AA060000 		.4byte	.LASF111
 3426 0d31 01       		.byte	0x1
 3427 0d32 0806     		.2byte	0x608
 3428 0d34 83000000 		.4byte	0x83
 3429 0d38 75060000 		.4byte	.LLST41
 3430 0d3c 1B       		.uleb128 0x1b
 3431 0d3d 0E000000 		.4byte	.LVL142
 3432 0d41 970C0000 		.4byte	0xc97
 3433 0d45 1A       		.uleb128 0x1a
 3434 0d46 01       		.uleb128 0x1
 3435 0d47 50       		.byte	0x50
 3436 0d48 02       		.uleb128 0x2
 3437 0d49 74       		.byte	0x74
 3438 0d4a 00       		.sleb128 0
 3439 0d4b 00       		.byte	0
 3440 0d4c 00       		.byte	0
 3441 0d4d 1E       		.uleb128 0x1e
 3442 0d4e 1B020000 		.4byte	.LASF142
 3443 0d52 01       		.byte	0x1
 3444 0d53 080A     		.2byte	0xa08
 3445 0d55 00000000 		.4byte	.LFB23
 3446 0d59 50000000 		.4byte	.LFE23-.LFB23
 3447 0d5d 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 115


 3448 0d5e 9C       		.byte	0x9c
 3449 0d5f AE0D0000 		.4byte	0xdae
 3450 0d63 16       		.uleb128 0x16
 3451 0d64 AA060000 		.4byte	.LASF111
 3452 0d68 01       		.byte	0x1
 3453 0d69 0A0A     		.2byte	0xa0a
 3454 0d6b 83000000 		.4byte	0x83
 3455 0d6f 94060000 		.4byte	.LLST42
 3456 0d73 16       		.uleb128 0x16
 3457 0d74 B4060000 		.4byte	.LASF143
 3458 0d78 01       		.byte	0x1
 3459 0d79 0B0A     		.2byte	0xa0b
 3460 0d7b 83000000 		.4byte	0x83
 3461 0d7f B3060000 		.4byte	.LLST43
 3462 0d83 16       		.uleb128 0x16
 3463 0d84 3B0B0000 		.4byte	.LASF144
 3464 0d88 01       		.byte	0x1
 3465 0d89 170A     		.2byte	0xa17
 3466 0d8b CF0A0000 		.4byte	0xacf
 3467 0d8f D2060000 		.4byte	.LLST44
 3468 0d93 1B       		.uleb128 0x1b
 3469 0d94 30000000 		.4byte	.LVL151
 3470 0d98 E7110000 		.4byte	0x11e7
 3471 0d9c 1A       		.uleb128 0x1a
 3472 0d9d 01       		.uleb128 0x1
 3473 0d9e 50       		.byte	0x50
 3474 0d9f 0C       		.uleb128 0xc
 3475 0da0 74       		.byte	0x74
 3476 0da1 00       		.sleb128 0
 3477 0da2 33       		.byte	0x33
 3478 0da3 24       		.byte	0x24
 3479 0da4 74       		.byte	0x74
 3480 0da5 00       		.sleb128 0
 3481 0da6 1C       		.byte	0x1c
 3482 0da7 32       		.byte	0x32
 3483 0da8 24       		.byte	0x24
 3484 0da9 76       		.byte	0x76
 3485 0daa 00       		.sleb128 0
 3486 0dab 22       		.byte	0x22
 3487 0dac 00       		.byte	0
 3488 0dad 00       		.byte	0
 3489 0dae 1D       		.uleb128 0x1d
 3490 0daf 19000000 		.4byte	.LASF145
 3491 0db3 01       		.byte	0x1
 3492 0db4 5A0A     		.2byte	0xa5a
 3493 0db6 83000000 		.4byte	0x83
 3494 0dba 00000000 		.4byte	.LFB24
 3495 0dbe 14000000 		.4byte	.LFE24-.LFB24
 3496 0dc2 01       		.uleb128 0x1
 3497 0dc3 9C       		.byte	0x9c
 3498 0dc4 F50D0000 		.4byte	0xdf5
 3499 0dc8 15       		.uleb128 0x15
 3500 0dc9 960C0000 		.4byte	.LASF113
 3501 0dcd 01       		.byte	0x1
 3502 0dce 5A0A     		.2byte	0xa5a
 3503 0dd0 83000000 		.4byte	0x83
 3504 0dd4 E5060000 		.4byte	.LLST45
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 116


 3505 0dd8 21       		.uleb128 0x21
 3506 0dd9 1B090000 		.4byte	.LASF146
 3507 0ddd 01       		.byte	0x1
 3508 0dde 5C0A     		.2byte	0xa5c
 3509 0de0 83000000 		.4byte	0x83
 3510 0de4 01       		.uleb128 0x1
 3511 0de5 50       		.byte	0x50
 3512 0de6 21       		.uleb128 0x21
 3513 0de7 C4010000 		.4byte	.LASF112
 3514 0deb 01       		.byte	0x1
 3515 0dec 600A     		.2byte	0xa60
 3516 0dee D4080000 		.4byte	0x8d4
 3517 0df2 01       		.uleb128 0x1
 3518 0df3 53       		.byte	0x53
 3519 0df4 00       		.byte	0
 3520 0df5 1D       		.uleb128 0x1d
 3521 0df6 AD030000 		.4byte	.LASF147
 3522 0dfa 01       		.byte	0x1
 3523 0dfb B10A     		.2byte	0xab1
 3524 0dfd 6B000000 		.4byte	0x6b
 3525 0e01 00000000 		.4byte	.LFB25
 3526 0e05 24000000 		.4byte	.LFE25-.LFB25
 3527 0e09 01       		.uleb128 0x1
 3528 0e0a 9C       		.byte	0x9c
 3529 0e0b 4B0E0000 		.4byte	0xe4b
 3530 0e0f 15       		.uleb128 0x15
 3531 0e10 640C0000 		.4byte	.LASF99
 3532 0e14 01       		.byte	0x1
 3533 0e15 B10A     		.2byte	0xab1
 3534 0e17 83000000 		.4byte	0x83
 3535 0e1b 06070000 		.4byte	.LLST46
 3536 0e1f 22       		.uleb128 0x22
 3537 0e20 9F040000 		.4byte	.LASF26
 3538 0e24 01       		.byte	0x1
 3539 0e25 B10A     		.2byte	0xab1
 3540 0e27 83000000 		.4byte	0x83
 3541 0e2b 01       		.uleb128 0x1
 3542 0e2c 51       		.byte	0x51
 3543 0e2d 16       		.uleb128 0x16
 3544 0e2e F0080000 		.4byte	.LASF148
 3545 0e32 01       		.byte	0x1
 3546 0e33 B30A     		.2byte	0xab3
 3547 0e35 83000000 		.4byte	0x83
 3548 0e39 40070000 		.4byte	.LLST47
 3549 0e3d 1F       		.uleb128 0x1f
 3550 0e3e 720C0000 		.4byte	.LASF149
 3551 0e42 01       		.byte	0x1
 3552 0e43 B40A     		.2byte	0xab4
 3553 0e45 83000000 		.4byte	0x83
 3554 0e49 01       		.byte	0x1
 3555 0e4a 00       		.byte	0
 3556 0e4b 17       		.uleb128 0x17
 3557 0e4c CC010000 		.4byte	.LASF150
 3558 0e50 01       		.byte	0x1
 3559 0e51 C008     		.2byte	0x8c0
 3560 0e53 00000000 		.4byte	.LFB19
 3561 0e57 3A000000 		.4byte	.LFE19-.LFB19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 117


 3562 0e5b 01       		.uleb128 0x1
 3563 0e5c 9C       		.byte	0x9c
 3564 0e5d 300F0000 		.4byte	0xf30
 3565 0e61 15       		.uleb128 0x15
 3566 0e62 AA060000 		.4byte	.LASF111
 3567 0e66 01       		.byte	0x1
 3568 0e67 C008     		.2byte	0x8c0
 3569 0e69 83000000 		.4byte	0x83
 3570 0e6d 53070000 		.4byte	.LLST48
 3571 0e71 15       		.uleb128 0x15
 3572 0e72 C4010000 		.4byte	.LASF112
 3573 0e76 01       		.byte	0x1
 3574 0e77 C008     		.2byte	0x8c0
 3575 0e79 D4080000 		.4byte	0x8d4
 3576 0e7d 74070000 		.4byte	.LLST49
 3577 0e81 16       		.uleb128 0x16
 3578 0e82 82030000 		.4byte	.LASF103
 3579 0e86 01       		.byte	0x1
 3580 0e87 C208     		.2byte	0x8c2
 3581 0e89 6B000000 		.4byte	0x6b
 3582 0e8d A0070000 		.4byte	.LLST50
 3583 0e91 16       		.uleb128 0x16
 3584 0e92 47010000 		.4byte	.LASF104
 3585 0e96 01       		.byte	0x1
 3586 0e97 C308     		.2byte	0x8c3
 3587 0e99 6B000000 		.4byte	0x6b
 3588 0e9d BE070000 		.4byte	.LLST51
 3589 0ea1 16       		.uleb128 0x16
 3590 0ea2 90040000 		.4byte	.LASF100
 3591 0ea6 01       		.byte	0x1
 3592 0ea7 C708     		.2byte	0x8c7
 3593 0ea9 83000000 		.4byte	0x83
 3594 0ead D1070000 		.4byte	.LLST52
 3595 0eb1 16       		.uleb128 0x16
 3596 0eb2 640C0000 		.4byte	.LASF99
 3597 0eb6 01       		.byte	0x1
 3598 0eb7 C908     		.2byte	0x8c9
 3599 0eb9 83000000 		.4byte	0x83
 3600 0ebd EF070000 		.4byte	.LLST53
 3601 0ec1 19       		.uleb128 0x19
 3602 0ec2 08000000 		.4byte	.LVL167
 3603 0ec6 AE0D0000 		.4byte	0xdae
 3604 0eca D60E0000 		.4byte	0xed6
 3605 0ece 1A       		.uleb128 0x1a
 3606 0ecf 01       		.uleb128 0x1
 3607 0ed0 50       		.byte	0x50
 3608 0ed1 03       		.uleb128 0x3
 3609 0ed2 F3       		.byte	0xf3
 3610 0ed3 01       		.uleb128 0x1
 3611 0ed4 50       		.byte	0x50
 3612 0ed5 00       		.byte	0
 3613 0ed6 19       		.uleb128 0x19
 3614 0ed7 12000000 		.4byte	.LVL169
 3615 0edb F3110000 		.4byte	0x11f3
 3616 0edf EF0E0000 		.4byte	0xeef
 3617 0ee3 1A       		.uleb128 0x1a
 3618 0ee4 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 118


 3619 0ee5 50       		.byte	0x50
 3620 0ee6 02       		.uleb128 0x2
 3621 0ee7 75       		.byte	0x75
 3622 0ee8 00       		.sleb128 0
 3623 0ee9 1A       		.uleb128 0x1a
 3624 0eea 01       		.uleb128 0x1
 3625 0eeb 52       		.byte	0x52
 3626 0eec 01       		.uleb128 0x1
 3627 0eed 30       		.byte	0x30
 3628 0eee 00       		.byte	0
 3629 0eef 19       		.uleb128 0x19
 3630 0ef0 1A000000 		.4byte	.LVL172
 3631 0ef4 02070000 		.4byte	0x702
 3632 0ef8 030F0000 		.4byte	0xf03
 3633 0efc 1A       		.uleb128 0x1a
 3634 0efd 01       		.uleb128 0x1
 3635 0efe 50       		.byte	0x50
 3636 0eff 02       		.uleb128 0x2
 3637 0f00 75       		.byte	0x75
 3638 0f01 00       		.sleb128 0
 3639 0f02 00       		.byte	0
 3640 0f03 19       		.uleb128 0x19
 3641 0f04 26000000 		.4byte	.LVL175
 3642 0f08 F50D0000 		.4byte	0xdf5
 3643 0f0c 190F0000 		.4byte	0xf19
 3644 0f10 1A       		.uleb128 0x1a
 3645 0f11 01       		.uleb128 0x1
 3646 0f12 50       		.byte	0x50
 3647 0f13 04       		.uleb128 0x4
 3648 0f14 75       		.byte	0x75
 3649 0f15 00       		.sleb128 0
 3650 0f16 31       		.byte	0x31
 3651 0f17 24       		.byte	0x24
 3652 0f18 00       		.byte	0
 3653 0f19 1B       		.uleb128 0x1b
 3654 0f1a 30000000 		.4byte	.LVL177
 3655 0f1e 4D070000 		.4byte	0x74d
 3656 0f22 1A       		.uleb128 0x1a
 3657 0f23 01       		.uleb128 0x1
 3658 0f24 50       		.byte	0x50
 3659 0f25 02       		.uleb128 0x2
 3660 0f26 75       		.byte	0x75
 3661 0f27 00       		.sleb128 0
 3662 0f28 1A       		.uleb128 0x1a
 3663 0f29 01       		.uleb128 0x1
 3664 0f2a 51       		.byte	0x51
 3665 0f2b 02       		.uleb128 0x2
 3666 0f2c 74       		.byte	0x74
 3667 0f2d 00       		.sleb128 0
 3668 0f2e 00       		.byte	0
 3669 0f2f 00       		.byte	0
 3670 0f30 1E       		.uleb128 0x1e
 3671 0f31 BD0C0000 		.4byte	.LASF151
 3672 0f35 01       		.byte	0x1
 3673 0f36 8B08     		.2byte	0x88b
 3674 0f38 00000000 		.4byte	.LFB18
 3675 0f3c 38000000 		.4byte	.LFE18-.LFB18
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 119


 3676 0f40 01       		.uleb128 0x1
 3677 0f41 9C       		.byte	0x9c
 3678 0f42 8B0F0000 		.4byte	0xf8b
 3679 0f46 16       		.uleb128 0x16
 3680 0f47 AA060000 		.4byte	.LASF111
 3681 0f4b 01       		.byte	0x1
 3682 0f4c 8D08     		.2byte	0x88d
 3683 0f4e 83000000 		.4byte	0x83
 3684 0f52 0D080000 		.4byte	.LLST54
 3685 0f56 16       		.uleb128 0x16
 3686 0f57 C4010000 		.4byte	.LASF112
 3687 0f5b 01       		.byte	0x1
 3688 0f5c 8E08     		.2byte	0x88e
 3689 0f5e D4080000 		.4byte	0x8d4
 3690 0f62 2C080000 		.4byte	.LLST55
 3691 0f66 19       		.uleb128 0x19
 3692 0f67 24000000 		.4byte	.LVL185
 3693 0f6b 4B0E0000 		.4byte	0xe4b
 3694 0f6f 7A0F0000 		.4byte	0xf7a
 3695 0f73 1A       		.uleb128 0x1a
 3696 0f74 01       		.uleb128 0x1
 3697 0f75 50       		.byte	0x50
 3698 0f76 02       		.uleb128 0x2
 3699 0f77 74       		.byte	0x74
 3700 0f78 00       		.sleb128 0
 3701 0f79 00       		.byte	0
 3702 0f7a 1B       		.uleb128 0x1b
 3703 0f7b 2C000000 		.4byte	.LVL187
 3704 0f7f 18080000 		.4byte	0x818
 3705 0f83 1A       		.uleb128 0x1a
 3706 0f84 01       		.uleb128 0x1
 3707 0f85 50       		.byte	0x50
 3708 0f86 02       		.uleb128 0x2
 3709 0f87 74       		.byte	0x74
 3710 0f88 00       		.sleb128 0
 3711 0f89 00       		.byte	0
 3712 0f8a 00       		.byte	0
 3713 0f8b 1D       		.uleb128 0x1d
 3714 0f8c 4E0C0000 		.4byte	.LASF152
 3715 0f90 01       		.byte	0x1
 3716 0f91 0402     		.2byte	0x204
 3717 0f93 A4000000 		.4byte	0xa4
 3718 0f97 00000000 		.4byte	.LFB5
 3719 0f9b 14000000 		.4byte	.LFE5-.LFB5
 3720 0f9f 01       		.uleb128 0x1
 3721 0fa0 9C       		.byte	0x9c
 3722 0fa1 D40F0000 		.4byte	0xfd4
 3723 0fa5 1F       		.uleb128 0x1f
 3724 0fa6 24010000 		.4byte	.LASF153
 3725 0faa 01       		.byte	0x1
 3726 0fab 0602     		.2byte	0x206
 3727 0fad A4000000 		.4byte	0xa4
 3728 0fb1 00       		.byte	0
 3729 0fb2 18       		.uleb128 0x18
 3730 0fb3 06000000 		.4byte	.LVL191
 3731 0fb7 300F0000 		.4byte	0xf30
 3732 0fbb 18       		.uleb128 0x18
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 120


 3733 0fbc 0A000000 		.4byte	.LVL192
 3734 0fc0 250B0000 		.4byte	0xb25
 3735 0fc4 1B       		.uleb128 0x1b
 3736 0fc5 10000000 		.4byte	.LVL193
 3737 0fc9 DA0A0000 		.4byte	0xada
 3738 0fcd 1A       		.uleb128 0x1a
 3739 0fce 01       		.uleb128 0x1
 3740 0fcf 50       		.byte	0x50
 3741 0fd0 01       		.uleb128 0x1
 3742 0fd1 30       		.byte	0x30
 3743 0fd2 00       		.byte	0
 3744 0fd3 00       		.byte	0
 3745 0fd4 1E       		.uleb128 0x1e
 3746 0fd5 8E000000 		.4byte	.LASF154
 3747 0fd9 01       		.byte	0x1
 3748 0fda E10A     		.2byte	0xae1
 3749 0fdc 00000000 		.4byte	.LFB26
 3750 0fe0 68000000 		.4byte	.LFE26-.LFB26
 3751 0fe4 01       		.uleb128 0x1
 3752 0fe5 9C       		.byte	0x9c
 3753 0fe6 66100000 		.4byte	0x1066
 3754 0fea 16       		.uleb128 0x16
 3755 0feb 090C0000 		.4byte	.LASF107
 3756 0fef 01       		.byte	0x1
 3757 0ff0 E30A     		.2byte	0xae3
 3758 0ff2 83000000 		.4byte	0x83
 3759 0ff6 4A080000 		.4byte	.LLST56
 3760 0ffa 16       		.uleb128 0x16
 3761 0ffb 38010000 		.4byte	.LASF123
 3762 0fff 01       		.byte	0x1
 3763 1000 E40A     		.2byte	0xae4
 3764 1002 6B000000 		.4byte	0x6b
 3765 1006 94080000 		.4byte	.LLST57
 3766 100a 18       		.uleb128 0x18
 3767 100b 06000000 		.4byte	.LVL194
 3768 100f 8C110000 		.4byte	0x118c
 3769 1013 18       		.uleb128 0x18
 3770 1014 14000000 		.4byte	.LVL197
 3771 1018 97110000 		.4byte	0x1197
 3772 101c 18       		.uleb128 0x18
 3773 101d 18000000 		.4byte	.LVL198
 3774 1021 8C110000 		.4byte	0x118c
 3775 1025 18       		.uleb128 0x18
 3776 1026 26000000 		.4byte	.LVL201
 3777 102a 97110000 		.4byte	0x1197
 3778 102e 18       		.uleb128 0x18
 3779 102f 2A000000 		.4byte	.LVL202
 3780 1033 8C110000 		.4byte	0x118c
 3781 1037 18       		.uleb128 0x18
 3782 1038 3E000000 		.4byte	.LVL206
 3783 103c 97110000 		.4byte	0x1197
 3784 1040 19       		.uleb128 0x19
 3785 1041 44000000 		.4byte	.LVL207
 3786 1045 FF110000 		.4byte	0x11ff
 3787 1049 53100000 		.4byte	0x1053
 3788 104d 1A       		.uleb128 0x1a
 3789 104e 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 121


 3790 104f 50       		.byte	0x50
 3791 1050 01       		.uleb128 0x1
 3792 1051 31       		.byte	0x31
 3793 1052 00       		.byte	0
 3794 1053 18       		.uleb128 0x18
 3795 1054 48000000 		.4byte	.LVL208
 3796 1058 8C110000 		.4byte	0x118c
 3797 105c 18       		.uleb128 0x18
 3798 105d 52000000 		.4byte	.LVL211
 3799 1061 97110000 		.4byte	0x1197
 3800 1065 00       		.byte	0
 3801 1066 23       		.uleb128 0x23
 3802 1067 C1050000 		.4byte	.LASF155
 3803 106b 04       		.byte	0x4
 3804 106c 8804     		.2byte	0x488
 3805 106e 4A050000 		.4byte	0x54a
 3806 1072 23       		.uleb128 0x23
 3807 1073 44080000 		.4byte	.LASF156
 3808 1077 04       		.byte	0x4
 3809 1078 8904     		.2byte	0x489
 3810 107a 7E100000 		.4byte	0x107e
 3811 107e 20       		.uleb128 0x20
 3812 107f EF060000 		.4byte	0x6ef
 3813 1083 0D       		.uleb128 0xd
 3814 1084 D50A0000 		.4byte	0xad5
 3815 1088 93100000 		.4byte	0x1093
 3816 108c 0E       		.uleb128 0xe
 3817 108d B8010000 		.4byte	0x1b8
 3818 1091 0A       		.byte	0xa
 3819 1092 00       		.byte	0
 3820 1093 23       		.uleb128 0x23
 3821 1094 60080000 		.4byte	.LASF157
 3822 1098 04       		.byte	0x4
 3823 1099 8A04     		.2byte	0x48a
 3824 109b 9F100000 		.4byte	0x109f
 3825 109f 20       		.uleb128 0x20
 3826 10a0 83100000 		.4byte	0x1083
 3827 10a4 24       		.uleb128 0x24
 3828 10a5 C9000000 		.4byte	.LASF158
 3829 10a9 01       		.byte	0x1
 3830 10aa BB       		.byte	0xbb
 3831 10ab B0000000 		.4byte	0xb0
 3832 10af 05       		.uleb128 0x5
 3833 10b0 03       		.byte	0x3
 3834 10b1 00000000 		.4byte	CapSense_widgetIndex
 3835 10b5 24       		.uleb128 0x24
 3836 10b6 3B030000 		.4byte	.LASF159
 3837 10ba 01       		.byte	0x1
 3838 10bb BC       		.byte	0xbc
 3839 10bc B0000000 		.4byte	0xb0
 3840 10c0 05       		.uleb128 0x5
 3841 10c1 03       		.byte	0x3
 3842 10c2 00000000 		.4byte	CapSense_sensorIndex
 3843 10c6 24       		.uleb128 0x24
 3844 10c7 9F0C0000 		.4byte	.LASF160
 3845 10cb 01       		.byte	0x1
 3846 10cc BD       		.byte	0xbd
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 122


 3847 10cd 6B000000 		.4byte	0x6b
 3848 10d1 05       		.uleb128 0x5
 3849 10d2 03       		.byte	0x3
 3850 10d3 00000000 		.4byte	CapSense_requestScanAllWidget
 3851 10d7 24       		.uleb128 0x24
 3852 10d8 820B0000 		.4byte	.LASF161
 3853 10dc 01       		.byte	0x1
 3854 10dd C0       		.byte	0xc0
 3855 10de B0060000 		.4byte	0x6b0
 3856 10e2 05       		.uleb128 0x5
 3857 10e3 03       		.byte	0x3
 3858 10e4 00000000 		.4byte	CapSense_curRamSnsPtr
 3859 10e8 24       		.uleb128 0x24
 3860 10e9 D4080000 		.4byte	.LASF162
 3861 10ed 01       		.byte	0x1
 3862 10ee AE       		.byte	0xae
 3863 10ef 1C010000 		.4byte	0x11c
 3864 10f3 05       		.uleb128 0x5
 3865 10f4 03       		.byte	0x3
 3866 10f5 00000000 		.4byte	CapSense_currentSenseMethod
 3867 10f9 24       		.uleb128 0x24
 3868 10fa A40B0000 		.4byte	.LASF163
 3869 10fe 01       		.byte	0x1
 3870 10ff B7       		.byte	0xb7
 3871 1100 0A110000 		.4byte	0x110a
 3872 1104 05       		.uleb128 0x5
 3873 1105 03       		.byte	0x3
 3874 1106 00000000 		.4byte	CapSense_scanFreqIndex
 3875 110a 20       		.uleb128 0x20
 3876 110b 6B000000 		.4byte	0x6b
 3877 110f 24       		.uleb128 0x24
 3878 1110 00000000 		.4byte	.LASF164
 3879 1114 01       		.byte	0x1
 3880 1115 C6       		.byte	0xc6
 3881 1116 20110000 		.4byte	0x1120
 3882 111a 05       		.uleb128 0x5
 3883 111b 03       		.byte	0x3
 3884 111c 00000000 		.4byte	CapSense_curFlashWdgtPtr
 3885 1120 06       		.uleb128 0x6
 3886 1121 04       		.byte	0x4
 3887 1122 26110000 		.4byte	0x1126
 3888 1126 20       		.uleb128 0x20
 3889 1127 BC060000 		.4byte	0x6bc
 3890 112b 24       		.uleb128 0x24
 3891 112c 58060000 		.4byte	.LASF165
 3892 1130 01       		.byte	0x1
 3893 1131 CF       		.byte	0xcf
 3894 1132 CF0A0000 		.4byte	0xacf
 3895 1136 05       		.uleb128 0x5
 3896 1137 03       		.byte	0x3
 3897 1138 00000000 		.4byte	CapSense_curSnsIOPtr
 3898 113c 25       		.uleb128 0x25
 3899 113d 55070000 		.4byte	.LASF166
 3900 1141 55070000 		.4byte	.LASF166
 3901 1145 05       		.byte	0x5
 3902 1146 D401     		.2byte	0x1d4
 3903 1148 26       		.uleb128 0x26
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 123


 3904 1149 26060000 		.4byte	.LASF167
 3905 114d 26060000 		.4byte	.LASF167
 3906 1151 06       		.byte	0x6
 3907 1152 54       		.byte	0x54
 3908 1153 26       		.uleb128 0x26
 3909 1154 150C0000 		.4byte	.LASF168
 3910 1158 150C0000 		.4byte	.LASF168
 3911 115c 06       		.byte	0x6
 3912 115d 55       		.byte	0x55
 3913 115e 26       		.uleb128 0x26
 3914 115f FA020000 		.4byte	.LASF169
 3915 1163 FA020000 		.4byte	.LASF169
 3916 1167 06       		.byte	0x6
 3917 1168 39       		.byte	0x39
 3918 1169 25       		.uleb128 0x25
 3919 116a E2020000 		.4byte	.LASF170
 3920 116e E2020000 		.4byte	.LASF170
 3921 1172 05       		.byte	0x5
 3922 1173 B701     		.2byte	0x1b7
 3923 1175 26       		.uleb128 0x26
 3924 1176 2A0B0000 		.4byte	.LASF171
 3925 117a 2A0B0000 		.4byte	.LASF171
 3926 117e 06       		.byte	0x6
 3927 117f 3B       		.byte	0x3b
 3928 1180 25       		.uleb128 0x25
 3929 1181 C20A0000 		.4byte	.LASF172
 3930 1185 C20A0000 		.4byte	.LASF172
 3931 1189 05       		.byte	0x5
 3932 118a B901     		.2byte	0x1b9
 3933 118c 26       		.uleb128 0x26
 3934 118d 6B0B0000 		.4byte	.LASF173
 3935 1191 6B0B0000 		.4byte	.LASF173
 3936 1195 07       		.byte	0x7
 3937 1196 E5       		.byte	0xe5
 3938 1197 26       		.uleb128 0x26
 3939 1198 43040000 		.4byte	.LASF174
 3940 119c 43040000 		.4byte	.LASF174
 3941 11a0 07       		.byte	0x7
 3942 11a1 E6       		.byte	0xe6
 3943 11a2 25       		.uleb128 0x25
 3944 11a3 57090000 		.4byte	.LASF175
 3945 11a7 57090000 		.4byte	.LASF175
 3946 11ab 05       		.byte	0x5
 3947 11ac C001     		.2byte	0x1c0
 3948 11ae 25       		.uleb128 0x25
 3949 11af 43050000 		.4byte	.LASF176
 3950 11b3 43050000 		.4byte	.LASF176
 3951 11b7 05       		.byte	0x5
 3952 11b8 D001     		.2byte	0x1d0
 3953 11ba 26       		.uleb128 0x26
 3954 11bb B2000000 		.4byte	.LASF177
 3955 11bf B2000000 		.4byte	.LASF177
 3956 11c3 06       		.byte	0x6
 3957 11c4 53       		.byte	0x53
 3958 11c5 26       		.uleb128 0x26
 3959 11c6 32090000 		.4byte	.LASF178
 3960 11ca 32090000 		.4byte	.LASF178
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 124


 3961 11ce 08       		.byte	0x8
 3962 11cf 18       		.byte	0x18
 3963 11d0 26       		.uleb128 0x26
 3964 11d1 8E060000 		.4byte	.LASF179
 3965 11d5 8E060000 		.4byte	.LASF179
 3966 11d9 06       		.byte	0x6
 3967 11da 3F       		.byte	0x3f
 3968 11db 25       		.uleb128 0x25
 3969 11dc 28080000 		.4byte	.LASF180
 3970 11e0 28080000 		.4byte	.LASF180
 3971 11e4 05       		.byte	0x5
 3972 11e5 BD01     		.2byte	0x1bd
 3973 11e7 25       		.uleb128 0x25
 3974 11e8 B5070000 		.4byte	.LASF181
 3975 11ec B5070000 		.4byte	.LASF181
 3976 11f0 05       		.byte	0x5
 3977 11f1 C101     		.2byte	0x1c1
 3978 11f3 25       		.uleb128 0x25
 3979 11f4 59040000 		.4byte	.LASF182
 3980 11f8 59040000 		.4byte	.LASF182
 3981 11fc 05       		.byte	0x5
 3982 11fd DB01     		.2byte	0x1db
 3983 11ff 26       		.uleb128 0x26
 3984 1200 12030000 		.4byte	.LASF183
 3985 1204 12030000 		.4byte	.LASF183
 3986 1208 07       		.byte	0x7
 3987 1209 DA       		.byte	0xda
 3988 120a 00       		.byte	0
 3989              		.section	.debug_abbrev,"",%progbits
 3990              	.Ldebug_abbrev0:
 3991 0000 01       		.uleb128 0x1
 3992 0001 11       		.uleb128 0x11
 3993 0002 01       		.byte	0x1
 3994 0003 25       		.uleb128 0x25
 3995 0004 0E       		.uleb128 0xe
 3996 0005 13       		.uleb128 0x13
 3997 0006 0B       		.uleb128 0xb
 3998 0007 03       		.uleb128 0x3
 3999 0008 0E       		.uleb128 0xe
 4000 0009 1B       		.uleb128 0x1b
 4001 000a 0E       		.uleb128 0xe
 4002 000b 55       		.uleb128 0x55
 4003 000c 17       		.uleb128 0x17
 4004 000d 11       		.uleb128 0x11
 4005 000e 01       		.uleb128 0x1
 4006 000f 10       		.uleb128 0x10
 4007 0010 17       		.uleb128 0x17
 4008 0011 00       		.byte	0
 4009 0012 00       		.byte	0
 4010 0013 02       		.uleb128 0x2
 4011 0014 24       		.uleb128 0x24
 4012 0015 00       		.byte	0
 4013 0016 0B       		.uleb128 0xb
 4014 0017 0B       		.uleb128 0xb
 4015 0018 3E       		.uleb128 0x3e
 4016 0019 0B       		.uleb128 0xb
 4017 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 125


 4018 001b 0E       		.uleb128 0xe
 4019 001c 00       		.byte	0
 4020 001d 00       		.byte	0
 4021 001e 03       		.uleb128 0x3
 4022 001f 24       		.uleb128 0x24
 4023 0020 00       		.byte	0
 4024 0021 0B       		.uleb128 0xb
 4025 0022 0B       		.uleb128 0xb
 4026 0023 3E       		.uleb128 0x3e
 4027 0024 0B       		.uleb128 0xb
 4028 0025 03       		.uleb128 0x3
 4029 0026 08       		.uleb128 0x8
 4030 0027 00       		.byte	0
 4031 0028 00       		.byte	0
 4032 0029 04       		.uleb128 0x4
 4033 002a 16       		.uleb128 0x16
 4034 002b 00       		.byte	0
 4035 002c 03       		.uleb128 0x3
 4036 002d 0E       		.uleb128 0xe
 4037 002e 3A       		.uleb128 0x3a
 4038 002f 0B       		.uleb128 0xb
 4039 0030 3B       		.uleb128 0x3b
 4040 0031 05       		.uleb128 0x5
 4041 0032 49       		.uleb128 0x49
 4042 0033 13       		.uleb128 0x13
 4043 0034 00       		.byte	0
 4044 0035 00       		.byte	0
 4045 0036 05       		.uleb128 0x5
 4046 0037 35       		.uleb128 0x35
 4047 0038 00       		.byte	0
 4048 0039 49       		.uleb128 0x49
 4049 003a 13       		.uleb128 0x13
 4050 003b 00       		.byte	0
 4051 003c 00       		.byte	0
 4052 003d 06       		.uleb128 0x6
 4053 003e 0F       		.uleb128 0xf
 4054 003f 00       		.byte	0
 4055 0040 0B       		.uleb128 0xb
 4056 0041 0B       		.uleb128 0xb
 4057 0042 49       		.uleb128 0x49
 4058 0043 13       		.uleb128 0x13
 4059 0044 00       		.byte	0
 4060 0045 00       		.byte	0
 4061 0046 07       		.uleb128 0x7
 4062 0047 15       		.uleb128 0x15
 4063 0048 00       		.byte	0
 4064 0049 27       		.uleb128 0x27
 4065 004a 19       		.uleb128 0x19
 4066 004b 00       		.byte	0
 4067 004c 00       		.byte	0
 4068 004d 08       		.uleb128 0x8
 4069 004e 04       		.uleb128 0x4
 4070 004f 01       		.byte	0x1
 4071 0050 0B       		.uleb128 0xb
 4072 0051 0B       		.uleb128 0xb
 4073 0052 49       		.uleb128 0x49
 4074 0053 13       		.uleb128 0x13
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 126


 4075 0054 3A       		.uleb128 0x3a
 4076 0055 0B       		.uleb128 0xb
 4077 0056 3B       		.uleb128 0x3b
 4078 0057 0B       		.uleb128 0xb
 4079 0058 01       		.uleb128 0x1
 4080 0059 13       		.uleb128 0x13
 4081 005a 00       		.byte	0
 4082 005b 00       		.byte	0
 4083 005c 09       		.uleb128 0x9
 4084 005d 28       		.uleb128 0x28
 4085 005e 00       		.byte	0
 4086 005f 03       		.uleb128 0x3
 4087 0060 0E       		.uleb128 0xe
 4088 0061 1C       		.uleb128 0x1c
 4089 0062 0B       		.uleb128 0xb
 4090 0063 00       		.byte	0
 4091 0064 00       		.byte	0
 4092 0065 0A       		.uleb128 0xa
 4093 0066 16       		.uleb128 0x16
 4094 0067 00       		.byte	0
 4095 0068 03       		.uleb128 0x3
 4096 0069 0E       		.uleb128 0xe
 4097 006a 3A       		.uleb128 0x3a
 4098 006b 0B       		.uleb128 0xb
 4099 006c 3B       		.uleb128 0x3b
 4100 006d 0B       		.uleb128 0xb
 4101 006e 49       		.uleb128 0x49
 4102 006f 13       		.uleb128 0x13
 4103 0070 00       		.byte	0
 4104 0071 00       		.byte	0
 4105 0072 0B       		.uleb128 0xb
 4106 0073 13       		.uleb128 0x13
 4107 0074 01       		.byte	0x1
 4108 0075 0B       		.uleb128 0xb
 4109 0076 0B       		.uleb128 0xb
 4110 0077 3A       		.uleb128 0x3a
 4111 0078 0B       		.uleb128 0xb
 4112 0079 3B       		.uleb128 0x3b
 4113 007a 0B       		.uleb128 0xb
 4114 007b 01       		.uleb128 0x1
 4115 007c 13       		.uleb128 0x13
 4116 007d 00       		.byte	0
 4117 007e 00       		.byte	0
 4118 007f 0C       		.uleb128 0xc
 4119 0080 0D       		.uleb128 0xd
 4120 0081 00       		.byte	0
 4121 0082 03       		.uleb128 0x3
 4122 0083 0E       		.uleb128 0xe
 4123 0084 3A       		.uleb128 0x3a
 4124 0085 0B       		.uleb128 0xb
 4125 0086 3B       		.uleb128 0x3b
 4126 0087 0B       		.uleb128 0xb
 4127 0088 49       		.uleb128 0x49
 4128 0089 13       		.uleb128 0x13
 4129 008a 38       		.uleb128 0x38
 4130 008b 0B       		.uleb128 0xb
 4131 008c 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 127


 4132 008d 00       		.byte	0
 4133 008e 0D       		.uleb128 0xd
 4134 008f 01       		.uleb128 0x1
 4135 0090 01       		.byte	0x1
 4136 0091 49       		.uleb128 0x49
 4137 0092 13       		.uleb128 0x13
 4138 0093 01       		.uleb128 0x1
 4139 0094 13       		.uleb128 0x13
 4140 0095 00       		.byte	0
 4141 0096 00       		.byte	0
 4142 0097 0E       		.uleb128 0xe
 4143 0098 21       		.uleb128 0x21
 4144 0099 00       		.byte	0
 4145 009a 49       		.uleb128 0x49
 4146 009b 13       		.uleb128 0x13
 4147 009c 2F       		.uleb128 0x2f
 4148 009d 0B       		.uleb128 0xb
 4149 009e 00       		.byte	0
 4150 009f 00       		.byte	0
 4151 00a0 0F       		.uleb128 0xf
 4152 00a1 0D       		.uleb128 0xd
 4153 00a2 00       		.byte	0
 4154 00a3 03       		.uleb128 0x3
 4155 00a4 0E       		.uleb128 0xe
 4156 00a5 3A       		.uleb128 0x3a
 4157 00a6 0B       		.uleb128 0xb
 4158 00a7 3B       		.uleb128 0x3b
 4159 00a8 05       		.uleb128 0x5
 4160 00a9 49       		.uleb128 0x49
 4161 00aa 13       		.uleb128 0x13
 4162 00ab 38       		.uleb128 0x38
 4163 00ac 0B       		.uleb128 0xb
 4164 00ad 00       		.byte	0
 4165 00ae 00       		.byte	0
 4166 00af 10       		.uleb128 0x10
 4167 00b0 13       		.uleb128 0x13
 4168 00b1 01       		.byte	0x1
 4169 00b2 0B       		.uleb128 0xb
 4170 00b3 0B       		.uleb128 0xb
 4171 00b4 3A       		.uleb128 0x3a
 4172 00b5 0B       		.uleb128 0xb
 4173 00b6 3B       		.uleb128 0x3b
 4174 00b7 05       		.uleb128 0x5
 4175 00b8 01       		.uleb128 0x1
 4176 00b9 13       		.uleb128 0x13
 4177 00ba 00       		.byte	0
 4178 00bb 00       		.byte	0
 4179 00bc 11       		.uleb128 0x11
 4180 00bd 0D       		.uleb128 0xd
 4181 00be 00       		.byte	0
 4182 00bf 03       		.uleb128 0x3
 4183 00c0 08       		.uleb128 0x8
 4184 00c1 3A       		.uleb128 0x3a
 4185 00c2 0B       		.uleb128 0xb
 4186 00c3 3B       		.uleb128 0x3b
 4187 00c4 05       		.uleb128 0x5
 4188 00c5 49       		.uleb128 0x49
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 128


 4189 00c6 13       		.uleb128 0x13
 4190 00c7 38       		.uleb128 0x38
 4191 00c8 0B       		.uleb128 0xb
 4192 00c9 00       		.byte	0
 4193 00ca 00       		.byte	0
 4194 00cb 12       		.uleb128 0x12
 4195 00cc 26       		.uleb128 0x26
 4196 00cd 00       		.byte	0
 4197 00ce 00       		.byte	0
 4198 00cf 00       		.byte	0
 4199 00d0 13       		.uleb128 0x13
 4200 00d1 0F       		.uleb128 0xf
 4201 00d2 00       		.byte	0
 4202 00d3 0B       		.uleb128 0xb
 4203 00d4 0B       		.uleb128 0xb
 4204 00d5 00       		.byte	0
 4205 00d6 00       		.byte	0
 4206 00d7 14       		.uleb128 0x14
 4207 00d8 2E       		.uleb128 0x2e
 4208 00d9 01       		.byte	0x1
 4209 00da 03       		.uleb128 0x3
 4210 00db 0E       		.uleb128 0xe
 4211 00dc 3A       		.uleb128 0x3a
 4212 00dd 0B       		.uleb128 0xb
 4213 00de 3B       		.uleb128 0x3b
 4214 00df 05       		.uleb128 0x5
 4215 00e0 27       		.uleb128 0x27
 4216 00e1 19       		.uleb128 0x19
 4217 00e2 49       		.uleb128 0x49
 4218 00e3 13       		.uleb128 0x13
 4219 00e4 11       		.uleb128 0x11
 4220 00e5 01       		.uleb128 0x1
 4221 00e6 12       		.uleb128 0x12
 4222 00e7 06       		.uleb128 0x6
 4223 00e8 40       		.uleb128 0x40
 4224 00e9 18       		.uleb128 0x18
 4225 00ea 9642     		.uleb128 0x2116
 4226 00ec 19       		.uleb128 0x19
 4227 00ed 01       		.uleb128 0x1
 4228 00ee 13       		.uleb128 0x13
 4229 00ef 00       		.byte	0
 4230 00f0 00       		.byte	0
 4231 00f1 15       		.uleb128 0x15
 4232 00f2 05       		.uleb128 0x5
 4233 00f3 00       		.byte	0
 4234 00f4 03       		.uleb128 0x3
 4235 00f5 0E       		.uleb128 0xe
 4236 00f6 3A       		.uleb128 0x3a
 4237 00f7 0B       		.uleb128 0xb
 4238 00f8 3B       		.uleb128 0x3b
 4239 00f9 05       		.uleb128 0x5
 4240 00fa 49       		.uleb128 0x49
 4241 00fb 13       		.uleb128 0x13
 4242 00fc 02       		.uleb128 0x2
 4243 00fd 17       		.uleb128 0x17
 4244 00fe 00       		.byte	0
 4245 00ff 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 129


 4246 0100 16       		.uleb128 0x16
 4247 0101 34       		.uleb128 0x34
 4248 0102 00       		.byte	0
 4249 0103 03       		.uleb128 0x3
 4250 0104 0E       		.uleb128 0xe
 4251 0105 3A       		.uleb128 0x3a
 4252 0106 0B       		.uleb128 0xb
 4253 0107 3B       		.uleb128 0x3b
 4254 0108 05       		.uleb128 0x5
 4255 0109 49       		.uleb128 0x49
 4256 010a 13       		.uleb128 0x13
 4257 010b 02       		.uleb128 0x2
 4258 010c 17       		.uleb128 0x17
 4259 010d 00       		.byte	0
 4260 010e 00       		.byte	0
 4261 010f 17       		.uleb128 0x17
 4262 0110 2E       		.uleb128 0x2e
 4263 0111 01       		.byte	0x1
 4264 0112 03       		.uleb128 0x3
 4265 0113 0E       		.uleb128 0xe
 4266 0114 3A       		.uleb128 0x3a
 4267 0115 0B       		.uleb128 0xb
 4268 0116 3B       		.uleb128 0x3b
 4269 0117 05       		.uleb128 0x5
 4270 0118 27       		.uleb128 0x27
 4271 0119 19       		.uleb128 0x19
 4272 011a 11       		.uleb128 0x11
 4273 011b 01       		.uleb128 0x1
 4274 011c 12       		.uleb128 0x12
 4275 011d 06       		.uleb128 0x6
 4276 011e 40       		.uleb128 0x40
 4277 011f 18       		.uleb128 0x18
 4278 0120 9742     		.uleb128 0x2117
 4279 0122 19       		.uleb128 0x19
 4280 0123 01       		.uleb128 0x1
 4281 0124 13       		.uleb128 0x13
 4282 0125 00       		.byte	0
 4283 0126 00       		.byte	0
 4284 0127 18       		.uleb128 0x18
 4285 0128 898201   		.uleb128 0x4109
 4286 012b 00       		.byte	0
 4287 012c 11       		.uleb128 0x11
 4288 012d 01       		.uleb128 0x1
 4289 012e 31       		.uleb128 0x31
 4290 012f 13       		.uleb128 0x13
 4291 0130 00       		.byte	0
 4292 0131 00       		.byte	0
 4293 0132 19       		.uleb128 0x19
 4294 0133 898201   		.uleb128 0x4109
 4295 0136 01       		.byte	0x1
 4296 0137 11       		.uleb128 0x11
 4297 0138 01       		.uleb128 0x1
 4298 0139 31       		.uleb128 0x31
 4299 013a 13       		.uleb128 0x13
 4300 013b 01       		.uleb128 0x1
 4301 013c 13       		.uleb128 0x13
 4302 013d 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 130


 4303 013e 00       		.byte	0
 4304 013f 1A       		.uleb128 0x1a
 4305 0140 8A8201   		.uleb128 0x410a
 4306 0143 00       		.byte	0
 4307 0144 02       		.uleb128 0x2
 4308 0145 18       		.uleb128 0x18
 4309 0146 9142     		.uleb128 0x2111
 4310 0148 18       		.uleb128 0x18
 4311 0149 00       		.byte	0
 4312 014a 00       		.byte	0
 4313 014b 1B       		.uleb128 0x1b
 4314 014c 898201   		.uleb128 0x4109
 4315 014f 01       		.byte	0x1
 4316 0150 11       		.uleb128 0x11
 4317 0151 01       		.uleb128 0x1
 4318 0152 31       		.uleb128 0x31
 4319 0153 13       		.uleb128 0x13
 4320 0154 00       		.byte	0
 4321 0155 00       		.byte	0
 4322 0156 1C       		.uleb128 0x1c
 4323 0157 2E       		.uleb128 0x2e
 4324 0158 00       		.byte	0
 4325 0159 3F       		.uleb128 0x3f
 4326 015a 19       		.uleb128 0x19
 4327 015b 03       		.uleb128 0x3
 4328 015c 0E       		.uleb128 0xe
 4329 015d 3A       		.uleb128 0x3a
 4330 015e 0B       		.uleb128 0xb
 4331 015f 3B       		.uleb128 0x3b
 4332 0160 0B       		.uleb128 0xb
 4333 0161 27       		.uleb128 0x27
 4334 0162 19       		.uleb128 0x19
 4335 0163 49       		.uleb128 0x49
 4336 0164 13       		.uleb128 0x13
 4337 0165 11       		.uleb128 0x11
 4338 0166 01       		.uleb128 0x1
 4339 0167 12       		.uleb128 0x12
 4340 0168 06       		.uleb128 0x6
 4341 0169 40       		.uleb128 0x40
 4342 016a 18       		.uleb128 0x18
 4343 016b 9742     		.uleb128 0x2117
 4344 016d 19       		.uleb128 0x19
 4345 016e 00       		.byte	0
 4346 016f 00       		.byte	0
 4347 0170 1D       		.uleb128 0x1d
 4348 0171 2E       		.uleb128 0x2e
 4349 0172 01       		.byte	0x1
 4350 0173 3F       		.uleb128 0x3f
 4351 0174 19       		.uleb128 0x19
 4352 0175 03       		.uleb128 0x3
 4353 0176 0E       		.uleb128 0xe
 4354 0177 3A       		.uleb128 0x3a
 4355 0178 0B       		.uleb128 0xb
 4356 0179 3B       		.uleb128 0x3b
 4357 017a 05       		.uleb128 0x5
 4358 017b 27       		.uleb128 0x27
 4359 017c 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 131


 4360 017d 49       		.uleb128 0x49
 4361 017e 13       		.uleb128 0x13
 4362 017f 11       		.uleb128 0x11
 4363 0180 01       		.uleb128 0x1
 4364 0181 12       		.uleb128 0x12
 4365 0182 06       		.uleb128 0x6
 4366 0183 40       		.uleb128 0x40
 4367 0184 18       		.uleb128 0x18
 4368 0185 9742     		.uleb128 0x2117
 4369 0187 19       		.uleb128 0x19
 4370 0188 01       		.uleb128 0x1
 4371 0189 13       		.uleb128 0x13
 4372 018a 00       		.byte	0
 4373 018b 00       		.byte	0
 4374 018c 1E       		.uleb128 0x1e
 4375 018d 2E       		.uleb128 0x2e
 4376 018e 01       		.byte	0x1
 4377 018f 3F       		.uleb128 0x3f
 4378 0190 19       		.uleb128 0x19
 4379 0191 03       		.uleb128 0x3
 4380 0192 0E       		.uleb128 0xe
 4381 0193 3A       		.uleb128 0x3a
 4382 0194 0B       		.uleb128 0xb
 4383 0195 3B       		.uleb128 0x3b
 4384 0196 05       		.uleb128 0x5
 4385 0197 27       		.uleb128 0x27
 4386 0198 19       		.uleb128 0x19
 4387 0199 11       		.uleb128 0x11
 4388 019a 01       		.uleb128 0x1
 4389 019b 12       		.uleb128 0x12
 4390 019c 06       		.uleb128 0x6
 4391 019d 40       		.uleb128 0x40
 4392 019e 18       		.uleb128 0x18
 4393 019f 9742     		.uleb128 0x2117
 4394 01a1 19       		.uleb128 0x19
 4395 01a2 01       		.uleb128 0x1
 4396 01a3 13       		.uleb128 0x13
 4397 01a4 00       		.byte	0
 4398 01a5 00       		.byte	0
 4399 01a6 1F       		.uleb128 0x1f
 4400 01a7 34       		.uleb128 0x34
 4401 01a8 00       		.byte	0
 4402 01a9 03       		.uleb128 0x3
 4403 01aa 0E       		.uleb128 0xe
 4404 01ab 3A       		.uleb128 0x3a
 4405 01ac 0B       		.uleb128 0xb
 4406 01ad 3B       		.uleb128 0x3b
 4407 01ae 05       		.uleb128 0x5
 4408 01af 49       		.uleb128 0x49
 4409 01b0 13       		.uleb128 0x13
 4410 01b1 1C       		.uleb128 0x1c
 4411 01b2 0B       		.uleb128 0xb
 4412 01b3 00       		.byte	0
 4413 01b4 00       		.byte	0
 4414 01b5 20       		.uleb128 0x20
 4415 01b6 26       		.uleb128 0x26
 4416 01b7 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 132


 4417 01b8 49       		.uleb128 0x49
 4418 01b9 13       		.uleb128 0x13
 4419 01ba 00       		.byte	0
 4420 01bb 00       		.byte	0
 4421 01bc 21       		.uleb128 0x21
 4422 01bd 34       		.uleb128 0x34
 4423 01be 00       		.byte	0
 4424 01bf 03       		.uleb128 0x3
 4425 01c0 0E       		.uleb128 0xe
 4426 01c1 3A       		.uleb128 0x3a
 4427 01c2 0B       		.uleb128 0xb
 4428 01c3 3B       		.uleb128 0x3b
 4429 01c4 05       		.uleb128 0x5
 4430 01c5 49       		.uleb128 0x49
 4431 01c6 13       		.uleb128 0x13
 4432 01c7 02       		.uleb128 0x2
 4433 01c8 18       		.uleb128 0x18
 4434 01c9 00       		.byte	0
 4435 01ca 00       		.byte	0
 4436 01cb 22       		.uleb128 0x22
 4437 01cc 05       		.uleb128 0x5
 4438 01cd 00       		.byte	0
 4439 01ce 03       		.uleb128 0x3
 4440 01cf 0E       		.uleb128 0xe
 4441 01d0 3A       		.uleb128 0x3a
 4442 01d1 0B       		.uleb128 0xb
 4443 01d2 3B       		.uleb128 0x3b
 4444 01d3 05       		.uleb128 0x5
 4445 01d4 49       		.uleb128 0x49
 4446 01d5 13       		.uleb128 0x13
 4447 01d6 02       		.uleb128 0x2
 4448 01d7 18       		.uleb128 0x18
 4449 01d8 00       		.byte	0
 4450 01d9 00       		.byte	0
 4451 01da 23       		.uleb128 0x23
 4452 01db 34       		.uleb128 0x34
 4453 01dc 00       		.byte	0
 4454 01dd 03       		.uleb128 0x3
 4455 01de 0E       		.uleb128 0xe
 4456 01df 3A       		.uleb128 0x3a
 4457 01e0 0B       		.uleb128 0xb
 4458 01e1 3B       		.uleb128 0x3b
 4459 01e2 05       		.uleb128 0x5
 4460 01e3 49       		.uleb128 0x49
 4461 01e4 13       		.uleb128 0x13
 4462 01e5 3F       		.uleb128 0x3f
 4463 01e6 19       		.uleb128 0x19
 4464 01e7 3C       		.uleb128 0x3c
 4465 01e8 19       		.uleb128 0x19
 4466 01e9 00       		.byte	0
 4467 01ea 00       		.byte	0
 4468 01eb 24       		.uleb128 0x24
 4469 01ec 34       		.uleb128 0x34
 4470 01ed 00       		.byte	0
 4471 01ee 03       		.uleb128 0x3
 4472 01ef 0E       		.uleb128 0xe
 4473 01f0 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 133


 4474 01f1 0B       		.uleb128 0xb
 4475 01f2 3B       		.uleb128 0x3b
 4476 01f3 0B       		.uleb128 0xb
 4477 01f4 49       		.uleb128 0x49
 4478 01f5 13       		.uleb128 0x13
 4479 01f6 3F       		.uleb128 0x3f
 4480 01f7 19       		.uleb128 0x19
 4481 01f8 02       		.uleb128 0x2
 4482 01f9 18       		.uleb128 0x18
 4483 01fa 00       		.byte	0
 4484 01fb 00       		.byte	0
 4485 01fc 25       		.uleb128 0x25
 4486 01fd 2E       		.uleb128 0x2e
 4487 01fe 00       		.byte	0
 4488 01ff 3F       		.uleb128 0x3f
 4489 0200 19       		.uleb128 0x19
 4490 0201 3C       		.uleb128 0x3c
 4491 0202 19       		.uleb128 0x19
 4492 0203 6E       		.uleb128 0x6e
 4493 0204 0E       		.uleb128 0xe
 4494 0205 03       		.uleb128 0x3
 4495 0206 0E       		.uleb128 0xe
 4496 0207 3A       		.uleb128 0x3a
 4497 0208 0B       		.uleb128 0xb
 4498 0209 3B       		.uleb128 0x3b
 4499 020a 05       		.uleb128 0x5
 4500 020b 00       		.byte	0
 4501 020c 00       		.byte	0
 4502 020d 26       		.uleb128 0x26
 4503 020e 2E       		.uleb128 0x2e
 4504 020f 00       		.byte	0
 4505 0210 3F       		.uleb128 0x3f
 4506 0211 19       		.uleb128 0x19
 4507 0212 3C       		.uleb128 0x3c
 4508 0213 19       		.uleb128 0x19
 4509 0214 6E       		.uleb128 0x6e
 4510 0215 0E       		.uleb128 0xe
 4511 0216 03       		.uleb128 0x3
 4512 0217 0E       		.uleb128 0xe
 4513 0218 3A       		.uleb128 0x3a
 4514 0219 0B       		.uleb128 0xb
 4515 021a 3B       		.uleb128 0x3b
 4516 021b 0B       		.uleb128 0xb
 4517 021c 00       		.byte	0
 4518 021d 00       		.byte	0
 4519 021e 00       		.byte	0
 4520              		.section	.debug_loc,"",%progbits
 4521              	.Ldebug_loc0:
 4522              	.LLST0:
 4523 0000 00000000 		.4byte	.LVL0
 4524 0004 14000000 		.4byte	.LVL3
 4525 0008 0100     		.2byte	0x1
 4526 000a 50       		.byte	0x50
 4527 000b 14000000 		.4byte	.LVL3
 4528 000f 76000000 		.4byte	.LVL9
 4529 0013 0100     		.2byte	0x1
 4530 0015 54       		.byte	0x54
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 134


 4531 0016 76000000 		.4byte	.LVL9
 4532 001a 84000000 		.4byte	.LFE21
 4533 001e 0400     		.2byte	0x4
 4534 0020 F3       		.byte	0xf3
 4535 0021 01       		.uleb128 0x1
 4536 0022 50       		.byte	0x50
 4537 0023 9F       		.byte	0x9f
 4538 0024 00000000 		.4byte	0
 4539 0028 00000000 		.4byte	0
 4540              	.LLST1:
 4541 002c 00000000 		.4byte	.LVL0
 4542 0030 12000000 		.4byte	.LVL2
 4543 0034 0100     		.2byte	0x1
 4544 0036 51       		.byte	0x51
 4545 0037 12000000 		.4byte	.LVL2
 4546 003b 76000000 		.4byte	.LVL10
 4547 003f 0100     		.2byte	0x1
 4548 0041 55       		.byte	0x55
 4549 0042 76000000 		.4byte	.LVL10
 4550 0046 84000000 		.4byte	.LFE21
 4551 004a 0400     		.2byte	0x4
 4552 004c F3       		.byte	0xf3
 4553 004d 01       		.uleb128 0x1
 4554 004e 51       		.byte	0x51
 4555 004f 9F       		.byte	0x9f
 4556 0050 00000000 		.4byte	0
 4557 0054 00000000 		.4byte	0
 4558              	.LLST2:
 4559 0058 06000000 		.4byte	.LVL1
 4560 005c 76000000 		.4byte	.LVL8
 4561 0060 0200     		.2byte	0x2
 4562 0062 30       		.byte	0x30
 4563 0063 9F       		.byte	0x9f
 4564 0064 76000000 		.4byte	.LVL8
 4565 0068 84000000 		.4byte	.LFE21
 4566 006c 0100     		.2byte	0x1
 4567 006e 50       		.byte	0x50
 4568 006f 00000000 		.4byte	0
 4569 0073 00000000 		.4byte	0
 4570              	.LLST3:
 4571 0077 00000000 		.4byte	.LVL11
 4572 007b 20000000 		.4byte	.LVL15
 4573 007f 0100     		.2byte	0x1
 4574 0081 50       		.byte	0x50
 4575 0082 20000000 		.4byte	.LVL15
 4576 0086 23000000 		.4byte	.LVL16-1
 4577 008a 0100     		.2byte	0x1
 4578 008c 51       		.byte	0x51
 4579 008d 23000000 		.4byte	.LVL16-1
 4580 0091 38000000 		.4byte	.LVL21
 4581 0095 0400     		.2byte	0x4
 4582 0097 F3       		.byte	0xf3
 4583 0098 01       		.uleb128 0x1
 4584 0099 50       		.byte	0x50
 4585 009a 9F       		.byte	0x9f
 4586 009b 38000000 		.4byte	.LVL21
 4587 009f 3E000000 		.4byte	.LVL24
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 135


 4588 00a3 0100     		.2byte	0x1
 4589 00a5 50       		.byte	0x50
 4590 00a6 3E000000 		.4byte	.LVL24
 4591 00aa 42000000 		.4byte	.LFE22
 4592 00ae 0400     		.2byte	0x4
 4593 00b0 F3       		.byte	0xf3
 4594 00b1 01       		.uleb128 0x1
 4595 00b2 50       		.byte	0x50
 4596 00b3 9F       		.byte	0x9f
 4597 00b4 00000000 		.4byte	0
 4598 00b8 00000000 		.4byte	0
 4599              	.LLST4:
 4600 00bc 00000000 		.4byte	.LVL11
 4601 00c0 1E000000 		.4byte	.LVL14
 4602 00c4 0100     		.2byte	0x1
 4603 00c6 51       		.byte	0x51
 4604 00c7 1E000000 		.4byte	.LVL14
 4605 00cb 38000000 		.4byte	.LVL21
 4606 00cf 0400     		.2byte	0x4
 4607 00d1 F3       		.byte	0xf3
 4608 00d2 01       		.uleb128 0x1
 4609 00d3 51       		.byte	0x51
 4610 00d4 9F       		.byte	0x9f
 4611 00d5 38000000 		.4byte	.LVL21
 4612 00d9 3E000000 		.4byte	.LVL24
 4613 00dd 0100     		.2byte	0x1
 4614 00df 51       		.byte	0x51
 4615 00e0 3E000000 		.4byte	.LVL24
 4616 00e4 42000000 		.4byte	.LFE22
 4617 00e8 0400     		.2byte	0x4
 4618 00ea F3       		.byte	0xf3
 4619 00eb 01       		.uleb128 0x1
 4620 00ec 51       		.byte	0x51
 4621 00ed 9F       		.byte	0x9f
 4622 00ee 00000000 		.4byte	0
 4623 00f2 00000000 		.4byte	0
 4624              	.LLST5:
 4625 00f6 24000000 		.4byte	.LVL16
 4626 00fa 28000000 		.4byte	.LVL17
 4627 00fe 0200     		.2byte	0x2
 4628 0100 30       		.byte	0x30
 4629 0101 9F       		.byte	0x9f
 4630 0102 28000000 		.4byte	.LVL17
 4631 0106 38000000 		.4byte	.LVL21
 4632 010a 0100     		.2byte	0x1
 4633 010c 53       		.byte	0x53
 4634 010d 3E000000 		.4byte	.LVL24
 4635 0111 42000000 		.4byte	.LFE22
 4636 0115 0100     		.2byte	0x1
 4637 0117 53       		.byte	0x53
 4638 0118 00000000 		.4byte	0
 4639 011c 00000000 		.4byte	0
 4640              	.LLST6:
 4641 0120 10000000 		.4byte	.LVL12
 4642 0124 1C000000 		.4byte	.LVL13
 4643 0128 0100     		.2byte	0x1
 4644 012a 53       		.byte	0x53
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 136


 4645 012b 38000000 		.4byte	.LVL21
 4646 012f 3A000000 		.4byte	.LVL22
 4647 0133 0100     		.2byte	0x1
 4648 0135 53       		.byte	0x53
 4649 0136 3C000000 		.4byte	.LVL23
 4650 013a 3E000000 		.4byte	.LVL24
 4651 013e 0100     		.2byte	0x1
 4652 0140 53       		.byte	0x53
 4653 0141 00000000 		.4byte	0
 4654 0145 00000000 		.4byte	0
 4655              	.LLST7:
 4656 0149 24000000 		.4byte	.LVL16
 4657 014d 38000000 		.4byte	.LVL21
 4658 0151 0100     		.2byte	0x1
 4659 0153 50       		.byte	0x50
 4660 0154 00000000 		.4byte	0
 4661 0158 00000000 		.4byte	0
 4662              	.LLST8:
 4663 015c 06000000 		.4byte	.LVL25
 4664 0160 19000000 		.4byte	.LVL29-1
 4665 0164 0100     		.2byte	0x1
 4666 0166 53       		.byte	0x53
 4667 0167 00000000 		.4byte	0
 4668 016b 00000000 		.4byte	0
 4669              	.LLST9:
 4670 016f 06000000 		.4byte	.LVL30
 4671 0173 0A000000 		.4byte	.LVL31
 4672 0177 0100     		.2byte	0x1
 4673 0179 51       		.byte	0x51
 4674 017a 0A000000 		.4byte	.LVL31
 4675 017e 0E000000 		.4byte	.LVL32
 4676 0182 0100     		.2byte	0x1
 4677 0184 52       		.byte	0x52
 4678 0185 0E000000 		.4byte	.LVL32
 4679 0189 12000000 		.4byte	.LVL33
 4680 018d 0100     		.2byte	0x1
 4681 018f 51       		.byte	0x51
 4682 0190 12000000 		.4byte	.LVL33
 4683 0194 17000000 		.4byte	.LVL34-1
 4684 0198 0100     		.2byte	0x1
 4685 019a 52       		.byte	0x52
 4686 019b 00000000 		.4byte	0
 4687 019f 00000000 		.4byte	0
 4688              	.LLST10:
 4689 01a3 00000000 		.4byte	.LVL35
 4690 01a7 09000000 		.4byte	.LVL37-1
 4691 01ab 0100     		.2byte	0x1
 4692 01ad 50       		.byte	0x50
 4693 01ae 09000000 		.4byte	.LVL37-1
 4694 01b2 26000000 		.4byte	.LFE20
 4695 01b6 0400     		.2byte	0x4
 4696 01b8 F3       		.byte	0xf3
 4697 01b9 01       		.uleb128 0x1
 4698 01ba 50       		.byte	0x50
 4699 01bb 9F       		.byte	0x9f
 4700 01bc 00000000 		.4byte	0
 4701 01c0 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 137


 4702              	.LLST11:
 4703 01c4 00000000 		.4byte	.LVL35
 4704 01c8 09000000 		.4byte	.LVL37-1
 4705 01cc 0100     		.2byte	0x1
 4706 01ce 51       		.byte	0x51
 4707 01cf 09000000 		.4byte	.LVL37-1
 4708 01d3 24000000 		.4byte	.LVL44
 4709 01d7 0100     		.2byte	0x1
 4710 01d9 55       		.byte	0x55
 4711 01da 24000000 		.4byte	.LVL44
 4712 01de 26000000 		.4byte	.LFE20
 4713 01e2 0400     		.2byte	0x4
 4714 01e4 F3       		.byte	0xf3
 4715 01e5 01       		.uleb128 0x1
 4716 01e6 51       		.byte	0x51
 4717 01e7 9F       		.byte	0x9f
 4718 01e8 00000000 		.4byte	0
 4719 01ec 00000000 		.4byte	0
 4720              	.LLST12:
 4721 01f0 14000000 		.4byte	.LVL40
 4722 01f4 18000000 		.4byte	.LVL41
 4723 01f8 0100     		.2byte	0x1
 4724 01fa 50       		.byte	0x50
 4725 01fb 00000000 		.4byte	0
 4726 01ff 00000000 		.4byte	0
 4727              	.LLST13:
 4728 0203 1C000000 		.4byte	.LVL42
 4729 0207 1E000000 		.4byte	.LVL43
 4730 020b 0100     		.2byte	0x1
 4731 020d 50       		.byte	0x50
 4732 020e 00000000 		.4byte	0
 4733 0212 00000000 		.4byte	0
 4734              	.LLST14:
 4735 0216 06000000 		.4byte	.LVL36
 4736 021a 14000000 		.4byte	.LVL40
 4737 021e 0100     		.2byte	0x1
 4738 0220 54       		.byte	0x54
 4739 0221 00000000 		.4byte	0
 4740 0225 00000000 		.4byte	0
 4741              	.LLST15:
 4742 0229 0C000000 		.4byte	.LVL38
 4743 022d 11000000 		.4byte	.LVL39-1
 4744 0231 0100     		.2byte	0x1
 4745 0233 50       		.byte	0x50
 4746 0234 11000000 		.4byte	.LVL39-1
 4747 0238 24000000 		.4byte	.LVL45
 4748 023c 0100     		.2byte	0x1
 4749 023e 56       		.byte	0x56
 4750 023f 00000000 		.4byte	0
 4751 0243 00000000 		.4byte	0
 4752              	.LLST16:
 4753 0247 00000000 		.4byte	.LVL46
 4754 024b 4B000000 		.4byte	.LVL48-1
 4755 024f 0100     		.2byte	0x1
 4756 0251 50       		.byte	0x50
 4757 0252 4B000000 		.4byte	.LVL48-1
 4758 0256 4E000000 		.4byte	.LVL49
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 138


 4759 025a 0400     		.2byte	0x4
 4760 025c F3       		.byte	0xf3
 4761 025d 01       		.uleb128 0x1
 4762 025e 50       		.byte	0x50
 4763 025f 9F       		.byte	0x9f
 4764 0260 4E000000 		.4byte	.LVL49
 4765 0264 51000000 		.4byte	.LVL50-1
 4766 0268 0100     		.2byte	0x1
 4767 026a 50       		.byte	0x50
 4768 026b 51000000 		.4byte	.LVL50-1
 4769 026f 54000000 		.4byte	.LVL51
 4770 0273 0400     		.2byte	0x4
 4771 0275 F3       		.byte	0xf3
 4772 0276 01       		.uleb128 0x1
 4773 0277 50       		.byte	0x50
 4774 0278 9F       		.byte	0x9f
 4775 0279 54000000 		.4byte	.LVL51
 4776 027d 58000000 		.4byte	.LVL53
 4777 0281 0100     		.2byte	0x1
 4778 0283 50       		.byte	0x50
 4779 0284 58000000 		.4byte	.LVL53
 4780 0288 64000000 		.4byte	.LFE2
 4781 028c 0400     		.2byte	0x4
 4782 028e F3       		.byte	0xf3
 4783 028f 01       		.uleb128 0x1
 4784 0290 50       		.byte	0x50
 4785 0291 9F       		.byte	0x9f
 4786 0292 00000000 		.4byte	0
 4787 0296 00000000 		.4byte	0
 4788              	.LLST17:
 4789 029a 30000000 		.4byte	.LVL47
 4790 029e 56000000 		.4byte	.LVL52
 4791 02a2 0100     		.2byte	0x1
 4792 02a4 54       		.byte	0x54
 4793 02a5 58000000 		.4byte	.LVL53
 4794 02a9 5A000000 		.4byte	.LVL54
 4795 02ad 0100     		.2byte	0x1
 4796 02af 54       		.byte	0x54
 4797 02b0 5A000000 		.4byte	.LVL54
 4798 02b4 64000000 		.4byte	.LFE2
 4799 02b8 0100     		.2byte	0x1
 4800 02ba 50       		.byte	0x50
 4801 02bb 00000000 		.4byte	0
 4802 02bf 00000000 		.4byte	0
 4803              	.LLST18:
 4804 02c3 02000000 		.4byte	.LVL55
 4805 02c7 2E000000 		.4byte	.LVL58
 4806 02cb 0200     		.2byte	0x2
 4807 02cd 30       		.byte	0x30
 4808 02ce 9F       		.byte	0x9f
 4809 02cf 2E000000 		.4byte	.LVL58
 4810 02d3 38000000 		.4byte	.LFE3
 4811 02d7 0100     		.2byte	0x1
 4812 02d9 50       		.byte	0x50
 4813 02da 00000000 		.4byte	0
 4814 02de 00000000 		.4byte	0
 4815              	.LLST19:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 139


 4816 02e2 02000000 		.4byte	.LVL59
 4817 02e6 12000000 		.4byte	.LVL60
 4818 02ea 0300     		.2byte	0x3
 4819 02ec 09       		.byte	0x9
 4820 02ed FF       		.byte	0xff
 4821 02ee 9F       		.byte	0x9f
 4822 02ef 12000000 		.4byte	.LVL60
 4823 02f3 14000000 		.4byte	.LVL61
 4824 02f7 0100     		.2byte	0x1
 4825 02f9 50       		.byte	0x50
 4826 02fa 18000000 		.4byte	.LVL62
 4827 02fe 31000000 		.4byte	.LVL63-1
 4828 0302 0100     		.2byte	0x1
 4829 0304 50       		.byte	0x50
 4830 0305 32000000 		.4byte	.LVL63
 4831 0309 3C000000 		.4byte	.LVL65
 4832 030d 0100     		.2byte	0x1
 4833 030f 50       		.byte	0x50
 4834 0310 3C000000 		.4byte	.LVL65
 4835 0314 3E000000 		.4byte	.LVL66
 4836 0318 0300     		.2byte	0x3
 4837 031a 09       		.byte	0x9
 4838 031b FF       		.byte	0xff
 4839 031c 9F       		.byte	0x9f
 4840 031d 3E000000 		.4byte	.LVL66
 4841 0321 48000000 		.4byte	.LFE4
 4842 0325 0100     		.2byte	0x1
 4843 0327 50       		.byte	0x50
 4844 0328 00000000 		.4byte	0
 4845 032c 00000000 		.4byte	0
 4846              	.LLST20:
 4847 0330 12000000 		.4byte	.LVL60
 4848 0334 3C000000 		.4byte	.LVL65
 4849 0338 0100     		.2byte	0x1
 4850 033a 54       		.byte	0x54
 4851 033b 00000000 		.4byte	0
 4852 033f 00000000 		.4byte	0
 4853              	.LLST21:
 4854 0343 00000000 		.4byte	.LVL67
 4855 0347 08000000 		.4byte	.LVL68
 4856 034b 0100     		.2byte	0x1
 4857 034d 50       		.byte	0x50
 4858 034e 08000000 		.4byte	.LVL68
 4859 0352 EC000000 		.4byte	.LFE6
 4860 0356 0400     		.2byte	0x4
 4861 0358 F3       		.byte	0xf3
 4862 0359 01       		.uleb128 0x1
 4863 035a 50       		.byte	0x50
 4864 035b 9F       		.byte	0x9f
 4865 035c 00000000 		.4byte	0
 4866 0360 00000000 		.4byte	0
 4867              	.LLST22:
 4868 0364 00000000 		.4byte	.LVL67
 4869 0368 12000000 		.4byte	.LVL70
 4870 036c 0100     		.2byte	0x1
 4871 036e 51       		.byte	0x51
 4872 036f 12000000 		.4byte	.LVL70
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 140


 4873 0373 EC000000 		.4byte	.LFE6
 4874 0377 0400     		.2byte	0x4
 4875 0379 F3       		.byte	0xf3
 4876 037a 01       		.uleb128 0x1
 4877 037b 51       		.byte	0x51
 4878 037c 9F       		.byte	0x9f
 4879 037d 00000000 		.4byte	0
 4880 0381 00000000 		.4byte	0
 4881              	.LLST23:
 4882 0385 00000000 		.4byte	.LVL67
 4883 0389 0C000000 		.4byte	.LVL69
 4884 038d 0100     		.2byte	0x1
 4885 038f 52       		.byte	0x52
 4886 0390 0C000000 		.4byte	.LVL69
 4887 0394 E2000000 		.4byte	.LVL88
 4888 0398 0100     		.2byte	0x1
 4889 039a 56       		.byte	0x56
 4890 039b E2000000 		.4byte	.LVL88
 4891 039f EC000000 		.4byte	.LFE6
 4892 03a3 0400     		.2byte	0x4
 4893 03a5 F3       		.byte	0xf3
 4894 03a6 01       		.uleb128 0x1
 4895 03a7 52       		.byte	0x52
 4896 03a8 9F       		.byte	0x9f
 4897 03a9 00000000 		.4byte	0
 4898 03ad 00000000 		.4byte	0
 4899              	.LLST24:
 4900 03b1 16000000 		.4byte	.LVL71
 4901 03b5 1A000000 		.4byte	.LVL72
 4902 03b9 0200     		.2byte	0x2
 4903 03bb 30       		.byte	0x30
 4904 03bc 9F       		.byte	0x9f
 4905 03bd 1A000000 		.4byte	.LVL72
 4906 03c1 E2000000 		.4byte	.LVL87
 4907 03c5 0100     		.2byte	0x1
 4908 03c7 55       		.byte	0x55
 4909 03c8 00000000 		.4byte	0
 4910 03cc 00000000 		.4byte	0
 4911              	.LLST25:
 4912 03d0 1E000000 		.4byte	.LVL73
 4913 03d4 3D000000 		.4byte	.LVL74-1
 4914 03d8 0100     		.2byte	0x1
 4915 03da 50       		.byte	0x50
 4916 03db 4E000000 		.4byte	.LVL75
 4917 03df 6D000000 		.4byte	.LVL76-1
 4918 03e3 0100     		.2byte	0x1
 4919 03e5 50       		.byte	0x50
 4920 03e6 74000000 		.4byte	.LVL77
 4921 03ea 85000000 		.4byte	.LVL78-1
 4922 03ee 0100     		.2byte	0x1
 4923 03f0 50       		.byte	0x50
 4924 03f1 94000000 		.4byte	.LVL80
 4925 03f5 B3000000 		.4byte	.LVL81-1
 4926 03f9 0100     		.2byte	0x1
 4927 03fb 50       		.byte	0x50
 4928 03fc BA000000 		.4byte	.LVL82
 4929 0400 D9000000 		.4byte	.LVL83-1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 141


 4930 0404 0100     		.2byte	0x1
 4931 0406 50       		.byte	0x50
 4932 0407 00000000 		.4byte	0
 4933 040b 00000000 		.4byte	0
 4934              	.LLST26:
 4935 040f 16000000 		.4byte	.LVL71
 4936 0413 E2000000 		.4byte	.LVL86
 4937 0417 0100     		.2byte	0x1
 4938 0419 54       		.byte	0x54
 4939 041a 00000000 		.4byte	0
 4940 041e 00000000 		.4byte	0
 4941              	.LLST27:
 4942 0422 00000000 		.4byte	.LVL89
 4943 0426 13000000 		.4byte	.LVL90-1
 4944 042a 0100     		.2byte	0x1
 4945 042c 50       		.byte	0x50
 4946 042d 13000000 		.4byte	.LVL90-1
 4947 0431 16000000 		.4byte	.LVL91
 4948 0435 0400     		.2byte	0x4
 4949 0437 F3       		.byte	0xf3
 4950 0438 01       		.uleb128 0x1
 4951 0439 50       		.byte	0x50
 4952 043a 9F       		.byte	0x9f
 4953 043b 16000000 		.4byte	.LVL91
 4954 043f 1D000000 		.4byte	.LVL92-1
 4955 0443 0100     		.2byte	0x1
 4956 0445 50       		.byte	0x50
 4957 0446 1D000000 		.4byte	.LVL92-1
 4958 044a 54000000 		.4byte	.LFE9
 4959 044e 0400     		.2byte	0x4
 4960 0450 F3       		.byte	0xf3
 4961 0451 01       		.uleb128 0x1
 4962 0452 50       		.byte	0x50
 4963 0453 9F       		.byte	0x9f
 4964 0454 00000000 		.4byte	0
 4965 0458 00000000 		.4byte	0
 4966              	.LLST28:
 4967 045c 08000000 		.4byte	.LVL96
 4968 0460 40000000 		.4byte	.LFE10
 4969 0464 0100     		.2byte	0x1
 4970 0466 53       		.byte	0x53
 4971 0467 00000000 		.4byte	0
 4972 046b 00000000 		.4byte	0
 4973              	.LLST29:
 4974 046f 02000000 		.4byte	.LVL95
 4975 0473 08000000 		.4byte	.LVL96
 4976 0477 0200     		.2byte	0x2
 4977 0479 30       		.byte	0x30
 4978 047a 9F       		.byte	0x9f
 4979 047b 08000000 		.4byte	.LVL96
 4980 047f 40000000 		.4byte	.LFE10
 4981 0483 0100     		.2byte	0x1
 4982 0485 50       		.byte	0x50
 4983 0486 00000000 		.4byte	0
 4984 048a 00000000 		.4byte	0
 4985              	.LLST30:
 4986 048e 0C000000 		.4byte	.LVL97
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 142


 4987 0492 1E000000 		.4byte	.LVL100
 4988 0496 0100     		.2byte	0x1
 4989 0498 52       		.byte	0x52
 4990 0499 20000000 		.4byte	.LVL101
 4991 049d 26000000 		.4byte	.LVL102
 4992 04a1 0100     		.2byte	0x1
 4993 04a3 51       		.byte	0x51
 4994 04a4 26000000 		.4byte	.LVL102
 4995 04a8 36000000 		.4byte	.LVL106
 4996 04ac 0100     		.2byte	0x1
 4997 04ae 52       		.byte	0x52
 4998 04af 00000000 		.4byte	0
 4999 04b3 00000000 		.4byte	0
 5000              	.LLST31:
 5001 04b7 16000000 		.4byte	.LVL108
 5002 04bb 29000000 		.4byte	.LVL109-1
 5003 04bf 0100     		.2byte	0x1
 5004 04c1 50       		.byte	0x50
 5005 04c2 29000000 		.4byte	.LVL109-1
 5006 04c6 2C000000 		.4byte	.LVL110
 5007 04ca 0100     		.2byte	0x1
 5008 04cc 54       		.byte	0x54
 5009 04cd 2C000000 		.4byte	.LVL110
 5010 04d1 54000000 		.4byte	.LVL111
 5011 04d5 0100     		.2byte	0x1
 5012 04d7 50       		.byte	0x50
 5013 04d8 54000000 		.4byte	.LVL111
 5014 04dc 58000000 		.4byte	.LVL112
 5015 04e0 0200     		.2byte	0x2
 5016 04e2 30       		.byte	0x30
 5017 04e3 9F       		.byte	0x9f
 5018 04e4 58000000 		.4byte	.LVL112
 5019 04e8 6A000000 		.4byte	.LVL113
 5020 04ec 0100     		.2byte	0x1
 5021 04ee 50       		.byte	0x50
 5022 04ef 6A000000 		.4byte	.LVL113
 5023 04f3 6E000000 		.4byte	.LVL114
 5024 04f7 0100     		.2byte	0x1
 5025 04f9 54       		.byte	0x54
 5026 04fa 00000000 		.4byte	0
 5027 04fe 00000000 		.4byte	0
 5028              	.LLST32:
 5029 0502 00000000 		.4byte	.LVL115
 5030 0506 05000000 		.4byte	.LVL116-1
 5031 050a 0100     		.2byte	0x1
 5032 050c 50       		.byte	0x50
 5033 050d 05000000 		.4byte	.LVL116-1
 5034 0511 08000000 		.4byte	.LFE12
 5035 0515 0400     		.2byte	0x4
 5036 0517 F3       		.byte	0xf3
 5037 0518 01       		.uleb128 0x1
 5038 0519 50       		.byte	0x50
 5039 051a 9F       		.byte	0x9f
 5040 051b 00000000 		.4byte	0
 5041 051f 00000000 		.4byte	0
 5042              	.LLST33:
 5043 0523 00000000 		.4byte	.LVL117
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 143


 5044 0527 08000000 		.4byte	.LVL118
 5045 052b 0100     		.2byte	0x1
 5046 052d 50       		.byte	0x50
 5047 052e 08000000 		.4byte	.LVL118
 5048 0532 0A000000 		.4byte	.LVL119
 5049 0536 0300     		.2byte	0x3
 5050 0538 70       		.byte	0x70
 5051 0539 01       		.sleb128 1
 5052 053a 9F       		.byte	0x9f
 5053 053b 0A000000 		.4byte	.LVL119
 5054 053f 30000000 		.4byte	.LFE13
 5055 0543 0400     		.2byte	0x4
 5056 0545 F3       		.byte	0xf3
 5057 0546 01       		.uleb128 0x1
 5058 0547 50       		.byte	0x50
 5059 0548 9F       		.byte	0x9f
 5060 0549 00000000 		.4byte	0
 5061 054d 00000000 		.4byte	0
 5062              	.LLST34:
 5063 0551 00000000 		.4byte	.LVL120
 5064 0555 0A000000 		.4byte	.LVL124
 5065 0559 0100     		.2byte	0x1
 5066 055b 50       		.byte	0x50
 5067 055c 0A000000 		.4byte	.LVL124
 5068 0560 0C000000 		.4byte	.LVL125
 5069 0564 0300     		.2byte	0x3
 5070 0566 70       		.byte	0x70
 5071 0567 01       		.sleb128 1
 5072 0568 9F       		.byte	0x9f
 5073 0569 0C000000 		.4byte	.LVL125
 5074 056d 14000000 		.4byte	.LFE14
 5075 0571 0400     		.2byte	0x4
 5076 0573 F3       		.byte	0xf3
 5077 0574 01       		.uleb128 0x1
 5078 0575 50       		.byte	0x50
 5079 0576 9F       		.byte	0x9f
 5080 0577 00000000 		.4byte	0
 5081 057b 00000000 		.4byte	0
 5082              	.LLST35:
 5083 057f 04000000 		.4byte	.LVL121
 5084 0583 06000000 		.4byte	.LVL122
 5085 0587 0100     		.2byte	0x1
 5086 0589 53       		.byte	0x53
 5087 058a 08000000 		.4byte	.LVL123
 5088 058e 0C000000 		.4byte	.LVL125
 5089 0592 0100     		.2byte	0x1
 5090 0594 53       		.byte	0x53
 5091 0595 0C000000 		.4byte	.LVL125
 5092 0599 14000000 		.4byte	.LFE14
 5093 059d 0100     		.2byte	0x1
 5094 059f 50       		.byte	0x50
 5095 05a0 00000000 		.4byte	0
 5096 05a4 00000000 		.4byte	0
 5097              	.LLST36:
 5098 05a8 00000000 		.4byte	.LVL126
 5099 05ac 06000000 		.4byte	.LVL127
 5100 05b0 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 144


 5101 05b2 50       		.byte	0x50
 5102 05b3 06000000 		.4byte	.LVL127
 5103 05b7 10000000 		.4byte	.LVL130
 5104 05bb 0100     		.2byte	0x1
 5105 05bd 54       		.byte	0x54
 5106 05be 10000000 		.4byte	.LVL130
 5107 05c2 12000000 		.4byte	.LFE15
 5108 05c6 0400     		.2byte	0x4
 5109 05c8 F3       		.byte	0xf3
 5110 05c9 01       		.uleb128 0x1
 5111 05ca 50       		.byte	0x50
 5112 05cb 9F       		.byte	0x9f
 5113 05cc 00000000 		.4byte	0
 5114 05d0 00000000 		.4byte	0
 5115              	.LLST37:
 5116 05d4 00000000 		.4byte	.LVL126
 5117 05d8 09000000 		.4byte	.LVL128-1
 5118 05dc 0100     		.2byte	0x1
 5119 05de 51       		.byte	0x51
 5120 05df 09000000 		.4byte	.LVL128-1
 5121 05e3 12000000 		.4byte	.LFE15
 5122 05e7 0400     		.2byte	0x4
 5123 05e9 F3       		.byte	0xf3
 5124 05ea 01       		.uleb128 0x1
 5125 05eb 51       		.byte	0x51
 5126 05ec 9F       		.byte	0x9f
 5127 05ed 00000000 		.4byte	0
 5128 05f1 00000000 		.4byte	0
 5129              	.LLST38:
 5130 05f5 00000000 		.4byte	.LVL131
 5131 05f9 26000000 		.4byte	.LVL134
 5132 05fd 0100     		.2byte	0x1
 5133 05ff 50       		.byte	0x50
 5134 0600 26000000 		.4byte	.LVL134
 5135 0604 3A000000 		.4byte	.LVL138
 5136 0608 0100     		.2byte	0x1
 5137 060a 54       		.byte	0x54
 5138 060b 3A000000 		.4byte	.LVL138
 5139 060f 40000000 		.4byte	.LFE16
 5140 0613 0400     		.2byte	0x4
 5141 0615 F3       		.byte	0xf3
 5142 0616 01       		.uleb128 0x1
 5143 0617 50       		.byte	0x50
 5144 0618 9F       		.byte	0x9f
 5145 0619 00000000 		.4byte	0
 5146 061d 00000000 		.4byte	0
 5147              	.LLST39:
 5148 0621 04000000 		.4byte	.LVL132
 5149 0625 0E000000 		.4byte	.LVL133
 5150 0629 0200     		.2byte	0x2
 5151 062b 30       		.byte	0x30
 5152 062c 9F       		.byte	0x9f
 5153 062d 0E000000 		.4byte	.LVL133
 5154 0631 3A000000 		.4byte	.LVL139
 5155 0635 0100     		.2byte	0x1
 5156 0637 55       		.byte	0x55
 5157 0638 3A000000 		.4byte	.LVL139
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 145


 5158 063c 40000000 		.4byte	.LFE16
 5159 0640 0100     		.2byte	0x1
 5160 0642 50       		.byte	0x50
 5161 0643 00000000 		.4byte	0
 5162 0647 00000000 		.4byte	0
 5163              	.LLST40:
 5164 064b 02000000 		.4byte	.LVL140
 5165 064f 08000000 		.4byte	.LVL141
 5166 0653 0200     		.2byte	0x2
 5167 0655 30       		.byte	0x30
 5168 0656 9F       		.byte	0x9f
 5169 0657 08000000 		.4byte	.LVL141
 5170 065b 18000000 		.4byte	.LVL146
 5171 065f 0100     		.2byte	0x1
 5172 0661 55       		.byte	0x55
 5173 0662 18000000 		.4byte	.LVL146
 5174 0666 1A000000 		.4byte	.LFE17
 5175 066a 0100     		.2byte	0x1
 5176 066c 50       		.byte	0x50
 5177 066d 00000000 		.4byte	0
 5178 0671 00000000 		.4byte	0
 5179              	.LLST41:
 5180 0675 02000000 		.4byte	.LVL140
 5181 0679 08000000 		.4byte	.LVL141
 5182 067d 0200     		.2byte	0x2
 5183 067f 30       		.byte	0x30
 5184 0680 9F       		.byte	0x9f
 5185 0681 08000000 		.4byte	.LVL141
 5186 0685 18000000 		.4byte	.LVL145
 5187 0689 0100     		.2byte	0x1
 5188 068b 54       		.byte	0x54
 5189 068c 00000000 		.4byte	0
 5190 0690 00000000 		.4byte	0
 5191              	.LLST42:
 5192 0694 02000000 		.4byte	.LVL147
 5193 0698 06000000 		.4byte	.LVL148
 5194 069c 0200     		.2byte	0x2
 5195 069e 30       		.byte	0x30
 5196 069f 9F       		.byte	0x9f
 5197 06a0 06000000 		.4byte	.LVL148
 5198 06a4 48000000 		.4byte	.LVL155
 5199 06a8 0100     		.2byte	0x1
 5200 06aa 55       		.byte	0x55
 5201 06ab 00000000 		.4byte	0
 5202 06af 00000000 		.4byte	0
 5203              	.LLST43:
 5204 06b3 20000000 		.4byte	.LVL149
 5205 06b7 24000000 		.4byte	.LVL150
 5206 06bb 0200     		.2byte	0x2
 5207 06bd 30       		.byte	0x30
 5208 06be 9F       		.byte	0x9f
 5209 06bf 24000000 		.4byte	.LVL150
 5210 06c3 42000000 		.4byte	.LVL153
 5211 06c7 0100     		.2byte	0x1
 5212 06c9 54       		.byte	0x54
 5213 06ca 00000000 		.4byte	0
 5214 06ce 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 146


 5215              	.LLST44:
 5216 06d2 20000000 		.4byte	.LVL149
 5217 06d6 42000000 		.4byte	.LVL153
 5218 06da 0100     		.2byte	0x1
 5219 06dc 56       		.byte	0x56
 5220 06dd 00000000 		.4byte	0
 5221 06e1 00000000 		.4byte	0
 5222              	.LLST45:
 5223 06e5 00000000 		.4byte	.LVL156
 5224 06e9 04000000 		.4byte	.LVL157
 5225 06ed 0100     		.2byte	0x1
 5226 06ef 50       		.byte	0x50
 5227 06f0 04000000 		.4byte	.LVL157
 5228 06f4 14000000 		.4byte	.LFE24
 5229 06f8 0400     		.2byte	0x4
 5230 06fa F3       		.byte	0xf3
 5231 06fb 01       		.uleb128 0x1
 5232 06fc 50       		.byte	0x50
 5233 06fd 9F       		.byte	0x9f
 5234 06fe 00000000 		.4byte	0
 5235 0702 00000000 		.4byte	0
 5236              	.LLST46:
 5237 0706 00000000 		.4byte	.LVL160
 5238 070a 12000000 		.4byte	.LVL161
 5239 070e 0100     		.2byte	0x1
 5240 0710 50       		.byte	0x50
 5241 0711 12000000 		.4byte	.LVL161
 5242 0715 1A000000 		.4byte	.LVL162
 5243 0719 0400     		.2byte	0x4
 5244 071b F3       		.byte	0xf3
 5245 071c 01       		.uleb128 0x1
 5246 071d 50       		.byte	0x50
 5247 071e 9F       		.byte	0x9f
 5248 071f 1A000000 		.4byte	.LVL162
 5249 0723 1C000000 		.4byte	.LVL163
 5250 0727 0100     		.2byte	0x1
 5251 0729 50       		.byte	0x50
 5252 072a 1C000000 		.4byte	.LVL163
 5253 072e 24000000 		.4byte	.LFE25
 5254 0732 0400     		.2byte	0x4
 5255 0734 F3       		.byte	0xf3
 5256 0735 01       		.uleb128 0x1
 5257 0736 50       		.byte	0x50
 5258 0737 9F       		.byte	0x9f
 5259 0738 00000000 		.4byte	0
 5260 073c 00000000 		.4byte	0
 5261              	.LLST47:
 5262 0740 20000000 		.4byte	.LVL164
 5263 0744 22000000 		.4byte	.LVL165
 5264 0748 0100     		.2byte	0x1
 5265 074a 50       		.byte	0x50
 5266 074b 00000000 		.4byte	0
 5267 074f 00000000 		.4byte	0
 5268              	.LLST48:
 5269 0753 00000000 		.4byte	.LVL166
 5270 0757 07000000 		.4byte	.LVL167-1
 5271 075b 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 147


 5272 075d 50       		.byte	0x50
 5273 075e 07000000 		.4byte	.LVL167-1
 5274 0762 3A000000 		.4byte	.LFE19
 5275 0766 0400     		.2byte	0x4
 5276 0768 F3       		.byte	0xf3
 5277 0769 01       		.uleb128 0x1
 5278 076a 50       		.byte	0x50
 5279 076b 9F       		.byte	0x9f
 5280 076c 00000000 		.4byte	0
 5281 0770 00000000 		.4byte	0
 5282              	.LLST49:
 5283 0774 00000000 		.4byte	.LVL166
 5284 0778 07000000 		.4byte	.LVL167-1
 5285 077c 0100     		.2byte	0x1
 5286 077e 51       		.byte	0x51
 5287 077f 07000000 		.4byte	.LVL167-1
 5288 0783 38000000 		.4byte	.LVL181
 5289 0787 0100     		.2byte	0x1
 5290 0789 56       		.byte	0x56
 5291 078a 38000000 		.4byte	.LVL181
 5292 078e 3A000000 		.4byte	.LFE19
 5293 0792 0400     		.2byte	0x4
 5294 0794 F3       		.byte	0xf3
 5295 0795 01       		.uleb128 0x1
 5296 0796 51       		.byte	0x51
 5297 0797 9F       		.byte	0x9f
 5298 0798 00000000 		.4byte	0
 5299 079c 00000000 		.4byte	0
 5300              	.LLST50:
 5301 07a0 1C000000 		.4byte	.LVL173
 5302 07a4 20000000 		.4byte	.LVL174
 5303 07a8 0100     		.2byte	0x1
 5304 07aa 50       		.byte	0x50
 5305 07ab 20000000 		.4byte	.LVL174
 5306 07af 38000000 		.4byte	.LVL179
 5307 07b3 0100     		.2byte	0x1
 5308 07b5 54       		.byte	0x54
 5309 07b6 00000000 		.4byte	0
 5310 07ba 00000000 		.4byte	0
 5311              	.LLST51:
 5312 07be 30000000 		.4byte	.LVL177
 5313 07c2 32000000 		.4byte	.LVL178
 5314 07c6 0100     		.2byte	0x1
 5315 07c8 50       		.byte	0x50
 5316 07c9 00000000 		.4byte	0
 5317 07cd 00000000 		.4byte	0
 5318              	.LLST52:
 5319 07d1 14000000 		.4byte	.LVL170
 5320 07d5 16000000 		.4byte	.LVL171
 5321 07d9 0100     		.2byte	0x1
 5322 07db 50       		.byte	0x50
 5323 07dc 16000000 		.4byte	.LVL171
 5324 07e0 19000000 		.4byte	.LVL172-1
 5325 07e4 0100     		.2byte	0x1
 5326 07e6 51       		.byte	0x51
 5327 07e7 00000000 		.4byte	0
 5328 07eb 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 148


 5329              	.LLST53:
 5330 07ef 0A000000 		.4byte	.LVL168
 5331 07f3 11000000 		.4byte	.LVL169-1
 5332 07f7 0100     		.2byte	0x1
 5333 07f9 50       		.byte	0x50
 5334 07fa 11000000 		.4byte	.LVL169-1
 5335 07fe 38000000 		.4byte	.LVL180
 5336 0802 0100     		.2byte	0x1
 5337 0804 55       		.byte	0x55
 5338 0805 00000000 		.4byte	0
 5339 0809 00000000 		.4byte	0
 5340              	.LLST54:
 5341 080d 02000000 		.4byte	.LVL182
 5342 0811 06000000 		.4byte	.LVL183
 5343 0815 0200     		.2byte	0x2
 5344 0817 30       		.byte	0x30
 5345 0818 9F       		.byte	0x9f
 5346 0819 06000000 		.4byte	.LVL183
 5347 081d 32000000 		.4byte	.LVL189
 5348 0821 0100     		.2byte	0x1
 5349 0823 54       		.byte	0x54
 5350 0824 00000000 		.4byte	0
 5351 0828 00000000 		.4byte	0
 5352              	.LLST55:
 5353 082c 12000000 		.4byte	.LVL184
 5354 0830 23000000 		.4byte	.LVL185-1
 5355 0834 0100     		.2byte	0x1
 5356 0836 51       		.byte	0x51
 5357 0837 26000000 		.4byte	.LVL186
 5358 083b 2B000000 		.4byte	.LVL187-1
 5359 083f 0100     		.2byte	0x1
 5360 0841 51       		.byte	0x51
 5361 0842 00000000 		.4byte	0
 5362 0846 00000000 		.4byte	0
 5363              	.LLST56:
 5364 084a 0A000000 		.4byte	.LVL195
 5365 084e 0E000000 		.4byte	.LVL196
 5366 0852 0100     		.2byte	0x1
 5367 0854 51       		.byte	0x51
 5368 0855 0E000000 		.4byte	.LVL196
 5369 0859 13000000 		.4byte	.LVL197-1
 5370 085d 0100     		.2byte	0x1
 5371 085f 53       		.byte	0x53
 5372 0860 1C000000 		.4byte	.LVL199
 5373 0864 25000000 		.4byte	.LVL201-1
 5374 0868 0100     		.2byte	0x1
 5375 086a 53       		.byte	0x53
 5376 086b 2E000000 		.4byte	.LVL203
 5377 086f 3D000000 		.4byte	.LVL206-1
 5378 0873 0100     		.2byte	0x1
 5379 0875 53       		.byte	0x53
 5380 0876 4A000000 		.4byte	.LVL209
 5381 087a 4C000000 		.4byte	.LVL210
 5382 087e 0100     		.2byte	0x1
 5383 0880 53       		.byte	0x53
 5384 0881 4C000000 		.4byte	.LVL210
 5385 0885 52000000 		.4byte	.LVL212
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 149


 5386 0889 0100     		.2byte	0x1
 5387 088b 55       		.byte	0x55
 5388 088c 00000000 		.4byte	0
 5389 0890 00000000 		.4byte	0
 5390              	.LLST57:
 5391 0894 06000000 		.4byte	.LVL194
 5392 0898 13000000 		.4byte	.LVL197-1
 5393 089c 0100     		.2byte	0x1
 5394 089e 50       		.byte	0x50
 5395 089f 18000000 		.4byte	.LVL198
 5396 08a3 25000000 		.4byte	.LVL201-1
 5397 08a7 0100     		.2byte	0x1
 5398 08a9 50       		.byte	0x50
 5399 08aa 2A000000 		.4byte	.LVL202
 5400 08ae 3D000000 		.4byte	.LVL206-1
 5401 08b2 0100     		.2byte	0x1
 5402 08b4 50       		.byte	0x50
 5403 08b5 48000000 		.4byte	.LVL208
 5404 08b9 51000000 		.4byte	.LVL211-1
 5405 08bd 0100     		.2byte	0x1
 5406 08bf 50       		.byte	0x50
 5407 08c0 00000000 		.4byte	0
 5408 08c4 00000000 		.4byte	0
 5409              		.section	.debug_aranges,"",%progbits
 5410 0000 E4000000 		.4byte	0xe4
 5411 0004 0200     		.2byte	0x2
 5412 0006 00000000 		.4byte	.Ldebug_info0
 5413 000a 04       		.byte	0x4
 5414 000b 00       		.byte	0
 5415 000c 0000     		.2byte	0
 5416 000e 0000     		.2byte	0
 5417 0010 00000000 		.4byte	.LFB21
 5418 0014 84000000 		.4byte	.LFE21-.LFB21
 5419 0018 00000000 		.4byte	.LFB22
 5420 001c 42000000 		.4byte	.LFE22-.LFB22
 5421 0020 00000000 		.4byte	.LFB7
 5422 0024 24000000 		.4byte	.LFE7-.LFB7
 5423 0028 00000000 		.4byte	.LFB8
 5424 002c 28000000 		.4byte	.LFE8-.LFB8
 5425 0030 00000000 		.4byte	.LFB20
 5426 0034 26000000 		.4byte	.LFE20-.LFB20
 5427 0038 00000000 		.4byte	.LFB1
 5428 003c 10000000 		.4byte	.LFE1-.LFB1
 5429 0040 00000000 		.4byte	.LFB2
 5430 0044 64000000 		.4byte	.LFE2-.LFB2
 5431 0048 00000000 		.4byte	.LFB3
 5432 004c 38000000 		.4byte	.LFE3-.LFB3
 5433 0050 00000000 		.4byte	.LFB4
 5434 0054 48000000 		.4byte	.LFE4-.LFB4
 5435 0058 00000000 		.4byte	.LFB6
 5436 005c EC000000 		.4byte	.LFE6-.LFB6
 5437 0060 00000000 		.4byte	.LFB9
 5438 0064 54000000 		.4byte	.LFE9-.LFB9
 5439 0068 00000000 		.4byte	.LFB10
 5440 006c 40000000 		.4byte	.LFE10-.LFB10
 5441 0070 00000000 		.4byte	.LFB11
 5442 0074 78000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 150


 5443 0078 00000000 		.4byte	.LFB12
 5444 007c 08000000 		.4byte	.LFE12-.LFB12
 5445 0080 00000000 		.4byte	.LFB13
 5446 0084 30000000 		.4byte	.LFE13-.LFB13
 5447 0088 00000000 		.4byte	.LFB14
 5448 008c 14000000 		.4byte	.LFE14-.LFB14
 5449 0090 00000000 		.4byte	.LFB15
 5450 0094 12000000 		.4byte	.LFE15-.LFB15
 5451 0098 00000000 		.4byte	.LFB16
 5452 009c 40000000 		.4byte	.LFE16-.LFB16
 5453 00a0 00000000 		.4byte	.LFB17
 5454 00a4 1A000000 		.4byte	.LFE17-.LFB17
 5455 00a8 00000000 		.4byte	.LFB23
 5456 00ac 50000000 		.4byte	.LFE23-.LFB23
 5457 00b0 00000000 		.4byte	.LFB24
 5458 00b4 14000000 		.4byte	.LFE24-.LFB24
 5459 00b8 00000000 		.4byte	.LFB25
 5460 00bc 24000000 		.4byte	.LFE25-.LFB25
 5461 00c0 00000000 		.4byte	.LFB19
 5462 00c4 3A000000 		.4byte	.LFE19-.LFB19
 5463 00c8 00000000 		.4byte	.LFB18
 5464 00cc 38000000 		.4byte	.LFE18-.LFB18
 5465 00d0 00000000 		.4byte	.LFB5
 5466 00d4 14000000 		.4byte	.LFE5-.LFB5
 5467 00d8 00000000 		.4byte	.LFB26
 5468 00dc 68000000 		.4byte	.LFE26-.LFB26
 5469 00e0 00000000 		.4byte	0
 5470 00e4 00000000 		.4byte	0
 5471              		.section	.debug_ranges,"",%progbits
 5472              	.Ldebug_ranges0:
 5473 0000 00000000 		.4byte	.LFB21
 5474 0004 84000000 		.4byte	.LFE21
 5475 0008 00000000 		.4byte	.LFB22
 5476 000c 42000000 		.4byte	.LFE22
 5477 0010 00000000 		.4byte	.LFB7
 5478 0014 24000000 		.4byte	.LFE7
 5479 0018 00000000 		.4byte	.LFB8
 5480 001c 28000000 		.4byte	.LFE8
 5481 0020 00000000 		.4byte	.LFB20
 5482 0024 26000000 		.4byte	.LFE20
 5483 0028 00000000 		.4byte	.LFB1
 5484 002c 10000000 		.4byte	.LFE1
 5485 0030 00000000 		.4byte	.LFB2
 5486 0034 64000000 		.4byte	.LFE2
 5487 0038 00000000 		.4byte	.LFB3
 5488 003c 38000000 		.4byte	.LFE3
 5489 0040 00000000 		.4byte	.LFB4
 5490 0044 48000000 		.4byte	.LFE4
 5491 0048 00000000 		.4byte	.LFB6
 5492 004c EC000000 		.4byte	.LFE6
 5493 0050 00000000 		.4byte	.LFB9
 5494 0054 54000000 		.4byte	.LFE9
 5495 0058 00000000 		.4byte	.LFB10
 5496 005c 40000000 		.4byte	.LFE10
 5497 0060 00000000 		.4byte	.LFB11
 5498 0064 78000000 		.4byte	.LFE11
 5499 0068 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 151


 5500 006c 08000000 		.4byte	.LFE12
 5501 0070 00000000 		.4byte	.LFB13
 5502 0074 30000000 		.4byte	.LFE13
 5503 0078 00000000 		.4byte	.LFB14
 5504 007c 14000000 		.4byte	.LFE14
 5505 0080 00000000 		.4byte	.LFB15
 5506 0084 12000000 		.4byte	.LFE15
 5507 0088 00000000 		.4byte	.LFB16
 5508 008c 40000000 		.4byte	.LFE16
 5509 0090 00000000 		.4byte	.LFB17
 5510 0094 1A000000 		.4byte	.LFE17
 5511 0098 00000000 		.4byte	.LFB23
 5512 009c 50000000 		.4byte	.LFE23
 5513 00a0 00000000 		.4byte	.LFB24
 5514 00a4 14000000 		.4byte	.LFE24
 5515 00a8 00000000 		.4byte	.LFB25
 5516 00ac 24000000 		.4byte	.LFE25
 5517 00b0 00000000 		.4byte	.LFB19
 5518 00b4 3A000000 		.4byte	.LFE19
 5519 00b8 00000000 		.4byte	.LFB18
 5520 00bc 38000000 		.4byte	.LFE18
 5521 00c0 00000000 		.4byte	.LFB5
 5522 00c4 14000000 		.4byte	.LFE5
 5523 00c8 00000000 		.4byte	.LFB26
 5524 00cc 68000000 		.4byte	.LFE26
 5525 00d0 00000000 		.4byte	0
 5526 00d4 00000000 		.4byte	0
 5527              		.section	.debug_line,"",%progbits
 5528              	.Ldebug_line0:
 5529 0000 A1040000 		.section	.debug_str,"MS",%progbits,1
 5529      0200D600 
 5529      00000201 
 5529      FB0E0D00 
 5529      01010101 
 5530              	.LASF164:
 5531 0000 43617053 		.ascii	"CapSense_curFlashWdgtPtr\000"
 5531      656E7365 
 5531      5F637572 
 5531      466C6173 
 5531      68576467 
 5532              	.LASF145:
 5533 0019 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 5533      656E7365 
 5533      5F537343 
 5533      53444765 
 5533      74436F6C 
 5534              	.LASF119:
 5535 003b 73656E73 		.ascii	"sensorElement\000"
 5535      6F72456C 
 5535      656D656E 
 5535      7400
 5536              	.LASF117:
 5537 0049 7363616E 		.ascii	"scanStatus\000"
 5537      53746174 
 5537      757300
 5538              	.LASF108:
 5539 0054 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 152


 5539      656E7365 
 5539      5F537343 
 5539      53444469 
 5539      7361626C 
 5540              	.LASF128:
 5541 006e 43617053 		.ascii	"CapSense_SsSetIOsInDefaultState\000"
 5541      656E7365 
 5541      5F537353 
 5541      6574494F 
 5541      73496E44 
 5542              	.LASF154:
 5543 008e 43617053 		.ascii	"CapSense_BistDischargeExtCapacitors\000"
 5543      656E7365 
 5543      5F426973 
 5543      74446973 
 5543      63686172 
 5544              	.LASF177:
 5545 00b2 43617053 		.ascii	"CapSense_CSXInitialize\000"
 5545      656E7365 
 5545      5F435358 
 5545      496E6974 
 5545      69616C69 
 5546              	.LASF158:
 5547 00c9 43617053 		.ascii	"CapSense_widgetIndex\000"
 5547      656E7365 
 5547      5F776964 
 5547      67657449 
 5547      6E646578 
 5548              	.LASF66:
 5549 00de 736E7254 		.ascii	"snrTestWidgetId\000"
 5549      65737457 
 5549      69646765 
 5549      74496400 
 5550              	.LASF20:
 5551 00ee 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 5551      656E7365 
 5551      5F554E44 
 5551      4546494E 
 5551      45445F45 
 5552              	.LASF8:
 5553 0103 756E7369 		.ascii	"unsigned int\000"
 5553      676E6564 
 5553      20696E74 
 5553      00
 5554              	.LASF56:
 5555 0110 7363616E 		.ascii	"scanCounter\000"
 5555      436F756E 
 5555      74657200 
 5556              	.LASF54:
 5557 011c 6877436C 		.ascii	"hwClock\000"
 5557      6F636B00 
 5558              	.LASF153:
 5559 0124 696E6974 		.ascii	"initStatus\000"
 5559      53746174 
 5559      757300
 5560              	.LASF130:
 5561 012f 72656756 		.ascii	"regValue\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 153


 5561      616C7565 
 5561      00
 5562              	.LASF123:
 5563 0138 696E7465 		.ascii	"interruptState\000"
 5563      72727570 
 5563      74537461 
 5563      746500
 5564              	.LASF104:
 5565 0147 6C667372 		.ascii	"lfsrScale\000"
 5565      5363616C 
 5565      6500
 5566              	.LASF105:
 5567 0151 6C667372 		.ascii	"lfsrRange\000"
 5567      52616E67 
 5567      6500
 5568              	.LASF127:
 5569 015b 6D6F6465 		.ascii	"mode\000"
 5569      00
 5570              	.LASF187:
 5571 0160 43617053 		.ascii	"CapSense_IsBusy\000"
 5571      656E7365 
 5571      5F497342 
 5571      75737900 
 5572              	.LASF135:
 5573 0170 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 5573      656E7365 
 5573      5F537353 
 5573      65744D6F 
 5573      64436C6B 
 5574              	.LASF44:
 5575 0191 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 5575      656E7365 
 5575      5F52414D 
 5575      5F57445F 
 5575      4C495354 
 5576              	.LASF94:
 5577 01ad 69697246 		.ascii	"iirFilterCoeff\000"
 5577      696C7465 
 5577      72436F65 
 5577      666600
 5578              	.LASF121:
 5579 01bc 656C7464 		.ascii	"eltdNum\000"
 5579      4E756D00 
 5580              	.LASF112:
 5581 01c4 70747257 		.ascii	"ptrWdgt\000"
 5581      64677400 
 5582              	.LASF150:
 5583 01cc 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 5583      656E7365 
 5583      5F537353 
 5583      65745769 
 5583      64676574 
 5584              	.LASF129:
 5585 01ec 6C6F6F70 		.ascii	"loopIndex\000"
 5585      496E6465 
 5585      7800
 5586              	.LASF102:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 154


 5587 01f6 43617053 		.ascii	"CapSense_SsCalcLfsrScale\000"
 5587      656E7365 
 5587      5F537343 
 5587      616C634C 
 5587      66737253 
 5588              	.LASF12:
 5589 020f 666C6F61 		.ascii	"float\000"
 5589      7400
 5590              	.LASF79:
 5591 0215 73686966 		.ascii	"shift\000"
 5591      7400
 5592              	.LASF142:
 5593 021b 43617053 		.ascii	"CapSense_SsClearCSDSensors\000"
 5593      656E7365 
 5593      5F537343 
 5593      6C656172 
 5593      43534453 
 5594              	.LASF184:
 5595 0236 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5595      43313120 
 5595      352E342E 
 5595      31203230 
 5595      31363036 
 5596 0269 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5596      20726576 
 5596      6973696F 
 5596      6E203233 
 5596      37373135 
 5597 029c 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5597      67202D66 
 5597      66756E63 
 5597      74696F6E 
 5597      2D736563 
 5598              	.LASF109:
 5599 02c8 43617053 		.ascii	"CapSense_SsDisableCSXMode\000"
 5599      656E7365 
 5599      5F537344 
 5599      69736162 
 5599      6C654353 
 5600              	.LASF170:
 5601 02e2 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 5601      656E7365 
 5601      5F435344 
 5601      53657475 
 5601      70576964 
 5602              	.LASF169:
 5603 02fa 43617053 		.ascii	"CapSense_CSXSetupWidget\000"
 5603      656E7365 
 5603      5F435358 
 5603      53657475 
 5603      70576964 
 5604              	.LASF183:
 5605 0312 43794465 		.ascii	"CyDelayUs\000"
 5605      6C617955 
 5605      7300
 5606              	.LASF65:
 5607 031c 736E734C 		.ascii	"snsList\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 155


 5607      69737400 
 5608              	.LASF7:
 5609 0324 6C6F6E67 		.ascii	"long long unsigned int\000"
 5609      206C6F6E 
 5609      6720756E 
 5609      7369676E 
 5609      65642069 
 5610              	.LASF159:
 5611 033b 43617053 		.ascii	"CapSense_sensorIndex\000"
 5611      656E7365 
 5611      5F73656E 
 5611      736F7249 
 5611      6E646578 
 5612              	.LASF80:
 5613 0350 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 5613      656E7365 
 5613      5F464C41 
 5613      53485F49 
 5613      4F5F5354 
 5614              	.LASF67:
 5615 0369 736E7254 		.ascii	"snrTestSensorId\000"
 5615      65737453 
 5615      656E736F 
 5615      72496400 
 5616              	.LASF88:
 5617 0379 77646774 		.ascii	"wdgtType\000"
 5617      54797065 
 5617      00
 5618              	.LASF103:
 5619 0382 6C667372 		.ascii	"lfsrSize\000"
 5619      53697A65 
 5619      00
 5620              	.LASF62:
 5621 038b 6D6F6443 		.ascii	"modCsdClk\000"
 5621      7364436C 
 5621      6B00
 5622              	.LASF50:
 5623 0395 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 5623      656E7365 
 5623      5F52414D 
 5623      5F534E53 
 5623      5F535452 
 5624              	.LASF147:
 5625 03ad 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 5625      656E7365 
 5625      5F537343 
 5625      53444361 
 5625      6C635072 
 5626              	.LASF73:
 5627 03c7 64725074 		.ascii	"drPtr\000"
 5627      7200
 5628              	.LASF136:
 5629 03cd 6D6F6443 		.ascii	"modClk\000"
 5629      6C6B00
 5630              	.LASF30:
 5631 03d4 68797374 		.ascii	"hysteresis\000"
 5631      65726573 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 156


 5631      697300
 5632              	.LASF95:
 5633 03df 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 5633      656E7365 
 5633      5F464C41 
 5633      53485F57 
 5633      445F5354 
 5634              	.LASF32:
 5635 03f8 6C6F7742 		.ascii	"lowBslnRst\000"
 5635      736C6E52 
 5635      737400
 5636              	.LASF101:
 5637 0403 43617053 		.ascii	"CapSense_SsCalcLfsrSize\000"
 5637      656E7365 
 5637      5F537343 
 5637      616C634C 
 5637      66737253 
 5638              	.LASF41:
 5639 041b 62746E30 		.ascii	"btn0\000"
 5639      00
 5640              	.LASF42:
 5641 0420 62746E31 		.ascii	"btn1\000"
 5641      00
 5642              	.LASF43:
 5643 0425 62746E32 		.ascii	"btn2\000"
 5643      00
 5644              	.LASF87:
 5645 042a 746F7461 		.ascii	"totalNumSns\000"
 5645      6C4E756D 
 5645      536E7300 
 5646              	.LASF28:
 5647 0436 6E6F6973 		.ascii	"noiseTh\000"
 5647      65546800 
 5648              	.LASF14:
 5649 043e 63686172 		.ascii	"char\000"
 5649      00
 5650              	.LASF174:
 5651 0443 43794578 		.ascii	"CyExitCriticalSection\000"
 5651      69744372 
 5651      69746963 
 5651      616C5365 
 5651      6374696F 
 5652              	.LASF182:
 5653 0459 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 5653      656E7365 
 5653      5F537343 
 5653      53444765 
 5653      744E756D 
 5654              	.LASF77:
 5655 047e 6873696F 		.ascii	"hsiomShift\000"
 5655      6D536869 
 5655      667400
 5656              	.LASF10:
 5657 0489 75696E74 		.ascii	"uint16\000"
 5657      313600
 5658              	.LASF100:
 5659 0490 636F6E76 		.ascii	"conversionsNum\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 157


 5659      65727369 
 5659      6F6E734E 
 5659      756D00
 5660              	.LASF26:
 5661 049f 7265736F 		.ascii	"resolution\000"
 5661      6C757469 
 5661      6F6E00
 5662              	.LASF57:
 5663 04aa 73746174 		.ascii	"status\000"
 5663      757300
 5664              	.LASF139:
 5665 04b1 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 5665      656E7365 
 5665      5F43616C 
 5665      69627261 
 5665      74655769 
 5666              	.LASF19:
 5667 04ca 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 5667      656E7365 
 5667      5F4C4F57 
 5667      5F42534C 
 5667      4E5F5253 
 5668              	.LASF137:
 5669 04e5 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 5669      656E7365 
 5669      5F537353 
 5669      6574536E 
 5669      73436C6F 
 5670              	.LASF25:
 5671 0503 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 5671      656E7365 
 5671      5F53454E 
 5671      53455F4D 
 5671      4554484F 
 5672              	.LASF49:
 5673 051e 69646163 		.ascii	"idacComp\000"
 5673      436F6D70 
 5673      00
 5674              	.LASF72:
 5675 0527 70635074 		.ascii	"pcPtr\000"
 5675      7200
 5676              	.LASF6:
 5677 052d 6C6F6E67 		.ascii	"long long int\000"
 5677      206C6F6E 
 5677      6720696E 
 5677      7400
 5678              	.LASF90:
 5679 053b 6E756D43 		.ascii	"numCols\000"
 5679      6F6C7300 
 5680              	.LASF176:
 5681 0543 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 5681      656E7365 
 5681      5F537343 
 5681      5344496E 
 5681      69746961 
 5682              	.LASF31:
 5683 055c 6F6E4465 		.ascii	"onDebounce\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 158


 5683      626F756E 
 5683      636500
 5684              	.LASF140:
 5685 0567 63616C69 		.ascii	"calibrateStatus\000"
 5685      62726174 
 5685      65537461 
 5685      74757300 
 5686              	.LASF64:
 5687 0577 77646774 		.ascii	"wdgtList\000"
 5687      4C697374 
 5687      00
 5688              	.LASF141:
 5689 0580 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 5689      656E7365 
 5689      5F43616C 
 5689      69627261 
 5689      7465416C 
 5690              	.LASF97:
 5691 059d 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 5691      656E7365 
 5691      5F464C41 
 5691      53485F53 
 5691      54525543 
 5692              	.LASF116:
 5693 05b3 43617053 		.ascii	"CapSense_Scan\000"
 5693      656E7365 
 5693      5F536361 
 5693      6E00
 5694              	.LASF155:
 5695 05c1 43617053 		.ascii	"CapSense_dsRam\000"
 5695      656E7365 
 5695      5F647352 
 5695      616D00
 5696              	.LASF69:
 5697 05d0 736E7254 		.ascii	"snrTestRawCount\000"
 5697      65737452 
 5697      6177436F 
 5697      756E7400 
 5698              	.LASF29:
 5699 05e0 6E4E6F69 		.ascii	"nNoiseTh\000"
 5699      73655468 
 5699      00
 5700              	.LASF61:
 5701 05e9 63736430 		.ascii	"csd0Config\000"
 5701      436F6E66 
 5701      696700
 5702              	.LASF17:
 5703 05f4 63796973 		.ascii	"cyisraddress\000"
 5703      72616464 
 5703      72657373 
 5703      00
 5704              	.LASF37:
 5705 0601 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 5705      656E7365 
 5705      5F52414D 
 5705      5F57445F 
 5705      42415345 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 159


 5706              	.LASF71:
 5707 061d 6873696F 		.ascii	"hsiomPtr\000"
 5707      6D507472 
 5707      00
 5708              	.LASF167:
 5709 0626 43617053 		.ascii	"CapSense_CSXElectrodeCheck\000"
 5709      656E7365 
 5709      5F435358 
 5709      456C6563 
 5709      74726F64 
 5710              	.LASF11:
 5711 0641 75696E74 		.ascii	"uint32\000"
 5711      333200
 5712              	.LASF84:
 5713 0648 70747232 		.ascii	"ptr2FltrHistory\000"
 5713      466C7472 
 5713      48697374 
 5713      6F727900 
 5714              	.LASF165:
 5715 0658 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 5715      656E7365 
 5715      5F637572 
 5715      536E7349 
 5715      4F507472 
 5716              	.LASF76:
 5717 066d 6D61736B 		.ascii	"mask\000"
 5717      00
 5718              	.LASF138:
 5719 0672 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 5719      656E7365 
 5719      5F537353 
 5719      6574436C 
 5719      6F636B44 
 5720              	.LASF179:
 5721 068e 43617053 		.ascii	"CapSense_CSXCalibrateWidget\000"
 5721      656E7365 
 5721      5F435358 
 5721      43616C69 
 5721      62726174 
 5722              	.LASF111:
 5723 06aa 77646774 		.ascii	"wdgtIndex\000"
 5723      496E6465 
 5723      7800
 5724              	.LASF143:
 5725 06b4 736E7349 		.ascii	"snsIndex\000"
 5725      6E646578 
 5725      00
 5726              	.LASF24:
 5727 06bd 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 5727      656E7365 
 5727      5F53454E 
 5727      53455F4D 
 5727      4554484F 
 5728              	.LASF98:
 5729 06d9 6C6F6E67 		.ascii	"long double\000"
 5729      20646F75 
 5729      626C6500 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 160


 5730              	.LASF16:
 5731 06e5 72656733 		.ascii	"reg32\000"
 5731      3200
 5732              	.LASF68:
 5733 06eb 736E7254 		.ascii	"snrTestScanCounter\000"
 5733      65737453 
 5733      63616E43 
 5733      6F756E74 
 5733      657200
 5734              	.LASF52:
 5735 06fe 636F6E66 		.ascii	"configId\000"
 5735      69674964 
 5735      00
 5736              	.LASF83:
 5737 0707 70747232 		.ascii	"ptr2SnsRam\000"
 5737      536E7352 
 5737      616D00
 5738              	.LASF110:
 5739 0712 43617053 		.ascii	"CapSense_SsSetWidgetTxClkSrc\000"
 5739      656E7365 
 5739      5F537353 
 5739      65745769 
 5739      64676574 
 5740              	.LASF60:
 5741 072f 736E7353 		.ascii	"snsStatus\000"
 5741      74617475 
 5741      7300
 5742              	.LASF132:
 5743 0739 706F7374 		.ascii	"postScanStatus\000"
 5743      5363616E 
 5743      53746174 
 5743      757300
 5744              	.LASF35:
 5745 0748 736E7343 		.ascii	"snsClkSource\000"
 5745      6C6B536F 
 5745      75726365 
 5745      00
 5746              	.LASF166:
 5747 0755 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 5747      656E7365 
 5747      5F537343 
 5747      5344456C 
 5747      65637472 
 5748              	.LASF92:
 5749 0772 78526573 		.ascii	"xResolution\000"
 5749      6F6C7574 
 5749      696F6E00 
 5750              	.LASF133:
 5751 077e 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 5751      656E7365 
 5751      5F537349 
 5751      7372496E 
 5751      69746961 
 5752              	.LASF2:
 5753 0797 73686F72 		.ascii	"short int\000"
 5753      7420696E 
 5753      7400
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 161


 5754              	.LASF70:
 5755 07a1 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 5755      656E7365 
 5755      5F52414D 
 5755      5F535452 
 5755      55435400 
 5756              	.LASF181:
 5757 07b5 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 5757      656E7365 
 5757      5F435344 
 5757      44697363 
 5757      6F6E6E65 
 5758              	.LASF4:
 5759 07cf 6C6F6E67 		.ascii	"long int\000"
 5759      20696E74 
 5759      00
 5760              	.LASF58:
 5761 07d8 77646774 		.ascii	"wdgtEnable\000"
 5761      456E6162 
 5761      6C6500
 5762              	.LASF47:
 5763 07e3 64696666 		.ascii	"diff\000"
 5763      00
 5764              	.LASF55:
 5765 07e8 74756E65 		.ascii	"tunerCmd\000"
 5765      72436D64 
 5765      00
 5766              	.LASF22:
 5767 07f1 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 5767      656E7365 
 5767      5F53454E 
 5767      53455F4D 
 5767      4554484F 
 5768              	.LASF74:
 5769 080d 70735074 		.ascii	"psPtr\000"
 5769      7200
 5770              	.LASF115:
 5771 0813 43617053 		.ascii	"CapSense_SetupWidget\000"
 5771      656E7365 
 5771      5F536574 
 5771      75705769 
 5771      64676574 
 5772              	.LASF180:
 5773 0828 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 5773      656E7365 
 5773      5F435344 
 5773      43616C69 
 5773      62726174 
 5774              	.LASF156:
 5775 0844 43617053 		.ascii	"CapSense_dsFlash\000"
 5775      656E7365 
 5775      5F647346 
 5775      6C617368 
 5775      00
 5776              	.LASF59:
 5777 0855 77646774 		.ascii	"wdgtStatus\000"
 5777      53746174 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 162


 5777      757300
 5778              	.LASF157:
 5779 0860 43617053 		.ascii	"CapSense_ioList\000"
 5779      656E7365 
 5779      5F696F4C 
 5779      69737400 
 5780              	.LASF185:
 5781 0870 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 5781      72617465 
 5781      645F536F 
 5781      75726365 
 5781      5C50536F 
 5782              	.LASF40:
 5783 089a 43617053 		.ascii	"CapSense_RAM_WD_SLIDER_STRUCT\000"
 5783      656E7365 
 5783      5F52414D 
 5783      5F57445F 
 5783      534C4944 
 5784              	.LASF21:
 5785 08b8 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 5785      656E7365 
 5785      5F53454E 
 5785      53455F4D 
 5785      4554484F 
 5786              	.LASF162:
 5787 08d4 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 5787      656E7365 
 5787      5F637572 
 5787      72656E74 
 5787      53656E73 
 5788              	.LASF148:
 5789 08f0 70727353 		.ascii	"prsSize\000"
 5789      697A6500 
 5790              	.LASF36:
 5791 08f8 73697A65 		.ascii	"sizetype\000"
 5791      74797065 
 5791      00
 5792              	.LASF78:
 5793 0901 64725368 		.ascii	"drShift\000"
 5793      69667400 
 5794              	.LASF5:
 5795 0909 6C6F6E67 		.ascii	"long unsigned int\000"
 5795      20756E73 
 5795      69676E65 
 5795      6420696E 
 5795      7400
 5796              	.LASF146:
 5797 091b 72657456 		.ascii	"retVal\000"
 5797      616C00
 5798              	.LASF134:
 5799 0922 61646472 		.ascii	"address\000"
 5799      65737300 
 5800              	.LASF33:
 5801 092a 69646163 		.ascii	"idacMod\000"
 5801      4D6F6400 
 5802              	.LASF178:
 5803 0932 43617053 		.ascii	"CapSense_ISR_StartEx\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 163


 5803      656E7365 
 5803      5F495352 
 5803      5F537461 
 5803      72744578 
 5804              	.LASF85:
 5805 0947 70747232 		.ascii	"ptr2DebounceArr\000"
 5805      4465626F 
 5805      756E6365 
 5805      41727200 
 5806              	.LASF175:
 5807 0957 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 5807      656E7365 
 5807      5F435344 
 5807      436F6E6E 
 5807      65637453 
 5808              	.LASF93:
 5809 096e 7843656E 		.ascii	"xCentroidMultiplier\000"
 5809      74726F69 
 5809      644D756C 
 5809      7469706C 
 5809      69657200 
 5810              	.LASF27:
 5811 0982 66696E67 		.ascii	"fingerTh\000"
 5811      65725468 
 5811      00
 5812              	.LASF46:
 5813 098b 62736C6E 		.ascii	"bslnExt\000"
 5813      45787400 
 5814              	.LASF38:
 5815 0993 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 5815      656E7365 
 5815      5F52414D 
 5815      5F57445F 
 5815      42555454 
 5816              	.LASF15:
 5817 09b1 63797374 		.ascii	"cystatus\000"
 5817      61747573 
 5817      00
 5818              	.LASF1:
 5819 09ba 756E7369 		.ascii	"unsigned char\000"
 5819      676E6564 
 5819      20636861 
 5819      7200
 5820              	.LASF125:
 5821 09c8 43617053 		.ascii	"CapSense_SetPinState\000"
 5821      656E7365 
 5821      5F536574 
 5821      50696E53 
 5821      74617465 
 5822              	.LASF186:
 5823 09dd 433A5C55 		.ascii	"C:\\Users\\michael.machate\\Desktop\\CY8CKIT-145 Co"
 5823      73657273 
 5823      5C6D6963 
 5823      6861656C 
 5823      2E6D6163 
 5824 0a0c 64652045 		.ascii	"de Example\\CE210709_CapSense_Linear_Slider_and_But"
 5824      78616D70 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 164


 5824      6C655C43 
 5824      45323130 
 5824      3730395F 
 5825 0a3e 746F6E73 		.ascii	"tons\\CE210709_CapSense_Linear_Slider_and_Buttons.c"
 5825      5C434532 
 5825      31303730 
 5825      395F4361 
 5825      7053656E 
 5826 0a70 7964736E 		.ascii	"ydsn\000"
 5826      00
 5827              	.LASF86:
 5828 0a75 73746174 		.ascii	"staticConfig\000"
 5828      6963436F 
 5828      6E666967 
 5828      00
 5829              	.LASF89:
 5830 0a82 73656E73 		.ascii	"senseMethod\000"
 5830      654D6574 
 5830      686F6400 
 5831              	.LASF63:
 5832 0a8e 6D6F6443 		.ascii	"modCsxClk\000"
 5832      7378436C 
 5832      6B00
 5833              	.LASF124:
 5834 0a98 696F5074 		.ascii	"ioPtr\000"
 5834      7200
 5835              	.LASF82:
 5836 0a9e 70747232 		.ascii	"ptr2WdgtRam\000"
 5836      57646774 
 5836      52616D00 
 5837              	.LASF18:
 5838 0aaa 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 5838      656E7365 
 5838      5F544852 
 5838      4553484F 
 5838      4C445F54 
 5839              	.LASF172:
 5840 0ac2 43617053 		.ascii	"CapSense_CSDScan\000"
 5840      656E7365 
 5840      5F435344 
 5840      5363616E 
 5840      00
 5841              	.LASF23:
 5842 0ad3 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 5842      656E7365 
 5842      5F53454E 
 5842      53455F4D 
 5842      4554484F 
 5843              	.LASF91:
 5844 0af0 6E756D52 		.ascii	"numRows\000"
 5844      6F777300 
 5845              	.LASF120:
 5846 0af8 73746174 		.ascii	"state\000"
 5846      6500
 5847              	.LASF122:
 5848 0afe 656C7464 		.ascii	"eltdIndex\000"
 5848      496E6465 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 165


 5848      7800
 5849              	.LASF118:
 5850 0b08 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 5850      656E7365 
 5850      5F536361 
 5850      6E416C6C 
 5850      57696467 
 5851              	.LASF75:
 5852 0b20 6873696F 		.ascii	"hsiomMask\000"
 5852      6D4D6173 
 5852      6B00
 5853              	.LASF171:
 5854 0b2a 43617053 		.ascii	"CapSense_CSXScan\000"
 5854      656E7365 
 5854      5F435358 
 5854      5363616E 
 5854      00
 5855              	.LASF144:
 5856 0b3b 63757253 		.ascii	"curSnsIOPtr\000"
 5856      6E73494F 
 5856      50747200 
 5857              	.LASF34:
 5858 0b47 736E7343 		.ascii	"snsClk\000"
 5858      6C6B00
 5859              	.LASF126:
 5860 0b4e 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 5860      656E7365 
 5860      5F537353 
 5860      77697463 
 5860      6853656E 
 5861              	.LASF173:
 5862 0b6b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5862      74657243 
 5862      72697469 
 5862      63616C53 
 5862      65637469 
 5863              	.LASF161:
 5864 0b82 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 5864      656E7365 
 5864      5F637572 
 5864      52616D53 
 5864      6E735074 
 5865              	.LASF0:
 5866 0b98 7369676E 		.ascii	"signed char\000"
 5866      65642063 
 5866      68617200 
 5867              	.LASF163:
 5868 0ba4 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 5868      656E7365 
 5868      5F736361 
 5868      6E467265 
 5868      71496E64 
 5869              	.LASF45:
 5870 0bbb 62736C6E 		.ascii	"bsln\000"
 5870      00
 5871              	.LASF3:
 5872 0bc0 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 166


 5872      7420756E 
 5872      7369676E 
 5872      65642069 
 5872      6E7400
 5873              	.LASF131:
 5874 0bd3 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 5874      656E7365 
 5874      5F537350 
 5874      6F737441 
 5874      6C6C5769 
 5875              	.LASF81:
 5876 0bf1 70747232 		.ascii	"ptr2SnsFlash\000"
 5876      536E7346 
 5876      6C617368 
 5876      00
 5877              	.LASF106:
 5878 0bfe 6C667372 		.ascii	"lfsrDither\000"
 5878      44697468 
 5878      657200
 5879              	.LASF107:
 5880 0c09 6E657752 		.ascii	"newRegValue\000"
 5880      65675661 
 5880      6C756500 
 5881              	.LASF168:
 5882 0c15 43617053 		.ascii	"CapSense_SsCSXGetTxClkDivider\000"
 5882      656E7365 
 5882      5F537343 
 5882      53584765 
 5882      74547843 
 5883              	.LASF9:
 5884 0c33 75696E74 		.ascii	"uint8\000"
 5884      3800
 5885              	.LASF13:
 5886 0c39 646F7562 		.ascii	"double\000"
 5886      6C6500
 5887              	.LASF48:
 5888 0c40 6E656742 		.ascii	"negBslnRstCnt\000"
 5888      736C6E52 
 5888      7374436E 
 5888      7400
 5889              	.LASF152:
 5890 0c4e 43617053 		.ascii	"CapSense_SsInitialize\000"
 5890      656E7365 
 5890      5F537349 
 5890      6E697469 
 5890      616C697A 
 5891              	.LASF99:
 5892 0c64 736E7343 		.ascii	"snsClkDivider\000"
 5892      6C6B4469 
 5892      76696465 
 5892      7200
 5893              	.LASF149:
 5894 0c72 6D6F6443 		.ascii	"modClkDivider\000"
 5894      6C6B4469 
 5894      76696465 
 5894      7200
 5895              	.LASF53:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc9DremT.s 			page 167


 5896 0c80 64657669 		.ascii	"deviceId\000"
 5896      63654964 
 5896      00
 5897              	.LASF114:
 5898 0c89 77696467 		.ascii	"widgetStatus\000"
 5898      65745374 
 5898      61747573 
 5898      00
 5899              	.LASF113:
 5900 0c96 77696467 		.ascii	"widgetId\000"
 5900      65744964 
 5900      00
 5901              	.LASF160:
 5902 0c9f 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 5902      656E7365 
 5902      5F726571 
 5902      75657374 
 5902      5363616E 
 5903              	.LASF151:
 5904 0cbd 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 5904      656E7365 
 5904      5F537349 
 5904      6E697469 
 5904      616C697A 
 5905              	.LASF39:
 5906 0ce1 706F7369 		.ascii	"position\000"
 5906      74696F6E 
 5906      00
 5907              	.LASF51:
 5908 0cea 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 5908      656E7365 
 5908      5F52414D 
 5908      5F534E53 
 5908      5F4C4953 
 5909              	.LASF96:
 5910 0d07 77646774 		.ascii	"wdgtArray\000"
 5910      41727261 
 5910      7900
 5911              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
