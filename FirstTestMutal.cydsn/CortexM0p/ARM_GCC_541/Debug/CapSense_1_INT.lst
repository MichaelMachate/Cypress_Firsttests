ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsCSDPostScan,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsCSDPostScan, %function
  24              	CapSense_1_SsCSDPostScan:
  25              	.LFB3:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_INT.c"
   1:Generated_Source\PSoC4/CapSense_1_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_INT.c **** * \file CapSense_1_INT.c
   3:Generated_Source\PSoC4/CapSense_1_INT.c **** * \version 5.20
   4:Generated_Source\PSoC4/CapSense_1_INT.c **** *
   5:Generated_Source\PSoC4/CapSense_1_INT.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_INT.c **** *   This file contains the source code for implementation of the Component's
   7:Generated_Source\PSoC4/CapSense_1_INT.c **** *   Interrupt Service Routine (ISR).
   8:Generated_Source\PSoC4/CapSense_1_INT.c **** *
   9:Generated_Source\PSoC4/CapSense_1_INT.c **** * \see CapSense_1 v5.20 Datasheet
  10:Generated_Source\PSoC4/CapSense_1_INT.c **** *
  11:Generated_Source\PSoC4/CapSense_1_INT.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_1_INT.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_1_INT.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_INT.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_1_INT.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_1_INT.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_1_INT.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_1_INT.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_1_INT.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_1_INT.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_1_INT.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_1_INT.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_1_INT.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_1_INT.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_1_INT.c **** *
  26:Generated_Source\PSoC4/CapSense_1_INT.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_1_INT.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_1_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_1_INT.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_1_INT.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_1_INT.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_INT.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_1_INT.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_1_INT.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_1_INT.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_1_INT.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_1_INT.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_1_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_1_INT.c **** #include "cytypes.h"
  40:Generated_Source\PSoC4/CapSense_1_INT.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_1_INT.c **** #include "CapSense_1_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_1_INT.c **** #include "CapSense_1_Structure.h"
  43:Generated_Source\PSoC4/CapSense_1_INT.c **** #include "CapSense_1_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_1_INT.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  45:Generated_Source\PSoC4/CapSense_1_INT.c ****     #include "CapSense_1_SensingCSD_LL.h"
  46:Generated_Source\PSoC4/CapSense_1_INT.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  47:Generated_Source\PSoC4/CapSense_1_INT.c **** #include "cyapicallbacks.h"
  48:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  49:Generated_Source\PSoC4/CapSense_1_INT.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/CapSense_1_INT.c **** * Static Function Prototypes
  51:Generated_Source\PSoC4/CapSense_1_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC4/CapSense_1_INT.c **** /**
  53:Generated_Source\PSoC4/CapSense_1_INT.c **** * \cond SECTION_C_INTERNAL
  54:Generated_Source\PSoC4/CapSense_1_INT.c **** * \addtogroup group_c_internal
  55:Generated_Source\PSoC4/CapSense_1_INT.c **** * \{
  56:Generated_Source\PSoC4/CapSense_1_INT.c **** */
  57:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  58:Generated_Source\PSoC4/CapSense_1_INT.c **** #if (((CapSense_1_ENABLE == CapSense_1_CSD_EN) || (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)) && 
  59:Generated_Source\PSoC4/CapSense_1_INT.c ****      (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN))
  60:Generated_Source\PSoC4/CapSense_1_INT.c ****     static void CapSense_1_SsNextFrequencyScan(void);
  61:Generated_Source\PSoC4/CapSense_1_INT.c **** #endif /* (((CapSense_1_ENABLE == CapSense_1_CSD_EN) || (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN
  62:Generated_Source\PSoC4/CapSense_1_INT.c ****             (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)) */
  63:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  64:Generated_Source\PSoC4/CapSense_1_INT.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN))
  65:Generated_Source\PSoC4/CapSense_1_INT.c ****     static void CapSense_1_SsCSDPostScan(void);
  66:Generated_Source\PSoC4/CapSense_1_INT.c ****     static void CapSense_1_SsCSDInitNextScan(void);
  67:Generated_Source\PSoC4/CapSense_1_INT.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
  68:Generated_Source\PSoC4/CapSense_1_INT.c **** /** \}
  69:Generated_Source\PSoC4/CapSense_1_INT.c **** * \endcond */
  70:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  71:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  72:Generated_Source\PSoC4/CapSense_1_INT.c **** /**
  73:Generated_Source\PSoC4/CapSense_1_INT.c **** * \cond SECTION_C_INTERRUPT
  74:Generated_Source\PSoC4/CapSense_1_INT.c **** * \addtogroup group_c_interrupt
  75:Generated_Source\PSoC4/CapSense_1_INT.c **** * \{
  76:Generated_Source\PSoC4/CapSense_1_INT.c **** */
  77:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  78:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  79:Generated_Source\PSoC4/CapSense_1_INT.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN))
  80:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  81:Generated_Source\PSoC4/CapSense_1_INT.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  82:Generated_Source\PSoC4/CapSense_1_INT.c ****     /* Fourth-generation HW block part */
  83:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  84:Generated_Source\PSoC4/CapSense_1_INT.c ****     /*******************************************************************************
  85:Generated_Source\PSoC4/CapSense_1_INT.c ****     * Function Name: CapSense_1_CSDPostSingleScan
  86:Generated_Source\PSoC4/CapSense_1_INT.c ****     ****************************************************************************//**
  87:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
  88:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This is an internal ISR function for the single-sensor scanning implementation.
  90:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
  91:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \details
  92:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This ISR handler is triggered when the user calls the
  93:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_CSDScanExt() function.
  94:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
  95:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed for Third-generation HW block:
  96:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Disable the CSD interrupt.
  97:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
  98:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
  99:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Update the Scan Counter.
 100:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Reset the BUSY flag.
 101:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Enable the CSD interrupt.
 102:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 103:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed for Fourth-generation HW block:
 104:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Check if the raw data is not noisy.
 105:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 106:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 107:Generated_Source\PSoC4/CapSense_1_INT.c ****     *      multi-frequency is enabled.
 108:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Update the Scan Counter.
 109:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Reset the BUSY flag.
 110:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Enable the CSD interrupt.
 111:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 112:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next frequency
 113:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  channels when multi-frequency scanning is enabled.
 114:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 115:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This function has two Macro Callbacks that allow calling the user code
 116:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  from macros specified in Component's generated code. Refer to the
 117:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 118:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  for details.
 119:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 120:Generated_Source\PSoC4/CapSense_1_INT.c ****     *******************************************************************************/
 121:Generated_Source\PSoC4/CapSense_1_INT.c ****     CY_ISR(CapSense_1_CSDPostSingleScan)
 122:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 123:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_ENTRY_CALLBACK
 124:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_EntryCallback();
 125:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_ENTRY_CALLBACK */
 126:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 127:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Clear pending interrupt */
 128:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
 129:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 130:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN)
 131:Generated_Source\PSoC4/CapSense_1_INT.c ****             if ((CapSense_1_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_1_RESULT_VAL1_PTR) &
 132:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                         CapSense_1_RESULT_VAL1_BAD_CONVS_MASK) >>
 133:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                         CapSense_1_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 134:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                         (0u < CapSense_1_badConversionsNum))
 135:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 136:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Decrement bad conversions number */
 137:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_badConversionsNum--;
 138:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 139:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Start the re-scan */
 140:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_AZ0_SKIP_MASK |
 141:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                              CapSense_1_SEQ_START_AZ1_SKIP_MASK |
 142:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                              CapSense_1_SEQ_START_START_MASK);
 143:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 144:Generated_Source\PSoC4/CapSense_1_INT.c ****             else
 145:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN) */
 147:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 148:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsCSDPostScan();
 149:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 150:Generated_Source\PSoC4/CapSense_1_INT.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 151:Generated_Source\PSoC4/CapSense_1_INT.c ****                 if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 152:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 153:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Scan the next channel */
 154:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsNextFrequencyScan();
 155:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 156:Generated_Source\PSoC4/CapSense_1_INT.c ****                 else
 157:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 158:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 159:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 160:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 161:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 162:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
 163:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #else
 164:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
 165:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 166:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 167:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 168:Generated_Source\PSoC4/CapSense_1_INT.c ****                         /* Disable Fourth-generation HW block */
 169:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
 170:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 171:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 172:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Update Scan Counter */
 173:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_dsRam.scanCounter++;
 174:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 175:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 176:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_dsRam.status &= ~(CapSense_1_SW_STS_BUSY | CapSense_1_WDGT_SW_STS_BU
 177:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 178:Generated_Source\PSoC4/CapSense_1_INT.c ****             #else
 179:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 180:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 181:Generated_Source\PSoC4/CapSense_1_INT.c ****                         /* Disable Fourth-generation HW block */
 182:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
 183:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 184:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 185:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Update Scan Counter */
 186:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_dsRam.scanCounter++;
 187:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 188:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 189:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_dsRam.status &= ~(CapSense_1_SW_STS_BUSY | CapSense_1_WDGT_SW_STS_BU
 190:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 191:Generated_Source\PSoC4/CapSense_1_INT.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 192:Generated_Source\PSoC4/CapSense_1_INT.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN)
 193:Generated_Source\PSoC4/CapSense_1_INT.c ****         }
 194:Generated_Source\PSoC4/CapSense_1_INT.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN) */
 195:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 196:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_EXIT_CALLBACK
 197:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_ExitCallback();
 198:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_EXIT_CALLBACK */
 199:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 200:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 201:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 202:Generated_Source\PSoC4/CapSense_1_INT.c ****     /*******************************************************************************
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_INT.c ****     * Function Name: CapSense_1_CSDPostMultiScan
 204:Generated_Source\PSoC4/CapSense_1_INT.c ****     ****************************************************************************//**
 205:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 206:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \brief
 207:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 208:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  implementation.
 209:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 210:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \details
 211:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This ISR handler is triggered when the user calls the
 212:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_Scan() or CapSense_1_ScanAllWidgets() APIs.
 213:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 214:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed:
 215:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Disable the CSD interrupt.
 216:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 217:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 218:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 219:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Update the Scan Counter.
 220:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Reset the BUSY flag.
 221:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    7. Enable the CSD interrupt.
 222:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 223:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 224:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  widget has more than one sensor.
 225:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 226:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_ScanAllWidgets() APIs are called and the project has
 227:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  more than one widget.
 228:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 229:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 230:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 231:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 232:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 233:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 234:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  for details.
 235:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 236:Generated_Source\PSoC4/CapSense_1_INT.c ****     *******************************************************************************/
 237:Generated_Source\PSoC4/CapSense_1_INT.c ****     CY_ISR(CapSense_1_CSDPostMultiScan)
 238:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 239:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address */
 240:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
 241:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                           CapSense_1_dsFlash.wdgtArray[CapSense_1_w
 242:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                           + CapSense_1_sensorIndex;
 243:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 244:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_ENTRY_CALLBACK
 245:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_EntryCallback();
 246:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_ENTRY_CALLBACK */
 247:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 248:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Clear pending interrupt */
 249:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
 250:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 251:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN)
 252:Generated_Source\PSoC4/CapSense_1_INT.c ****             if ((CapSense_1_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_1_RESULT_VAL1_PTR) &
 253:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                       CapSense_1_RESULT_VAL1_BAD_CONVS_MASK) >>
 254:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                       CapSense_1_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 255:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                       (0u < CapSense_1_badConversionsNum))
 256:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 257:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Decrement bad conversions number */
 258:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_badConversionsNum--;
 259:Generated_Source\PSoC4/CapSense_1_INT.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Start the re-scan */
 261:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_AZ0_SKIP_MASK |
 262:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                              CapSense_1_SEQ_START_AZ1_SKIP_MASK |
 263:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                              CapSense_1_SEQ_START_START_MASK);
 264:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 265:Generated_Source\PSoC4/CapSense_1_INT.c ****             else
 266:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 267:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN) */
 268:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 269:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsCSDPostScan();
 270:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 271:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 272:Generated_Source\PSoC4/CapSense_1_INT.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 273:Generated_Source\PSoC4/CapSense_1_INT.c ****                 if (CapSense_1_FREQ_CHANNEL_2 == CapSense_1_scanFreqIndex)
 274:Generated_Source\PSoC4/CapSense_1_INT.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 275:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 276:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Disable sensor */
 277:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_CSDDisconnectSns(curSnsIOPtr);
 278:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 279:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 280:Generated_Source\PSoC4/CapSense_1_INT.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 281:Generated_Source\PSoC4/CapSense_1_INT.c ****                 if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 282:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 283:Generated_Source\PSoC4/CapSense_1_INT.c ****                      /* Scan the next channel */
 284:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsNextFrequencyScan();
 285:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 286:Generated_Source\PSoC4/CapSense_1_INT.c ****                 else
 287:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 288:Generated_Source\PSoC4/CapSense_1_INT.c ****                      /* All channels are scanned. Set IMO to zero channel */
 289:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 290:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 291:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 292:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
 293:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #else
 294:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
 295:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 296:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 297:Generated_Source\PSoC4/CapSense_1_INT.c ****                      /* Scan the next sensor */
 298:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsCSDInitNextScan();
 299:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 300:Generated_Source\PSoC4/CapSense_1_INT.c ****             #else
 301:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Scan the next sensor */
 302:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsCSDInitNextScan();
 303:Generated_Source\PSoC4/CapSense_1_INT.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 304:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN)
 305:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 306:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN) */
 307:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 308:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_EXIT_CALLBACK
 309:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_ExitCallback();
 310:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_EXIT_CALLBACK */
 311:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 312:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 313:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 314:Generated_Source\PSoC4/CapSense_1_INT.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 315:Generated_Source\PSoC4/CapSense_1_INT.c ****     /*******************************************************************************
 316:Generated_Source\PSoC4/CapSense_1_INT.c ****     * Function Name: CapSense_1_CSDPostMultiScanGanged
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_INT.c ****     ****************************************************************************//**
 318:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 319:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \brief
 320:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 321:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  implementation for ganged sensors.
 322:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 323:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \details
 324:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This ISR handler is triggered when the user calls the
 325:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_Scan() API for a ganged sensor or the
 326:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_ScanAllWidgets() API in the project with ganged sensors.
 327:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 328:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed:
 329:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Disable the CSD interrupt.
 330:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 331:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 332:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 333:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Update the Scan Counter.
 334:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Reset the BUSY flag.
 335:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    7. Enable the CSD interrupt.
 336:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 337:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 338:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  widget has more than one sensor.
 339:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 340:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_ScanAllWidgets() APIs are called and the project has
 341:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  more than one widget.
 342:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 343:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 344:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 345:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 346:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 347:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 348:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  for details.
 349:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 350:Generated_Source\PSoC4/CapSense_1_INT.c ****     *******************************************************************************/
 351:Generated_Source\PSoC4/CapSense_1_INT.c ****     CY_ISR(CapSense_1_CSDPostMultiScanGanged)
 352:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 353:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_ENTRY_CALLBACK
 354:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_EntryCallback();
 355:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_ENTRY_CALLBACK */
 356:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 357:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Clear pending interrupt */
 358:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
 359:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 360:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN)
 361:Generated_Source\PSoC4/CapSense_1_INT.c ****             if ((CapSense_1_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_1_RESULT_VAL1_PTR) &
 362:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                       CapSense_1_RESULT_VAL1_BAD_CONVS_MASK) >>
 363:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                       CapSense_1_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 364:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                       (0u < CapSense_1_badConversionsNum))
 365:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 366:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Decrement bad conversions number */
 367:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_badConversionsNum--;
 368:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 369:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Start the re-scan */
 370:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_AZ0_SKIP_MASK |
 371:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                              CapSense_1_SEQ_START_AZ1_SKIP_MASK |
 372:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                              CapSense_1_SEQ_START_START_MASK);
 373:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_INT.c ****             else
 375:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 376:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN) */
 377:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 378:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsCSDPostScan();
 379:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 380:Generated_Source\PSoC4/CapSense_1_INT.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 381:Generated_Source\PSoC4/CapSense_1_INT.c ****                 if (CapSense_1_FREQ_CHANNEL_2 == CapSense_1_scanFreqIndex)
 382:Generated_Source\PSoC4/CapSense_1_INT.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 383:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 384:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsCSDDisconnectSnsExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1
 385:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 386:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 387:Generated_Source\PSoC4/CapSense_1_INT.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 388:Generated_Source\PSoC4/CapSense_1_INT.c ****                 if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 389:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 390:Generated_Source\PSoC4/CapSense_1_INT.c ****                      /* Scan the next channel */
 391:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsNextFrequencyScan();
 392:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 393:Generated_Source\PSoC4/CapSense_1_INT.c ****                 else
 394:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 395:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 396:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 397:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 398:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 399:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
 400:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #else
 401:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
 402:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 403:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 404:Generated_Source\PSoC4/CapSense_1_INT.c ****                      /* Scan the next sensor */
 405:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsCSDInitNextScan();
 406:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 407:Generated_Source\PSoC4/CapSense_1_INT.c ****             #else
 408:Generated_Source\PSoC4/CapSense_1_INT.c ****                  /* Scan the next sensor */
 409:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsCSDInitNextScan();
 410:Generated_Source\PSoC4/CapSense_1_INT.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 411:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN)
 412:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 413:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN) */
 414:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 415:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_EXIT_CALLBACK
 416:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_ExitCallback();
 417:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_EXIT_CALLBACK */
 418:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 419:Generated_Source\PSoC4/CapSense_1_INT.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 420:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 421:Generated_Source\PSoC4/CapSense_1_INT.c **** #else
 422:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 423:Generated_Source\PSoC4/CapSense_1_INT.c ****     /* Third-generation HW block part */
 424:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 425:Generated_Source\PSoC4/CapSense_1_INT.c ****     /*******************************************************************************
 426:Generated_Source\PSoC4/CapSense_1_INT.c ****     * Function Name: CapSense_1_CSDPostSingleScan
 427:Generated_Source\PSoC4/CapSense_1_INT.c ****     ****************************************************************************//**
 428:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 429:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \brief
 430:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This is an internal ISR function for the single-sensor scanning implementation.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 9


 431:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 432:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \details
 433:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This ISR handler is triggered when the user calls the
 434:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_CSDScanExt() function.
 435:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 436:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed for Third-generation HW block:
 437:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Disable the CSD interrupt.
 438:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 439:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 440:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Update the Scan Counter.
 441:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Reset the BUSY flag.
 442:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Enable the CSD interrupt.
 443:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 444:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed for Fourth-generation HW block:
 445:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Check if the raw data is not noisy.
 446:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 447:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 448:Generated_Source\PSoC4/CapSense_1_INT.c ****     *      multi-frequency is enabled.
 449:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Update the Scan Counter.
 450:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Reset the BUSY flag.
 451:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Enable the CSD interrupt.
 452:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 453:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next frequency
 454:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  channels when multi-frequency scanning is enabled.
 455:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 456:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This function has two Macro Callbacks that allow calling the user code
 457:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  from macros specified in Component's generated code. Refer to the
 458:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 459:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  for details.
 460:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 461:Generated_Source\PSoC4/CapSense_1_INT.c ****     *******************************************************************************/
 462:Generated_Source\PSoC4/CapSense_1_INT.c ****     CY_ISR(CapSense_1_CSDPostSingleScan)
 463:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 464:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_ENTRY_CALLBACK
 465:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_EntryCallback();
 466:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_ENTRY_CALLBACK */
 467:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 468:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Clear pending interrupt */
 469:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
 470:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 471:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Read Rawdata */
 472:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_SsCSDPostScan();
 473:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 474:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 475:Generated_Source\PSoC4/CapSense_1_INT.c ****             if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 476:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 477:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 478:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHAR
 479:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 480:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsNextFrequencyScan();
 481:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 482:Generated_Source\PSoC4/CapSense_1_INT.c ****             else
 483:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 484:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 485:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 486:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 487:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 10


 488:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #else
 489:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
 490:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 491:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 492:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 493:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Disable Third-generation HW block. Connect Vref Buffer to AMUX bus */
 494:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 495:Generated_Source\PSoC4/CapSense_1_INT.c ****                          (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 496:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CMOD_
 497:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #else
 498:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK
 499:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC
 500:Generated_Source\PSoC4/CapSense_1_INT.c ****                                (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 501:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #else
 502:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 503:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRE
 504:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 505:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 506:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Update Scan Counter */
 507:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_dsRam.scanCounter++;
 508:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 509:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 510:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_dsRam.status &= ~(CapSense_1_SW_STS_BUSY | CapSense_1_WDGT_SW_STS_BUSY);
 511:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 512:Generated_Source\PSoC4/CapSense_1_INT.c ****         #else
 513:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 514:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 515:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Disable Third-generation HW block. Connect Vref Buffer to AMUX bus */
 516:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 517:Generated_Source\PSoC4/CapSense_1_INT.c ****                          (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 518:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CMOD_
 519:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #else
 520:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK
 521:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC
 522:Generated_Source\PSoC4/CapSense_1_INT.c ****                                (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 523:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #else
 524:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 525:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRE
 526:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 527:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 528:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Update Scan Counter */
 529:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_dsRam.scanCounter++;
 530:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 531:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 532:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_dsRam.status &= ~(CapSense_1_SW_STS_BUSY | CapSense_1_WDGT_SW_STS_BUSY);
 533:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 534:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 535:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 536:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_EXIT_CALLBACK
 537:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_ExitCallback();
 538:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_EXIT_CALLBACK */
 539:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 540:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 541:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 542:Generated_Source\PSoC4/CapSense_1_INT.c ****     /*******************************************************************************
 543:Generated_Source\PSoC4/CapSense_1_INT.c ****     * Function Name: CapSense_1_CSDPostMultiScan
 544:Generated_Source\PSoC4/CapSense_1_INT.c ****     ****************************************************************************//**
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 11


 545:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 546:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \brief
 547:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 548:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  implementation.
 549:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 550:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \details
 551:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This ISR handler is triggered when the user calls the
 552:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_Scan() or CapSense_1_ScanAllWidgets() APIs.
 553:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 554:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed:
 555:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Disable the CSD interrupt.
 556:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 557:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 558:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 559:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Update the Scan Counter.
 560:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Reset the BUSY flag.
 561:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    7. Enable the CSD interrupt.
 562:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 563:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 564:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  widget has more than one sensor.
 565:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 566:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_ScanAllWidgets() APIs are called and the project has
 567:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  more than one widget.
 568:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 569:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 570:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 571:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 572:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 573:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 574:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  for details.
 575:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 576:Generated_Source\PSoC4/CapSense_1_INT.c ****     *******************************************************************************/
 577:Generated_Source\PSoC4/CapSense_1_INT.c ****     CY_ISR(CapSense_1_CSDPostMultiScan)
 578:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 579:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address        */
 580:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
 581:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                           CapSense_1_dsFlash.wdgtArray[CapSense_1_w
 582:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                           + CapSense_1_sensorIndex;
 583:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 584:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_ENTRY_CALLBACK
 585:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_EntryCallback();
 586:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_ENTRY_CALLBACK */
 587:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 588:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Clear pending interrupt */
 589:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
 590:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 591:Generated_Source\PSoC4/CapSense_1_INT.c ****          /* Read Rawdata */
 592:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_SsCSDPostScan();
 593:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 594:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Connect Vref Buffer to AMUX bus */
 595:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_CONFI
 596:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 597:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 598:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 599:Generated_Source\PSoC4/CapSense_1_INT.c ****             if (CapSense_1_FREQ_CHANNEL_2 == CapSense_1_scanFreqIndex)
 600:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 601:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Disable sensor */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 12


 602:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_CSDDisconnectSns(curSnsIOPtr);
 603:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 604:Generated_Source\PSoC4/CapSense_1_INT.c ****         #else
 605:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Disable sensor */
 606:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_CSDDisconnectSns(curSnsIOPtr);
 607:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 608:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 609:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 610:Generated_Source\PSoC4/CapSense_1_INT.c ****             if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 611:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 612:Generated_Source\PSoC4/CapSense_1_INT.c ****                  /* Scan the next channel */
 613:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsNextFrequencyScan();
 614:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 615:Generated_Source\PSoC4/CapSense_1_INT.c ****             else
 616:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 617:Generated_Source\PSoC4/CapSense_1_INT.c ****                  /* All channels are scanned. Set IMO to zero channel */
 618:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 619:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 620:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 621:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
 622:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #else
 623:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
 624:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 625:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 626:Generated_Source\PSoC4/CapSense_1_INT.c ****                  /* Scan the next sensor */
 627:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsCSDInitNextScan();
 628:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 629:Generated_Source\PSoC4/CapSense_1_INT.c ****         #else
 630:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Scan the next sensor */
 631:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsCSDInitNextScan();
 632:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 633:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 634:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_EXIT_CALLBACK
 635:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_ExitCallback();
 636:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_EXIT_CALLBACK */
 637:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 638:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 639:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 640:Generated_Source\PSoC4/CapSense_1_INT.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 641:Generated_Source\PSoC4/CapSense_1_INT.c ****     /*******************************************************************************
 642:Generated_Source\PSoC4/CapSense_1_INT.c ****     * Function Name: CapSense_1_CSDPostMultiScanGanged
 643:Generated_Source\PSoC4/CapSense_1_INT.c ****     ****************************************************************************//**
 644:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 645:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \brief
 646:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 647:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  implementation for ganged sensors.
 648:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 649:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \details
 650:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This ISR handler is triggered when the user calls the
 651:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_Scan() API for a ganged sensor or the
 652:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_ScanAllWidgets() API in the project with ganged sensors.
 653:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 654:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed:
 655:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Disable the CSD interrupt.
 656:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 657:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 658:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 13


 659:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Update the Scan Counter.
 660:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Reset the BUSY flag.
 661:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    7. Enable the CSD interrupt.
 662:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 663:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 664:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  widget has more than one sensor.
 665:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 666:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_ScanAllWidgets() APIs are called and the project has
 667:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  more than one widget.
 668:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 669:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 670:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 671:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 672:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 673:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 674:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  for details.
 675:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 676:Generated_Source\PSoC4/CapSense_1_INT.c ****     *******************************************************************************/
 677:Generated_Source\PSoC4/CapSense_1_INT.c ****     CY_ISR(CapSense_1_CSDPostMultiScanGanged)
 678:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 679:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_ENTRY_CALLBACK
 680:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_EntryCallback();
 681:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_ENTRY_CALLBACK */
 682:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 683:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Clear pending interrupt */
 684:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
 685:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 686:Generated_Source\PSoC4/CapSense_1_INT.c ****          /* Read Rawdata */
 687:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_SsCSDPostScan();
 688:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 689:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Connect Vref Buffer to AMUX bus */
 690:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_CONFI
 691:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 692:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 693:Generated_Source\PSoC4/CapSense_1_INT.c ****             if (CapSense_1_FREQ_CHANNEL_2 == CapSense_1_scanFreqIndex)
 694:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 695:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsCSDDisconnectSnsExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1
 696:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 697:Generated_Source\PSoC4/CapSense_1_INT.c ****         #else
 698:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsCSDDisconnectSnsExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sen
 699:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 700:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 701:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 702:Generated_Source\PSoC4/CapSense_1_INT.c ****             if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 703:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 704:Generated_Source\PSoC4/CapSense_1_INT.c ****                  /* Scan the next channel */
 705:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsNextFrequencyScan();
 706:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 707:Generated_Source\PSoC4/CapSense_1_INT.c ****             else
 708:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 709:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* All channels are scanned. Set IMO to zero channel */
 710:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 711:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 712:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 713:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
 714:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #else
 715:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 14


 716:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 717:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 718:Generated_Source\PSoC4/CapSense_1_INT.c ****                  /* Scan the next sensor */
 719:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsCSDInitNextScan();
 720:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 721:Generated_Source\PSoC4/CapSense_1_INT.c ****         #else
 722:Generated_Source\PSoC4/CapSense_1_INT.c ****              /* Scan the next sensor */
 723:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsCSDInitNextScan();
 724:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 725:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 726:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_EXIT_CALLBACK
 727:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_ExitCallback();
 728:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_EXIT_CALLBACK */
 729:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 730:Generated_Source\PSoC4/CapSense_1_INT.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 731:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 732:Generated_Source\PSoC4/CapSense_1_INT.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 733:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 734:Generated_Source\PSoC4/CapSense_1_INT.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
 735:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 736:Generated_Source\PSoC4/CapSense_1_INT.c **** /** \}
 737:Generated_Source\PSoC4/CapSense_1_INT.c ****  * \endcond */
 738:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 739:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 740:Generated_Source\PSoC4/CapSense_1_INT.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN))
 741:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 742:Generated_Source\PSoC4/CapSense_1_INT.c **** /*******************************************************************************
 743:Generated_Source\PSoC4/CapSense_1_INT.c **** * Function Name: CapSense_1_SsCSDPostScan
 744:Generated_Source\PSoC4/CapSense_1_INT.c **** ****************************************************************************//**
 745:Generated_Source\PSoC4/CapSense_1_INT.c **** *
 746:Generated_Source\PSoC4/CapSense_1_INT.c **** * \brief
 747:Generated_Source\PSoC4/CapSense_1_INT.c **** *   This function reads rawdata and releases required HW resources after scan.
 748:Generated_Source\PSoC4/CapSense_1_INT.c **** *
 749:Generated_Source\PSoC4/CapSense_1_INT.c **** * \details
 750:Generated_Source\PSoC4/CapSense_1_INT.c **** *   This function performs following tasks after scan:
 751:Generated_Source\PSoC4/CapSense_1_INT.c **** *   - Reads SlotResult from Raw Counter;
 752:Generated_Source\PSoC4/CapSense_1_INT.c **** *   - Inits bad Conversions number;
 753:Generated_Source\PSoC4/CapSense_1_INT.c **** *   - Disconnects Vrefhi from AMUBUF positive input;
 754:Generated_Source\PSoC4/CapSense_1_INT.c **** *   - Disconnects AMUBUF output from CSDBUSB with sych PHI2+HSCMP;
 755:Generated_Source\PSoC4/CapSense_1_INT.c **** *   - Opens HCBV and HCBG switches.
 756:Generated_Source\PSoC4/CapSense_1_INT.c **** *
 757:Generated_Source\PSoC4/CapSense_1_INT.c **** *******************************************************************************/
 758:Generated_Source\PSoC4/CapSense_1_INT.c **** static void CapSense_1_SsCSDPostScan(void)
 759:Generated_Source\PSoC4/CapSense_1_INT.c **** {
  27              		.loc 1 759 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 760:Generated_Source\PSoC4/CapSense_1_INT.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 761:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 762:Generated_Source\PSoC4/CapSense_1_INT.c ****         uint32 tmpRawData;
 763:Generated_Source\PSoC4/CapSense_1_INT.c ****         uint32 tmpMaxCount;
 764:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 765:Generated_Source\PSoC4/CapSense_1_INT.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
  32              		.loc 1 765 0
  33 0000 0E4B     		ldr	r3, .L4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 15


  34 0002 1B78     		ldrb	r3, [r3]
 764:Generated_Source\PSoC4/CapSense_1_INT.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
  35              		.loc 1 764 0
  36 0004 5B01     		lsls	r3, r3, #5
  37 0006 0E4A     		ldr	r2, .L4+4
  38 0008 D318     		adds	r3, r2, r3
  39 000a 5B68     		ldr	r3, [r3, #4]
  40              	.LVL0:
 766:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 767:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Read SlotResult from Raw Counter */
 768:Generated_Source\PSoC4/CapSense_1_INT.c ****         tmpRawData = CapSense_1_RESULT_VAL1_VALUE_MASK & CY_GET_REG32(CapSense_1_COUNTER_PTR);
  41              		.loc 1 768 0
  42 000c 0D4A     		ldr	r2, .L4+8
  43 000e 1168     		ldr	r1, [r2]
  44 0010 0A04     		lsls	r2, r1, #16
  45 0012 120C     		lsrs	r2, r2, #16
  46              	.LVL1:
 769:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 770:Generated_Source\PSoC4/CapSense_1_INT.c ****         tmpMaxCount = ((1uL << ptrWdgt->resolution) - 1uL);
  47              		.loc 1 770 0
  48 0014 1888     		ldrh	r0, [r3]
  49 0016 0123     		movs	r3, #1
  50              	.LVL2:
  51 0018 8340     		lsls	r3, r3, r0
  52 001a 013B     		subs	r3, r3, #1
  53              	.LVL3:
 771:Generated_Source\PSoC4/CapSense_1_INT.c ****         if(tmpRawData < tmpMaxCount)
  54              		.loc 1 771 0
  55 001c 9A42     		cmp	r2, r3
  56 001e 06D2     		bcs	.L2
 772:Generated_Source\PSoC4/CapSense_1_INT.c ****         {
 773:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] = LO16(tmpRawData);
  57              		.loc 1 773 0
  58 0020 094B     		ldr	r3, .L4+12
  59              	.LVL4:
  60 0022 1A68     		ldr	r2, [r3]
  61              	.LVL5:
  62 0024 094B     		ldr	r3, .L4+16
  63 0026 1B78     		ldrb	r3, [r3]
  64 0028 5B00     		lsls	r3, r3, #1
  65 002a D152     		strh	r1, [r2, r3]
  66 002c 05E0     		b	.L1
  67              	.LVL6:
  68              	.L2:
 774:Generated_Source\PSoC4/CapSense_1_INT.c ****         }
 775:Generated_Source\PSoC4/CapSense_1_INT.c ****         else
 776:Generated_Source\PSoC4/CapSense_1_INT.c ****         {
 777:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] = LO16(tmpMaxCount);
  69              		.loc 1 777 0
  70 002e 064A     		ldr	r2, .L4+12
  71              	.LVL7:
  72 0030 1168     		ldr	r1, [r2]
  73              	.LVL8:
  74 0032 064A     		ldr	r2, .L4+16
  75 0034 1278     		ldrb	r2, [r2]
  76 0036 5200     		lsls	r2, r2, #1
  77 0038 8B52     		strh	r3, [r1, r2]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 16


  78              	.LVL9:
  79              	.L1:
 778:Generated_Source\PSoC4/CapSense_1_INT.c ****         }
 779:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 780:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN)
 781:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Init bad Conversions number */
 782:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_badConversionsNum = CapSense_1_BAD_CONVERSIONS_NUM;
 783:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN) */
 784:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 785:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 786:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Open HCBV and HCBG switches */
 787:Generated_Source\PSoC4/CapSense_1_INT.c ****             CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR, CapSense_1_SW_SHIELD_SEL_SW_HCBV_STATIC_OPEN
 788:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                              CapSense_1_SW_SHIELD_SEL_SW_HCBG_STATI
 789:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 790:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 791:Generated_Source\PSoC4/CapSense_1_INT.c ****     #else
 792:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 793:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Read SlotResult from Raw Counter */
 794:Generated_Source\PSoC4/CapSense_1_INT.c ****        CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] = (uint16)CY_GET_REG32(CapSense_1_COU
 795:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 796:Generated_Source\PSoC4/CapSense_1_INT.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 797:Generated_Source\PSoC4/CapSense_1_INT.c **** }
  80              		.loc 1 797 0
  81              		@ sp needed
  82 003a 7047     		bx	lr
  83              	.L5:
  84              		.align	2
  85              	.L4:
  86 003c 00000000 		.word	CapSense_1_widgetIndex
  87 0040 00000000 		.word	CapSense_1_dsFlash
  88 0044 D0000B40 		.word	1074462928
  89 0048 00000000 		.word	CapSense_1_curRamSnsPtr
  90 004c 00000000 		.word	CapSense_1_scanFreqIndex
  91              		.cfi_endproc
  92              	.LFE3:
  93              		.size	CapSense_1_SsCSDPostScan, .-CapSense_1_SsCSDPostScan
  94              		.section	.text.CapSense_1_SsCSDInitNextScan,"ax",%progbits
  95              		.align	2
  96              		.code	16
  97              		.thumb_func
  98              		.type	CapSense_1_SsCSDInitNextScan, %function
  99              	CapSense_1_SsCSDInitNextScan:
 100              	.LFB4:
 798:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 799:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 800:Generated_Source\PSoC4/CapSense_1_INT.c **** /*******************************************************************************
 801:Generated_Source\PSoC4/CapSense_1_INT.c **** * Function Name: CapSense_1_SsCSDInitNextScan
 802:Generated_Source\PSoC4/CapSense_1_INT.c **** ****************************************************************************//**
 803:Generated_Source\PSoC4/CapSense_1_INT.c **** *
 804:Generated_Source\PSoC4/CapSense_1_INT.c **** * \brief
 805:Generated_Source\PSoC4/CapSense_1_INT.c **** *   This function initializes the next sensor scan.
 806:Generated_Source\PSoC4/CapSense_1_INT.c **** *
 807:Generated_Source\PSoC4/CapSense_1_INT.c **** * \details
 808:Generated_Source\PSoC4/CapSense_1_INT.c **** *   The function increments the sensor index, updates sense clock for matrix
 809:Generated_Source\PSoC4/CapSense_1_INT.c **** *   or touchpad widgets only, sets up Compensation IDAC, enables the sensor and
 810:Generated_Source\PSoC4/CapSense_1_INT.c **** *   scans it. When all the sensors are scanned it continues to set up the next widget
 811:Generated_Source\PSoC4/CapSense_1_INT.c **** *   until all the widgets are scanned. The CSD block is disabled when all the widgets are
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 17


 812:Generated_Source\PSoC4/CapSense_1_INT.c **** *   scanned.
 813:Generated_Source\PSoC4/CapSense_1_INT.c **** *
 814:Generated_Source\PSoC4/CapSense_1_INT.c **** *******************************************************************************/
 815:Generated_Source\PSoC4/CapSense_1_INT.c **** static void CapSense_1_SsCSDInitNextScan(void)
 816:Generated_Source\PSoC4/CapSense_1_INT.c **** {
 101              		.loc 1 816 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105 0000 70B5     		push	{r4, r5, r6, lr}
 106              		.cfi_def_cfa_offset 16
 107              		.cfi_offset 4, -16
 108              		.cfi_offset 5, -12
 109              		.cfi_offset 6, -8
 110              		.cfi_offset 14, -4
 817:Generated_Source\PSoC4/CapSense_1_INT.c ****     /* Declare and initialize ptr to widget and sensor structures to appropriate address */
 818:Generated_Source\PSoC4/CapSense_1_INT.c ****     #if (((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) || \
 819:Generated_Source\PSoC4/CapSense_1_INT.c ****           (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)) || \
 820:Generated_Source\PSoC4/CapSense_1_INT.c ****           (((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) && \
 821:Generated_Source\PSoC4/CapSense_1_INT.c ****           (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 822:Generated_Source\PSoC4/CapSense_1_INT.c ****           (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN))))
 823:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 824:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_wid
 111              		.loc 1 824 0
 112 0002 224B     		ldr	r3, .L10
 113 0004 1A78     		ldrb	r2, [r3]
 823:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_wid
 114              		.loc 1 823 0
 115 0006 2249     		ldr	r1, .L10+4
 116 0008 5201     		lsls	r2, r2, #5
 117 000a 8A18     		adds	r2, r1, r2
 118 000c 5068     		ldr	r0, [r2, #4]
 119              	.LVL10:
 825:Generated_Source\PSoC4/CapSense_1_INT.c ****     #endif
 826:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 827:Generated_Source\PSoC4/CapSense_1_INT.c ****     /* Check if all the sensors are scanned in widget */
 828:Generated_Source\PSoC4/CapSense_1_INT.c ****     if (((uint8)CapSense_1_dsFlash.wdgtArray[(CapSense_1_widgetIndex)].totalNumSns - 1u) > CapSense
 120              		.loc 1 828 0
 121 000e 1B78     		ldrb	r3, [r3]
 122 0010 5B01     		lsls	r3, r3, #5
 123 0012 CB18     		adds	r3, r1, r3
 124 0014 1A7E     		ldrb	r2, [r3, #24]
 125 0016 013A     		subs	r2, r2, #1
 126 0018 1E4B     		ldr	r3, .L10+8
 127 001a 1B78     		ldrb	r3, [r3]
 128 001c DBB2     		uxtb	r3, r3
 129 001e 9A42     		cmp	r2, r3
 130 0020 1CD9     		bls	.L7
 829:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 830:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Increment sensor index to configure next sensor in widget */
 831:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_sensorIndex++;
 131              		.loc 1 831 0
 132 0022 1C4C     		ldr	r4, .L10+8
 133 0024 2378     		ldrb	r3, [r4]
 134 0026 0133     		adds	r3, r3, #1
 135 0028 DBB2     		uxtb	r3, r3
 136 002a 2370     		strb	r3, [r4]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 18


 832:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 833:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Update global pointer to CapSense_1_RAM_SNS_STRUCT to current sensor  */
 834:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
 137              		.loc 1 834 0
 138 002c 174D     		ldr	r5, .L10
 139 002e 2B78     		ldrb	r3, [r5]
 835:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                   CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetInd
 140              		.loc 1 835 0
 141 0030 5B01     		lsls	r3, r3, #5
 142 0032 CB18     		adds	r3, r1, r3
 143 0034 9968     		ldr	r1, [r3, #8]
 836:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                   + CapSense_1_sensorIndex;
 144              		.loc 1 836 0
 145 0036 2378     		ldrb	r3, [r4]
 146 0038 DBB2     		uxtb	r3, r3
 147 003a 9A00     		lsls	r2, r3, #2
 148 003c D318     		adds	r3, r2, r3
 149 003e 5A00     		lsls	r2, r3, #1
 150 0040 8A18     		adds	r2, r1, r2
 834:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                   CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetInd
 151              		.loc 1 834 0
 152 0042 154B     		ldr	r3, .L10+12
 153 0044 1A60     		str	r2, [r3]
 837:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 838:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Configure clock divider to row or column */
 839:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) && \
 840:Generated_Source\PSoC4/CapSense_1_INT.c ****              (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN))
 841:Generated_Source\PSoC4/CapSense_1_INT.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
 842:Generated_Source\PSoC4/CapSense_1_INT.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
 843:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 844:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsCSDConfigClock();
 845:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 846:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 847:Generated_Source\PSoC4/CapSense_1_INT.c ****                      /* Set up scanning resolution */
 848:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsCSDCalculateScanDuration(ptrWdgt);
 849:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 850:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 851:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) && \
 852:Generated_Source\PSoC4/CapSense_1_INT.c ****                    (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN))) */
 853:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 854:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Setup Compensation IDAC for next sensor in widget */
 855:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) || \
 856:Generated_Source\PSoC4/CapSense_1_INT.c ****              (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN))
 857:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
 154              		.loc 1 857 0
 155 0046 FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 156              	.LVL11:
 858:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) || \
 859:Generated_Source\PSoC4/CapSense_1_INT.c ****                    (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)) */
 860:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 861:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Enable sensor */
 862:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_SsCSDConnectSensorExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sensorI
 157              		.loc 1 862 0
 158 004a 2878     		ldrb	r0, [r5]
 159 004c C0B2     		uxtb	r0, r0
 160 004e 2178     		ldrb	r1, [r4]
 161 0050 C9B2     		uxtb	r1, r1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 19


 162 0052 FFF7FEFF 		bl	CapSense_1_SsCSDConnectSensorExt
 163              	.LVL12:
 863:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 864:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Proceed scanning */
 865:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_SsCSDStartSample();
 164              		.loc 1 865 0
 165 0056 FFF7FEFF 		bl	CapSense_1_SsCSDStartSample
 166              	.LVL13:
 167 005a 16E0     		b	.L6
 168              	.LVL14:
 169              	.L7:
 866:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 867:Generated_Source\PSoC4/CapSense_1_INT.c ****     /* Call scan next widget API if requested, if not, complete the scan  */
 868:Generated_Source\PSoC4/CapSense_1_INT.c ****     else
 869:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 870:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_sensorIndex = 0u;
 170              		.loc 1 870 0
 171 005c 0022     		movs	r2, #0
 172 005e 0D4B     		ldr	r3, .L10+8
 173 0060 1A70     		strb	r2, [r3]
 871:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 872:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Current widget is totally scanned. Reset WIDGET BUSY flag */
 873:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_dsRam.status &= ~CapSense_1_WDGT_SW_STS_BUSY;
 174              		.loc 1 873 0
 175 0062 0E4A     		ldr	r2, .L10+16
 176 0064 D168     		ldr	r1, [r2, #12]
 177 0066 0E4B     		ldr	r3, .L10+20
 178 0068 0B40     		ands	r3, r1
 179 006a D360     		str	r3, [r2, #12]
 874:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 875:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Check if all the widgets have been scanned */
 876:Generated_Source\PSoC4/CapSense_1_INT.c ****         if (CapSense_1_ENABLE == CapSense_1_requestScanAllWidget)
 180              		.loc 1 876 0
 181 006c 0D4B     		ldr	r3, .L10+24
 182 006e 1B78     		ldrb	r3, [r3]
 183 0070 012B     		cmp	r3, #1
 184 0072 02D1     		bne	.L9
 877:Generated_Source\PSoC4/CapSense_1_INT.c ****         {
 878:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Configure and begin scanning next widget */
 879:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsPostAllWidgetsScan();
 185              		.loc 1 879 0
 186 0074 FFF7FEFF 		bl	CapSense_1_SsPostAllWidgetsScan
 187              	.LVL15:
 188 0078 07E0     		b	.L6
 189              	.LVL16:
 190              	.L9:
 880:Generated_Source\PSoC4/CapSense_1_INT.c ****         }
 881:Generated_Source\PSoC4/CapSense_1_INT.c ****         else
 882:Generated_Source\PSoC4/CapSense_1_INT.c ****         {
 883:Generated_Source\PSoC4/CapSense_1_INT.c ****             #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 884:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 885:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Disable the CSD block */
 886:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
 887:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #else
 888:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Disable the CSD block. Connect Vref Buffer to AMUX bus */
 889:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 890:Generated_Source\PSoC4/CapSense_1_INT.c ****                          (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 20


 891:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CMOD_
 892:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #else
 893:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK
 894:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC
 895:Generated_Source\PSoC4/CapSense_1_INT.c ****                                (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 896:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 897:Generated_Source\PSoC4/CapSense_1_INT.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 898:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 899:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* All widgets are totally scanned. Reset BUSY flag */
 900:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
 191              		.loc 1 900 0
 192 007a 084B     		ldr	r3, .L10+16
 193 007c DA68     		ldr	r2, [r3, #12]
 194 007e 8021     		movs	r1, #128
 195 0080 8A43     		bics	r2, r1
 196 0082 DA60     		str	r2, [r3, #12]
 901:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 902:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Update scan Counter */
 903:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_dsRam.scanCounter++;
 197              		.loc 1 903 0
 198 0084 1A89     		ldrh	r2, [r3, #8]
 199 0086 0132     		adds	r2, r2, #1
 200 0088 1A81     		strh	r2, [r3, #8]
 201              	.LVL17:
 202              	.L6:
 904:Generated_Source\PSoC4/CapSense_1_INT.c ****         }
 905:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 906:Generated_Source\PSoC4/CapSense_1_INT.c **** }
 203              		.loc 1 906 0
 204              		@ sp needed
 205 008a 70BD     		pop	{r4, r5, r6, pc}
 206              	.L11:
 207              		.align	2
 208              	.L10:
 209 008c 00000000 		.word	CapSense_1_widgetIndex
 210 0090 00000000 		.word	CapSense_1_dsFlash
 211 0094 00000000 		.word	CapSense_1_sensorIndex
 212 0098 00000000 		.word	CapSense_1_curRamSnsPtr
 213 009c 00000000 		.word	CapSense_1_dsRam
 214 00a0 FFFFFEFF 		.word	-65537
 215 00a4 00000000 		.word	CapSense_1_requestScanAllWidget
 216              		.cfi_endproc
 217              	.LFE4:
 218              		.size	CapSense_1_SsCSDInitNextScan, .-CapSense_1_SsCSDInitNextScan
 219              		.section	.text.CapSense_1_CSDPostSingleScan,"ax",%progbits
 220              		.align	2
 221              		.global	CapSense_1_CSDPostSingleScan
 222              		.code	16
 223              		.thumb_func
 224              		.type	CapSense_1_CSDPostSingleScan, %function
 225              	CapSense_1_CSDPostSingleScan:
 226              	.LFB1:
 122:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_ENTRY_CALLBACK
 227              		.loc 1 122 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 21


 231 0000 10B5     		push	{r4, lr}
 232              		.cfi_def_cfa_offset 8
 233              		.cfi_offset 4, -8
 234              		.cfi_offset 14, -4
 128:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 235              		.loc 1 128 0
 236 0002 8322     		movs	r2, #131
 237 0004 5200     		lsls	r2, r2, #1
 238 0006 064B     		ldr	r3, .L13
 239 0008 1A60     		str	r2, [r3]
 148:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 240              		.loc 1 148 0
 241 000a FFF7FEFF 		bl	CapSense_1_SsCSDPostScan
 242              	.LVL18:
 186:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 243              		.loc 1 186 0
 244 000e 054B     		ldr	r3, .L13+4
 245 0010 1A89     		ldrh	r2, [r3, #8]
 246 0012 0132     		adds	r2, r2, #1
 247 0014 1A81     		strh	r2, [r3, #8]
 189:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 248              		.loc 1 189 0
 249 0016 D968     		ldr	r1, [r3, #12]
 250 0018 034A     		ldr	r2, .L13+8
 251 001a 0A40     		ands	r2, r1
 252 001c DA60     		str	r2, [r3, #12]
 199:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 253              		.loc 1 199 0
 254              		@ sp needed
 255 001e 10BD     		pop	{r4, pc}
 256              	.L14:
 257              		.align	2
 258              	.L13:
 259 0020 F0000B40 		.word	1074462960
 260 0024 00000000 		.word	CapSense_1_dsRam
 261 0028 7FFFFEFF 		.word	-65665
 262              		.cfi_endproc
 263              	.LFE1:
 264              		.size	CapSense_1_CSDPostSingleScan, .-CapSense_1_CSDPostSingleScan
 265              		.section	.text.CapSense_1_CSDPostMultiScan,"ax",%progbits
 266              		.align	2
 267              		.global	CapSense_1_CSDPostMultiScan
 268              		.code	16
 269              		.thumb_func
 270              		.type	CapSense_1_CSDPostMultiScan, %function
 271              	CapSense_1_CSDPostMultiScan:
 272              	.LFB2:
 238:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address */
 273              		.loc 1 238 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277 0000 10B5     		push	{r4, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 4, -8
 280              		.cfi_offset 14, -4
 240:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                           CapSense_1_dsFlash.wdgtArray[CapSense_1_w
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 22


 281              		.loc 1 240 0
 282 0002 0C4B     		ldr	r3, .L16
 283 0004 1B78     		ldrb	r3, [r3]
 241:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                           + CapSense_1_sensorIndex;
 284              		.loc 1 241 0
 285 0006 5B01     		lsls	r3, r3, #5
 286 0008 0B4A     		ldr	r2, .L16+4
 287 000a 9C58     		ldr	r4, [r3, r2]
 242:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 288              		.loc 1 242 0
 289 000c 0B4B     		ldr	r3, .L16+8
 290 000e 1A78     		ldrb	r2, [r3]
 291 0010 D2B2     		uxtb	r2, r2
 292 0012 D100     		lsls	r1, r2, #3
 293 0014 8A1A     		subs	r2, r1, r2
 294 0016 9300     		lsls	r3, r2, #2
 240:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                           CapSense_1_dsFlash.wdgtArray[CapSense_1_w
 295              		.loc 1 240 0
 296 0018 E418     		adds	r4, r4, r3
 297              	.LVL19:
 249:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 298              		.loc 1 249 0
 299 001a 8322     		movs	r2, #131
 300 001c 5200     		lsls	r2, r2, #1
 301 001e 084B     		ldr	r3, .L16+12
 302 0020 1A60     		str	r2, [r3]
 269:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 303              		.loc 1 269 0
 304 0022 FFF7FEFF 		bl	CapSense_1_SsCSDPostScan
 305              	.LVL20:
 277:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 306              		.loc 1 277 0
 307 0026 2000     		movs	r0, r4
 308 0028 FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 309              	.LVL21:
 302:Generated_Source\PSoC4/CapSense_1_INT.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 310              		.loc 1 302 0
 311 002c FFF7FEFF 		bl	CapSense_1_SsCSDInitNextScan
 312              	.LVL22:
 311:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 313              		.loc 1 311 0
 314              		@ sp needed
 315              	.LVL23:
 316 0030 10BD     		pop	{r4, pc}
 317              	.L17:
 318 0032 C046     		.align	2
 319              	.L16:
 320 0034 00000000 		.word	CapSense_1_widgetIndex
 321 0038 00000000 		.word	CapSense_1_dsFlash
 322 003c 00000000 		.word	CapSense_1_sensorIndex
 323 0040 F0000B40 		.word	1074462960
 324              		.cfi_endproc
 325              	.LFE2:
 326              		.size	CapSense_1_CSDPostMultiScan, .-CapSense_1_CSDPostMultiScan
 327              		.text
 328              	.Letext0:
 329              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 23


 330              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 331              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_SmartSense_LL.h"
 332              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 333              		.file 6 "Generated_Source\\PSoC4\\CapSense_1_Sensing.h"
 334              		.file 7 "Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.h"
 335              		.section	.debug_info,"",%progbits
 336              	.Ldebug_info0:
 337 0000 A4070000 		.4byte	0x7a4
 338 0004 0400     		.2byte	0x4
 339 0006 00000000 		.4byte	.Ldebug_abbrev0
 340 000a 04       		.byte	0x4
 341 000b 01       		.uleb128 0x1
 342 000c F4000000 		.4byte	.LASF112
 343 0010 0C       		.byte	0xc
 344 0011 8A040000 		.4byte	.LASF113
 345 0015 71020000 		.4byte	.LASF114
 346 0019 00000000 		.4byte	.Ldebug_ranges0+0
 347 001d 00000000 		.4byte	0
 348 0021 00000000 		.4byte	.Ldebug_line0
 349 0025 02       		.uleb128 0x2
 350 0026 01       		.byte	0x1
 351 0027 06       		.byte	0x6
 352 0028 F2030000 		.4byte	.LASF0
 353 002c 02       		.uleb128 0x2
 354 002d 01       		.byte	0x1
 355 002e 08       		.byte	0x8
 356 002f 9D030000 		.4byte	.LASF1
 357 0033 02       		.uleb128 0x2
 358 0034 02       		.byte	0x2
 359 0035 05       		.byte	0x5
 360 0036 A9000000 		.4byte	.LASF2
 361 003a 02       		.uleb128 0x2
 362 003b 02       		.byte	0x2
 363 003c 07       		.byte	0x7
 364 003d BF040000 		.4byte	.LASF3
 365 0041 02       		.uleb128 0x2
 366 0042 04       		.byte	0x4
 367 0043 05       		.byte	0x5
 368 0044 C0060000 		.4byte	.LASF4
 369 0048 02       		.uleb128 0x2
 370 0049 04       		.byte	0x4
 371 004a 07       		.byte	0x7
 372 004b A5050000 		.4byte	.LASF5
 373 004f 02       		.uleb128 0x2
 374 0050 08       		.byte	0x8
 375 0051 05       		.byte	0x5
 376 0052 9A010000 		.4byte	.LASF6
 377 0056 02       		.uleb128 0x2
 378 0057 08       		.byte	0x8
 379 0058 07       		.byte	0x7
 380 0059 1B040000 		.4byte	.LASF7
 381 005d 03       		.uleb128 0x3
 382 005e 04       		.byte	0x4
 383 005f 05       		.byte	0x5
 384 0060 696E7400 		.ascii	"int\000"
 385 0064 02       		.uleb128 0x2
 386 0065 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 24


 387 0066 07       		.byte	0x7
 388 0067 5A040000 		.4byte	.LASF8
 389 006b 04       		.uleb128 0x4
 390 006c 24020000 		.4byte	.LASF9
 391 0070 02       		.byte	0x2
 392 0071 E401     		.2byte	0x1e4
 393 0073 2C000000 		.4byte	0x2c
 394 0077 04       		.uleb128 0x4
 395 0078 FA010000 		.4byte	.LASF10
 396 007c 02       		.byte	0x2
 397 007d E501     		.2byte	0x1e5
 398 007f 3A000000 		.4byte	0x3a
 399 0083 04       		.uleb128 0x4
 400 0084 9E050000 		.4byte	.LASF11
 401 0088 02       		.byte	0x2
 402 0089 E601     		.2byte	0x1e6
 403 008b 48000000 		.4byte	0x48
 404 008f 02       		.uleb128 0x2
 405 0090 04       		.byte	0x4
 406 0091 04       		.byte	0x4
 407 0092 91020000 		.4byte	.LASF12
 408 0096 02       		.uleb128 0x2
 409 0097 08       		.byte	0x8
 410 0098 04       		.byte	0x4
 411 0099 B7050000 		.4byte	.LASF13
 412 009d 02       		.uleb128 0x2
 413 009e 01       		.byte	0x1
 414 009f 08       		.byte	0x8
 415 00a0 B3020000 		.4byte	.LASF14
 416 00a4 05       		.uleb128 0x5
 417 00a5 6B000000 		.4byte	0x6b
 418 00a9 04       		.uleb128 0x4
 419 00aa B2040000 		.4byte	.LASF15
 420 00ae 02       		.byte	0x2
 421 00af 9002     		.2byte	0x290
 422 00b1 B5000000 		.4byte	0xb5
 423 00b5 05       		.uleb128 0x5
 424 00b6 83000000 		.4byte	0x83
 425 00ba 04       		.uleb128 0x4
 426 00bb DD020000 		.4byte	.LASF16
 427 00bf 03       		.byte	0x3
 428 00c0 1D01     		.2byte	0x11d
 429 00c2 77000000 		.4byte	0x77
 430 00c6 04       		.uleb128 0x4
 431 00c7 FE030000 		.4byte	.LASF17
 432 00cb 03       		.byte	0x3
 433 00cc 2101     		.2byte	0x121
 434 00ce 6B000000 		.4byte	0x6b
 435 00d2 06       		.uleb128 0x6
 436 00d3 0C       		.byte	0xc
 437 00d4 04       		.byte	0x4
 438 00d5 6E       		.byte	0x6e
 439 00d6 2F010000 		.4byte	0x12f
 440 00da 07       		.uleb128 0x7
 441 00db E2010000 		.4byte	.LASF18
 442 00df 04       		.byte	0x4
 443 00e0 73       		.byte	0x73
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 25


 444 00e1 77000000 		.4byte	0x77
 445 00e5 00       		.byte	0
 446 00e6 07       		.uleb128 0x7
 447 00e7 83040000 		.4byte	.LASF19
 448 00eb 04       		.byte	0x4
 449 00ec 77       		.byte	0x77
 450 00ed 77000000 		.4byte	0x77
 451 00f1 02       		.byte	0x2
 452 00f2 07       		.uleb128 0x7
 453 00f3 BF010000 		.4byte	.LASF20
 454 00f7 04       		.byte	0x4
 455 00f8 7B       		.byte	0x7b
 456 00f9 77000000 		.4byte	0x77
 457 00fd 04       		.byte	0x4
 458 00fe 07       		.uleb128 0x7
 459 00ff C6010000 		.4byte	.LASF21
 460 0103 04       		.byte	0x4
 461 0104 7F       		.byte	0x7f
 462 0105 77000000 		.4byte	0x77
 463 0109 06       		.byte	0x6
 464 010a 07       		.uleb128 0x7
 465 010b CD010000 		.4byte	.LASF22
 466 010f 04       		.byte	0x4
 467 0110 83       		.byte	0x83
 468 0111 77000000 		.4byte	0x77
 469 0115 08       		.byte	0x8
 470 0116 07       		.uleb128 0x7
 471 0117 D4010000 		.4byte	.LASF23
 472 011b 04       		.byte	0x4
 473 011c 87       		.byte	0x87
 474 011d 6B000000 		.4byte	0x6b
 475 0121 0A       		.byte	0xa
 476 0122 07       		.uleb128 0x7
 477 0123 DB010000 		.4byte	.LASF24
 478 0127 04       		.byte	0x4
 479 0128 8B       		.byte	0x8b
 480 0129 6B000000 		.4byte	0x6b
 481 012d 0B       		.byte	0xb
 482 012e 00       		.byte	0
 483 012f 08       		.uleb128 0x8
 484 0130 C9060000 		.4byte	.LASF25
 485 0134 04       		.byte	0x4
 486 0135 8C       		.byte	0x8c
 487 0136 D2000000 		.4byte	0xd2
 488 013a 06       		.uleb128 0x6
 489 013b 12       		.byte	0x12
 490 013c 05       		.byte	0x5
 491 013d 8E       		.byte	0x8e
 492 013e D3010000 		.4byte	0x1d3
 493 0142 07       		.uleb128 0x7
 494 0143 29050000 		.4byte	.LASF26
 495 0147 05       		.byte	0x5
 496 0148 93       		.byte	0x93
 497 0149 77000000 		.4byte	0x77
 498 014d 00       		.byte	0
 499 014e 07       		.uleb128 0x7
 500 014f AB030000 		.4byte	.LASF27
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 26


 501 0153 05       		.byte	0x5
 502 0154 98       		.byte	0x98
 503 0155 BA000000 		.4byte	0xba
 504 0159 02       		.byte	0x2
 505 015a 07       		.uleb128 0x7
 506 015b E9010000 		.4byte	.LASF28
 507 015f 05       		.byte	0x5
 508 0160 9D       		.byte	0x9d
 509 0161 6B000000 		.4byte	0x6b
 510 0165 04       		.byte	0x4
 511 0166 07       		.uleb128 0x7
 512 0167 8E050000 		.4byte	.LASF29
 513 016b 05       		.byte	0x5
 514 016c A2       		.byte	0xa2
 515 016d 6B000000 		.4byte	0x6b
 516 0171 05       		.byte	0x5
 517 0172 07       		.uleb128 0x7
 518 0173 63030000 		.4byte	.LASF30
 519 0177 05       		.byte	0x5
 520 0178 A8       		.byte	0xa8
 521 0179 6B000000 		.4byte	0x6b
 522 017d 06       		.byte	0x6
 523 017e 07       		.uleb128 0x7
 524 017f BC000000 		.4byte	.LASF31
 525 0183 05       		.byte	0x5
 526 0184 AE       		.byte	0xae
 527 0185 6B000000 		.4byte	0x6b
 528 0189 07       		.byte	0x7
 529 018a 07       		.uleb128 0x7
 530 018b 6E000000 		.4byte	.LASF32
 531 018f 05       		.byte	0x5
 532 0190 B5       		.byte	0xb5
 533 0191 C6000000 		.4byte	0xc6
 534 0195 08       		.byte	0x8
 535 0196 07       		.uleb128 0x7
 536 0197 70050000 		.4byte	.LASF33
 537 019b 05       		.byte	0x5
 538 019c BC       		.byte	0xbc
 539 019d D3010000 		.4byte	0x1d3
 540 01a1 09       		.byte	0x9
 541 01a2 07       		.uleb128 0x7
 542 01a3 6A020000 		.4byte	.LASF34
 543 01a7 05       		.byte	0x5
 544 01a8 C4       		.byte	0xc4
 545 01a9 77000000 		.4byte	0x77
 546 01ad 0A       		.byte	0xa
 547 01ae 07       		.uleb128 0x7
 548 01af B2010000 		.4byte	.LASF35
 549 01b3 05       		.byte	0x5
 550 01b4 C9       		.byte	0xc9
 551 01b5 6B000000 		.4byte	0x6b
 552 01b9 0C       		.byte	0xc
 553 01ba 07       		.uleb128 0x7
 554 01bb 65060000 		.4byte	.LASF36
 555 01bf 05       		.byte	0x5
 556 01c0 CF       		.byte	0xcf
 557 01c1 77000000 		.4byte	0x77
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 27


 558 01c5 0E       		.byte	0xe
 559 01c6 07       		.uleb128 0x7
 560 01c7 97050000 		.4byte	.LASF37
 561 01cb 05       		.byte	0x5
 562 01cc D4       		.byte	0xd4
 563 01cd 77000000 		.4byte	0x77
 564 01d1 10       		.byte	0x10
 565 01d2 00       		.byte	0
 566 01d3 09       		.uleb128 0x9
 567 01d4 6B000000 		.4byte	0x6b
 568 01d8 E3010000 		.4byte	0x1e3
 569 01dc 0A       		.uleb128 0xa
 570 01dd E3010000 		.4byte	0x1e3
 571 01e1 00       		.byte	0
 572 01e2 00       		.byte	0
 573 01e3 02       		.uleb128 0x2
 574 01e4 04       		.byte	0x4
 575 01e5 07       		.byte	0x7
 576 01e6 C7000000 		.4byte	.LASF38
 577 01ea 08       		.uleb128 0x8
 578 01eb D4030000 		.4byte	.LASF39
 579 01ef 05       		.byte	0x5
 580 01f0 D5       		.byte	0xd5
 581 01f1 3A010000 		.4byte	0x13a
 582 01f5 06       		.uleb128 0x6
 583 01f6 12       		.byte	0x12
 584 01f7 05       		.byte	0x5
 585 01f8 DA       		.byte	0xda
 586 01f9 94020000 		.4byte	0x294
 587 01fd 07       		.uleb128 0x7
 588 01fe 29050000 		.4byte	.LASF26
 589 0202 05       		.byte	0x5
 590 0203 DF       		.byte	0xdf
 591 0204 77000000 		.4byte	0x77
 592 0208 00       		.byte	0
 593 0209 07       		.uleb128 0x7
 594 020a AB030000 		.4byte	.LASF27
 595 020e 05       		.byte	0x5
 596 020f E4       		.byte	0xe4
 597 0210 BA000000 		.4byte	0xba
 598 0214 02       		.byte	0x2
 599 0215 07       		.uleb128 0x7
 600 0216 E9010000 		.4byte	.LASF28
 601 021a 05       		.byte	0x5
 602 021b E9       		.byte	0xe9
 603 021c 6B000000 		.4byte	0x6b
 604 0220 04       		.byte	0x4
 605 0221 07       		.uleb128 0x7
 606 0222 8E050000 		.4byte	.LASF29
 607 0226 05       		.byte	0x5
 608 0227 EE       		.byte	0xee
 609 0228 6B000000 		.4byte	0x6b
 610 022c 05       		.byte	0x5
 611 022d 07       		.uleb128 0x7
 612 022e 63030000 		.4byte	.LASF30
 613 0232 05       		.byte	0x5
 614 0233 F4       		.byte	0xf4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 28


 615 0234 6B000000 		.4byte	0x6b
 616 0238 06       		.byte	0x6
 617 0239 07       		.uleb128 0x7
 618 023a BC000000 		.4byte	.LASF31
 619 023e 05       		.byte	0x5
 620 023f FA       		.byte	0xfa
 621 0240 6B000000 		.4byte	0x6b
 622 0244 07       		.byte	0x7
 623 0245 0B       		.uleb128 0xb
 624 0246 6E000000 		.4byte	.LASF32
 625 024a 05       		.byte	0x5
 626 024b 0101     		.2byte	0x101
 627 024d C6000000 		.4byte	0xc6
 628 0251 08       		.byte	0x8
 629 0252 0B       		.uleb128 0xb
 630 0253 70050000 		.4byte	.LASF33
 631 0257 05       		.byte	0x5
 632 0258 0801     		.2byte	0x108
 633 025a D3010000 		.4byte	0x1d3
 634 025e 09       		.byte	0x9
 635 025f 0B       		.uleb128 0xb
 636 0260 6A020000 		.4byte	.LASF34
 637 0264 05       		.byte	0x5
 638 0265 1001     		.2byte	0x110
 639 0267 77000000 		.4byte	0x77
 640 026b 0A       		.byte	0xa
 641 026c 0B       		.uleb128 0xb
 642 026d B2010000 		.4byte	.LASF35
 643 0271 05       		.byte	0x5
 644 0272 1501     		.2byte	0x115
 645 0274 6B000000 		.4byte	0x6b
 646 0278 0C       		.byte	0xc
 647 0279 0B       		.uleb128 0xb
 648 027a 65060000 		.4byte	.LASF36
 649 027e 05       		.byte	0x5
 650 027f 1B01     		.2byte	0x11b
 651 0281 77000000 		.4byte	0x77
 652 0285 0E       		.byte	0xe
 653 0286 0B       		.uleb128 0xb
 654 0287 97050000 		.4byte	.LASF37
 655 028b 05       		.byte	0x5
 656 028c 2001     		.2byte	0x120
 657 028e 77000000 		.4byte	0x77
 658 0292 10       		.byte	0x10
 659 0293 00       		.byte	0
 660 0294 04       		.uleb128 0x4
 661 0295 00000000 		.4byte	.LASF40
 662 0299 05       		.byte	0x5
 663 029a 2101     		.2byte	0x121
 664 029c F5010000 		.4byte	0x1f5
 665 02a0 0C       		.uleb128 0xc
 666 02a1 12       		.byte	0x12
 667 02a2 05       		.byte	0x5
 668 02a3 2701     		.2byte	0x127
 669 02a5 B7020000 		.4byte	0x2b7
 670 02a9 0B       		.uleb128 0xb
 671 02aa 5B030000 		.4byte	.LASF41
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 29


 672 02ae 05       		.byte	0x5
 673 02af 2C01     		.2byte	0x12c
 674 02b1 94020000 		.4byte	0x294
 675 02b5 00       		.byte	0
 676 02b6 00       		.byte	0
 677 02b7 04       		.uleb128 0x4
 678 02b8 86060000 		.4byte	.LASF42
 679 02bc 05       		.byte	0x5
 680 02bd 2D01     		.2byte	0x12d
 681 02bf A0020000 		.4byte	0x2a0
 682 02c3 0C       		.uleb128 0xc
 683 02c4 0A       		.byte	0xa
 684 02c5 05       		.byte	0x5
 685 02c6 3301     		.2byte	0x133
 686 02c8 1B030000 		.4byte	0x31b
 687 02cc 0D       		.uleb128 0xd
 688 02cd 72617700 		.ascii	"raw\000"
 689 02d1 05       		.byte	0x5
 690 02d2 3801     		.2byte	0x138
 691 02d4 1B030000 		.4byte	0x31b
 692 02d8 00       		.byte	0
 693 02d9 0B       		.uleb128 0xb
 694 02da 39000000 		.4byte	.LASF43
 695 02de 05       		.byte	0x5
 696 02df 3D01     		.2byte	0x13d
 697 02e1 1B030000 		.4byte	0x31b
 698 02e5 02       		.byte	0x2
 699 02e6 0B       		.uleb128 0xb
 700 02e7 BE050000 		.4byte	.LASF44
 701 02eb 05       		.byte	0x5
 702 02ec 4301     		.2byte	0x143
 703 02ee D3010000 		.4byte	0x1d3
 704 02f2 04       		.byte	0x4
 705 02f3 0B       		.uleb128 0xb
 706 02f4 79000000 		.4byte	.LASF45
 707 02f8 05       		.byte	0x5
 708 02f9 4801     		.2byte	0x148
 709 02fb BA000000 		.4byte	0xba
 710 02ff 06       		.byte	0x6
 711 0300 0B       		.uleb128 0xb
 712 0301 F7050000 		.4byte	.LASF46
 713 0305 05       		.byte	0x5
 714 0306 4D01     		.2byte	0x14d
 715 0308 2B030000 		.4byte	0x32b
 716 030c 08       		.byte	0x8
 717 030d 0B       		.uleb128 0xb
 718 030e 86010000 		.4byte	.LASF47
 719 0312 05       		.byte	0x5
 720 0313 5201     		.2byte	0x152
 721 0315 D3010000 		.4byte	0x1d3
 722 0319 09       		.byte	0x9
 723 031a 00       		.byte	0
 724 031b 09       		.uleb128 0x9
 725 031c 77000000 		.4byte	0x77
 726 0320 2B030000 		.4byte	0x32b
 727 0324 0A       		.uleb128 0xa
 728 0325 E3010000 		.4byte	0x1e3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 30


 729 0329 00       		.byte	0
 730 032a 00       		.byte	0
 731 032b 09       		.uleb128 0x9
 732 032c C6000000 		.4byte	0xc6
 733 0330 3B030000 		.4byte	0x33b
 734 0334 0A       		.uleb128 0xa
 735 0335 E3010000 		.4byte	0x1e3
 736 0339 00       		.byte	0
 737 033a 00       		.byte	0
 738 033b 04       		.uleb128 0x4
 739 033c 2A020000 		.4byte	.LASF48
 740 0340 05       		.byte	0x5
 741 0341 5301     		.2byte	0x153
 742 0343 C3020000 		.4byte	0x2c3
 743 0347 0C       		.uleb128 0xc
 744 0348 0A       		.byte	0xa
 745 0349 05       		.byte	0x5
 746 034a 5901     		.2byte	0x159
 747 034c 5E030000 		.4byte	0x35e
 748 0350 0B       		.uleb128 0xb
 749 0351 5B030000 		.4byte	.LASF41
 750 0355 05       		.byte	0x5
 751 0356 5E01     		.2byte	0x15e
 752 0358 5E030000 		.4byte	0x35e
 753 035c 00       		.byte	0
 754 035d 00       		.byte	0
 755 035e 09       		.uleb128 0x9
 756 035f 3B030000 		.4byte	0x33b
 757 0363 6E030000 		.4byte	0x36e
 758 0367 0A       		.uleb128 0xa
 759 0368 E3010000 		.4byte	0x1e3
 760 036c 00       		.byte	0
 761 036d 00       		.byte	0
 762 036e 04       		.uleb128 0x4
 763 036f 07030000 		.4byte	.LASF49
 764 0373 05       		.byte	0x5
 765 0374 5F01     		.2byte	0x15f
 766 0376 47030000 		.4byte	0x347
 767 037a 0C       		.uleb128 0xc
 768 037b 40       		.byte	0x40
 769 037c 05       		.byte	0x5
 770 037d 6501     		.2byte	0x165
 771 037f 61040000 		.4byte	0x461
 772 0383 0B       		.uleb128 0xb
 773 0384 EB000000 		.4byte	.LASF50
 774 0388 05       		.byte	0x5
 775 0389 6C01     		.2byte	0x16c
 776 038b 77000000 		.4byte	0x77
 777 038f 00       		.byte	0
 778 0390 0B       		.uleb128 0xb
 779 0391 F1010000 		.4byte	.LASF51
 780 0395 05       		.byte	0x5
 781 0396 7101     		.2byte	0x171
 782 0398 77000000 		.4byte	0x77
 783 039c 02       		.byte	0x2
 784 039d 0B       		.uleb128 0xb
 785 039e 08050000 		.4byte	.LASF52
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 31


 786 03a2 05       		.byte	0x5
 787 03a3 7601     		.2byte	0x176
 788 03a5 77000000 		.4byte	0x77
 789 03a9 04       		.byte	0x4
 790 03aa 0B       		.uleb128 0xb
 791 03ab 5B020000 		.4byte	.LASF53
 792 03af 05       		.byte	0x5
 793 03b0 7C01     		.2byte	0x17c
 794 03b2 77000000 		.4byte	0x77
 795 03b6 06       		.byte	0x6
 796 03b7 0B       		.uleb128 0xb
 797 03b8 82050000 		.4byte	.LASF54
 798 03bc 05       		.byte	0x5
 799 03bd 8101     		.2byte	0x181
 800 03bf 77000000 		.4byte	0x77
 801 03c3 08       		.byte	0x8
 802 03c4 0B       		.uleb128 0xb
 803 03c5 B8040000 		.4byte	.LASF55
 804 03c9 05       		.byte	0x5
 805 03ca 8601     		.2byte	0x186
 806 03cc B5000000 		.4byte	0xb5
 807 03d0 0C       		.byte	0xc
 808 03d1 0B       		.uleb128 0xb
 809 03d2 78040000 		.4byte	.LASF56
 810 03d6 05       		.byte	0x5
 811 03d7 8C01     		.2byte	0x18c
 812 03d9 61040000 		.4byte	0x461
 813 03dd 10       		.byte	0x10
 814 03de 0B       		.uleb128 0xb
 815 03df 92030000 		.4byte	.LASF57
 816 03e3 05       		.byte	0x5
 817 03e4 9301     		.2byte	0x193
 818 03e6 61040000 		.4byte	0x461
 819 03ea 14       		.byte	0x14
 820 03eb 0B       		.uleb128 0xb
 821 03ec EE060000 		.4byte	.LASF58
 822 03f0 05       		.byte	0x5
 823 03f1 A301     		.2byte	0x1a3
 824 03f3 D3010000 		.4byte	0x1d3
 825 03f7 18       		.byte	0x18
 826 03f8 0B       		.uleb128 0xb
 827 03f9 8F010000 		.4byte	.LASF59
 828 03fd 05       		.byte	0x5
 829 03fe A901     		.2byte	0x1a9
 830 0400 77000000 		.4byte	0x77
 831 0404 1A       		.byte	0x1a
 832 0405 0B       		.uleb128 0xb
 833 0406 78050000 		.4byte	.LASF60
 834 040a 05       		.byte	0x5
 835 040b AE01     		.2byte	0x1ae
 836 040d 6B000000 		.4byte	0x6b
 837 0411 1C       		.byte	0x1c
 838 0412 0B       		.uleb128 0xb
 839 0413 20000000 		.4byte	.LASF61
 840 0417 05       		.byte	0x5
 841 0418 B301     		.2byte	0x1b3
 842 041a B7020000 		.4byte	0x2b7
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 32


 843 041e 1E       		.byte	0x1e
 844 041f 0B       		.uleb128 0xb
 845 0420 68050000 		.4byte	.LASF62
 846 0424 05       		.byte	0x5
 847 0425 B801     		.2byte	0x1b8
 848 0427 6E030000 		.4byte	0x36e
 849 042b 30       		.byte	0x30
 850 042c 0B       		.uleb128 0xb
 851 042d B0060000 		.4byte	.LASF63
 852 0431 05       		.byte	0x5
 853 0432 BD01     		.2byte	0x1bd
 854 0434 6B000000 		.4byte	0x6b
 855 0438 3A       		.byte	0x3a
 856 0439 0B       		.uleb128 0xb
 857 043a A3020000 		.4byte	.LASF64
 858 043e 05       		.byte	0x5
 859 043f C201     		.2byte	0x1c2
 860 0441 6B000000 		.4byte	0x6b
 861 0445 3B       		.byte	0x3b
 862 0446 0B       		.uleb128 0xb
 863 0447 10050000 		.4byte	.LASF65
 864 044b 05       		.byte	0x5
 865 044c C701     		.2byte	0x1c7
 866 044e 77000000 		.4byte	0x77
 867 0452 3C       		.byte	0x3c
 868 0453 0B       		.uleb128 0xb
 869 0454 29000000 		.4byte	.LASF66
 870 0458 05       		.byte	0x5
 871 0459 CC01     		.2byte	0x1cc
 872 045b 1B030000 		.4byte	0x31b
 873 045f 3E       		.byte	0x3e
 874 0460 00       		.byte	0
 875 0461 09       		.uleb128 0x9
 876 0462 83000000 		.4byte	0x83
 877 0466 71040000 		.4byte	0x471
 878 046a 0A       		.uleb128 0xa
 879 046b E3010000 		.4byte	0x1e3
 880 046f 00       		.byte	0
 881 0470 00       		.byte	0
 882 0471 04       		.uleb128 0x4
 883 0472 B8020000 		.4byte	.LASF67
 884 0476 05       		.byte	0x5
 885 0477 CD01     		.2byte	0x1cd
 886 0479 7A030000 		.4byte	0x37a
 887 047d 0C       		.uleb128 0xc
 888 047e 1C       		.byte	0x1c
 889 047f 05       		.byte	0x5
 890 0480 D301     		.2byte	0x1d3
 891 0482 FC040000 		.4byte	0x4fc
 892 0486 0B       		.uleb128 0xb
 893 0487 B3000000 		.4byte	.LASF68
 894 048b 05       		.byte	0x5
 895 048c D801     		.2byte	0x1d8
 896 048e FC040000 		.4byte	0x4fc
 897 0492 00       		.byte	0
 898 0493 0B       		.uleb128 0xb
 899 0494 A3000000 		.4byte	.LASF69
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 33


 900 0498 05       		.byte	0x5
 901 0499 DD01     		.2byte	0x1dd
 902 049b FC040000 		.4byte	0x4fc
 903 049f 04       		.byte	0x4
 904 04a0 0B       		.uleb128 0xb
 905 04a1 23050000 		.4byte	.LASF70
 906 04a5 05       		.byte	0x5
 907 04a6 E201     		.2byte	0x1e2
 908 04a8 FC040000 		.4byte	0x4fc
 909 04ac 08       		.byte	0x8
 910 04ad 0B       		.uleb128 0xb
 911 04ae 64020000 		.4byte	.LASF71
 912 04b2 05       		.byte	0x5
 913 04b3 E701     		.2byte	0x1e7
 914 04b5 FC040000 		.4byte	0x4fc
 915 04b9 0C       		.byte	0xc
 916 04ba 0B       		.uleb128 0xb
 917 04bb A8010000 		.4byte	.LASF72
 918 04bf 05       		.byte	0x5
 919 04c0 EC01     		.2byte	0x1ec
 920 04c2 83000000 		.4byte	0x83
 921 04c6 10       		.byte	0x10
 922 04c7 0B       		.uleb128 0xb
 923 04c8 F2050000 		.4byte	.LASF73
 924 04cc 05       		.byte	0x5
 925 04cd F101     		.2byte	0x1f1
 926 04cf 83000000 		.4byte	0x83
 927 04d3 14       		.byte	0x14
 928 04d4 0B       		.uleb128 0xb
 929 04d5 C6050000 		.4byte	.LASF74
 930 04d9 05       		.byte	0x5
 931 04da F601     		.2byte	0x1f6
 932 04dc 6B000000 		.4byte	0x6b
 933 04e0 18       		.byte	0x18
 934 04e1 0B       		.uleb128 0xb
 935 04e2 FF020000 		.4byte	.LASF75
 936 04e6 05       		.byte	0x5
 937 04e7 FB01     		.2byte	0x1fb
 938 04e9 6B000000 		.4byte	0x6b
 939 04ed 19       		.byte	0x19
 940 04ee 0B       		.uleb128 0xb
 941 04ef CE020000 		.4byte	.LASF76
 942 04f3 05       		.byte	0x5
 943 04f4 0002     		.2byte	0x200
 944 04f6 6B000000 		.4byte	0x6b
 945 04fa 1A       		.byte	0x1a
 946 04fb 00       		.byte	0
 947 04fc 0E       		.uleb128 0xe
 948 04fd 04       		.byte	0x4
 949 04fe A9000000 		.4byte	0xa9
 950 0502 04       		.uleb128 0x4
 951 0503 D0000000 		.4byte	.LASF77
 952 0507 05       		.byte	0x5
 953 0508 0102     		.2byte	0x201
 954 050a 7D040000 		.4byte	0x47d
 955 050e 0C       		.uleb128 0xc
 956 050f 20       		.byte	0x20
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 34


 957 0510 05       		.byte	0x5
 958 0511 3402     		.2byte	0x234
 959 0513 9A050000 		.4byte	0x59a
 960 0517 0B       		.uleb128 0xb
 961 0518 96000000 		.4byte	.LASF78
 962 051c 05       		.byte	0x5
 963 051d 3D02     		.2byte	0x23d
 964 051f 9A050000 		.4byte	0x59a
 965 0523 00       		.byte	0
 966 0524 0B       		.uleb128 0xb
 967 0525 8A000000 		.4byte	.LASF79
 968 0529 05       		.byte	0x5
 969 052a 4402     		.2byte	0x244
 970 052c A1050000 		.4byte	0x5a1
 971 0530 04       		.byte	0x4
 972 0531 0B       		.uleb128 0xb
 973 0532 20060000 		.4byte	.LASF80
 974 0536 05       		.byte	0x5
 975 0537 4A02     		.2byte	0x24a
 976 0539 A3050000 		.4byte	0x5a3
 977 053d 08       		.byte	0x8
 978 053e 0B       		.uleb128 0xb
 979 053f 4B060000 		.4byte	.LASF81
 980 0543 05       		.byte	0x5
 981 0544 5002     		.2byte	0x250
 982 0546 A1050000 		.4byte	0x5a1
 983 054a 0C       		.byte	0xc
 984 054b 0B       		.uleb128 0xb
 985 054c 01020000 		.4byte	.LASF82
 986 0550 05       		.byte	0x5
 987 0551 5702     		.2byte	0x257
 988 0553 A9050000 		.4byte	0x5a9
 989 0557 10       		.byte	0x10
 990 0558 0B       		.uleb128 0xb
 991 0559 4D040000 		.4byte	.LASF83
 992 055d 05       		.byte	0x5
 993 055e 5C02     		.2byte	0x25c
 994 0560 83000000 		.4byte	0x83
 995 0564 14       		.byte	0x14
 996 0565 0B       		.uleb128 0xb
 997 0566 7E000000 		.4byte	.LASF84
 998 056a 05       		.byte	0x5
 999 056b 6302     		.2byte	0x263
 1000 056d 77000000 		.4byte	0x77
 1001 0571 18       		.byte	0x18
 1002 0572 0B       		.uleb128 0xb
 1003 0573 D4020000 		.4byte	.LASF85
 1004 0577 05       		.byte	0x5
 1005 0578 6A02     		.2byte	0x26a
 1006 057a 6B000000 		.4byte	0x6b
 1007 057e 1A       		.byte	0x1a
 1008 057f 0B       		.uleb128 0xb
 1009 0580 66000000 		.4byte	.LASF86
 1010 0584 05       		.byte	0x5
 1011 0585 7402     		.2byte	0x274
 1012 0587 6B000000 		.4byte	0x6b
 1013 058b 1B       		.byte	0x1b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 35


 1014 058c 0B       		.uleb128 0xb
 1015 058d 14070000 		.4byte	.LASF87
 1016 0591 05       		.byte	0x5
 1017 0592 7C02     		.2byte	0x27c
 1018 0594 AF050000 		.4byte	0x5af
 1019 0598 1C       		.byte	0x1c
 1020 0599 00       		.byte	0
 1021 059a 0E       		.uleb128 0xe
 1022 059b 04       		.byte	0x4
 1023 059c A0050000 		.4byte	0x5a0
 1024 05a0 0F       		.uleb128 0xf
 1025 05a1 10       		.uleb128 0x10
 1026 05a2 04       		.byte	0x4
 1027 05a3 0E       		.uleb128 0xe
 1028 05a4 04       		.byte	0x4
 1029 05a5 3B030000 		.4byte	0x33b
 1030 05a9 0E       		.uleb128 0xe
 1031 05aa 04       		.byte	0x4
 1032 05ab 6B000000 		.4byte	0x6b
 1033 05af 0E       		.uleb128 0xe
 1034 05b0 04       		.byte	0x4
 1035 05b1 2F010000 		.4byte	0x12f
 1036 05b5 04       		.uleb128 0x4
 1037 05b6 05060000 		.4byte	.LASF88
 1038 05ba 05       		.byte	0x5
 1039 05bb 7D02     		.2byte	0x27d
 1040 05bd 0E050000 		.4byte	0x50e
 1041 05c1 0C       		.uleb128 0xc
 1042 05c2 20       		.byte	0x20
 1043 05c3 05       		.byte	0x5
 1044 05c4 8302     		.2byte	0x283
 1045 05c6 D8050000 		.4byte	0x5d8
 1046 05ca 0B       		.uleb128 0xb
 1047 05cb 5B060000 		.4byte	.LASF89
 1048 05cf 05       		.byte	0x5
 1049 05d0 8802     		.2byte	0x288
 1050 05d2 D8050000 		.4byte	0x5d8
 1051 05d6 00       		.byte	0
 1052 05d7 00       		.byte	0
 1053 05d8 09       		.uleb128 0x9
 1054 05d9 B5050000 		.4byte	0x5b5
 1055 05dd E8050000 		.4byte	0x5e8
 1056 05e1 0A       		.uleb128 0xa
 1057 05e2 E3010000 		.4byte	0x1e3
 1058 05e6 00       		.byte	0
 1059 05e7 00       		.byte	0
 1060 05e8 04       		.uleb128 0x4
 1061 05e9 34050000 		.4byte	.LASF90
 1062 05ed 05       		.byte	0x5
 1063 05ee 8902     		.2byte	0x289
 1064 05f0 C1050000 		.4byte	0x5c1
 1065 05f4 02       		.uleb128 0x2
 1066 05f5 08       		.byte	0x8
 1067 05f6 04       		.byte	0x4
 1068 05f7 86030000 		.4byte	.LASF91
 1069 05fb 11       		.uleb128 0x11
 1070 05fc 26030000 		.4byte	.LASF95
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 36


 1071 0600 01       		.byte	0x1
 1072 0601 F602     		.2byte	0x2f6
 1073 0603 00000000 		.4byte	.LFB3
 1074 0607 50000000 		.4byte	.LFE3-.LFB3
 1075 060b 01       		.uleb128 0x1
 1076 060c 9C       		.byte	0x9c
 1077 060d 42060000 		.4byte	0x642
 1078 0611 12       		.uleb128 0x12
 1079 0612 5B000000 		.4byte	.LASF92
 1080 0616 01       		.byte	0x1
 1081 0617 FA02     		.2byte	0x2fa
 1082 0619 83000000 		.4byte	0x83
 1083 061d 00000000 		.4byte	.LLST0
 1084 0621 12       		.uleb128 0x12
 1085 0622 A4060000 		.4byte	.LASF93
 1086 0626 01       		.byte	0x1
 1087 0627 FB02     		.2byte	0x2fb
 1088 0629 83000000 		.4byte	0x83
 1089 062d 40000000 		.4byte	.LLST1
 1090 0631 12       		.uleb128 0x12
 1091 0632 F7020000 		.4byte	.LASF94
 1092 0636 01       		.byte	0x1
 1093 0637 FC02     		.2byte	0x2fc
 1094 0639 42060000 		.4byte	0x642
 1095 063d 80000000 		.4byte	.LLST2
 1096 0641 00       		.byte	0
 1097 0642 0E       		.uleb128 0xe
 1098 0643 04       		.byte	0x4
 1099 0644 48060000 		.4byte	0x648
 1100 0648 13       		.uleb128 0x13
 1101 0649 EA010000 		.4byte	0x1ea
 1102 064d 11       		.uleb128 0x11
 1103 064e 3E000000 		.4byte	.LASF96
 1104 0652 01       		.byte	0x1
 1105 0653 2F03     		.2byte	0x32f
 1106 0655 00000000 		.4byte	.LFB4
 1107 0659 A8000000 		.4byte	.LFE4-.LFB4
 1108 065d 01       		.uleb128 0x1
 1109 065e 9C       		.byte	0x9c
 1110 065f 98060000 		.4byte	0x698
 1111 0663 12       		.uleb128 0x12
 1112 0664 F7020000 		.4byte	.LASF94
 1113 0668 01       		.byte	0x1
 1114 0669 3703     		.2byte	0x337
 1115 066b 98060000 		.4byte	0x698
 1116 066f 93000000 		.4byte	.LLST3
 1117 0673 14       		.uleb128 0x14
 1118 0674 4A000000 		.4byte	.LVL11
 1119 0678 6C070000 		.4byte	0x76c
 1120 067c 14       		.uleb128 0x14
 1121 067d 56000000 		.4byte	.LVL12
 1122 0681 78070000 		.4byte	0x778
 1123 0685 14       		.uleb128 0x14
 1124 0686 5A000000 		.4byte	.LVL13
 1125 068a 84070000 		.4byte	0x784
 1126 068e 14       		.uleb128 0x14
 1127 068f 78000000 		.4byte	.LVL15
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 37


 1128 0693 90070000 		.4byte	0x790
 1129 0697 00       		.byte	0
 1130 0698 0E       		.uleb128 0xe
 1131 0699 04       		.byte	0x4
 1132 069a EA010000 		.4byte	0x1ea
 1133 069e 15       		.uleb128 0x15
 1134 069f EB040000 		.4byte	.LASF97
 1135 06a3 01       		.byte	0x1
 1136 06a4 79       		.byte	0x79
 1137 06a5 00000000 		.4byte	.LFB1
 1138 06a9 2C000000 		.4byte	.LFE1-.LFB1
 1139 06ad 01       		.uleb128 0x1
 1140 06ae 9C       		.byte	0x9c
 1141 06af BD060000 		.4byte	0x6bd
 1142 06b3 14       		.uleb128 0x14
 1143 06b4 0E000000 		.4byte	.LVL18
 1144 06b8 FB050000 		.4byte	0x5fb
 1145 06bc 00       		.byte	0
 1146 06bd 15       		.uleb128 0x15
 1147 06be 3F030000 		.4byte	.LASF98
 1148 06c2 01       		.byte	0x1
 1149 06c3 ED       		.byte	0xed
 1150 06c4 00000000 		.4byte	.LFB2
 1151 06c8 44000000 		.4byte	.LFE2-.LFB2
 1152 06cc 01       		.uleb128 0x1
 1153 06cd 9C       		.byte	0x9c
 1154 06ce 08070000 		.4byte	0x708
 1155 06d2 16       		.uleb128 0x16
 1156 06d3 97020000 		.4byte	.LASF99
 1157 06d7 01       		.byte	0x1
 1158 06d8 F0       		.byte	0xf0
 1159 06d9 08070000 		.4byte	0x708
 1160 06dd BC000000 		.4byte	.LLST4
 1161 06e1 14       		.uleb128 0x14
 1162 06e2 26000000 		.4byte	.LVL20
 1163 06e6 FB050000 		.4byte	0x5fb
 1164 06ea 17       		.uleb128 0x17
 1165 06eb 2C000000 		.4byte	.LVL21
 1166 06ef 9B070000 		.4byte	0x79b
 1167 06f3 FE060000 		.4byte	0x6fe
 1168 06f7 18       		.uleb128 0x18
 1169 06f8 01       		.uleb128 0x1
 1170 06f9 50       		.byte	0x50
 1171 06fa 02       		.uleb128 0x2
 1172 06fb 74       		.byte	0x74
 1173 06fc 00       		.sleb128 0
 1174 06fd 00       		.byte	0
 1175 06fe 14       		.uleb128 0x14
 1176 06ff 30000000 		.4byte	.LVL22
 1177 0703 4D060000 		.4byte	0x64d
 1178 0707 00       		.byte	0
 1179 0708 0E       		.uleb128 0xe
 1180 0709 04       		.byte	0x4
 1181 070a 0E070000 		.4byte	0x70e
 1182 070e 13       		.uleb128 0x13
 1183 070f 02050000 		.4byte	0x502
 1184 0713 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 38


 1185 0714 67040000 		.4byte	.LASF100
 1186 0718 05       		.byte	0x5
 1187 0719 2B04     		.2byte	0x42b
 1188 071b 71040000 		.4byte	0x471
 1189 071f 19       		.uleb128 0x19
 1190 0720 11020000 		.4byte	.LASF101
 1191 0724 05       		.byte	0x5
 1192 0725 2C04     		.2byte	0x42c
 1193 0727 2B070000 		.4byte	0x72b
 1194 072b 13       		.uleb128 0x13
 1195 072c E8050000 		.4byte	0x5e8
 1196 0730 1A       		.uleb128 0x1a
 1197 0731 6F060000 		.4byte	.LASF102
 1198 0735 06       		.byte	0x6
 1199 0736 9D       		.byte	0x9d
 1200 0737 A4000000 		.4byte	0xa4
 1201 073b 1A       		.uleb128 0x1a
 1202 073c 44020000 		.4byte	.LASF103
 1203 0740 06       		.byte	0x6
 1204 0741 9E       		.byte	0x9e
 1205 0742 A4000000 		.4byte	0xa4
 1206 0746 1A       		.uleb128 0x1a
 1207 0747 2B060000 		.4byte	.LASF104
 1208 074b 06       		.byte	0x6
 1209 074c 9F       		.byte	0x9f
 1210 074d 6B000000 		.4byte	0x6b
 1211 0751 1A       		.uleb128 0x1a
 1212 0752 6E030000 		.4byte	.LASF105
 1213 0756 06       		.byte	0x6
 1214 0757 A1       		.byte	0xa1
 1215 0758 A3050000 		.4byte	0x5a3
 1216 075c 1A       		.uleb128 0x1a
 1217 075d D2040000 		.4byte	.LASF106
 1218 0761 06       		.byte	0x6
 1219 0762 A8       		.byte	0xa8
 1220 0763 67070000 		.4byte	0x767
 1221 0767 13       		.uleb128 0x13
 1222 0768 6B000000 		.4byte	0x6b
 1223 076c 1B       		.uleb128 0x1b
 1224 076d 32040000 		.4byte	.LASF107
 1225 0771 32040000 		.4byte	.LASF107
 1226 0775 07       		.byte	0x7
 1227 0776 D201     		.2byte	0x1d2
 1228 0778 1B       		.uleb128 0x1b
 1229 0779 D1050000 		.4byte	.LASF108
 1230 077d D1050000 		.4byte	.LASF108
 1231 0781 07       		.byte	0x7
 1232 0782 DE01     		.2byte	0x1de
 1233 0784 1B       		.uleb128 0x1b
 1234 0785 4C050000 		.4byte	.LASF109
 1235 0789 4C050000 		.4byte	.LASF109
 1236 078d 07       		.byte	0x7
 1237 078e D101     		.2byte	0x1d1
 1238 0790 1C       		.uleb128 0x1c
 1239 0791 B4030000 		.4byte	.LASF110
 1240 0795 B4030000 		.4byte	.LASF110
 1241 0799 06       		.byte	0x6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 39


 1242 079a 6C       		.byte	0x6c
 1243 079b 1B       		.uleb128 0x1b
 1244 079c F8060000 		.4byte	.LASF111
 1245 07a0 F8060000 		.4byte	.LASF111
 1246 07a4 07       		.byte	0x7
 1247 07a5 C101     		.2byte	0x1c1
 1248 07a7 00       		.byte	0
 1249              		.section	.debug_abbrev,"",%progbits
 1250              	.Ldebug_abbrev0:
 1251 0000 01       		.uleb128 0x1
 1252 0001 11       		.uleb128 0x11
 1253 0002 01       		.byte	0x1
 1254 0003 25       		.uleb128 0x25
 1255 0004 0E       		.uleb128 0xe
 1256 0005 13       		.uleb128 0x13
 1257 0006 0B       		.uleb128 0xb
 1258 0007 03       		.uleb128 0x3
 1259 0008 0E       		.uleb128 0xe
 1260 0009 1B       		.uleb128 0x1b
 1261 000a 0E       		.uleb128 0xe
 1262 000b 55       		.uleb128 0x55
 1263 000c 17       		.uleb128 0x17
 1264 000d 11       		.uleb128 0x11
 1265 000e 01       		.uleb128 0x1
 1266 000f 10       		.uleb128 0x10
 1267 0010 17       		.uleb128 0x17
 1268 0011 00       		.byte	0
 1269 0012 00       		.byte	0
 1270 0013 02       		.uleb128 0x2
 1271 0014 24       		.uleb128 0x24
 1272 0015 00       		.byte	0
 1273 0016 0B       		.uleb128 0xb
 1274 0017 0B       		.uleb128 0xb
 1275 0018 3E       		.uleb128 0x3e
 1276 0019 0B       		.uleb128 0xb
 1277 001a 03       		.uleb128 0x3
 1278 001b 0E       		.uleb128 0xe
 1279 001c 00       		.byte	0
 1280 001d 00       		.byte	0
 1281 001e 03       		.uleb128 0x3
 1282 001f 24       		.uleb128 0x24
 1283 0020 00       		.byte	0
 1284 0021 0B       		.uleb128 0xb
 1285 0022 0B       		.uleb128 0xb
 1286 0023 3E       		.uleb128 0x3e
 1287 0024 0B       		.uleb128 0xb
 1288 0025 03       		.uleb128 0x3
 1289 0026 08       		.uleb128 0x8
 1290 0027 00       		.byte	0
 1291 0028 00       		.byte	0
 1292 0029 04       		.uleb128 0x4
 1293 002a 16       		.uleb128 0x16
 1294 002b 00       		.byte	0
 1295 002c 03       		.uleb128 0x3
 1296 002d 0E       		.uleb128 0xe
 1297 002e 3A       		.uleb128 0x3a
 1298 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 40


 1299 0030 3B       		.uleb128 0x3b
 1300 0031 05       		.uleb128 0x5
 1301 0032 49       		.uleb128 0x49
 1302 0033 13       		.uleb128 0x13
 1303 0034 00       		.byte	0
 1304 0035 00       		.byte	0
 1305 0036 05       		.uleb128 0x5
 1306 0037 35       		.uleb128 0x35
 1307 0038 00       		.byte	0
 1308 0039 49       		.uleb128 0x49
 1309 003a 13       		.uleb128 0x13
 1310 003b 00       		.byte	0
 1311 003c 00       		.byte	0
 1312 003d 06       		.uleb128 0x6
 1313 003e 13       		.uleb128 0x13
 1314 003f 01       		.byte	0x1
 1315 0040 0B       		.uleb128 0xb
 1316 0041 0B       		.uleb128 0xb
 1317 0042 3A       		.uleb128 0x3a
 1318 0043 0B       		.uleb128 0xb
 1319 0044 3B       		.uleb128 0x3b
 1320 0045 0B       		.uleb128 0xb
 1321 0046 01       		.uleb128 0x1
 1322 0047 13       		.uleb128 0x13
 1323 0048 00       		.byte	0
 1324 0049 00       		.byte	0
 1325 004a 07       		.uleb128 0x7
 1326 004b 0D       		.uleb128 0xd
 1327 004c 00       		.byte	0
 1328 004d 03       		.uleb128 0x3
 1329 004e 0E       		.uleb128 0xe
 1330 004f 3A       		.uleb128 0x3a
 1331 0050 0B       		.uleb128 0xb
 1332 0051 3B       		.uleb128 0x3b
 1333 0052 0B       		.uleb128 0xb
 1334 0053 49       		.uleb128 0x49
 1335 0054 13       		.uleb128 0x13
 1336 0055 38       		.uleb128 0x38
 1337 0056 0B       		.uleb128 0xb
 1338 0057 00       		.byte	0
 1339 0058 00       		.byte	0
 1340 0059 08       		.uleb128 0x8
 1341 005a 16       		.uleb128 0x16
 1342 005b 00       		.byte	0
 1343 005c 03       		.uleb128 0x3
 1344 005d 0E       		.uleb128 0xe
 1345 005e 3A       		.uleb128 0x3a
 1346 005f 0B       		.uleb128 0xb
 1347 0060 3B       		.uleb128 0x3b
 1348 0061 0B       		.uleb128 0xb
 1349 0062 49       		.uleb128 0x49
 1350 0063 13       		.uleb128 0x13
 1351 0064 00       		.byte	0
 1352 0065 00       		.byte	0
 1353 0066 09       		.uleb128 0x9
 1354 0067 01       		.uleb128 0x1
 1355 0068 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 41


 1356 0069 49       		.uleb128 0x49
 1357 006a 13       		.uleb128 0x13
 1358 006b 01       		.uleb128 0x1
 1359 006c 13       		.uleb128 0x13
 1360 006d 00       		.byte	0
 1361 006e 00       		.byte	0
 1362 006f 0A       		.uleb128 0xa
 1363 0070 21       		.uleb128 0x21
 1364 0071 00       		.byte	0
 1365 0072 49       		.uleb128 0x49
 1366 0073 13       		.uleb128 0x13
 1367 0074 2F       		.uleb128 0x2f
 1368 0075 0B       		.uleb128 0xb
 1369 0076 00       		.byte	0
 1370 0077 00       		.byte	0
 1371 0078 0B       		.uleb128 0xb
 1372 0079 0D       		.uleb128 0xd
 1373 007a 00       		.byte	0
 1374 007b 03       		.uleb128 0x3
 1375 007c 0E       		.uleb128 0xe
 1376 007d 3A       		.uleb128 0x3a
 1377 007e 0B       		.uleb128 0xb
 1378 007f 3B       		.uleb128 0x3b
 1379 0080 05       		.uleb128 0x5
 1380 0081 49       		.uleb128 0x49
 1381 0082 13       		.uleb128 0x13
 1382 0083 38       		.uleb128 0x38
 1383 0084 0B       		.uleb128 0xb
 1384 0085 00       		.byte	0
 1385 0086 00       		.byte	0
 1386 0087 0C       		.uleb128 0xc
 1387 0088 13       		.uleb128 0x13
 1388 0089 01       		.byte	0x1
 1389 008a 0B       		.uleb128 0xb
 1390 008b 0B       		.uleb128 0xb
 1391 008c 3A       		.uleb128 0x3a
 1392 008d 0B       		.uleb128 0xb
 1393 008e 3B       		.uleb128 0x3b
 1394 008f 05       		.uleb128 0x5
 1395 0090 01       		.uleb128 0x1
 1396 0091 13       		.uleb128 0x13
 1397 0092 00       		.byte	0
 1398 0093 00       		.byte	0
 1399 0094 0D       		.uleb128 0xd
 1400 0095 0D       		.uleb128 0xd
 1401 0096 00       		.byte	0
 1402 0097 03       		.uleb128 0x3
 1403 0098 08       		.uleb128 0x8
 1404 0099 3A       		.uleb128 0x3a
 1405 009a 0B       		.uleb128 0xb
 1406 009b 3B       		.uleb128 0x3b
 1407 009c 05       		.uleb128 0x5
 1408 009d 49       		.uleb128 0x49
 1409 009e 13       		.uleb128 0x13
 1410 009f 38       		.uleb128 0x38
 1411 00a0 0B       		.uleb128 0xb
 1412 00a1 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 42


 1413 00a2 00       		.byte	0
 1414 00a3 0E       		.uleb128 0xe
 1415 00a4 0F       		.uleb128 0xf
 1416 00a5 00       		.byte	0
 1417 00a6 0B       		.uleb128 0xb
 1418 00a7 0B       		.uleb128 0xb
 1419 00a8 49       		.uleb128 0x49
 1420 00a9 13       		.uleb128 0x13
 1421 00aa 00       		.byte	0
 1422 00ab 00       		.byte	0
 1423 00ac 0F       		.uleb128 0xf
 1424 00ad 26       		.uleb128 0x26
 1425 00ae 00       		.byte	0
 1426 00af 00       		.byte	0
 1427 00b0 00       		.byte	0
 1428 00b1 10       		.uleb128 0x10
 1429 00b2 0F       		.uleb128 0xf
 1430 00b3 00       		.byte	0
 1431 00b4 0B       		.uleb128 0xb
 1432 00b5 0B       		.uleb128 0xb
 1433 00b6 00       		.byte	0
 1434 00b7 00       		.byte	0
 1435 00b8 11       		.uleb128 0x11
 1436 00b9 2E       		.uleb128 0x2e
 1437 00ba 01       		.byte	0x1
 1438 00bb 03       		.uleb128 0x3
 1439 00bc 0E       		.uleb128 0xe
 1440 00bd 3A       		.uleb128 0x3a
 1441 00be 0B       		.uleb128 0xb
 1442 00bf 3B       		.uleb128 0x3b
 1443 00c0 05       		.uleb128 0x5
 1444 00c1 27       		.uleb128 0x27
 1445 00c2 19       		.uleb128 0x19
 1446 00c3 11       		.uleb128 0x11
 1447 00c4 01       		.uleb128 0x1
 1448 00c5 12       		.uleb128 0x12
 1449 00c6 06       		.uleb128 0x6
 1450 00c7 40       		.uleb128 0x40
 1451 00c8 18       		.uleb128 0x18
 1452 00c9 9742     		.uleb128 0x2117
 1453 00cb 19       		.uleb128 0x19
 1454 00cc 01       		.uleb128 0x1
 1455 00cd 13       		.uleb128 0x13
 1456 00ce 00       		.byte	0
 1457 00cf 00       		.byte	0
 1458 00d0 12       		.uleb128 0x12
 1459 00d1 34       		.uleb128 0x34
 1460 00d2 00       		.byte	0
 1461 00d3 03       		.uleb128 0x3
 1462 00d4 0E       		.uleb128 0xe
 1463 00d5 3A       		.uleb128 0x3a
 1464 00d6 0B       		.uleb128 0xb
 1465 00d7 3B       		.uleb128 0x3b
 1466 00d8 05       		.uleb128 0x5
 1467 00d9 49       		.uleb128 0x49
 1468 00da 13       		.uleb128 0x13
 1469 00db 02       		.uleb128 0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 43


 1470 00dc 17       		.uleb128 0x17
 1471 00dd 00       		.byte	0
 1472 00de 00       		.byte	0
 1473 00df 13       		.uleb128 0x13
 1474 00e0 26       		.uleb128 0x26
 1475 00e1 00       		.byte	0
 1476 00e2 49       		.uleb128 0x49
 1477 00e3 13       		.uleb128 0x13
 1478 00e4 00       		.byte	0
 1479 00e5 00       		.byte	0
 1480 00e6 14       		.uleb128 0x14
 1481 00e7 898201   		.uleb128 0x4109
 1482 00ea 00       		.byte	0
 1483 00eb 11       		.uleb128 0x11
 1484 00ec 01       		.uleb128 0x1
 1485 00ed 31       		.uleb128 0x31
 1486 00ee 13       		.uleb128 0x13
 1487 00ef 00       		.byte	0
 1488 00f0 00       		.byte	0
 1489 00f1 15       		.uleb128 0x15
 1490 00f2 2E       		.uleb128 0x2e
 1491 00f3 01       		.byte	0x1
 1492 00f4 3F       		.uleb128 0x3f
 1493 00f5 19       		.uleb128 0x19
 1494 00f6 03       		.uleb128 0x3
 1495 00f7 0E       		.uleb128 0xe
 1496 00f8 3A       		.uleb128 0x3a
 1497 00f9 0B       		.uleb128 0xb
 1498 00fa 3B       		.uleb128 0x3b
 1499 00fb 0B       		.uleb128 0xb
 1500 00fc 27       		.uleb128 0x27
 1501 00fd 19       		.uleb128 0x19
 1502 00fe 11       		.uleb128 0x11
 1503 00ff 01       		.uleb128 0x1
 1504 0100 12       		.uleb128 0x12
 1505 0101 06       		.uleb128 0x6
 1506 0102 40       		.uleb128 0x40
 1507 0103 18       		.uleb128 0x18
 1508 0104 9742     		.uleb128 0x2117
 1509 0106 19       		.uleb128 0x19
 1510 0107 01       		.uleb128 0x1
 1511 0108 13       		.uleb128 0x13
 1512 0109 00       		.byte	0
 1513 010a 00       		.byte	0
 1514 010b 16       		.uleb128 0x16
 1515 010c 34       		.uleb128 0x34
 1516 010d 00       		.byte	0
 1517 010e 03       		.uleb128 0x3
 1518 010f 0E       		.uleb128 0xe
 1519 0110 3A       		.uleb128 0x3a
 1520 0111 0B       		.uleb128 0xb
 1521 0112 3B       		.uleb128 0x3b
 1522 0113 0B       		.uleb128 0xb
 1523 0114 49       		.uleb128 0x49
 1524 0115 13       		.uleb128 0x13
 1525 0116 02       		.uleb128 0x2
 1526 0117 17       		.uleb128 0x17
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 44


 1527 0118 00       		.byte	0
 1528 0119 00       		.byte	0
 1529 011a 17       		.uleb128 0x17
 1530 011b 898201   		.uleb128 0x4109
 1531 011e 01       		.byte	0x1
 1532 011f 11       		.uleb128 0x11
 1533 0120 01       		.uleb128 0x1
 1534 0121 31       		.uleb128 0x31
 1535 0122 13       		.uleb128 0x13
 1536 0123 01       		.uleb128 0x1
 1537 0124 13       		.uleb128 0x13
 1538 0125 00       		.byte	0
 1539 0126 00       		.byte	0
 1540 0127 18       		.uleb128 0x18
 1541 0128 8A8201   		.uleb128 0x410a
 1542 012b 00       		.byte	0
 1543 012c 02       		.uleb128 0x2
 1544 012d 18       		.uleb128 0x18
 1545 012e 9142     		.uleb128 0x2111
 1546 0130 18       		.uleb128 0x18
 1547 0131 00       		.byte	0
 1548 0132 00       		.byte	0
 1549 0133 19       		.uleb128 0x19
 1550 0134 34       		.uleb128 0x34
 1551 0135 00       		.byte	0
 1552 0136 03       		.uleb128 0x3
 1553 0137 0E       		.uleb128 0xe
 1554 0138 3A       		.uleb128 0x3a
 1555 0139 0B       		.uleb128 0xb
 1556 013a 3B       		.uleb128 0x3b
 1557 013b 05       		.uleb128 0x5
 1558 013c 49       		.uleb128 0x49
 1559 013d 13       		.uleb128 0x13
 1560 013e 3F       		.uleb128 0x3f
 1561 013f 19       		.uleb128 0x19
 1562 0140 3C       		.uleb128 0x3c
 1563 0141 19       		.uleb128 0x19
 1564 0142 00       		.byte	0
 1565 0143 00       		.byte	0
 1566 0144 1A       		.uleb128 0x1a
 1567 0145 34       		.uleb128 0x34
 1568 0146 00       		.byte	0
 1569 0147 03       		.uleb128 0x3
 1570 0148 0E       		.uleb128 0xe
 1571 0149 3A       		.uleb128 0x3a
 1572 014a 0B       		.uleb128 0xb
 1573 014b 3B       		.uleb128 0x3b
 1574 014c 0B       		.uleb128 0xb
 1575 014d 49       		.uleb128 0x49
 1576 014e 13       		.uleb128 0x13
 1577 014f 3F       		.uleb128 0x3f
 1578 0150 19       		.uleb128 0x19
 1579 0151 3C       		.uleb128 0x3c
 1580 0152 19       		.uleb128 0x19
 1581 0153 00       		.byte	0
 1582 0154 00       		.byte	0
 1583 0155 1B       		.uleb128 0x1b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 45


 1584 0156 2E       		.uleb128 0x2e
 1585 0157 00       		.byte	0
 1586 0158 3F       		.uleb128 0x3f
 1587 0159 19       		.uleb128 0x19
 1588 015a 3C       		.uleb128 0x3c
 1589 015b 19       		.uleb128 0x19
 1590 015c 6E       		.uleb128 0x6e
 1591 015d 0E       		.uleb128 0xe
 1592 015e 03       		.uleb128 0x3
 1593 015f 0E       		.uleb128 0xe
 1594 0160 3A       		.uleb128 0x3a
 1595 0161 0B       		.uleb128 0xb
 1596 0162 3B       		.uleb128 0x3b
 1597 0163 05       		.uleb128 0x5
 1598 0164 00       		.byte	0
 1599 0165 00       		.byte	0
 1600 0166 1C       		.uleb128 0x1c
 1601 0167 2E       		.uleb128 0x2e
 1602 0168 00       		.byte	0
 1603 0169 3F       		.uleb128 0x3f
 1604 016a 19       		.uleb128 0x19
 1605 016b 3C       		.uleb128 0x3c
 1606 016c 19       		.uleb128 0x19
 1607 016d 6E       		.uleb128 0x6e
 1608 016e 0E       		.uleb128 0xe
 1609 016f 03       		.uleb128 0x3
 1610 0170 0E       		.uleb128 0xe
 1611 0171 3A       		.uleb128 0x3a
 1612 0172 0B       		.uleb128 0xb
 1613 0173 3B       		.uleb128 0x3b
 1614 0174 0B       		.uleb128 0xb
 1615 0175 00       		.byte	0
 1616 0176 00       		.byte	0
 1617 0177 00       		.byte	0
 1618              		.section	.debug_loc,"",%progbits
 1619              	.Ldebug_loc0:
 1620              	.LLST0:
 1621 0000 14000000 		.4byte	.LVL1
 1622 0004 24000000 		.4byte	.LVL5
 1623 0008 0100     		.2byte	0x1
 1624 000a 52       		.byte	0x52
 1625 000b 24000000 		.4byte	.LVL5
 1626 000f 2E000000 		.4byte	.LVL6
 1627 0013 0700     		.2byte	0x7
 1628 0015 71       		.byte	0x71
 1629 0016 00       		.sleb128 0
 1630 0017 40       		.byte	0x40
 1631 0018 24       		.byte	0x24
 1632 0019 40       		.byte	0x40
 1633 001a 25       		.byte	0x25
 1634 001b 9F       		.byte	0x9f
 1635 001c 2E000000 		.4byte	.LVL6
 1636 0020 30000000 		.4byte	.LVL7
 1637 0024 0100     		.2byte	0x1
 1638 0026 52       		.byte	0x52
 1639 0027 30000000 		.4byte	.LVL7
 1640 002b 32000000 		.4byte	.LVL8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 46


 1641 002f 0700     		.2byte	0x7
 1642 0031 71       		.byte	0x71
 1643 0032 00       		.sleb128 0
 1644 0033 40       		.byte	0x40
 1645 0034 24       		.byte	0x24
 1646 0035 40       		.byte	0x40
 1647 0036 25       		.byte	0x25
 1648 0037 9F       		.byte	0x9f
 1649 0038 00000000 		.4byte	0
 1650 003c 00000000 		.4byte	0
 1651              	.LLST1:
 1652 0040 1C000000 		.4byte	.LVL3
 1653 0044 22000000 		.4byte	.LVL4
 1654 0048 0100     		.2byte	0x1
 1655 004a 53       		.byte	0x53
 1656 004b 22000000 		.4byte	.LVL4
 1657 004f 2E000000 		.4byte	.LVL6
 1658 0053 0700     		.2byte	0x7
 1659 0055 31       		.byte	0x31
 1660 0056 70       		.byte	0x70
 1661 0057 00       		.sleb128 0
 1662 0058 24       		.byte	0x24
 1663 0059 31       		.byte	0x31
 1664 005a 1C       		.byte	0x1c
 1665 005b 9F       		.byte	0x9f
 1666 005c 2E000000 		.4byte	.LVL6
 1667 0060 3A000000 		.4byte	.LVL9
 1668 0064 0100     		.2byte	0x1
 1669 0066 53       		.byte	0x53
 1670 0067 3A000000 		.4byte	.LVL9
 1671 006b 50000000 		.4byte	.LFE3
 1672 006f 0700     		.2byte	0x7
 1673 0071 31       		.byte	0x31
 1674 0072 70       		.byte	0x70
 1675 0073 00       		.sleb128 0
 1676 0074 24       		.byte	0x24
 1677 0075 31       		.byte	0x31
 1678 0076 1C       		.byte	0x1c
 1679 0077 9F       		.byte	0x9f
 1680 0078 00000000 		.4byte	0
 1681 007c 00000000 		.4byte	0
 1682              	.LLST2:
 1683 0080 0C000000 		.4byte	.LVL0
 1684 0084 18000000 		.4byte	.LVL2
 1685 0088 0100     		.2byte	0x1
 1686 008a 53       		.byte	0x53
 1687 008b 00000000 		.4byte	0
 1688 008f 00000000 		.4byte	0
 1689              	.LLST3:
 1690 0093 0E000000 		.4byte	.LVL10
 1691 0097 49000000 		.4byte	.LVL11-1
 1692 009b 0100     		.2byte	0x1
 1693 009d 50       		.byte	0x50
 1694 009e 5C000000 		.4byte	.LVL14
 1695 00a2 77000000 		.4byte	.LVL15-1
 1696 00a6 0100     		.2byte	0x1
 1697 00a8 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 47


 1698 00a9 7A000000 		.4byte	.LVL16
 1699 00ad 8A000000 		.4byte	.LVL17
 1700 00b1 0100     		.2byte	0x1
 1701 00b3 50       		.byte	0x50
 1702 00b4 00000000 		.4byte	0
 1703 00b8 00000000 		.4byte	0
 1704              	.LLST4:
 1705 00bc 1A000000 		.4byte	.LVL19
 1706 00c0 30000000 		.4byte	.LVL23
 1707 00c4 0100     		.2byte	0x1
 1708 00c6 54       		.byte	0x54
 1709 00c7 00000000 		.4byte	0
 1710 00cb 00000000 		.4byte	0
 1711              		.section	.debug_aranges,"",%progbits
 1712 0000 34000000 		.4byte	0x34
 1713 0004 0200     		.2byte	0x2
 1714 0006 00000000 		.4byte	.Ldebug_info0
 1715 000a 04       		.byte	0x4
 1716 000b 00       		.byte	0
 1717 000c 0000     		.2byte	0
 1718 000e 0000     		.2byte	0
 1719 0010 00000000 		.4byte	.LFB3
 1720 0014 50000000 		.4byte	.LFE3-.LFB3
 1721 0018 00000000 		.4byte	.LFB4
 1722 001c A8000000 		.4byte	.LFE4-.LFB4
 1723 0020 00000000 		.4byte	.LFB1
 1724 0024 2C000000 		.4byte	.LFE1-.LFB1
 1725 0028 00000000 		.4byte	.LFB2
 1726 002c 44000000 		.4byte	.LFE2-.LFB2
 1727 0030 00000000 		.4byte	0
 1728 0034 00000000 		.4byte	0
 1729              		.section	.debug_ranges,"",%progbits
 1730              	.Ldebug_ranges0:
 1731 0000 00000000 		.4byte	.LFB3
 1732 0004 50000000 		.4byte	.LFE3
 1733 0008 00000000 		.4byte	.LFB4
 1734 000c A8000000 		.4byte	.LFE4
 1735 0010 00000000 		.4byte	.LFB1
 1736 0014 2C000000 		.4byte	.LFE1
 1737 0018 00000000 		.4byte	.LFB2
 1738 001c 44000000 		.4byte	.LFE2
 1739 0020 00000000 		.4byte	0
 1740 0024 00000000 		.4byte	0
 1741              		.section	.debug_line,"",%progbits
 1742              	.Ldebug_line0:
 1743 0000 59010000 		.section	.debug_str,"MS",%progbits,1
 1743      0200D700 
 1743      00000201 
 1743      FB0E0D00 
 1743      01010101 
 1744              	.LASF40:
 1745 0000 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 1745      656E7365 
 1745      5F315F52 
 1745      414D5F57 
 1745      445F4255 
 1746              	.LASF61:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 48


 1747 0020 77646774 		.ascii	"wdgtList\000"
 1747      4C697374 
 1747      00
 1748              	.LASF66:
 1749 0029 736E7254 		.ascii	"snrTestRawCount\000"
 1749      65737452 
 1749      6177436F 
 1749      756E7400 
 1750              	.LASF43:
 1751 0039 62736C6E 		.ascii	"bsln\000"
 1751      00
 1752              	.LASF96:
 1753 003e 43617053 		.ascii	"CapSense_1_SsCSDInitNextScan\000"
 1753      656E7365 
 1753      5F315F53 
 1753      73435344 
 1753      496E6974 
 1754              	.LASF92:
 1755 005b 746D7052 		.ascii	"tmpRawData\000"
 1755      61774461 
 1755      746100
 1756              	.LASF86:
 1757 0066 6E756D43 		.ascii	"numCols\000"
 1757      6F6C7300 
 1758              	.LASF32:
 1759 006e 6C6F7742 		.ascii	"lowBslnRst\000"
 1759      736C6E52 
 1759      737400
 1760              	.LASF45:
 1761 0079 64696666 		.ascii	"diff\000"
 1761      00
 1762              	.LASF84:
 1763 007e 746F7461 		.ascii	"totalNumSns\000"
 1763      6C4E756D 
 1763      536E7300 
 1764              	.LASF79:
 1765 008a 70747232 		.ascii	"ptr2WdgtRam\000"
 1765      57646774 
 1765      52616D00 
 1766              	.LASF78:
 1767 0096 70747232 		.ascii	"ptr2SnsFlash\000"
 1767      536E7346 
 1767      6C617368 
 1767      00
 1768              	.LASF69:
 1769 00a3 70635074 		.ascii	"pcPtr\000"
 1769      7200
 1770              	.LASF2:
 1771 00a9 73686F72 		.ascii	"short int\000"
 1771      7420696E 
 1771      7400
 1772              	.LASF68:
 1773 00b3 6873696F 		.ascii	"hsiomPtr\000"
 1773      6D507472 
 1773      00
 1774              	.LASF31:
 1775 00bc 6F6E4465 		.ascii	"onDebounce\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 49


 1775      626F756E 
 1775      636500
 1776              	.LASF38:
 1777 00c7 73697A65 		.ascii	"sizetype\000"
 1777      74797065 
 1777      00
 1778              	.LASF77:
 1779 00d0 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 1779      656E7365 
 1779      5F315F46 
 1779      4C415348 
 1779      5F494F5F 
 1780              	.LASF50:
 1781 00eb 636F6E66 		.ascii	"configId\000"
 1781      69674964 
 1781      00
 1782              	.LASF112:
 1783 00f4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1783      43313120 
 1783      352E342E 
 1783      31203230 
 1783      31363036 
 1784 0127 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 1784      20726576 
 1784      6973696F 
 1784      6E203233 
 1784      37373135 
 1785 015a 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 1785      67202D66 
 1785      66756E63 
 1785      74696F6E 
 1785      2D736563 
 1786              	.LASF47:
 1787 0186 69646163 		.ascii	"idacComp\000"
 1787      436F6D70 
 1787      00
 1788              	.LASF59:
 1789 018f 63736430 		.ascii	"csd0Config\000"
 1789      436F6E66 
 1789      696700
 1790              	.LASF6:
 1791 019a 6C6F6E67 		.ascii	"long long int\000"
 1791      206C6F6E 
 1791      6720696E 
 1791      7400
 1792              	.LASF72:
 1793 01a8 6873696F 		.ascii	"hsiomMask\000"
 1793      6D4D6173 
 1793      6B00
 1794              	.LASF35:
 1795 01b2 736E7343 		.ascii	"snsClkSource\000"
 1795      6C6B536F 
 1795      75726365 
 1795      00
 1796              	.LASF20:
 1797 01bf 70617261 		.ascii	"param2\000"
 1797      6D3200
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 50


 1798              	.LASF21:
 1799 01c6 70617261 		.ascii	"param3\000"
 1799      6D3300
 1800              	.LASF22:
 1801 01cd 70617261 		.ascii	"param4\000"
 1801      6D3400
 1802              	.LASF23:
 1803 01d4 70617261 		.ascii	"param5\000"
 1803      6D3500
 1804              	.LASF24:
 1805 01db 70617261 		.ascii	"param6\000"
 1805      6D3600
 1806              	.LASF18:
 1807 01e2 70617261 		.ascii	"param0\000"
 1807      6D3000
 1808              	.LASF28:
 1809 01e9 6E6F6973 		.ascii	"noiseTh\000"
 1809      65546800 
 1810              	.LASF51:
 1811 01f1 64657669 		.ascii	"deviceId\000"
 1811      63654964 
 1811      00
 1812              	.LASF10:
 1813 01fa 75696E74 		.ascii	"uint16\000"
 1813      313600
 1814              	.LASF82:
 1815 0201 70747232 		.ascii	"ptr2DebounceArr\000"
 1815      4465626F 
 1815      756E6365 
 1815      41727200 
 1816              	.LASF101:
 1817 0211 43617053 		.ascii	"CapSense_1_dsFlash\000"
 1817      656E7365 
 1817      5F315F64 
 1817      73466C61 
 1817      736800
 1818              	.LASF9:
 1819 0224 75696E74 		.ascii	"uint8\000"
 1819      3800
 1820              	.LASF48:
 1821 022a 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 1821      656E7365 
 1821      5F315F52 
 1821      414D5F53 
 1821      4E535F53 
 1822              	.LASF103:
 1823 0244 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 1823      656E7365 
 1823      5F315F73 
 1823      656E736F 
 1823      72496E64 
 1824              	.LASF53:
 1825 025b 74756E65 		.ascii	"tunerCmd\000"
 1825      72436D64 
 1825      00
 1826              	.LASF71:
 1827 0264 70735074 		.ascii	"psPtr\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 51


 1827      7200
 1828              	.LASF34:
 1829 026a 736E7343 		.ascii	"snsClk\000"
 1829      6C6B00
 1830              	.LASF114:
 1831 0271 5A3A5C54 		.ascii	"Z:\\Transfer\\Jan\\FirstTest.cydsn\000"
 1831      72616E73 
 1831      6665725C 
 1831      4A616E5C 
 1831      46697273 
 1832              	.LASF12:
 1833 0291 666C6F61 		.ascii	"float\000"
 1833      7400
 1834              	.LASF99:
 1835 0297 63757253 		.ascii	"curSnsIOPtr\000"
 1835      6E73494F 
 1835      50747200 
 1836              	.LASF64:
 1837 02a3 736E7254 		.ascii	"snrTestSensorId\000"
 1837      65737453 
 1837      656E736F 
 1837      72496400 
 1838              	.LASF14:
 1839 02b3 63686172 		.ascii	"char\000"
 1839      00
 1840              	.LASF67:
 1841 02b8 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 1841      656E7365 
 1841      5F315F52 
 1841      414D5F53 
 1841      54525543 
 1842              	.LASF76:
 1843 02ce 73686966 		.ascii	"shift\000"
 1843      7400
 1844              	.LASF85:
 1845 02d4 77646774 		.ascii	"wdgtType\000"
 1845      54797065 
 1845      00
 1846              	.LASF16:
 1847 02dd 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 1847      656E7365 
 1847      5F315F54 
 1847      48524553 
 1847      484F4C44 
 1848              	.LASF94:
 1849 02f7 70747257 		.ascii	"ptrWdgt\000"
 1849      64677400 
 1850              	.LASF75:
 1851 02ff 64725368 		.ascii	"drShift\000"
 1851      69667400 
 1852              	.LASF49:
 1853 0307 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 1853      656E7365 
 1853      5F315F52 
 1853      414D5F53 
 1853      4E535F4C 
 1854              	.LASF95:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 52


 1855 0326 43617053 		.ascii	"CapSense_1_SsCSDPostScan\000"
 1855      656E7365 
 1855      5F315F53 
 1855      73435344 
 1855      506F7374 
 1856              	.LASF98:
 1857 033f 43617053 		.ascii	"CapSense_1_CSDPostMultiScan\000"
 1857      656E7365 
 1857      5F315F43 
 1857      5344506F 
 1857      73744D75 
 1858              	.LASF41:
 1859 035b 62757474 		.ascii	"button0\000"
 1859      6F6E3000 
 1860              	.LASF30:
 1861 0363 68797374 		.ascii	"hysteresis\000"
 1861      65726573 
 1861      697300
 1862              	.LASF105:
 1863 036e 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 1863      656E7365 
 1863      5F315F63 
 1863      75725261 
 1863      6D536E73 
 1864              	.LASF91:
 1865 0386 6C6F6E67 		.ascii	"long double\000"
 1865      20646F75 
 1865      626C6500 
 1866              	.LASF57:
 1867 0392 77646774 		.ascii	"wdgtStatus\000"
 1867      53746174 
 1867      757300
 1868              	.LASF1:
 1869 039d 756E7369 		.ascii	"unsigned char\000"
 1869      676E6564 
 1869      20636861 
 1869      7200
 1870              	.LASF27:
 1871 03ab 66696E67 		.ascii	"fingerTh\000"
 1871      65725468 
 1871      00
 1872              	.LASF110:
 1873 03b4 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 1873      656E7365 
 1873      5F315F53 
 1873      73506F73 
 1873      74416C6C 
 1874              	.LASF39:
 1875 03d4 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 1875      656E7365 
 1875      5F315F52 
 1875      414D5F57 
 1875      445F4241 
 1876              	.LASF0:
 1877 03f2 7369676E 		.ascii	"signed char\000"
 1877      65642063 
 1877      68617200 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 53


 1878              	.LASF17:
 1879 03fe 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 1879      656E7365 
 1879      5F315F4C 
 1879      4F575F42 
 1879      534C4E5F 
 1880              	.LASF7:
 1881 041b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1881      206C6F6E 
 1881      6720756E 
 1881      7369676E 
 1881      65642069 
 1882              	.LASF107:
 1883 0432 43617053 		.ascii	"CapSense_1_SsCSDSetUpIdacs\000"
 1883      656E7365 
 1883      5F315F53 
 1883      73435344 
 1883      53657455 
 1884              	.LASF83:
 1885 044d 73746174 		.ascii	"staticConfig\000"
 1885      6963436F 
 1885      6E666967 
 1885      00
 1886              	.LASF8:
 1887 045a 756E7369 		.ascii	"unsigned int\000"
 1887      676E6564 
 1887      20696E74 
 1887      00
 1888              	.LASF100:
 1889 0467 43617053 		.ascii	"CapSense_1_dsRam\000"
 1889      656E7365 
 1889      5F315F64 
 1889      7352616D 
 1889      00
 1890              	.LASF56:
 1891 0478 77646774 		.ascii	"wdgtEnable\000"
 1891      456E6162 
 1891      6C6500
 1892              	.LASF19:
 1893 0483 70617261 		.ascii	"param1\000"
 1893      6D3100
 1894              	.LASF113:
 1895 048a 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_INT.c\000"
 1895      72617465 
 1895      645F536F 
 1895      75726365 
 1895      5C50536F 
 1896              	.LASF15:
 1897 04b2 72656733 		.ascii	"reg32\000"
 1897      3200
 1898              	.LASF55:
 1899 04b8 73746174 		.ascii	"status\000"
 1899      757300
 1900              	.LASF3:
 1901 04bf 73686F72 		.ascii	"short unsigned int\000"
 1901      7420756E 
 1901      7369676E 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 54


 1901      65642069 
 1901      6E7400
 1902              	.LASF106:
 1903 04d2 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 1903      656E7365 
 1903      5F315F73 
 1903      63616E46 
 1903      72657149 
 1904              	.LASF97:
 1905 04eb 43617053 		.ascii	"CapSense_1_CSDPostSingleScan\000"
 1905      656E7365 
 1905      5F315F43 
 1905      5344506F 
 1905      73745369 
 1906              	.LASF52:
 1907 0508 6877436C 		.ascii	"hwClock\000"
 1907      6F636B00 
 1908              	.LASF65:
 1909 0510 736E7254 		.ascii	"snrTestScanCounter\000"
 1909      65737453 
 1909      63616E43 
 1909      6F756E74 
 1909      657200
 1910              	.LASF70:
 1911 0523 64725074 		.ascii	"drPtr\000"
 1911      7200
 1912              	.LASF26:
 1913 0529 7265736F 		.ascii	"resolution\000"
 1913      6C757469 
 1913      6F6E00
 1914              	.LASF90:
 1915 0534 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 1915      656E7365 
 1915      5F315F46 
 1915      4C415348 
 1915      5F535452 
 1916              	.LASF109:
 1917 054c 43617053 		.ascii	"CapSense_1_SsCSDStartSample\000"
 1917      656E7365 
 1917      5F315F53 
 1917      73435344 
 1917      53746172 
 1918              	.LASF62:
 1919 0568 736E734C 		.ascii	"snsList\000"
 1919      69737400 
 1920              	.LASF33:
 1921 0570 69646163 		.ascii	"idacMod\000"
 1921      4D6F6400 
 1922              	.LASF60:
 1923 0578 6D6F6443 		.ascii	"modCsdClk\000"
 1923      7364436C 
 1923      6B00
 1924              	.LASF54:
 1925 0582 7363616E 		.ascii	"scanCounter\000"
 1925      436F756E 
 1925      74657200 
 1926              	.LASF29:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 55


 1927 058e 6E4E6F69 		.ascii	"nNoiseTh\000"
 1927      73655468 
 1927      00
 1928              	.LASF37:
 1929 0597 73696750 		.ascii	"sigPFC\000"
 1929      464300
 1930              	.LASF11:
 1931 059e 75696E74 		.ascii	"uint32\000"
 1931      333200
 1932              	.LASF5:
 1933 05a5 6C6F6E67 		.ascii	"long unsigned int\000"
 1933      20756E73 
 1933      69676E65 
 1933      6420696E 
 1933      7400
 1934              	.LASF13:
 1935 05b7 646F7562 		.ascii	"double\000"
 1935      6C6500
 1936              	.LASF44:
 1937 05be 62736C6E 		.ascii	"bslnExt\000"
 1937      45787400 
 1938              	.LASF74:
 1939 05c6 6873696F 		.ascii	"hsiomShift\000"
 1939      6D536869 
 1939      667400
 1940              	.LASF108:
 1941 05d1 43617053 		.ascii	"CapSense_1_SsCSDConnectSensorExt\000"
 1941      656E7365 
 1941      5F315F53 
 1941      73435344 
 1941      436F6E6E 
 1942              	.LASF73:
 1943 05f2 6D61736B 		.ascii	"mask\000"
 1943      00
 1944              	.LASF46:
 1945 05f7 6E656742 		.ascii	"negBslnRstCnt\000"
 1945      736C6E52 
 1945      7374436E 
 1945      7400
 1946              	.LASF88:
 1947 0605 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 1947      656E7365 
 1947      5F315F46 
 1947      4C415348 
 1947      5F57445F 
 1948              	.LASF80:
 1949 0620 70747232 		.ascii	"ptr2SnsRam\000"
 1949      536E7352 
 1949      616D00
 1950              	.LASF104:
 1951 062b 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
 1951      656E7365 
 1951      5F315F72 
 1951      65717565 
 1951      73745363 
 1952              	.LASF81:
 1953 064b 70747232 		.ascii	"ptr2FltrHistory\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 56


 1953      466C7472 
 1953      48697374 
 1953      6F727900 
 1954              	.LASF89:
 1955 065b 77646774 		.ascii	"wdgtArray\000"
 1955      41727261 
 1955      7900
 1956              	.LASF36:
 1957 0665 66696E67 		.ascii	"fingerCap\000"
 1957      65724361 
 1957      7000
 1958              	.LASF102:
 1959 066f 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 1959      656E7365 
 1959      5F315F77 
 1959      69646765 
 1959      74496E64 
 1960              	.LASF42:
 1961 0686 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 1961      656E7365 
 1961      5F315F52 
 1961      414D5F57 
 1961      445F4C49 
 1962              	.LASF93:
 1963 06a4 746D704D 		.ascii	"tmpMaxCount\000"
 1963      6178436F 
 1963      756E7400 
 1964              	.LASF63:
 1965 06b0 736E7254 		.ascii	"snrTestWidgetId\000"
 1965      65737457 
 1965      69646765 
 1965      74496400 
 1966              	.LASF4:
 1967 06c0 6C6F6E67 		.ascii	"long int\000"
 1967      20696E74 
 1967      00
 1968              	.LASF25:
 1969 06c9 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 1969      5453454E 
 1969      53455F43 
 1969      53445F4E 
 1969      4F495345 
 1970              	.LASF58:
 1971 06ee 736E7353 		.ascii	"snsStatus\000"
 1971      74617475 
 1971      7300
 1972              	.LASF111:
 1973 06f8 43617053 		.ascii	"CapSense_1_CSDDisconnectSns\000"
 1973      656E7365 
 1973      5F315F43 
 1973      53444469 
 1973      73636F6E 
 1974              	.LASF87:
 1975 0714 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 1975      4E6F6973 
 1975      65456E76 
 1975      6C7000
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccnNbYNf.s 			page 57


 1976              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
