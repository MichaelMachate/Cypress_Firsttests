ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_SensingCSX_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsCalcCsxScanPeriod,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsCalcCsxScanPeriod, %function
  24              	CapSense_1_SsCalcCsxScanPeriod:
  25              	.LFB16:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_SensingCSX_LL.c"
   1:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \file CapSense_1_SensingCSX_LL.c
   3:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \version 5.20
   4:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   implementation for the low-level APIs of the CSX part of
   8:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   initialization, calibration and scanning.
  10:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \see CapSense_1 v5.20 Datasheet
  12:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include <cytypes.h>
  42:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CyLib.h"
  43:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  44:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CapSense_1_Structure.h"
  45:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CapSense_1_Configuration.h"
  46:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CapSense_1_SensingCSX_LL.h"
  47:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CapSense_1_Sensing.h"
  48:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "cyapicallbacks.h"
  49:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  50:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
  51:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
  53:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function constants
  54:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  56:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #define  CapSense_1_NUM_HALF_CYCLES                       (2u)
  57:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  58:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  59:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
  60:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Defines module variables
  61:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
  62:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  63:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Local variable used to store the Scan period */
  64:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** volatile uint16 CapSense_1_csxScanPeriod = 0u;
  65:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Local variable used to return raw count from the post scan ISR */
  66:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** volatile uint16 CapSense_1_csxRawCount = 0u;
  67:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  68:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(CapSense_1_ENABLE != CapSense_1_CSDV2)
  69:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     volatile uint32 CapSense_1_csxRawGarbage = 0u;
  70:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
  71:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  72:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Tx electrode that was connected previously */
  73:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curTxIOPtr;
  74:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Rx electrode that was connected previously */
  75:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curRxIOPtr;
  76:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Local variable to hold total Tx in widget, while scanning all the sensors in widget */
  77:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_curWdgtTotalRx = 0u;
  78:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Local variable to hold total Rx in widget, while scanning all the sensors in widget */
  79:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_curWdgtTotalTx = 0u;
  80:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Flag to indicate that electrodes were connected previously */
  81:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_eleCsxDisconnectFlag = 0u;
  82:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Pointer to Flash structure holding info of sensor to be scanned */
  83:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
  84:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curGangRxPtr = 0u;
  85:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curGangTxPtr = 0u;
  86:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif
  87:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  88:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Module local function declarations
  90:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
  91:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /**
  92:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \cond SECTION_C_INTERNAL
  93:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \addtogroup group_c_internal
  94:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \{
  95:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** */
  96:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  97:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXStartSample(void);
  98:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostMultiScan(void);
  99:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostSingleScan(void);
 100:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_SsCalcCsxScanPeriod(CapSense_1_RAM_WD_BASE_STRUCT const *wdgtPtr);
 101:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 102:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
 103:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_INLINE static void CapSense_1_SsCSXStartSampleExt(void);
 104:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif
 105:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 106:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 107:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static uint32 CapSense_1_SsCSXOversample(void);
 108:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif
 109:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 110:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 111:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static void CapSense_1_SsCSXPostMultiScanGanged(void);
 112:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif
 113:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 114:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Pointer to Pointer to function used to register callback in ISR */
 115:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void (*CapSense_1_CSXPostScanApiPtr)(void) = &CapSense_1_SsCSXPostMultiScan;
 116:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /** \}
 117:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \endcond */
 118:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 119:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXInitialize
 121:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 122:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 123:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 124:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Performs hardware and firmware initialization required for the CSX operation
 125:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   of the CapSense_1 Component.
 126:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 127:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 128:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function initializes hardware to perform the CSX sensing operation. This
 129:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   function is called by the CapSense_1_Start() API during the Component
 130:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   initialization. If both CSX and CSD sensing methods are used in the Component,
 131:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   this function is called by the CapSense_1_SetupWidget() API to change hardware
 132:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   configured for CSD to re-initialize for the CSX sensing.
 133:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 134:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   If the CSD and CSX widgets are used in the Component, it is recommended not to
 135:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   mix the CSD widgets between the CSX widgets, instead, place all CSX widgets in
 136:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the required scanning order and then place the CSD widgets in the customizer.
 137:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   For the Component API, this action will eliminate the need for changing the hardware
 138:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   configuration for every widget scan and will increase the execution speed
 139:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   in the CapSense_1_ScanAllWidgets() when the API is called.
 140:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 141:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Similarly, it is recommended to set up and scan all the CSX widgets in such
 142:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   a sequence that the CapSense_1_SetupWidget() API  shouldn't need
 143:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   hardware  sensing-configuration change.
 144:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 145:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   It is highly not recommended to call this API directly from the application layer.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 147:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 148:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXInitialize(void)
 149:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 150:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
 151:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint8  interruptState;
 152:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 tmpRegVal;
 153:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 154:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_PTR,             CapSense_1_DEFAULT_CSD_INTR_CFG);
 155:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_SET_PTR,         CapSense_1_DEFAULT_CSD_INTR_SET_CFG);
 156:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_MASK_PTR,        CapSense_1_DEFAULT_CSD_INTR_MASK_CFG);
 157:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR,            CapSense_1_DEFAULT_CSD_HSCMP_CFG);
 158:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_AMBUF_PTR,            CapSense_1_DEFAULT_CSD_AMBUF_CFG);
 159:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_REFGEN_PTR,           CapSense_1_DEFAULT_CSD_REFGEN_CFG);
 160:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR,           CapSense_1_DEFAULT_CSD_CSDCMP_CFG);
 161:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_MOD_PTR,         CapSense_1_DEFAULT_CSD_IDACA_CFG);
 162:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 163:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if((0u != CapSense_1_ADC_EN) || (0u != CapSense_1_IDACB_USED))
 164:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_COMP_PTR,    CapSense_1_DEFAULT_CSD_IDACB_CFG);
 165:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (0u != CapSense_1_ADC_EN) || (0u != CapSense_1_IDACB_USED) */
 166:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 167:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR,           CapSense_1_DEFAULT_CSD_SW_RES_CFG);
 168:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR,     CapSense_1_DEFAULT_CSD_SENSE_PERIOD_CFG);
 169:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_DUTY_PTR,       CapSense_1_DEFAULT_CSD_SENSE_DUTY_CFG);
 170:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR,      CapSense_1_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 171:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR,      CapSense_1_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 172:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,    CapSense_1_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 173:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 174:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 175:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 176:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_SW_BYP_SEL_PTR);
 177:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~(CapSense_1_SW_BYP_SEL_SW_BYA_MASK);
 178:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= CapSense_1_DEFAULT_CSD_SW_BYP_SEL_CFG;
 179:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR,       tmpRegVal);
 180:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 181:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 182:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR,     CapSense_1_DEFAULT_CSD_SW_CMP_P_SEL_CFG);
 183:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_N_SEL_PTR,     CapSense_1_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 184:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 185:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 186:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 187:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_SW_REFGEN_SEL_SW_MASK;
 188:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= CapSense_1_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 189:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR,    tmpRegVal);
 190:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 191:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 192:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR,    CapSense_1_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 193:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 194:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR,       CapSense_1_DEFAULT_CSD_SW_DSI_SEL_CFG);
 195:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_TIME_PTR,         CapSense_1_DEFAULT_CSD_SEQ_TIME_CFG);
 196:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_INIT_CNT_PTR,     CapSense_1_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 197:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR,     CapSense_1_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 198:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_ADC_CTL_PTR,          CapSense_1_DEFAULT_CSD_ADC_CTL_CFG);
 199:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR,        CapSense_1_DEFAULT_CSD_SEQ_START_CFG);
 200:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR,           CapSense_1_DEFAULT_CSD_CONFIG_CFG);
 201:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 202:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_BistDischargeExtCapacitors();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 204:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 205:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintA_PC_PTR);
 206:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintA_SHIFT * CapSense_1_GPIO_PC_BIT
 207:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_PC_PTR, tmpRegVal);
 208:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 209:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 210:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 211:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintB_PC_PTR);
 212:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintB__SHIFT * CapSense_1_GPIO_PC_BI
 213:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_PC_PTR, tmpRegVal);
 214:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 215:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 216:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 217:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 218:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 219:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_CintA_HSIOM_MASK;
 220:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintA_HSIOM_SHIFT);
 221:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, tmpRegVal);
 222:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 223:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 224:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 225:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 226:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 227:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_CintB_HSIOM_MASK;
 228:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintB_HSIOM_SHIFT);
 229:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, tmpRegVal);
 230:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 231:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 232:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsxClk);
 233:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 234:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
 235:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsSetSnsClockDivider((uint32)CapSense_1_dsRam.snsCsxClk);
 236:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 237:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 238:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set all IO states to default state */
 239:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetIOsInDefaultState();
 240:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 241:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
 242:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 trimValue;
 243:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 244:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set all IO states to default state */
 245:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetIOsInDefaultState();
 246:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 247:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 248:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             trimValue = CY_GET_REG32(CapSense_1_IDAC_PTR);
 249:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             trimValue &= ~(CapSense_1_IDAC_COMP_CFG_MASK | CapSense_1_IDAC_FEEDBACK_MODE_MASK);
 250:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, trimValue);
 251:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 252:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 253:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 254:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 255:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 256:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~CapSense_1_CintB_HSIOM_MASK;
 257:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintB_HSIOM_SHIFT);
 258:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, trimValue);
 259:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set drive mode of CintB pin to High-Z Analog state in PC register
 261:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             and set logic high on DR register. */
 262:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintB_PC_PTR);
 263:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintB__SHIFT * CapSense_1_GPIO_PC_BIT
 264:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_PC_PTR, trimValue);
 265:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 266:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintB_DR_PTR);
 267:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~(uint32)((uint32)0x01u << CapSense_1_CintB__SHIFT);
 268:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_DR_PTR, trimValue);
 269:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 270:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 271:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 272:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~CapSense_1_CintA_HSIOM_MASK;
 273:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintA_HSIOM_SHIFT);
 274:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, trimValue);
 275:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 276:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set drive mode of CintA_tank pin to High-Z Analog state in PC register
 277:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             and set logic high on DR register. */
 278:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintA_PC_PTR);
 279:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintA_SHIFT * CapSense_1_GPIO_PC_BIT_
 280:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_PC_PTR, trimValue);
 281:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 282:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintA_DR_PTR);
 283:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~(uint32)((uint32)0x01u << CapSense_1_CintA_SHIFT);
 284:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_DR_PTR, trimValue);
 285:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 286:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CSD comparator to CintB via AMUXBUS-A */
 287:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CONFIG_PTR);
 288:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue |= CapSense_1_CONFIG_SENSE_INSEL_MASK;
 289:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, trimValue);
 290:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 291:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* If common clocks are enabled for Component, set clock
 292:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them */
 293:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_CSX_COMMON_TX_CLK_EN == CapSense_1_ENABLE)
 294:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsSetClockDividers((uint32)CapSense_1_dsRam.snsCsxClk, (uint32)CapSense_1_ds
 295:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 296:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 297:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Enable CapSense_1 ISR and set ISR for CSX sensing */
 298:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_SsIsrInitialize(&CapSense_1_CSXScanISR);
 299:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 300:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 301:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 302:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 303:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXElectrodeCheck
 304:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 305:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 306:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 307:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Check if electrodes were previously connected using
 308:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the CapSense_1_CSXSetupWidgetExt() API and if yes, disconnect them.
 309:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 310:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 311:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function checks if CapSense_1_eleCsxDisconnectFlag is set.
 312:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   If it is set, the function disconnects the previously connected electrode.
 313:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 314:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 315:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXElectrodeCheck(void)
 316:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 318:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 numElectrodes;
 319:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN) */
 320:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 321:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if (0u != CapSense_1_eleCsxDisconnectFlag)
 322:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
 323:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****        /* Disconnect if electrodes were previous connected by SetupWidgetExt() API */
 324:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 325:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Check ganged sns flag */
 326:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_
 327:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 328:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Tx electrode
 329:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     3. Get Tx pointer
 330:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     4. Disconnect all Tx */
 331:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangTxPtr->numPins;
 332:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
 333:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 334:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 335:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 336:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr++);
 337:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
 338:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 339:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 340:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Rx electrode
 341:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     3. Get Rx pointer
 342:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     4. Disconnect all Rx */
 343:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangRxPtr->numPins;
 344:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId];
 345:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 346:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 347:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 348:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr++);
 349:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
 350:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 351:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 352:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             else
 353:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 354:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 355:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr);
 356:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
 357:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 358:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #else
 359:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 360:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr);
 361:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
 362:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 363:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_eleCsxDisconnectFlag = 0u;
 364:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
 365:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 366:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 367:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 368:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 369:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXSetupWidget
 370:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 371:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 372:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 373:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  in a specific widget using the CSX sensing method. This function requires
 375:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  using the CapSense_1_CSXScan() function to start scanning.
 376:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 377:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 378:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function initializes the widgets specific common parameters to perform
 379:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  the CSX scanning. The initialization includes the following:
 380:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    1. The CSD_CONFIG register.
 381:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    2. The IDAC register.
 382:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    3. The Sense clock frequency
 383:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    4. The phase alignment of the sense and modulator clocks.
 384:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 385:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function does not connect any specific sensors to the scanning hardware
 386:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  and neither does it start a scanning process. The CapSense_1_CSXScan()
 387:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  function must be called after initializing the widget to start scanning.
 388:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 389:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 390:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
 391:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 392:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called by the CapSense_1_SetupWidget() API if the
 393:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  given widget uses the CSX sensing method.
 394:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 395:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 396:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 397:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 398:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 399:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param widgetId
 400:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 401:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  initialization required for scanning sensors in the specific widget.
 402:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration header
 403:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  file defined as CapSense_1_<WidgetName>_WDGT_ID.
 404:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 405:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 406:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXSetupWidget(uint32 widgetId)
 407:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 408:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* variable to access widget details */
 409:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
 410:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 411:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 412:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 tmpRegVal;
 413:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 snsClkVal;
 414:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
 415:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 416:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Save the current widget Id */
 417:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_widgetIndex = (uint8)widgetId;
 418:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 419:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSX_E);
 420:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 421:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /*
 422:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *  Check if CSX electrodes were previously connected using
 423:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *  CapSense_1_CSXSetupWidgetExt API and if yes, disconnect them
 424:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     */
 425:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_CSXElectrodeCheck();
 426:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 427:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Configure hardware block */
 428:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 429:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curFlashWdgtPtr = &CapSense_1_dsFlash.wdgtArray[widgetId];
 430:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 9


 431:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_curFlashWdgtPtr->ptr2WdgtRa
 432:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 433:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
 434:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             snsClkVal = (uint32)CapSense_1_dsRam.snsCsxClk;
 435:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #else
 436:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             snsClkVal = (uint32)curRamWdgtBasePtr->snsClk;
 437:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
 438:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 439:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (uint32)curRamWdgtBasePtr->resolution);
 440:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod  = CapSense_1_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 441:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 442:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = (uint32)curRamWdgtBasePtr->snsClkSource;
 443:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 444:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         snsClkVal = (snsClkVal - 1uL) & CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK;
 445:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << CapSense_1_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 446:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, tmpRegVal);
 447:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsxClk);
 448:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
 449:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /*
 450:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         * initialize access pointers for current:
 451:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *    1. Pointer to widget configuration in Flash
 452:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *    2. Widget configuration in RAM
 453:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *    3. Make a local copy of widget index
 454:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         */
 455:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curFlashWdgtPtr = &CapSense_1_dsFlash.wdgtArray[widgetId];
 456:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_curFlashWdgtPtr->ptr2WdgtRa
 457:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 458:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_CONFIG_ENABLE_MASK);
 459:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, (CY_GET_REG32(CapSense_1_CONFIG_PTR) |
 460:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_MUTUALCAP_EN_MASK     |
 461:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_SENSE_COMP_BW_MASK    |
 462:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_SENSE_COMP_EN_MASK    |
 463:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_SENSE_INSEL_MASK      |
 464:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_REFBUF_EN_MASK        |
 465:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_REFBUF_DRV_MASK));
 466:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 467:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* If individual clocks are enabled for each widget, set clock
 468:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them. */
 469:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_CSX_COMMON_TX_CLK_EN == CapSense_1_DISABLE)
 470:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsSetClockDividers((uint32)curRamWdgtBasePtr->snsClk, (uint32)CapSense_1_dsR
 471:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 472:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 473:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Find scan period */
 474:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod = CapSense_1_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 475:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 476:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 477:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 478:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 479:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXSetupWidgetExt
 480:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 481:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 482:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 483:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Performs extended initialization for the CSX widget and also performs
 484:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  initialization required for a specific sensor in the widget. This function
 485:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  requires using the CapSense_1_CSXScan() function to initiate a scan.
 486:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 487:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 10


 488:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function does the same tasks as CapSense_1_CSXSetupWidget() and
 489:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  also connects a sensor in the widget for scanning. Once this function is
 490:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  called to initialize a widget and a sensor, the CapSense_1_CSXScanExt()
 491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  function must be called to scan the sensor.
 492:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 493:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 494:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
 495:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 496:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 497:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 498:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 499:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 500:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param widgetId
 501:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 502:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  initialization required for scanning a specific sensor in a specific widget.
 503:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration header
 504:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  file defined as CapSense_1_<WidgetName>_WDGT_ID.
 505:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 506:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param sensorId
 507:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 508:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
 509:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  specific widget.
 510:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
 511:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1 Configuration header file defined as
 512:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_<WidgetName>_SNS<SensorNumber>_ID.
 513:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 514:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 515:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 516:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXSetupWidgetExt(uint32 widgetId, uint32 sensorId)
 517:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 518:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 txIndex;
 519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 rxIndex;
 520:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 521:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 522:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint16 numElectrodes;
 523:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN) */
 524:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 525:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Initialize widget */
 526:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_CSXSetupWidget(widgetId);
 527:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_sensorIndex = (uint8)sensorId;
 528:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 529:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* initialize sensor data structure pointer to appropriate address */
 530:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsRam;
 531:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = &CapSense_1_curRamSnsPtr[sensorId];
 532:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 533:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 534:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (0u != CapSense_1_curRamSnsPtr->subConvNum)
 535:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 536:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 537:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 538:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /*
 539:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *  Find Tx and Rx index for given snsIndex
 540:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    rxIndex = sensorId / TxCount
 541:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    txIndex = sensorId % TxCount
 542:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     */
 543:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     rxIndex = sensorId /CapSense_1_curFlashWdgtPtr->numRows;
 544:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     txIndex = sensorId % CapSense_1_curFlashWdgtPtr->numRows;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 11


 545:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 546:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* If widget is APA, find node (Tx/Rx) to be connected for scanning */
 547:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 548:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_1_GA
 549:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 550:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /*
 551:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  1. Get access to Rx sensor pointer (Rx = Base + rxIndex).
 552:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  2. Get number of Rx electrodes
 553:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  3. Get Rx pointer
 554:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  4. Connect all Rx
 555:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             */
 556:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curGangRxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 557:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curGangRxPtr += rxIndex;
 558:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             numElectrodes = CapSense_1_curGangRxPtr->numPins;
 559:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId];
 560:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 561:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             do
 562:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 563:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
 564:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes--;
 565:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             } while (0u != numElectrodes);
 566:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 567:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /*
 568:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  1. Get access to Tx sensor pointer (Tx = Base + NumberRx + TxIndex).
 569:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  2. Get number of Tx electrodes
 570:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  3. Get Tx pointer
 571:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  4. Connect all Tx
 572:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             */
 573:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 574:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curGangTxPtr += (CapSense_1_curFlashWdgtPtr->numCols + txIndex);
 575:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 576:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             numElectrodes = CapSense_1_curGangTxPtr->numPins;
 577:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
 578:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 579:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             do
 580:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 581:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
 582:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes--;
 583:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }while (0u != numElectrodes);
 584:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 585:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Set callback to scan connected ganged sensor only */
 586:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostSingleScan;
 587:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 588:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
 589:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif  /* (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN) */
 590:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 591:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /*
 592:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  If no ganged sensor in Component OR current widget no contains ganged sns, then:
 593:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *    1. Find Rx pointer: Rx = Base address + RxIndex
 594:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *    2. Find Tx pointer: Tx = Base address + (total Rx + TxIndex)
 595:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             */
 596:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgtPtr-
 597:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRxIOPtr = &CapSense_1_curRxIOPtr[rxIndex];
 598:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 599:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgtPtr-
 600:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curTxIOPtr = &CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr->numCols + t
 601:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 12


 602:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Connect Tx and Rx IOs for scan ad set flag to indicate that IOs should be disconnect
 603:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 604:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 605:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_eleCsxDisconnectFlag = CapSense_1_DISCONNECT_IO_FLAG;
 606:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 607:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Set callback to scan all the sensors in widget */
 608:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostSingleScan;
 609:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 610:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 611:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 612:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 613:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 614:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 615:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 616:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXScan
 617:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 618:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 619:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 620:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by
 621:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  the CapSense_1_CSXSetupWidget() function.
 622:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 623:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 624:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
 625:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  the CapSense_1_CSXSetupWidget() function. It does the following tasks:
 626:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    1. Connects the first sensor of the widget.
 627:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    2. Initializes an interrupt callback function to initialize a scan of the
 628:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *       next sensors in a widget.
 629:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    3. Starts scanning for the first sensor in the widget.
 630:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 631:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called by the CapSense_1_Scan() API if the given
 632:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  widget uses the CSX sensing method.
 633:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 634:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 635:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 636:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 637:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 638:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 639:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status. The widget must be
 640:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  preconfigured by the CapSense_1_CSXSetupWidget() function if any other
 641:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  widget was previously scanned or any other type of scan functions were used.
 642:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 643:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 644:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 645:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXScan(void)
 646:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 647:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 648:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 numElectrodes;
 649:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 650:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 651:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 snsIndex = 0u;
 652:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 snsNum;
 653:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 654:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 655:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_sensorIndex = 0u;
 656:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 657:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* initialize pointer to access sensor RAM elements */
 658:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsRam;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 13


 659:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 660:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 661:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Loop through the sensors until non-skipped is found */
 662:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         snsNum = CapSense_1_curFlashWdgtPtr->totalNumSns;
 663:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         while ((snsIndex < snsNum) && (CapSense_1_curRamSnsPtr->subConvNum == 0u))
 664:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 665:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Increment sensor pointers */
 666:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr++;
 667:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_sensorIndex++;
 668:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             snsIndex++;
 669:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 670:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /*
 671:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 672:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 673:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         */
 674:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalTx = (uint16)(CapSense_1_curFlashWdgtPtr->numRows - (snsIndex % CapS
 675:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalRx  = (uint16)(CapSense_1_curFlashWdgtPtr->numCols - (snsIndex / Cap
 676:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 677:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Scan sensor if it's index within a valid range otherwise do nothing as all the sensors a
 678:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (snsIndex < snsNum)
 679:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 680:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 681:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if ((CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_1_GANGED_SNS_MASK) != 0u)
 682:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 683:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect all Rx electrodes */
 684:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangRxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 685:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangRxPtr += snsIndex /CapSense_1_curFlashWdgtPtr->numRows;
 686:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangRxPtr->numPins;
 687:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId]
 688:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
 689:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 690:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
 691:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
 692:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
 693:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 694:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect all Tx electrodes */
 695:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 696:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangTxPtr += (CapSense_1_curFlashWdgtPtr->numCols + snsIndex % Ca
 697:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangTxPtr->numPins;
 698:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId]
 699:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
 700:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 701:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
 702:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
 703:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }while (0u != numElectrodes);
 704:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Assign callback to ISR */
 705:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostMultiScanGanged;
 706:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
 707:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
 708:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN) */
 709:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 710:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Find Rx pointer: Rx = Base_address + SnsIndex / total_Tx */
 711:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgt
 712:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr += (snsIndex / CapSense_1_curFlashWdgtPtr->numRows);
 713:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Find Tx pointer: Tx = Base_address + total_Rx + SnsIndex % total_Tx */
 714:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgt
 715:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr += CapSense_1_curFlashWdgtPtr->numCols;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 14


 716:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr += (snsIndex % CapSense_1_curFlashWdgtPtr->numRows);
 717:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Connect Tx and Rx electrodes for scan */
 718:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 719:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 720:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 721:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostMultiScan;
 722:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 723:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 724:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 725:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
 726:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 727:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 728:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 729:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Set scan status, enter critical section and initiate scan */
 730:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.status |= CapSense_1_SW_STS_BUSY;
 731:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 732:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
 733:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
 734:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 735:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
 736:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 737:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
 738:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 739:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 740:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 741:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 742:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /*
 743:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 744:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 745:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         */
 746:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalTx = CapSense_1_curFlashWdgtPtr->numRows;
 747:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalRx  = CapSense_1_curFlashWdgtPtr->numCols;
 748:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 749:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* If Component contains CSX ganged sensor, then check if widget contains ganged sensor */
 750:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_CSX_GANGED_SNS_EN == 1u)
 751:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             if ((CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_1_GANGED_SNS_MASK) != 0u)
 752:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 753:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
 754:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Rx
 755:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  2. Get number of Rx pin
 756:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  3. Get pointer to the Rx pin
 757:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  4. Connect all Rx pins
 758:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
 759:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curGangRxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 760:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangRxPtr->numPins ;
 761:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId];
 762:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 763:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 764:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
 765:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
 766:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 767:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 768:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
 769:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Tx (Tx = Base + number of Rx).
 770:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  2. Get number of Tx electrodes
 771:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  3. Get pointer the Tx electrode
 772:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  4. Connect all Tx
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 15


 773:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
 774:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 775:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curGangTxPtr += CapSense_1_curFlashWdgtPtr->numCols;
 776:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangTxPtr->numPins ;
 777:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
 778:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 779:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 780:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 781:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
 782:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
 783:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }while (0u != numElectrodes);
 784:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 785:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Assign callback to ISR */
 786:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostMultiScanGanged;
 787:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 788:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 789:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             else
 790:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 791:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 792:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
 793:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  If no ganged sensor in the Component OR current widget contains no ganged sns, t
 794:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *    1. Find Rx pointer: Rx = Base address.
 795:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *    2. Find Tx pointer: Tx = Base address + total Rx
 796:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
 797:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgt
 798:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = CapSense_1_curRxIOPtr;
 799:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr->numCols
 800:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 801:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Connect first Tx and first Rx IOs for scan */
 802:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 803:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 804:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 805:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 806:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostMultiScan;
 807:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 808:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 809:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 810:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
 811:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 812:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 813:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set scan status, enter critical section and initiate scan */
 815:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_dsRam.status |= CapSense_1_SW_STS_BUSY;
 816:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
 818:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****            (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
 819:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****            (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 820:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
 821:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 822:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsCSXStartSample();
 823:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 824:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 825:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 826:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 827:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXScanExt()
 829:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 16


 830:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 831:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 832:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Starts the CSX conversion on the preconfigured sensor. This function requires
 833:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  using the CapSense_1_CSXSetupWidgetExt() function to set up a
 834:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  widget.
 835:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 836:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 837:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function performs single scanning of one sensor in the widget configured
 838:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  by the CapSense_1_CSXSetupWidgetExt() function. It does the following
 839:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  tasks:
 840:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    1. Sets a busy flag in the CapSense_1_dsRam structure.
 841:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    2. Configures the Tx clock frequency.
 842:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    3. Configures the Modulator clock frequency.
 843:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    4. Configures the IDAC value.
 844:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    5. Starts single scanning.
 845:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 846:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 847:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 848:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example). This
 849:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  function is called when no scanning is in progress. I.e.
 850:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
 851:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 852:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  The sensor must be preconfigured by using the
 853:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXSetupWidgetExt() API prior to calling this function.
 854:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  The sensor remains ready for the next scan if a previous scan was triggered
 855:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  by using the CapSense_1_CSXScanExt() function. In this case, calling
 856:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXSetupWidgetExt() is not required every time before the
 857:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXScanExt() function. If a previous scan was triggered in
 858:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  any other way - CapSense_1_Scan(), CapSense_1_ScanAllWidgets()
 859:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  or CapSense_1_RunTuner() - (see the CapSense_1_RunTuner() function
 860:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  description for more details), the sensor must be preconfigured again by
 861:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  using the CapSense_1_CSXSetupWidgetExt() API prior to calling the
 862:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXScanExt() function.
 863:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 864:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  If disconnection of the sensors is required after calling
 865:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXScanExt(), the CapSense_1_CSXDisconnectTx() and
 866:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXDisconnectRx() APIs can be used.
 867:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 868:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 869:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 870:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXScanExt(void)
 871:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 872:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 873:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
 874:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 875:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 876:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 877:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 878:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (0u != CapSense_1_curRamSnsPtr->subConvNum)
 879:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 880:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Set busy flag and start conversion */
 881:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.status |= CapSense_1_SW_STS_BUSY;
 882:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 883:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
 884:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
 885:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 886:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 17


 887:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 888:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
 889:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 890:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
 891:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set busy flag and start conversion */
 892:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_dsRam.status |= CapSense_1_SW_STS_BUSY;
 893:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 894:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
 895:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****            (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
 896:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****            (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 897:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
 898:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 899:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsCSXStartSample();
 900:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 901:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 902:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 903:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 904:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 905:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXPostMultiScan
 906:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 907:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 908:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 909:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   ISR function implements the multiple-sensor scanning for un-ganged CSX widgets.
 910:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function is called by the Component ISR only, it should not be used by
 911:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the application layer.
 912:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 913:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 914:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 915:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostMultiScan(void)
 916:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 917:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
 918:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_EntryCallback();
 919:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_ENTRY_CALLBACK */
 920:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 921:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
 922:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] = \
 923:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                              (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
 924:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 925:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 926:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
 927:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 928:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 929:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
 930:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_scanFreqIndex++;
 931:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 932:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 933:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeImoFreq((uint32)CapSense_1_scanFreqIndex);
 934:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
 935:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeClkFreq((uint32)CapSense_1_scanFreqIndex);
 936:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 937:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 938:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
 939:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 940:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
 941:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 942:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 943:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 18


 944:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
 945:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 946:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 947:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 948:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
 949:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
 950:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
 951:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 952:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 953:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 954:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 955:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 956:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect Tx/Rx electrodes of previously scanned sensor as preparation for next
 957:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr);
 958:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
 959:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 960:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
 961:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 962:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 963:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
 964:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_sensorIndex++;
 965:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 966:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment sensor pointers */
 967:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
 968:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curWdgtTotalTx--;
 969:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalTx > 0u)
 970:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 971:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr++;
 972:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 973:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
 974:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 975:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalRx--;
 976:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         if (CapSense_1_curWdgtTotalRx > 0u)
 977:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
 978:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curRxIOPtr++;
 979:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curWdgtTotalTx  = CapSense_1_curFlashWdgtPtr->numRows;
 980:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_
 981:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curTxIOPtr = & CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdg
 982:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
 983:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 984:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while ((CapSense_1_curWdgtTotalRx != 0u) && (CapSense_1_curRamSnsPtr->subConvNum 
 985:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 986:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Perform the next scan or switch to the next widget */
 987:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if(CapSense_1_curWdgtTotalRx != 0u)
 988:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 989:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect Tx/Rx electrodes for the next scan */
 990:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 991:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 992:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
 993:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsCSXStartSample();
 994:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
 995:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
 996:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 997:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
 998:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_requestScanAllWidget != 0u)
 999:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1000:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_SsPostAllWidgetsScan();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 19


1001:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1002:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1003:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1004:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_dsRam.scanCounter++;
1005:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1006:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1007:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1008:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1009:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1010:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
1011:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  Disconnect Tx electrodes of previously scanned sensor as
1012:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  preparation for next sensor scan
1013:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
1014:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectTx (CapSense_1_curTxIOPtr);
1015:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1016:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1017:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_sensorIndex++;
1018:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1019:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
1020:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  Initiate scan for next sensor in widget, if all the sensors in
1021:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  widget are not scanned
1022:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
1023:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curWdgtTotalTx--;
1024:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if (CapSense_1_curWdgtTotalTx > 0u)
1025:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1026:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /*
1027:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  1. Increment pointer to next Tx
1028:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  2. Connect next Rx for scan
1029:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  3. Increment pointer to sns data
1030:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     */
1031:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curTxIOPtr++;
1032:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectTx (CapSense_1_curTxIOPtr);
1033:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
1034:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1035:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1036:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsCSXStartSample();
1037:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1038:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1039:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Check if all Rx are looped through */
1040:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
1041:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1042:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curWdgtTotalRx--;
1043:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalRx > 0u)
1044:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1045:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /*
1046:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  1. Disconnect current Rx electrode
1047:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  2. Connect next Rx electrode
1048:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1049:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  4. Find first Tx electrode again
1050:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  5. Connect first Tx electrode
1051:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         */
1052:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
1053:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr++;
1054:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
1055:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalTx  = CapSense_1_curFlashWdgtPtr->numRows;
1056:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curF
1057:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = & CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 20


1058:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
1059:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1060:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Increment RAM sensor pointer pointer */
1061:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRamSnsPtr++;
1062:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1063:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Initiate sample */
1064:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_SsCSXStartSample();
1065:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1066:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1067:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1068:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* If all the sensors are scanned, disconnect Tx */
1069:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
1070:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1071:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1072:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         if (CapSense_1_requestScanAllWidget != 0u)
1073:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1074:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_SsPostAllWidgetsScan();
1075:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1076:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         else
1077:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1078:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             /*
1079:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *  All pending scans completed,
1080:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *    1. update the counter to indicat same
1081:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
1082:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             */
1083:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.scanCounter++;
1084:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1085:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1086:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1087:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1088:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1089:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1090:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1091:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_EXIT_CALLBACK
1092:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_ExitCallback();
1093:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_EXIT_CALLBACK */
1094:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1095:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1096:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1097:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXPostMultiScanGanged
1099:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1100:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1101:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1102:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1103:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1104:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the application layer.
1105:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1106:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1107:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1108:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1109:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the application layer.
1110:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1111:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1112:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_CSX_GANGED_SNS_EN == 1u)
1113:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1114:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostMultiScanGanged(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 21


1115:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1116:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 numElectrodes;
1117:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1118:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
1119:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_EntryCallback();
1120:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_ENTRY_CALLBACK */
1121:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1122:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
1123:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] = \
1124:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
1125:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1126:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1127:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1128:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
1129:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1130:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1131:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_scanFreqIndex++;
1132:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1133:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
1134:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeImoFreq((uint32)CapSense_1_scanFreqIndex);
1135:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
1136:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeClkFreq((uint32)CapSense_1_scanFreqIndex);
1137:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
1138:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1139:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
1140:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1141:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
1142:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
1143:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1144:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
1145:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1146:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1147:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1148:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
1149:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
1150:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
1151:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
1152:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
1153:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1154:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
1155:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1156:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1157:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect Tx electrodes of previously scanned sensor as preparation for next se
1158:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangTxPtr->numPins;
1159:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
1160:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
1161:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1162:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr++);
1163:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
1164:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1165:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect Rx electrodes of previously scanned sensor as preparation for next se
1166:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangRxPtr->numPins;
1167:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId];
1168:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
1169:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1170:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr++);
1171:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 22


1172:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1173:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1174:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
1175:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
1176:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1177:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
1178:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_sensorIndex++;
1179:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1180:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment RAM sensor pointer */
1181:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
1182:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curWdgtTotalTx--;
1183:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalTx > 0u)
1184:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1185:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curGangTxPtr++;
1186:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1187:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1188:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1189:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1190:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalRx--;
1191:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         if (CapSense_1_curWdgtTotalRx > 0u)
1192:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1193:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curGangRxPtr++;
1194:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curWdgtTotalTx = CapSense_1_curFlashWdgtPtr->numRows;
1195:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
1196:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curGangTxPtr += CapSense_1_curFlashWdgtPtr->numCols;
1197:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1198:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1199:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while ((CapSense_1_curWdgtTotalRx != 0u) && (CapSense_1_curRamSnsPtr->subConvNum 
1200:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1201:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if(CapSense_1_curWdgtTotalRx != 0u)
1202:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1203:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1204:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangTxPtr->numPins;
1205:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId]
1206:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
1207:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1208:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
1209:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
1210:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1211:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1212:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangRxPtr->numPins ;
1213:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId]
1214:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
1215:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1216:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
1217:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
1218:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1219:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1220:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsCSXStartSample();
1221:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1222:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
1223:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1224:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
1225:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_requestScanAllWidget != 0u)
1226:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1227:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_SsPostAllWidgetsScan();
1228:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 23


1229:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1230:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1231:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_dsRam.scanCounter++;
1232:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1233:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1234:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1235:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1236:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1237:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect ALL pins of previously scanned Tx */
1238:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangTxPtr->numPins ;
1239:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
1240:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
1241:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1242:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectTx (CapSense_1_curTxIOPtr++);
1243:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
1244:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1245:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1246:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1247:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_sensorIndex++;
1248:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1249:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Check if all Tx are scanned, if not, initiate scan for next Tx */
1250:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curWdgtTotalTx--;
1251:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if (CapSense_1_curWdgtTotalTx > 0u)
1252:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1253:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /*
1254:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  1. Find pointer of next Tx (ganged)
1255:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  2. Connect all Tx pins
1256:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     */
1257:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangTxPtr++;
1258:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangTxPtr->numPins ;
1259:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId]
1260:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
1261:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1262:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
1263:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
1264:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1265:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1266:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment RAM pointer to next sensor */
1267:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
1268:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1269:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Reset scan result holder and initiate scan */
1270:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsCSXStartSample();
1271:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1272:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
1273:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1274:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1275:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curWdgtTotalRx--;
1276:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalRx > 0u)
1277:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1278:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* 1. Disconnect current Rx ALL pins */
1279:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes = CapSense_1_curGangRxPtr->numPins ;
1280:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPi
1281:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         do
1282:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1283:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr++);
1284:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             numElectrodes--;
1285:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 24


1286:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1287:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* 2. Connect next Rx ALL pins */
1288:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curGangRxPtr++;
1289:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes = CapSense_1_curGangRxPtr->numPins ;
1290:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPi
1291:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         do
1292:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1293:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
1294:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             numElectrodes--;
1295:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1296:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1297:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /*
1298:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1299:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  4. Find first Tx  again
1300:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  5. Connect first Tx ALL pins
1301:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         */
1302:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalTx = CapSense_1_curFlashWdgtPtr->numRows;
1303:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
1304:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curGangTxPtr += CapSense_1_curFlashWdgtPtr->numCols;
1305:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1306:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* 6. Connect Tx ALL pins */
1307:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes = CapSense_1_curGangTxPtr->numPins ;
1308:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPi
1309:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         do
1310:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1311:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
1312:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             numElectrodes--;
1313:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1314:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1315:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Increment RAM pointer to next sensor */
1316:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRamSnsPtr++;
1317:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1318:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Reset scan result holder and initiate scan */
1319:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_SsCSXStartSample();
1320:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1321:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1322:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1323:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Disconnect ALL electrodes of previously scanned Rx */
1324:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes = CapSense_1_curGangRxPtr->numPins ;
1325:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPi
1326:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         do
1327:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1328:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr++);
1329:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             numElectrodes--;
1330:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1331:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1332:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1333:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         if (CapSense_1_requestScanAllWidget != 0u)
1334:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1335:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_SsPostAllWidgetsScan();
1336:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1337:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         else
1338:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1339:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             /*
1340:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *  All pending scans completed,
1341:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *    1. update the counter to indicate same
1342:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 25


1343:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             */
1344:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.scanCounter++;
1345:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1346:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1347:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1348:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1349:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1350:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1351:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1352:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_EXIT_CALLBACK
1353:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_ExitCallback();
1354:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_EXIT_CALLBACK */
1355:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1356:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1357:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif  /* (CapSense_1_CSX_GANGED_SNS_EN == 1u) */
1358:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1359:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1360:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXPostSingleScan
1361:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1362:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1363:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1364:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   The ISR function for single-sensor scanning implementation.
1365:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1366:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1367:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function is used by CapSense_1 ISR in the CSX scanning mode to implement
1368:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the single-sensor scanning.
1369:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function should not be used by the application layer.
1370:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1371:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1372:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1373:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostSingleScan(void)
1374:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1375:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
1376:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_EntryCallback();
1377:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_ENTRY_CALLBACK */
1378:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1379:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /*
1380:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     * Copy scan result into sensor raw count array and clear busy flag
1381:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    No sensor is connected or disconnected in this function
1382:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    Calling CapSense_1_ScanExt from application would perform
1383:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    one more scan of same sensor. Specifically for low-power mode.
1384:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     */
1385:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] =
1386:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
1387:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1388:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1389:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1390:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
1391:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1392:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1393:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_scanFreqIndex++;
1394:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1395:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
1396:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeImoFreq((uint32)CapSense_1_scanFreqIndex);
1397:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
1398:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeClkFreq((uint32)CapSense_1_scanFreqIndex);
1399:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 26


1400:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1401:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
1402:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1403:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
1404:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
1405:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1406:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
1407:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1408:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1409:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1410:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
1411:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
1412:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
1413:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
1414:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
1415:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1416:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
1417:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /*
1418:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             * All pending scans completed,
1419:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *   1. Update the counter to indicate same
1420:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *   2. Clear busy state as scanning is completed
1421:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             */
1422:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.scanCounter++;
1423:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1424:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1425:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1426:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_EXIT_CALLBACK
1427:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_ExitCallback();
1428:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_EXIT_CALLBACK */
1429:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1430:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1431:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1432:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXCalibrateWidget
1433:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1434:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1435:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1436:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calibrates the raw count values of all the sensors/nodes in a CSX widget.
1437:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1438:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1439:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Performs a successive approximation search algorithm to find appropriate
1440:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  IDAC values for sensors in the specified widget that provides a raw count
1441:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  to the level specified by the target parameter.
1442:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1443:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is available when the CSX Enable IDAC auto-calibration
1444:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  parameter is enabled.
1445:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1446:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param widgetId
1447:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the ID number of the CSX widget to calibrate its raw count.
1448:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the
1449:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1 Configuration header file defined as
1450:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_<WidgetName>_WDGT_ID.
1451:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1452:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param target
1453:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the calibration target in percentages of the maximum raw count.
1454:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1455:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1456:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 27


1457:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1458:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXCalibrateWidget(uint32 widgetId, uint16 target)
1459:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1460:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
1461:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 rawTarget;
1462:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Counter for loop execution */
1463:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 totalSns;
1464:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Counter for loop execution */
1465:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 calibrationIndex;
1466:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Currently used IDAC-bit */
1468:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint8 curIdacMask = (1u << (CapSense_1_CSX_IDAC_BITS_USED-1u));
1469:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Next used IDAC-bit */
1470:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint8 nextIdacMask = (curIdacMask >> 1u);
1471:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1472:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* initialize ptr to sensor structures */
1473:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)CapSense_1_dsFlash.wdgtArray[widgetId].p
1474:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1475:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1476:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Calculate target raw count */
1477:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod  = CapSense_1_SsCalcCsxScanPeriod(
1478:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
1479:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         rawTarget = CapSense_1_csxScanPeriod;
1480:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / CapSense_1_PERCENTAGE_100;
1481:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1482:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1483:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if (CapSense_1_SENSE_METHOD_CSX_E ==
1484:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****        CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1485:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1486:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Find out total sensors/nodes in widget */
1487:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         totalSns = ((uint32)CapSense_1_dsFlash.wdgtArray[widgetId].numCols *
1488:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     (uint32)CapSense_1_dsFlash.wdgtArray[widgetId].numRows);
1489:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1490:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Clear raw count registers and IDAC registers of all the sensors/nodes */
1491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1492:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1493:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_0] = 0u;
1494:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_0] = curIdacMask;
1495:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1496:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_1] = 0u;
1497:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_2] = 0u;
1498:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] = curIdacMask;
1499:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] = curIdacMask;
1500:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
1501:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr++;
1502:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1503:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1504:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Perform binary search for accurate IDAC value for each sensor/node */
1505:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         do
1506:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1507:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Scan all the sensors/nodes in widget */
1508:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (void)CapSense_1_SetupWidget(widgetId);
1509:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (void)CapSense_1_Scan();
1510:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1511:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             while ((CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY) != 0u)
1512:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
1513:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 28


1514:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1515:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Get access to sensor data */
1516:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)CapSense_1_dsFlash.wdgtArray[wid
1517:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1518:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Check raw count and adjust IDAC, loop through all the sensors/nodes */
1519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1520:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
1521:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Calculate raw count target for specified node */
1522:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1523:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     rawTarget = (CapSense_1_SsCSXOversample() * target) / CapSense_1_PERCENTAGE_100
1524:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif
1525:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1526:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Check if current raw count is above target,
1527:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *   if yes, clear the MS bit of bit
1528:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *   if no, keep the MS bit and set next bit
1529:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
1530:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if (CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_0] > rawTarget)
1531:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1532:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_0] &= (uint8)(~curIda
1533:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1534:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_0] |= nextIdacMask;
1535:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1536:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1537:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_1] > rawTarget)
1538:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1539:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] &= (uint8)(~cu
1540:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1541:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1542:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_2] > rawTarget)
1543:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1544:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] &= (uint8)(~cu
1545:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1546:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1547:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] |= nextIdacMask;
1548:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] |= nextIdacMask;
1549:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif
1550:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr++;
1551:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
1552:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1553:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Shift both current idac and pre Idac values to right by 1 */
1554:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             curIdacMask = nextIdacMask;
1555:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             nextIdacMask = nextIdacMask >> 1u;
1556:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1557:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         while (curIdacMask != 0u);
1558:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1559:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1560:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1561:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (CapSense_1_CSX_IDAC_AUTOCAL_EN == CapSense_1_ENABLE) */
1562:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1563:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
1564:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1565:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXStartSample
1566:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1567:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1568:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1569:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1570:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 29


1571:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1572:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1573:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1574:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXStartSample(void)
1576:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1577:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 tmpRegVal;
1578:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1579:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = (uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex];
1580:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = (tmpRegVal & CapSense_1_IDAC_MOD_VAL_MASK) | CapSense_1_DEFAULT_CSD_IDACA_CFG;
1581:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, tmpRegVal);
1582:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1583:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1584:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1585:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod = (uint16)CapSense_1_SsCSXOversample();
1586:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (uint32)CapSense_1_curRamSnsPtr->subConvNum);
1587:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1588:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1589:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Clear scan result holder */
1590:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_csxRawCount = 0u;
1591:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1592:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_START_SAMPLE_CALLBACK
1593:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_StartSampleCallback(CapSense_1_widgetIndex, CapSense_1_sensorIndex);
1594:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_START_SAMPLE_CALLBACK */
1595:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1596:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_SsCSXStartSampleExt();
1597:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1598:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #else
1599:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1600:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1601:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXStartSample
1602:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1603:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1604:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1605:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1606:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1607:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param widgetIndex The ID of the widget to be calibrated.
1608:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1609:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1610:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1611:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1612:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXStartSample(void)
1613:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1614:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint8 critSect;
1615:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 tmpRegVal;
1616:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1617:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1618:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(CapSense_1_IDAC_PTR);
1619:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal &= ~(CapSense_1_IDAC_MOD_MASK);
1620:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal |= (CapSense_1_IDAC_MOD_MODE_VARIABLE | (uint32)CapSense_1_curRamSnsPtr->idacComp[Cap
1621:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_PTR, tmpRegVal);
1622:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1623:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1624:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Clear scan result holder */
1625:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_csxRawCount = 0u;
1626:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1627:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_START_SAMPLE_CALLBACK
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 30


1628:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_StartSampleCallback(CapSense_1_widgetIndex, CapSense_1_sensorIndex);
1629:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_START_SAMPLE_CALLBACK */
1630:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1631:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1632:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1633:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod = (uint16)CapSense_1_SsCSXOversample();
1634:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1635:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1636:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Disable interrupts and initiate scan */
1637:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1638:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_SsCSXStartSampleExt();
1639:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1640:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1641:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1642:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1643:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1644:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXConnectTx
1645:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1646:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1647:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1648:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Connects a Tx electrode to the CSX scanning hardware.
1649:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1650:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1651:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function connects a port pin (Tx electrode) to the CSD_SENSE signal.
1652:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  It is assumed that drive mode of the port pin is already set to STRONG
1653:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  in the HSIOM_PORT_SELx register.
1654:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1655:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1656:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1657:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1658:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  electrode for example).
1659:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1660:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param txPtr
1661:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1662:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  to be connected to the sensing HW block as a Tx pin.
1663:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1664:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1665:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXConnectTx(CapSense_1_FLASH_IO_STRUCT const *txPtr)
1666:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1667:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
1668:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1669:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->pcPtr);
1670:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |= (CapSense_1_GPIO_STRGDRV << txPtr->shift);
1671:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->pcPtr, regValue);
1672:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1673:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1674:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |= (CapSense_1_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift);
1675:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1676:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1677:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1678:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1679:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXConnectRx
1680:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1681:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1682:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1683:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Connects an Rx electrode to the CSX scanning hardware.
1684:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 31


1685:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1686:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function connects a port pin (Rx electrode) to AMUXBUS-A and sets
1687:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  drive mode of the port pin to High-Z in the GPIO_PRT_PCx register.
1688:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1689:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1690:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1691:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1692:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  electrode for example).
1693:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1694:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param rxPtr
1695:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1696:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  to be connected to the sensing HW block as an Rx pin.
1697:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1698:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1699:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXConnectRx(CapSense_1_FLASH_IO_STRUCT const *rxPtr)
1700:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1701:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
1702:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1703:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->pcPtr);
1704:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(CapSense_1_GPIO_PC_MASK << rxPtr->shift);
1705:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
1706:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1707:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1708:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |=  (CapSense_1_HSIOM_SEL_AMUXA << rxPtr->hsiomShift);
1709:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1710:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1711:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1712:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1713:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXDisconnectTx
1714:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1715:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1716:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1717:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Disconnects a Tx electrode from the CSX scanning hardware.
1718:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1719:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1720:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function disconnects a port pin (Tx electrode) from the CSD_SENSE
1721:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  signal and configures the port pin to the strong drive mode. It is assumed
1722:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  that the data register (GPIO_PRTx_DR) of the port pin is already 0.
1723:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1724:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1725:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1726:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1727:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  electrode for example).
1728:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1729:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param txPtr
1730:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a Tx pin
1731:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1732:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1733:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1734:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXDisconnectTx(CapSense_1_FLASH_IO_STRUCT const *txPtr)
1735:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1736:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
1737:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1738:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1739:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
1740:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1741:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 32


1742:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1743:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1744:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXDisconnectRx
1745:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1746:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1747:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1748:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Disconnects an Rx electrode from the CSX scanning hardware.
1749:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1750:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1751:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function disconnects a port pin (Rx electrode) from AMUXBUS_A and
1752:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  configures the port pin to the strong drive mode. It is assumed that the
1753:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  data register (GPIO_PRTx_DR) of the port pin is already 0.
1754:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1755:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1756:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1757:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for
1758:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  an electrode for example).
1759:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1760:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param rxPtr
1761:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to an Rx pin
1762:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1763:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1764:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1765:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXDisconnectRx(CapSense_1_FLASH_IO_STRUCT const *rxPtr)
1766:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1767:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
1768:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1769:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1770:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
1771:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1772:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1773:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->pcPtr);
1774:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(CapSense_1_GPIO_PC_MASK << rxPtr->shift);
1775:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |=  (CapSense_1_GPIO_STRGDRV << rxPtr->shift);
1776:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
1777:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1778:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->drPtr);
1779:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
1780:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
1781:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1782:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1783:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1784:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1785:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXGetTxClkDivider
1786:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1787:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1788:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1789:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value for one-dimension widgets
1790:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  and the Column Sense Clock divider value for two-dimension widgets.
1791:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1792:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1793:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value based on the Component
1794:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  configuration. The function is applicable for one-dimension widgets and for
1795:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  two-dimension widgets.
1796:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1797:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param
1798:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  widgetId Specifies the ID of the widget.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 33


1799:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1800:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \return The Sense Clock Divider value for one-dimension widgets
1801:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *         and the Column Sense Clock divider value for two-dimension widgets.
1802:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1803:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1804:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** uint32 CapSense_1_SsCSXGetTxClkDivider(uint32 widgetId)
1805:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1806:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 retVal;
1807:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1808:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Get sense divider based on configuration */
1809:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
1810:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
1811:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1812:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1813:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
1814:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1815:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         retVal = (uint32)(ptrWdgt->snsClk);
1816:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
1817:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         retVal = (uint32)CapSense_1_dsRam.snsCsxClk;
1818:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
1819:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1820:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if(widgetId == 0uL)
1821:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1822:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         ;
1823:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1824:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1825:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     return (retVal);
1826:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1827:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1828:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1829:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1830:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCalcCsxScanPeriod
1831:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1832:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1833:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1834:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calculates scan period for a desired CSX widget.
1835:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1836:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1837:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function calculates a scan period for a desired CSX widget considering
1838:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  common Tx clock option.
1839:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1840:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param wdgtPtr
1841:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  The pointer to a register map object that contains widget information.
1842:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1843:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \return
1844:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Returns the CSX scan period for the widget.
1845:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1846:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1847:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_SsCalcCsxScanPeriod(CapSense_1_RAM_WD_BASE_STRUCT const *wdgtPtr)
1848:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
  27              		.loc 1 1848 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
1849:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 temp;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 34


1850:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1851:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
1852:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = (uint32)(wdgtPtr->snsClk);
  33              		.loc 1 1852 0
  34 0000 4389     		ldrh	r3, [r0, #10]
  35              	.LVL1:
1853:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
1854:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = (uint32)(CapSense_1_dsRam.snsCsxClk);
1855:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
1856:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1857:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
1858:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp  = LO16((uint32)wdgtPtr->resolution * (temp - CapSense_1_CSX_DEADBAND_CYCLES_NUMBER));
  36              		.loc 1 1858 0
  37 0002 0288     		ldrh	r2, [r0]
  38 0004 981E     		subs	r0, r3, #2
  39              	.LVL2:
  40 0006 5043     		muls	r0, r2
  41 0008 80B2     		uxth	r0, r0
  42              	.LVL3:
1859:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
1860:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1861:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             temp = (temp / (uint32)CapSense_1_dsRam.modCsxClk);
1862:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1863:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1864:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = ((uint32)wdgtPtr->resolution * CapSense_1_NUM_HALF_CYCLES * temp);
1865:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1866:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1867:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* return the scan period */
1868:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     return ((uint16)temp);
1869:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
  43              		.loc 1 1869 0
  44              		@ sp needed
  45 000a 7047     		bx	lr
  46              		.cfi_endproc
  47              	.LFE16:
  48              		.size	CapSense_1_SsCalcCsxScanPeriod, .-CapSense_1_SsCalcCsxScanPeriod
  49              		.global	__aeabi_uidiv
  50              		.section	.text.CapSense_1_SsCSXStartSample,"ax",%progbits
  51              		.align	2
  52              		.code	16
  53              		.thumb_func
  54              		.type	CapSense_1_SsCSXStartSample, %function
  55              	CapSense_1_SsCSXStartSample:
  56              	.LFB10:
1576:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 tmpRegVal;
  57              		.loc 1 1576 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61 0000 10B5     		push	{r4, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 14, -4
1579:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = (tmpRegVal & CapSense_1_IDAC_MOD_VAL_MASK) | CapSense_1_DEFAULT_CSD_IDACA_CFG;
  65              		.loc 1 1579 0
  66 0002 344B     		ldr	r3, .L10
  67 0004 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 35


  68 0006 344B     		ldr	r3, .L10+4
  69 0008 1B78     		ldrb	r3, [r3]
  70 000a D318     		adds	r3, r2, r3
  71 000c 5B7D     		ldrb	r3, [r3, #21]
  72              	.LVL4:
1580:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, tmpRegVal);
  73              		.loc 1 1580 0
  74 000e 334A     		ldr	r2, .L10+8
  75 0010 1343     		orrs	r3, r2
  76              	.LVL5:
1581:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  77              		.loc 1 1581 0
  78 0012 334A     		ldr	r2, .L10+12
  79 0014 1360     		str	r3, [r2]
1590:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  80              		.loc 1 1590 0
  81 0016 0022     		movs	r2, #0
  82 0018 324B     		ldr	r3, .L10+16
  83              	.LVL6:
  84 001a 1A80     		strh	r2, [r3]
  85              	.LVL7:
  86              	.LBB4:
  87              	.LBB5:
1870:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1871:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1872:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1873:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1874:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXOversample
1875:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1876:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1877:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1878:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Calculates the scan period of specific node.
1879:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1880:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1881:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Calculates the scan period of specific node that is used as maximum
1882:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   raw count at raw count inversion (CapSense_1_csxScanPeriod variable).
1883:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   The CapSense_1_curFlashWdgtPtr and CapSense_1_curRamSnsPtr
1884:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   must be configured to proper widget/sensor before calling this function.
1885:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1886:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \return
1887:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Returns the scan period of specific node (used as maximum raw count)
1888:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1889:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1890:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint32 CapSense_1_SsCSXOversample(void)
1891:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1892:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 temp;
1893:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1894:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
1895:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
1896:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_curFlashWdgtPtr->ptr2WdgtRa
1897:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = (uint32)(curRamWdgtBasePtr->snsClk);
1898:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
1899:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = (uint32)(CapSense_1_dsRam.snsCsxClk);
1900:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
1901:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1902:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
1903:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp  = LO16((uint32)CapSense_1_curRamSnsPtr->subConvNum * (temp - CapSense_1_CSX_DEADBAND_
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 36


1904:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
1905:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1906:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             temp = (temp / (uint32)CapSense_1_dsRam.modCsxClk);
1907:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1908:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1909:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = ((uint32)CapSense_1_curRamSnsPtr->subConvNum * CapSense_1_NUM_HALF_CYCLES * temp);
1910:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1911:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1912:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* return the scan period */
1913:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     return (temp);
1914:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1915:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1916:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1917:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1918:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
1919:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /**
1920:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \cond SECTION_C_INTERRUPT
1921:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \addtogroup group_c_interrupt
1922:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \{
1923:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** */
1924:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1925:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXScanISR
1926:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1927:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1928:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1929:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This is an internal ISR function to handle the CSX sensing method operation.
1930:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1931:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1932:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This handler covers the following functionality:
1933:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - Read the result of the measurement and store it into the corresponding register of
1934:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *     the data structure.
1935:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - If the Noise Metric functionality is enabled, then check the number of bad
1936:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *     conversions and repeat the scan of the current sensor of the number of bad
1937:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *     conversions is greater than the Noise Metric Threshold.
1938:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - Initiate the scan of the next sensor for multiple sensor scanning mode.
1939:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - Update the Status register in the data structure.
1940:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - Switch the HW block to the default state if scanning of all the sensors is
1941:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *     completed.
1942:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1943:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1944:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** CY_ISR(CapSense_1_CSXScanISR)
1945:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1946:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(0u != CapSense_1_CSX_NOISE_METRIC_EN)
1947:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 tmpRegVal;
1948:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (0u != CapSense_1_CSX_NOISE_METRIC_EN) */
1949:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(0u != CapSense_1_CSX_NOISE_METRIC_EN)
1950:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static uint32 CapSense_1_resamplingCyclesCnt = CapSense_1_RESAMPLING_CYCLES_MAX_NUMBER;
1951:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (0u != CapSense_1_CSX_NOISE_METRIC_EN) */
1952:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1953:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CyIntDisable(CapSense_1_ISR_NUMBER);
1954:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1955:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_DEFAULT_CSD_INTR_CFG);
1956:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1957:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_csxRawCount  = (uint16)(CY_GET_REG32(CapSense_1_RESULT_VAL1_PTR) &\
1958:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                                          CapSense_1_RESULT_VAL1_VALUE_MASK);
1959:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1960:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_csxRawCount += (uint16)(CY_GET_REG32(CapSense_1_RESULT_VAL2_PTR) &\
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 37


1961:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                                          CapSense_1_RESULT_VAL2_VALUE_MASK);
1962:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1963:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* This workaround neded to prevent overflow in the SW register map. Cypress ID #234358 */
1964:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if(CapSense_1_csxRawCount > CapSense_1_csxScanPeriod)
1965:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1966:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxRawCount = CapSense_1_csxScanPeriod;
1967:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1968:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1969:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(0u != CapSense_1_CSX_NOISE_METRIC_EN)
1970:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(CapSense_1_RESULT_VAL1_PTR) >> CapSense_1_RESULT_VAL1_BAD_CONVS_SHIFT;
1971:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1972:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if((tmpRegVal > CapSense_1_CSX_NOISE_METRIC_TH) && (CapSense_1_resamplingCyclesCnt > 0uL))
1973:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1974:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SCAN_CSD_SEQ_START_CFG);
1975:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_resamplingCyclesCnt--;
1976:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1977:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     else
1978:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1979:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_CSXPostScanApiPtr();
1980:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_resamplingCyclesCnt = CapSense_1_RESAMPLING_CYCLES_MAX_NUMBER;
1981:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1982:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #else
1983:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_CSXPostScanApiPtr();
1984:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (0u != CapSense_1_CSX_NOISE_METRIC_EN) */
1985:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1986:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if(CapSense_1_NOT_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
1987:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1988:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_DEFAULT_CSD_CONFIG_CFG);
1989:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_DEFAULT_CSD_CSDCMP_CFG);
1990:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, CapSense_1_DEFAULT_CSD_IDACA_CFG);
1991:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1992:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1993:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CyIntEnable(CapSense_1_ISR_NUMBER);
1994:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1995:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1996:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /** \}
1997:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \endcond */
1998:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1999:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
2000:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXStartSampleExt
2001:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
2002:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
2003:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
2004:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Starts the HW sequencer to perform the CSX conversion.
2005:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   specific widget.
2006:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
2007:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
2008:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function covers the following functionality:
2009:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *      1. Configures the HW sequencer to perform the coarse initialization.
2010:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *      2. Waiting for completion of the coarse initialization.
2011:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *      3. Configures the HW sequencer to perform the normal conversion.
2012:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *      4. Starts the normal conversion
2013:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
2014:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
2015:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static CY_INLINE void CapSense_1_SsCSXStartSampleExt(void)
2016:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
2017:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 filterDelay;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 38


2018:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 watchdogCounter;
2019:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2020:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 sampleClkFreqHz;
2021:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2022:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2023:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the coarse initialization. */
2024:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_CONFIG_PTR,           CapSense_1_DEFAULT_CSD_CONFIG_CFG);
  88              		.loc 1 2024 0
  89 001c 324A     		ldr	r2, .L10+20
  90 001e 334B     		ldr	r3, .L10+24
  91 0020 1A60     		str	r2, [r3]
2025:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_HSCMP_PTR,            CapSense_1_PRECHARGE_CSD_HSCMP_CFG);
  92              		.loc 1 2025 0
  93 0022 0122     		movs	r2, #1
  94 0024 324B     		ldr	r3, .L10+28
  95 0026 1A60     		str	r2, [r3]
2026:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR,      CapSense_1_PRECHARGE_CSD_SW_HS_P_SEL_CFG);
  96              		.loc 1 2026 0
  97 0028 1123     		movs	r3, #17
  98 002a 324A     		ldr	r2, .L10+32
  99 002c 1360     		str	r3, [r2]
2027:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR,      CapSense_1_PRECHARGE_CSD_SW_HS_N_SEL_CFG);
 100              		.loc 1 2027 0
 101 002e 8021     		movs	r1, #128
 102 0030 4904     		lsls	r1, r1, #17
 103 0032 314A     		ldr	r2, .L10+36
 104 0034 1160     		str	r1, [r2]
2028:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR,       CapSense_1_PRECHARGE_CSD_SW_DSI_SEL_CFG);
 105              		.loc 1 2028 0
 106 0036 314A     		ldr	r2, .L10+40
 107 0038 1360     		str	r3, [r2]
2029:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,    CapSense_1_PRECHARGE_CSD_SW_SHIELD_SEL_CFG);
 108              		.loc 1 2029 0
 109 003a 0622     		movs	r2, #6
 110 003c 304B     		ldr	r3, .L10+44
 111 003e 1A60     		str	r2, [r3]
2030:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR,    CapSense_1_PRECHARGE_CSD_SW_FW_MOD_SEL_CFG);
 112              		.loc 1 2030 0
 113 0040 304A     		ldr	r2, .L10+48
 114 0042 314B     		ldr	r3, .L10+52
 115 0044 1A60     		str	r2, [r3]
2031:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,   CapSense_1_PRECHARGE_CSD_SW_FW_TANK_SEL_CFG);
 116              		.loc 1 2031 0
 117 0046 314A     		ldr	r2, .L10+56
 118 0048 314B     		ldr	r3, .L10+60
 119 004a 1A60     		str	r2, [r3]
2032:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2033:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
2034:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****        (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
2035:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****        (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
2036:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
2037:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
2038:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2039:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SEQ_START_PTR,        CapSense_1_PRECHARGE_CSD_SEQ_START_CFG);
 120              		.loc 1 2039 0
 121 004c 314A     		ldr	r2, .L10+64
 122 004e 324B     		ldr	r3, .L10+68
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 39


 123 0050 1A60     		str	r2, [r3]
 124              	.LVL8:
2040:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2041:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Wait for the HSCMP trigger and retutn the sequencer to the IDLE state. */
2042:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     watchdogCounter = CapSense_1_CSX_PRECHARGE_WATCHDOG_CYCLES_NUM;
 125              		.loc 1 2042 0
 126 0052 F023     		movs	r3, #240
 127 0054 9B00     		lsls	r3, r3, #2
 128 0056 00E0     		b	.L3
 129              	.LVL9:
 130              	.L5:
2043:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     while((0u != (CapSense_1_SEQ_START_START_MASK & CY_GET_REG32(CapSense_1_SEQ_START_PTR))) && (0u
2044:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
2045:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         watchdogCounter--;
 131              		.loc 1 2045 0
 132 0058 013B     		subs	r3, r3, #1
 133              	.LVL10:
 134              	.L3:
2043:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     while((0u != (CapSense_1_SEQ_START_START_MASK & CY_GET_REG32(CapSense_1_SEQ_START_PTR))) && (0u
 135              		.loc 1 2043 0
 136 005a 2F4A     		ldr	r2, .L10+68
 137 005c 1268     		ldr	r2, [r2]
 138 005e D207     		lsls	r2, r2, #31
 139 0060 01D5     		bpl	.L4
 140 0062 002B     		cmp	r3, #0
 141 0064 F8D1     		bne	.L5
 142              	.L4:
2046:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
2047:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2048:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Reset the sequencer to the IDLE state if HSCMP not triggered till watchdog period is out. */
2049:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if(0u != (CapSense_1_SEQ_START_START_MASK & CY_GET_REG32(CapSense_1_SEQ_START_PTR)))
 143              		.loc 1 2049 0
 144 0066 2C4B     		ldr	r3, .L10+68
 145              	.LVL11:
 146 0068 1B68     		ldr	r3, [r3]
 147 006a DB07     		lsls	r3, r3, #31
 148 006c 03D5     		bpl	.L6
2050:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
2051:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR,  CapSense_1_DEFAULT_CSD_SEQ_START_CFG);
 149              		.loc 1 2051 0
 150 006e C222     		movs	r2, #194
 151 0070 9200     		lsls	r2, r2, #2
 152 0072 294B     		ldr	r3, .L10+68
 153 0074 1A60     		str	r2, [r3]
 154              	.L6:
2052:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
2053:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2054:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2055:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_1_dsRam.modCsxClk;
 155              		.loc 1 2055 0
 156 0076 2023     		movs	r3, #32
 157 0078 284A     		ldr	r2, .L10+72
 158 007a D15C     		ldrb	r1, [r2, r3]
 159 007c 2848     		ldr	r0, .L10+76
 160 007e FFF7FEFF 		bl	__aeabi_uidiv
 161              	.LVL12:
2056:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if(sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_12MHZ)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 40


 162              		.loc 1 2056 0
 163 0082 284B     		ldr	r3, .L10+80
 164 0084 9842     		cmp	r0, r3
 165 0086 04D9     		bls	.L8
2057:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
2058:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             filterDelay = CapSense_1_CONFIG_FILTER_DELAY_12MHZ;
2059:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
2060:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else if(sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_24MHZ)
 166              		.loc 1 2060 0
 167 0088 274B     		ldr	r3, .L10+84
 168 008a 9842     		cmp	r0, r3
 169 008c 03D8     		bhi	.L9
2061:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
2062:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             filterDelay = CapSense_1_CONFIG_FILTER_DELAY_24MHZ;
 170              		.loc 1 2062 0
 171 008e 3023     		movs	r3, #48
 172 0090 02E0     		b	.L7
 173              	.L8:
2058:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 174              		.loc 1 2058 0
 175 0092 2023     		movs	r3, #32
 176 0094 00E0     		b	.L7
 177              	.L9:
2063:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
2064:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
2065:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
2066:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             filterDelay = CapSense_1_CONFIG_FILTER_DELAY_48MHZ;
 178              		.loc 1 2066 0
 179 0096 4023     		movs	r3, #64
 180              	.L7:
 181              	.LVL13:
2067:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
2068:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
2069:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         filterDelay = CapSense_1_CONFIG_FILTER_DELAY_12MHZ;
2070:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2071:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2072:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the normal conversion. */
2073:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_PRESCAN_CSD_CONFIG_CFG | filterDelay);
 182              		.loc 1 2073 0
 183 0098 244A     		ldr	r2, .L10+88
 184 009a 1343     		orrs	r3, r2
 185              	.LVL14:
 186 009c 134A     		ldr	r2, .L10+24
 187 009e 1360     		str	r3, [r2]
2074:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_PRESCAN_CSD_CSDCMP_CFG);
 188              		.loc 1 2074 0
 189 00a0 234A     		ldr	r2, .L10+92
 190 00a2 244B     		ldr	r3, .L10+96
 191 00a4 1A60     		str	r2, [r3]
2075:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_HSCMP_PTR, CapSense_1_DEFAULT_CSD_HSCMP_CFG);
 192              		.loc 1 2075 0
 193 00a6 0023     		movs	r3, #0
 194 00a8 1149     		ldr	r1, .L10+28
 195 00aa 0B60     		str	r3, [r1]
2076:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 196              		.loc 1 2076 0
 197 00ac 1149     		ldr	r1, .L10+32
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 41


 198 00ae 0B60     		str	r3, [r1]
2077:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 199              		.loc 1 2077 0
 200 00b0 1149     		ldr	r1, .L10+36
 201 00b2 0B60     		str	r3, [r1]
2078:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_DSI_SEL_CFG);
 202              		.loc 1 2078 0
 203 00b4 2320     		movs	r0, #35
 204              	.LVL15:
 205 00b6 1149     		ldr	r1, .L10+40
 206 00b8 0860     		str	r0, [r1]
2079:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 207              		.loc 1 2079 0
 208 00ba 1149     		ldr	r1, .L10+44
 209 00bc 0B60     		str	r3, [r1]
2080:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 210              		.loc 1 2080 0
 211 00be 1249     		ldr	r1, .L10+52
 212 00c0 0B60     		str	r3, [r1]
2081:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 213              		.loc 1 2081 0
 214 00c2 1349     		ldr	r1, .L10+60
 215 00c4 0B60     		str	r3, [r1]
2082:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2083:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Clear all pending interrupts of CSD block */
2084:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_DEFAULT_CSD_INTR_CFG);
 216              		.loc 1 2084 0
 217 00c6 8321     		movs	r1, #131
 218 00c8 4900     		lsls	r1, r1, #1
 219 00ca 1B4B     		ldr	r3, .L10+100
 220 00cc 1960     		str	r1, [r3]
2085:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2086:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Start the normal conversion. */
2087:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SCAN_CSD_SEQ_START_CFG);
 221              		.loc 1 2087 0
 222 00ce 124B     		ldr	r3, .L10+68
 223 00d0 1A60     		str	r2, [r3]
 224              	.LBE5:
 225              	.LBE4:
1597:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #else
 226              		.loc 1 1597 0
 227              		@ sp needed
 228 00d2 10BD     		pop	{r4, pc}
 229              	.L11:
 230              		.align	2
 231              	.L10:
 232 00d4 00000000 		.word	CapSense_1_curRamSnsPtr
 233 00d8 00000000 		.word	CapSense_1_scanFreqIndex
 234 00dc 800E4301 		.word	21171840
 235 00e0 C0010B40 		.word	1074463168
 236 00e4 00000000 		.word	.LANCHOR0
 237 00e8 20100480 		.word	-2147217376
 238 00ec 00000B40 		.word	1074462720
 239 00f0 80010B40 		.word	1074463104
 240 00f4 80020B40 		.word	1074463360
 241 00f8 84020B40 		.word	1074463364
 242 00fc C0020B40 		.word	1074463424
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 42


 243 0100 88020B40 		.word	1074463368
 244 0104 01010100 		.word	65793
 245 0108 B0020B40 		.word	1074463408
 246 010c 10100000 		.word	4112
 247 0110 B4020B40 		.word	1074463412
 248 0114 03030000 		.word	771
 249 0118 40030B40 		.word	1074463552
 250 011c 00000000 		.word	CapSense_1_dsRam
 251 0120 006CDC02 		.word	48000000
 252 0124 001BB700 		.word	12000000
 253 0128 00366E01 		.word	24000000
 254 012c 00100C80 		.word	-2146693120
 255 0130 01030000 		.word	769
 256 0134 8C010B40 		.word	1074463116
 257 0138 F0000B40 		.word	1074462960
 258              		.cfi_endproc
 259              	.LFE10:
 260              		.size	CapSense_1_SsCSXStartSample, .-CapSense_1_SsCSXStartSample
 261              		.section	.text.CapSense_1_SsCSXPostSingleScan,"ax",%progbits
 262              		.align	2
 263              		.code	16
 264              		.thumb_func
 265              		.type	CapSense_1_SsCSXPostSingleScan, %function
 266              	CapSense_1_SsCSXPostSingleScan:
 267              	.LFB8:
1374:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
 268              		.loc 1 1374 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272 0000 10B5     		push	{r4, lr}
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 4, -8
 275              		.cfi_offset 14, -4
1385:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
 276              		.loc 1 1385 0
 277 0002 124B     		ldr	r3, .L15
 278 0004 1C68     		ldr	r4, [r3]
 279 0006 1249     		ldr	r1, .L15+4
 280 0008 0B78     		ldrb	r3, [r1]
 281 000a 1248     		ldr	r0, .L15+8
 282 000c 4288     		ldrh	r2, [r0, #2]
 283 000e 0088     		ldrh	r0, [r0]
 284 0010 5B00     		lsls	r3, r3, #1
 285 0012 121A     		subs	r2, r2, r0
 286 0014 1A53     		strh	r2, [r3, r4]
1390:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 287              		.loc 1 1390 0
 288 0016 0878     		ldrb	r0, [r1]
 289 0018 0128     		cmp	r0, #1
 290 001a 07D8     		bhi	.L13
1393:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 291              		.loc 1 1393 0
 292 001c 0130     		adds	r0, r0, #1
 293 001e C0B2     		uxtb	r0, r0
 294 0020 0870     		strb	r0, [r1]
1396:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 43


 295              		.loc 1 1396 0
 296 0022 FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 297              	.LVL16:
1401:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 298              		.loc 1 1401 0
 299 0026 FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 300              	.LVL17:
 301 002a 0DE0     		b	.L12
 302              	.L13:
1408:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 303              		.loc 1 1408 0
 304 002c 0022     		movs	r2, #0
 305 002e 084B     		ldr	r3, .L15+4
 306 0030 1A70     		strb	r2, [r3]
1411:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
 307              		.loc 1 1411 0
 308 0032 0020     		movs	r0, #0
 309 0034 FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 310              	.LVL18:
1422:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
 311              		.loc 1 1422 0
 312 0038 074B     		ldr	r3, .L15+12
 313 003a 1A89     		ldrh	r2, [r3, #8]
 314 003c 0132     		adds	r2, r2, #1
 315 003e 1A81     		strh	r2, [r3, #8]
1423:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 316              		.loc 1 1423 0
 317 0040 DA68     		ldr	r2, [r3, #12]
 318 0042 8021     		movs	r1, #128
 319 0044 8A43     		bics	r2, r1
 320 0046 DA60     		str	r2, [r3, #12]
 321              	.L12:
1429:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 322              		.loc 1 1429 0
 323              		@ sp needed
 324 0048 10BD     		pop	{r4, pc}
 325              	.L16:
 326 004a C046     		.align	2
 327              	.L15:
 328 004c 00000000 		.word	CapSense_1_curRamSnsPtr
 329 0050 00000000 		.word	CapSense_1_scanFreqIndex
 330 0054 00000000 		.word	.LANCHOR0
 331 0058 00000000 		.word	CapSense_1_dsRam
 332              		.cfi_endproc
 333              	.LFE8:
 334              		.size	CapSense_1_SsCSXPostSingleScan, .-CapSense_1_SsCSXPostSingleScan
 335              		.section	.text.CapSense_1_CSXScanISR,"ax",%progbits
 336              		.align	2
 337              		.global	CapSense_1_CSXScanISR
 338              		.code	16
 339              		.thumb_func
 340              		.type	CapSense_1_CSXScanISR, %function
 341              	CapSense_1_CSXScanISR:
 342              	.LFB17:
1945:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(0u != CapSense_1_CSX_NOISE_METRIC_EN)
 343              		.loc 1 1945 0
 344              		.cfi_startproc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 44


 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347 0000 10B5     		push	{r4, lr}
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 4, -8
 350              		.cfi_offset 14, -4
1953:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 351              		.loc 1 1953 0
 352 0002 0A20     		movs	r0, #10
 353 0004 FFF7FEFF 		bl	CyIntDisable
 354              	.LVL19:
1955:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 355              		.loc 1 1955 0
 356 0008 8322     		movs	r2, #131
 357 000a 5200     		lsls	r2, r2, #1
 358 000c 154B     		ldr	r3, .L20
 359 000e 1A60     		str	r2, [r3]
1957:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                                          CapSense_1_RESULT_VAL1_VALUE_MASK);
 360              		.loc 1 1957 0
 361 0010 154B     		ldr	r3, .L20+4
 362 0012 1B68     		ldr	r3, [r3]
 363 0014 9BB2     		uxth	r3, r3
 364 0016 154A     		ldr	r2, .L20+8
 365 0018 1380     		strh	r3, [r2]
1960:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                                          CapSense_1_RESULT_VAL2_VALUE_MASK);
 366              		.loc 1 1960 0
 367 001a 154B     		ldr	r3, .L20+12
 368 001c 1B68     		ldr	r3, [r3]
 369 001e 9BB2     		uxth	r3, r3
 370 0020 1188     		ldrh	r1, [r2]
 371 0022 CB18     		adds	r3, r1, r3
 372 0024 9BB2     		uxth	r3, r3
 373 0026 1380     		strh	r3, [r2]
1964:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
 374              		.loc 1 1964 0
 375 0028 1188     		ldrh	r1, [r2]
 376 002a 89B2     		uxth	r1, r1
 377 002c 5388     		ldrh	r3, [r2, #2]
 378 002e 9BB2     		uxth	r3, r3
 379 0030 9942     		cmp	r1, r3
 380 0032 02D9     		bls	.L18
1966:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
 381              		.loc 1 1966 0
 382 0034 5388     		ldrh	r3, [r2, #2]
 383 0036 9BB2     		uxth	r3, r3
 384 0038 1380     		strh	r3, [r2]
 385              	.L18:
1983:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (0u != CapSense_1_CSX_NOISE_METRIC_EN) */
 386              		.loc 1 1983 0
 387 003a 0E4B     		ldr	r3, .L20+16
 388 003c 1B68     		ldr	r3, [r3]
 389 003e 9847     		blx	r3
 390              	.LVL20:
1986:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
 391              		.loc 1 1986 0
 392 0040 0D4B     		ldr	r3, .L20+20
 393 0042 DB68     		ldr	r3, [r3, #12]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 45


 394 0044 1B06     		lsls	r3, r3, #24
 395 0046 09D4     		bmi	.L19
1988:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_DEFAULT_CSD_CSDCMP_CFG);
 396              		.loc 1 1988 0
 397 0048 0C4A     		ldr	r2, .L20+24
 398 004a 0D4B     		ldr	r3, .L20+28
 399 004c 1A60     		str	r2, [r3]
1989:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, CapSense_1_DEFAULT_CSD_IDACA_CFG);
 400              		.loc 1 1989 0
 401 004e C022     		movs	r2, #192
 402 0050 9200     		lsls	r2, r2, #2
 403 0052 0C4B     		ldr	r3, .L20+32
 404 0054 1A60     		str	r2, [r3]
1990:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
 405              		.loc 1 1990 0
 406 0056 0C4A     		ldr	r2, .L20+36
 407 0058 0C4B     		ldr	r3, .L20+40
 408 005a 1A60     		str	r2, [r3]
 409              	.L19:
1993:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 410              		.loc 1 1993 0
 411 005c 0A20     		movs	r0, #10
 412 005e FFF7FEFF 		bl	CyIntEnable
 413              	.LVL21:
1994:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 414              		.loc 1 1994 0
 415              		@ sp needed
 416 0062 10BD     		pop	{r4, pc}
 417              	.L21:
 418              		.align	2
 419              	.L20:
 420 0064 F0000B40 		.word	1074462960
 421 0068 D0000B40 		.word	1074462928
 422 006c 00000000 		.word	.LANCHOR0
 423 0070 D4000B40 		.word	1074462932
 424 0074 00000000 		.word	.LANCHOR1
 425 0078 00000000 		.word	CapSense_1_dsRam
 426 007c 20100480 		.word	-2147217376
 427 0080 00000B40 		.word	1074462720
 428 0084 8C010B40 		.word	1074463116
 429 0088 800E4301 		.word	21171840
 430 008c C0010B40 		.word	1074463168
 431              		.cfi_endproc
 432              	.LFE17:
 433              		.size	CapSense_1_CSXScanISR, .-CapSense_1_CSXScanISR
 434              		.section	.text.CapSense_1_CSXInitialize,"ax",%progbits
 435              		.align	2
 436              		.global	CapSense_1_CSXInitialize
 437              		.code	16
 438              		.thumb_func
 439              		.type	CapSense_1_CSXInitialize, %function
 440              	CapSense_1_CSXInitialize:
 441              	.LFB1:
 149:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
 442              		.loc 1 149 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 46


 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446 0000 10B5     		push	{r4, lr}
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 4, -8
 449              		.cfi_offset 14, -4
 154:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_SET_PTR,         CapSense_1_DEFAULT_CSD_INTR_SET_CFG);
 450              		.loc 1 154 0
 451 0002 8322     		movs	r2, #131
 452 0004 5200     		lsls	r2, r2, #1
 453 0006 494B     		ldr	r3, .L23
 454 0008 1A60     		str	r2, [r3]
 155:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_MASK_PTR,        CapSense_1_DEFAULT_CSD_INTR_MASK_CFG);
 455              		.loc 1 155 0
 456 000a 0024     		movs	r4, #0
 457 000c 484B     		ldr	r3, .L23+4
 458 000e 1C60     		str	r4, [r3]
 156:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR,            CapSense_1_DEFAULT_CSD_HSCMP_CFG);
 459              		.loc 1 156 0
 460 0010 053A     		subs	r2, r2, #5
 461 0012 FF3A     		subs	r2, r2, #255
 462 0014 474B     		ldr	r3, .L23+8
 463 0016 1A60     		str	r2, [r3]
 157:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_AMBUF_PTR,            CapSense_1_DEFAULT_CSD_AMBUF_CFG);
 464              		.loc 1 157 0
 465 0018 474B     		ldr	r3, .L23+12
 466 001a 1C60     		str	r4, [r3]
 158:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_REFGEN_PTR,           CapSense_1_DEFAULT_CSD_REFGEN_CFG);
 467              		.loc 1 158 0
 468 001c 474B     		ldr	r3, .L23+16
 469 001e 1C60     		str	r4, [r3]
 159:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR,           CapSense_1_DEFAULT_CSD_CSDCMP_CFG);
 470              		.loc 1 159 0
 471 0020 474A     		ldr	r2, .L23+20
 472 0022 484B     		ldr	r3, .L23+24
 473 0024 1A60     		str	r2, [r3]
 160:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_MOD_PTR,         CapSense_1_DEFAULT_CSD_IDACA_CFG);
 474              		.loc 1 160 0
 475 0026 C022     		movs	r2, #192
 476 0028 9200     		lsls	r2, r2, #2
 477 002a 474B     		ldr	r3, .L23+28
 478 002c 1A60     		str	r2, [r3]
 161:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 479              		.loc 1 161 0
 480 002e 474A     		ldr	r2, .L23+32
 481 0030 474B     		ldr	r3, .L23+36
 482 0032 1A60     		str	r2, [r3]
 167:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR,     CapSense_1_DEFAULT_CSD_SENSE_PERIOD_CFG);
 483              		.loc 1 167 0
 484 0034 474A     		ldr	r2, .L23+40
 485 0036 484B     		ldr	r3, .L23+44
 486 0038 1A60     		str	r2, [r3]
 168:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_DUTY_PTR,       CapSense_1_DEFAULT_CSD_SENSE_DUTY_CFG);
 487              		.loc 1 168 0
 488 003a A022     		movs	r2, #160
 489 003c 474B     		ldr	r3, .L23+48
 490 003e 1A60     		str	r2, [r3]
 169:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR,      CapSense_1_DEFAULT_CSD_SW_HS_P_SEL_CFG);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 47


 491              		.loc 1 169 0
 492 0040 474B     		ldr	r3, .L23+52
 493 0042 1C60     		str	r4, [r3]
 170:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR,      CapSense_1_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 494              		.loc 1 170 0
 495 0044 474B     		ldr	r3, .L23+56
 496 0046 1C60     		str	r4, [r3]
 171:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,    CapSense_1_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 497              		.loc 1 171 0
 498 0048 474B     		ldr	r3, .L23+60
 499 004a 1C60     		str	r4, [r3]
 172:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 500              		.loc 1 172 0
 501 004c 474B     		ldr	r3, .L23+64
 502 004e 1C60     		str	r4, [r3]
 173:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 503              		.loc 1 173 0
 504 0050 474B     		ldr	r3, .L23+68
 505 0052 1C60     		str	r4, [r3]
 175:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_SW_BYP_SEL_PTR);
 506              		.loc 1 175 0
 507 0054 FFF7FEFF 		bl	CyEnterCriticalSection
 508              	.LVL22:
 176:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~(CapSense_1_SW_BYP_SEL_SW_BYA_MASK);
 509              		.loc 1 176 0
 510 0058 464A     		ldr	r2, .L23+72
 511 005a 1168     		ldr	r1, [r2]
 512              	.LVL23:
 177:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= CapSense_1_DEFAULT_CSD_SW_BYP_SEL_CFG;
 513              		.loc 1 177 0
 514 005c 464B     		ldr	r3, .L23+76
 515 005e 0B40     		ands	r3, r1
 516              	.LVL24:
 178:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR,       tmpRegVal);
 517              		.loc 1 178 0
 518 0060 8021     		movs	r1, #128
 519 0062 4901     		lsls	r1, r1, #5
 520 0064 0B43     		orrs	r3, r1
 521              	.LVL25:
 179:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 522              		.loc 1 179 0
 523 0066 1360     		str	r3, [r2]
 180:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 524              		.loc 1 180 0
 525 0068 FFF7FEFF 		bl	CyExitCriticalSection
 526              	.LVL26:
 182:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_N_SEL_PTR,     CapSense_1_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 527              		.loc 1 182 0
 528 006c 3222     		movs	r2, #50
 529 006e 434B     		ldr	r3, .L23+80
 530 0070 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 531              		.loc 1 183 0
 532 0072 8022     		movs	r2, #128
 533 0074 5204     		lsls	r2, r2, #17
 534 0076 424B     		ldr	r3, .L23+84
 535 0078 1A60     		str	r2, [r3]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 48


 185:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 536              		.loc 1 185 0
 537 007a FFF7FEFF 		bl	CyEnterCriticalSection
 538              	.LVL27:
 186:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_SW_REFGEN_SEL_SW_MASK;
 539              		.loc 1 186 0
 540 007e 414A     		ldr	r2, .L23+88
 541 0080 1168     		ldr	r1, [r2]
 542              	.LVL28:
 187:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= CapSense_1_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 543              		.loc 1 187 0
 544 0082 414B     		ldr	r3, .L23+92
 545 0084 0B40     		ands	r3, r1
 546              	.LVL29:
 188:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR,    tmpRegVal);
 547              		.loc 1 188 0
 548 0086 8021     		movs	r1, #128
 549 0088 4905     		lsls	r1, r1, #21
 550 008a 0B43     		orrs	r3, r1
 551              	.LVL30:
 189:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 552              		.loc 1 189 0
 553 008c 1360     		str	r3, [r2]
 190:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 554              		.loc 1 190 0
 555 008e FFF7FEFF 		bl	CyExitCriticalSection
 556              	.LVL31:
 192:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 557              		.loc 1 192 0
 558 0092 3E4B     		ldr	r3, .L23+96
 559 0094 1C60     		str	r4, [r3]
 193:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR,       CapSense_1_DEFAULT_CSD_SW_DSI_SEL_CFG);
 560              		.loc 1 193 0
 561 0096 3E4B     		ldr	r3, .L23+100
 562 0098 1C60     		str	r4, [r3]
 194:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_TIME_PTR,         CapSense_1_DEFAULT_CSD_SEQ_TIME_CFG);
 563              		.loc 1 194 0
 564 009a 2322     		movs	r2, #35
 565 009c 3D4B     		ldr	r3, .L23+104
 566 009e 1A60     		str	r2, [r3]
 195:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_INIT_CNT_PTR,     CapSense_1_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 567              		.loc 1 195 0
 568 00a0 143A     		subs	r2, r2, #20
 569 00a2 3D4B     		ldr	r3, .L23+108
 570 00a4 1A60     		str	r2, [r3]
 196:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR,     CapSense_1_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 571              		.loc 1 196 0
 572 00a6 0B3A     		subs	r2, r2, #11
 573 00a8 3C4B     		ldr	r3, .L23+112
 574 00aa 1A60     		str	r2, [r3]
 197:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_ADC_CTL_PTR,          CapSense_1_DEFAULT_CSD_ADC_CTL_CFG);
 575              		.loc 1 197 0
 576 00ac 3C4B     		ldr	r3, .L23+116
 577 00ae 1C60     		str	r4, [r3]
 198:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR,        CapSense_1_DEFAULT_CSD_SEQ_START_CFG);
 578              		.loc 1 198 0
 579 00b0 3C4B     		ldr	r3, .L23+120
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 49


 580 00b2 1C60     		str	r4, [r3]
 199:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR,           CapSense_1_DEFAULT_CSD_CONFIG_CFG);
 581              		.loc 1 199 0
 582 00b4 C222     		movs	r2, #194
 583 00b6 9200     		lsls	r2, r2, #2
 584 00b8 3B4B     		ldr	r3, .L23+124
 585 00ba 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 586              		.loc 1 200 0
 587 00bc 3B4A     		ldr	r2, .L23+128
 588 00be 3C4B     		ldr	r3, .L23+132
 589 00c0 1A60     		str	r2, [r3]
 202:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 590              		.loc 1 202 0
 591 00c2 FFF7FEFF 		bl	CapSense_1_BistDischargeExtCapacitors
 592              	.LVL32:
 204:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintA_PC_PTR);
 593              		.loc 1 204 0
 594 00c6 FFF7FEFF 		bl	CyEnterCriticalSection
 595              	.LVL33:
 205:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintA_SHIFT * CapSense_1_GPIO_PC_BIT
 596              		.loc 1 205 0
 597 00ca 3A4C     		ldr	r4, .L23+136
 598 00cc 2268     		ldr	r2, [r4]
 599              	.LVL34:
 206:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_PC_PTR, tmpRegVal);
 600              		.loc 1 206 0
 601 00ce 3A4B     		ldr	r3, .L23+140
 602 00d0 1340     		ands	r3, r2
 603              	.LVL35:
 207:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 604              		.loc 1 207 0
 605 00d2 2360     		str	r3, [r4]
 208:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 606              		.loc 1 208 0
 607 00d4 FFF7FEFF 		bl	CyExitCriticalSection
 608              	.LVL36:
 210:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintB_PC_PTR);
 609              		.loc 1 210 0
 610 00d8 FFF7FEFF 		bl	CyEnterCriticalSection
 611              	.LVL37:
 211:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintB__SHIFT * CapSense_1_GPIO_PC_BI
 612              		.loc 1 211 0
 613 00dc 2268     		ldr	r2, [r4]
 614              	.LVL38:
 212:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_PC_PTR, tmpRegVal);
 615              		.loc 1 212 0
 616 00de 374B     		ldr	r3, .L23+144
 617 00e0 1340     		ands	r3, r2
 618              	.LVL39:
 213:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 619              		.loc 1 213 0
 620 00e2 2360     		str	r3, [r4]
 214:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 621              		.loc 1 214 0
 622 00e4 FFF7FEFF 		bl	CyExitCriticalSection
 623              	.LVL40:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 50


 217:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 624              		.loc 1 217 0
 625 00e8 FFF7FEFF 		bl	CyEnterCriticalSection
 626              	.LVL41:
 218:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_CintA_HSIOM_MASK;
 627              		.loc 1 218 0
 628 00ec 344C     		ldr	r4, .L23+148
 629 00ee 2268     		ldr	r2, [r4]
 630              	.LVL42:
 219:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintA_HSIOM_SHIFT);
 631              		.loc 1 219 0
 632 00f0 344B     		ldr	r3, .L23+152
 633 00f2 1340     		ands	r3, r2
 634              	.LVL43:
 220:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, tmpRegVal);
 635              		.loc 1 220 0
 636 00f4 C022     		movs	r2, #192
 637 00f6 D200     		lsls	r2, r2, #3
 638 00f8 1343     		orrs	r3, r2
 639              	.LVL44:
 221:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 640              		.loc 1 221 0
 641 00fa 2360     		str	r3, [r4]
 222:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 642              		.loc 1 222 0
 643 00fc FFF7FEFF 		bl	CyExitCriticalSection
 644              	.LVL45:
 225:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 645              		.loc 1 225 0
 646 0100 FFF7FEFF 		bl	CyEnterCriticalSection
 647              	.LVL46:
 226:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_CintB_HSIOM_MASK;
 648              		.loc 1 226 0
 649 0104 2268     		ldr	r2, [r4]
 650              	.LVL47:
 227:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintB_HSIOM_SHIFT);
 651              		.loc 1 227 0
 652 0106 304B     		ldr	r3, .L23+156
 653 0108 1340     		ands	r3, r2
 654              	.LVL48:
 228:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, tmpRegVal);
 655              		.loc 1 228 0
 656 010a C022     		movs	r2, #192
 657 010c D201     		lsls	r2, r2, #7
 658 010e 1343     		orrs	r3, r2
 659              	.LVL49:
 229:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 660              		.loc 1 229 0
 661 0110 2360     		str	r3, [r4]
 230:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 662              		.loc 1 230 0
 663 0112 FFF7FEFF 		bl	CyExitCriticalSection
 664              	.LVL50:
 232:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 665              		.loc 1 232 0
 666 0116 2023     		movs	r3, #32
 667 0118 2C4A     		ldr	r2, .L23+160
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 51


 668 011a D05C     		ldrb	r0, [r2, r3]
 669 011c FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 670              	.LVL51:
 239:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 671              		.loc 1 239 0
 672 0120 FFF7FEFF 		bl	CapSense_1_SsSetIOsInDefaultState
 673              	.LVL52:
 298:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 674              		.loc 1 298 0
 675 0124 2A48     		ldr	r0, .L23+164
 676 0126 FFF7FEFF 		bl	CapSense_1_SsIsrInitialize
 677              	.LVL53:
 299:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 678              		.loc 1 299 0
 679              		@ sp needed
 680 012a 10BD     		pop	{r4, pc}
 681              	.L24:
 682              		.align	2
 683              	.L23:
 684 012c F0000B40 		.word	1074462960
 685 0130 F4000B40 		.word	1074462964
 686 0134 F8000B40 		.word	1074462968
 687 0138 80010B40 		.word	1074463104
 688 013c 84010B40 		.word	1074463108
 689 0140 411F0000 		.word	8001
 690 0144 88010B40 		.word	1074463112
 691 0148 8C010B40 		.word	1074463116
 692 014c 800E4301 		.word	21171840
 693 0150 C0010B40 		.word	1074463168
 694 0154 AA000500 		.word	327850
 695 0158 F0010B40 		.word	1074463216
 696 015c 00020B40 		.word	1074463232
 697 0160 04020B40 		.word	1074463236
 698 0164 80020B40 		.word	1074463360
 699 0168 84020B40 		.word	1074463364
 700 016c 88020B40 		.word	1074463368
 701 0170 90020B40 		.word	1074463376
 702 0174 94020B40 		.word	1074463380
 703 0178 FFEFFFFF 		.word	-4097
 704 017c A0020B40 		.word	1074463392
 705 0180 A4020B40 		.word	1074463396
 706 0184 A8020B40 		.word	1074463400
 707 0188 EEFFFEEE 		.word	-285278226
 708 018c B0020B40 		.word	1074463408
 709 0190 B4020B40 		.word	1074463412
 710 0194 C0020B40 		.word	1074463424
 711 0198 00030B40 		.word	1074463488
 712 019c 10030B40 		.word	1074463504
 713 01a0 14030B40 		.word	1074463508
 714 01a4 20030B40 		.word	1074463520
 715 01a8 40030B40 		.word	1074463552
 716 01ac 20100480 		.word	-2147217376
 717 01b0 00000B40 		.word	1074462720
 718 01b4 08040440 		.word	1074005000
 719 01b8 3FFEFFFF 		.word	-449
 720 01bc FFF1FFFF 		.word	-3585
 721 01c0 00040240 		.word	1073873920
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 52


 722 01c4 FFF0FFFF 		.word	-3841
 723 01c8 FF0FFFFF 		.word	-61441
 724 01cc 00000000 		.word	CapSense_1_dsRam
 725 01d0 00000000 		.word	CapSense_1_CSXScanISR
 726              		.cfi_endproc
 727              	.LFE1:
 728              		.size	CapSense_1_CSXInitialize, .-CapSense_1_CSXInitialize
 729              		.section	.text.CapSense_1_CSXScanExt,"ax",%progbits
 730              		.align	2
 731              		.global	CapSense_1_CSXScanExt
 732              		.code	16
 733              		.thumb_func
 734              		.type	CapSense_1_CSXScanExt, %function
 735              	CapSense_1_CSXScanExt:
 736              	.LFB6:
 871:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 737              		.loc 1 871 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 0, uses_anonymous_args = 0
 741 0000 10B5     		push	{r4, lr}
 742              		.cfi_def_cfa_offset 8
 743              		.cfi_offset 4, -8
 744              		.cfi_offset 14, -4
 874:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 745              		.loc 1 874 0
 746 0002 0022     		movs	r2, #0
 747 0004 064B     		ldr	r3, .L26
 748 0006 1A70     		strb	r2, [r3]
 892:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 749              		.loc 1 892 0
 750 0008 064A     		ldr	r2, .L26+4
 751 000a D168     		ldr	r1, [r2, #12]
 752 000c 8023     		movs	r3, #128
 753 000e 0B43     		orrs	r3, r1
 754 0010 D360     		str	r3, [r2, #12]
 897:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 755              		.loc 1 897 0
 756 0012 0A20     		movs	r0, #10
 757 0014 FFF7FEFF 		bl	CyDelayUs
 758              	.LVL54:
 899:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 759              		.loc 1 899 0
 760 0018 FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 761              	.LVL55:
 901:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 762              		.loc 1 901 0
 763              		@ sp needed
 764 001c 10BD     		pop	{r4, pc}
 765              	.L27:
 766 001e C046     		.align	2
 767              	.L26:
 768 0020 00000000 		.word	CapSense_1_scanFreqIndex
 769 0024 00000000 		.word	CapSense_1_dsRam
 770              		.cfi_endproc
 771              	.LFE6:
 772              		.size	CapSense_1_CSXScanExt, .-CapSense_1_CSXScanExt
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 53


 773              		.section	.text.CapSense_1_CSXCalibrateWidget,"ax",%progbits
 774              		.align	2
 775              		.global	CapSense_1_CSXCalibrateWidget
 776              		.code	16
 777              		.thumb_func
 778              		.type	CapSense_1_CSXCalibrateWidget, %function
 779              	CapSense_1_CSXCalibrateWidget:
 780              	.LFB9:
1459:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
 781              		.loc 1 1459 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 8
 784              		@ frame_needed = 0, uses_anonymous_args = 0
 785              	.LVL56:
 786 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 787              		.cfi_def_cfa_offset 20
 788              		.cfi_offset 4, -20
 789              		.cfi_offset 5, -16
 790              		.cfi_offset 6, -12
 791              		.cfi_offset 7, -8
 792              		.cfi_offset 14, -4
 793 0002 4746     		mov	r7, r8
 794 0004 80B4     		push	{r7}
 795              		.cfi_def_cfa_offset 24
 796              		.cfi_offset 8, -24
 797 0006 82B0     		sub	sp, sp, #8
 798              		.cfi_def_cfa_offset 32
 799 0008 0190     		str	r0, [sp, #4]
 800 000a 0E00     		movs	r6, r1
 801              	.LVL57:
1473:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 802              		.loc 1 1473 0
 803 000c 4301     		lsls	r3, r0, #5
 804 000e 334C     		ldr	r4, .L39
 805 0010 E418     		adds	r4, r4, r3
 806 0012 A368     		ldr	r3, [r4, #8]
 807 0014 9846     		mov	r8, r3
 808 0016 324B     		ldr	r3, .L39+4
 809 0018 4246     		mov	r2, r8
 810 001a 1A60     		str	r2, [r3]
1477:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
 811              		.loc 1 1477 0
 812 001c 6068     		ldr	r0, [r4, #4]
 813              	.LVL58:
 814 001e FFF7FEFF 		bl	CapSense_1_SsCalcCsxScanPeriod
 815              	.LVL59:
 816 0022 304B     		ldr	r3, .L39+8
 817 0024 5880     		strh	r0, [r3, #2]
1479:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / CapSense_1_PERCENTAGE_100;
 818              		.loc 1 1479 0
 819 0026 5888     		ldrh	r0, [r3, #2]
 820              	.LVL60:
1480:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 821              		.loc 1 1480 0
 822 0028 7043     		muls	r0, r6
 823              	.LVL61:
 824 002a 6421     		movs	r1, #100
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 54


 825 002c FFF7FEFF 		bl	__aeabi_uidiv
 826              	.LVL62:
 827 0030 0600     		movs	r6, r0
 828              	.LVL63:
1487:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     (uint32)CapSense_1_dsFlash.wdgtArray[widgetId].numRows);
 829              		.loc 1 1487 0
 830 0032 E37E     		ldrb	r3, [r4, #27]
1488:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 831              		.loc 1 1488 0
 832 0034 227F     		ldrb	r2, [r4, #28]
1487:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     (uint32)CapSense_1_dsFlash.wdgtArray[widgetId].numRows);
 833              		.loc 1 1487 0
 834 0036 5A43     		muls	r2, r3
 835 0038 1500     		movs	r5, r2
 836              	.LVL64:
1491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 837              		.loc 1 1491 0
 838 003a 0024     		movs	r4, #0
 839 003c 0EE0     		b	.L29
 840              	.LVL65:
 841              	.L30:
1493:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_0] = curIdacMask;
 842              		.loc 1 1493 0 discriminator 3
 843 003e 284A     		ldr	r2, .L39+4
 844 0040 0020     		movs	r0, #0
 845 0042 1368     		ldr	r3, [r2]
 846 0044 1880     		strh	r0, [r3]
1494:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 847              		.loc 1 1494 0 discriminator 3
 848 0046 1368     		ldr	r3, [r2]
 849 0048 4021     		movs	r1, #64
 850 004a 5975     		strb	r1, [r3, #21]
1496:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_2] = 0u;
 851              		.loc 1 1496 0 discriminator 3
 852 004c 5880     		strh	r0, [r3, #2]
1497:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] = curIdacMask;
 853              		.loc 1 1497 0 discriminator 3
 854 004e 1368     		ldr	r3, [r2]
 855 0050 9880     		strh	r0, [r3, #4]
1498:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] = curIdacMask;
 856              		.loc 1 1498 0 discriminator 3
 857 0052 9975     		strb	r1, [r3, #22]
1499:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 858              		.loc 1 1499 0 discriminator 3
 859 0054 D975     		strb	r1, [r3, #23]
1501:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 860              		.loc 1 1501 0 discriminator 3
 861 0056 1833     		adds	r3, r3, #24
 862 0058 1360     		str	r3, [r2]
1491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 863              		.loc 1 1491 0 discriminator 3
 864 005a 0134     		adds	r4, r4, #1
 865              	.LVL66:
 866              	.L29:
1491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 867              		.loc 1 1491 0 is_stmt 0 discriminator 1
 868 005c AC42     		cmp	r4, r5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 55


 869 005e EED3     		bcc	.L30
 870 0060 2024     		movs	r4, #32
 871              	.LVL67:
 872 0062 4027     		movs	r7, #64
 873 0064 00E0     		b	.L37
 874              	.LVL68:
 875              	.L38:
1555:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 876              		.loc 1 1555 0 is_stmt 1
 877 0066 1C00     		movs	r4, r3
 878              	.LVL69:
 879              	.L37:
1508:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (void)CapSense_1_Scan();
 880              		.loc 1 1508 0
 881 0068 0198     		ldr	r0, [sp, #4]
 882 006a FFF7FEFF 		bl	CapSense_1_SetupWidget
 883              	.LVL70:
1509:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 884              		.loc 1 1509 0
 885 006e FFF7FEFF 		bl	CapSense_1_Scan
 886              	.LVL71:
 887              	.L31:
1511:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 888              		.loc 1 1511 0 discriminator 1
 889 0072 1D4B     		ldr	r3, .L39+12
 890 0074 DB68     		ldr	r3, [r3, #12]
 891 0076 1B06     		lsls	r3, r3, #24
 892 0078 FBD4     		bmi	.L31
1516:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 893              		.loc 1 1516 0
 894 007a 194B     		ldr	r3, .L39+4
 895 007c 4246     		mov	r2, r8
 896 007e 1A60     		str	r2, [r3]
 897              	.LVL72:
1519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 898              		.loc 1 1519 0
 899 0080 0021     		movs	r1, #0
 900 0082 20E0     		b	.L32
 901              	.LVL73:
 902              	.L36:
1530:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 903              		.loc 1 1530 0
 904 0084 164B     		ldr	r3, .L39+4
 905 0086 1B68     		ldr	r3, [r3]
 906 0088 1A88     		ldrh	r2, [r3]
 907 008a 9642     		cmp	r6, r2
 908 008c 02D2     		bcs	.L33
1532:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
 909              		.loc 1 1532 0
 910 008e 5A7D     		ldrb	r2, [r3, #21]
 911 0090 BA43     		bics	r2, r7
 912 0092 5A75     		strb	r2, [r3, #21]
 913              	.L33:
1534:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 914              		.loc 1 1534 0
 915 0094 5A7D     		ldrb	r2, [r3, #21]
 916 0096 2243     		orrs	r2, r4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 56


 917 0098 5A75     		strb	r2, [r3, #21]
1537:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 918              		.loc 1 1537 0
 919 009a 5A88     		ldrh	r2, [r3, #2]
 920 009c 9642     		cmp	r6, r2
 921 009e 02D2     		bcs	.L34
1539:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 922              		.loc 1 1539 0
 923 00a0 9A7D     		ldrb	r2, [r3, #22]
 924 00a2 BA43     		bics	r2, r7
 925 00a4 9A75     		strb	r2, [r3, #22]
 926              	.L34:
1542:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 927              		.loc 1 1542 0
 928 00a6 9A88     		ldrh	r2, [r3, #4]
 929 00a8 9642     		cmp	r6, r2
 930 00aa 02D2     		bcs	.L35
1544:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 931              		.loc 1 1544 0
 932 00ac DA7D     		ldrb	r2, [r3, #23]
 933 00ae BA43     		bics	r2, r7
 934 00b0 DA75     		strb	r2, [r3, #23]
 935              	.L35:
1547:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] |= nextIdacMask;
 936              		.loc 1 1547 0 discriminator 2
 937 00b2 9A7D     		ldrb	r2, [r3, #22]
 938 00b4 2243     		orrs	r2, r4
 939 00b6 9A75     		strb	r2, [r3, #22]
1548:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif
 940              		.loc 1 1548 0 discriminator 2
 941 00b8 DA7D     		ldrb	r2, [r3, #23]
 942 00ba 2243     		orrs	r2, r4
 943 00bc DA75     		strb	r2, [r3, #23]
1550:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 944              		.loc 1 1550 0 discriminator 2
 945 00be 1833     		adds	r3, r3, #24
 946 00c0 074A     		ldr	r2, .L39+4
 947 00c2 1360     		str	r3, [r2]
1519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 948              		.loc 1 1519 0 discriminator 2
 949 00c4 0131     		adds	r1, r1, #1
 950              	.LVL74:
 951              	.L32:
1519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 952              		.loc 1 1519 0 is_stmt 0 discriminator 1
 953 00c6 A942     		cmp	r1, r5
 954 00c8 DCD3     		bcc	.L36
 955              	.LVL75:
1555:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 956              		.loc 1 1555 0 is_stmt 1
 957 00ca 6308     		lsrs	r3, r4, #1
 958 00cc DBB2     		uxtb	r3, r3
 959              	.LVL76:
1554:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             nextIdacMask = nextIdacMask >> 1u;
 960              		.loc 1 1554 0
 961 00ce 271E     		subs	r7, r4, #0
1557:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 57


 962              		.loc 1 1557 0
 963 00d0 C9D1     		bne	.L38
1559:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 964              		.loc 1 1559 0
 965 00d2 02B0     		add	sp, sp, #8
 966              		@ sp needed
 967              	.LVL77:
 968              	.LVL78:
 969              	.LVL79:
 970 00d4 04BC     		pop	{r2}
 971 00d6 9046     		mov	r8, r2
 972 00d8 F0BD     		pop	{r4, r5, r6, r7, pc}
 973              	.L40:
 974 00da C046     		.align	2
 975              	.L39:
 976 00dc 00000000 		.word	CapSense_1_dsFlash
 977 00e0 00000000 		.word	CapSense_1_curRamSnsPtr
 978 00e4 00000000 		.word	.LANCHOR0
 979 00e8 00000000 		.word	CapSense_1_dsRam
 980              		.cfi_endproc
 981              	.LFE9:
 982              		.size	CapSense_1_CSXCalibrateWidget, .-CapSense_1_CSXCalibrateWidget
 983              		.section	.text.CapSense_1_CSXConnectTx,"ax",%progbits
 984              		.align	2
 985              		.global	CapSense_1_CSXConnectTx
 986              		.code	16
 987              		.thumb_func
 988              		.type	CapSense_1_CSXConnectTx, %function
 989              	CapSense_1_CSXConnectTx:
 990              	.LFB11:
1666:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
 991              		.loc 1 1666 0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995              	.LVL80:
 996 0000 10B5     		push	{r4, lr}
 997              		.cfi_def_cfa_offset 8
 998              		.cfi_offset 4, -8
 999              		.cfi_offset 14, -4
1669:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |= (CapSense_1_GPIO_STRGDRV << txPtr->shift);
 1000              		.loc 1 1669 0
 1001 0002 4268     		ldr	r2, [r0, #4]
 1002 0004 1168     		ldr	r1, [r2]
 1003              	.LVL81:
1670:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->pcPtr, regValue);
 1004              		.loc 1 1670 0
 1005 0006 847E     		ldrb	r4, [r0, #26]
 1006 0008 0623     		movs	r3, #6
 1007 000a A340     		lsls	r3, r3, r4
 1008 000c 0B43     		orrs	r3, r1
 1009              	.LVL82:
1671:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1010              		.loc 1 1671 0
 1011 000e 1360     		str	r3, [r2]
1673:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |= (CapSense_1_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift);
 1012              		.loc 1 1673 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 58


 1013 0010 0268     		ldr	r2, [r0]
 1014 0012 1168     		ldr	r1, [r2]
 1015              	.LVL83:
1674:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 1016              		.loc 1 1674 0
 1017 0014 007E     		ldrb	r0, [r0, #24]
 1018              	.LVL84:
 1019 0016 0423     		movs	r3, #4
 1020 0018 8340     		lsls	r3, r3, r0
 1021 001a 0B43     		orrs	r3, r1
 1022              	.LVL85:
1675:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 1023              		.loc 1 1675 0
 1024 001c 1360     		str	r3, [r2]
1676:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1025              		.loc 1 1676 0
 1026              		@ sp needed
 1027 001e 10BD     		pop	{r4, pc}
 1028              		.cfi_endproc
 1029              	.LFE11:
 1030              		.size	CapSense_1_CSXConnectTx, .-CapSense_1_CSXConnectTx
 1031              		.section	.text.CapSense_1_CSXConnectRx,"ax",%progbits
 1032              		.align	2
 1033              		.global	CapSense_1_CSXConnectRx
 1034              		.code	16
 1035              		.thumb_func
 1036              		.type	CapSense_1_CSXConnectRx, %function
 1037              	CapSense_1_CSXConnectRx:
 1038              	.LFB12:
1700:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
 1039              		.loc 1 1700 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              	.LVL86:
 1044 0000 10B5     		push	{r4, lr}
 1045              		.cfi_def_cfa_offset 8
 1046              		.cfi_offset 4, -8
 1047              		.cfi_offset 14, -4
1703:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(CapSense_1_GPIO_PC_MASK << rxPtr->shift);
 1048              		.loc 1 1703 0
 1049 0002 4168     		ldr	r1, [r0, #4]
 1050 0004 0B68     		ldr	r3, [r1]
 1051              	.LVL87:
1704:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
 1052              		.loc 1 1704 0
 1053 0006 847E     		ldrb	r4, [r0, #26]
 1054 0008 0722     		movs	r2, #7
 1055 000a A240     		lsls	r2, r2, r4
 1056 000c 9343     		bics	r3, r2
 1057              	.LVL88:
1705:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1058              		.loc 1 1705 0
 1059 000e 0B60     		str	r3, [r1]
1707:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |=  (CapSense_1_HSIOM_SEL_AMUXA << rxPtr->hsiomShift);
 1060              		.loc 1 1707 0
 1061 0010 0268     		ldr	r2, [r0]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 59


 1062 0012 1168     		ldr	r1, [r2]
 1063              	.LVL89:
1708:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1064              		.loc 1 1708 0
 1065 0014 007E     		ldrb	r0, [r0, #24]
 1066              	.LVL90:
 1067 0016 0623     		movs	r3, #6
 1068 0018 8340     		lsls	r3, r3, r0
 1069 001a 0B43     		orrs	r3, r1
 1070              	.LVL91:
1709:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 1071              		.loc 1 1709 0
 1072 001c 1360     		str	r3, [r2]
1710:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1073              		.loc 1 1710 0
 1074              		@ sp needed
 1075 001e 10BD     		pop	{r4, pc}
 1076              		.cfi_endproc
 1077              	.LFE12:
 1078              		.size	CapSense_1_CSXConnectRx, .-CapSense_1_CSXConnectRx
 1079              		.section	.text.CapSense_1_CSXScan,"ax",%progbits
 1080              		.align	2
 1081              		.global	CapSense_1_CSXScan
 1082              		.code	16
 1083              		.thumb_func
 1084              		.type	CapSense_1_CSXScan, %function
 1085              	CapSense_1_CSXScan:
 1086              	.LFB5:
 646:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 1087              		.loc 1 646 0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
 1091 0000 70B5     		push	{r4, r5, r6, lr}
 1092              		.cfi_def_cfa_offset 16
 1093              		.cfi_offset 4, -16
 1094              		.cfi_offset 5, -12
 1095              		.cfi_offset 6, -8
 1096              		.cfi_offset 14, -4
 655:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1097              		.loc 1 655 0
 1098 0002 0025     		movs	r5, #0
 1099 0004 134B     		ldr	r3, .L44
 1100 0006 1D70     		strb	r5, [r3]
 658:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1101              		.loc 1 658 0
 1102 0008 134B     		ldr	r3, .L44+4
 1103 000a 1B68     		ldr	r3, [r3]
 1104 000c 134A     		ldr	r2, .L44+8
 1105 000e 9968     		ldr	r1, [r3, #8]
 1106 0010 1160     		str	r1, [r2]
 746:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalRx  = CapSense_1_curFlashWdgtPtr->numCols;
 1107              		.loc 1 746 0
 1108 0012 1A7F     		ldrb	r2, [r3, #28]
 1109 0014 124C     		ldr	r4, .L44+12
 1110 0016 A280     		strh	r2, [r4, #4]
 747:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 60


 1111              		.loc 1 747 0
 1112 0018 DA7E     		ldrb	r2, [r3, #27]
 1113 001a E280     		strh	r2, [r4, #6]
 797:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = CapSense_1_curRxIOPtr;
 1114              		.loc 1 797 0
 1115 001c 1968     		ldr	r1, [r3]
 1116 001e A160     		str	r1, [r4, #8]
 799:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1117              		.loc 1 799 0
 1118 0020 D300     		lsls	r3, r2, #3
 1119 0022 981A     		subs	r0, r3, r2
 1120 0024 8000     		lsls	r0, r0, #2
 1121 0026 0818     		adds	r0, r1, r0
 1122 0028 E060     		str	r0, [r4, #12]
 802:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 1123              		.loc 1 802 0
 1124 002a FFF7FEFF 		bl	CapSense_1_CSXConnectTx
 1125              	.LVL92:
 803:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1126              		.loc 1 803 0
 1127 002e A068     		ldr	r0, [r4, #8]
 1128 0030 FFF7FEFF 		bl	CapSense_1_CSXConnectRx
 1129              	.LVL93:
 806:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 1130              		.loc 1 806 0
 1131 0034 0B4A     		ldr	r2, .L44+16
 1132 0036 0C4B     		ldr	r3, .L44+20
 1133 0038 1A60     		str	r2, [r3]
 811:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 1134              		.loc 1 811 0
 1135 003a 0C4B     		ldr	r3, .L44+24
 1136 003c 1D70     		strb	r5, [r3]
 815:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1137              		.loc 1 815 0
 1138 003e 0C4A     		ldr	r2, .L44+28
 1139 0040 D168     		ldr	r1, [r2, #12]
 1140 0042 8023     		movs	r3, #128
 1141 0044 0B43     		orrs	r3, r1
 1142 0046 D360     		str	r3, [r2, #12]
 820:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 1143              		.loc 1 820 0
 1144 0048 0A20     		movs	r0, #10
 1145 004a FFF7FEFF 		bl	CyDelayUs
 1146              	.LVL94:
 822:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1147              		.loc 1 822 0
 1148 004e FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 1149              	.LVL95:
 825:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1150              		.loc 1 825 0
 1151              		@ sp needed
 1152 0052 70BD     		pop	{r4, r5, r6, pc}
 1153              	.L45:
 1154              		.align	2
 1155              	.L44:
 1156 0054 00000000 		.word	CapSense_1_sensorIndex
 1157 0058 00000000 		.word	CapSense_1_curFlashWdgtPtr
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 61


 1158 005c 00000000 		.word	CapSense_1_curRamSnsPtr
 1159 0060 00000000 		.word	.LANCHOR0
 1160 0064 00000000 		.word	CapSense_1_SsCSXPostMultiScan
 1161 0068 00000000 		.word	.LANCHOR1
 1162 006c 00000000 		.word	CapSense_1_scanFreqIndex
 1163 0070 00000000 		.word	CapSense_1_dsRam
 1164              		.cfi_endproc
 1165              	.LFE5:
 1166              		.size	CapSense_1_CSXScan, .-CapSense_1_CSXScan
 1167              		.section	.text.CapSense_1_CSXDisconnectTx,"ax",%progbits
 1168              		.align	2
 1169              		.global	CapSense_1_CSXDisconnectTx
 1170              		.code	16
 1171              		.thumb_func
 1172              		.type	CapSense_1_CSXDisconnectTx, %function
 1173              	CapSense_1_CSXDisconnectTx:
 1174              	.LFB13:
1735:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
 1175              		.loc 1 1735 0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 0
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179              		@ link register save eliminated.
 1180              	.LVL96:
1738:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
 1181              		.loc 1 1738 0
 1182 0000 0268     		ldr	r2, [r0]
 1183 0002 1368     		ldr	r3, [r2]
 1184              	.LVL97:
1739:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 1185              		.loc 1 1739 0
 1186 0004 0169     		ldr	r1, [r0, #16]
 1187 0006 8B43     		bics	r3, r1
 1188              	.LVL98:
1740:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 1189              		.loc 1 1740 0
 1190 0008 1360     		str	r3, [r2]
1741:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1191              		.loc 1 1741 0
 1192              		@ sp needed
 1193 000a 7047     		bx	lr
 1194              		.cfi_endproc
 1195              	.LFE13:
 1196              		.size	CapSense_1_CSXDisconnectTx, .-CapSense_1_CSXDisconnectTx
 1197              		.section	.text.CapSense_1_CSXDisconnectRx,"ax",%progbits
 1198              		.align	2
 1199              		.global	CapSense_1_CSXDisconnectRx
 1200              		.code	16
 1201              		.thumb_func
 1202              		.type	CapSense_1_CSXDisconnectRx, %function
 1203              	CapSense_1_CSXDisconnectRx:
 1204              	.LFB14:
1766:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
 1205              		.loc 1 1766 0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 62


 1209              	.LVL99:
 1210 0000 10B5     		push	{r4, lr}
 1211              		.cfi_def_cfa_offset 8
 1212              		.cfi_offset 4, -8
 1213              		.cfi_offset 14, -4
1769:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
 1214              		.loc 1 1769 0
 1215 0002 0268     		ldr	r2, [r0]
 1216 0004 1368     		ldr	r3, [r2]
 1217              	.LVL100:
1770:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1218              		.loc 1 1770 0
 1219 0006 0169     		ldr	r1, [r0, #16]
 1220 0008 8B43     		bics	r3, r1
 1221              	.LVL101:
1771:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1222              		.loc 1 1771 0
 1223 000a 1360     		str	r3, [r2]
1773:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(CapSense_1_GPIO_PC_MASK << rxPtr->shift);
 1224              		.loc 1 1773 0
 1225 000c 4168     		ldr	r1, [r0, #4]
 1226 000e 0B68     		ldr	r3, [r1]
 1227              	.LVL102:
1774:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |=  (CapSense_1_GPIO_STRGDRV << rxPtr->shift);
 1228              		.loc 1 1774 0
 1229 0010 847E     		ldrb	r4, [r0, #26]
 1230 0012 0722     		movs	r2, #7
 1231 0014 A240     		lsls	r2, r2, r4
 1232 0016 9343     		bics	r3, r2
 1233              	.LVL103:
 1234 0018 1A00     		movs	r2, r3
 1235              	.LVL104:
1775:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
 1236              		.loc 1 1775 0
 1237 001a 0623     		movs	r3, #6
 1238 001c A340     		lsls	r3, r3, r4
 1239 001e 1343     		orrs	r3, r2
 1240              	.LVL105:
1776:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1241              		.loc 1 1776 0
 1242 0020 0B60     		str	r3, [r1]
1778:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
 1243              		.loc 1 1778 0
 1244 0022 8268     		ldr	r2, [r0, #8]
 1245 0024 1368     		ldr	r3, [r2]
 1246              	.LVL106:
1779:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
 1247              		.loc 1 1779 0
 1248 0026 4169     		ldr	r1, [r0, #20]
 1249 0028 8B43     		bics	r3, r1
 1250              	.LVL107:
1780:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 1251              		.loc 1 1780 0
 1252 002a 1360     		str	r3, [r2]
1781:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1253              		.loc 1 1781 0
 1254              		@ sp needed
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 63


 1255 002c 10BD     		pop	{r4, pc}
 1256              		.cfi_endproc
 1257              	.LFE14:
 1258              		.size	CapSense_1_CSXDisconnectRx, .-CapSense_1_CSXDisconnectRx
 1259 002e C046     		.section	.text.CapSense_1_SsCSXPostMultiScan,"ax",%progbits
 1260              		.align	2
 1261              		.code	16
 1262              		.thumb_func
 1263              		.type	CapSense_1_SsCSXPostMultiScan, %function
 1264              	CapSense_1_SsCSXPostMultiScan:
 1265              	.LFB7:
 916:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
 1266              		.loc 1 916 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 0
 1269              		@ frame_needed = 0, uses_anonymous_args = 0
 1270 0000 10B5     		push	{r4, lr}
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 4, -8
 1273              		.cfi_offset 14, -4
 922:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                              (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
 1274              		.loc 1 922 0
 1275 0002 384B     		ldr	r3, .L54
 1276 0004 1C68     		ldr	r4, [r3]
 1277 0006 3849     		ldr	r1, .L54+4
 1278 0008 0B78     		ldrb	r3, [r1]
 1279 000a 3848     		ldr	r0, .L54+8
 1280 000c 4288     		ldrh	r2, [r0, #2]
 1281 000e 0088     		ldrh	r0, [r0]
 1282 0010 5B00     		lsls	r3, r3, #1
 1283 0012 121A     		subs	r2, r2, r0
 1284 0014 1A53     		strh	r2, [r3, r4]
 927:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 1285              		.loc 1 927 0
 1286 0016 0878     		ldrb	r0, [r1]
 1287 0018 0128     		cmp	r0, #1
 1288 001a 07D8     		bhi	.L49
 930:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1289              		.loc 1 930 0
 1290 001c 0130     		adds	r0, r0, #1
 1291 001e C0B2     		uxtb	r0, r0
 1292 0020 0870     		strb	r0, [r1]
 933:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
 1293              		.loc 1 933 0
 1294 0022 FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 1295              	.LVL108:
 938:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 1296              		.loc 1 938 0
 1297 0026 FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 1298              	.LVL109:
 1299 002a 59E0     		b	.L48
 1300              	.L49:
 945:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1301              		.loc 1 945 0
 1302 002c 0022     		movs	r2, #0
 1303 002e 2E4B     		ldr	r3, .L54+4
 1304 0030 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 64


 948:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
 1305              		.loc 1 948 0
 1306 0032 0020     		movs	r0, #0
 1307 0034 FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 1308              	.LVL110:
1014:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1309              		.loc 1 1014 0
 1310 0038 2C4C     		ldr	r4, .L54+8
 1311 003a E068     		ldr	r0, [r4, #12]
 1312 003c FFF7FEFF 		bl	CapSense_1_CSXDisconnectTx
 1313              	.LVL111:
1017:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1314              		.loc 1 1017 0
 1315 0040 2B4A     		ldr	r2, .L54+12
 1316 0042 1378     		ldrb	r3, [r2]
 1317 0044 0133     		adds	r3, r3, #1
 1318 0046 DBB2     		uxtb	r3, r3
 1319 0048 1370     		strb	r3, [r2]
1023:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if (CapSense_1_curWdgtTotalTx > 0u)
 1320              		.loc 1 1023 0
 1321 004a A388     		ldrh	r3, [r4, #4]
 1322 004c 013B     		subs	r3, r3, #1
 1323 004e 9BB2     		uxth	r3, r3
 1324 0050 A380     		strh	r3, [r4, #4]
1024:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 1325              		.loc 1 1024 0
 1326 0052 002B     		cmp	r3, #0
 1327 0054 0CD0     		beq	.L51
1031:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectTx (CapSense_1_curTxIOPtr);
 1328              		.loc 1 1031 0
 1329 0056 254B     		ldr	r3, .L54+8
 1330 0058 D868     		ldr	r0, [r3, #12]
 1331 005a 1C30     		adds	r0, r0, #28
 1332 005c D860     		str	r0, [r3, #12]
1032:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
 1333              		.loc 1 1032 0
 1334 005e FFF7FEFF 		bl	CapSense_1_CSXConnectTx
 1335              	.LVL112:
1033:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1336              		.loc 1 1033 0
 1337 0062 204A     		ldr	r2, .L54
 1338 0064 1368     		ldr	r3, [r2]
 1339 0066 1833     		adds	r3, r3, #24
 1340 0068 1360     		str	r3, [r2]
1036:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
 1341              		.loc 1 1036 0
 1342 006a FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 1343              	.LVL113:
 1344 006e 37E0     		b	.L48
 1345              	.L51:
1042:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalRx > 0u)
 1346              		.loc 1 1042 0
 1347 0070 1E4A     		ldr	r2, .L54+8
 1348 0072 D388     		ldrh	r3, [r2, #6]
 1349 0074 013B     		subs	r3, r3, #1
 1350 0076 9BB2     		uxth	r3, r3
 1351 0078 D380     		strh	r3, [r2, #6]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 65


1043:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 1352              		.loc 1 1043 0
 1353 007a 002B     		cmp	r3, #0
 1354 007c 1DD0     		beq	.L52
1052:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr++;
 1355              		.loc 1 1052 0
 1356 007e 1400     		movs	r4, r2
 1357 0080 9068     		ldr	r0, [r2, #8]
 1358 0082 FFF7FEFF 		bl	CapSense_1_CSXDisconnectRx
 1359              	.LVL114:
1053:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 1360              		.loc 1 1053 0
 1361 0086 A068     		ldr	r0, [r4, #8]
 1362 0088 1C30     		adds	r0, r0, #28
 1363 008a A060     		str	r0, [r4, #8]
1054:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalTx  = CapSense_1_curFlashWdgtPtr->numRows;
 1364              		.loc 1 1054 0
 1365 008c FFF7FEFF 		bl	CapSense_1_CSXConnectRx
 1366              	.LVL115:
1055:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curF
 1367              		.loc 1 1055 0
 1368 0090 184B     		ldr	r3, .L54+16
 1369 0092 1B68     		ldr	r3, [r3]
 1370 0094 1A7F     		ldrb	r2, [r3, #28]
 1371 0096 A280     		strh	r2, [r4, #4]
1056:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = & CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr
 1372              		.loc 1 1056 0
 1373 0098 1868     		ldr	r0, [r3]
 1374 009a E060     		str	r0, [r4, #12]
1057:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 1375              		.loc 1 1057 0
 1376 009c DA7E     		ldrb	r2, [r3, #27]
 1377 009e D300     		lsls	r3, r2, #3
 1378 00a0 9A1A     		subs	r2, r3, r2
 1379 00a2 9300     		lsls	r3, r2, #2
 1380 00a4 C018     		adds	r0, r0, r3
 1381 00a6 E060     		str	r0, [r4, #12]
1058:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1382              		.loc 1 1058 0
 1383 00a8 FFF7FEFF 		bl	CapSense_1_CSXConnectTx
 1384              	.LVL116:
1061:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1385              		.loc 1 1061 0
 1386 00ac 0D4A     		ldr	r2, .L54
 1387 00ae 1368     		ldr	r3, [r2]
 1388 00b0 1833     		adds	r3, r3, #24
 1389 00b2 1360     		str	r3, [r2]
1064:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 1390              		.loc 1 1064 0
 1391 00b4 FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 1392              	.LVL117:
 1393 00b8 12E0     		b	.L48
 1394              	.L52:
1069:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1395              		.loc 1 1069 0
 1396 00ba 0C4B     		ldr	r3, .L54+8
 1397 00bc 9868     		ldr	r0, [r3, #8]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 66


 1398 00be FFF7FEFF 		bl	CapSense_1_CSXDisconnectRx
 1399              	.LVL118:
1072:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
 1400              		.loc 1 1072 0
 1401 00c2 0D4B     		ldr	r3, .L54+20
 1402 00c4 1B78     		ldrb	r3, [r3]
 1403 00c6 002B     		cmp	r3, #0
 1404 00c8 02D0     		beq	.L53
1074:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
 1405              		.loc 1 1074 0
 1406 00ca FFF7FEFF 		bl	CapSense_1_SsPostAllWidgetsScan
 1407              	.LVL119:
 1408 00ce 07E0     		b	.L48
 1409              	.L53:
1083:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
 1410              		.loc 1 1083 0
 1411 00d0 0A4B     		ldr	r3, .L54+24
 1412 00d2 1A89     		ldrh	r2, [r3, #8]
 1413 00d4 0132     		adds	r2, r2, #1
 1414 00d6 1A81     		strh	r2, [r3, #8]
1084:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
 1415              		.loc 1 1084 0
 1416 00d8 DA68     		ldr	r2, [r3, #12]
 1417 00da 8021     		movs	r1, #128
 1418 00dc 8A43     		bics	r2, r1
 1419 00de DA60     		str	r2, [r3, #12]
 1420              	.L48:
1094:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1421              		.loc 1 1094 0
 1422              		@ sp needed
 1423 00e0 10BD     		pop	{r4, pc}
 1424              	.L55:
 1425 00e2 C046     		.align	2
 1426              	.L54:
 1427 00e4 00000000 		.word	CapSense_1_curRamSnsPtr
 1428 00e8 00000000 		.word	CapSense_1_scanFreqIndex
 1429 00ec 00000000 		.word	.LANCHOR0
 1430 00f0 00000000 		.word	CapSense_1_sensorIndex
 1431 00f4 00000000 		.word	CapSense_1_curFlashWdgtPtr
 1432 00f8 00000000 		.word	CapSense_1_requestScanAllWidget
 1433 00fc 00000000 		.word	CapSense_1_dsRam
 1434              		.cfi_endproc
 1435              	.LFE7:
 1436              		.size	CapSense_1_SsCSXPostMultiScan, .-CapSense_1_SsCSXPostMultiScan
 1437              		.section	.text.CapSense_1_CSXElectrodeCheck,"ax",%progbits
 1438              		.align	2
 1439              		.global	CapSense_1_CSXElectrodeCheck
 1440              		.code	16
 1441              		.thumb_func
 1442              		.type	CapSense_1_CSXElectrodeCheck, %function
 1443              	CapSense_1_CSXElectrodeCheck:
 1444              	.LFB2:
 316:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 1445              		.loc 1 316 0
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 0
 1448              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 67


 1449 0000 10B5     		push	{r4, lr}
 1450              		.cfi_def_cfa_offset 8
 1451              		.cfi_offset 4, -8
 1452              		.cfi_offset 14, -4
 321:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
 1453              		.loc 1 321 0
 1454 0002 074B     		ldr	r3, .L58
 1455 0004 1B8A     		ldrh	r3, [r3, #16]
 1456 0006 002B     		cmp	r3, #0
 1457 0008 08D0     		beq	.L56
 360:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
 1458              		.loc 1 360 0
 1459 000a 054C     		ldr	r4, .L58
 1460 000c E068     		ldr	r0, [r4, #12]
 1461 000e FFF7FEFF 		bl	CapSense_1_CSXDisconnectTx
 1462              	.LVL120:
 361:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 1463              		.loc 1 361 0
 1464 0012 A068     		ldr	r0, [r4, #8]
 1465 0014 FFF7FEFF 		bl	CapSense_1_CSXDisconnectRx
 1466              	.LVL121:
 363:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
 1467              		.loc 1 363 0
 1468 0018 0023     		movs	r3, #0
 1469 001a 2382     		strh	r3, [r4, #16]
 1470              	.L56:
 365:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1471              		.loc 1 365 0
 1472              		@ sp needed
 1473 001c 10BD     		pop	{r4, pc}
 1474              	.L59:
 1475 001e C046     		.align	2
 1476              	.L58:
 1477 0020 00000000 		.word	.LANCHOR0
 1478              		.cfi_endproc
 1479              	.LFE2:
 1480              		.size	CapSense_1_CSXElectrodeCheck, .-CapSense_1_CSXElectrodeCheck
 1481              		.section	.text.CapSense_1_CSXSetupWidget,"ax",%progbits
 1482              		.align	2
 1483              		.global	CapSense_1_CSXSetupWidget
 1484              		.code	16
 1485              		.thumb_func
 1486              		.type	CapSense_1_CSXSetupWidget, %function
 1487              	CapSense_1_CSXSetupWidget:
 1488              	.LFB3:
 407:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* variable to access widget details */
 1489              		.loc 1 407 0
 1490              		.cfi_startproc
 1491              		@ args = 0, pretend = 0, frame = 0
 1492              		@ frame_needed = 0, uses_anonymous_args = 0
 1493              	.LVL122:
 1494 0000 70B5     		push	{r4, r5, r6, lr}
 1495              		.cfi_def_cfa_offset 16
 1496              		.cfi_offset 4, -16
 1497              		.cfi_offset 5, -12
 1498              		.cfi_offset 6, -8
 1499              		.cfi_offset 14, -4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 68


 1500 0002 0400     		movs	r4, r0
 417:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1501              		.loc 1 417 0
 1502 0004 C2B2     		uxtb	r2, r0
 1503 0006 124B     		ldr	r3, .L61
 1504 0008 1A70     		strb	r2, [r3]
 419:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1505              		.loc 1 419 0
 1506 000a 0220     		movs	r0, #2
 1507              	.LVL123:
 1508 000c FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
 1509              	.LVL124:
 425:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1510              		.loc 1 425 0
 1511 0010 FFF7FEFF 		bl	CapSense_1_CSXElectrodeCheck
 1512              	.LVL125:
 429:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1513              		.loc 1 429 0
 1514 0014 6001     		lsls	r0, r4, #5
 1515 0016 0F4B     		ldr	r3, .L61+4
 1516 0018 C018     		adds	r0, r0, r3
 1517 001a 0F4B     		ldr	r3, .L61+8
 1518 001c 1860     		str	r0, [r3]
 431:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1519              		.loc 1 431 0
 1520 001e 4568     		ldr	r5, [r0, #4]
 1521              	.LVL126:
 436:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
 1522              		.loc 1 436 0
 1523 0020 6C89     		ldrh	r4, [r5, #10]
 1524              	.LVL127:
 439:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod  = CapSense_1_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 1525              		.loc 1 439 0
 1526 0022 2A88     		ldrh	r2, [r5]
 1527 0024 0D4B     		ldr	r3, .L61+12
 1528 0026 1A60     		str	r2, [r3]
 440:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1529              		.loc 1 440 0
 1530 0028 2800     		movs	r0, r5
 1531 002a FFF7FEFF 		bl	CapSense_1_SsCalcCsxScanPeriod
 1532              	.LVL128:
 1533 002e 0C4B     		ldr	r3, .L61+16
 1534 0030 5880     		strh	r0, [r3, #2]
 442:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1535              		.loc 1 442 0
 1536 0032 2B7B     		ldrb	r3, [r5, #12]
 1537              	.LVL129:
 444:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << CapSense_1_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 1538              		.loc 1 444 0
 1539 0034 013C     		subs	r4, r4, #1
 1540              	.LVL130:
 1541 0036 2405     		lsls	r4, r4, #20
 1542              	.LVL131:
 1543 0038 240D     		lsrs	r4, r4, #20
 1544              	.LVL132:
 445:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, tmpRegVal);
 1545              		.loc 1 445 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 69


 1546 003a 1B04     		lsls	r3, r3, #16
 1547              	.LVL133:
 1548 003c 1C43     		orrs	r4, r3
 1549              	.LVL134:
 446:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsxClk);
 1550              		.loc 1 446 0
 1551 003e 094B     		ldr	r3, .L61+20
 1552 0040 1C60     		str	r4, [r3]
 447:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
 1553              		.loc 1 447 0
 1554 0042 2023     		movs	r3, #32
 1555 0044 084A     		ldr	r2, .L61+24
 1556 0046 D05C     		ldrb	r0, [r2, r3]
 1557 0048 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 1558              	.LVL135:
 476:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1559              		.loc 1 476 0
 1560              		@ sp needed
 1561              	.LVL136:
 1562              	.LVL137:
 1563 004c 70BD     		pop	{r4, r5, r6, pc}
 1564              	.L62:
 1565 004e C046     		.align	2
 1566              	.L61:
 1567 0050 00000000 		.word	CapSense_1_widgetIndex
 1568 0054 00000000 		.word	CapSense_1_dsFlash
 1569 0058 00000000 		.word	CapSense_1_curFlashWdgtPtr
 1570 005c 14030B40 		.word	1074463508
 1571 0060 00000000 		.word	.LANCHOR0
 1572 0064 00020B40 		.word	1074463232
 1573 0068 00000000 		.word	CapSense_1_dsRam
 1574              		.cfi_endproc
 1575              	.LFE3:
 1576              		.size	CapSense_1_CSXSetupWidget, .-CapSense_1_CSXSetupWidget
 1577              		.global	__aeabi_uidivmod
 1578              		.section	.text.CapSense_1_CSXSetupWidgetExt,"ax",%progbits
 1579              		.align	2
 1580              		.global	CapSense_1_CSXSetupWidgetExt
 1581              		.code	16
 1582              		.thumb_func
 1583              		.type	CapSense_1_CSXSetupWidgetExt, %function
 1584              	CapSense_1_CSXSetupWidgetExt:
 1585              	.LFB4:
 517:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 txIndex;
 1586              		.loc 1 517 0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 0
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 1590              	.LVL138:
 1591 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1592              		.cfi_def_cfa_offset 24
 1593              		.cfi_offset 3, -24
 1594              		.cfi_offset 4, -20
 1595              		.cfi_offset 5, -16
 1596              		.cfi_offset 6, -12
 1597              		.cfi_offset 7, -8
 1598              		.cfi_offset 14, -4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 70


 1599 0002 0C00     		movs	r4, r1
 526:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_sensorIndex = (uint8)sensorId;
 1600              		.loc 1 526 0
 1601 0004 FFF7FEFF 		bl	CapSense_1_CSXSetupWidget
 1602              	.LVL139:
 527:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1603              		.loc 1 527 0
 1604 0008 E2B2     		uxtb	r2, r4
 1605 000a 184B     		ldr	r3, .L64
 1606 000c 1A70     		strb	r2, [r3]
 530:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = &CapSense_1_curRamSnsPtr[sensorId];
 1607              		.loc 1 530 0
 1608 000e 184B     		ldr	r3, .L64+4
 1609 0010 1D68     		ldr	r5, [r3]
 531:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1610              		.loc 1 531 0
 1611 0012 6300     		lsls	r3, r4, #1
 1612 0014 1B19     		adds	r3, r3, r4
 1613 0016 DB00     		lsls	r3, r3, #3
 1614 0018 AA68     		ldr	r2, [r5, #8]
 1615 001a 9446     		mov	ip, r2
 1616 001c 6344     		add	r3, r3, ip
 1617 001e 154A     		ldr	r2, .L64+8
 1618 0020 1360     		str	r3, [r2]
 543:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     txIndex = sensorId % CapSense_1_curFlashWdgtPtr->numRows;
 1619              		.loc 1 543 0
 1620 0022 2F7F     		ldrb	r7, [r5, #28]
 1621 0024 3900     		movs	r1, r7
 1622 0026 2000     		movs	r0, r4
 1623 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1624              	.LVL140:
 1625 002c 0600     		movs	r6, r0
 1626              	.LVL141:
 544:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1627              		.loc 1 544 0
 1628 002e 3900     		movs	r1, r7
 1629 0030 2000     		movs	r0, r4
 1630              	.LVL142:
 1631 0032 FFF7FEFF 		bl	__aeabi_uidivmod
 1632              	.LVL143:
 596:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRxIOPtr = &CapSense_1_curRxIOPtr[rxIndex];
 1633              		.loc 1 596 0
 1634 0036 2A68     		ldr	r2, [r5]
 1635 0038 0F4C     		ldr	r4, .L64+12
 1636              	.LVL144:
 597:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1637              		.loc 1 597 0
 1638 003a F300     		lsls	r3, r6, #3
 1639 003c 9B1B     		subs	r3, r3, r6
 1640 003e 9B00     		lsls	r3, r3, #2
 1641 0040 D318     		adds	r3, r2, r3
 1642 0042 A360     		str	r3, [r4, #8]
 599:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curTxIOPtr = &CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr->numCols + t
 1643              		.loc 1 599 0
 1644 0044 E260     		str	r2, [r4, #12]
 600:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1645              		.loc 1 600 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 71


 1646 0046 E87E     		ldrb	r0, [r5, #27]
 1647 0048 4118     		adds	r1, r0, r1
 1648              	.LVL145:
 1649 004a CB00     		lsls	r3, r1, #3
 1650 004c 581A     		subs	r0, r3, r1
 1651 004e 8000     		lsls	r0, r0, #2
 1652 0050 1018     		adds	r0, r2, r0
 1653 0052 E060     		str	r0, [r4, #12]
 603:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 1654              		.loc 1 603 0
 1655 0054 FFF7FEFF 		bl	CapSense_1_CSXConnectTx
 1656              	.LVL146:
 604:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_eleCsxDisconnectFlag = CapSense_1_DISCONNECT_IO_FLAG;
 1657              		.loc 1 604 0
 1658 0058 A068     		ldr	r0, [r4, #8]
 1659 005a FFF7FEFF 		bl	CapSense_1_CSXConnectRx
 1660              	.LVL147:
 605:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1661              		.loc 1 605 0
 1662 005e 0123     		movs	r3, #1
 1663 0060 2382     		strh	r3, [r4, #16]
 608:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 1664              		.loc 1 608 0
 1665 0062 064A     		ldr	r2, .L64+16
 1666 0064 064B     		ldr	r3, .L64+20
 1667 0066 1A60     		str	r2, [r3]
 613:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1668              		.loc 1 613 0
 1669              		@ sp needed
 1670              	.LVL148:
 1671 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1672              	.L65:
 1673 006a C046     		.align	2
 1674              	.L64:
 1675 006c 00000000 		.word	CapSense_1_sensorIndex
 1676 0070 00000000 		.word	CapSense_1_curFlashWdgtPtr
 1677 0074 00000000 		.word	CapSense_1_curRamSnsPtr
 1678 0078 00000000 		.word	.LANCHOR0
 1679 007c 00000000 		.word	CapSense_1_SsCSXPostSingleScan
 1680 0080 00000000 		.word	.LANCHOR1
 1681              		.cfi_endproc
 1682              	.LFE4:
 1683              		.size	CapSense_1_CSXSetupWidgetExt, .-CapSense_1_CSXSetupWidgetExt
 1684              		.section	.text.CapSense_1_SsCSXGetTxClkDivider,"ax",%progbits
 1685              		.align	2
 1686              		.global	CapSense_1_SsCSXGetTxClkDivider
 1687              		.code	16
 1688              		.thumb_func
 1689              		.type	CapSense_1_SsCSXGetTxClkDivider, %function
 1690              	CapSense_1_SsCSXGetTxClkDivider:
 1691              	.LFB15:
1805:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 retVal;
 1692              		.loc 1 1805 0
 1693              		.cfi_startproc
 1694              		@ args = 0, pretend = 0, frame = 0
 1695              		@ frame_needed = 0, uses_anonymous_args = 0
 1696              		@ link register save eliminated.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 72


 1697              	.LVL149:
1812:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1698              		.loc 1 1812 0
 1699 0000 4001     		lsls	r0, r0, #5
 1700              	.LVL150:
 1701 0002 024B     		ldr	r3, .L67
 1702 0004 1818     		adds	r0, r3, r0
 1703 0006 4368     		ldr	r3, [r0, #4]
 1704              	.LVL151:
1815:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
 1705              		.loc 1 1815 0
 1706 0008 5889     		ldrh	r0, [r3, #10]
 1707              	.LVL152:
1826:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1708              		.loc 1 1826 0
 1709              		@ sp needed
 1710 000a 7047     		bx	lr
 1711              	.L68:
 1712              		.align	2
 1713              	.L67:
 1714 000c 00000000 		.word	CapSense_1_dsFlash
 1715              		.cfi_endproc
 1716              	.LFE15:
 1717              		.size	CapSense_1_SsCSXGetTxClkDivider, .-CapSense_1_SsCSXGetTxClkDivider
 1718              		.global	CapSense_1_CSXPostScanApiPtr
 1719              		.global	CapSense_1_csxRawCount
 1720              		.global	CapSense_1_csxScanPeriod
 1721              		.data
 1722              		.align	2
 1723              		.set	.LANCHOR1,. + 0
 1724              		.type	CapSense_1_CSXPostScanApiPtr, %object
 1725              		.size	CapSense_1_CSXPostScanApiPtr, 4
 1726              	CapSense_1_CSXPostScanApiPtr:
 1727 0000 00000000 		.word	CapSense_1_SsCSXPostMultiScan
 1728              		.bss
 1729              		.align	2
 1730              		.set	.LANCHOR0,. + 0
 1731              		.type	CapSense_1_csxRawCount, %object
 1732              		.size	CapSense_1_csxRawCount, 2
 1733              	CapSense_1_csxRawCount:
 1734 0000 0000     		.space	2
 1735              		.type	CapSense_1_csxScanPeriod, %object
 1736              		.size	CapSense_1_csxScanPeriod, 2
 1737              	CapSense_1_csxScanPeriod:
 1738 0002 0000     		.space	2
 1739              		.type	CapSense_1_curWdgtTotalTx, %object
 1740              		.size	CapSense_1_curWdgtTotalTx, 2
 1741              	CapSense_1_curWdgtTotalTx:
 1742 0004 0000     		.space	2
 1743              		.type	CapSense_1_curWdgtTotalRx, %object
 1744              		.size	CapSense_1_curWdgtTotalRx, 2
 1745              	CapSense_1_curWdgtTotalRx:
 1746 0006 0000     		.space	2
 1747              		.type	CapSense_1_curRxIOPtr, %object
 1748              		.size	CapSense_1_curRxIOPtr, 4
 1749              	CapSense_1_curRxIOPtr:
 1750 0008 00000000 		.space	4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 73


 1751              		.type	CapSense_1_curTxIOPtr, %object
 1752              		.size	CapSense_1_curTxIOPtr, 4
 1753              	CapSense_1_curTxIOPtr:
 1754 000c 00000000 		.space	4
 1755              		.type	CapSense_1_eleCsxDisconnectFlag, %object
 1756              		.size	CapSense_1_eleCsxDisconnectFlag, 2
 1757              	CapSense_1_eleCsxDisconnectFlag:
 1758 0010 0000     		.space	2
 1759              		.text
 1760              	.Letext0:
 1761              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1762              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1763              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1764              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_Sensing.h"
 1765              		.file 6 "Generated_Source\\PSoC4\\CyLib.h"
 1766              		.section	.debug_info,"",%progbits
 1767              	.Ldebug_info0:
 1768 0000 CD0D0000 		.4byte	0xdcd
 1769 0004 0400     		.2byte	0x4
 1770 0006 00000000 		.4byte	.Ldebug_abbrev0
 1771 000a 04       		.byte	0x4
 1772 000b 01       		.uleb128 0x1
 1773 000c 7F020000 		.4byte	.LASF160
 1774 0010 0C       		.byte	0xc
 1775 0011 6A050000 		.4byte	.LASF161
 1776 0015 36020000 		.4byte	.LASF162
 1777 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1778 001d 00000000 		.4byte	0
 1779 0021 00000000 		.4byte	.Ldebug_line0
 1780 0025 02       		.uleb128 0x2
 1781 0026 01       		.byte	0x1
 1782 0027 06       		.byte	0x6
 1783 0028 5B0A0000 		.4byte	.LASF0
 1784 002c 02       		.uleb128 0x2
 1785 002d 01       		.byte	0x1
 1786 002e 08       		.byte	0x8
 1787 002f 46090000 		.4byte	.LASF1
 1788 0033 02       		.uleb128 0x2
 1789 0034 02       		.byte	0x2
 1790 0035 05       		.byte	0x5
 1791 0036 A2070000 		.4byte	.LASF2
 1792 003a 02       		.uleb128 0x2
 1793 003b 02       		.byte	0x2
 1794 003c 07       		.byte	0x7
 1795 003d 6C0A0000 		.4byte	.LASF3
 1796 0041 02       		.uleb128 0x2
 1797 0042 04       		.byte	0x4
 1798 0043 05       		.byte	0x5
 1799 0044 C7070000 		.4byte	.LASF4
 1800 0048 02       		.uleb128 0x2
 1801 0049 04       		.byte	0x4
 1802 004a 07       		.byte	0x7
 1803 004b F0080000 		.4byte	.LASF5
 1804 004f 02       		.uleb128 0x2
 1805 0050 08       		.byte	0x8
 1806 0051 05       		.byte	0x5
 1807 0052 A2050000 		.4byte	.LASF6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 74


 1808 0056 02       		.uleb128 0x2
 1809 0057 08       		.byte	0x8
 1810 0058 07       		.byte	0x7
 1811 0059 52030000 		.4byte	.LASF7
 1812 005d 03       		.uleb128 0x3
 1813 005e 04       		.byte	0x4
 1814 005f 05       		.byte	0x5
 1815 0060 696E7400 		.ascii	"int\000"
 1816 0064 02       		.uleb128 0x2
 1817 0065 04       		.byte	0x4
 1818 0066 07       		.byte	0x7
 1819 0067 C4000000 		.4byte	.LASF8
 1820 006b 04       		.uleb128 0x4
 1821 006c C30A0000 		.4byte	.LASF9
 1822 0070 02       		.byte	0x2
 1823 0071 E401     		.2byte	0x1e4
 1824 0073 2C000000 		.4byte	0x2c
 1825 0077 04       		.uleb128 0x4
 1826 0078 26050000 		.4byte	.LASF10
 1827 007c 02       		.byte	0x2
 1828 007d E501     		.2byte	0x1e5
 1829 007f 3A000000 		.4byte	0x3a
 1830 0083 04       		.uleb128 0x4
 1831 0084 36060000 		.4byte	.LASF11
 1832 0088 02       		.byte	0x2
 1833 0089 E601     		.2byte	0x1e6
 1834 008b 48000000 		.4byte	0x48
 1835 008f 02       		.uleb128 0x2
 1836 0090 04       		.byte	0x4
 1837 0091 04       		.byte	0x4
 1838 0092 2A020000 		.4byte	.LASF12
 1839 0096 02       		.uleb128 0x2
 1840 0097 08       		.byte	0x8
 1841 0098 04       		.byte	0x4
 1842 0099 C90A0000 		.4byte	.LASF13
 1843 009d 02       		.uleb128 0x2
 1844 009e 01       		.byte	0x1
 1845 009f 08       		.byte	0x8
 1846 00a0 EA040000 		.4byte	.LASF14
 1847 00a4 05       		.uleb128 0x5
 1848 00a5 6B000000 		.4byte	0x6b
 1849 00a9 05       		.uleb128 0x5
 1850 00aa 77000000 		.4byte	0x77
 1851 00ae 04       		.uleb128 0x4
 1852 00af 28070000 		.4byte	.LASF15
 1853 00b3 02       		.byte	0x2
 1854 00b4 9002     		.2byte	0x290
 1855 00b6 BA000000 		.4byte	0xba
 1856 00ba 05       		.uleb128 0x5
 1857 00bb 83000000 		.4byte	0x83
 1858 00bf 06       		.uleb128 0x6
 1859 00c0 04       		.byte	0x4
 1860 00c1 C5000000 		.4byte	0xc5
 1861 00c5 07       		.uleb128 0x7
 1862 00c6 02       		.uleb128 0x2
 1863 00c7 08       		.byte	0x8
 1864 00c8 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 75


 1865 00c9 1C070000 		.4byte	.LASF16
 1866 00cd 02       		.uleb128 0x2
 1867 00ce 04       		.byte	0x4
 1868 00cf 07       		.byte	0x7
 1869 00d0 DF080000 		.4byte	.LASF17
 1870 00d4 08       		.uleb128 0x8
 1871 00d5 04       		.byte	0x4
 1872 00d6 04       		.uleb128 0x4
 1873 00d7 B0050000 		.4byte	.LASF18
 1874 00db 03       		.byte	0x3
 1875 00dc 5B01     		.2byte	0x15b
 1876 00de 77000000 		.4byte	0x77
 1877 00e2 04       		.uleb128 0x4
 1878 00e3 B3030000 		.4byte	.LASF19
 1879 00e7 03       		.byte	0x3
 1880 00e8 5F01     		.2byte	0x15f
 1881 00ea 6B000000 		.4byte	0x6b
 1882 00ee 09       		.uleb128 0x9
 1883 00ef 01       		.byte	0x1
 1884 00f0 2C000000 		.4byte	0x2c
 1885 00f4 04       		.byte	0x4
 1886 00f5 70       		.byte	0x70
 1887 00f6 19010000 		.4byte	0x119
 1888 00fa 0A       		.uleb128 0xa
 1889 00fb 58060000 		.4byte	.LASF20
 1890 00ff 00       		.byte	0
 1891 0100 0A       		.uleb128 0xa
 1892 0101 84070000 		.4byte	.LASF21
 1893 0105 01       		.byte	0x1
 1894 0106 0A       		.uleb128 0xa
 1895 0107 43080000 		.4byte	.LASF22
 1896 010b 02       		.byte	0x2
 1897 010c 0A       		.uleb128 0xa
 1898 010d 1C040000 		.4byte	.LASF23
 1899 0111 03       		.byte	0x3
 1900 0112 0A       		.uleb128 0xa
 1901 0113 F80A0000 		.4byte	.LASF24
 1902 0117 04       		.byte	0x4
 1903 0118 00       		.byte	0
 1904 0119 0B       		.uleb128 0xb
 1905 011a 0E       		.byte	0xe
 1906 011b 04       		.byte	0x4
 1907 011c 8E       		.byte	0x8e
 1908 011d 8E010000 		.4byte	0x18e
 1909 0121 0C       		.uleb128 0xc
 1910 0122 2D050000 		.4byte	.LASF25
 1911 0126 04       		.byte	0x4
 1912 0127 93       		.byte	0x93
 1913 0128 77000000 		.4byte	0x77
 1914 012c 00       		.byte	0
 1915 012d 0C       		.uleb128 0xc
 1916 012e 1F090000 		.4byte	.LASF26
 1917 0132 04       		.byte	0x4
 1918 0133 98       		.byte	0x98
 1919 0134 D6000000 		.4byte	0xd6
 1920 0138 02       		.byte	0x2
 1921 0139 0C       		.uleb128 0xc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 76


 1922 013a E2040000 		.4byte	.LASF27
 1923 013e 04       		.byte	0x4
 1924 013f 9D       		.byte	0x9d
 1925 0140 6B000000 		.4byte	0x6b
 1926 0144 04       		.byte	0x4
 1927 0145 0C       		.uleb128 0xc
 1928 0146 FB050000 		.4byte	.LASF28
 1929 014a 04       		.byte	0x4
 1930 014b A2       		.byte	0xa2
 1931 014c 6B000000 		.4byte	0x6b
 1932 0150 05       		.byte	0x5
 1933 0151 0C       		.uleb128 0xc
 1934 0152 3D060000 		.4byte	.LASF29
 1935 0156 04       		.byte	0x4
 1936 0157 A8       		.byte	0xa8
 1937 0158 6B000000 		.4byte	0x6b
 1938 015c 06       		.byte	0x6
 1939 015d 0C       		.uleb128 0xc
 1940 015e CA050000 		.4byte	.LASF30
 1941 0162 04       		.byte	0x4
 1942 0163 AE       		.byte	0xae
 1943 0164 6B000000 		.4byte	0x6b
 1944 0168 07       		.byte	0x7
 1945 0169 0C       		.uleb128 0xc
 1946 016a 3B040000 		.4byte	.LASF31
 1947 016e 04       		.byte	0x4
 1948 016f B5       		.byte	0xb5
 1949 0170 E2000000 		.4byte	0xe2
 1950 0174 08       		.byte	0x8
 1951 0175 0C       		.uleb128 0xc
 1952 0176 030A0000 		.4byte	.LASF32
 1953 017a 04       		.byte	0x4
 1954 017b BD       		.byte	0xbd
 1955 017c 77000000 		.4byte	0x77
 1956 0180 0A       		.byte	0xa
 1957 0181 0C       		.uleb128 0xc
 1958 0182 77070000 		.4byte	.LASF33
 1959 0186 04       		.byte	0x4
 1960 0187 C2       		.byte	0xc2
 1961 0188 6B000000 		.4byte	0x6b
 1962 018c 0C       		.byte	0xc
 1963 018d 00       		.byte	0
 1964 018e 0D       		.uleb128 0xd
 1965 018f 0F060000 		.4byte	.LASF34
 1966 0193 04       		.byte	0x4
 1967 0194 C3       		.byte	0xc3
 1968 0195 19010000 		.4byte	0x119
 1969 0199 0B       		.uleb128 0xb
 1970 019a 0E       		.byte	0xe
 1971 019b 04       		.byte	0x4
 1972 019c C8       		.byte	0xc8
 1973 019d 0E020000 		.4byte	0x20e
 1974 01a1 0C       		.uleb128 0xc
 1975 01a2 2D050000 		.4byte	.LASF25
 1976 01a6 04       		.byte	0x4
 1977 01a7 CD       		.byte	0xcd
 1978 01a8 77000000 		.4byte	0x77
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 77


 1979 01ac 00       		.byte	0
 1980 01ad 0C       		.uleb128 0xc
 1981 01ae 1F090000 		.4byte	.LASF26
 1982 01b2 04       		.byte	0x4
 1983 01b3 D2       		.byte	0xd2
 1984 01b4 D6000000 		.4byte	0xd6
 1985 01b8 02       		.byte	0x2
 1986 01b9 0C       		.uleb128 0xc
 1987 01ba E2040000 		.4byte	.LASF27
 1988 01be 04       		.byte	0x4
 1989 01bf D7       		.byte	0xd7
 1990 01c0 6B000000 		.4byte	0x6b
 1991 01c4 04       		.byte	0x4
 1992 01c5 0C       		.uleb128 0xc
 1993 01c6 FB050000 		.4byte	.LASF28
 1994 01ca 04       		.byte	0x4
 1995 01cb DC       		.byte	0xdc
 1996 01cc 6B000000 		.4byte	0x6b
 1997 01d0 05       		.byte	0x5
 1998 01d1 0C       		.uleb128 0xc
 1999 01d2 3D060000 		.4byte	.LASF29
 2000 01d6 04       		.byte	0x4
 2001 01d7 E2       		.byte	0xe2
 2002 01d8 6B000000 		.4byte	0x6b
 2003 01dc 06       		.byte	0x6
 2004 01dd 0C       		.uleb128 0xc
 2005 01de CA050000 		.4byte	.LASF30
 2006 01e2 04       		.byte	0x4
 2007 01e3 E8       		.byte	0xe8
 2008 01e4 6B000000 		.4byte	0x6b
 2009 01e8 07       		.byte	0x7
 2010 01e9 0C       		.uleb128 0xc
 2011 01ea 3B040000 		.4byte	.LASF31
 2012 01ee 04       		.byte	0x4
 2013 01ef EF       		.byte	0xef
 2014 01f0 E2000000 		.4byte	0xe2
 2015 01f4 08       		.byte	0x8
 2016 01f5 0C       		.uleb128 0xc
 2017 01f6 030A0000 		.4byte	.LASF32
 2018 01fa 04       		.byte	0x4
 2019 01fb F7       		.byte	0xf7
 2020 01fc 77000000 		.4byte	0x77
 2021 0200 0A       		.byte	0xa
 2022 0201 0C       		.uleb128 0xc
 2023 0202 77070000 		.4byte	.LASF33
 2024 0206 04       		.byte	0x4
 2025 0207 FC       		.byte	0xfc
 2026 0208 6B000000 		.4byte	0x6b
 2027 020c 0C       		.byte	0xc
 2028 020d 00       		.byte	0
 2029 020e 0D       		.uleb128 0xd
 2030 020f 350B0000 		.4byte	.LASF35
 2031 0213 04       		.byte	0x4
 2032 0214 FD       		.byte	0xfd
 2033 0215 99010000 		.4byte	0x199
 2034 0219 0E       		.uleb128 0xe
 2035 021a 54       		.byte	0x54
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 78


 2036 021b 04       		.byte	0x4
 2037 021c 0301     		.2byte	0x103
 2038 021e 71020000 		.4byte	0x271
 2039 0222 0F       		.uleb128 0xf
 2040 0223 6B080000 		.4byte	.LASF36
 2041 0227 04       		.byte	0x4
 2042 0228 0801     		.2byte	0x108
 2043 022a 0E020000 		.4byte	0x20e
 2044 022e 00       		.byte	0
 2045 022f 0F       		.uleb128 0xf
 2046 0230 73080000 		.4byte	.LASF37
 2047 0234 04       		.byte	0x4
 2048 0235 0D01     		.2byte	0x10d
 2049 0237 0E020000 		.4byte	0x20e
 2050 023b 0E       		.byte	0xe
 2051 023c 0F       		.uleb128 0xf
 2052 023d 7B080000 		.4byte	.LASF38
 2053 0241 04       		.byte	0x4
 2054 0242 1201     		.2byte	0x112
 2055 0244 0E020000 		.4byte	0x20e
 2056 0248 1C       		.byte	0x1c
 2057 0249 0F       		.uleb128 0xf
 2058 024a 83080000 		.4byte	.LASF39
 2059 024e 04       		.byte	0x4
 2060 024f 1701     		.2byte	0x117
 2061 0251 0E020000 		.4byte	0x20e
 2062 0255 2A       		.byte	0x2a
 2063 0256 0F       		.uleb128 0xf
 2064 0257 8B080000 		.4byte	.LASF40
 2065 025b 04       		.byte	0x4
 2066 025c 1C01     		.2byte	0x11c
 2067 025e 0E020000 		.4byte	0x20e
 2068 0262 38       		.byte	0x38
 2069 0263 0F       		.uleb128 0xf
 2070 0264 93080000 		.4byte	.LASF41
 2071 0268 04       		.byte	0x4
 2072 0269 2101     		.2byte	0x121
 2073 026b 0E020000 		.4byte	0x20e
 2074 026f 46       		.byte	0x46
 2075 0270 00       		.byte	0
 2076 0271 04       		.uleb128 0x4
 2077 0272 CF010000 		.4byte	.LASF42
 2078 0276 04       		.byte	0x4
 2079 0277 2201     		.2byte	0x122
 2080 0279 19020000 		.4byte	0x219
 2081 027d 0E       		.uleb128 0xe
 2082 027e 18       		.byte	0x18
 2083 027f 04       		.byte	0x4
 2084 0280 2801     		.2byte	0x128
 2085 0282 D5020000 		.4byte	0x2d5
 2086 0286 10       		.uleb128 0x10
 2087 0287 72617700 		.ascii	"raw\000"
 2088 028b 04       		.byte	0x4
 2089 028c 2D01     		.2byte	0x12d
 2090 028e D5020000 		.4byte	0x2d5
 2091 0292 00       		.byte	0
 2092 0293 0F       		.uleb128 0xf
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 79


 2093 0294 670A0000 		.4byte	.LASF43
 2094 0298 04       		.byte	0x4
 2095 0299 3201     		.2byte	0x132
 2096 029b D5020000 		.4byte	0x2d5
 2097 029f 06       		.byte	0x6
 2098 02a0 0F       		.uleb128 0xf
 2099 02a1 28090000 		.4byte	.LASF44
 2100 02a5 04       		.byte	0x4
 2101 02a6 3801     		.2byte	0x138
 2102 02a8 E5020000 		.4byte	0x2e5
 2103 02ac 0C       		.byte	0xc
 2104 02ad 0F       		.uleb128 0xf
 2105 02ae 0A080000 		.4byte	.LASF45
 2106 02b2 04       		.byte	0x4
 2107 02b3 3D01     		.2byte	0x13d
 2108 02b5 D6000000 		.4byte	0xd6
 2109 02b9 10       		.byte	0x10
 2110 02ba 0F       		.uleb128 0xf
 2111 02bb D00A0000 		.4byte	.LASF46
 2112 02bf 04       		.byte	0x4
 2113 02c0 4201     		.2byte	0x142
 2114 02c2 F5020000 		.4byte	0x2f5
 2115 02c6 12       		.byte	0x12
 2116 02c7 0F       		.uleb128 0xf
 2117 02c8 61050000 		.4byte	.LASF47
 2118 02cc 04       		.byte	0x4
 2119 02cd 4701     		.2byte	0x147
 2120 02cf E5020000 		.4byte	0x2e5
 2121 02d3 15       		.byte	0x15
 2122 02d4 00       		.byte	0
 2123 02d5 11       		.uleb128 0x11
 2124 02d6 77000000 		.4byte	0x77
 2125 02da E5020000 		.4byte	0x2e5
 2126 02de 12       		.uleb128 0x12
 2127 02df CD000000 		.4byte	0xcd
 2128 02e3 02       		.byte	0x2
 2129 02e4 00       		.byte	0
 2130 02e5 11       		.uleb128 0x11
 2131 02e6 6B000000 		.4byte	0x6b
 2132 02ea F5020000 		.4byte	0x2f5
 2133 02ee 12       		.uleb128 0x12
 2134 02ef CD000000 		.4byte	0xcd
 2135 02f3 02       		.byte	0x2
 2136 02f4 00       		.byte	0
 2137 02f5 11       		.uleb128 0x11
 2138 02f6 E2000000 		.4byte	0xe2
 2139 02fa 05030000 		.4byte	0x305
 2140 02fe 12       		.uleb128 0x12
 2141 02ff CD000000 		.4byte	0xcd
 2142 0303 02       		.byte	0x2
 2143 0304 00       		.byte	0
 2144 0305 04       		.uleb128 0x4
 2145 0306 DE0A0000 		.4byte	.LASF48
 2146 030a 04       		.byte	0x4
 2147 030b 4801     		.2byte	0x148
 2148 030d 7D020000 		.4byte	0x27d
 2149 0311 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 80


 2150 0312 90       		.byte	0x90
 2151 0313 04       		.byte	0x4
 2152 0314 4E01     		.2byte	0x14e
 2153 0316 69030000 		.4byte	0x369
 2154 031a 0F       		.uleb128 0xf
 2155 031b 6B080000 		.4byte	.LASF36
 2156 031f 04       		.byte	0x4
 2157 0320 5301     		.2byte	0x153
 2158 0322 69030000 		.4byte	0x369
 2159 0326 00       		.byte	0
 2160 0327 0F       		.uleb128 0xf
 2161 0328 73080000 		.4byte	.LASF37
 2162 032c 04       		.byte	0x4
 2163 032d 5801     		.2byte	0x158
 2164 032f 69030000 		.4byte	0x369
 2165 0333 18       		.byte	0x18
 2166 0334 0F       		.uleb128 0xf
 2167 0335 7B080000 		.4byte	.LASF38
 2168 0339 04       		.byte	0x4
 2169 033a 5D01     		.2byte	0x15d
 2170 033c 69030000 		.4byte	0x369
 2171 0340 30       		.byte	0x30
 2172 0341 0F       		.uleb128 0xf
 2173 0342 83080000 		.4byte	.LASF39
 2174 0346 04       		.byte	0x4
 2175 0347 6201     		.2byte	0x162
 2176 0349 69030000 		.4byte	0x369
 2177 034d 48       		.byte	0x48
 2178 034e 0F       		.uleb128 0xf
 2179 034f 8B080000 		.4byte	.LASF40
 2180 0353 04       		.byte	0x4
 2181 0354 6701     		.2byte	0x167
 2182 0356 69030000 		.4byte	0x369
 2183 035a 60       		.byte	0x60
 2184 035b 0F       		.uleb128 0xf
 2185 035c 93080000 		.4byte	.LASF41
 2186 0360 04       		.byte	0x4
 2187 0361 6C01     		.2byte	0x16c
 2188 0363 69030000 		.4byte	0x369
 2189 0367 78       		.byte	0x78
 2190 0368 00       		.byte	0
 2191 0369 11       		.uleb128 0x11
 2192 036a 05030000 		.4byte	0x305
 2193 036e 79030000 		.4byte	0x379
 2194 0372 12       		.uleb128 0x12
 2195 0373 CD000000 		.4byte	0xcd
 2196 0377 00       		.byte	0
 2197 0378 00       		.byte	0
 2198 0379 04       		.uleb128 0x4
 2199 037a 6F060000 		.4byte	.LASF49
 2200 037e 04       		.byte	0x4
 2201 037f 6D01     		.2byte	0x16d
 2202 0381 11030000 		.4byte	0x311
 2203 0385 13       		.uleb128 0x13
 2204 0386 1001     		.2byte	0x110
 2205 0388 04       		.byte	0x4
 2206 0389 7301     		.2byte	0x173
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 81


 2207 038b 71040000 		.4byte	0x471
 2208 038f 0F       		.uleb128 0xf
 2209 0390 41070000 		.4byte	.LASF50
 2210 0394 04       		.byte	0x4
 2211 0395 7A01     		.2byte	0x17a
 2212 0397 77000000 		.4byte	0x77
 2213 039b 00       		.byte	0
 2214 039c 0F       		.uleb128 0xf
 2215 039d 2C0B0000 		.4byte	.LASF51
 2216 03a1 04       		.byte	0x4
 2217 03a2 7F01     		.2byte	0x17f
 2218 03a4 77000000 		.4byte	0x77
 2219 03a8 02       		.byte	0x2
 2220 03a9 0F       		.uleb128 0xf
 2221 03aa 0C010000 		.4byte	.LASF52
 2222 03ae 04       		.byte	0x4
 2223 03af 8401     		.2byte	0x184
 2224 03b1 77000000 		.4byte	0x77
 2225 03b5 04       		.byte	0x4
 2226 03b6 0F       		.uleb128 0xf
 2227 03b7 0F080000 		.4byte	.LASF53
 2228 03bb 04       		.byte	0x4
 2229 03bc 8A01     		.2byte	0x18a
 2230 03be 77000000 		.4byte	0x77
 2231 03c2 06       		.byte	0x6
 2232 03c3 0F       		.uleb128 0xf
 2233 03c4 00010000 		.4byte	.LASF54
 2234 03c8 04       		.byte	0x4
 2235 03c9 8F01     		.2byte	0x18f
 2236 03cb 77000000 		.4byte	0x77
 2237 03cf 08       		.byte	0x8
 2238 03d0 0F       		.uleb128 0xf
 2239 03d1 4E050000 		.4byte	.LASF55
 2240 03d5 04       		.byte	0x4
 2241 03d6 9401     		.2byte	0x194
 2242 03d8 BA000000 		.4byte	0xba
 2243 03dc 0C       		.byte	0xc
 2244 03dd 0F       		.uleb128 0xf
 2245 03de D0070000 		.4byte	.LASF56
 2246 03e2 04       		.byte	0x4
 2247 03e3 9A01     		.2byte	0x19a
 2248 03e5 71040000 		.4byte	0x471
 2249 03e9 10       		.byte	0x10
 2250 03ea 0F       		.uleb128 0xf
 2251 03eb A3080000 		.4byte	.LASF57
 2252 03ef 04       		.byte	0x4
 2253 03f0 A101     		.2byte	0x1a1
 2254 03f2 71040000 		.4byte	0x471
 2255 03f6 14       		.byte	0x14
 2256 03f7 0F       		.uleb128 0xf
 2257 03f8 6D070000 		.4byte	.LASF58
 2258 03fc 04       		.byte	0x4
 2259 03fd B101     		.2byte	0x1b1
 2260 03ff 81040000 		.4byte	0x481
 2261 0403 18       		.byte	0x18
 2262 0404 0F       		.uleb128 0xf
 2263 0405 04060000 		.4byte	.LASF59
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 82


 2264 0409 04       		.byte	0x4
 2265 040a B701     		.2byte	0x1b7
 2266 040c 77000000 		.4byte	0x77
 2267 0410 1E       		.byte	0x1e
 2268 0411 0F       		.uleb128 0xf
 2269 0412 93090000 		.4byte	.LASF60
 2270 0416 04       		.byte	0x4
 2271 0417 BC01     		.2byte	0x1bc
 2272 0419 6B000000 		.4byte	0x6b
 2273 041d 20       		.byte	0x20
 2274 041e 0F       		.uleb128 0xf
 2275 041f D5050000 		.4byte	.LASF61
 2276 0423 04       		.byte	0x4
 2277 0424 C101     		.2byte	0x1c1
 2278 0426 71020000 		.4byte	0x271
 2279 042a 22       		.byte	0x22
 2280 042b 0F       		.uleb128 0xf
 2281 042c 4A030000 		.4byte	.LASF62
 2282 0430 04       		.byte	0x4
 2283 0431 C601     		.2byte	0x1c6
 2284 0433 79030000 		.4byte	0x379
 2285 0437 76       		.byte	0x76
 2286 0438 14       		.uleb128 0x14
 2287 0439 94000000 		.4byte	.LASF63
 2288 043d 04       		.byte	0x4
 2289 043e CB01     		.2byte	0x1cb
 2290 0440 6B000000 		.4byte	0x6b
 2291 0444 0601     		.2byte	0x106
 2292 0446 14       		.uleb128 0x14
 2293 0447 81030000 		.4byte	.LASF64
 2294 044b 04       		.byte	0x4
 2295 044c D001     		.2byte	0x1d0
 2296 044e 6B000000 		.4byte	0x6b
 2297 0452 0701     		.2byte	0x107
 2298 0454 14       		.uleb128 0x14
 2299 0455 2E070000 		.4byte	.LASF65
 2300 0459 04       		.byte	0x4
 2301 045a D501     		.2byte	0x1d5
 2302 045c 77000000 		.4byte	0x77
 2303 0460 0801     		.2byte	0x108
 2304 0462 14       		.uleb128 0x14
 2305 0463 EB050000 		.4byte	.LASF66
 2306 0467 04       		.byte	0x4
 2307 0468 DA01     		.2byte	0x1da
 2308 046a D5020000 		.4byte	0x2d5
 2309 046e 0A01     		.2byte	0x10a
 2310 0470 00       		.byte	0
 2311 0471 11       		.uleb128 0x11
 2312 0472 83000000 		.4byte	0x83
 2313 0476 81040000 		.4byte	0x481
 2314 047a 12       		.uleb128 0x12
 2315 047b CD000000 		.4byte	0xcd
 2316 047f 00       		.byte	0
 2317 0480 00       		.byte	0
 2318 0481 11       		.uleb128 0x11
 2319 0482 6B000000 		.4byte	0x6b
 2320 0486 91040000 		.4byte	0x491
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 83


 2321 048a 12       		.uleb128 0x12
 2322 048b CD000000 		.4byte	0xcd
 2323 048f 05       		.byte	0x5
 2324 0490 00       		.byte	0
 2325 0491 04       		.uleb128 0x4
 2326 0492 38050000 		.4byte	.LASF67
 2327 0496 04       		.byte	0x4
 2328 0497 DB01     		.2byte	0x1db
 2329 0499 85030000 		.4byte	0x385
 2330 049d 0E       		.uleb128 0xe
 2331 049e 1C       		.byte	0x1c
 2332 049f 04       		.byte	0x4
 2333 04a0 E101     		.2byte	0x1e1
 2334 04a2 1C050000 		.4byte	0x51c
 2335 04a6 0F       		.uleb128 0xf
 2336 04a7 2D060000 		.4byte	.LASF68
 2337 04ab 04       		.byte	0x4
 2338 04ac E601     		.2byte	0x1e6
 2339 04ae 1C050000 		.4byte	0x51c
 2340 04b2 00       		.byte	0
 2341 04b3 0F       		.uleb128 0xf
 2342 04b4 9C050000 		.4byte	.LASF69
 2343 04b8 04       		.byte	0x4
 2344 04b9 EB01     		.2byte	0x1eb
 2345 04bb 1C050000 		.4byte	0x51c
 2346 04bf 04       		.byte	0x4
 2347 04c0 0F       		.uleb128 0xf
 2348 04c1 E1030000 		.4byte	.LASF70
 2349 04c5 04       		.byte	0x4
 2350 04c6 F001     		.2byte	0x1f0
 2351 04c8 1C050000 		.4byte	0x51c
 2352 04cc 08       		.byte	0x8
 2353 04cd 0F       		.uleb128 0xf
 2354 04ce 3D080000 		.4byte	.LASF71
 2355 04d2 04       		.byte	0x4
 2356 04d3 F501     		.2byte	0x1f5
 2357 04d5 1C050000 		.4byte	0x51c
 2358 04d9 0C       		.byte	0xc
 2359 04da 0F       		.uleb128 0xf
 2360 04db E3090000 		.4byte	.LASF72
 2361 04df 04       		.byte	0x4
 2362 04e0 FA01     		.2byte	0x1fa
 2363 04e2 83000000 		.4byte	0x83
 2364 04e6 10       		.byte	0x10
 2365 04e7 0F       		.uleb128 0xf
 2366 04e8 8E060000 		.4byte	.LASF73
 2367 04ec 04       		.byte	0x4
 2368 04ed FF01     		.2byte	0x1ff
 2369 04ef 83000000 		.4byte	0x83
 2370 04f3 14       		.byte	0x14
 2371 04f4 0F       		.uleb128 0xf
 2372 04f5 1B050000 		.4byte	.LASF74
 2373 04f9 04       		.byte	0x4
 2374 04fa 0402     		.2byte	0x204
 2375 04fc 6B000000 		.4byte	0x6b
 2376 0500 18       		.byte	0x18
 2377 0501 0F       		.uleb128 0xf
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 84


 2378 0502 E8080000 		.4byte	.LASF75
 2379 0506 04       		.byte	0x4
 2380 0507 0902     		.2byte	0x209
 2381 0509 6B000000 		.4byte	0x6b
 2382 050d 19       		.byte	0x19
 2383 050e 0F       		.uleb128 0xf
 2384 050f 30020000 		.4byte	.LASF76
 2385 0513 04       		.byte	0x4
 2386 0514 0E02     		.2byte	0x20e
 2387 0516 6B000000 		.4byte	0x6b
 2388 051a 1A       		.byte	0x1a
 2389 051b 00       		.byte	0
 2390 051c 06       		.uleb128 0x6
 2391 051d 04       		.byte	0x4
 2392 051e AE000000 		.4byte	0xae
 2393 0522 04       		.uleb128 0x4
 2394 0523 910A0000 		.4byte	.LASF77
 2395 0527 04       		.byte	0x4
 2396 0528 0F02     		.2byte	0x20f
 2397 052a 9D040000 		.4byte	0x49d
 2398 052e 0E       		.uleb128 0xe
 2399 052f 20       		.byte	0x20
 2400 0530 04       		.byte	0x4
 2401 0531 4202     		.2byte	0x242
 2402 0533 BA050000 		.4byte	0x5ba
 2403 0537 0F       		.uleb128 0xf
 2404 0538 DE050000 		.4byte	.LASF78
 2405 053c 04       		.byte	0x4
 2406 053d 4B02     		.2byte	0x24b
 2407 053f BA050000 		.4byte	0x5ba
 2408 0543 00       		.byte	0
 2409 0544 0F       		.uleb128 0xf
 2410 0545 9D090000 		.4byte	.LASF79
 2411 0549 04       		.byte	0x4
 2412 054a 5202     		.2byte	0x252
 2413 054c D4000000 		.4byte	0xd4
 2414 0550 04       		.byte	0x4
 2415 0551 0F       		.uleb128 0xf
 2416 0552 4A070000 		.4byte	.LASF80
 2417 0556 04       		.byte	0x4
 2418 0557 5802     		.2byte	0x258
 2419 0559 C1050000 		.4byte	0x5c1
 2420 055d 08       		.byte	0x8
 2421 055e 0F       		.uleb128 0xf
 2422 055f 48060000 		.4byte	.LASF81
 2423 0563 04       		.byte	0x4
 2424 0564 5E02     		.2byte	0x25e
 2425 0566 D4000000 		.4byte	0xd4
 2426 056a 0C       		.byte	0xc
 2427 056b 0F       		.uleb128 0xf
 2428 056c 0F090000 		.4byte	.LASF82
 2429 0570 04       		.byte	0x4
 2430 0571 6502     		.2byte	0x265
 2431 0573 C7050000 		.4byte	0x5c7
 2432 0577 10       		.byte	0x10
 2433 0578 0F       		.uleb128 0xf
 2434 0579 86090000 		.4byte	.LASF83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 85


 2435 057d 04       		.byte	0x4
 2436 057e 6A02     		.2byte	0x26a
 2437 0580 83000000 		.4byte	0x83
 2438 0584 14       		.byte	0x14
 2439 0585 0F       		.uleb128 0xf
 2440 0586 9F040000 		.4byte	.LASF84
 2441 058a 04       		.byte	0x4
 2442 058b 7102     		.2byte	0x271
 2443 058d 77000000 		.4byte	0x77
 2444 0591 18       		.byte	0x18
 2445 0592 0F       		.uleb128 0xf
 2446 0593 91030000 		.4byte	.LASF85
 2447 0597 04       		.byte	0x4
 2448 0598 7802     		.2byte	0x278
 2449 059a 6B000000 		.4byte	0x6b
 2450 059e 1A       		.byte	0x1a
 2451 059f 0F       		.uleb128 0xf
 2452 05a0 9B080000 		.4byte	.LASF86
 2453 05a4 04       		.byte	0x4
 2454 05a5 8202     		.2byte	0x282
 2455 05a7 6B000000 		.4byte	0x6b
 2456 05ab 1B       		.byte	0x1b
 2457 05ac 0F       		.uleb128 0xf
 2458 05ad C8090000 		.4byte	.LASF87
 2459 05b1 04       		.byte	0x4
 2460 05b2 8A02     		.2byte	0x28a
 2461 05b4 6B000000 		.4byte	0x6b
 2462 05b8 1C       		.byte	0x1c
 2463 05b9 00       		.byte	0
 2464 05ba 06       		.uleb128 0x6
 2465 05bb 04       		.byte	0x4
 2466 05bc C0050000 		.4byte	0x5c0
 2467 05c0 15       		.uleb128 0x15
 2468 05c1 06       		.uleb128 0x6
 2469 05c2 04       		.byte	0x4
 2470 05c3 05030000 		.4byte	0x305
 2471 05c7 06       		.uleb128 0x6
 2472 05c8 04       		.byte	0x4
 2473 05c9 6B000000 		.4byte	0x6b
 2474 05cd 04       		.uleb128 0x4
 2475 05ce 26000000 		.4byte	.LASF88
 2476 05d2 04       		.byte	0x4
 2477 05d3 8B02     		.2byte	0x28b
 2478 05d5 2E050000 		.4byte	0x52e
 2479 05d9 0E       		.uleb128 0xe
 2480 05da C0       		.byte	0xc0
 2481 05db 04       		.byte	0x4
 2482 05dc 9102     		.2byte	0x291
 2483 05de F0050000 		.4byte	0x5f0
 2484 05e2 0F       		.uleb128 0xf
 2485 05e3 7E0B0000 		.4byte	.LASF89
 2486 05e7 04       		.byte	0x4
 2487 05e8 9602     		.2byte	0x296
 2488 05ea F0050000 		.4byte	0x5f0
 2489 05ee 00       		.byte	0
 2490 05ef 00       		.byte	0
 2491 05f0 11       		.uleb128 0x11
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 86


 2492 05f1 CD050000 		.4byte	0x5cd
 2493 05f5 00060000 		.4byte	0x600
 2494 05f9 12       		.uleb128 0x12
 2495 05fa CD000000 		.4byte	0xcd
 2496 05fe 05       		.byte	0x5
 2497 05ff 00       		.byte	0
 2498 0600 04       		.uleb128 0x4
 2499 0601 55070000 		.4byte	.LASF90
 2500 0605 04       		.byte	0x4
 2501 0606 9702     		.2byte	0x297
 2502 0608 D9050000 		.4byte	0x5d9
 2503 060c 16       		.uleb128 0x16
 2504 060d A9090000 		.4byte	.LASF163
 2505 0611 01       		.byte	0x1
 2506 0612 3707     		.2byte	0x737
 2507 0614 77000000 		.4byte	0x77
 2508 0618 00000000 		.4byte	.LFB16
 2509 061c 0C000000 		.4byte	.LFE16-.LFB16
 2510 0620 01       		.uleb128 0x1
 2511 0621 9C       		.byte	0x9c
 2512 0622 47060000 		.4byte	0x647
 2513 0626 17       		.uleb128 0x17
 2514 0627 54090000 		.4byte	.LASF103
 2515 062b 01       		.byte	0x1
 2516 062c 3707     		.2byte	0x737
 2517 062e 47060000 		.4byte	0x647
 2518 0632 00000000 		.4byte	.LLST0
 2519 0636 18       		.uleb128 0x18
 2520 0637 18080000 		.4byte	.LASF94
 2521 063b 01       		.byte	0x1
 2522 063c 3907     		.2byte	0x739
 2523 063e 83000000 		.4byte	0x83
 2524 0642 21000000 		.4byte	.LLST1
 2525 0646 00       		.byte	0
 2526 0647 06       		.uleb128 0x6
 2527 0648 04       		.byte	0x4
 2528 0649 4D060000 		.4byte	0x64d
 2529 064d 19       		.uleb128 0x19
 2530 064e 8E010000 		.4byte	0x18e
 2531 0652 1A       		.uleb128 0x1a
 2532 0653 1D010000 		.4byte	.LASF164
 2533 0657 01       		.byte	0x1
 2534 0658 DF07     		.2byte	0x7df
 2535 065a 03       		.byte	0x3
 2536 065b 84060000 		.4byte	0x684
 2537 065f 1B       		.uleb128 0x1b
 2538 0660 55050000 		.4byte	.LASF91
 2539 0664 01       		.byte	0x1
 2540 0665 E107     		.2byte	0x7e1
 2541 0667 83000000 		.4byte	0x83
 2542 066b 1B       		.uleb128 0x1b
 2543 066c 11030000 		.4byte	.LASF92
 2544 0670 01       		.byte	0x1
 2545 0671 E207     		.2byte	0x7e2
 2546 0673 83000000 		.4byte	0x83
 2547 0677 1B       		.uleb128 0x1b
 2548 0678 CC060000 		.4byte	.LASF93
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 87


 2549 067c 01       		.byte	0x1
 2550 067d E407     		.2byte	0x7e4
 2551 067f 83000000 		.4byte	0x83
 2552 0683 00       		.byte	0
 2553 0684 1C       		.uleb128 0x1c
 2554 0685 EE070000 		.4byte	.LASF96
 2555 0689 01       		.byte	0x1
 2556 068a 2706     		.2byte	0x627
 2557 068c 00000000 		.4byte	.LFB10
 2558 0690 3C010000 		.4byte	.LFE10-.LFB10
 2559 0694 01       		.uleb128 0x1
 2560 0695 9C       		.byte	0x9c
 2561 0696 E1060000 		.4byte	0x6e1
 2562 069a 18       		.uleb128 0x18
 2563 069b F9090000 		.4byte	.LASF95
 2564 069f 01       		.byte	0x1
 2565 06a0 2906     		.2byte	0x629
 2566 06a2 83000000 		.4byte	0x83
 2567 06a6 45000000 		.4byte	.LLST2
 2568 06aa 1D       		.uleb128 0x1d
 2569 06ab 52060000 		.4byte	0x652
 2570 06af 1C000000 		.4byte	.LBB4
 2571 06b3 B6000000 		.4byte	.LBE4-.LBB4
 2572 06b7 01       		.byte	0x1
 2573 06b8 3C06     		.2byte	0x63c
 2574 06ba 1E       		.uleb128 0x1e
 2575 06bb 1C000000 		.4byte	.LBB5
 2576 06bf B6000000 		.4byte	.LBE5-.LBB5
 2577 06c3 1F       		.uleb128 0x1f
 2578 06c4 5F060000 		.4byte	0x65f
 2579 06c8 77000000 		.4byte	.LLST3
 2580 06cc 1F       		.uleb128 0x1f
 2581 06cd 6B060000 		.4byte	0x66b
 2582 06d1 8A000000 		.4byte	.LLST4
 2583 06d5 1F       		.uleb128 0x1f
 2584 06d6 77060000 		.4byte	0x677
 2585 06da AB000000 		.4byte	.LLST5
 2586 06de 00       		.byte	0
 2587 06df 00       		.byte	0
 2588 06e0 00       		.byte	0
 2589 06e1 20       		.uleb128 0x20
 2590 06e2 DC060000 		.4byte	.LASF97
 2591 06e6 01       		.byte	0x1
 2592 06e7 5D05     		.2byte	0x55d
 2593 06e9 00000000 		.4byte	.LFB8
 2594 06ed 5C000000 		.4byte	.LFE8-.LFB8
 2595 06f1 01       		.uleb128 0x1
 2596 06f2 9C       		.byte	0x9c
 2597 06f3 19070000 		.4byte	0x719
 2598 06f7 21       		.uleb128 0x21
 2599 06f8 26000000 		.4byte	.LVL16
 2600 06fc 360D0000 		.4byte	0xd36
 2601 0700 21       		.uleb128 0x21
 2602 0701 2A000000 		.4byte	.LVL17
 2603 0705 84060000 		.4byte	0x684
 2604 0709 22       		.uleb128 0x22
 2605 070a 38000000 		.4byte	.LVL18
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 88


 2606 070e 360D0000 		.4byte	0xd36
 2607 0712 23       		.uleb128 0x23
 2608 0713 01       		.uleb128 0x1
 2609 0714 50       		.byte	0x50
 2610 0715 01       		.uleb128 0x1
 2611 0716 30       		.byte	0x30
 2612 0717 00       		.byte	0
 2613 0718 00       		.byte	0
 2614 0719 24       		.uleb128 0x24
 2615 071a 160B0000 		.4byte	.LASF98
 2616 071e 01       		.byte	0x1
 2617 071f 9807     		.2byte	0x798
 2618 0721 00000000 		.4byte	.LFB17
 2619 0725 90000000 		.4byte	.LFE17-.LFB17
 2620 0729 01       		.uleb128 0x1
 2621 072a 9C       		.byte	0x9c
 2622 072b 52070000 		.4byte	0x752
 2623 072f 25       		.uleb128 0x25
 2624 0730 08000000 		.4byte	.LVL19
 2625 0734 410D0000 		.4byte	0xd41
 2626 0738 42070000 		.4byte	0x742
 2627 073c 23       		.uleb128 0x23
 2628 073d 01       		.uleb128 0x1
 2629 073e 50       		.byte	0x50
 2630 073f 01       		.uleb128 0x1
 2631 0740 3A       		.byte	0x3a
 2632 0741 00       		.byte	0
 2633 0742 22       		.uleb128 0x22
 2634 0743 62000000 		.4byte	.LVL21
 2635 0747 4C0D0000 		.4byte	0xd4c
 2636 074b 23       		.uleb128 0x23
 2637 074c 01       		.uleb128 0x1
 2638 074d 50       		.byte	0x50
 2639 074e 01       		.uleb128 0x1
 2640 074f 3A       		.byte	0x3a
 2641 0750 00       		.byte	0
 2642 0751 00       		.byte	0
 2643 0752 26       		.uleb128 0x26
 2644 0753 9A030000 		.4byte	.LASF99
 2645 0757 01       		.byte	0x1
 2646 0758 94       		.byte	0x94
 2647 0759 00000000 		.4byte	.LFB1
 2648 075d D4010000 		.4byte	.LFE1-.LFB1
 2649 0761 01       		.uleb128 0x1
 2650 0762 9C       		.byte	0x9c
 2651 0763 20080000 		.4byte	0x820
 2652 0767 27       		.uleb128 0x27
 2653 0768 3C010000 		.4byte	.LASF100
 2654 076c 01       		.byte	0x1
 2655 076d 97       		.byte	0x97
 2656 076e 6B000000 		.4byte	0x6b
 2657 0772 BE000000 		.4byte	.LLST6
 2658 0776 27       		.uleb128 0x27
 2659 0777 F9090000 		.4byte	.LASF95
 2660 077b 01       		.byte	0x1
 2661 077c 98       		.byte	0x98
 2662 077d 83000000 		.4byte	0x83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 89


 2663 0781 08010000 		.4byte	.LLST7
 2664 0785 21       		.uleb128 0x21
 2665 0786 58000000 		.4byte	.LVL22
 2666 078a 570D0000 		.4byte	0xd57
 2667 078e 21       		.uleb128 0x21
 2668 078f 6C000000 		.4byte	.LVL26
 2669 0793 620D0000 		.4byte	0xd62
 2670 0797 21       		.uleb128 0x21
 2671 0798 7E000000 		.4byte	.LVL27
 2672 079c 570D0000 		.4byte	0xd57
 2673 07a0 21       		.uleb128 0x21
 2674 07a1 92000000 		.4byte	.LVL31
 2675 07a5 620D0000 		.4byte	0xd62
 2676 07a9 21       		.uleb128 0x21
 2677 07aa C6000000 		.4byte	.LVL32
 2678 07ae 6D0D0000 		.4byte	0xd6d
 2679 07b2 21       		.uleb128 0x21
 2680 07b3 CA000000 		.4byte	.LVL33
 2681 07b7 570D0000 		.4byte	0xd57
 2682 07bb 21       		.uleb128 0x21
 2683 07bc D8000000 		.4byte	.LVL36
 2684 07c0 620D0000 		.4byte	0xd62
 2685 07c4 21       		.uleb128 0x21
 2686 07c5 DC000000 		.4byte	.LVL37
 2687 07c9 570D0000 		.4byte	0xd57
 2688 07cd 21       		.uleb128 0x21
 2689 07ce E8000000 		.4byte	.LVL40
 2690 07d2 620D0000 		.4byte	0xd62
 2691 07d6 21       		.uleb128 0x21
 2692 07d7 EC000000 		.4byte	.LVL41
 2693 07db 570D0000 		.4byte	0xd57
 2694 07df 21       		.uleb128 0x21
 2695 07e0 00010000 		.4byte	.LVL45
 2696 07e4 620D0000 		.4byte	0xd62
 2697 07e8 21       		.uleb128 0x21
 2698 07e9 04010000 		.4byte	.LVL46
 2699 07ed 570D0000 		.4byte	0xd57
 2700 07f1 21       		.uleb128 0x21
 2701 07f2 16010000 		.4byte	.LVL50
 2702 07f6 620D0000 		.4byte	0xd62
 2703 07fa 21       		.uleb128 0x21
 2704 07fb 20010000 		.4byte	.LVL51
 2705 07ff 780D0000 		.4byte	0xd78
 2706 0803 21       		.uleb128 0x21
 2707 0804 24010000 		.4byte	.LVL52
 2708 0808 830D0000 		.4byte	0xd83
 2709 080c 22       		.uleb128 0x22
 2710 080d 2A010000 		.4byte	.LVL53
 2711 0811 8E0D0000 		.4byte	0xd8e
 2712 0815 23       		.uleb128 0x23
 2713 0816 01       		.uleb128 0x1
 2714 0817 50       		.byte	0x50
 2715 0818 05       		.uleb128 0x5
 2716 0819 03       		.byte	0x3
 2717 081a 00000000 		.4byte	CapSense_1_CSXScanISR
 2718 081e 00       		.byte	0
 2719 081f 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 90


 2720 0820 28       		.uleb128 0x28
 2721 0821 30090000 		.4byte	.LASF101
 2722 0825 01       		.byte	0x1
 2723 0826 6603     		.2byte	0x366
 2724 0828 00000000 		.4byte	.LFB6
 2725 082c 28000000 		.4byte	.LFE6-.LFB6
 2726 0830 01       		.uleb128 0x1
 2727 0831 9C       		.byte	0x9c
 2728 0832 53080000 		.4byte	0x853
 2729 0836 25       		.uleb128 0x25
 2730 0837 18000000 		.4byte	.LVL54
 2731 083b 990D0000 		.4byte	0xd99
 2732 083f 49080000 		.4byte	0x849
 2733 0843 23       		.uleb128 0x23
 2734 0844 01       		.uleb128 0x1
 2735 0845 50       		.byte	0x50
 2736 0846 01       		.uleb128 0x1
 2737 0847 3A       		.byte	0x3a
 2738 0848 00       		.byte	0
 2739 0849 21       		.uleb128 0x21
 2740 084a 1C000000 		.4byte	.LVL55
 2741 084e 84060000 		.4byte	0x684
 2742 0852 00       		.byte	0
 2743 0853 24       		.uleb128 0x24
 2744 0854 AE060000 		.4byte	.LASF102
 2745 0858 01       		.byte	0x1
 2746 0859 B205     		.2byte	0x5b2
 2747 085b 00000000 		.4byte	.LFB9
 2748 085f EC000000 		.4byte	.LFE9-.LFB9
 2749 0863 01       		.uleb128 0x1
 2750 0864 9C       		.byte	0x9c
 2751 0865 0D090000 		.4byte	0x90d
 2752 0869 17       		.uleb128 0x17
 2753 086a 550B0000 		.4byte	.LASF104
 2754 086e 01       		.byte	0x1
 2755 086f B205     		.2byte	0x5b2
 2756 0871 83000000 		.4byte	0x83
 2757 0875 94010000 		.4byte	.LLST8
 2758 0879 17       		.uleb128 0x17
 2759 087a DA030000 		.4byte	.LASF105
 2760 087e 01       		.byte	0x1
 2761 087f B205     		.2byte	0x5b2
 2762 0881 77000000 		.4byte	0x77
 2763 0885 B3010000 		.4byte	.LLST9
 2764 0889 18       		.uleb128 0x18
 2765 088a 61080000 		.4byte	.LASF106
 2766 088e 01       		.byte	0x1
 2767 088f B505     		.2byte	0x5b5
 2768 0891 83000000 		.4byte	0x83
 2769 0895 D4010000 		.4byte	.LLST10
 2770 0899 18       		.uleb128 0x18
 2771 089a D9040000 		.4byte	.LASF107
 2772 089e 01       		.byte	0x1
 2773 089f B705     		.2byte	0x5b7
 2774 08a1 83000000 		.4byte	0x83
 2775 08a5 03020000 		.4byte	.LLST11
 2776 08a9 18       		.uleb128 0x18
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 91


 2777 08aa 75090000 		.4byte	.LASF108
 2778 08ae 01       		.byte	0x1
 2779 08af B905     		.2byte	0x5b9
 2780 08b1 83000000 		.4byte	0x83
 2781 08b5 21020000 		.4byte	.LLST12
 2782 08b9 18       		.uleb128 0x18
 2783 08ba 04020000 		.4byte	.LASF109
 2784 08be 01       		.byte	0x1
 2785 08bf BC05     		.2byte	0x5bc
 2786 08c1 6B000000 		.4byte	0x6b
 2787 08c5 62020000 		.4byte	.LLST13
 2788 08c9 18       		.uleb128 0x18
 2789 08ca F3000000 		.4byte	.LASF110
 2790 08ce 01       		.byte	0x1
 2791 08cf BE05     		.2byte	0x5be
 2792 08d1 6B000000 		.4byte	0x6b
 2793 08d5 98020000 		.4byte	.LLST14
 2794 08d9 25       		.uleb128 0x25
 2795 08da 22000000 		.4byte	.LVL59
 2796 08de 0C060000 		.4byte	0x60c
 2797 08e2 EE080000 		.4byte	0x8ee
 2798 08e6 23       		.uleb128 0x23
 2799 08e7 01       		.uleb128 0x1
 2800 08e8 50       		.byte	0x50
 2801 08e9 03       		.uleb128 0x3
 2802 08ea 74       		.byte	0x74
 2803 08eb 04       		.sleb128 4
 2804 08ec 06       		.byte	0x6
 2805 08ed 00       		.byte	0
 2806 08ee 25       		.uleb128 0x25
 2807 08ef 6E000000 		.4byte	.LVL70
 2808 08f3 A40D0000 		.4byte	0xda4
 2809 08f7 03090000 		.4byte	0x903
 2810 08fb 23       		.uleb128 0x23
 2811 08fc 01       		.uleb128 0x1
 2812 08fd 50       		.byte	0x50
 2813 08fe 03       		.uleb128 0x3
 2814 08ff 91       		.byte	0x91
 2815 0900 64       		.sleb128 -28
 2816 0901 06       		.byte	0x6
 2817 0902 00       		.byte	0
 2818 0903 21       		.uleb128 0x21
 2819 0904 72000000 		.4byte	.LVL71
 2820 0908 AF0D0000 		.4byte	0xdaf
 2821 090c 00       		.byte	0
 2822 090d 28       		.uleb128 0x28
 2823 090e AB040000 		.4byte	.LASF111
 2824 0912 01       		.byte	0x1
 2825 0913 8106     		.2byte	0x681
 2826 0915 00000000 		.4byte	.LFB11
 2827 0919 20000000 		.4byte	.LFE11-.LFB11
 2828 091d 01       		.uleb128 0x1
 2829 091e 9C       		.byte	0x9c
 2830 091f 44090000 		.4byte	0x944
 2831 0923 17       		.uleb128 0x17
 2832 0924 ED010000 		.4byte	.LASF112
 2833 0928 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 92


 2834 0929 8106     		.2byte	0x681
 2835 092b 44090000 		.4byte	0x944
 2836 092f CE020000 		.4byte	.LLST15
 2837 0933 18       		.uleb128 0x18
 2838 0934 14010000 		.4byte	.LASF113
 2839 0938 01       		.byte	0x1
 2840 0939 8306     		.2byte	0x683
 2841 093b 83000000 		.4byte	0x83
 2842 093f EF020000 		.4byte	.LLST16
 2843 0943 00       		.byte	0
 2844 0944 06       		.uleb128 0x6
 2845 0945 04       		.byte	0x4
 2846 0946 4A090000 		.4byte	0x94a
 2847 094a 19       		.uleb128 0x19
 2848 094b 22050000 		.4byte	0x522
 2849 094f 28       		.uleb128 0x28
 2850 0950 69030000 		.4byte	.LASF114
 2851 0954 01       		.byte	0x1
 2852 0955 A306     		.2byte	0x6a3
 2853 0957 00000000 		.4byte	.LFB12
 2854 095b 20000000 		.4byte	.LFE12-.LFB12
 2855 095f 01       		.uleb128 0x1
 2856 0960 9C       		.byte	0x9c
 2857 0961 86090000 		.4byte	0x986
 2858 0965 17       		.uleb128 0x17
 2859 0966 09090000 		.4byte	.LASF115
 2860 096a 01       		.byte	0x1
 2861 096b A306     		.2byte	0x6a3
 2862 096d 44090000 		.4byte	0x944
 2863 0971 23030000 		.4byte	.LLST17
 2864 0975 18       		.uleb128 0x18
 2865 0976 14010000 		.4byte	.LASF113
 2866 097a 01       		.byte	0x1
 2867 097b A506     		.2byte	0x6a5
 2868 097d 83000000 		.4byte	0x83
 2869 0981 44030000 		.4byte	.LLST18
 2870 0985 00       		.byte	0
 2871 0986 28       		.uleb128 0x28
 2872 0987 D0090000 		.4byte	.LASF116
 2873 098b 01       		.byte	0x1
 2874 098c 8502     		.2byte	0x285
 2875 098e 00000000 		.4byte	.LFB5
 2876 0992 74000000 		.4byte	.LFE5-.LFB5
 2877 0996 01       		.uleb128 0x1
 2878 0997 9C       		.byte	0x9c
 2879 0998 CB090000 		.4byte	0x9cb
 2880 099c 21       		.uleb128 0x21
 2881 099d 2E000000 		.4byte	.LVL92
 2882 09a1 0D090000 		.4byte	0x90d
 2883 09a5 21       		.uleb128 0x21
 2884 09a6 34000000 		.4byte	.LVL93
 2885 09aa 4F090000 		.4byte	0x94f
 2886 09ae 25       		.uleb128 0x25
 2887 09af 4E000000 		.4byte	.LVL94
 2888 09b3 990D0000 		.4byte	0xd99
 2889 09b7 C1090000 		.4byte	0x9c1
 2890 09bb 23       		.uleb128 0x23
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 93


 2891 09bc 01       		.uleb128 0x1
 2892 09bd 50       		.byte	0x50
 2893 09be 01       		.uleb128 0x1
 2894 09bf 3A       		.byte	0x3a
 2895 09c0 00       		.byte	0
 2896 09c1 21       		.uleb128 0x21
 2897 09c2 52000000 		.4byte	.LVL95
 2898 09c6 84060000 		.4byte	0x684
 2899 09ca 00       		.byte	0
 2900 09cb 28       		.uleb128 0x28
 2901 09cc B4010000 		.4byte	.LASF117
 2902 09d0 01       		.byte	0x1
 2903 09d1 C606     		.2byte	0x6c6
 2904 09d3 00000000 		.4byte	.LFB13
 2905 09d7 0C000000 		.4byte	.LFE13-.LFB13
 2906 09db 01       		.uleb128 0x1
 2907 09dc 9C       		.byte	0x9c
 2908 09dd FE090000 		.4byte	0x9fe
 2909 09e1 29       		.uleb128 0x29
 2910 09e2 ED010000 		.4byte	.LASF112
 2911 09e6 01       		.byte	0x1
 2912 09e7 C606     		.2byte	0x6c6
 2913 09e9 44090000 		.4byte	0x944
 2914 09ed 01       		.uleb128 0x1
 2915 09ee 50       		.byte	0x50
 2916 09ef 2A       		.uleb128 0x2a
 2917 09f0 14010000 		.4byte	.LASF113
 2918 09f4 01       		.byte	0x1
 2919 09f5 C806     		.2byte	0x6c8
 2920 09f7 83000000 		.4byte	0x83
 2921 09fb 01       		.uleb128 0x1
 2922 09fc 53       		.byte	0x53
 2923 09fd 00       		.byte	0
 2924 09fe 28       		.uleb128 0x28
 2925 09ff 61000000 		.4byte	.LASF118
 2926 0a03 01       		.byte	0x1
 2927 0a04 E506     		.2byte	0x6e5
 2928 0a06 00000000 		.4byte	.LFB14
 2929 0a0a 2E000000 		.4byte	.LFE14-.LFB14
 2930 0a0e 01       		.uleb128 0x1
 2931 0a0f 9C       		.byte	0x9c
 2932 0a10 330A0000 		.4byte	0xa33
 2933 0a14 29       		.uleb128 0x29
 2934 0a15 09090000 		.4byte	.LASF115
 2935 0a19 01       		.byte	0x1
 2936 0a1a E506     		.2byte	0x6e5
 2937 0a1c 44090000 		.4byte	0x944
 2938 0a20 01       		.uleb128 0x1
 2939 0a21 50       		.byte	0x50
 2940 0a22 18       		.uleb128 0x18
 2941 0a23 14010000 		.4byte	.LASF113
 2942 0a27 01       		.byte	0x1
 2943 0a28 E706     		.2byte	0x6e7
 2944 0a2a 83000000 		.4byte	0x83
 2945 0a2e 6D030000 		.4byte	.LLST19
 2946 0a32 00       		.byte	0
 2947 0a33 20       		.uleb128 0x20
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 94


 2948 0a34 53010000 		.4byte	.LASF119
 2949 0a38 01       		.byte	0x1
 2950 0a39 9303     		.2byte	0x393
 2951 0a3b 00000000 		.4byte	.LFB7
 2952 0a3f 00010000 		.4byte	.LFE7-.LFB7
 2953 0a43 01       		.uleb128 0x1
 2954 0a44 9C       		.byte	0x9c
 2955 0a45 C00A0000 		.4byte	0xac0
 2956 0a49 21       		.uleb128 0x21
 2957 0a4a 26000000 		.4byte	.LVL108
 2958 0a4e 360D0000 		.4byte	0xd36
 2959 0a52 21       		.uleb128 0x21
 2960 0a53 2A000000 		.4byte	.LVL109
 2961 0a57 84060000 		.4byte	0x684
 2962 0a5b 25       		.uleb128 0x25
 2963 0a5c 38000000 		.4byte	.LVL110
 2964 0a60 360D0000 		.4byte	0xd36
 2965 0a64 6E0A0000 		.4byte	0xa6e
 2966 0a68 23       		.uleb128 0x23
 2967 0a69 01       		.uleb128 0x1
 2968 0a6a 50       		.byte	0x50
 2969 0a6b 01       		.uleb128 0x1
 2970 0a6c 30       		.byte	0x30
 2971 0a6d 00       		.byte	0
 2972 0a6e 21       		.uleb128 0x21
 2973 0a6f 40000000 		.4byte	.LVL111
 2974 0a73 CB090000 		.4byte	0x9cb
 2975 0a77 21       		.uleb128 0x21
 2976 0a78 62000000 		.4byte	.LVL112
 2977 0a7c 0D090000 		.4byte	0x90d
 2978 0a80 21       		.uleb128 0x21
 2979 0a81 6E000000 		.4byte	.LVL113
 2980 0a85 84060000 		.4byte	0x684
 2981 0a89 21       		.uleb128 0x21
 2982 0a8a 86000000 		.4byte	.LVL114
 2983 0a8e FE090000 		.4byte	0x9fe
 2984 0a92 21       		.uleb128 0x21
 2985 0a93 90000000 		.4byte	.LVL115
 2986 0a97 4F090000 		.4byte	0x94f
 2987 0a9b 21       		.uleb128 0x21
 2988 0a9c AC000000 		.4byte	.LVL116
 2989 0aa0 0D090000 		.4byte	0x90d
 2990 0aa4 21       		.uleb128 0x21
 2991 0aa5 B8000000 		.4byte	.LVL117
 2992 0aa9 84060000 		.4byte	0x684
 2993 0aad 21       		.uleb128 0x21
 2994 0aae C2000000 		.4byte	.LVL118
 2995 0ab2 FE090000 		.4byte	0x9fe
 2996 0ab6 21       		.uleb128 0x21
 2997 0ab7 CE000000 		.4byte	.LVL119
 2998 0abb BA0D0000 		.4byte	0xdba
 2999 0abf 00       		.byte	0
 3000 0ac0 28       		.uleb128 0x28
 3001 0ac1 71010000 		.4byte	.LASF120
 3002 0ac5 01       		.byte	0x1
 3003 0ac6 3B01     		.2byte	0x13b
 3004 0ac8 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 95


 3005 0acc 24000000 		.4byte	.LFE2-.LFB2
 3006 0ad0 01       		.uleb128 0x1
 3007 0ad1 9C       		.byte	0x9c
 3008 0ad2 E90A0000 		.4byte	0xae9
 3009 0ad6 21       		.uleb128 0x21
 3010 0ad7 12000000 		.4byte	.LVL120
 3011 0adb CB090000 		.4byte	0x9cb
 3012 0adf 21       		.uleb128 0x21
 3013 0ae0 18000000 		.4byte	.LVL121
 3014 0ae4 FE090000 		.4byte	0x9fe
 3015 0ae8 00       		.byte	0
 3016 0ae9 28       		.uleb128 0x28
 3017 0aea C5080000 		.4byte	.LASF121
 3018 0aee 01       		.byte	0x1
 3019 0aef 9601     		.2byte	0x196
 3020 0af1 00000000 		.4byte	.LFB3
 3021 0af5 6C000000 		.4byte	.LFE3-.LFB3
 3022 0af9 01       		.uleb128 0x1
 3023 0afa 9C       		.byte	0x9c
 3024 0afb 790B0000 		.4byte	0xb79
 3025 0aff 17       		.uleb128 0x17
 3026 0b00 550B0000 		.4byte	.LASF104
 3027 0b04 01       		.byte	0x1
 3028 0b05 9601     		.2byte	0x196
 3029 0b07 83000000 		.4byte	0x83
 3030 0b0b 96030000 		.4byte	.LLST20
 3031 0b0f 18       		.uleb128 0x18
 3032 0b10 7F0A0000 		.4byte	.LASF122
 3033 0b14 01       		.byte	0x1
 3034 0b15 9901     		.2byte	0x199
 3035 0b17 790B0000 		.4byte	0xb79
 3036 0b1b C2030000 		.4byte	.LLST21
 3037 0b1f 18       		.uleb128 0x18
 3038 0b20 F9090000 		.4byte	.LASF95
 3039 0b24 01       		.byte	0x1
 3040 0b25 9C01     		.2byte	0x19c
 3041 0b27 83000000 		.4byte	0x83
 3042 0b2b D5030000 		.4byte	.LLST22
 3043 0b2f 18       		.uleb128 0x18
 3044 0b30 D0030000 		.4byte	.LASF123
 3045 0b34 01       		.byte	0x1
 3046 0b35 9D01     		.2byte	0x19d
 3047 0b37 83000000 		.4byte	0x83
 3048 0b3b 05040000 		.4byte	.LLST23
 3049 0b3f 25       		.uleb128 0x25
 3050 0b40 10000000 		.4byte	.LVL124
 3051 0b44 C50D0000 		.4byte	0xdc5
 3052 0b48 520B0000 		.4byte	0xb52
 3053 0b4c 23       		.uleb128 0x23
 3054 0b4d 01       		.uleb128 0x1
 3055 0b4e 50       		.byte	0x50
 3056 0b4f 01       		.uleb128 0x1
 3057 0b50 32       		.byte	0x32
 3058 0b51 00       		.byte	0
 3059 0b52 21       		.uleb128 0x21
 3060 0b53 14000000 		.4byte	.LVL125
 3061 0b57 C00A0000 		.4byte	0xac0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 96


 3062 0b5b 25       		.uleb128 0x25
 3063 0b5c 2E000000 		.4byte	.LVL128
 3064 0b60 0C060000 		.4byte	0x60c
 3065 0b64 6F0B0000 		.4byte	0xb6f
 3066 0b68 23       		.uleb128 0x23
 3067 0b69 01       		.uleb128 0x1
 3068 0b6a 50       		.byte	0x50
 3069 0b6b 02       		.uleb128 0x2
 3070 0b6c 75       		.byte	0x75
 3071 0b6d 00       		.sleb128 0
 3072 0b6e 00       		.byte	0
 3073 0b6f 21       		.uleb128 0x21
 3074 0b70 4C000000 		.4byte	.LVL135
 3075 0b74 780D0000 		.4byte	0xd78
 3076 0b78 00       		.byte	0
 3077 0b79 06       		.uleb128 0x6
 3078 0b7a 04       		.byte	0x4
 3079 0b7b 8E010000 		.4byte	0x18e
 3080 0b7f 24       		.uleb128 0x24
 3081 0b80 0A0A0000 		.4byte	.LASF124
 3082 0b84 01       		.byte	0x1
 3083 0b85 0402     		.2byte	0x204
 3084 0b87 00000000 		.4byte	.LFB4
 3085 0b8b 84000000 		.4byte	.LFE4-.LFB4
 3086 0b8f 01       		.uleb128 0x1
 3087 0b90 9C       		.byte	0x9c
 3088 0b91 FD0B0000 		.4byte	0xbfd
 3089 0b95 17       		.uleb128 0x17
 3090 0b96 550B0000 		.4byte	.LASF104
 3091 0b9a 01       		.byte	0x1
 3092 0b9b 0402     		.2byte	0x204
 3093 0b9d 83000000 		.4byte	0x83
 3094 0ba1 30040000 		.4byte	.LLST24
 3095 0ba5 17       		.uleb128 0x17
 3096 0ba6 F3010000 		.4byte	.LASF125
 3097 0baa 01       		.byte	0x1
 3098 0bab 0402     		.2byte	0x204
 3099 0bad 83000000 		.4byte	0x83
 3100 0bb1 51040000 		.4byte	.LLST25
 3101 0bb5 18       		.uleb128 0x18
 3102 0bb6 21030000 		.4byte	.LASF126
 3103 0bba 01       		.byte	0x1
 3104 0bbb 0602     		.2byte	0x206
 3105 0bbd 83000000 		.4byte	0x83
 3106 0bc1 7D040000 		.4byte	.LLST26
 3107 0bc5 18       		.uleb128 0x18
 3108 0bc6 4B010000 		.4byte	.LASF127
 3109 0bca 01       		.byte	0x1
 3110 0bcb 0702     		.2byte	0x207
 3111 0bcd 83000000 		.4byte	0x83
 3112 0bd1 90040000 		.4byte	.LLST27
 3113 0bd5 25       		.uleb128 0x25
 3114 0bd6 08000000 		.4byte	.LVL139
 3115 0bda E90A0000 		.4byte	0xae9
 3116 0bde EA0B0000 		.4byte	0xbea
 3117 0be2 23       		.uleb128 0x23
 3118 0be3 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 97


 3119 0be4 50       		.byte	0x50
 3120 0be5 03       		.uleb128 0x3
 3121 0be6 F3       		.byte	0xf3
 3122 0be7 01       		.uleb128 0x1
 3123 0be8 50       		.byte	0x50
 3124 0be9 00       		.byte	0
 3125 0bea 21       		.uleb128 0x21
 3126 0beb 58000000 		.4byte	.LVL146
 3127 0bef 0D090000 		.4byte	0x90d
 3128 0bf3 21       		.uleb128 0x21
 3129 0bf4 5E000000 		.4byte	.LVL147
 3130 0bf8 4F090000 		.4byte	0x94f
 3131 0bfc 00       		.byte	0
 3132 0bfd 2B       		.uleb128 0x2b
 3133 0bfe 1D080000 		.4byte	.LASF165
 3134 0c02 01       		.byte	0x1
 3135 0c03 0C07     		.2byte	0x70c
 3136 0c05 83000000 		.4byte	0x83
 3137 0c09 00000000 		.4byte	.LFB15
 3138 0c0d 10000000 		.4byte	.LFE15-.LFB15
 3139 0c11 01       		.uleb128 0x1
 3140 0c12 9C       		.byte	0x9c
 3141 0c13 440C0000 		.4byte	0xc44
 3142 0c17 17       		.uleb128 0x17
 3143 0c18 550B0000 		.4byte	.LASF104
 3144 0c1c 01       		.byte	0x1
 3145 0c1d 0C07     		.2byte	0x70c
 3146 0c1f 83000000 		.4byte	0x83
 3147 0c23 AE040000 		.4byte	.LLST28
 3148 0c27 2A       		.uleb128 0x2a
 3149 0c28 02090000 		.4byte	.LASF128
 3150 0c2c 01       		.byte	0x1
 3151 0c2d 0E07     		.2byte	0x70e
 3152 0c2f 83000000 		.4byte	0x83
 3153 0c33 01       		.uleb128 0x1
 3154 0c34 50       		.byte	0x50
 3155 0c35 2A       		.uleb128 0x2a
 3156 0c36 FC010000 		.4byte	.LASF129
 3157 0c3a 01       		.byte	0x1
 3158 0c3b 1207     		.2byte	0x712
 3159 0c3d 790B0000 		.4byte	0xb79
 3160 0c41 01       		.uleb128 0x1
 3161 0c42 53       		.byte	0x53
 3162 0c43 00       		.byte	0
 3163 0c44 2C       		.uleb128 0x2c
 3164 0c45 05050000 		.4byte	.LASF130
 3165 0c49 01       		.byte	0x1
 3166 0c4a 49       		.byte	0x49
 3167 0c4b 44090000 		.4byte	0x944
 3168 0c4f 05       		.uleb128 0x5
 3169 0c50 03       		.byte	0x3
 3170 0c51 0C000000 		.4byte	CapSense_1_curTxIOPtr
 3171 0c55 2C       		.uleb128 0x2c
 3172 0c56 C3040000 		.4byte	.LASF131
 3173 0c5a 01       		.byte	0x1
 3174 0c5b 4B       		.byte	0x4b
 3175 0c5c 44090000 		.4byte	0x944
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 98


 3176 0c60 05       		.uleb128 0x5
 3177 0c61 03       		.byte	0x3
 3178 0c62 08000000 		.4byte	CapSense_1_curRxIOPtr
 3179 0c66 2C       		.uleb128 0x2c
 3180 0c67 10020000 		.4byte	.LASF132
 3181 0c6b 01       		.byte	0x1
 3182 0c6c 4D       		.byte	0x4d
 3183 0c6d 77000000 		.4byte	0x77
 3184 0c71 05       		.uleb128 0x5
 3185 0c72 03       		.byte	0x3
 3186 0c73 06000000 		.4byte	CapSense_1_curWdgtTotalRx
 3187 0c77 2C       		.uleb128 0x2c
 3188 0c78 02040000 		.4byte	.LASF133
 3189 0c7c 01       		.byte	0x1
 3190 0c7d 4F       		.byte	0x4f
 3191 0c7e 77000000 		.4byte	0x77
 3192 0c82 05       		.uleb128 0x5
 3193 0c83 03       		.byte	0x3
 3194 0c84 04000000 		.4byte	CapSense_1_curWdgtTotalTx
 3195 0c88 2C       		.uleb128 0x2c
 3196 0c89 A4000000 		.4byte	.LASF134
 3197 0c8d 01       		.byte	0x1
 3198 0c8e 51       		.byte	0x51
 3199 0c8f 77000000 		.4byte	0x77
 3200 0c93 05       		.uleb128 0x5
 3201 0c94 03       		.byte	0x3
 3202 0c95 10000000 		.4byte	CapSense_1_eleCsxDisconnectFlag
 3203 0c99 2D       		.uleb128 0x2d
 3204 0c9a FB060000 		.4byte	.LASF135
 3205 0c9e 04       		.byte	0x4
 3206 0c9f 3904     		.2byte	0x439
 3207 0ca1 91040000 		.4byte	0x491
 3208 0ca5 2D       		.uleb128 0x2d
 3209 0ca6 DB070000 		.4byte	.LASF136
 3210 0caa 04       		.byte	0x4
 3211 0cab 3A04     		.2byte	0x43a
 3212 0cad B10C0000 		.4byte	0xcb1
 3213 0cb1 19       		.uleb128 0x19
 3214 0cb2 00060000 		.4byte	0x600
 3215 0cb6 2E       		.uleb128 0x2e
 3216 0cb7 5C090000 		.4byte	.LASF137
 3217 0cbb 01       		.byte	0x1
 3218 0cbc 40       		.byte	0x40
 3219 0cbd A9000000 		.4byte	0xa9
 3220 0cc1 05       		.uleb128 0x5
 3221 0cc2 03       		.byte	0x3
 3222 0cc3 00000000 		.4byte	CapSense_1_csxScanPeriod
 3223 0cc7 2E       		.uleb128 0x2e
 3224 0cc8 AC0A0000 		.4byte	.LASF138
 3225 0ccc 01       		.byte	0x1
 3226 0ccd 42       		.byte	0x42
 3227 0cce A9000000 		.4byte	0xa9
 3228 0cd2 05       		.uleb128 0x5
 3229 0cd3 03       		.byte	0x3
 3230 0cd4 00000000 		.4byte	CapSense_1_csxRawCount
 3231 0cd8 2E       		.uleb128 0x2e
 3232 0cd9 270A0000 		.4byte	.LASF139
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 99


 3233 0cdd 01       		.byte	0x1
 3234 0cde 73       		.byte	0x73
 3235 0cdf BF000000 		.4byte	0xbf
 3236 0ce3 05       		.uleb128 0x5
 3237 0ce4 03       		.byte	0x3
 3238 0ce5 00000000 		.4byte	CapSense_1_CSXPostScanApiPtr
 3239 0ce9 2F       		.uleb128 0x2f
 3240 0cea 46040000 		.4byte	.LASF140
 3241 0cee 05       		.byte	0x5
 3242 0cef 9D       		.byte	0x9d
 3243 0cf0 A4000000 		.4byte	0xa4
 3244 0cf4 2F       		.uleb128 0x2f
 3245 0cf5 AE080000 		.4byte	.LASF141
 3246 0cf9 05       		.byte	0x5
 3247 0cfa 9E       		.byte	0x9e
 3248 0cfb A4000000 		.4byte	0xa4
 3249 0cff 2F       		.uleb128 0x2f
 3250 0d00 41000000 		.4byte	.LASF142
 3251 0d04 05       		.byte	0x5
 3252 0d05 9F       		.byte	0x9f
 3253 0d06 6B000000 		.4byte	0x6b
 3254 0d0a 2F       		.uleb128 0x2f
 3255 0d0b 7C000000 		.4byte	.LASF143
 3256 0d0f 05       		.byte	0x5
 3257 0d10 A1       		.byte	0xa1
 3258 0d11 C1050000 		.4byte	0x5c1
 3259 0d15 2F       		.uleb128 0x2f
 3260 0d16 9B010000 		.4byte	.LASF144
 3261 0d1a 05       		.byte	0x5
 3262 0d1b A5       		.byte	0xa5
 3263 0d1c 6B000000 		.4byte	0x6b
 3264 0d20 2F       		.uleb128 0x2f
 3265 0d21 AC070000 		.4byte	.LASF145
 3266 0d25 05       		.byte	0x5
 3267 0d26 AE       		.byte	0xae
 3268 0d27 2B0D0000 		.4byte	0xd2b
 3269 0d2b 06       		.uleb128 0x6
 3270 0d2c 04       		.byte	0x4
 3271 0d2d 310D0000 		.4byte	0xd31
 3272 0d31 19       		.uleb128 0x19
 3273 0d32 CD050000 		.4byte	0x5cd
 3274 0d36 30       		.uleb128 0x30
 3275 0d37 93060000 		.4byte	.LASF146
 3276 0d3b 93060000 		.4byte	.LASF146
 3277 0d3f 05       		.byte	0x5
 3278 0d40 75       		.byte	0x75
 3279 0d41 30       		.uleb128 0x30
 3280 0d42 8E010000 		.4byte	.LASF147
 3281 0d46 8E010000 		.4byte	.LASF147
 3282 0d4a 06       		.byte	0x6
 3283 0d4b C5       		.byte	0xc5
 3284 0d4c 30       		.uleb128 0x30
 3285 0d4d ED090000 		.4byte	.LASF148
 3286 0d51 ED090000 		.4byte	.LASF148
 3287 0d55 06       		.byte	0x6
 3288 0d56 C3       		.byte	0xc3
 3289 0d57 30       		.uleb128 0x30
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 100


 3290 0d58 440A0000 		.4byte	.LASF149
 3291 0d5c 440A0000 		.4byte	.LASF149
 3292 0d60 06       		.byte	0x6
 3293 0d61 E5       		.byte	0xe5
 3294 0d62 30       		.uleb128 0x30
 3295 0d63 EF040000 		.4byte	.LASF150
 3296 0d67 EF040000 		.4byte	.LASF150
 3297 0d6b 06       		.byte	0x6
 3298 0d6c E6       		.byte	0xe6
 3299 0d6d 30       		.uleb128 0x30
 3300 0d6e 00000000 		.4byte	.LASF151
 3301 0d72 00000000 		.4byte	.LASF151
 3302 0d76 05       		.byte	0x5
 3303 0d77 93       		.byte	0x93
 3304 0d78 30       		.uleb128 0x30
 3305 0d79 7C040000 		.4byte	.LASF152
 3306 0d7d 7C040000 		.4byte	.LASF152
 3307 0d81 05       		.byte	0x5
 3308 0d82 68       		.byte	0x68
 3309 0d83 30       		.uleb128 0x30
 3310 0d84 D1000000 		.4byte	.LASF153
 3311 0d88 D1000000 		.4byte	.LASF153
 3312 0d8c 05       		.byte	0x5
 3313 0d8d 6D       		.byte	0x6d
 3314 0d8e 30       		.uleb128 0x30
 3315 0d8f E7030000 		.4byte	.LASF154
 3316 0d93 E7030000 		.4byte	.LASF154
 3317 0d97 05       		.byte	0x5
 3318 0d98 6B       		.byte	0x6b
 3319 0d99 30       		.uleb128 0x30
 3320 0d9a 40030000 		.4byte	.LASF155
 3321 0d9e 40030000 		.4byte	.LASF155
 3322 0da2 06       		.byte	0x6
 3323 0da3 DA       		.byte	0xda
 3324 0da4 30       		.uleb128 0x30
 3325 0da5 29030000 		.4byte	.LASF156
 3326 0da9 29030000 		.4byte	.LASF156
 3327 0dad 05       		.byte	0x5
 3328 0dae 49       		.byte	0x49
 3329 0daf 30       		.uleb128 0x30
 3330 0db0 0C070000 		.4byte	.LASF157
 3331 0db4 0C070000 		.4byte	.LASF157
 3332 0db8 05       		.byte	0x5
 3333 0db9 4A       		.byte	0x4a
 3334 0dba 30       		.uleb128 0x30
 3335 0dbb 5E0B0000 		.4byte	.LASF158
 3336 0dbf 5E0B0000 		.4byte	.LASF158
 3337 0dc3 05       		.byte	0x5
 3338 0dc4 6C       		.byte	0x6c
 3339 0dc5 30       		.uleb128 0x30
 3340 0dc6 5D040000 		.4byte	.LASF159
 3341 0dca 5D040000 		.4byte	.LASF159
 3342 0dce 05       		.byte	0x5
 3343 0dcf 6E       		.byte	0x6e
 3344 0dd0 00       		.byte	0
 3345              		.section	.debug_abbrev,"",%progbits
 3346              	.Ldebug_abbrev0:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 101


 3347 0000 01       		.uleb128 0x1
 3348 0001 11       		.uleb128 0x11
 3349 0002 01       		.byte	0x1
 3350 0003 25       		.uleb128 0x25
 3351 0004 0E       		.uleb128 0xe
 3352 0005 13       		.uleb128 0x13
 3353 0006 0B       		.uleb128 0xb
 3354 0007 03       		.uleb128 0x3
 3355 0008 0E       		.uleb128 0xe
 3356 0009 1B       		.uleb128 0x1b
 3357 000a 0E       		.uleb128 0xe
 3358 000b 55       		.uleb128 0x55
 3359 000c 17       		.uleb128 0x17
 3360 000d 11       		.uleb128 0x11
 3361 000e 01       		.uleb128 0x1
 3362 000f 10       		.uleb128 0x10
 3363 0010 17       		.uleb128 0x17
 3364 0011 00       		.byte	0
 3365 0012 00       		.byte	0
 3366 0013 02       		.uleb128 0x2
 3367 0014 24       		.uleb128 0x24
 3368 0015 00       		.byte	0
 3369 0016 0B       		.uleb128 0xb
 3370 0017 0B       		.uleb128 0xb
 3371 0018 3E       		.uleb128 0x3e
 3372 0019 0B       		.uleb128 0xb
 3373 001a 03       		.uleb128 0x3
 3374 001b 0E       		.uleb128 0xe
 3375 001c 00       		.byte	0
 3376 001d 00       		.byte	0
 3377 001e 03       		.uleb128 0x3
 3378 001f 24       		.uleb128 0x24
 3379 0020 00       		.byte	0
 3380 0021 0B       		.uleb128 0xb
 3381 0022 0B       		.uleb128 0xb
 3382 0023 3E       		.uleb128 0x3e
 3383 0024 0B       		.uleb128 0xb
 3384 0025 03       		.uleb128 0x3
 3385 0026 08       		.uleb128 0x8
 3386 0027 00       		.byte	0
 3387 0028 00       		.byte	0
 3388 0029 04       		.uleb128 0x4
 3389 002a 16       		.uleb128 0x16
 3390 002b 00       		.byte	0
 3391 002c 03       		.uleb128 0x3
 3392 002d 0E       		.uleb128 0xe
 3393 002e 3A       		.uleb128 0x3a
 3394 002f 0B       		.uleb128 0xb
 3395 0030 3B       		.uleb128 0x3b
 3396 0031 05       		.uleb128 0x5
 3397 0032 49       		.uleb128 0x49
 3398 0033 13       		.uleb128 0x13
 3399 0034 00       		.byte	0
 3400 0035 00       		.byte	0
 3401 0036 05       		.uleb128 0x5
 3402 0037 35       		.uleb128 0x35
 3403 0038 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 102


 3404 0039 49       		.uleb128 0x49
 3405 003a 13       		.uleb128 0x13
 3406 003b 00       		.byte	0
 3407 003c 00       		.byte	0
 3408 003d 06       		.uleb128 0x6
 3409 003e 0F       		.uleb128 0xf
 3410 003f 00       		.byte	0
 3411 0040 0B       		.uleb128 0xb
 3412 0041 0B       		.uleb128 0xb
 3413 0042 49       		.uleb128 0x49
 3414 0043 13       		.uleb128 0x13
 3415 0044 00       		.byte	0
 3416 0045 00       		.byte	0
 3417 0046 07       		.uleb128 0x7
 3418 0047 15       		.uleb128 0x15
 3419 0048 00       		.byte	0
 3420 0049 27       		.uleb128 0x27
 3421 004a 19       		.uleb128 0x19
 3422 004b 00       		.byte	0
 3423 004c 00       		.byte	0
 3424 004d 08       		.uleb128 0x8
 3425 004e 0F       		.uleb128 0xf
 3426 004f 00       		.byte	0
 3427 0050 0B       		.uleb128 0xb
 3428 0051 0B       		.uleb128 0xb
 3429 0052 00       		.byte	0
 3430 0053 00       		.byte	0
 3431 0054 09       		.uleb128 0x9
 3432 0055 04       		.uleb128 0x4
 3433 0056 01       		.byte	0x1
 3434 0057 0B       		.uleb128 0xb
 3435 0058 0B       		.uleb128 0xb
 3436 0059 49       		.uleb128 0x49
 3437 005a 13       		.uleb128 0x13
 3438 005b 3A       		.uleb128 0x3a
 3439 005c 0B       		.uleb128 0xb
 3440 005d 3B       		.uleb128 0x3b
 3441 005e 0B       		.uleb128 0xb
 3442 005f 01       		.uleb128 0x1
 3443 0060 13       		.uleb128 0x13
 3444 0061 00       		.byte	0
 3445 0062 00       		.byte	0
 3446 0063 0A       		.uleb128 0xa
 3447 0064 28       		.uleb128 0x28
 3448 0065 00       		.byte	0
 3449 0066 03       		.uleb128 0x3
 3450 0067 0E       		.uleb128 0xe
 3451 0068 1C       		.uleb128 0x1c
 3452 0069 0B       		.uleb128 0xb
 3453 006a 00       		.byte	0
 3454 006b 00       		.byte	0
 3455 006c 0B       		.uleb128 0xb
 3456 006d 13       		.uleb128 0x13
 3457 006e 01       		.byte	0x1
 3458 006f 0B       		.uleb128 0xb
 3459 0070 0B       		.uleb128 0xb
 3460 0071 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 103


 3461 0072 0B       		.uleb128 0xb
 3462 0073 3B       		.uleb128 0x3b
 3463 0074 0B       		.uleb128 0xb
 3464 0075 01       		.uleb128 0x1
 3465 0076 13       		.uleb128 0x13
 3466 0077 00       		.byte	0
 3467 0078 00       		.byte	0
 3468 0079 0C       		.uleb128 0xc
 3469 007a 0D       		.uleb128 0xd
 3470 007b 00       		.byte	0
 3471 007c 03       		.uleb128 0x3
 3472 007d 0E       		.uleb128 0xe
 3473 007e 3A       		.uleb128 0x3a
 3474 007f 0B       		.uleb128 0xb
 3475 0080 3B       		.uleb128 0x3b
 3476 0081 0B       		.uleb128 0xb
 3477 0082 49       		.uleb128 0x49
 3478 0083 13       		.uleb128 0x13
 3479 0084 38       		.uleb128 0x38
 3480 0085 0B       		.uleb128 0xb
 3481 0086 00       		.byte	0
 3482 0087 00       		.byte	0
 3483 0088 0D       		.uleb128 0xd
 3484 0089 16       		.uleb128 0x16
 3485 008a 00       		.byte	0
 3486 008b 03       		.uleb128 0x3
 3487 008c 0E       		.uleb128 0xe
 3488 008d 3A       		.uleb128 0x3a
 3489 008e 0B       		.uleb128 0xb
 3490 008f 3B       		.uleb128 0x3b
 3491 0090 0B       		.uleb128 0xb
 3492 0091 49       		.uleb128 0x49
 3493 0092 13       		.uleb128 0x13
 3494 0093 00       		.byte	0
 3495 0094 00       		.byte	0
 3496 0095 0E       		.uleb128 0xe
 3497 0096 13       		.uleb128 0x13
 3498 0097 01       		.byte	0x1
 3499 0098 0B       		.uleb128 0xb
 3500 0099 0B       		.uleb128 0xb
 3501 009a 3A       		.uleb128 0x3a
 3502 009b 0B       		.uleb128 0xb
 3503 009c 3B       		.uleb128 0x3b
 3504 009d 05       		.uleb128 0x5
 3505 009e 01       		.uleb128 0x1
 3506 009f 13       		.uleb128 0x13
 3507 00a0 00       		.byte	0
 3508 00a1 00       		.byte	0
 3509 00a2 0F       		.uleb128 0xf
 3510 00a3 0D       		.uleb128 0xd
 3511 00a4 00       		.byte	0
 3512 00a5 03       		.uleb128 0x3
 3513 00a6 0E       		.uleb128 0xe
 3514 00a7 3A       		.uleb128 0x3a
 3515 00a8 0B       		.uleb128 0xb
 3516 00a9 3B       		.uleb128 0x3b
 3517 00aa 05       		.uleb128 0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 104


 3518 00ab 49       		.uleb128 0x49
 3519 00ac 13       		.uleb128 0x13
 3520 00ad 38       		.uleb128 0x38
 3521 00ae 0B       		.uleb128 0xb
 3522 00af 00       		.byte	0
 3523 00b0 00       		.byte	0
 3524 00b1 10       		.uleb128 0x10
 3525 00b2 0D       		.uleb128 0xd
 3526 00b3 00       		.byte	0
 3527 00b4 03       		.uleb128 0x3
 3528 00b5 08       		.uleb128 0x8
 3529 00b6 3A       		.uleb128 0x3a
 3530 00b7 0B       		.uleb128 0xb
 3531 00b8 3B       		.uleb128 0x3b
 3532 00b9 05       		.uleb128 0x5
 3533 00ba 49       		.uleb128 0x49
 3534 00bb 13       		.uleb128 0x13
 3535 00bc 38       		.uleb128 0x38
 3536 00bd 0B       		.uleb128 0xb
 3537 00be 00       		.byte	0
 3538 00bf 00       		.byte	0
 3539 00c0 11       		.uleb128 0x11
 3540 00c1 01       		.uleb128 0x1
 3541 00c2 01       		.byte	0x1
 3542 00c3 49       		.uleb128 0x49
 3543 00c4 13       		.uleb128 0x13
 3544 00c5 01       		.uleb128 0x1
 3545 00c6 13       		.uleb128 0x13
 3546 00c7 00       		.byte	0
 3547 00c8 00       		.byte	0
 3548 00c9 12       		.uleb128 0x12
 3549 00ca 21       		.uleb128 0x21
 3550 00cb 00       		.byte	0
 3551 00cc 49       		.uleb128 0x49
 3552 00cd 13       		.uleb128 0x13
 3553 00ce 2F       		.uleb128 0x2f
 3554 00cf 0B       		.uleb128 0xb
 3555 00d0 00       		.byte	0
 3556 00d1 00       		.byte	0
 3557 00d2 13       		.uleb128 0x13
 3558 00d3 13       		.uleb128 0x13
 3559 00d4 01       		.byte	0x1
 3560 00d5 0B       		.uleb128 0xb
 3561 00d6 05       		.uleb128 0x5
 3562 00d7 3A       		.uleb128 0x3a
 3563 00d8 0B       		.uleb128 0xb
 3564 00d9 3B       		.uleb128 0x3b
 3565 00da 05       		.uleb128 0x5
 3566 00db 01       		.uleb128 0x1
 3567 00dc 13       		.uleb128 0x13
 3568 00dd 00       		.byte	0
 3569 00de 00       		.byte	0
 3570 00df 14       		.uleb128 0x14
 3571 00e0 0D       		.uleb128 0xd
 3572 00e1 00       		.byte	0
 3573 00e2 03       		.uleb128 0x3
 3574 00e3 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 105


 3575 00e4 3A       		.uleb128 0x3a
 3576 00e5 0B       		.uleb128 0xb
 3577 00e6 3B       		.uleb128 0x3b
 3578 00e7 05       		.uleb128 0x5
 3579 00e8 49       		.uleb128 0x49
 3580 00e9 13       		.uleb128 0x13
 3581 00ea 38       		.uleb128 0x38
 3582 00eb 05       		.uleb128 0x5
 3583 00ec 00       		.byte	0
 3584 00ed 00       		.byte	0
 3585 00ee 15       		.uleb128 0x15
 3586 00ef 26       		.uleb128 0x26
 3587 00f0 00       		.byte	0
 3588 00f1 00       		.byte	0
 3589 00f2 00       		.byte	0
 3590 00f3 16       		.uleb128 0x16
 3591 00f4 2E       		.uleb128 0x2e
 3592 00f5 01       		.byte	0x1
 3593 00f6 03       		.uleb128 0x3
 3594 00f7 0E       		.uleb128 0xe
 3595 00f8 3A       		.uleb128 0x3a
 3596 00f9 0B       		.uleb128 0xb
 3597 00fa 3B       		.uleb128 0x3b
 3598 00fb 05       		.uleb128 0x5
 3599 00fc 27       		.uleb128 0x27
 3600 00fd 19       		.uleb128 0x19
 3601 00fe 49       		.uleb128 0x49
 3602 00ff 13       		.uleb128 0x13
 3603 0100 11       		.uleb128 0x11
 3604 0101 01       		.uleb128 0x1
 3605 0102 12       		.uleb128 0x12
 3606 0103 06       		.uleb128 0x6
 3607 0104 40       		.uleb128 0x40
 3608 0105 18       		.uleb128 0x18
 3609 0106 9742     		.uleb128 0x2117
 3610 0108 19       		.uleb128 0x19
 3611 0109 01       		.uleb128 0x1
 3612 010a 13       		.uleb128 0x13
 3613 010b 00       		.byte	0
 3614 010c 00       		.byte	0
 3615 010d 17       		.uleb128 0x17
 3616 010e 05       		.uleb128 0x5
 3617 010f 00       		.byte	0
 3618 0110 03       		.uleb128 0x3
 3619 0111 0E       		.uleb128 0xe
 3620 0112 3A       		.uleb128 0x3a
 3621 0113 0B       		.uleb128 0xb
 3622 0114 3B       		.uleb128 0x3b
 3623 0115 05       		.uleb128 0x5
 3624 0116 49       		.uleb128 0x49
 3625 0117 13       		.uleb128 0x13
 3626 0118 02       		.uleb128 0x2
 3627 0119 17       		.uleb128 0x17
 3628 011a 00       		.byte	0
 3629 011b 00       		.byte	0
 3630 011c 18       		.uleb128 0x18
 3631 011d 34       		.uleb128 0x34
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 106


 3632 011e 00       		.byte	0
 3633 011f 03       		.uleb128 0x3
 3634 0120 0E       		.uleb128 0xe
 3635 0121 3A       		.uleb128 0x3a
 3636 0122 0B       		.uleb128 0xb
 3637 0123 3B       		.uleb128 0x3b
 3638 0124 05       		.uleb128 0x5
 3639 0125 49       		.uleb128 0x49
 3640 0126 13       		.uleb128 0x13
 3641 0127 02       		.uleb128 0x2
 3642 0128 17       		.uleb128 0x17
 3643 0129 00       		.byte	0
 3644 012a 00       		.byte	0
 3645 012b 19       		.uleb128 0x19
 3646 012c 26       		.uleb128 0x26
 3647 012d 00       		.byte	0
 3648 012e 49       		.uleb128 0x49
 3649 012f 13       		.uleb128 0x13
 3650 0130 00       		.byte	0
 3651 0131 00       		.byte	0
 3652 0132 1A       		.uleb128 0x1a
 3653 0133 2E       		.uleb128 0x2e
 3654 0134 01       		.byte	0x1
 3655 0135 03       		.uleb128 0x3
 3656 0136 0E       		.uleb128 0xe
 3657 0137 3A       		.uleb128 0x3a
 3658 0138 0B       		.uleb128 0xb
 3659 0139 3B       		.uleb128 0x3b
 3660 013a 05       		.uleb128 0x5
 3661 013b 27       		.uleb128 0x27
 3662 013c 19       		.uleb128 0x19
 3663 013d 20       		.uleb128 0x20
 3664 013e 0B       		.uleb128 0xb
 3665 013f 01       		.uleb128 0x1
 3666 0140 13       		.uleb128 0x13
 3667 0141 00       		.byte	0
 3668 0142 00       		.byte	0
 3669 0143 1B       		.uleb128 0x1b
 3670 0144 34       		.uleb128 0x34
 3671 0145 00       		.byte	0
 3672 0146 03       		.uleb128 0x3
 3673 0147 0E       		.uleb128 0xe
 3674 0148 3A       		.uleb128 0x3a
 3675 0149 0B       		.uleb128 0xb
 3676 014a 3B       		.uleb128 0x3b
 3677 014b 05       		.uleb128 0x5
 3678 014c 49       		.uleb128 0x49
 3679 014d 13       		.uleb128 0x13
 3680 014e 00       		.byte	0
 3681 014f 00       		.byte	0
 3682 0150 1C       		.uleb128 0x1c
 3683 0151 2E       		.uleb128 0x2e
 3684 0152 01       		.byte	0x1
 3685 0153 03       		.uleb128 0x3
 3686 0154 0E       		.uleb128 0xe
 3687 0155 3A       		.uleb128 0x3a
 3688 0156 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 107


 3689 0157 3B       		.uleb128 0x3b
 3690 0158 05       		.uleb128 0x5
 3691 0159 27       		.uleb128 0x27
 3692 015a 19       		.uleb128 0x19
 3693 015b 11       		.uleb128 0x11
 3694 015c 01       		.uleb128 0x1
 3695 015d 12       		.uleb128 0x12
 3696 015e 06       		.uleb128 0x6
 3697 015f 40       		.uleb128 0x40
 3698 0160 18       		.uleb128 0x18
 3699 0161 9642     		.uleb128 0x2116
 3700 0163 19       		.uleb128 0x19
 3701 0164 01       		.uleb128 0x1
 3702 0165 13       		.uleb128 0x13
 3703 0166 00       		.byte	0
 3704 0167 00       		.byte	0
 3705 0168 1D       		.uleb128 0x1d
 3706 0169 1D       		.uleb128 0x1d
 3707 016a 01       		.byte	0x1
 3708 016b 31       		.uleb128 0x31
 3709 016c 13       		.uleb128 0x13
 3710 016d 11       		.uleb128 0x11
 3711 016e 01       		.uleb128 0x1
 3712 016f 12       		.uleb128 0x12
 3713 0170 06       		.uleb128 0x6
 3714 0171 58       		.uleb128 0x58
 3715 0172 0B       		.uleb128 0xb
 3716 0173 59       		.uleb128 0x59
 3717 0174 05       		.uleb128 0x5
 3718 0175 00       		.byte	0
 3719 0176 00       		.byte	0
 3720 0177 1E       		.uleb128 0x1e
 3721 0178 0B       		.uleb128 0xb
 3722 0179 01       		.byte	0x1
 3723 017a 11       		.uleb128 0x11
 3724 017b 01       		.uleb128 0x1
 3725 017c 12       		.uleb128 0x12
 3726 017d 06       		.uleb128 0x6
 3727 017e 00       		.byte	0
 3728 017f 00       		.byte	0
 3729 0180 1F       		.uleb128 0x1f
 3730 0181 34       		.uleb128 0x34
 3731 0182 00       		.byte	0
 3732 0183 31       		.uleb128 0x31
 3733 0184 13       		.uleb128 0x13
 3734 0185 02       		.uleb128 0x2
 3735 0186 17       		.uleb128 0x17
 3736 0187 00       		.byte	0
 3737 0188 00       		.byte	0
 3738 0189 20       		.uleb128 0x20
 3739 018a 2E       		.uleb128 0x2e
 3740 018b 01       		.byte	0x1
 3741 018c 03       		.uleb128 0x3
 3742 018d 0E       		.uleb128 0xe
 3743 018e 3A       		.uleb128 0x3a
 3744 018f 0B       		.uleb128 0xb
 3745 0190 3B       		.uleb128 0x3b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 108


 3746 0191 05       		.uleb128 0x5
 3747 0192 27       		.uleb128 0x27
 3748 0193 19       		.uleb128 0x19
 3749 0194 11       		.uleb128 0x11
 3750 0195 01       		.uleb128 0x1
 3751 0196 12       		.uleb128 0x12
 3752 0197 06       		.uleb128 0x6
 3753 0198 40       		.uleb128 0x40
 3754 0199 18       		.uleb128 0x18
 3755 019a 9742     		.uleb128 0x2117
 3756 019c 19       		.uleb128 0x19
 3757 019d 01       		.uleb128 0x1
 3758 019e 13       		.uleb128 0x13
 3759 019f 00       		.byte	0
 3760 01a0 00       		.byte	0
 3761 01a1 21       		.uleb128 0x21
 3762 01a2 898201   		.uleb128 0x4109
 3763 01a5 00       		.byte	0
 3764 01a6 11       		.uleb128 0x11
 3765 01a7 01       		.uleb128 0x1
 3766 01a8 31       		.uleb128 0x31
 3767 01a9 13       		.uleb128 0x13
 3768 01aa 00       		.byte	0
 3769 01ab 00       		.byte	0
 3770 01ac 22       		.uleb128 0x22
 3771 01ad 898201   		.uleb128 0x4109
 3772 01b0 01       		.byte	0x1
 3773 01b1 11       		.uleb128 0x11
 3774 01b2 01       		.uleb128 0x1
 3775 01b3 31       		.uleb128 0x31
 3776 01b4 13       		.uleb128 0x13
 3777 01b5 00       		.byte	0
 3778 01b6 00       		.byte	0
 3779 01b7 23       		.uleb128 0x23
 3780 01b8 8A8201   		.uleb128 0x410a
 3781 01bb 00       		.byte	0
 3782 01bc 02       		.uleb128 0x2
 3783 01bd 18       		.uleb128 0x18
 3784 01be 9142     		.uleb128 0x2111
 3785 01c0 18       		.uleb128 0x18
 3786 01c1 00       		.byte	0
 3787 01c2 00       		.byte	0
 3788 01c3 24       		.uleb128 0x24
 3789 01c4 2E       		.uleb128 0x2e
 3790 01c5 01       		.byte	0x1
 3791 01c6 3F       		.uleb128 0x3f
 3792 01c7 19       		.uleb128 0x19
 3793 01c8 03       		.uleb128 0x3
 3794 01c9 0E       		.uleb128 0xe
 3795 01ca 3A       		.uleb128 0x3a
 3796 01cb 0B       		.uleb128 0xb
 3797 01cc 3B       		.uleb128 0x3b
 3798 01cd 05       		.uleb128 0x5
 3799 01ce 27       		.uleb128 0x27
 3800 01cf 19       		.uleb128 0x19
 3801 01d0 11       		.uleb128 0x11
 3802 01d1 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 109


 3803 01d2 12       		.uleb128 0x12
 3804 01d3 06       		.uleb128 0x6
 3805 01d4 40       		.uleb128 0x40
 3806 01d5 18       		.uleb128 0x18
 3807 01d6 9642     		.uleb128 0x2116
 3808 01d8 19       		.uleb128 0x19
 3809 01d9 01       		.uleb128 0x1
 3810 01da 13       		.uleb128 0x13
 3811 01db 00       		.byte	0
 3812 01dc 00       		.byte	0
 3813 01dd 25       		.uleb128 0x25
 3814 01de 898201   		.uleb128 0x4109
 3815 01e1 01       		.byte	0x1
 3816 01e2 11       		.uleb128 0x11
 3817 01e3 01       		.uleb128 0x1
 3818 01e4 31       		.uleb128 0x31
 3819 01e5 13       		.uleb128 0x13
 3820 01e6 01       		.uleb128 0x1
 3821 01e7 13       		.uleb128 0x13
 3822 01e8 00       		.byte	0
 3823 01e9 00       		.byte	0
 3824 01ea 26       		.uleb128 0x26
 3825 01eb 2E       		.uleb128 0x2e
 3826 01ec 01       		.byte	0x1
 3827 01ed 3F       		.uleb128 0x3f
 3828 01ee 19       		.uleb128 0x19
 3829 01ef 03       		.uleb128 0x3
 3830 01f0 0E       		.uleb128 0xe
 3831 01f1 3A       		.uleb128 0x3a
 3832 01f2 0B       		.uleb128 0xb
 3833 01f3 3B       		.uleb128 0x3b
 3834 01f4 0B       		.uleb128 0xb
 3835 01f5 27       		.uleb128 0x27
 3836 01f6 19       		.uleb128 0x19
 3837 01f7 11       		.uleb128 0x11
 3838 01f8 01       		.uleb128 0x1
 3839 01f9 12       		.uleb128 0x12
 3840 01fa 06       		.uleb128 0x6
 3841 01fb 40       		.uleb128 0x40
 3842 01fc 18       		.uleb128 0x18
 3843 01fd 9742     		.uleb128 0x2117
 3844 01ff 19       		.uleb128 0x19
 3845 0200 01       		.uleb128 0x1
 3846 0201 13       		.uleb128 0x13
 3847 0202 00       		.byte	0
 3848 0203 00       		.byte	0
 3849 0204 27       		.uleb128 0x27
 3850 0205 34       		.uleb128 0x34
 3851 0206 00       		.byte	0
 3852 0207 03       		.uleb128 0x3
 3853 0208 0E       		.uleb128 0xe
 3854 0209 3A       		.uleb128 0x3a
 3855 020a 0B       		.uleb128 0xb
 3856 020b 3B       		.uleb128 0x3b
 3857 020c 0B       		.uleb128 0xb
 3858 020d 49       		.uleb128 0x49
 3859 020e 13       		.uleb128 0x13
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 110


 3860 020f 02       		.uleb128 0x2
 3861 0210 17       		.uleb128 0x17
 3862 0211 00       		.byte	0
 3863 0212 00       		.byte	0
 3864 0213 28       		.uleb128 0x28
 3865 0214 2E       		.uleb128 0x2e
 3866 0215 01       		.byte	0x1
 3867 0216 3F       		.uleb128 0x3f
 3868 0217 19       		.uleb128 0x19
 3869 0218 03       		.uleb128 0x3
 3870 0219 0E       		.uleb128 0xe
 3871 021a 3A       		.uleb128 0x3a
 3872 021b 0B       		.uleb128 0xb
 3873 021c 3B       		.uleb128 0x3b
 3874 021d 05       		.uleb128 0x5
 3875 021e 27       		.uleb128 0x27
 3876 021f 19       		.uleb128 0x19
 3877 0220 11       		.uleb128 0x11
 3878 0221 01       		.uleb128 0x1
 3879 0222 12       		.uleb128 0x12
 3880 0223 06       		.uleb128 0x6
 3881 0224 40       		.uleb128 0x40
 3882 0225 18       		.uleb128 0x18
 3883 0226 9742     		.uleb128 0x2117
 3884 0228 19       		.uleb128 0x19
 3885 0229 01       		.uleb128 0x1
 3886 022a 13       		.uleb128 0x13
 3887 022b 00       		.byte	0
 3888 022c 00       		.byte	0
 3889 022d 29       		.uleb128 0x29
 3890 022e 05       		.uleb128 0x5
 3891 022f 00       		.byte	0
 3892 0230 03       		.uleb128 0x3
 3893 0231 0E       		.uleb128 0xe
 3894 0232 3A       		.uleb128 0x3a
 3895 0233 0B       		.uleb128 0xb
 3896 0234 3B       		.uleb128 0x3b
 3897 0235 05       		.uleb128 0x5
 3898 0236 49       		.uleb128 0x49
 3899 0237 13       		.uleb128 0x13
 3900 0238 02       		.uleb128 0x2
 3901 0239 18       		.uleb128 0x18
 3902 023a 00       		.byte	0
 3903 023b 00       		.byte	0
 3904 023c 2A       		.uleb128 0x2a
 3905 023d 34       		.uleb128 0x34
 3906 023e 00       		.byte	0
 3907 023f 03       		.uleb128 0x3
 3908 0240 0E       		.uleb128 0xe
 3909 0241 3A       		.uleb128 0x3a
 3910 0242 0B       		.uleb128 0xb
 3911 0243 3B       		.uleb128 0x3b
 3912 0244 05       		.uleb128 0x5
 3913 0245 49       		.uleb128 0x49
 3914 0246 13       		.uleb128 0x13
 3915 0247 02       		.uleb128 0x2
 3916 0248 18       		.uleb128 0x18
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 111


 3917 0249 00       		.byte	0
 3918 024a 00       		.byte	0
 3919 024b 2B       		.uleb128 0x2b
 3920 024c 2E       		.uleb128 0x2e
 3921 024d 01       		.byte	0x1
 3922 024e 3F       		.uleb128 0x3f
 3923 024f 19       		.uleb128 0x19
 3924 0250 03       		.uleb128 0x3
 3925 0251 0E       		.uleb128 0xe
 3926 0252 3A       		.uleb128 0x3a
 3927 0253 0B       		.uleb128 0xb
 3928 0254 3B       		.uleb128 0x3b
 3929 0255 05       		.uleb128 0x5
 3930 0256 27       		.uleb128 0x27
 3931 0257 19       		.uleb128 0x19
 3932 0258 49       		.uleb128 0x49
 3933 0259 13       		.uleb128 0x13
 3934 025a 11       		.uleb128 0x11
 3935 025b 01       		.uleb128 0x1
 3936 025c 12       		.uleb128 0x12
 3937 025d 06       		.uleb128 0x6
 3938 025e 40       		.uleb128 0x40
 3939 025f 18       		.uleb128 0x18
 3940 0260 9742     		.uleb128 0x2117
 3941 0262 19       		.uleb128 0x19
 3942 0263 01       		.uleb128 0x1
 3943 0264 13       		.uleb128 0x13
 3944 0265 00       		.byte	0
 3945 0266 00       		.byte	0
 3946 0267 2C       		.uleb128 0x2c
 3947 0268 34       		.uleb128 0x34
 3948 0269 00       		.byte	0
 3949 026a 03       		.uleb128 0x3
 3950 026b 0E       		.uleb128 0xe
 3951 026c 3A       		.uleb128 0x3a
 3952 026d 0B       		.uleb128 0xb
 3953 026e 3B       		.uleb128 0x3b
 3954 026f 0B       		.uleb128 0xb
 3955 0270 49       		.uleb128 0x49
 3956 0271 13       		.uleb128 0x13
 3957 0272 02       		.uleb128 0x2
 3958 0273 18       		.uleb128 0x18
 3959 0274 00       		.byte	0
 3960 0275 00       		.byte	0
 3961 0276 2D       		.uleb128 0x2d
 3962 0277 34       		.uleb128 0x34
 3963 0278 00       		.byte	0
 3964 0279 03       		.uleb128 0x3
 3965 027a 0E       		.uleb128 0xe
 3966 027b 3A       		.uleb128 0x3a
 3967 027c 0B       		.uleb128 0xb
 3968 027d 3B       		.uleb128 0x3b
 3969 027e 05       		.uleb128 0x5
 3970 027f 49       		.uleb128 0x49
 3971 0280 13       		.uleb128 0x13
 3972 0281 3F       		.uleb128 0x3f
 3973 0282 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 112


 3974 0283 3C       		.uleb128 0x3c
 3975 0284 19       		.uleb128 0x19
 3976 0285 00       		.byte	0
 3977 0286 00       		.byte	0
 3978 0287 2E       		.uleb128 0x2e
 3979 0288 34       		.uleb128 0x34
 3980 0289 00       		.byte	0
 3981 028a 03       		.uleb128 0x3
 3982 028b 0E       		.uleb128 0xe
 3983 028c 3A       		.uleb128 0x3a
 3984 028d 0B       		.uleb128 0xb
 3985 028e 3B       		.uleb128 0x3b
 3986 028f 0B       		.uleb128 0xb
 3987 0290 49       		.uleb128 0x49
 3988 0291 13       		.uleb128 0x13
 3989 0292 3F       		.uleb128 0x3f
 3990 0293 19       		.uleb128 0x19
 3991 0294 02       		.uleb128 0x2
 3992 0295 18       		.uleb128 0x18
 3993 0296 00       		.byte	0
 3994 0297 00       		.byte	0
 3995 0298 2F       		.uleb128 0x2f
 3996 0299 34       		.uleb128 0x34
 3997 029a 00       		.byte	0
 3998 029b 03       		.uleb128 0x3
 3999 029c 0E       		.uleb128 0xe
 4000 029d 3A       		.uleb128 0x3a
 4001 029e 0B       		.uleb128 0xb
 4002 029f 3B       		.uleb128 0x3b
 4003 02a0 0B       		.uleb128 0xb
 4004 02a1 49       		.uleb128 0x49
 4005 02a2 13       		.uleb128 0x13
 4006 02a3 3F       		.uleb128 0x3f
 4007 02a4 19       		.uleb128 0x19
 4008 02a5 3C       		.uleb128 0x3c
 4009 02a6 19       		.uleb128 0x19
 4010 02a7 00       		.byte	0
 4011 02a8 00       		.byte	0
 4012 02a9 30       		.uleb128 0x30
 4013 02aa 2E       		.uleb128 0x2e
 4014 02ab 00       		.byte	0
 4015 02ac 3F       		.uleb128 0x3f
 4016 02ad 19       		.uleb128 0x19
 4017 02ae 3C       		.uleb128 0x3c
 4018 02af 19       		.uleb128 0x19
 4019 02b0 6E       		.uleb128 0x6e
 4020 02b1 0E       		.uleb128 0xe
 4021 02b2 03       		.uleb128 0x3
 4022 02b3 0E       		.uleb128 0xe
 4023 02b4 3A       		.uleb128 0x3a
 4024 02b5 0B       		.uleb128 0xb
 4025 02b6 3B       		.uleb128 0x3b
 4026 02b7 0B       		.uleb128 0xb
 4027 02b8 00       		.byte	0
 4028 02b9 00       		.byte	0
 4029 02ba 00       		.byte	0
 4030              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 113


 4031              	.Ldebug_loc0:
 4032              	.LLST0:
 4033 0000 00000000 		.4byte	.LVL0
 4034 0004 06000000 		.4byte	.LVL2
 4035 0008 0100     		.2byte	0x1
 4036 000a 50       		.byte	0x50
 4037 000b 06000000 		.4byte	.LVL2
 4038 000f 0C000000 		.4byte	.LFE16
 4039 0013 0400     		.2byte	0x4
 4040 0015 F3       		.byte	0xf3
 4041 0016 01       		.uleb128 0x1
 4042 0017 50       		.byte	0x50
 4043 0018 9F       		.byte	0x9f
 4044 0019 00000000 		.4byte	0
 4045 001d 00000000 		.4byte	0
 4046              	.LLST1:
 4047 0021 02000000 		.4byte	.LVL1
 4048 0025 0A000000 		.4byte	.LVL3
 4049 0029 0100     		.2byte	0x1
 4050 002b 53       		.byte	0x53
 4051 002c 0A000000 		.4byte	.LVL3
 4052 0030 0C000000 		.4byte	.LFE16
 4053 0034 0700     		.2byte	0x7
 4054 0036 70       		.byte	0x70
 4055 0037 00       		.sleb128 0
 4056 0038 0A       		.byte	0xa
 4057 0039 FFFF     		.2byte	0xffff
 4058 003b 1A       		.byte	0x1a
 4059 003c 9F       		.byte	0x9f
 4060 003d 00000000 		.4byte	0
 4061 0041 00000000 		.4byte	0
 4062              	.LLST2:
 4063 0045 0E000000 		.4byte	.LVL4
 4064 0049 12000000 		.4byte	.LVL5
 4065 004d 0600     		.2byte	0x6
 4066 004f 73       		.byte	0x73
 4067 0050 00       		.sleb128 0
 4068 0051 08       		.byte	0x8
 4069 0052 FF       		.byte	0xff
 4070 0053 1A       		.byte	0x1a
 4071 0054 9F       		.byte	0x9f
 4072 0055 12000000 		.4byte	.LVL5
 4073 0059 1A000000 		.4byte	.LVL6
 4074 005d 0100     		.2byte	0x1
 4075 005f 53       		.byte	0x53
 4076 0060 1A000000 		.4byte	.LVL6
 4077 0064 1C000000 		.4byte	.LVL7
 4078 0068 0500     		.2byte	0x5
 4079 006a 0C       		.byte	0xc
 4080 006b C0010B40 		.4byte	0x400b01c0
 4081 006f 00000000 		.4byte	0
 4082 0073 00000000 		.4byte	0
 4083              	.LLST3:
 4084 0077 98000000 		.4byte	.LVL13
 4085 007b 9C000000 		.4byte	.LVL14
 4086 007f 0100     		.2byte	0x1
 4087 0081 53       		.byte	0x53
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 114


 4088 0082 00000000 		.4byte	0
 4089 0086 00000000 		.4byte	0
 4090              	.LLST4:
 4091 008a 52000000 		.4byte	.LVL8
 4092 008e 58000000 		.4byte	.LVL9
 4093 0092 0400     		.2byte	0x4
 4094 0094 0A       		.byte	0xa
 4095 0095 C003     		.2byte	0x3c0
 4096 0097 9F       		.byte	0x9f
 4097 0098 58000000 		.4byte	.LVL9
 4098 009c 68000000 		.4byte	.LVL11
 4099 00a0 0100     		.2byte	0x1
 4100 00a2 53       		.byte	0x53
 4101 00a3 00000000 		.4byte	0
 4102 00a7 00000000 		.4byte	0
 4103              	.LLST5:
 4104 00ab 82000000 		.4byte	.LVL12
 4105 00af B6000000 		.4byte	.LVL15
 4106 00b3 0100     		.2byte	0x1
 4107 00b5 50       		.byte	0x50
 4108 00b6 00000000 		.4byte	0
 4109 00ba 00000000 		.4byte	0
 4110              	.LLST6:
 4111 00be 58000000 		.4byte	.LVL22
 4112 00c2 6B000000 		.4byte	.LVL26-1
 4113 00c6 0100     		.2byte	0x1
 4114 00c8 50       		.byte	0x50
 4115 00c9 7E000000 		.4byte	.LVL27
 4116 00cd 91000000 		.4byte	.LVL31-1
 4117 00d1 0100     		.2byte	0x1
 4118 00d3 50       		.byte	0x50
 4119 00d4 CA000000 		.4byte	.LVL33
 4120 00d8 D7000000 		.4byte	.LVL36-1
 4121 00dc 0100     		.2byte	0x1
 4122 00de 50       		.byte	0x50
 4123 00df DC000000 		.4byte	.LVL37
 4124 00e3 E7000000 		.4byte	.LVL40-1
 4125 00e7 0100     		.2byte	0x1
 4126 00e9 50       		.byte	0x50
 4127 00ea EC000000 		.4byte	.LVL41
 4128 00ee FF000000 		.4byte	.LVL45-1
 4129 00f2 0100     		.2byte	0x1
 4130 00f4 50       		.byte	0x50
 4131 00f5 04010000 		.4byte	.LVL46
 4132 00f9 15010000 		.4byte	.LVL50-1
 4133 00fd 0100     		.2byte	0x1
 4134 00ff 50       		.byte	0x50
 4135 0100 00000000 		.4byte	0
 4136 0104 00000000 		.4byte	0
 4137              	.LLST7:
 4138 0108 5C000000 		.4byte	.LVL23
 4139 010c 60000000 		.4byte	.LVL24
 4140 0110 0100     		.2byte	0x1
 4141 0112 51       		.byte	0x51
 4142 0113 60000000 		.4byte	.LVL24
 4143 0117 6B000000 		.4byte	.LVL26-1
 4144 011b 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 115


 4145 011d 53       		.byte	0x53
 4146 011e 82000000 		.4byte	.LVL28
 4147 0122 86000000 		.4byte	.LVL29
 4148 0126 0100     		.2byte	0x1
 4149 0128 51       		.byte	0x51
 4150 0129 86000000 		.4byte	.LVL29
 4151 012d 91000000 		.4byte	.LVL31-1
 4152 0131 0100     		.2byte	0x1
 4153 0133 53       		.byte	0x53
 4154 0134 CE000000 		.4byte	.LVL34
 4155 0138 D2000000 		.4byte	.LVL35
 4156 013c 0100     		.2byte	0x1
 4157 013e 52       		.byte	0x52
 4158 013f D2000000 		.4byte	.LVL35
 4159 0143 D7000000 		.4byte	.LVL36-1
 4160 0147 0100     		.2byte	0x1
 4161 0149 53       		.byte	0x53
 4162 014a DE000000 		.4byte	.LVL38
 4163 014e E2000000 		.4byte	.LVL39
 4164 0152 0100     		.2byte	0x1
 4165 0154 52       		.byte	0x52
 4166 0155 E2000000 		.4byte	.LVL39
 4167 0159 E7000000 		.4byte	.LVL40-1
 4168 015d 0100     		.2byte	0x1
 4169 015f 53       		.byte	0x53
 4170 0160 F0000000 		.4byte	.LVL42
 4171 0164 F4000000 		.4byte	.LVL43
 4172 0168 0100     		.2byte	0x1
 4173 016a 52       		.byte	0x52
 4174 016b F4000000 		.4byte	.LVL43
 4175 016f FF000000 		.4byte	.LVL45-1
 4176 0173 0100     		.2byte	0x1
 4177 0175 53       		.byte	0x53
 4178 0176 06010000 		.4byte	.LVL47
 4179 017a 0A010000 		.4byte	.LVL48
 4180 017e 0100     		.2byte	0x1
 4181 0180 52       		.byte	0x52
 4182 0181 0A010000 		.4byte	.LVL48
 4183 0185 15010000 		.4byte	.LVL50-1
 4184 0189 0100     		.2byte	0x1
 4185 018b 53       		.byte	0x53
 4186 018c 00000000 		.4byte	0
 4187 0190 00000000 		.4byte	0
 4188              	.LLST8:
 4189 0194 00000000 		.4byte	.LVL56
 4190 0198 1E000000 		.4byte	.LVL58
 4191 019c 0100     		.2byte	0x1
 4192 019e 50       		.byte	0x50
 4193 019f 1E000000 		.4byte	.LVL58
 4194 01a3 EC000000 		.4byte	.LFE9
 4195 01a7 0200     		.2byte	0x2
 4196 01a9 91       		.byte	0x91
 4197 01aa 64       		.sleb128 -28
 4198 01ab 00000000 		.4byte	0
 4199 01af 00000000 		.4byte	0
 4200              	.LLST9:
 4201 01b3 00000000 		.4byte	.LVL56
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 116


 4202 01b7 21000000 		.4byte	.LVL59-1
 4203 01bb 0100     		.2byte	0x1
 4204 01bd 51       		.byte	0x51
 4205 01be 21000000 		.4byte	.LVL59-1
 4206 01c2 EC000000 		.4byte	.LFE9
 4207 01c6 0400     		.2byte	0x4
 4208 01c8 F3       		.byte	0xf3
 4209 01c9 01       		.uleb128 0x1
 4210 01ca 51       		.byte	0x51
 4211 01cb 9F       		.byte	0x9f
 4212 01cc 00000000 		.4byte	0
 4213 01d0 00000000 		.4byte	0
 4214              	.LLST10:
 4215 01d4 28000000 		.4byte	.LVL60
 4216 01d8 2A000000 		.4byte	.LVL61
 4217 01dc 0700     		.2byte	0x7
 4218 01de 70       		.byte	0x70
 4219 01df 00       		.sleb128 0
 4220 01e0 0A       		.byte	0xa
 4221 01e1 FFFF     		.2byte	0xffff
 4222 01e3 1A       		.byte	0x1a
 4223 01e4 9F       		.byte	0x9f
 4224 01e5 32000000 		.4byte	.LVL63
 4225 01e9 3E000000 		.4byte	.LVL65
 4226 01ed 0100     		.2byte	0x1
 4227 01ef 50       		.byte	0x50
 4228 01f0 3E000000 		.4byte	.LVL65
 4229 01f4 D4000000 		.4byte	.LVL79
 4230 01f8 0100     		.2byte	0x1
 4231 01fa 56       		.byte	0x56
 4232 01fb 00000000 		.4byte	0
 4233 01ff 00000000 		.4byte	0
 4234              	.LLST11:
 4235 0203 3A000000 		.4byte	.LVL64
 4236 0207 3E000000 		.4byte	.LVL65
 4237 020b 0100     		.2byte	0x1
 4238 020d 52       		.byte	0x52
 4239 020e 3E000000 		.4byte	.LVL65
 4240 0212 D4000000 		.4byte	.LVL78
 4241 0216 0100     		.2byte	0x1
 4242 0218 55       		.byte	0x55
 4243 0219 00000000 		.4byte	0
 4244 021d 00000000 		.4byte	0
 4245              	.LLST12:
 4246 0221 3A000000 		.4byte	.LVL64
 4247 0225 3E000000 		.4byte	.LVL65
 4248 0229 0200     		.2byte	0x2
 4249 022b 30       		.byte	0x30
 4250 022c 9F       		.byte	0x9f
 4251 022d 3E000000 		.4byte	.LVL65
 4252 0231 62000000 		.4byte	.LVL67
 4253 0235 0100     		.2byte	0x1
 4254 0237 54       		.byte	0x54
 4255 0238 66000000 		.4byte	.LVL68
 4256 023c 68000000 		.4byte	.LVL69
 4257 0240 0100     		.2byte	0x1
 4258 0242 51       		.byte	0x51
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 117


 4259 0243 80000000 		.4byte	.LVL72
 4260 0247 84000000 		.4byte	.LVL73
 4261 024b 0200     		.2byte	0x2
 4262 024d 30       		.byte	0x30
 4263 024e 9F       		.byte	0x9f
 4264 024f 84000000 		.4byte	.LVL73
 4265 0253 EC000000 		.4byte	.LFE9
 4266 0257 0100     		.2byte	0x1
 4267 0259 51       		.byte	0x51
 4268 025a 00000000 		.4byte	0
 4269 025e 00000000 		.4byte	0
 4270              	.LLST13:
 4271 0262 0C000000 		.4byte	.LVL57
 4272 0266 66000000 		.4byte	.LVL68
 4273 026a 0300     		.2byte	0x3
 4274 026c 08       		.byte	0x8
 4275 026d 40       		.byte	0x40
 4276 026e 9F       		.byte	0x9f
 4277 026f 66000000 		.4byte	.LVL68
 4278 0273 68000000 		.4byte	.LVL69
 4279 0277 0100     		.2byte	0x1
 4280 0279 54       		.byte	0x54
 4281 027a 68000000 		.4byte	.LVL69
 4282 027e CA000000 		.4byte	.LVL75
 4283 0282 0100     		.2byte	0x1
 4284 0284 57       		.byte	0x57
 4285 0285 CA000000 		.4byte	.LVL75
 4286 0289 D4000000 		.4byte	.LVL77
 4287 028d 0100     		.2byte	0x1
 4288 028f 54       		.byte	0x54
 4289 0290 00000000 		.4byte	0
 4290 0294 00000000 		.4byte	0
 4291              	.LLST14:
 4292 0298 0C000000 		.4byte	.LVL57
 4293 029c 66000000 		.4byte	.LVL68
 4294 02a0 0300     		.2byte	0x3
 4295 02a2 08       		.byte	0x8
 4296 02a3 20       		.byte	0x20
 4297 02a4 9F       		.byte	0x9f
 4298 02a5 66000000 		.4byte	.LVL68
 4299 02a9 68000000 		.4byte	.LVL69
 4300 02ad 0100     		.2byte	0x1
 4301 02af 53       		.byte	0x53
 4302 02b0 68000000 		.4byte	.LVL69
 4303 02b4 CE000000 		.4byte	.LVL76
 4304 02b8 0100     		.2byte	0x1
 4305 02ba 54       		.byte	0x54
 4306 02bb CE000000 		.4byte	.LVL76
 4307 02bf EC000000 		.4byte	.LFE9
 4308 02c3 0100     		.2byte	0x1
 4309 02c5 53       		.byte	0x53
 4310 02c6 00000000 		.4byte	0
 4311 02ca 00000000 		.4byte	0
 4312              	.LLST15:
 4313 02ce 00000000 		.4byte	.LVL80
 4314 02d2 16000000 		.4byte	.LVL84
 4315 02d6 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 118


 4316 02d8 50       		.byte	0x50
 4317 02d9 16000000 		.4byte	.LVL84
 4318 02dd 20000000 		.4byte	.LFE11
 4319 02e1 0400     		.2byte	0x4
 4320 02e3 F3       		.byte	0xf3
 4321 02e4 01       		.uleb128 0x1
 4322 02e5 50       		.byte	0x50
 4323 02e6 9F       		.byte	0x9f
 4324 02e7 00000000 		.4byte	0
 4325 02eb 00000000 		.4byte	0
 4326              	.LLST16:
 4327 02ef 06000000 		.4byte	.LVL81
 4328 02f3 0E000000 		.4byte	.LVL82
 4329 02f7 0100     		.2byte	0x1
 4330 02f9 51       		.byte	0x51
 4331 02fa 0E000000 		.4byte	.LVL82
 4332 02fe 14000000 		.4byte	.LVL83
 4333 0302 0100     		.2byte	0x1
 4334 0304 53       		.byte	0x53
 4335 0305 14000000 		.4byte	.LVL83
 4336 0309 1C000000 		.4byte	.LVL85
 4337 030d 0100     		.2byte	0x1
 4338 030f 51       		.byte	0x51
 4339 0310 1C000000 		.4byte	.LVL85
 4340 0314 20000000 		.4byte	.LFE11
 4341 0318 0100     		.2byte	0x1
 4342 031a 53       		.byte	0x53
 4343 031b 00000000 		.4byte	0
 4344 031f 00000000 		.4byte	0
 4345              	.LLST17:
 4346 0323 00000000 		.4byte	.LVL86
 4347 0327 16000000 		.4byte	.LVL90
 4348 032b 0100     		.2byte	0x1
 4349 032d 50       		.byte	0x50
 4350 032e 16000000 		.4byte	.LVL90
 4351 0332 20000000 		.4byte	.LFE12
 4352 0336 0400     		.2byte	0x4
 4353 0338 F3       		.byte	0xf3
 4354 0339 01       		.uleb128 0x1
 4355 033a 50       		.byte	0x50
 4356 033b 9F       		.byte	0x9f
 4357 033c 00000000 		.4byte	0
 4358 0340 00000000 		.4byte	0
 4359              	.LLST18:
 4360 0344 06000000 		.4byte	.LVL87
 4361 0348 14000000 		.4byte	.LVL89
 4362 034c 0100     		.2byte	0x1
 4363 034e 53       		.byte	0x53
 4364 034f 14000000 		.4byte	.LVL89
 4365 0353 1C000000 		.4byte	.LVL91
 4366 0357 0100     		.2byte	0x1
 4367 0359 51       		.byte	0x51
 4368 035a 1C000000 		.4byte	.LVL91
 4369 035e 20000000 		.4byte	.LFE12
 4370 0362 0100     		.2byte	0x1
 4371 0364 53       		.byte	0x53
 4372 0365 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 119


 4373 0369 00000000 		.4byte	0
 4374              	.LLST19:
 4375 036d 06000000 		.4byte	.LVL100
 4376 0371 18000000 		.4byte	.LVL103
 4377 0375 0100     		.2byte	0x1
 4378 0377 53       		.byte	0x53
 4379 0378 1A000000 		.4byte	.LVL104
 4380 037c 20000000 		.4byte	.LVL105
 4381 0380 0100     		.2byte	0x1
 4382 0382 52       		.byte	0x52
 4383 0383 20000000 		.4byte	.LVL105
 4384 0387 2E000000 		.4byte	.LFE14
 4385 038b 0100     		.2byte	0x1
 4386 038d 53       		.byte	0x53
 4387 038e 00000000 		.4byte	0
 4388 0392 00000000 		.4byte	0
 4389              	.LLST20:
 4390 0396 00000000 		.4byte	.LVL122
 4391 039a 0C000000 		.4byte	.LVL123
 4392 039e 0100     		.2byte	0x1
 4393 03a0 50       		.byte	0x50
 4394 03a1 0C000000 		.4byte	.LVL123
 4395 03a5 22000000 		.4byte	.LVL127
 4396 03a9 0100     		.2byte	0x1
 4397 03ab 54       		.byte	0x54
 4398 03ac 22000000 		.4byte	.LVL127
 4399 03b0 6C000000 		.4byte	.LFE3
 4400 03b4 0400     		.2byte	0x4
 4401 03b6 F3       		.byte	0xf3
 4402 03b7 01       		.uleb128 0x1
 4403 03b8 50       		.byte	0x50
 4404 03b9 9F       		.byte	0x9f
 4405 03ba 00000000 		.4byte	0
 4406 03be 00000000 		.4byte	0
 4407              	.LLST21:
 4408 03c2 20000000 		.4byte	.LVL126
 4409 03c6 4C000000 		.4byte	.LVL137
 4410 03ca 0100     		.2byte	0x1
 4411 03cc 55       		.byte	0x55
 4412 03cd 00000000 		.4byte	0
 4413 03d1 00000000 		.4byte	0
 4414              	.LLST22:
 4415 03d5 34000000 		.4byte	.LVL129
 4416 03d9 3C000000 		.4byte	.LVL133
 4417 03dd 0100     		.2byte	0x1
 4418 03df 53       		.byte	0x53
 4419 03e0 3C000000 		.4byte	.LVL133
 4420 03e4 3E000000 		.4byte	.LVL134
 4421 03e8 0800     		.2byte	0x8
 4422 03ea 75       		.byte	0x75
 4423 03eb 0C       		.sleb128 12
 4424 03ec 94       		.byte	0x94
 4425 03ed 01       		.byte	0x1
 4426 03ee 08       		.byte	0x8
 4427 03ef FF       		.byte	0xff
 4428 03f0 1A       		.byte	0x1a
 4429 03f1 9F       		.byte	0x9f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 120


 4430 03f2 3E000000 		.4byte	.LVL134
 4431 03f6 4C000000 		.4byte	.LVL136
 4432 03fa 0100     		.2byte	0x1
 4433 03fc 54       		.byte	0x54
 4434 03fd 00000000 		.4byte	0
 4435 0401 00000000 		.4byte	0
 4436              	.LLST23:
 4437 0405 22000000 		.4byte	.LVL127
 4438 0409 36000000 		.4byte	.LVL130
 4439 040d 0100     		.2byte	0x1
 4440 040f 54       		.byte	0x54
 4441 0410 36000000 		.4byte	.LVL130
 4442 0414 38000000 		.4byte	.LVL131
 4443 0418 0300     		.2byte	0x3
 4444 041a 74       		.byte	0x74
 4445 041b 01       		.sleb128 1
 4446 041c 9F       		.byte	0x9f
 4447 041d 3A000000 		.4byte	.LVL132
 4448 0421 3E000000 		.4byte	.LVL134
 4449 0425 0100     		.2byte	0x1
 4450 0427 54       		.byte	0x54
 4451 0428 00000000 		.4byte	0
 4452 042c 00000000 		.4byte	0
 4453              	.LLST24:
 4454 0430 00000000 		.4byte	.LVL138
 4455 0434 07000000 		.4byte	.LVL139-1
 4456 0438 0100     		.2byte	0x1
 4457 043a 50       		.byte	0x50
 4458 043b 07000000 		.4byte	.LVL139-1
 4459 043f 84000000 		.4byte	.LFE4
 4460 0443 0400     		.2byte	0x4
 4461 0445 F3       		.byte	0xf3
 4462 0446 01       		.uleb128 0x1
 4463 0447 50       		.byte	0x50
 4464 0448 9F       		.byte	0x9f
 4465 0449 00000000 		.4byte	0
 4466 044d 00000000 		.4byte	0
 4467              	.LLST25:
 4468 0451 00000000 		.4byte	.LVL138
 4469 0455 07000000 		.4byte	.LVL139-1
 4470 0459 0100     		.2byte	0x1
 4471 045b 51       		.byte	0x51
 4472 045c 07000000 		.4byte	.LVL139-1
 4473 0460 3A000000 		.4byte	.LVL144
 4474 0464 0100     		.2byte	0x1
 4475 0466 54       		.byte	0x54
 4476 0467 3A000000 		.4byte	.LVL144
 4477 046b 84000000 		.4byte	.LFE4
 4478 046f 0400     		.2byte	0x4
 4479 0471 F3       		.byte	0xf3
 4480 0472 01       		.uleb128 0x1
 4481 0473 51       		.byte	0x51
 4482 0474 9F       		.byte	0x9f
 4483 0475 00000000 		.4byte	0
 4484 0479 00000000 		.4byte	0
 4485              	.LLST26:
 4486 047d 36000000 		.4byte	.LVL143
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 121


 4487 0481 4A000000 		.4byte	.LVL145
 4488 0485 0100     		.2byte	0x1
 4489 0487 51       		.byte	0x51
 4490 0488 00000000 		.4byte	0
 4491 048c 00000000 		.4byte	0
 4492              	.LLST27:
 4493 0490 2E000000 		.4byte	.LVL141
 4494 0494 32000000 		.4byte	.LVL142
 4495 0498 0100     		.2byte	0x1
 4496 049a 50       		.byte	0x50
 4497 049b 32000000 		.4byte	.LVL142
 4498 049f 68000000 		.4byte	.LVL148
 4499 04a3 0100     		.2byte	0x1
 4500 04a5 56       		.byte	0x56
 4501 04a6 00000000 		.4byte	0
 4502 04aa 00000000 		.4byte	0
 4503              	.LLST28:
 4504 04ae 00000000 		.4byte	.LVL149
 4505 04b2 02000000 		.4byte	.LVL150
 4506 04b6 0100     		.2byte	0x1
 4507 04b8 50       		.byte	0x50
 4508 04b9 02000000 		.4byte	.LVL150
 4509 04bd 10000000 		.4byte	.LFE15
 4510 04c1 0400     		.2byte	0x4
 4511 04c3 F3       		.byte	0xf3
 4512 04c4 01       		.uleb128 0x1
 4513 04c5 50       		.byte	0x50
 4514 04c6 9F       		.byte	0x9f
 4515 04c7 00000000 		.4byte	0
 4516 04cb 00000000 		.4byte	0
 4517              		.section	.debug_aranges,"",%progbits
 4518 0000 9C000000 		.4byte	0x9c
 4519 0004 0200     		.2byte	0x2
 4520 0006 00000000 		.4byte	.Ldebug_info0
 4521 000a 04       		.byte	0x4
 4522 000b 00       		.byte	0
 4523 000c 0000     		.2byte	0
 4524 000e 0000     		.2byte	0
 4525 0010 00000000 		.4byte	.LFB16
 4526 0014 0C000000 		.4byte	.LFE16-.LFB16
 4527 0018 00000000 		.4byte	.LFB10
 4528 001c 3C010000 		.4byte	.LFE10-.LFB10
 4529 0020 00000000 		.4byte	.LFB8
 4530 0024 5C000000 		.4byte	.LFE8-.LFB8
 4531 0028 00000000 		.4byte	.LFB17
 4532 002c 90000000 		.4byte	.LFE17-.LFB17
 4533 0030 00000000 		.4byte	.LFB1
 4534 0034 D4010000 		.4byte	.LFE1-.LFB1
 4535 0038 00000000 		.4byte	.LFB6
 4536 003c 28000000 		.4byte	.LFE6-.LFB6
 4537 0040 00000000 		.4byte	.LFB9
 4538 0044 EC000000 		.4byte	.LFE9-.LFB9
 4539 0048 00000000 		.4byte	.LFB11
 4540 004c 20000000 		.4byte	.LFE11-.LFB11
 4541 0050 00000000 		.4byte	.LFB12
 4542 0054 20000000 		.4byte	.LFE12-.LFB12
 4543 0058 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 122


 4544 005c 74000000 		.4byte	.LFE5-.LFB5
 4545 0060 00000000 		.4byte	.LFB13
 4546 0064 0C000000 		.4byte	.LFE13-.LFB13
 4547 0068 00000000 		.4byte	.LFB14
 4548 006c 2E000000 		.4byte	.LFE14-.LFB14
 4549 0070 00000000 		.4byte	.LFB7
 4550 0074 00010000 		.4byte	.LFE7-.LFB7
 4551 0078 00000000 		.4byte	.LFB2
 4552 007c 24000000 		.4byte	.LFE2-.LFB2
 4553 0080 00000000 		.4byte	.LFB3
 4554 0084 6C000000 		.4byte	.LFE3-.LFB3
 4555 0088 00000000 		.4byte	.LFB4
 4556 008c 84000000 		.4byte	.LFE4-.LFB4
 4557 0090 00000000 		.4byte	.LFB15
 4558 0094 10000000 		.4byte	.LFE15-.LFB15
 4559 0098 00000000 		.4byte	0
 4560 009c 00000000 		.4byte	0
 4561              		.section	.debug_ranges,"",%progbits
 4562              	.Ldebug_ranges0:
 4563 0000 00000000 		.4byte	.LFB16
 4564 0004 0C000000 		.4byte	.LFE16
 4565 0008 00000000 		.4byte	.LFB10
 4566 000c 3C010000 		.4byte	.LFE10
 4567 0010 00000000 		.4byte	.LFB8
 4568 0014 5C000000 		.4byte	.LFE8
 4569 0018 00000000 		.4byte	.LFB17
 4570 001c 90000000 		.4byte	.LFE17
 4571 0020 00000000 		.4byte	.LFB1
 4572 0024 D4010000 		.4byte	.LFE1
 4573 0028 00000000 		.4byte	.LFB6
 4574 002c 28000000 		.4byte	.LFE6
 4575 0030 00000000 		.4byte	.LFB9
 4576 0034 EC000000 		.4byte	.LFE9
 4577 0038 00000000 		.4byte	.LFB11
 4578 003c 20000000 		.4byte	.LFE11
 4579 0040 00000000 		.4byte	.LFB12
 4580 0044 20000000 		.4byte	.LFE12
 4581 0048 00000000 		.4byte	.LFB5
 4582 004c 74000000 		.4byte	.LFE5
 4583 0050 00000000 		.4byte	.LFB13
 4584 0054 0C000000 		.4byte	.LFE13
 4585 0058 00000000 		.4byte	.LFB14
 4586 005c 2E000000 		.4byte	.LFE14
 4587 0060 00000000 		.4byte	.LFB7
 4588 0064 00010000 		.4byte	.LFE7
 4589 0068 00000000 		.4byte	.LFB2
 4590 006c 24000000 		.4byte	.LFE2
 4591 0070 00000000 		.4byte	.LFB3
 4592 0074 6C000000 		.4byte	.LFE3
 4593 0078 00000000 		.4byte	.LFB4
 4594 007c 84000000 		.4byte	.LFE4
 4595 0080 00000000 		.4byte	.LFB15
 4596 0084 10000000 		.4byte	.LFE15
 4597 0088 00000000 		.4byte	0
 4598 008c 00000000 		.4byte	0
 4599              		.section	.debug_line,"",%progbits
 4600              	.Ldebug_line0:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 123


 4601 0000 61030000 		.section	.debug_str,"MS",%progbits,1
 4601      0200B000 
 4601      00000201 
 4601      FB0E0D00 
 4601      01010101 
 4602              	.LASF151:
 4603 0000 43617053 		.ascii	"CapSense_1_BistDischargeExtCapacitors\000"
 4603      656E7365 
 4603      5F315F42 
 4603      69737444 
 4603      69736368 
 4604              	.LASF88:
 4605 0026 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 4605      656E7365 
 4605      5F315F46 
 4605      4C415348 
 4605      5F57445F 
 4606              	.LASF142:
 4607 0041 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
 4607      656E7365 
 4607      5F315F72 
 4607      65717565 
 4607      73745363 
 4608              	.LASF118:
 4609 0061 43617053 		.ascii	"CapSense_1_CSXDisconnectRx\000"
 4609      656E7365 
 4609      5F315F43 
 4609      53584469 
 4609      73636F6E 
 4610              	.LASF143:
 4611 007c 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 4611      656E7365 
 4611      5F315F63 
 4611      75725261 
 4611      6D536E73 
 4612              	.LASF63:
 4613 0094 736E7254 		.ascii	"snrTestWidgetId\000"
 4613      65737457 
 4613      69646765 
 4613      74496400 
 4614              	.LASF134:
 4615 00a4 43617053 		.ascii	"CapSense_1_eleCsxDisconnectFlag\000"
 4615      656E7365 
 4615      5F315F65 
 4615      6C654373 
 4615      78446973 
 4616              	.LASF8:
 4617 00c4 756E7369 		.ascii	"unsigned int\000"
 4617      676E6564 
 4617      20696E74 
 4617      00
 4618              	.LASF153:
 4619 00d1 43617053 		.ascii	"CapSense_1_SsSetIOsInDefaultState\000"
 4619      656E7365 
 4619      5F315F53 
 4619      73536574 
 4619      494F7349 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 124


 4620              	.LASF110:
 4621 00f3 6E657874 		.ascii	"nextIdacMask\000"
 4621      49646163 
 4621      4D61736B 
 4621      00
 4622              	.LASF54:
 4623 0100 7363616E 		.ascii	"scanCounter\000"
 4623      436F756E 
 4623      74657200 
 4624              	.LASF52:
 4625 010c 6877436C 		.ascii	"hwClock\000"
 4625      6F636B00 
 4626              	.LASF113:
 4627 0114 72656756 		.ascii	"regValue\000"
 4627      616C7565 
 4627      00
 4628              	.LASF164:
 4629 011d 43617053 		.ascii	"CapSense_1_SsCSXStartSampleExt\000"
 4629      656E7365 
 4629      5F315F53 
 4629      73435358 
 4629      53746172 
 4630              	.LASF100:
 4631 013c 696E7465 		.ascii	"interruptState\000"
 4631      72727570 
 4631      74537461 
 4631      746500
 4632              	.LASF127:
 4633 014b 7278496E 		.ascii	"rxIndex\000"
 4633      64657800 
 4634              	.LASF119:
 4635 0153 43617053 		.ascii	"CapSense_1_SsCSXPostMultiScan\000"
 4635      656E7365 
 4635      5F315F53 
 4635      73435358 
 4635      506F7374 
 4636              	.LASF120:
 4637 0171 43617053 		.ascii	"CapSense_1_CSXElectrodeCheck\000"
 4637      656E7365 
 4637      5F315F43 
 4637      5358456C 
 4637      65637472 
 4638              	.LASF147:
 4639 018e 4379496E 		.ascii	"CyIntDisable\000"
 4639      74446973 
 4639      61626C65 
 4639      00
 4640              	.LASF144:
 4641 019b 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 4641      656E7365 
 4641      5F315F73 
 4641      63616E46 
 4641      72657149 
 4642              	.LASF117:
 4643 01b4 43617053 		.ascii	"CapSense_1_CSXDisconnectTx\000"
 4643      656E7365 
 4643      5F315F43 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 125


 4643      53584469 
 4643      73636F6E 
 4644              	.LASF42:
 4645 01cf 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 4645      656E7365 
 4645      5F315F52 
 4645      414D5F57 
 4645      445F4C49 
 4646              	.LASF112:
 4647 01ed 74785074 		.ascii	"txPtr\000"
 4647      7200
 4648              	.LASF125:
 4649 01f3 73656E73 		.ascii	"sensorId\000"
 4649      6F724964 
 4649      00
 4650              	.LASF129:
 4651 01fc 70747257 		.ascii	"ptrWdgt\000"
 4651      64677400 
 4652              	.LASF109:
 4653 0204 63757249 		.ascii	"curIdacMask\000"
 4653      6461634D 
 4653      61736B00 
 4654              	.LASF132:
 4655 0210 43617053 		.ascii	"CapSense_1_curWdgtTotalRx\000"
 4655      656E7365 
 4655      5F315F63 
 4655      75725764 
 4655      6774546F 
 4656              	.LASF12:
 4657 022a 666C6F61 		.ascii	"float\000"
 4657      7400
 4658              	.LASF76:
 4659 0230 73686966 		.ascii	"shift\000"
 4659      7400
 4660              	.LASF162:
 4661 0236 433A5C55 		.ascii	"C:\\Users\\michael.machate\\Desktop\\Cypress_Firstt"
 4661      73657273 
 4661      5C6D6963 
 4661      6861656C 
 4661      2E6D6163 
 4662 0265 65737473 		.ascii	"ests\\FirstTestMutal.cydsn\000"
 4662      5C466972 
 4662      73745465 
 4662      73744D75 
 4662      74616C2E 
 4663              	.LASF160:
 4664 027f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4664      43313120 
 4664      352E342E 
 4664      31203230 
 4664      31363036 
 4665 02b2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4665      20726576 
 4665      6973696F 
 4665      6E203233 
 4665      37373135 
 4666 02e5 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 126


 4666      67202D66 
 4666      66756E63 
 4666      74696F6E 
 4666      2D736563 
 4667              	.LASF92:
 4668 0311 77617463 		.ascii	"watchdogCounter\000"
 4668      68646F67 
 4668      436F756E 
 4668      74657200 
 4669              	.LASF126:
 4670 0321 7478496E 		.ascii	"txIndex\000"
 4670      64657800 
 4671              	.LASF156:
 4672 0329 43617053 		.ascii	"CapSense_1_SetupWidget\000"
 4672      656E7365 
 4672      5F315F53 
 4672      65747570 
 4672      57696467 
 4673              	.LASF155:
 4674 0340 43794465 		.ascii	"CyDelayUs\000"
 4674      6C617955 
 4674      7300
 4675              	.LASF62:
 4676 034a 736E734C 		.ascii	"snsList\000"
 4676      69737400 
 4677              	.LASF7:
 4678 0352 6C6F6E67 		.ascii	"long long unsigned int\000"
 4678      206C6F6E 
 4678      6720756E 
 4678      7369676E 
 4678      65642069 
 4679              	.LASF114:
 4680 0369 43617053 		.ascii	"CapSense_1_CSXConnectRx\000"
 4680      656E7365 
 4680      5F315F43 
 4680      5358436F 
 4680      6E6E6563 
 4681              	.LASF64:
 4682 0381 736E7254 		.ascii	"snrTestSensorId\000"
 4682      65737453 
 4682      656E736F 
 4682      72496400 
 4683              	.LASF85:
 4684 0391 77646774 		.ascii	"wdgtType\000"
 4684      54797065 
 4684      00
 4685              	.LASF99:
 4686 039a 43617053 		.ascii	"CapSense_1_CSXInitialize\000"
 4686      656E7365 
 4686      5F315F43 
 4686      5358496E 
 4686      69746961 
 4687              	.LASF19:
 4688 03b3 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 4688      656E7365 
 4688      5F315F4C 
 4688      4F575F42 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 127


 4688      534C4E5F 
 4689              	.LASF123:
 4690 03d0 736E7343 		.ascii	"snsClkVal\000"
 4690      6C6B5661 
 4690      6C00
 4691              	.LASF105:
 4692 03da 74617267 		.ascii	"target\000"
 4692      657400
 4693              	.LASF70:
 4694 03e1 64725074 		.ascii	"drPtr\000"
 4694      7200
 4695              	.LASF154:
 4696 03e7 43617053 		.ascii	"CapSense_1_SsIsrInitialize\000"
 4696      656E7365 
 4696      5F315F53 
 4696      73497372 
 4696      496E6974 
 4697              	.LASF133:
 4698 0402 43617053 		.ascii	"CapSense_1_curWdgtTotalTx\000"
 4698      656E7365 
 4698      5F315F63 
 4698      75725764 
 4698      6774546F 
 4699              	.LASF23:
 4700 041c 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 4700      656E7365 
 4700      5F315F53 
 4700      454E5345 
 4700      5F4D4554 
 4701              	.LASF31:
 4702 043b 6C6F7742 		.ascii	"lowBslnRst\000"
 4702      736C6E52 
 4702      737400
 4703              	.LASF140:
 4704 0446 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 4704      656E7365 
 4704      5F315F77 
 4704      69646765 
 4704      74496E64 
 4705              	.LASF159:
 4706 045d 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 4706      656E7365 
 4706      5F315F53 
 4706      73537769 
 4706      74636853 
 4707              	.LASF152:
 4708 047c 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 4708      656E7365 
 4708      5F315F53 
 4708      73536574 
 4708      4D6F6443 
 4709              	.LASF84:
 4710 049f 746F7461 		.ascii	"totalNumSns\000"
 4710      6C4E756D 
 4710      536E7300 
 4711              	.LASF111:
 4712 04ab 43617053 		.ascii	"CapSense_1_CSXConnectTx\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 128


 4712      656E7365 
 4712      5F315F43 
 4712      5358436F 
 4712      6E6E6563 
 4713              	.LASF131:
 4714 04c3 43617053 		.ascii	"CapSense_1_curRxIOPtr\000"
 4714      656E7365 
 4714      5F315F63 
 4714      75725278 
 4714      494F5074 
 4715              	.LASF107:
 4716 04d9 746F7461 		.ascii	"totalSns\000"
 4716      6C536E73 
 4716      00
 4717              	.LASF27:
 4718 04e2 6E6F6973 		.ascii	"noiseTh\000"
 4718      65546800 
 4719              	.LASF14:
 4720 04ea 63686172 		.ascii	"char\000"
 4720      00
 4721              	.LASF150:
 4722 04ef 43794578 		.ascii	"CyExitCriticalSection\000"
 4722      69744372 
 4722      69746963 
 4722      616C5365 
 4722      6374696F 
 4723              	.LASF130:
 4724 0505 43617053 		.ascii	"CapSense_1_curTxIOPtr\000"
 4724      656E7365 
 4724      5F315F63 
 4724      75725478 
 4724      494F5074 
 4725              	.LASF74:
 4726 051b 6873696F 		.ascii	"hsiomShift\000"
 4726      6D536869 
 4726      667400
 4727              	.LASF10:
 4728 0526 75696E74 		.ascii	"uint16\000"
 4728      313600
 4729              	.LASF25:
 4730 052d 7265736F 		.ascii	"resolution\000"
 4730      6C757469 
 4730      6F6E00
 4731              	.LASF67:
 4732 0538 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 4732      656E7365 
 4732      5F315F52 
 4732      414D5F53 
 4732      54525543 
 4733              	.LASF55:
 4734 054e 73746174 		.ascii	"status\000"
 4734      757300
 4735              	.LASF91:
 4736 0555 66696C74 		.ascii	"filterDelay\000"
 4736      65724465 
 4736      6C617900 
 4737              	.LASF47:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 129


 4738 0561 69646163 		.ascii	"idacComp\000"
 4738      436F6D70 
 4738      00
 4739              	.LASF161:
 4740 056a 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_SensingCSX_LL.c"
 4740      72617465 
 4740      645F536F 
 4740      75726365 
 4740      5C50536F 
 4741 059b 00       		.ascii	"\000"
 4742              	.LASF69:
 4743 059c 70635074 		.ascii	"pcPtr\000"
 4743      7200
 4744              	.LASF6:
 4745 05a2 6C6F6E67 		.ascii	"long long int\000"
 4745      206C6F6E 
 4745      6720696E 
 4745      7400
 4746              	.LASF18:
 4747 05b0 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 4747      656E7365 
 4747      5F315F54 
 4747      48524553 
 4747      484F4C44 
 4748              	.LASF30:
 4749 05ca 6F6E4465 		.ascii	"onDebounce\000"
 4749      626F756E 
 4749      636500
 4750              	.LASF61:
 4751 05d5 77646774 		.ascii	"wdgtList\000"
 4751      4C697374 
 4751      00
 4752              	.LASF78:
 4753 05de 70747232 		.ascii	"ptr2SnsFlash\000"
 4753      536E7346 
 4753      6C617368 
 4753      00
 4754              	.LASF66:
 4755 05eb 736E7254 		.ascii	"snrTestRawCount\000"
 4755      65737452 
 4755      6177436F 
 4755      756E7400 
 4756              	.LASF28:
 4757 05fb 6E4E6F69 		.ascii	"nNoiseTh\000"
 4757      73655468 
 4757      00
 4758              	.LASF59:
 4759 0604 63736430 		.ascii	"csd0Config\000"
 4759      436F6E66 
 4759      696700
 4760              	.LASF34:
 4761 060f 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 4761      656E7365 
 4761      5F315F52 
 4761      414D5F57 
 4761      445F4241 
 4762              	.LASF68:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 130


 4763 062d 6873696F 		.ascii	"hsiomPtr\000"
 4763      6D507472 
 4763      00
 4764              	.LASF11:
 4765 0636 75696E74 		.ascii	"uint32\000"
 4765      333200
 4766              	.LASF29:
 4767 063d 68797374 		.ascii	"hysteresis\000"
 4767      65726573 
 4767      697300
 4768              	.LASF81:
 4769 0648 70747232 		.ascii	"ptr2FltrHistory\000"
 4769      466C7472 
 4769      48697374 
 4769      6F727900 
 4770              	.LASF20:
 4771 0658 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 4771      656E7365 
 4771      5F315F55 
 4771      4E444546 
 4771      494E4544 
 4772              	.LASF49:
 4773 066f 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 4773      656E7365 
 4773      5F315F52 
 4773      414D5F53 
 4773      4E535F4C 
 4774              	.LASF73:
 4775 068e 6D61736B 		.ascii	"mask\000"
 4775      00
 4776              	.LASF146:
 4777 0693 43617053 		.ascii	"CapSense_1_SsChangeImoFreq\000"
 4777      656E7365 
 4777      5F315F53 
 4777      73436861 
 4777      6E676549 
 4778              	.LASF102:
 4779 06ae 43617053 		.ascii	"CapSense_1_CSXCalibrateWidget\000"
 4779      656E7365 
 4779      5F315F43 
 4779      53584361 
 4779      6C696272 
 4780              	.LASF93:
 4781 06cc 73616D70 		.ascii	"sampleClkFreqHz\000"
 4781      6C65436C 
 4781      6B467265 
 4781      71487A00 
 4782              	.LASF97:
 4783 06dc 43617053 		.ascii	"CapSense_1_SsCSXPostSingleScan\000"
 4783      656E7365 
 4783      5F315F53 
 4783      73435358 
 4783      506F7374 
 4784              	.LASF135:
 4785 06fb 43617053 		.ascii	"CapSense_1_dsRam\000"
 4785      656E7365 
 4785      5F315F64 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 131


 4785      7352616D 
 4785      00
 4786              	.LASF157:
 4787 070c 43617053 		.ascii	"CapSense_1_Scan\000"
 4787      656E7365 
 4787      5F315F53 
 4787      63616E00 
 4788              	.LASF16:
 4789 071c 6C6F6E67 		.ascii	"long double\000"
 4789      20646F75 
 4789      626C6500 
 4790              	.LASF15:
 4791 0728 72656733 		.ascii	"reg32\000"
 4791      3200
 4792              	.LASF65:
 4793 072e 736E7254 		.ascii	"snrTestScanCounter\000"
 4793      65737453 
 4793      63616E43 
 4793      6F756E74 
 4793      657200
 4794              	.LASF50:
 4795 0741 636F6E66 		.ascii	"configId\000"
 4795      69674964 
 4795      00
 4796              	.LASF80:
 4797 074a 70747232 		.ascii	"ptr2SnsRam\000"
 4797      536E7352 
 4797      616D00
 4798              	.LASF90:
 4799 0755 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 4799      656E7365 
 4799      5F315F46 
 4799      4C415348 
 4799      5F535452 
 4800              	.LASF58:
 4801 076d 736E7353 		.ascii	"snsStatus\000"
 4801      74617475 
 4801      7300
 4802              	.LASF33:
 4803 0777 736E7343 		.ascii	"snsClkSource\000"
 4803      6C6B536F 
 4803      75726365 
 4803      00
 4804              	.LASF21:
 4805 0784 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 4805      656E7365 
 4805      5F315F53 
 4805      454E5345 
 4805      5F4D4554 
 4806              	.LASF2:
 4807 07a2 73686F72 		.ascii	"short int\000"
 4807      7420696E 
 4807      7400
 4808              	.LASF145:
 4809 07ac 43617053 		.ascii	"CapSense_1_curFlashWdgtPtr\000"
 4809      656E7365 
 4809      5F315F63 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 132


 4809      7572466C 
 4809      61736857 
 4810              	.LASF4:
 4811 07c7 6C6F6E67 		.ascii	"long int\000"
 4811      20696E74 
 4811      00
 4812              	.LASF56:
 4813 07d0 77646774 		.ascii	"wdgtEnable\000"
 4813      456E6162 
 4813      6C6500
 4814              	.LASF136:
 4815 07db 43617053 		.ascii	"CapSense_1_dsFlash\000"
 4815      656E7365 
 4815      5F315F64 
 4815      73466C61 
 4815      736800
 4816              	.LASF96:
 4817 07ee 43617053 		.ascii	"CapSense_1_SsCSXStartSample\000"
 4817      656E7365 
 4817      5F315F53 
 4817      73435358 
 4817      53746172 
 4818              	.LASF45:
 4819 080a 64696666 		.ascii	"diff\000"
 4819      00
 4820              	.LASF53:
 4821 080f 74756E65 		.ascii	"tunerCmd\000"
 4821      72436D64 
 4821      00
 4822              	.LASF94:
 4823 0818 74656D70 		.ascii	"temp\000"
 4823      00
 4824              	.LASF165:
 4825 081d 43617053 		.ascii	"CapSense_1_SsCSXGetTxClkDivider\000"
 4825      656E7365 
 4825      5F315F53 
 4825      73435358 
 4825      47657454 
 4826              	.LASF71:
 4827 083d 70735074 		.ascii	"psPtr\000"
 4827      7200
 4828              	.LASF22:
 4829 0843 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 4829      656E7365 
 4829      5F315F53 
 4829      454E5345 
 4829      5F4D4554 
 4830              	.LASF106:
 4831 0861 72617754 		.ascii	"rawTarget\000"
 4831      61726765 
 4831      7400
 4832              	.LASF36:
 4833 086b 62757474 		.ascii	"button0\000"
 4833      6F6E3000 
 4834              	.LASF37:
 4835 0873 62757474 		.ascii	"button1\000"
 4835      6F6E3100 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 133


 4836              	.LASF38:
 4837 087b 62757474 		.ascii	"button2\000"
 4837      6F6E3200 
 4838              	.LASF39:
 4839 0883 62757474 		.ascii	"button3\000"
 4839      6F6E3300 
 4840              	.LASF40:
 4841 088b 62757474 		.ascii	"button4\000"
 4841      6F6E3400 
 4842              	.LASF41:
 4843 0893 62757474 		.ascii	"button5\000"
 4843      6F6E3500 
 4844              	.LASF86:
 4845 089b 6E756D43 		.ascii	"numCols\000"
 4845      6F6C7300 
 4846              	.LASF57:
 4847 08a3 77646774 		.ascii	"wdgtStatus\000"
 4847      53746174 
 4847      757300
 4848              	.LASF141:
 4849 08ae 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 4849      656E7365 
 4849      5F315F73 
 4849      656E736F 
 4849      72496E64 
 4850              	.LASF121:
 4851 08c5 43617053 		.ascii	"CapSense_1_CSXSetupWidget\000"
 4851      656E7365 
 4851      5F315F43 
 4851      53585365 
 4851      74757057 
 4852              	.LASF17:
 4853 08df 73697A65 		.ascii	"sizetype\000"
 4853      74797065 
 4853      00
 4854              	.LASF75:
 4855 08e8 64725368 		.ascii	"drShift\000"
 4855      69667400 
 4856              	.LASF5:
 4857 08f0 6C6F6E67 		.ascii	"long unsigned int\000"
 4857      20756E73 
 4857      69676E65 
 4857      6420696E 
 4857      7400
 4858              	.LASF128:
 4859 0902 72657456 		.ascii	"retVal\000"
 4859      616C00
 4860              	.LASF115:
 4861 0909 72785074 		.ascii	"rxPtr\000"
 4861      7200
 4862              	.LASF82:
 4863 090f 70747232 		.ascii	"ptr2DebounceArr\000"
 4863      4465626F 
 4863      756E6365 
 4863      41727200 
 4864              	.LASF26:
 4865 091f 66696E67 		.ascii	"fingerTh\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 134


 4865      65725468 
 4865      00
 4866              	.LASF44:
 4867 0928 62736C6E 		.ascii	"bslnExt\000"
 4867      45787400 
 4868              	.LASF101:
 4869 0930 43617053 		.ascii	"CapSense_1_CSXScanExt\000"
 4869      656E7365 
 4869      5F315F43 
 4869      53585363 
 4869      616E4578 
 4870              	.LASF1:
 4871 0946 756E7369 		.ascii	"unsigned char\000"
 4871      676E6564 
 4871      20636861 
 4871      7200
 4872              	.LASF103:
 4873 0954 77646774 		.ascii	"wdgtPtr\000"
 4873      50747200 
 4874              	.LASF137:
 4875 095c 43617053 		.ascii	"CapSense_1_csxScanPeriod\000"
 4875      656E7365 
 4875      5F315F63 
 4875      73785363 
 4875      616E5065 
 4876              	.LASF108:
 4877 0975 63616C69 		.ascii	"calibrationIndex\000"
 4877      62726174 
 4877      696F6E49 
 4877      6E646578 
 4877      00
 4878              	.LASF83:
 4879 0986 73746174 		.ascii	"staticConfig\000"
 4879      6963436F 
 4879      6E666967 
 4879      00
 4880              	.LASF60:
 4881 0993 6D6F6443 		.ascii	"modCsxClk\000"
 4881      7378436C 
 4881      6B00
 4882              	.LASF79:
 4883 099d 70747232 		.ascii	"ptr2WdgtRam\000"
 4883      57646774 
 4883      52616D00 
 4884              	.LASF163:
 4885 09a9 43617053 		.ascii	"CapSense_1_SsCalcCsxScanPeriod\000"
 4885      656E7365 
 4885      5F315F53 
 4885      7343616C 
 4885      63437378 
 4886              	.LASF87:
 4887 09c8 6E756D52 		.ascii	"numRows\000"
 4887      6F777300 
 4888              	.LASF116:
 4889 09d0 43617053 		.ascii	"CapSense_1_CSXScan\000"
 4889      656E7365 
 4889      5F315F43 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 135


 4889      53585363 
 4889      616E00
 4890              	.LASF72:
 4891 09e3 6873696F 		.ascii	"hsiomMask\000"
 4891      6D4D6173 
 4891      6B00
 4892              	.LASF148:
 4893 09ed 4379496E 		.ascii	"CyIntEnable\000"
 4893      74456E61 
 4893      626C6500 
 4894              	.LASF95:
 4895 09f9 746D7052 		.ascii	"tmpRegVal\000"
 4895      65675661 
 4895      6C00
 4896              	.LASF32:
 4897 0a03 736E7343 		.ascii	"snsClk\000"
 4897      6C6B00
 4898              	.LASF124:
 4899 0a0a 43617053 		.ascii	"CapSense_1_CSXSetupWidgetExt\000"
 4899      656E7365 
 4899      5F315F43 
 4899      53585365 
 4899      74757057 
 4900              	.LASF139:
 4901 0a27 43617053 		.ascii	"CapSense_1_CSXPostScanApiPtr\000"
 4901      656E7365 
 4901      5F315F43 
 4901      5358506F 
 4901      73745363 
 4902              	.LASF149:
 4903 0a44 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4903      74657243 
 4903      72697469 
 4903      63616C53 
 4903      65637469 
 4904              	.LASF0:
 4905 0a5b 7369676E 		.ascii	"signed char\000"
 4905      65642063 
 4905      68617200 
 4906              	.LASF43:
 4907 0a67 62736C6E 		.ascii	"bsln\000"
 4907      00
 4908              	.LASF3:
 4909 0a6c 73686F72 		.ascii	"short unsigned int\000"
 4909      7420756E 
 4909      7369676E 
 4909      65642069 
 4909      6E7400
 4910              	.LASF122:
 4911 0a7f 63757252 		.ascii	"curRamWdgtBasePtr\000"
 4911      616D5764 
 4911      67744261 
 4911      73655074 
 4911      7200
 4912              	.LASF77:
 4913 0a91 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 4913      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 136


 4913      5F315F46 
 4913      4C415348 
 4913      5F494F5F 
 4914              	.LASF138:
 4915 0aac 43617053 		.ascii	"CapSense_1_csxRawCount\000"
 4915      656E7365 
 4915      5F315F63 
 4915      73785261 
 4915      77436F75 
 4916              	.LASF9:
 4917 0ac3 75696E74 		.ascii	"uint8\000"
 4917      3800
 4918              	.LASF13:
 4919 0ac9 646F7562 		.ascii	"double\000"
 4919      6C6500
 4920              	.LASF46:
 4921 0ad0 6E656742 		.ascii	"negBslnRstCnt\000"
 4921      736C6E52 
 4921      7374436E 
 4921      7400
 4922              	.LASF48:
 4923 0ade 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 4923      656E7365 
 4923      5F315F52 
 4923      414D5F53 
 4923      4E535F53 
 4924              	.LASF24:
 4925 0af8 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 4925      656E7365 
 4925      5F315F53 
 4925      454E5345 
 4925      5F4D4554 
 4926              	.LASF98:
 4927 0b16 43617053 		.ascii	"CapSense_1_CSXScanISR\000"
 4927      656E7365 
 4927      5F315F43 
 4927      53585363 
 4927      616E4953 
 4928              	.LASF51:
 4929 0b2c 64657669 		.ascii	"deviceId\000"
 4929      63654964 
 4929      00
 4930              	.LASF35:
 4931 0b35 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 4931      656E7365 
 4931      5F315F52 
 4931      414D5F57 
 4931      445F4255 
 4932              	.LASF104:
 4933 0b55 77696467 		.ascii	"widgetId\000"
 4933      65744964 
 4933      00
 4934              	.LASF158:
 4935 0b5e 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 4935      656E7365 
 4935      5F315F53 
 4935      73506F73 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGdtYrQ.s 			page 137


 4935      74416C6C 
 4936              	.LASF89:
 4937 0b7e 77646774 		.ascii	"wdgtArray\000"
 4937      41727261 
 4937      7900
 4938              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
