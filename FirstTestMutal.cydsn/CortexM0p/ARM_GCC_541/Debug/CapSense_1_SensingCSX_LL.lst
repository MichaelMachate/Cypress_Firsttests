ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_SensingCSX_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsCalcCsxScanPeriod,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsCalcCsxScanPeriod, %function
  24              	CapSense_1_SsCalcCsxScanPeriod:
  25              	.LFB16:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_SensingCSX_LL.c"
   1:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \file CapSense_1_SensingCSX_LL.c
   3:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \version 5.20
   4:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   implementation for the low-level APIs of the CSX part of
   8:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   initialization, calibration and scanning.
  10:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \see CapSense_1 v5.20 Datasheet
  12:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include <cytypes.h>
  42:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CyLib.h"
  43:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  44:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CapSense_1_Structure.h"
  45:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CapSense_1_Configuration.h"
  46:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CapSense_1_SensingCSX_LL.h"
  47:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CapSense_1_Sensing.h"
  48:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "cyapicallbacks.h"
  49:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  50:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
  51:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
  53:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function constants
  54:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  56:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #define  CapSense_1_NUM_HALF_CYCLES                       (2u)
  57:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  58:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  59:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
  60:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Defines module variables
  61:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
  62:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  63:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Local variable used to store the Scan period */
  64:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** volatile uint16 CapSense_1_csxScanPeriod = 0u;
  65:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Local variable used to return raw count from the post scan ISR */
  66:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** volatile uint16 CapSense_1_csxRawCount = 0u;
  67:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  68:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(CapSense_1_ENABLE != CapSense_1_CSDV2)
  69:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     volatile uint32 CapSense_1_csxRawGarbage = 0u;
  70:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
  71:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  72:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Tx electrode that was connected previously */
  73:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curTxIOPtr;
  74:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Rx electrode that was connected previously */
  75:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curRxIOPtr;
  76:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Local variable to hold total Tx in widget, while scanning all the sensors in widget */
  77:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_curWdgtTotalRx = 0u;
  78:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Local variable to hold total Rx in widget, while scanning all the sensors in widget */
  79:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_curWdgtTotalTx = 0u;
  80:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Flag to indicate that electrodes were connected previously */
  81:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_eleCsxDisconnectFlag = 0u;
  82:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Pointer to Flash structure holding info of sensor to be scanned */
  83:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
  84:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curGangRxPtr = 0u;
  85:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curGangTxPtr = 0u;
  86:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif
  87:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  88:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Module local function declarations
  90:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
  91:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /**
  92:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \cond SECTION_C_INTERNAL
  93:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \addtogroup group_c_internal
  94:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \{
  95:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** */
  96:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  97:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXStartSample(void);
  98:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostMultiScan(void);
  99:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostSingleScan(void);
 100:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_SsCalcCsxScanPeriod(CapSense_1_RAM_WD_BASE_STRUCT const *wdgtPtr);
 101:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 102:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
 103:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_INLINE static void CapSense_1_SsCSXStartSampleExt(void);
 104:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif
 105:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 106:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 107:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static uint32 CapSense_1_SsCSXOversample(void);
 108:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif
 109:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 110:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 111:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static void CapSense_1_SsCSXPostMultiScanGanged(void);
 112:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif
 113:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 114:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Pointer to Pointer to function used to register callback in ISR */
 115:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void (*CapSense_1_CSXPostScanApiPtr)(void) = &CapSense_1_SsCSXPostMultiScan;
 116:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /** \}
 117:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \endcond */
 118:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 119:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXInitialize
 121:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 122:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 123:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 124:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Performs hardware and firmware initialization required for the CSX operation
 125:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   of the CapSense_1 Component.
 126:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 127:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 128:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function initializes hardware to perform the CSX sensing operation. This
 129:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   function is called by the CapSense_1_Start() API during the Component
 130:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   initialization. If both CSX and CSD sensing methods are used in the Component,
 131:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   this function is called by the CapSense_1_SetupWidget() API to change hardware
 132:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   configured for CSD to re-initialize for the CSX sensing.
 133:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 134:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   If the CSD and CSX widgets are used in the Component, it is recommended not to
 135:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   mix the CSD widgets between the CSX widgets, instead, place all CSX widgets in
 136:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the required scanning order and then place the CSD widgets in the customizer.
 137:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   For the Component API, this action will eliminate the need for changing the hardware
 138:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   configuration for every widget scan and will increase the execution speed
 139:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   in the CapSense_1_ScanAllWidgets() when the API is called.
 140:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 141:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Similarly, it is recommended to set up and scan all the CSX widgets in such
 142:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   a sequence that the CapSense_1_SetupWidget() API  shouldn't need
 143:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   hardware  sensing-configuration change.
 144:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 145:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   It is highly not recommended to call this API directly from the application layer.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 147:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 148:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXInitialize(void)
 149:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 150:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
 151:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint8  interruptState;
 152:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 tmpRegVal;
 153:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 154:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_PTR,             CapSense_1_DEFAULT_CSD_INTR_CFG);
 155:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_SET_PTR,         CapSense_1_DEFAULT_CSD_INTR_SET_CFG);
 156:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_MASK_PTR,        CapSense_1_DEFAULT_CSD_INTR_MASK_CFG);
 157:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR,            CapSense_1_DEFAULT_CSD_HSCMP_CFG);
 158:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_AMBUF_PTR,            CapSense_1_DEFAULT_CSD_AMBUF_CFG);
 159:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_REFGEN_PTR,           CapSense_1_DEFAULT_CSD_REFGEN_CFG);
 160:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR,           CapSense_1_DEFAULT_CSD_CSDCMP_CFG);
 161:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_MOD_PTR,         CapSense_1_DEFAULT_CSD_IDACA_CFG);
 162:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 163:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if((0u != CapSense_1_ADC_EN) || (0u != CapSense_1_IDACB_USED))
 164:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_COMP_PTR,    CapSense_1_DEFAULT_CSD_IDACB_CFG);
 165:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (0u != CapSense_1_ADC_EN) || (0u != CapSense_1_IDACB_USED) */
 166:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 167:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR,           CapSense_1_DEFAULT_CSD_SW_RES_CFG);
 168:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR,     CapSense_1_DEFAULT_CSD_SENSE_PERIOD_CFG);
 169:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_DUTY_PTR,       CapSense_1_DEFAULT_CSD_SENSE_DUTY_CFG);
 170:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR,      CapSense_1_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 171:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR,      CapSense_1_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 172:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,    CapSense_1_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 173:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 174:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 175:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 176:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_SW_BYP_SEL_PTR);
 177:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~(CapSense_1_SW_BYP_SEL_SW_BYA_MASK);
 178:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= CapSense_1_DEFAULT_CSD_SW_BYP_SEL_CFG;
 179:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR,       tmpRegVal);
 180:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 181:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 182:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR,     CapSense_1_DEFAULT_CSD_SW_CMP_P_SEL_CFG);
 183:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_N_SEL_PTR,     CapSense_1_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 184:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 185:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 186:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 187:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_SW_REFGEN_SEL_SW_MASK;
 188:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= CapSense_1_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 189:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR,    tmpRegVal);
 190:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 191:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 192:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR,    CapSense_1_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 193:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 194:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR,       CapSense_1_DEFAULT_CSD_SW_DSI_SEL_CFG);
 195:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_TIME_PTR,         CapSense_1_DEFAULT_CSD_SEQ_TIME_CFG);
 196:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_INIT_CNT_PTR,     CapSense_1_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 197:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR,     CapSense_1_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 198:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_ADC_CTL_PTR,          CapSense_1_DEFAULT_CSD_ADC_CTL_CFG);
 199:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR,        CapSense_1_DEFAULT_CSD_SEQ_START_CFG);
 200:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR,           CapSense_1_DEFAULT_CSD_CONFIG_CFG);
 201:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 202:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_BistDischargeExtCapacitors();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 204:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 205:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintA_PC_PTR);
 206:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintA_SHIFT * CapSense_1_GPIO_PC_BIT
 207:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_PC_PTR, tmpRegVal);
 208:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 209:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 210:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 211:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintB_PC_PTR);
 212:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintB__SHIFT * CapSense_1_GPIO_PC_BI
 213:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_PC_PTR, tmpRegVal);
 214:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 215:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 216:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 217:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 218:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 219:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_CintA_HSIOM_MASK;
 220:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintA_HSIOM_SHIFT);
 221:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, tmpRegVal);
 222:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 223:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 224:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 225:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 226:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 227:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_CintB_HSIOM_MASK;
 228:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintB_HSIOM_SHIFT);
 229:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, tmpRegVal);
 230:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 231:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 232:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsxClk);
 233:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 234:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
 235:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsSetSnsClockDivider((uint32)CapSense_1_dsRam.snsCsxClk);
 236:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 237:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 238:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set all IO states to default state */
 239:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetIOsInDefaultState();
 240:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 241:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
 242:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 trimValue;
 243:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 244:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set all IO states to default state */
 245:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetIOsInDefaultState();
 246:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 247:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 248:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             trimValue = CY_GET_REG32(CapSense_1_IDAC_PTR);
 249:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             trimValue &= ~(CapSense_1_IDAC_COMP_CFG_MASK | CapSense_1_IDAC_FEEDBACK_MODE_MASK);
 250:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, trimValue);
 251:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 252:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 253:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 254:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 255:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 256:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~CapSense_1_CintB_HSIOM_MASK;
 257:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintB_HSIOM_SHIFT);
 258:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, trimValue);
 259:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set drive mode of CintB pin to High-Z Analog state in PC register
 261:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             and set logic high on DR register. */
 262:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintB_PC_PTR);
 263:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintB__SHIFT * CapSense_1_GPIO_PC_BIT
 264:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_PC_PTR, trimValue);
 265:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 266:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintB_DR_PTR);
 267:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~(uint32)((uint32)0x01u << CapSense_1_CintB__SHIFT);
 268:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_DR_PTR, trimValue);
 269:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 270:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 271:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 272:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~CapSense_1_CintA_HSIOM_MASK;
 273:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintA_HSIOM_SHIFT);
 274:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, trimValue);
 275:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 276:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set drive mode of CintA_tank pin to High-Z Analog state in PC register
 277:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             and set logic high on DR register. */
 278:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintA_PC_PTR);
 279:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintA_SHIFT * CapSense_1_GPIO_PC_BIT_
 280:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_PC_PTR, trimValue);
 281:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 282:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintA_DR_PTR);
 283:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~(uint32)((uint32)0x01u << CapSense_1_CintA_SHIFT);
 284:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_DR_PTR, trimValue);
 285:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 286:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CSD comparator to CintB via AMUXBUS-A */
 287:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CONFIG_PTR);
 288:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue |= CapSense_1_CONFIG_SENSE_INSEL_MASK;
 289:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, trimValue);
 290:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 291:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* If common clocks are enabled for Component, set clock
 292:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them */
 293:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_CSX_COMMON_TX_CLK_EN == CapSense_1_ENABLE)
 294:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsSetClockDividers((uint32)CapSense_1_dsRam.snsCsxClk, (uint32)CapSense_1_ds
 295:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 296:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 297:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Enable CapSense_1 ISR and set ISR for CSX sensing */
 298:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_SsIsrInitialize(&CapSense_1_CSXScanISR);
 299:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 300:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 301:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 302:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 303:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXElectrodeCheck
 304:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 305:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 306:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 307:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Check if electrodes were previously connected using
 308:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the CapSense_1_CSXSetupWidgetExt() API and if yes, disconnect them.
 309:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 310:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 311:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function checks if CapSense_1_eleCsxDisconnectFlag is set.
 312:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   If it is set, the function disconnects the previously connected electrode.
 313:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 314:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 315:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXElectrodeCheck(void)
 316:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 318:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 numElectrodes;
 319:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN) */
 320:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 321:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if (0u != CapSense_1_eleCsxDisconnectFlag)
 322:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
 323:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****        /* Disconnect if electrodes were previous connected by SetupWidgetExt() API */
 324:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 325:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Check ganged sns flag */
 326:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_
 327:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 328:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Tx electrode
 329:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     3. Get Tx pointer
 330:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     4. Disconnect all Tx */
 331:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangTxPtr->numPins;
 332:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
 333:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 334:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 335:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 336:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr++);
 337:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
 338:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 339:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 340:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Rx electrode
 341:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     3. Get Rx pointer
 342:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     4. Disconnect all Rx */
 343:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangRxPtr->numPins;
 344:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId];
 345:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 346:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 347:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 348:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr++);
 349:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
 350:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 351:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 352:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             else
 353:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 354:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 355:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr);
 356:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
 357:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 358:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #else
 359:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 360:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr);
 361:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
 362:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 363:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_eleCsxDisconnectFlag = 0u;
 364:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
 365:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 366:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 367:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 368:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 369:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXSetupWidget
 370:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 371:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 372:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 373:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  in a specific widget using the CSX sensing method. This function requires
 375:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  using the CapSense_1_CSXScan() function to start scanning.
 376:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 377:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 378:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function initializes the widgets specific common parameters to perform
 379:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  the CSX scanning. The initialization includes the following:
 380:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    1. The CSD_CONFIG register.
 381:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    2. The IDAC register.
 382:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    3. The Sense clock frequency
 383:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    4. The phase alignment of the sense and modulator clocks.
 384:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 385:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function does not connect any specific sensors to the scanning hardware
 386:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  and neither does it start a scanning process. The CapSense_1_CSXScan()
 387:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  function must be called after initializing the widget to start scanning.
 388:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 389:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 390:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
 391:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 392:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called by the CapSense_1_SetupWidget() API if the
 393:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  given widget uses the CSX sensing method.
 394:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 395:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 396:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 397:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 398:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 399:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param widgetId
 400:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 401:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  initialization required for scanning sensors in the specific widget.
 402:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration header
 403:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  file defined as CapSense_1_<WidgetName>_WDGT_ID.
 404:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 405:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 406:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXSetupWidget(uint32 widgetId)
 407:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 408:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* variable to access widget details */
 409:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
 410:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 411:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 412:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 tmpRegVal;
 413:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 snsClkVal;
 414:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
 415:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 416:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Save the current widget Id */
 417:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_widgetIndex = (uint8)widgetId;
 418:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 419:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSX_E);
 420:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 421:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /*
 422:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *  Check if CSX electrodes were previously connected using
 423:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *  CapSense_1_CSXSetupWidgetExt API and if yes, disconnect them
 424:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     */
 425:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_CSXElectrodeCheck();
 426:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 427:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Configure hardware block */
 428:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 429:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curFlashWdgtPtr = &CapSense_1_dsFlash.wdgtArray[widgetId];
 430:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 9


 431:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_curFlashWdgtPtr->ptr2WdgtRa
 432:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 433:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
 434:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             snsClkVal = (uint32)CapSense_1_dsRam.snsCsxClk;
 435:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #else
 436:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             snsClkVal = (uint32)curRamWdgtBasePtr->snsClk;
 437:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
 438:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 439:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (uint32)curRamWdgtBasePtr->resolution);
 440:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod  = CapSense_1_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 441:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 442:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = (uint32)curRamWdgtBasePtr->snsClkSource;
 443:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 444:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         snsClkVal = (snsClkVal - 1uL) & CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK;
 445:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << CapSense_1_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 446:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, tmpRegVal);
 447:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsxClk);
 448:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
 449:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /*
 450:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         * initialize access pointers for current:
 451:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *    1. Pointer to widget configuration in Flash
 452:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *    2. Widget configuration in RAM
 453:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *    3. Make a local copy of widget index
 454:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         */
 455:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curFlashWdgtPtr = &CapSense_1_dsFlash.wdgtArray[widgetId];
 456:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_curFlashWdgtPtr->ptr2WdgtRa
 457:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 458:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_CONFIG_ENABLE_MASK);
 459:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, (CY_GET_REG32(CapSense_1_CONFIG_PTR) |
 460:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_MUTUALCAP_EN_MASK     |
 461:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_SENSE_COMP_BW_MASK    |
 462:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_SENSE_COMP_EN_MASK    |
 463:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_SENSE_INSEL_MASK      |
 464:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_REFBUF_EN_MASK        |
 465:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_REFBUF_DRV_MASK));
 466:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 467:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* If individual clocks are enabled for each widget, set clock
 468:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them. */
 469:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_CSX_COMMON_TX_CLK_EN == CapSense_1_DISABLE)
 470:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsSetClockDividers((uint32)curRamWdgtBasePtr->snsClk, (uint32)CapSense_1_dsR
 471:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 472:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 473:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Find scan period */
 474:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod = CapSense_1_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 475:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 476:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 477:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 478:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 479:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXSetupWidgetExt
 480:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 481:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 482:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 483:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Performs extended initialization for the CSX widget and also performs
 484:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  initialization required for a specific sensor in the widget. This function
 485:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  requires using the CapSense_1_CSXScan() function to initiate a scan.
 486:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 487:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 10


 488:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function does the same tasks as CapSense_1_CSXSetupWidget() and
 489:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  also connects a sensor in the widget for scanning. Once this function is
 490:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  called to initialize a widget and a sensor, the CapSense_1_CSXScanExt()
 491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  function must be called to scan the sensor.
 492:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 493:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 494:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
 495:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 496:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 497:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 498:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 499:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 500:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param widgetId
 501:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 502:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  initialization required for scanning a specific sensor in a specific widget.
 503:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration header
 504:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  file defined as CapSense_1_<WidgetName>_WDGT_ID.
 505:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 506:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param sensorId
 507:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 508:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
 509:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  specific widget.
 510:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
 511:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1 Configuration header file defined as
 512:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_<WidgetName>_SNS<SensorNumber>_ID.
 513:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 514:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 515:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 516:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXSetupWidgetExt(uint32 widgetId, uint32 sensorId)
 517:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 518:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 txIndex;
 519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 rxIndex;
 520:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 521:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 522:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint16 numElectrodes;
 523:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN) */
 524:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 525:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Initialize widget */
 526:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_CSXSetupWidget(widgetId);
 527:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_sensorIndex = (uint8)sensorId;
 528:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 529:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* initialize sensor data structure pointer to appropriate address */
 530:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsRam;
 531:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = &CapSense_1_curRamSnsPtr[sensorId];
 532:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 533:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 534:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (0u != CapSense_1_curRamSnsPtr->subConvNum)
 535:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 536:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 537:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 538:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /*
 539:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *  Find Tx and Rx index for given snsIndex
 540:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    rxIndex = sensorId / TxCount
 541:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    txIndex = sensorId % TxCount
 542:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     */
 543:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     rxIndex = sensorId /CapSense_1_curFlashWdgtPtr->numRows;
 544:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     txIndex = sensorId % CapSense_1_curFlashWdgtPtr->numRows;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 11


 545:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 546:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* If widget is APA, find node (Tx/Rx) to be connected for scanning */
 547:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 548:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_1_GA
 549:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 550:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /*
 551:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  1. Get access to Rx sensor pointer (Rx = Base + rxIndex).
 552:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  2. Get number of Rx electrodes
 553:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  3. Get Rx pointer
 554:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  4. Connect all Rx
 555:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             */
 556:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curGangRxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 557:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curGangRxPtr += rxIndex;
 558:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             numElectrodes = CapSense_1_curGangRxPtr->numPins;
 559:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId];
 560:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 561:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             do
 562:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 563:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
 564:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes--;
 565:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             } while (0u != numElectrodes);
 566:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 567:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /*
 568:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  1. Get access to Tx sensor pointer (Tx = Base + NumberRx + TxIndex).
 569:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  2. Get number of Tx electrodes
 570:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  3. Get Tx pointer
 571:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  4. Connect all Tx
 572:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             */
 573:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 574:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curGangTxPtr += (CapSense_1_curFlashWdgtPtr->numCols + txIndex);
 575:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 576:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             numElectrodes = CapSense_1_curGangTxPtr->numPins;
 577:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
 578:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 579:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             do
 580:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 581:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
 582:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes--;
 583:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }while (0u != numElectrodes);
 584:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 585:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Set callback to scan connected ganged sensor only */
 586:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostSingleScan;
 587:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 588:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
 589:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif  /* (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN) */
 590:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 591:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /*
 592:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  If no ganged sensor in Component OR current widget no contains ganged sns, then:
 593:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *    1. Find Rx pointer: Rx = Base address + RxIndex
 594:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *    2. Find Tx pointer: Tx = Base address + (total Rx + TxIndex)
 595:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             */
 596:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgtPtr-
 597:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRxIOPtr = &CapSense_1_curRxIOPtr[rxIndex];
 598:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 599:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgtPtr-
 600:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curTxIOPtr = &CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr->numCols + t
 601:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 12


 602:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Connect Tx and Rx IOs for scan ad set flag to indicate that IOs should be disconnect
 603:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 604:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 605:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_eleCsxDisconnectFlag = CapSense_1_DISCONNECT_IO_FLAG;
 606:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 607:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Set callback to scan all the sensors in widget */
 608:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostSingleScan;
 609:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 610:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 611:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 612:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 613:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 614:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 615:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 616:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXScan
 617:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 618:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 619:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 620:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by
 621:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  the CapSense_1_CSXSetupWidget() function.
 622:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 623:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 624:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
 625:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  the CapSense_1_CSXSetupWidget() function. It does the following tasks:
 626:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    1. Connects the first sensor of the widget.
 627:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    2. Initializes an interrupt callback function to initialize a scan of the
 628:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *       next sensors in a widget.
 629:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    3. Starts scanning for the first sensor in the widget.
 630:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 631:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called by the CapSense_1_Scan() API if the given
 632:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  widget uses the CSX sensing method.
 633:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 634:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 635:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 636:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 637:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 638:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 639:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status. The widget must be
 640:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  preconfigured by the CapSense_1_CSXSetupWidget() function if any other
 641:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  widget was previously scanned or any other type of scan functions were used.
 642:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 643:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 644:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 645:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXScan(void)
 646:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 647:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 648:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 numElectrodes;
 649:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 650:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 651:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 snsIndex = 0u;
 652:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 snsNum;
 653:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 654:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 655:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_sensorIndex = 0u;
 656:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 657:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* initialize pointer to access sensor RAM elements */
 658:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsRam;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 13


 659:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 660:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 661:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Loop through the sensors until non-skipped is found */
 662:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         snsNum = CapSense_1_curFlashWdgtPtr->totalNumSns;
 663:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         while ((snsIndex < snsNum) && (CapSense_1_curRamSnsPtr->subConvNum == 0u))
 664:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 665:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Increment sensor pointers */
 666:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr++;
 667:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_sensorIndex++;
 668:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             snsIndex++;
 669:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 670:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /*
 671:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 672:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 673:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         */
 674:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalTx = (uint16)(CapSense_1_curFlashWdgtPtr->numRows - (snsIndex % CapS
 675:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalRx  = (uint16)(CapSense_1_curFlashWdgtPtr->numCols - (snsIndex / Cap
 676:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 677:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Scan sensor if it's index within a valid range otherwise do nothing as all the sensors a
 678:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (snsIndex < snsNum)
 679:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 680:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 681:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if ((CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_1_GANGED_SNS_MASK) != 0u)
 682:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 683:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect all Rx electrodes */
 684:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangRxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 685:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangRxPtr += snsIndex /CapSense_1_curFlashWdgtPtr->numRows;
 686:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangRxPtr->numPins;
 687:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId]
 688:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
 689:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 690:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
 691:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
 692:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
 693:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 694:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect all Tx electrodes */
 695:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 696:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangTxPtr += (CapSense_1_curFlashWdgtPtr->numCols + snsIndex % Ca
 697:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangTxPtr->numPins;
 698:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId]
 699:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
 700:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 701:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
 702:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
 703:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }while (0u != numElectrodes);
 704:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Assign callback to ISR */
 705:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostMultiScanGanged;
 706:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
 707:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
 708:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN) */
 709:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 710:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Find Rx pointer: Rx = Base_address + SnsIndex / total_Tx */
 711:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgt
 712:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr += (snsIndex / CapSense_1_curFlashWdgtPtr->numRows);
 713:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Find Tx pointer: Tx = Base_address + total_Rx + SnsIndex % total_Tx */
 714:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgt
 715:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr += CapSense_1_curFlashWdgtPtr->numCols;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 14


 716:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr += (snsIndex % CapSense_1_curFlashWdgtPtr->numRows);
 717:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Connect Tx and Rx electrodes for scan */
 718:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 719:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 720:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 721:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostMultiScan;
 722:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 723:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 724:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 725:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
 726:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 727:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 728:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 729:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Set scan status, enter critical section and initiate scan */
 730:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.status |= CapSense_1_SW_STS_BUSY;
 731:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 732:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
 733:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
 734:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 735:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
 736:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 737:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
 738:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 739:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 740:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 741:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 742:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /*
 743:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 744:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 745:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         */
 746:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalTx = CapSense_1_curFlashWdgtPtr->numRows;
 747:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalRx  = CapSense_1_curFlashWdgtPtr->numCols;
 748:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 749:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* If Component contains CSX ganged sensor, then check if widget contains ganged sensor */
 750:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_CSX_GANGED_SNS_EN == 1u)
 751:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             if ((CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_1_GANGED_SNS_MASK) != 0u)
 752:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 753:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
 754:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Rx
 755:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  2. Get number of Rx pin
 756:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  3. Get pointer to the Rx pin
 757:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  4. Connect all Rx pins
 758:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
 759:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curGangRxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 760:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangRxPtr->numPins ;
 761:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId];
 762:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 763:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 764:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
 765:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
 766:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 767:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 768:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
 769:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Tx (Tx = Base + number of Rx).
 770:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  2. Get number of Tx electrodes
 771:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  3. Get pointer the Tx electrode
 772:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  4. Connect all Tx
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 15


 773:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
 774:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 775:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curGangTxPtr += CapSense_1_curFlashWdgtPtr->numCols;
 776:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangTxPtr->numPins ;
 777:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
 778:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 779:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 780:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 781:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
 782:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
 783:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }while (0u != numElectrodes);
 784:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 785:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Assign callback to ISR */
 786:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostMultiScanGanged;
 787:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 788:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 789:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             else
 790:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 791:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 792:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
 793:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  If no ganged sensor in the Component OR current widget contains no ganged sns, t
 794:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *    1. Find Rx pointer: Rx = Base address.
 795:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *    2. Find Tx pointer: Tx = Base address + total Rx
 796:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
 797:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgt
 798:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = CapSense_1_curRxIOPtr;
 799:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr->numCols
 800:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 801:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Connect first Tx and first Rx IOs for scan */
 802:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 803:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 804:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 805:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 806:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostMultiScan;
 807:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 808:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 809:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 810:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
 811:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 812:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 813:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set scan status, enter critical section and initiate scan */
 815:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_dsRam.status |= CapSense_1_SW_STS_BUSY;
 816:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
 818:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****            (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
 819:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****            (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 820:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
 821:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 822:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsCSXStartSample();
 823:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 824:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 825:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 826:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 827:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXScanExt()
 829:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 16


 830:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 831:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 832:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Starts the CSX conversion on the preconfigured sensor. This function requires
 833:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  using the CapSense_1_CSXSetupWidgetExt() function to set up a
 834:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  widget.
 835:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 836:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 837:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function performs single scanning of one sensor in the widget configured
 838:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  by the CapSense_1_CSXSetupWidgetExt() function. It does the following
 839:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  tasks:
 840:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    1. Sets a busy flag in the CapSense_1_dsRam structure.
 841:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    2. Configures the Tx clock frequency.
 842:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    3. Configures the Modulator clock frequency.
 843:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    4. Configures the IDAC value.
 844:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    5. Starts single scanning.
 845:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 846:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 847:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 848:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example). This
 849:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  function is called when no scanning is in progress. I.e.
 850:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
 851:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 852:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  The sensor must be preconfigured by using the
 853:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXSetupWidgetExt() API prior to calling this function.
 854:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  The sensor remains ready for the next scan if a previous scan was triggered
 855:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  by using the CapSense_1_CSXScanExt() function. In this case, calling
 856:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXSetupWidgetExt() is not required every time before the
 857:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXScanExt() function. If a previous scan was triggered in
 858:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  any other way - CapSense_1_Scan(), CapSense_1_ScanAllWidgets()
 859:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  or CapSense_1_RunTuner() - (see the CapSense_1_RunTuner() function
 860:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  description for more details), the sensor must be preconfigured again by
 861:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  using the CapSense_1_CSXSetupWidgetExt() API prior to calling the
 862:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXScanExt() function.
 863:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 864:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  If disconnection of the sensors is required after calling
 865:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXScanExt(), the CapSense_1_CSXDisconnectTx() and
 866:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXDisconnectRx() APIs can be used.
 867:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 868:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 869:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 870:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXScanExt(void)
 871:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 872:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 873:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
 874:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 875:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 876:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 877:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 878:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (0u != CapSense_1_curRamSnsPtr->subConvNum)
 879:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 880:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Set busy flag and start conversion */
 881:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.status |= CapSense_1_SW_STS_BUSY;
 882:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 883:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
 884:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
 885:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 886:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 17


 887:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 888:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
 889:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 890:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
 891:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set busy flag and start conversion */
 892:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_dsRam.status |= CapSense_1_SW_STS_BUSY;
 893:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 894:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
 895:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****            (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
 896:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****            (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 897:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
 898:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 899:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsCSXStartSample();
 900:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 901:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 902:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 903:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 904:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 905:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXPostMultiScan
 906:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 907:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 908:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 909:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   ISR function implements the multiple-sensor scanning for un-ganged CSX widgets.
 910:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function is called by the Component ISR only, it should not be used by
 911:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the application layer.
 912:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 913:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 914:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 915:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostMultiScan(void)
 916:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 917:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
 918:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_EntryCallback();
 919:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_ENTRY_CALLBACK */
 920:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 921:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
 922:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] = \
 923:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                              (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
 924:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 925:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 926:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
 927:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 928:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 929:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
 930:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_scanFreqIndex++;
 931:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 932:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 933:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeImoFreq((uint32)CapSense_1_scanFreqIndex);
 934:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
 935:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeClkFreq((uint32)CapSense_1_scanFreqIndex);
 936:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 937:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 938:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
 939:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 940:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
 941:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 942:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 943:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 18


 944:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
 945:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 946:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 947:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 948:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
 949:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
 950:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
 951:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 952:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 953:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 954:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 955:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 956:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect Tx/Rx electrodes of previously scanned sensor as preparation for next
 957:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr);
 958:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
 959:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 960:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
 961:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 962:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 963:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
 964:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_sensorIndex++;
 965:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 966:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment sensor pointers */
 967:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
 968:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curWdgtTotalTx--;
 969:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalTx > 0u)
 970:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 971:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr++;
 972:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 973:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
 974:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 975:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalRx--;
 976:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         if (CapSense_1_curWdgtTotalRx > 0u)
 977:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
 978:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curRxIOPtr++;
 979:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curWdgtTotalTx  = CapSense_1_curFlashWdgtPtr->numRows;
 980:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_
 981:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curTxIOPtr = & CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdg
 982:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
 983:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 984:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while ((CapSense_1_curWdgtTotalRx != 0u) && (CapSense_1_curRamSnsPtr->subConvNum 
 985:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 986:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Perform the next scan or switch to the next widget */
 987:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if(CapSense_1_curWdgtTotalRx != 0u)
 988:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 989:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect Tx/Rx electrodes for the next scan */
 990:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 991:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 992:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
 993:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsCSXStartSample();
 994:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
 995:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
 996:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 997:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
 998:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_requestScanAllWidget != 0u)
 999:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1000:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_SsPostAllWidgetsScan();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 19


1001:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1002:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1003:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1004:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_dsRam.scanCounter++;
1005:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1006:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1007:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1008:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1009:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1010:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
1011:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  Disconnect Tx electrodes of previously scanned sensor as
1012:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  preparation for next sensor scan
1013:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
1014:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectTx (CapSense_1_curTxIOPtr);
1015:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1016:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1017:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_sensorIndex++;
1018:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1019:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
1020:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  Initiate scan for next sensor in widget, if all the sensors in
1021:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  widget are not scanned
1022:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
1023:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curWdgtTotalTx--;
1024:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if (CapSense_1_curWdgtTotalTx > 0u)
1025:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1026:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /*
1027:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  1. Increment pointer to next Tx
1028:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  2. Connect next Rx for scan
1029:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  3. Increment pointer to sns data
1030:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     */
1031:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curTxIOPtr++;
1032:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectTx (CapSense_1_curTxIOPtr);
1033:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
1034:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1035:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1036:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsCSXStartSample();
1037:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1038:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1039:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Check if all Rx are looped through */
1040:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
1041:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1042:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curWdgtTotalRx--;
1043:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalRx > 0u)
1044:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1045:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /*
1046:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  1. Disconnect current Rx electrode
1047:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  2. Connect next Rx electrode
1048:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1049:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  4. Find first Tx electrode again
1050:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  5. Connect first Tx electrode
1051:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         */
1052:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
1053:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr++;
1054:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
1055:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalTx  = CapSense_1_curFlashWdgtPtr->numRows;
1056:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curF
1057:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = & CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 20


1058:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
1059:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1060:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Increment RAM sensor pointer pointer */
1061:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRamSnsPtr++;
1062:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1063:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Initiate sample */
1064:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_SsCSXStartSample();
1065:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1066:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1067:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1068:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* If all the sensors are scanned, disconnect Tx */
1069:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
1070:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1071:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1072:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         if (CapSense_1_requestScanAllWidget != 0u)
1073:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1074:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_SsPostAllWidgetsScan();
1075:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1076:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         else
1077:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1078:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             /*
1079:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *  All pending scans completed,
1080:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *    1. update the counter to indicat same
1081:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
1082:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             */
1083:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.scanCounter++;
1084:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1085:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1086:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1087:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1088:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1089:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1090:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1091:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_EXIT_CALLBACK
1092:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_ExitCallback();
1093:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_EXIT_CALLBACK */
1094:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1095:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1096:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1097:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXPostMultiScanGanged
1099:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1100:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1101:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1102:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1103:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1104:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the application layer.
1105:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1106:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1107:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1108:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1109:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the application layer.
1110:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1111:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1112:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_CSX_GANGED_SNS_EN == 1u)
1113:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1114:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostMultiScanGanged(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 21


1115:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1116:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 numElectrodes;
1117:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1118:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
1119:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_EntryCallback();
1120:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_ENTRY_CALLBACK */
1121:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1122:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
1123:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] = \
1124:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
1125:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1126:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1127:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1128:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
1129:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1130:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1131:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_scanFreqIndex++;
1132:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1133:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
1134:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeImoFreq((uint32)CapSense_1_scanFreqIndex);
1135:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
1136:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeClkFreq((uint32)CapSense_1_scanFreqIndex);
1137:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
1138:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1139:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
1140:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1141:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
1142:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
1143:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1144:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
1145:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1146:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1147:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1148:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
1149:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
1150:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
1151:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
1152:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
1153:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1154:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
1155:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1156:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1157:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect Tx electrodes of previously scanned sensor as preparation for next se
1158:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangTxPtr->numPins;
1159:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
1160:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
1161:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1162:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr++);
1163:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
1164:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1165:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect Rx electrodes of previously scanned sensor as preparation for next se
1166:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangRxPtr->numPins;
1167:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId];
1168:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
1169:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1170:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr++);
1171:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 22


1172:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1173:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1174:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
1175:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
1176:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1177:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
1178:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_sensorIndex++;
1179:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1180:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment RAM sensor pointer */
1181:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
1182:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curWdgtTotalTx--;
1183:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalTx > 0u)
1184:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1185:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curGangTxPtr++;
1186:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1187:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1188:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1189:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1190:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalRx--;
1191:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         if (CapSense_1_curWdgtTotalRx > 0u)
1192:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1193:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curGangRxPtr++;
1194:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curWdgtTotalTx = CapSense_1_curFlashWdgtPtr->numRows;
1195:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
1196:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curGangTxPtr += CapSense_1_curFlashWdgtPtr->numCols;
1197:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1198:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1199:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while ((CapSense_1_curWdgtTotalRx != 0u) && (CapSense_1_curRamSnsPtr->subConvNum 
1200:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1201:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if(CapSense_1_curWdgtTotalRx != 0u)
1202:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1203:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1204:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangTxPtr->numPins;
1205:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId]
1206:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
1207:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1208:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
1209:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
1210:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1211:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1212:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangRxPtr->numPins ;
1213:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId]
1214:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
1215:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1216:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
1217:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
1218:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1219:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1220:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsCSXStartSample();
1221:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1222:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
1223:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1224:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
1225:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_requestScanAllWidget != 0u)
1226:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1227:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_SsPostAllWidgetsScan();
1228:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 23


1229:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1230:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1231:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_dsRam.scanCounter++;
1232:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1233:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1234:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1235:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1236:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1237:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect ALL pins of previously scanned Tx */
1238:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangTxPtr->numPins ;
1239:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
1240:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
1241:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1242:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectTx (CapSense_1_curTxIOPtr++);
1243:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
1244:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1245:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1246:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1247:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_sensorIndex++;
1248:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1249:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Check if all Tx are scanned, if not, initiate scan for next Tx */
1250:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curWdgtTotalTx--;
1251:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if (CapSense_1_curWdgtTotalTx > 0u)
1252:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1253:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /*
1254:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  1. Find pointer of next Tx (ganged)
1255:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  2. Connect all Tx pins
1256:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     */
1257:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangTxPtr++;
1258:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangTxPtr->numPins ;
1259:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId]
1260:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
1261:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1262:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
1263:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
1264:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1265:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1266:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment RAM pointer to next sensor */
1267:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
1268:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1269:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Reset scan result holder and initiate scan */
1270:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsCSXStartSample();
1271:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1272:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
1273:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1274:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1275:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curWdgtTotalRx--;
1276:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalRx > 0u)
1277:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1278:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* 1. Disconnect current Rx ALL pins */
1279:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes = CapSense_1_curGangRxPtr->numPins ;
1280:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPi
1281:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         do
1282:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1283:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr++);
1284:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             numElectrodes--;
1285:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 24


1286:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1287:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* 2. Connect next Rx ALL pins */
1288:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curGangRxPtr++;
1289:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes = CapSense_1_curGangRxPtr->numPins ;
1290:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPi
1291:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         do
1292:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1293:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
1294:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             numElectrodes--;
1295:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1296:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1297:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /*
1298:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1299:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  4. Find first Tx  again
1300:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  5. Connect first Tx ALL pins
1301:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         */
1302:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalTx = CapSense_1_curFlashWdgtPtr->numRows;
1303:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
1304:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curGangTxPtr += CapSense_1_curFlashWdgtPtr->numCols;
1305:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1306:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* 6. Connect Tx ALL pins */
1307:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes = CapSense_1_curGangTxPtr->numPins ;
1308:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPi
1309:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         do
1310:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1311:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
1312:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             numElectrodes--;
1313:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1314:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1315:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Increment RAM pointer to next sensor */
1316:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRamSnsPtr++;
1317:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1318:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Reset scan result holder and initiate scan */
1319:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_SsCSXStartSample();
1320:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1321:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1322:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1323:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Disconnect ALL electrodes of previously scanned Rx */
1324:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes = CapSense_1_curGangRxPtr->numPins ;
1325:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPi
1326:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         do
1327:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1328:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr++);
1329:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             numElectrodes--;
1330:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1331:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1332:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1333:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         if (CapSense_1_requestScanAllWidget != 0u)
1334:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1335:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_SsPostAllWidgetsScan();
1336:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1337:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         else
1338:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1339:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             /*
1340:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *  All pending scans completed,
1341:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *    1. update the counter to indicate same
1342:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 25


1343:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             */
1344:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.scanCounter++;
1345:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1346:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1347:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1348:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1349:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1350:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1351:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1352:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_EXIT_CALLBACK
1353:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_ExitCallback();
1354:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_EXIT_CALLBACK */
1355:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1356:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1357:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif  /* (CapSense_1_CSX_GANGED_SNS_EN == 1u) */
1358:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1359:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1360:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXPostSingleScan
1361:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1362:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1363:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1364:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   The ISR function for single-sensor scanning implementation.
1365:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1366:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1367:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function is used by CapSense_1 ISR in the CSX scanning mode to implement
1368:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the single-sensor scanning.
1369:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function should not be used by the application layer.
1370:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1371:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1372:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1373:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostSingleScan(void)
1374:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1375:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
1376:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_EntryCallback();
1377:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_ENTRY_CALLBACK */
1378:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1379:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /*
1380:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     * Copy scan result into sensor raw count array and clear busy flag
1381:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    No sensor is connected or disconnected in this function
1382:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    Calling CapSense_1_ScanExt from application would perform
1383:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    one more scan of same sensor. Specifically for low-power mode.
1384:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     */
1385:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] =
1386:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
1387:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1388:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1389:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1390:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
1391:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1392:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1393:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_scanFreqIndex++;
1394:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1395:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
1396:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeImoFreq((uint32)CapSense_1_scanFreqIndex);
1397:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
1398:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeClkFreq((uint32)CapSense_1_scanFreqIndex);
1399:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 26


1400:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1401:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
1402:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1403:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
1404:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
1405:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1406:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
1407:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1408:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1409:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1410:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
1411:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
1412:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
1413:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
1414:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
1415:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1416:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
1417:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /*
1418:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             * All pending scans completed,
1419:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *   1. Update the counter to indicate same
1420:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *   2. Clear busy state as scanning is completed
1421:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             */
1422:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.scanCounter++;
1423:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1424:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1425:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1426:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_EXIT_CALLBACK
1427:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_ExitCallback();
1428:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_EXIT_CALLBACK */
1429:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1430:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1431:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1432:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXCalibrateWidget
1433:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1434:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1435:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1436:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calibrates the raw count values of all the sensors/nodes in a CSX widget.
1437:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1438:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1439:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Performs a successive approximation search algorithm to find appropriate
1440:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  IDAC values for sensors in the specified widget that provides a raw count
1441:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  to the level specified by the target parameter.
1442:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1443:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is available when the CSX Enable IDAC auto-calibration
1444:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  parameter is enabled.
1445:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1446:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param widgetId
1447:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the ID number of the CSX widget to calibrate its raw count.
1448:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the
1449:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1 Configuration header file defined as
1450:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_<WidgetName>_WDGT_ID.
1451:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1452:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param target
1453:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the calibration target in percentages of the maximum raw count.
1454:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1455:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1456:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 27


1457:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1458:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXCalibrateWidget(uint32 widgetId, uint16 target)
1459:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1460:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
1461:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 rawTarget;
1462:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Counter for loop execution */
1463:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 totalSns;
1464:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Counter for loop execution */
1465:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 calibrationIndex;
1466:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Currently used IDAC-bit */
1468:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint8 curIdacMask = (1u << (CapSense_1_CSX_IDAC_BITS_USED-1u));
1469:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Next used IDAC-bit */
1470:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint8 nextIdacMask = (curIdacMask >> 1u);
1471:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1472:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* initialize ptr to sensor structures */
1473:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)CapSense_1_dsFlash.wdgtArray[widgetId].p
1474:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1475:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1476:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Calculate target raw count */
1477:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod  = CapSense_1_SsCalcCsxScanPeriod(
1478:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
1479:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         rawTarget = CapSense_1_csxScanPeriod;
1480:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / CapSense_1_PERCENTAGE_100;
1481:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1482:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1483:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if (CapSense_1_SENSE_METHOD_CSX_E ==
1484:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****        CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1485:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1486:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Find out total sensors/nodes in widget */
1487:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         totalSns = ((uint32)CapSense_1_dsFlash.wdgtArray[widgetId].numCols *
1488:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     (uint32)CapSense_1_dsFlash.wdgtArray[widgetId].numRows);
1489:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1490:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Clear raw count registers and IDAC registers of all the sensors/nodes */
1491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1492:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1493:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_0] = 0u;
1494:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_0] = curIdacMask;
1495:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1496:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_1] = 0u;
1497:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_2] = 0u;
1498:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] = curIdacMask;
1499:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] = curIdacMask;
1500:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
1501:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr++;
1502:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1503:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1504:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Perform binary search for accurate IDAC value for each sensor/node */
1505:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         do
1506:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1507:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Scan all the sensors/nodes in widget */
1508:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (void)CapSense_1_SetupWidget(widgetId);
1509:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (void)CapSense_1_Scan();
1510:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1511:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             while ((CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY) != 0u)
1512:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
1513:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 28


1514:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1515:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Get access to sensor data */
1516:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)CapSense_1_dsFlash.wdgtArray[wid
1517:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1518:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Check raw count and adjust IDAC, loop through all the sensors/nodes */
1519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1520:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
1521:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Calculate raw count target for specified node */
1522:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1523:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     rawTarget = (CapSense_1_SsCSXOversample() * target) / CapSense_1_PERCENTAGE_100
1524:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif
1525:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1526:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Check if current raw count is above target,
1527:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *   if yes, clear the MS bit of bit
1528:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *   if no, keep the MS bit and set next bit
1529:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
1530:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if (CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_0] > rawTarget)
1531:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1532:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_0] &= (uint8)(~curIda
1533:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1534:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_0] |= nextIdacMask;
1535:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1536:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1537:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_1] > rawTarget)
1538:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1539:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] &= (uint8)(~cu
1540:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1541:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1542:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_2] > rawTarget)
1543:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1544:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] &= (uint8)(~cu
1545:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1546:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1547:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] |= nextIdacMask;
1548:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] |= nextIdacMask;
1549:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif
1550:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr++;
1551:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
1552:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1553:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Shift both current idac and pre Idac values to right by 1 */
1554:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             curIdacMask = nextIdacMask;
1555:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             nextIdacMask = nextIdacMask >> 1u;
1556:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1557:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         while (curIdacMask != 0u);
1558:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1559:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1560:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1561:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (CapSense_1_CSX_IDAC_AUTOCAL_EN == CapSense_1_ENABLE) */
1562:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1563:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
1564:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1565:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXStartSample
1566:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1567:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1568:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1569:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1570:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 29


1571:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1572:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1573:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1574:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXStartSample(void)
1576:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1577:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 tmpRegVal;
1578:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1579:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = (uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex];
1580:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = (tmpRegVal & CapSense_1_IDAC_MOD_VAL_MASK) | CapSense_1_DEFAULT_CSD_IDACA_CFG;
1581:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, tmpRegVal);
1582:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1583:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1584:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1585:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod = (uint16)CapSense_1_SsCSXOversample();
1586:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (uint32)CapSense_1_curRamSnsPtr->subConvNum);
1587:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1588:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1589:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Clear scan result holder */
1590:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_csxRawCount = 0u;
1591:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1592:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_START_SAMPLE_CALLBACK
1593:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_StartSampleCallback(CapSense_1_widgetIndex, CapSense_1_sensorIndex);
1594:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_START_SAMPLE_CALLBACK */
1595:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1596:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_SsCSXStartSampleExt();
1597:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1598:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #else
1599:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1600:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1601:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXStartSample
1602:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1603:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1604:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1605:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1606:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1607:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param widgetIndex The ID of the widget to be calibrated.
1608:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1609:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1610:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1611:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1612:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXStartSample(void)
1613:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1614:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint8 critSect;
1615:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 tmpRegVal;
1616:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1617:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1618:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(CapSense_1_IDAC_PTR);
1619:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal &= ~(CapSense_1_IDAC_MOD_MASK);
1620:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal |= (CapSense_1_IDAC_MOD_MODE_VARIABLE | (uint32)CapSense_1_curRamSnsPtr->idacComp[Cap
1621:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_PTR, tmpRegVal);
1622:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1623:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1624:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Clear scan result holder */
1625:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_csxRawCount = 0u;
1626:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1627:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_START_SAMPLE_CALLBACK
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 30


1628:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_StartSampleCallback(CapSense_1_widgetIndex, CapSense_1_sensorIndex);
1629:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_START_SAMPLE_CALLBACK */
1630:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1631:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1632:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1633:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod = (uint16)CapSense_1_SsCSXOversample();
1634:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1635:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1636:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Disable interrupts and initiate scan */
1637:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1638:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_SsCSXStartSampleExt();
1639:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1640:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1641:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1642:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1643:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1644:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXConnectTx
1645:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1646:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1647:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1648:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Connects a Tx electrode to the CSX scanning hardware.
1649:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1650:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1651:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function connects a port pin (Tx electrode) to the CSD_SENSE signal.
1652:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  It is assumed that drive mode of the port pin is already set to STRONG
1653:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  in the HSIOM_PORT_SELx register.
1654:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1655:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1656:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1657:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1658:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  electrode for example).
1659:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1660:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param txPtr
1661:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1662:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  to be connected to the sensing HW block as a Tx pin.
1663:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1664:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1665:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXConnectTx(CapSense_1_FLASH_IO_STRUCT const *txPtr)
1666:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1667:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
1668:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1669:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->pcPtr);
1670:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |= (CapSense_1_GPIO_STRGDRV << txPtr->shift);
1671:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->pcPtr, regValue);
1672:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1673:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1674:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |= (CapSense_1_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift);
1675:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1676:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1677:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1678:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1679:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXConnectRx
1680:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1681:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1682:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1683:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Connects an Rx electrode to the CSX scanning hardware.
1684:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 31


1685:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1686:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function connects a port pin (Rx electrode) to AMUXBUS-A and sets
1687:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  drive mode of the port pin to High-Z in the GPIO_PRT_PCx register.
1688:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1689:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1690:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1691:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1692:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  electrode for example).
1693:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1694:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param rxPtr
1695:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1696:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  to be connected to the sensing HW block as an Rx pin.
1697:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1698:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1699:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXConnectRx(CapSense_1_FLASH_IO_STRUCT const *rxPtr)
1700:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1701:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
1702:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1703:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->pcPtr);
1704:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(CapSense_1_GPIO_PC_MASK << rxPtr->shift);
1705:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
1706:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1707:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1708:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |=  (CapSense_1_HSIOM_SEL_AMUXA << rxPtr->hsiomShift);
1709:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1710:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1711:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1712:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1713:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXDisconnectTx
1714:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1715:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1716:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1717:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Disconnects a Tx electrode from the CSX scanning hardware.
1718:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1719:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1720:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function disconnects a port pin (Tx electrode) from the CSD_SENSE
1721:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  signal and configures the port pin to the strong drive mode. It is assumed
1722:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  that the data register (GPIO_PRTx_DR) of the port pin is already 0.
1723:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1724:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1725:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1726:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1727:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  electrode for example).
1728:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1729:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param txPtr
1730:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a Tx pin
1731:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1732:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1733:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1734:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXDisconnectTx(CapSense_1_FLASH_IO_STRUCT const *txPtr)
1735:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1736:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
1737:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1738:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1739:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
1740:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1741:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 32


1742:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1743:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1744:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXDisconnectRx
1745:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1746:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1747:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1748:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Disconnects an Rx electrode from the CSX scanning hardware.
1749:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1750:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1751:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function disconnects a port pin (Rx electrode) from AMUXBUS_A and
1752:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  configures the port pin to the strong drive mode. It is assumed that the
1753:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  data register (GPIO_PRTx_DR) of the port pin is already 0.
1754:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1755:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1756:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1757:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for
1758:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  an electrode for example).
1759:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1760:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param rxPtr
1761:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to an Rx pin
1762:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1763:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1764:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1765:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXDisconnectRx(CapSense_1_FLASH_IO_STRUCT const *rxPtr)
1766:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1767:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
1768:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1769:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1770:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
1771:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1772:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1773:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->pcPtr);
1774:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(CapSense_1_GPIO_PC_MASK << rxPtr->shift);
1775:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |=  (CapSense_1_GPIO_STRGDRV << rxPtr->shift);
1776:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
1777:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1778:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->drPtr);
1779:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
1780:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
1781:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1782:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1783:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1784:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1785:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXGetTxClkDivider
1786:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1787:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1788:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1789:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value for one-dimension widgets
1790:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  and the Column Sense Clock divider value for two-dimension widgets.
1791:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1792:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1793:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value based on the Component
1794:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  configuration. The function is applicable for one-dimension widgets and for
1795:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  two-dimension widgets.
1796:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1797:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param
1798:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  widgetId Specifies the ID of the widget.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 33


1799:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1800:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \return The Sense Clock Divider value for one-dimension widgets
1801:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *         and the Column Sense Clock divider value for two-dimension widgets.
1802:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1803:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1804:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** uint32 CapSense_1_SsCSXGetTxClkDivider(uint32 widgetId)
1805:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1806:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 retVal;
1807:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1808:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Get sense divider based on configuration */
1809:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
1810:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
1811:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1812:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1813:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
1814:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1815:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         retVal = (uint32)(ptrWdgt->snsClk);
1816:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
1817:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         retVal = (uint32)CapSense_1_dsRam.snsCsxClk;
1818:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
1819:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1820:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if(widgetId == 0uL)
1821:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1822:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         ;
1823:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1824:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1825:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     return (retVal);
1826:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1827:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1828:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1829:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1830:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCalcCsxScanPeriod
1831:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1832:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1833:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1834:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calculates scan period for a desired CSX widget.
1835:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1836:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1837:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function calculates a scan period for a desired CSX widget considering
1838:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  common Tx clock option.
1839:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1840:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param wdgtPtr
1841:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  The pointer to a register map object that contains widget information.
1842:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1843:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \return
1844:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Returns the CSX scan period for the widget.
1845:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1846:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1847:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_SsCalcCsxScanPeriod(CapSense_1_RAM_WD_BASE_STRUCT const *wdgtPtr)
1848:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
  27              		.loc 1 1848 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
1849:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 temp;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 34


1850:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1851:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
1852:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = (uint32)(wdgtPtr->snsClk);
1853:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
1854:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = (uint32)(CapSense_1_dsRam.snsCsxClk);
  33              		.loc 1 1854 0
  34 0000 034B     		ldr	r3, .L2
  35 0002 5B8C     		ldrh	r3, [r3, #34]
  36              	.LVL1:
1855:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
1856:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1857:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
1858:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp  = LO16((uint32)wdgtPtr->resolution * (temp - CapSense_1_CSX_DEADBAND_CYCLES_NUMBER));
  37              		.loc 1 1858 0
  38 0004 0288     		ldrh	r2, [r0]
  39 0006 981E     		subs	r0, r3, #2
  40              	.LVL2:
  41 0008 5043     		muls	r0, r2
  42 000a 80B2     		uxth	r0, r0
  43              	.LVL3:
1859:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
1860:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1861:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             temp = (temp / (uint32)CapSense_1_dsRam.modCsxClk);
1862:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1863:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1864:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = ((uint32)wdgtPtr->resolution * CapSense_1_NUM_HALF_CYCLES * temp);
1865:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1866:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1867:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* return the scan period */
1868:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     return ((uint16)temp);
1869:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
  44              		.loc 1 1869 0
  45              		@ sp needed
  46 000c 7047     		bx	lr
  47              	.L3:
  48 000e C046     		.align	2
  49              	.L2:
  50 0010 00000000 		.word	CapSense_1_dsRam
  51              		.cfi_endproc
  52              	.LFE16:
  53              		.size	CapSense_1_SsCalcCsxScanPeriod, .-CapSense_1_SsCalcCsxScanPeriod
  54              		.global	__aeabi_uidiv
  55              		.section	.text.CapSense_1_SsCSXStartSample,"ax",%progbits
  56              		.align	2
  57              		.code	16
  58              		.thumb_func
  59              		.type	CapSense_1_SsCSXStartSample, %function
  60              	CapSense_1_SsCSXStartSample:
  61              	.LFB10:
1576:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 tmpRegVal;
  62              		.loc 1 1576 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66 0000 10B5     		push	{r4, lr}
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 4, -8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 35


  69              		.cfi_offset 14, -4
1579:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = (tmpRegVal & CapSense_1_IDAC_MOD_VAL_MASK) | CapSense_1_DEFAULT_CSD_IDACA_CFG;
  70              		.loc 1 1579 0
  71 0002 344B     		ldr	r3, .L12
  72 0004 1A68     		ldr	r2, [r3]
  73 0006 344B     		ldr	r3, .L12+4
  74 0008 1B78     		ldrb	r3, [r3]
  75 000a D318     		adds	r3, r2, r3
  76 000c 5B7D     		ldrb	r3, [r3, #21]
  77              	.LVL4:
1580:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, tmpRegVal);
  78              		.loc 1 1580 0
  79 000e 334A     		ldr	r2, .L12+8
  80 0010 1343     		orrs	r3, r2
  81              	.LVL5:
1581:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  82              		.loc 1 1581 0
  83 0012 334A     		ldr	r2, .L12+12
  84 0014 1360     		str	r3, [r2]
1590:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  85              		.loc 1 1590 0
  86 0016 0022     		movs	r2, #0
  87 0018 324B     		ldr	r3, .L12+16
  88              	.LVL6:
  89 001a 1A80     		strh	r2, [r3]
  90              	.LVL7:
  91              	.LBB4:
  92              	.LBB5:
1870:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1871:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1872:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1873:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1874:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXOversample
1875:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1876:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1877:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1878:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Calculates the scan period of specific node.
1879:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1880:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1881:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Calculates the scan period of specific node that is used as maximum
1882:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   raw count at raw count inversion (CapSense_1_csxScanPeriod variable).
1883:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   The CapSense_1_curFlashWdgtPtr and CapSense_1_curRamSnsPtr
1884:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   must be configured to proper widget/sensor before calling this function.
1885:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1886:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \return
1887:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Returns the scan period of specific node (used as maximum raw count)
1888:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1889:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1890:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint32 CapSense_1_SsCSXOversample(void)
1891:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1892:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 temp;
1893:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1894:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
1895:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
1896:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_curFlashWdgtPtr->ptr2WdgtRa
1897:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = (uint32)(curRamWdgtBasePtr->snsClk);
1898:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 36


1899:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = (uint32)(CapSense_1_dsRam.snsCsxClk);
1900:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
1901:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1902:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
1903:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp  = LO16((uint32)CapSense_1_curRamSnsPtr->subConvNum * (temp - CapSense_1_CSX_DEADBAND_
1904:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
1905:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1906:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             temp = (temp / (uint32)CapSense_1_dsRam.modCsxClk);
1907:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1908:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1909:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = ((uint32)CapSense_1_curRamSnsPtr->subConvNum * CapSense_1_NUM_HALF_CYCLES * temp);
1910:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1911:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1912:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* return the scan period */
1913:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     return (temp);
1914:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1915:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1916:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1917:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1918:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
1919:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /**
1920:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \cond SECTION_C_INTERRUPT
1921:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \addtogroup group_c_interrupt
1922:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \{
1923:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** */
1924:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1925:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXScanISR
1926:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1927:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1928:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1929:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This is an internal ISR function to handle the CSX sensing method operation.
1930:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1931:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1932:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This handler covers the following functionality:
1933:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - Read the result of the measurement and store it into the corresponding register of
1934:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *     the data structure.
1935:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - If the Noise Metric functionality is enabled, then check the number of bad
1936:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *     conversions and repeat the scan of the current sensor of the number of bad
1937:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *     conversions is greater than the Noise Metric Threshold.
1938:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - Initiate the scan of the next sensor for multiple sensor scanning mode.
1939:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - Update the Status register in the data structure.
1940:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - Switch the HW block to the default state if scanning of all the sensors is
1941:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *     completed.
1942:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1943:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1944:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** CY_ISR(CapSense_1_CSXScanISR)
1945:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1946:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(0u != CapSense_1_CSX_NOISE_METRIC_EN)
1947:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 tmpRegVal;
1948:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (0u != CapSense_1_CSX_NOISE_METRIC_EN) */
1949:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(0u != CapSense_1_CSX_NOISE_METRIC_EN)
1950:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static uint32 CapSense_1_resamplingCyclesCnt = CapSense_1_RESAMPLING_CYCLES_MAX_NUMBER;
1951:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (0u != CapSense_1_CSX_NOISE_METRIC_EN) */
1952:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1953:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CyIntDisable(CapSense_1_ISR_NUMBER);
1954:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1955:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_DEFAULT_CSD_INTR_CFG);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 37


1956:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1957:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_csxRawCount  = (uint16)(CY_GET_REG32(CapSense_1_RESULT_VAL1_PTR) &\
1958:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                                          CapSense_1_RESULT_VAL1_VALUE_MASK);
1959:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1960:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_csxRawCount += (uint16)(CY_GET_REG32(CapSense_1_RESULT_VAL2_PTR) &\
1961:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                                          CapSense_1_RESULT_VAL2_VALUE_MASK);
1962:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1963:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* This workaround neded to prevent overflow in the SW register map. Cypress ID #234358 */
1964:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if(CapSense_1_csxRawCount > CapSense_1_csxScanPeriod)
1965:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1966:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxRawCount = CapSense_1_csxScanPeriod;
1967:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1968:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1969:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(0u != CapSense_1_CSX_NOISE_METRIC_EN)
1970:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(CapSense_1_RESULT_VAL1_PTR) >> CapSense_1_RESULT_VAL1_BAD_CONVS_SHIFT;
1971:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1972:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if((tmpRegVal > CapSense_1_CSX_NOISE_METRIC_TH) && (CapSense_1_resamplingCyclesCnt > 0uL))
1973:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1974:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SCAN_CSD_SEQ_START_CFG);
1975:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_resamplingCyclesCnt--;
1976:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1977:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     else
1978:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1979:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_CSXPostScanApiPtr();
1980:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_resamplingCyclesCnt = CapSense_1_RESAMPLING_CYCLES_MAX_NUMBER;
1981:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1982:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #else
1983:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_CSXPostScanApiPtr();
1984:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (0u != CapSense_1_CSX_NOISE_METRIC_EN) */
1985:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1986:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if(CapSense_1_NOT_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
1987:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1988:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_DEFAULT_CSD_CONFIG_CFG);
1989:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_DEFAULT_CSD_CSDCMP_CFG);
1990:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, CapSense_1_DEFAULT_CSD_IDACA_CFG);
1991:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1992:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1993:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CyIntEnable(CapSense_1_ISR_NUMBER);
1994:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1995:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1996:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /** \}
1997:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \endcond */
1998:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1999:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
2000:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXStartSampleExt
2001:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
2002:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
2003:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
2004:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Starts the HW sequencer to perform the CSX conversion.
2005:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   specific widget.
2006:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
2007:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
2008:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function covers the following functionality:
2009:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *      1. Configures the HW sequencer to perform the coarse initialization.
2010:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *      2. Waiting for completion of the coarse initialization.
2011:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *      3. Configures the HW sequencer to perform the normal conversion.
2012:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *      4. Starts the normal conversion
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 38


2013:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
2014:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
2015:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static CY_INLINE void CapSense_1_SsCSXStartSampleExt(void)
2016:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
2017:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 filterDelay;
2018:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 watchdogCounter;
2019:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2020:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 sampleClkFreqHz;
2021:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2022:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2023:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the coarse initialization. */
2024:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_CONFIG_PTR,           CapSense_1_DEFAULT_CSD_CONFIG_CFG);
  93              		.loc 1 2024 0
  94 001c 324A     		ldr	r2, .L12+20
  95 001e 334B     		ldr	r3, .L12+24
  96 0020 1A60     		str	r2, [r3]
2025:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_HSCMP_PTR,            CapSense_1_PRECHARGE_CSD_HSCMP_CFG);
  97              		.loc 1 2025 0
  98 0022 0122     		movs	r2, #1
  99 0024 324B     		ldr	r3, .L12+28
 100 0026 1A60     		str	r2, [r3]
2026:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR,      CapSense_1_PRECHARGE_CSD_SW_HS_P_SEL_CFG);
 101              		.loc 1 2026 0
 102 0028 1123     		movs	r3, #17
 103 002a 324A     		ldr	r2, .L12+32
 104 002c 1360     		str	r3, [r2]
2027:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR,      CapSense_1_PRECHARGE_CSD_SW_HS_N_SEL_CFG);
 105              		.loc 1 2027 0
 106 002e 8021     		movs	r1, #128
 107 0030 4904     		lsls	r1, r1, #17
 108 0032 314A     		ldr	r2, .L12+36
 109 0034 1160     		str	r1, [r2]
2028:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR,       CapSense_1_PRECHARGE_CSD_SW_DSI_SEL_CFG);
 110              		.loc 1 2028 0
 111 0036 314A     		ldr	r2, .L12+40
 112 0038 1360     		str	r3, [r2]
2029:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,    CapSense_1_PRECHARGE_CSD_SW_SHIELD_SEL_CFG);
 113              		.loc 1 2029 0
 114 003a 0622     		movs	r2, #6
 115 003c 304B     		ldr	r3, .L12+44
 116 003e 1A60     		str	r2, [r3]
2030:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR,    CapSense_1_PRECHARGE_CSD_SW_FW_MOD_SEL_CFG);
 117              		.loc 1 2030 0
 118 0040 304A     		ldr	r2, .L12+48
 119 0042 314B     		ldr	r3, .L12+52
 120 0044 1A60     		str	r2, [r3]
2031:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,   CapSense_1_PRECHARGE_CSD_SW_FW_TANK_SEL_CFG);
 121              		.loc 1 2031 0
 122 0046 314A     		ldr	r2, .L12+56
 123 0048 314B     		ldr	r3, .L12+60
 124 004a 1A60     		str	r2, [r3]
2032:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2033:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
2034:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****        (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
2035:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****        (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
2036:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
2037:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 39


2038:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2039:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SEQ_START_PTR,        CapSense_1_PRECHARGE_CSD_SEQ_START_CFG);
 125              		.loc 1 2039 0
 126 004c 314A     		ldr	r2, .L12+64
 127 004e 324B     		ldr	r3, .L12+68
 128 0050 1A60     		str	r2, [r3]
 129              	.LVL8:
2040:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2041:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Wait for the HSCMP trigger and retutn the sequencer to the IDLE state. */
2042:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     watchdogCounter = CapSense_1_CSX_PRECHARGE_WATCHDOG_CYCLES_NUM;
 130              		.loc 1 2042 0
 131 0052 F023     		movs	r3, #240
 132 0054 9B00     		lsls	r3, r3, #2
 133 0056 00E0     		b	.L5
 134              	.LVL9:
 135              	.L7:
2043:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     while((0u != (CapSense_1_SEQ_START_START_MASK & CY_GET_REG32(CapSense_1_SEQ_START_PTR))) && (0u
2044:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
2045:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         watchdogCounter--;
 136              		.loc 1 2045 0
 137 0058 013B     		subs	r3, r3, #1
 138              	.LVL10:
 139              	.L5:
2043:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     while((0u != (CapSense_1_SEQ_START_START_MASK & CY_GET_REG32(CapSense_1_SEQ_START_PTR))) && (0u
 140              		.loc 1 2043 0
 141 005a 2F4A     		ldr	r2, .L12+68
 142 005c 1268     		ldr	r2, [r2]
 143 005e D207     		lsls	r2, r2, #31
 144 0060 01D5     		bpl	.L6
 145 0062 002B     		cmp	r3, #0
 146 0064 F8D1     		bne	.L7
 147              	.L6:
2046:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
2047:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2048:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Reset the sequencer to the IDLE state if HSCMP not triggered till watchdog period is out. */
2049:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if(0u != (CapSense_1_SEQ_START_START_MASK & CY_GET_REG32(CapSense_1_SEQ_START_PTR)))
 148              		.loc 1 2049 0
 149 0066 2C4B     		ldr	r3, .L12+68
 150              	.LVL11:
 151 0068 1B68     		ldr	r3, [r3]
 152 006a DB07     		lsls	r3, r3, #31
 153 006c 03D5     		bpl	.L8
2050:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
2051:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR,  CapSense_1_DEFAULT_CSD_SEQ_START_CFG);
 154              		.loc 1 2051 0
 155 006e C222     		movs	r2, #194
 156 0070 9200     		lsls	r2, r2, #2
 157 0072 294B     		ldr	r3, .L12+68
 158 0074 1A60     		str	r2, [r3]
 159              	.L8:
2052:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
2053:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2054:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2055:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_1_dsRam.modCsxClk;
 160              		.loc 1 2055 0
 161 0076 2023     		movs	r3, #32
 162 0078 284A     		ldr	r2, .L12+72
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 40


 163 007a D15C     		ldrb	r1, [r2, r3]
 164 007c 2848     		ldr	r0, .L12+76
 165 007e FFF7FEFF 		bl	__aeabi_uidiv
 166              	.LVL12:
2056:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if(sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_12MHZ)
 167              		.loc 1 2056 0
 168 0082 284B     		ldr	r3, .L12+80
 169 0084 9842     		cmp	r0, r3
 170 0086 04D9     		bls	.L10
2057:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
2058:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             filterDelay = CapSense_1_CONFIG_FILTER_DELAY_12MHZ;
2059:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
2060:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else if(sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_24MHZ)
 171              		.loc 1 2060 0
 172 0088 274B     		ldr	r3, .L12+84
 173 008a 9842     		cmp	r0, r3
 174 008c 03D8     		bhi	.L11
2061:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
2062:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             filterDelay = CapSense_1_CONFIG_FILTER_DELAY_24MHZ;
 175              		.loc 1 2062 0
 176 008e 3023     		movs	r3, #48
 177 0090 02E0     		b	.L9
 178              	.L10:
2058:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 179              		.loc 1 2058 0
 180 0092 2023     		movs	r3, #32
 181 0094 00E0     		b	.L9
 182              	.L11:
2063:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
2064:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
2065:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
2066:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             filterDelay = CapSense_1_CONFIG_FILTER_DELAY_48MHZ;
 183              		.loc 1 2066 0
 184 0096 4023     		movs	r3, #64
 185              	.L9:
 186              	.LVL13:
2067:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
2068:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
2069:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         filterDelay = CapSense_1_CONFIG_FILTER_DELAY_12MHZ;
2070:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2071:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2072:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the normal conversion. */
2073:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_PRESCAN_CSD_CONFIG_CFG | filterDelay);
 187              		.loc 1 2073 0
 188 0098 244A     		ldr	r2, .L12+88
 189 009a 1343     		orrs	r3, r2
 190              	.LVL14:
 191 009c 134A     		ldr	r2, .L12+24
 192 009e 1360     		str	r3, [r2]
2074:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_PRESCAN_CSD_CSDCMP_CFG);
 193              		.loc 1 2074 0
 194 00a0 234A     		ldr	r2, .L12+92
 195 00a2 244B     		ldr	r3, .L12+96
 196 00a4 1A60     		str	r2, [r3]
2075:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_HSCMP_PTR, CapSense_1_DEFAULT_CSD_HSCMP_CFG);
 197              		.loc 1 2075 0
 198 00a6 0023     		movs	r3, #0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 41


 199 00a8 1149     		ldr	r1, .L12+28
 200 00aa 0B60     		str	r3, [r1]
2076:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 201              		.loc 1 2076 0
 202 00ac 1149     		ldr	r1, .L12+32
 203 00ae 0B60     		str	r3, [r1]
2077:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 204              		.loc 1 2077 0
 205 00b0 1149     		ldr	r1, .L12+36
 206 00b2 0B60     		str	r3, [r1]
2078:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_DSI_SEL_CFG);
 207              		.loc 1 2078 0
 208 00b4 2320     		movs	r0, #35
 209              	.LVL15:
 210 00b6 1149     		ldr	r1, .L12+40
 211 00b8 0860     		str	r0, [r1]
2079:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 212              		.loc 1 2079 0
 213 00ba 1149     		ldr	r1, .L12+44
 214 00bc 0B60     		str	r3, [r1]
2080:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 215              		.loc 1 2080 0
 216 00be 1249     		ldr	r1, .L12+52
 217 00c0 0B60     		str	r3, [r1]
2081:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 218              		.loc 1 2081 0
 219 00c2 1349     		ldr	r1, .L12+60
 220 00c4 0B60     		str	r3, [r1]
2082:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2083:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Clear all pending interrupts of CSD block */
2084:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_DEFAULT_CSD_INTR_CFG);
 221              		.loc 1 2084 0
 222 00c6 8321     		movs	r1, #131
 223 00c8 4900     		lsls	r1, r1, #1
 224 00ca 1B4B     		ldr	r3, .L12+100
 225 00cc 1960     		str	r1, [r3]
2085:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2086:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Start the normal conversion. */
2087:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SCAN_CSD_SEQ_START_CFG);
 226              		.loc 1 2087 0
 227 00ce 124B     		ldr	r3, .L12+68
 228 00d0 1A60     		str	r2, [r3]
 229              	.LBE5:
 230              	.LBE4:
1597:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #else
 231              		.loc 1 1597 0
 232              		@ sp needed
 233 00d2 10BD     		pop	{r4, pc}
 234              	.L13:
 235              		.align	2
 236              	.L12:
 237 00d4 00000000 		.word	CapSense_1_curRamSnsPtr
 238 00d8 00000000 		.word	CapSense_1_scanFreqIndex
 239 00dc 800E4301 		.word	21171840
 240 00e0 C0010B40 		.word	1074463168
 241 00e4 00000000 		.word	.LANCHOR0
 242 00e8 20100480 		.word	-2147217376
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 42


 243 00ec 00000B40 		.word	1074462720
 244 00f0 80010B40 		.word	1074463104
 245 00f4 80020B40 		.word	1074463360
 246 00f8 84020B40 		.word	1074463364
 247 00fc C0020B40 		.word	1074463424
 248 0100 88020B40 		.word	1074463368
 249 0104 01010100 		.word	65793
 250 0108 B0020B40 		.word	1074463408
 251 010c 10100000 		.word	4112
 252 0110 B4020B40 		.word	1074463412
 253 0114 03030000 		.word	771
 254 0118 40030B40 		.word	1074463552
 255 011c 00000000 		.word	CapSense_1_dsRam
 256 0120 006CDC02 		.word	48000000
 257 0124 001BB700 		.word	12000000
 258 0128 00366E01 		.word	24000000
 259 012c 00100C80 		.word	-2146693120
 260 0130 01030000 		.word	769
 261 0134 8C010B40 		.word	1074463116
 262 0138 F0000B40 		.word	1074462960
 263              		.cfi_endproc
 264              	.LFE10:
 265              		.size	CapSense_1_SsCSXStartSample, .-CapSense_1_SsCSXStartSample
 266              		.section	.text.CapSense_1_SsCSXPostSingleScan,"ax",%progbits
 267              		.align	2
 268              		.code	16
 269              		.thumb_func
 270              		.type	CapSense_1_SsCSXPostSingleScan, %function
 271              	CapSense_1_SsCSXPostSingleScan:
 272              	.LFB8:
1374:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
 273              		.loc 1 1374 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277 0000 10B5     		push	{r4, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 4, -8
 280              		.cfi_offset 14, -4
1385:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
 281              		.loc 1 1385 0
 282 0002 124B     		ldr	r3, .L17
 283 0004 1C68     		ldr	r4, [r3]
 284 0006 1249     		ldr	r1, .L17+4
 285 0008 0B78     		ldrb	r3, [r1]
 286 000a 1248     		ldr	r0, .L17+8
 287 000c 4288     		ldrh	r2, [r0, #2]
 288 000e 0088     		ldrh	r0, [r0]
 289 0010 5B00     		lsls	r3, r3, #1
 290 0012 121A     		subs	r2, r2, r0
 291 0014 1A53     		strh	r2, [r3, r4]
1390:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 292              		.loc 1 1390 0
 293 0016 0878     		ldrb	r0, [r1]
 294 0018 0128     		cmp	r0, #1
 295 001a 07D8     		bhi	.L15
1393:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 43


 296              		.loc 1 1393 0
 297 001c 0130     		adds	r0, r0, #1
 298 001e C0B2     		uxtb	r0, r0
 299 0020 0870     		strb	r0, [r1]
1396:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
 300              		.loc 1 1396 0
 301 0022 FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 302              	.LVL16:
1401:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 303              		.loc 1 1401 0
 304 0026 FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 305              	.LVL17:
 306 002a 0DE0     		b	.L14
 307              	.L15:
1408:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 308              		.loc 1 1408 0
 309 002c 0022     		movs	r2, #0
 310 002e 084B     		ldr	r3, .L17+4
 311 0030 1A70     		strb	r2, [r3]
1411:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
 312              		.loc 1 1411 0
 313 0032 0020     		movs	r0, #0
 314 0034 FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 315              	.LVL18:
1422:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
 316              		.loc 1 1422 0
 317 0038 074B     		ldr	r3, .L17+12
 318 003a 1A89     		ldrh	r2, [r3, #8]
 319 003c 0132     		adds	r2, r2, #1
 320 003e 1A81     		strh	r2, [r3, #8]
1423:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 321              		.loc 1 1423 0
 322 0040 DA68     		ldr	r2, [r3, #12]
 323 0042 8021     		movs	r1, #128
 324 0044 8A43     		bics	r2, r1
 325 0046 DA60     		str	r2, [r3, #12]
 326              	.L14:
1429:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 327              		.loc 1 1429 0
 328              		@ sp needed
 329 0048 10BD     		pop	{r4, pc}
 330              	.L18:
 331 004a C046     		.align	2
 332              	.L17:
 333 004c 00000000 		.word	CapSense_1_curRamSnsPtr
 334 0050 00000000 		.word	CapSense_1_scanFreqIndex
 335 0054 00000000 		.word	.LANCHOR0
 336 0058 00000000 		.word	CapSense_1_dsRam
 337              		.cfi_endproc
 338              	.LFE8:
 339              		.size	CapSense_1_SsCSXPostSingleScan, .-CapSense_1_SsCSXPostSingleScan
 340              		.section	.text.CapSense_1_CSXScanISR,"ax",%progbits
 341              		.align	2
 342              		.global	CapSense_1_CSXScanISR
 343              		.code	16
 344              		.thumb_func
 345              		.type	CapSense_1_CSXScanISR, %function
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 44


 346              	CapSense_1_CSXScanISR:
 347              	.LFB17:
1945:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(0u != CapSense_1_CSX_NOISE_METRIC_EN)
 348              		.loc 1 1945 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352 0000 10B5     		push	{r4, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 4, -8
 355              		.cfi_offset 14, -4
1953:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 356              		.loc 1 1953 0
 357 0002 0A20     		movs	r0, #10
 358 0004 FFF7FEFF 		bl	CyIntDisable
 359              	.LVL19:
1955:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 360              		.loc 1 1955 0
 361 0008 8322     		movs	r2, #131
 362 000a 5200     		lsls	r2, r2, #1
 363 000c 154B     		ldr	r3, .L22
 364 000e 1A60     		str	r2, [r3]
1957:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                                          CapSense_1_RESULT_VAL1_VALUE_MASK);
 365              		.loc 1 1957 0
 366 0010 154B     		ldr	r3, .L22+4
 367 0012 1B68     		ldr	r3, [r3]
 368 0014 9BB2     		uxth	r3, r3
 369 0016 154A     		ldr	r2, .L22+8
 370 0018 1380     		strh	r3, [r2]
1960:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                                          CapSense_1_RESULT_VAL2_VALUE_MASK);
 371              		.loc 1 1960 0
 372 001a 154B     		ldr	r3, .L22+12
 373 001c 1B68     		ldr	r3, [r3]
 374 001e 9BB2     		uxth	r3, r3
 375 0020 1188     		ldrh	r1, [r2]
 376 0022 CB18     		adds	r3, r1, r3
 377 0024 9BB2     		uxth	r3, r3
 378 0026 1380     		strh	r3, [r2]
1964:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
 379              		.loc 1 1964 0
 380 0028 1188     		ldrh	r1, [r2]
 381 002a 89B2     		uxth	r1, r1
 382 002c 5388     		ldrh	r3, [r2, #2]
 383 002e 9BB2     		uxth	r3, r3
 384 0030 9942     		cmp	r1, r3
 385 0032 02D9     		bls	.L20
1966:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
 386              		.loc 1 1966 0
 387 0034 5388     		ldrh	r3, [r2, #2]
 388 0036 9BB2     		uxth	r3, r3
 389 0038 1380     		strh	r3, [r2]
 390              	.L20:
1983:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (0u != CapSense_1_CSX_NOISE_METRIC_EN) */
 391              		.loc 1 1983 0
 392 003a 0E4B     		ldr	r3, .L22+16
 393 003c 1B68     		ldr	r3, [r3]
 394 003e 9847     		blx	r3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 45


 395              	.LVL20:
1986:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
 396              		.loc 1 1986 0
 397 0040 0D4B     		ldr	r3, .L22+20
 398 0042 DB68     		ldr	r3, [r3, #12]
 399 0044 1B06     		lsls	r3, r3, #24
 400 0046 09D4     		bmi	.L21
1988:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_DEFAULT_CSD_CSDCMP_CFG);
 401              		.loc 1 1988 0
 402 0048 0C4A     		ldr	r2, .L22+24
 403 004a 0D4B     		ldr	r3, .L22+28
 404 004c 1A60     		str	r2, [r3]
1989:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, CapSense_1_DEFAULT_CSD_IDACA_CFG);
 405              		.loc 1 1989 0
 406 004e C022     		movs	r2, #192
 407 0050 9200     		lsls	r2, r2, #2
 408 0052 0C4B     		ldr	r3, .L22+32
 409 0054 1A60     		str	r2, [r3]
1990:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
 410              		.loc 1 1990 0
 411 0056 0C4A     		ldr	r2, .L22+36
 412 0058 0C4B     		ldr	r3, .L22+40
 413 005a 1A60     		str	r2, [r3]
 414              	.L21:
1993:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 415              		.loc 1 1993 0
 416 005c 0A20     		movs	r0, #10
 417 005e FFF7FEFF 		bl	CyIntEnable
 418              	.LVL21:
1994:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 419              		.loc 1 1994 0
 420              		@ sp needed
 421 0062 10BD     		pop	{r4, pc}
 422              	.L23:
 423              		.align	2
 424              	.L22:
 425 0064 F0000B40 		.word	1074462960
 426 0068 D0000B40 		.word	1074462928
 427 006c 00000000 		.word	.LANCHOR0
 428 0070 D4000B40 		.word	1074462932
 429 0074 00000000 		.word	.LANCHOR1
 430 0078 00000000 		.word	CapSense_1_dsRam
 431 007c 20100480 		.word	-2147217376
 432 0080 00000B40 		.word	1074462720
 433 0084 8C010B40 		.word	1074463116
 434 0088 800E4301 		.word	21171840
 435 008c C0010B40 		.word	1074463168
 436              		.cfi_endproc
 437              	.LFE17:
 438              		.size	CapSense_1_CSXScanISR, .-CapSense_1_CSXScanISR
 439              		.section	.text.CapSense_1_CSXInitialize,"ax",%progbits
 440              		.align	2
 441              		.global	CapSense_1_CSXInitialize
 442              		.code	16
 443              		.thumb_func
 444              		.type	CapSense_1_CSXInitialize, %function
 445              	CapSense_1_CSXInitialize:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 46


 446              	.LFB1:
 149:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
 447              		.loc 1 149 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451 0000 10B5     		push	{r4, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 4, -8
 454              		.cfi_offset 14, -4
 154:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_SET_PTR,         CapSense_1_DEFAULT_CSD_INTR_SET_CFG);
 455              		.loc 1 154 0
 456 0002 8322     		movs	r2, #131
 457 0004 5200     		lsls	r2, r2, #1
 458 0006 4B4B     		ldr	r3, .L25
 459 0008 1A60     		str	r2, [r3]
 155:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_MASK_PTR,        CapSense_1_DEFAULT_CSD_INTR_MASK_CFG);
 460              		.loc 1 155 0
 461 000a 0024     		movs	r4, #0
 462 000c 4A4B     		ldr	r3, .L25+4
 463 000e 1C60     		str	r4, [r3]
 156:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR,            CapSense_1_DEFAULT_CSD_HSCMP_CFG);
 464              		.loc 1 156 0
 465 0010 053A     		subs	r2, r2, #5
 466 0012 FF3A     		subs	r2, r2, #255
 467 0014 494B     		ldr	r3, .L25+8
 468 0016 1A60     		str	r2, [r3]
 157:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_AMBUF_PTR,            CapSense_1_DEFAULT_CSD_AMBUF_CFG);
 469              		.loc 1 157 0
 470 0018 494B     		ldr	r3, .L25+12
 471 001a 1C60     		str	r4, [r3]
 158:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_REFGEN_PTR,           CapSense_1_DEFAULT_CSD_REFGEN_CFG);
 472              		.loc 1 158 0
 473 001c 494B     		ldr	r3, .L25+16
 474 001e 1C60     		str	r4, [r3]
 159:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR,           CapSense_1_DEFAULT_CSD_CSDCMP_CFG);
 475              		.loc 1 159 0
 476 0020 494A     		ldr	r2, .L25+20
 477 0022 4A4B     		ldr	r3, .L25+24
 478 0024 1A60     		str	r2, [r3]
 160:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_MOD_PTR,         CapSense_1_DEFAULT_CSD_IDACA_CFG);
 479              		.loc 1 160 0
 480 0026 C022     		movs	r2, #192
 481 0028 9200     		lsls	r2, r2, #2
 482 002a 494B     		ldr	r3, .L25+28
 483 002c 1A60     		str	r2, [r3]
 161:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 484              		.loc 1 161 0
 485 002e 494A     		ldr	r2, .L25+32
 486 0030 494B     		ldr	r3, .L25+36
 487 0032 1A60     		str	r2, [r3]
 167:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR,     CapSense_1_DEFAULT_CSD_SENSE_PERIOD_CFG);
 488              		.loc 1 167 0
 489 0034 494A     		ldr	r2, .L25+40
 490 0036 4A4B     		ldr	r3, .L25+44
 491 0038 1A60     		str	r2, [r3]
 168:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_DUTY_PTR,       CapSense_1_DEFAULT_CSD_SENSE_DUTY_CFG);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 47


 492              		.loc 1 168 0
 493 003a 4A4A     		ldr	r2, .L25+48
 494 003c 4A4B     		ldr	r3, .L25+52
 495 003e 1A60     		str	r2, [r3]
 169:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR,      CapSense_1_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 496              		.loc 1 169 0
 497 0040 4A4B     		ldr	r3, .L25+56
 498 0042 1C60     		str	r4, [r3]
 170:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR,      CapSense_1_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 499              		.loc 1 170 0
 500 0044 4A4B     		ldr	r3, .L25+60
 501 0046 1C60     		str	r4, [r3]
 171:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,    CapSense_1_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 502              		.loc 1 171 0
 503 0048 4A4B     		ldr	r3, .L25+64
 504 004a 1C60     		str	r4, [r3]
 172:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 505              		.loc 1 172 0
 506 004c 4A4B     		ldr	r3, .L25+68
 507 004e 1C60     		str	r4, [r3]
 173:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 508              		.loc 1 173 0
 509 0050 4A4B     		ldr	r3, .L25+72
 510 0052 1C60     		str	r4, [r3]
 175:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_SW_BYP_SEL_PTR);
 511              		.loc 1 175 0
 512 0054 FFF7FEFF 		bl	CyEnterCriticalSection
 513              	.LVL22:
 176:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~(CapSense_1_SW_BYP_SEL_SW_BYA_MASK);
 514              		.loc 1 176 0
 515 0058 494A     		ldr	r2, .L25+76
 516 005a 1168     		ldr	r1, [r2]
 517              	.LVL23:
 177:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= CapSense_1_DEFAULT_CSD_SW_BYP_SEL_CFG;
 518              		.loc 1 177 0
 519 005c 494B     		ldr	r3, .L25+80
 520 005e 0B40     		ands	r3, r1
 521              	.LVL24:
 178:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR,       tmpRegVal);
 522              		.loc 1 178 0
 523 0060 8021     		movs	r1, #128
 524 0062 4901     		lsls	r1, r1, #5
 525 0064 0B43     		orrs	r3, r1
 526              	.LVL25:
 179:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 527              		.loc 1 179 0
 528 0066 1360     		str	r3, [r2]
 180:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 529              		.loc 1 180 0
 530 0068 FFF7FEFF 		bl	CyExitCriticalSection
 531              	.LVL26:
 182:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_N_SEL_PTR,     CapSense_1_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 532              		.loc 1 182 0
 533 006c 3222     		movs	r2, #50
 534 006e 464B     		ldr	r3, .L25+84
 535 0070 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 48


 536              		.loc 1 183 0
 537 0072 8022     		movs	r2, #128
 538 0074 5204     		lsls	r2, r2, #17
 539 0076 454B     		ldr	r3, .L25+88
 540 0078 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 541              		.loc 1 185 0
 542 007a FFF7FEFF 		bl	CyEnterCriticalSection
 543              	.LVL27:
 186:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_SW_REFGEN_SEL_SW_MASK;
 544              		.loc 1 186 0
 545 007e 444A     		ldr	r2, .L25+92
 546 0080 1168     		ldr	r1, [r2]
 547              	.LVL28:
 187:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= CapSense_1_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 548              		.loc 1 187 0
 549 0082 444B     		ldr	r3, .L25+96
 550 0084 0B40     		ands	r3, r1
 551              	.LVL29:
 188:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR,    tmpRegVal);
 552              		.loc 1 188 0
 553 0086 8021     		movs	r1, #128
 554 0088 4905     		lsls	r1, r1, #21
 555 008a 0B43     		orrs	r3, r1
 556              	.LVL30:
 189:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 557              		.loc 1 189 0
 558 008c 1360     		str	r3, [r2]
 190:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 559              		.loc 1 190 0
 560 008e FFF7FEFF 		bl	CyExitCriticalSection
 561              	.LVL31:
 192:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 562              		.loc 1 192 0
 563 0092 414B     		ldr	r3, .L25+100
 564 0094 1C60     		str	r4, [r3]
 193:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR,       CapSense_1_DEFAULT_CSD_SW_DSI_SEL_CFG);
 565              		.loc 1 193 0
 566 0096 414B     		ldr	r3, .L25+104
 567 0098 1C60     		str	r4, [r3]
 194:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_TIME_PTR,         CapSense_1_DEFAULT_CSD_SEQ_TIME_CFG);
 568              		.loc 1 194 0
 569 009a 2322     		movs	r2, #35
 570 009c 404B     		ldr	r3, .L25+108
 571 009e 1A60     		str	r2, [r3]
 195:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_INIT_CNT_PTR,     CapSense_1_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 572              		.loc 1 195 0
 573 00a0 143A     		subs	r2, r2, #20
 574 00a2 404B     		ldr	r3, .L25+112
 575 00a4 1A60     		str	r2, [r3]
 196:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR,     CapSense_1_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 576              		.loc 1 196 0
 577 00a6 0B3A     		subs	r2, r2, #11
 578 00a8 3F4B     		ldr	r3, .L25+116
 579 00aa 1A60     		str	r2, [r3]
 197:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_ADC_CTL_PTR,          CapSense_1_DEFAULT_CSD_ADC_CTL_CFG);
 580              		.loc 1 197 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 49


 581 00ac 3F4B     		ldr	r3, .L25+120
 582 00ae 1C60     		str	r4, [r3]
 198:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR,        CapSense_1_DEFAULT_CSD_SEQ_START_CFG);
 583              		.loc 1 198 0
 584 00b0 3F4B     		ldr	r3, .L25+124
 585 00b2 1C60     		str	r4, [r3]
 199:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR,           CapSense_1_DEFAULT_CSD_CONFIG_CFG);
 586              		.loc 1 199 0
 587 00b4 C222     		movs	r2, #194
 588 00b6 9200     		lsls	r2, r2, #2
 589 00b8 3E4B     		ldr	r3, .L25+128
 590 00ba 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 591              		.loc 1 200 0
 592 00bc 3E4A     		ldr	r2, .L25+132
 593 00be 3F4B     		ldr	r3, .L25+136
 594 00c0 1A60     		str	r2, [r3]
 202:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 595              		.loc 1 202 0
 596 00c2 FFF7FEFF 		bl	CapSense_1_BistDischargeExtCapacitors
 597              	.LVL32:
 204:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintA_PC_PTR);
 598              		.loc 1 204 0
 599 00c6 FFF7FEFF 		bl	CyEnterCriticalSection
 600              	.LVL33:
 205:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintA_SHIFT * CapSense_1_GPIO_PC_BIT
 601              		.loc 1 205 0
 602 00ca 3D4C     		ldr	r4, .L25+140
 603 00cc 2268     		ldr	r2, [r4]
 604              	.LVL34:
 206:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_PC_PTR, tmpRegVal);
 605              		.loc 1 206 0
 606 00ce 3D4B     		ldr	r3, .L25+144
 607 00d0 1340     		ands	r3, r2
 608              	.LVL35:
 207:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 609              		.loc 1 207 0
 610 00d2 2360     		str	r3, [r4]
 208:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 611              		.loc 1 208 0
 612 00d4 FFF7FEFF 		bl	CyExitCriticalSection
 613              	.LVL36:
 210:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintB_PC_PTR);
 614              		.loc 1 210 0
 615 00d8 FFF7FEFF 		bl	CyEnterCriticalSection
 616              	.LVL37:
 211:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintB__SHIFT * CapSense_1_GPIO_PC_BI
 617              		.loc 1 211 0
 618 00dc 2268     		ldr	r2, [r4]
 619              	.LVL38:
 212:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_PC_PTR, tmpRegVal);
 620              		.loc 1 212 0
 621 00de 3A4B     		ldr	r3, .L25+148
 622 00e0 1340     		ands	r3, r2
 623              	.LVL39:
 213:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 624              		.loc 1 213 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 50


 625 00e2 2360     		str	r3, [r4]
 214:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 626              		.loc 1 214 0
 627 00e4 FFF7FEFF 		bl	CyExitCriticalSection
 628              	.LVL40:
 217:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 629              		.loc 1 217 0
 630 00e8 FFF7FEFF 		bl	CyEnterCriticalSection
 631              	.LVL41:
 218:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_CintA_HSIOM_MASK;
 632              		.loc 1 218 0
 633 00ec 374C     		ldr	r4, .L25+152
 634 00ee 2268     		ldr	r2, [r4]
 635              	.LVL42:
 219:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintA_HSIOM_SHIFT);
 636              		.loc 1 219 0
 637 00f0 374B     		ldr	r3, .L25+156
 638 00f2 1340     		ands	r3, r2
 639              	.LVL43:
 220:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, tmpRegVal);
 640              		.loc 1 220 0
 641 00f4 C022     		movs	r2, #192
 642 00f6 D200     		lsls	r2, r2, #3
 643 00f8 1343     		orrs	r3, r2
 644              	.LVL44:
 221:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 645              		.loc 1 221 0
 646 00fa 2360     		str	r3, [r4]
 222:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 647              		.loc 1 222 0
 648 00fc FFF7FEFF 		bl	CyExitCriticalSection
 649              	.LVL45:
 225:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 650              		.loc 1 225 0
 651 0100 FFF7FEFF 		bl	CyEnterCriticalSection
 652              	.LVL46:
 226:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_CintB_HSIOM_MASK;
 653              		.loc 1 226 0
 654 0104 2268     		ldr	r2, [r4]
 655              	.LVL47:
 227:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintB_HSIOM_SHIFT);
 656              		.loc 1 227 0
 657 0106 334B     		ldr	r3, .L25+160
 658 0108 1340     		ands	r3, r2
 659              	.LVL48:
 228:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, tmpRegVal);
 660              		.loc 1 228 0
 661 010a C022     		movs	r2, #192
 662 010c D201     		lsls	r2, r2, #7
 663 010e 1343     		orrs	r3, r2
 664              	.LVL49:
 229:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 665              		.loc 1 229 0
 666 0110 2360     		str	r3, [r4]
 230:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 667              		.loc 1 230 0
 668 0112 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 51


 669              	.LVL50:
 232:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 670              		.loc 1 232 0
 671 0116 304C     		ldr	r4, .L25+164
 672 0118 2023     		movs	r3, #32
 673 011a E05C     		ldrb	r0, [r4, r3]
 674 011c FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 675              	.LVL51:
 235:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 676              		.loc 1 235 0
 677 0120 608C     		ldrh	r0, [r4, #34]
 678 0122 FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 679              	.LVL52:
 239:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 680              		.loc 1 239 0
 681 0126 FFF7FEFF 		bl	CapSense_1_SsSetIOsInDefaultState
 682              	.LVL53:
 298:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 683              		.loc 1 298 0
 684 012a 2C48     		ldr	r0, .L25+168
 685 012c FFF7FEFF 		bl	CapSense_1_SsIsrInitialize
 686              	.LVL54:
 299:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 687              		.loc 1 299 0
 688              		@ sp needed
 689 0130 10BD     		pop	{r4, pc}
 690              	.L26:
 691 0132 C046     		.align	2
 692              	.L25:
 693 0134 F0000B40 		.word	1074462960
 694 0138 F4000B40 		.word	1074462964
 695 013c F8000B40 		.word	1074462968
 696 0140 80010B40 		.word	1074463104
 697 0144 84010B40 		.word	1074463108
 698 0148 411F0000 		.word	8001
 699 014c 88010B40 		.word	1074463112
 700 0150 8C010B40 		.word	1074463116
 701 0154 800E4301 		.word	21171840
 702 0158 C0010B40 		.word	1074463168
 703 015c AA000500 		.word	327850
 704 0160 F0010B40 		.word	1074463216
 705 0164 E0010100 		.word	66016
 706 0168 00020B40 		.word	1074463232
 707 016c 04020B40 		.word	1074463236
 708 0170 80020B40 		.word	1074463360
 709 0174 84020B40 		.word	1074463364
 710 0178 88020B40 		.word	1074463368
 711 017c 90020B40 		.word	1074463376
 712 0180 94020B40 		.word	1074463380
 713 0184 FFEFFFFF 		.word	-4097
 714 0188 A0020B40 		.word	1074463392
 715 018c A4020B40 		.word	1074463396
 716 0190 A8020B40 		.word	1074463400
 717 0194 EEFFFEEE 		.word	-285278226
 718 0198 B0020B40 		.word	1074463408
 719 019c B4020B40 		.word	1074463412
 720 01a0 C0020B40 		.word	1074463424
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 52


 721 01a4 00030B40 		.word	1074463488
 722 01a8 10030B40 		.word	1074463504
 723 01ac 14030B40 		.word	1074463508
 724 01b0 20030B40 		.word	1074463520
 725 01b4 40030B40 		.word	1074463552
 726 01b8 20100480 		.word	-2147217376
 727 01bc 00000B40 		.word	1074462720
 728 01c0 08040440 		.word	1074005000
 729 01c4 3FFEFFFF 		.word	-449
 730 01c8 FFF1FFFF 		.word	-3585
 731 01cc 00040240 		.word	1073873920
 732 01d0 FFF0FFFF 		.word	-3841
 733 01d4 FF0FFFFF 		.word	-61441
 734 01d8 00000000 		.word	CapSense_1_dsRam
 735 01dc 00000000 		.word	CapSense_1_CSXScanISR
 736              		.cfi_endproc
 737              	.LFE1:
 738              		.size	CapSense_1_CSXInitialize, .-CapSense_1_CSXInitialize
 739              		.section	.text.CapSense_1_CSXScanExt,"ax",%progbits
 740              		.align	2
 741              		.global	CapSense_1_CSXScanExt
 742              		.code	16
 743              		.thumb_func
 744              		.type	CapSense_1_CSXScanExt, %function
 745              	CapSense_1_CSXScanExt:
 746              	.LFB6:
 871:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 747              		.loc 1 871 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751 0000 10B5     		push	{r4, lr}
 752              		.cfi_def_cfa_offset 8
 753              		.cfi_offset 4, -8
 754              		.cfi_offset 14, -4
 874:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 755              		.loc 1 874 0
 756 0002 0022     		movs	r2, #0
 757 0004 064B     		ldr	r3, .L28
 758 0006 1A70     		strb	r2, [r3]
 892:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 759              		.loc 1 892 0
 760 0008 064A     		ldr	r2, .L28+4
 761 000a D168     		ldr	r1, [r2, #12]
 762 000c 8023     		movs	r3, #128
 763 000e 0B43     		orrs	r3, r1
 764 0010 D360     		str	r3, [r2, #12]
 897:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 765              		.loc 1 897 0
 766 0012 0A20     		movs	r0, #10
 767 0014 FFF7FEFF 		bl	CyDelayUs
 768              	.LVL55:
 899:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 769              		.loc 1 899 0
 770 0018 FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 771              	.LVL56:
 901:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 53


 772              		.loc 1 901 0
 773              		@ sp needed
 774 001c 10BD     		pop	{r4, pc}
 775              	.L29:
 776 001e C046     		.align	2
 777              	.L28:
 778 0020 00000000 		.word	CapSense_1_scanFreqIndex
 779 0024 00000000 		.word	CapSense_1_dsRam
 780              		.cfi_endproc
 781              	.LFE6:
 782              		.size	CapSense_1_CSXScanExt, .-CapSense_1_CSXScanExt
 783              		.section	.text.CapSense_1_CSXCalibrateWidget,"ax",%progbits
 784              		.align	2
 785              		.global	CapSense_1_CSXCalibrateWidget
 786              		.code	16
 787              		.thumb_func
 788              		.type	CapSense_1_CSXCalibrateWidget, %function
 789              	CapSense_1_CSXCalibrateWidget:
 790              	.LFB9:
1459:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
 791              		.loc 1 1459 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 8
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 795              	.LVL57:
 796 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 797              		.cfi_def_cfa_offset 20
 798              		.cfi_offset 4, -20
 799              		.cfi_offset 5, -16
 800              		.cfi_offset 6, -12
 801              		.cfi_offset 7, -8
 802              		.cfi_offset 14, -4
 803 0002 4746     		mov	r7, r8
 804 0004 80B4     		push	{r7}
 805              		.cfi_def_cfa_offset 24
 806              		.cfi_offset 8, -24
 807 0006 82B0     		sub	sp, sp, #8
 808              		.cfi_def_cfa_offset 32
 809 0008 0190     		str	r0, [sp, #4]
 810 000a 0E00     		movs	r6, r1
 811              	.LVL58:
1473:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 812              		.loc 1 1473 0
 813 000c 4301     		lsls	r3, r0, #5
 814 000e 334C     		ldr	r4, .L41
 815 0010 E418     		adds	r4, r4, r3
 816 0012 A368     		ldr	r3, [r4, #8]
 817 0014 9846     		mov	r8, r3
 818 0016 324B     		ldr	r3, .L41+4
 819 0018 4246     		mov	r2, r8
 820 001a 1A60     		str	r2, [r3]
1477:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
 821              		.loc 1 1477 0
 822 001c 6068     		ldr	r0, [r4, #4]
 823              	.LVL59:
 824 001e FFF7FEFF 		bl	CapSense_1_SsCalcCsxScanPeriod
 825              	.LVL60:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 54


 826 0022 304B     		ldr	r3, .L41+8
 827 0024 5880     		strh	r0, [r3, #2]
1479:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / CapSense_1_PERCENTAGE_100;
 828              		.loc 1 1479 0
 829 0026 5888     		ldrh	r0, [r3, #2]
 830              	.LVL61:
1480:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 831              		.loc 1 1480 0
 832 0028 7043     		muls	r0, r6
 833              	.LVL62:
 834 002a 6421     		movs	r1, #100
 835 002c FFF7FEFF 		bl	__aeabi_uidiv
 836              	.LVL63:
 837 0030 0600     		movs	r6, r0
 838              	.LVL64:
1487:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     (uint32)CapSense_1_dsFlash.wdgtArray[widgetId].numRows);
 839              		.loc 1 1487 0
 840 0032 E37E     		ldrb	r3, [r4, #27]
1488:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 841              		.loc 1 1488 0
 842 0034 227F     		ldrb	r2, [r4, #28]
1487:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     (uint32)CapSense_1_dsFlash.wdgtArray[widgetId].numRows);
 843              		.loc 1 1487 0
 844 0036 5A43     		muls	r2, r3
 845 0038 1500     		movs	r5, r2
 846              	.LVL65:
1491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 847              		.loc 1 1491 0
 848 003a 0024     		movs	r4, #0
 849 003c 0EE0     		b	.L31
 850              	.LVL66:
 851              	.L32:
1493:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_0] = curIdacMask;
 852              		.loc 1 1493 0 discriminator 3
 853 003e 284A     		ldr	r2, .L41+4
 854 0040 0020     		movs	r0, #0
 855 0042 1368     		ldr	r3, [r2]
 856 0044 1880     		strh	r0, [r3]
1494:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 857              		.loc 1 1494 0 discriminator 3
 858 0046 1368     		ldr	r3, [r2]
 859 0048 4021     		movs	r1, #64
 860 004a 5975     		strb	r1, [r3, #21]
1496:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_2] = 0u;
 861              		.loc 1 1496 0 discriminator 3
 862 004c 5880     		strh	r0, [r3, #2]
1497:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] = curIdacMask;
 863              		.loc 1 1497 0 discriminator 3
 864 004e 1368     		ldr	r3, [r2]
 865 0050 9880     		strh	r0, [r3, #4]
1498:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] = curIdacMask;
 866              		.loc 1 1498 0 discriminator 3
 867 0052 9975     		strb	r1, [r3, #22]
1499:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 868              		.loc 1 1499 0 discriminator 3
 869 0054 D975     		strb	r1, [r3, #23]
1501:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 55


 870              		.loc 1 1501 0 discriminator 3
 871 0056 1833     		adds	r3, r3, #24
 872 0058 1360     		str	r3, [r2]
1491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 873              		.loc 1 1491 0 discriminator 3
 874 005a 0134     		adds	r4, r4, #1
 875              	.LVL67:
 876              	.L31:
1491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 877              		.loc 1 1491 0 is_stmt 0 discriminator 1
 878 005c AC42     		cmp	r4, r5
 879 005e EED3     		bcc	.L32
 880 0060 2024     		movs	r4, #32
 881              	.LVL68:
 882 0062 4027     		movs	r7, #64
 883 0064 00E0     		b	.L39
 884              	.LVL69:
 885              	.L40:
1555:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 886              		.loc 1 1555 0 is_stmt 1
 887 0066 1C00     		movs	r4, r3
 888              	.LVL70:
 889              	.L39:
1508:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (void)CapSense_1_Scan();
 890              		.loc 1 1508 0
 891 0068 0198     		ldr	r0, [sp, #4]
 892 006a FFF7FEFF 		bl	CapSense_1_SetupWidget
 893              	.LVL71:
1509:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 894              		.loc 1 1509 0
 895 006e FFF7FEFF 		bl	CapSense_1_Scan
 896              	.LVL72:
 897              	.L33:
1511:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 898              		.loc 1 1511 0 discriminator 1
 899 0072 1D4B     		ldr	r3, .L41+12
 900 0074 DB68     		ldr	r3, [r3, #12]
 901 0076 1B06     		lsls	r3, r3, #24
 902 0078 FBD4     		bmi	.L33
1516:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 903              		.loc 1 1516 0
 904 007a 194B     		ldr	r3, .L41+4
 905 007c 4246     		mov	r2, r8
 906 007e 1A60     		str	r2, [r3]
 907              	.LVL73:
1519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 908              		.loc 1 1519 0
 909 0080 0021     		movs	r1, #0
 910 0082 20E0     		b	.L34
 911              	.LVL74:
 912              	.L38:
1530:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 913              		.loc 1 1530 0
 914 0084 164B     		ldr	r3, .L41+4
 915 0086 1B68     		ldr	r3, [r3]
 916 0088 1A88     		ldrh	r2, [r3]
 917 008a 9642     		cmp	r6, r2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 56


 918 008c 02D2     		bcs	.L35
1532:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
 919              		.loc 1 1532 0
 920 008e 5A7D     		ldrb	r2, [r3, #21]
 921 0090 BA43     		bics	r2, r7
 922 0092 5A75     		strb	r2, [r3, #21]
 923              	.L35:
1534:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 924              		.loc 1 1534 0
 925 0094 5A7D     		ldrb	r2, [r3, #21]
 926 0096 2243     		orrs	r2, r4
 927 0098 5A75     		strb	r2, [r3, #21]
1537:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 928              		.loc 1 1537 0
 929 009a 5A88     		ldrh	r2, [r3, #2]
 930 009c 9642     		cmp	r6, r2
 931 009e 02D2     		bcs	.L36
1539:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 932              		.loc 1 1539 0
 933 00a0 9A7D     		ldrb	r2, [r3, #22]
 934 00a2 BA43     		bics	r2, r7
 935 00a4 9A75     		strb	r2, [r3, #22]
 936              	.L36:
1542:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 937              		.loc 1 1542 0
 938 00a6 9A88     		ldrh	r2, [r3, #4]
 939 00a8 9642     		cmp	r6, r2
 940 00aa 02D2     		bcs	.L37
1544:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 941              		.loc 1 1544 0
 942 00ac DA7D     		ldrb	r2, [r3, #23]
 943 00ae BA43     		bics	r2, r7
 944 00b0 DA75     		strb	r2, [r3, #23]
 945              	.L37:
1547:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] |= nextIdacMask;
 946              		.loc 1 1547 0 discriminator 2
 947 00b2 9A7D     		ldrb	r2, [r3, #22]
 948 00b4 2243     		orrs	r2, r4
 949 00b6 9A75     		strb	r2, [r3, #22]
1548:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif
 950              		.loc 1 1548 0 discriminator 2
 951 00b8 DA7D     		ldrb	r2, [r3, #23]
 952 00ba 2243     		orrs	r2, r4
 953 00bc DA75     		strb	r2, [r3, #23]
1550:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 954              		.loc 1 1550 0 discriminator 2
 955 00be 1833     		adds	r3, r3, #24
 956 00c0 074A     		ldr	r2, .L41+4
 957 00c2 1360     		str	r3, [r2]
1519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 958              		.loc 1 1519 0 discriminator 2
 959 00c4 0131     		adds	r1, r1, #1
 960              	.LVL75:
 961              	.L34:
1519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 962              		.loc 1 1519 0 is_stmt 0 discriminator 1
 963 00c6 A942     		cmp	r1, r5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 57


 964 00c8 DCD3     		bcc	.L38
 965              	.LVL76:
1555:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 966              		.loc 1 1555 0 is_stmt 1
 967 00ca 6308     		lsrs	r3, r4, #1
 968 00cc DBB2     		uxtb	r3, r3
 969              	.LVL77:
1554:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             nextIdacMask = nextIdacMask >> 1u;
 970              		.loc 1 1554 0
 971 00ce 271E     		subs	r7, r4, #0
1557:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
 972              		.loc 1 1557 0
 973 00d0 C9D1     		bne	.L40
1559:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 974              		.loc 1 1559 0
 975 00d2 02B0     		add	sp, sp, #8
 976              		@ sp needed
 977              	.LVL78:
 978              	.LVL79:
 979              	.LVL80:
 980 00d4 04BC     		pop	{r2}
 981 00d6 9046     		mov	r8, r2
 982 00d8 F0BD     		pop	{r4, r5, r6, r7, pc}
 983              	.L42:
 984 00da C046     		.align	2
 985              	.L41:
 986 00dc 00000000 		.word	CapSense_1_dsFlash
 987 00e0 00000000 		.word	CapSense_1_curRamSnsPtr
 988 00e4 00000000 		.word	.LANCHOR0
 989 00e8 00000000 		.word	CapSense_1_dsRam
 990              		.cfi_endproc
 991              	.LFE9:
 992              		.size	CapSense_1_CSXCalibrateWidget, .-CapSense_1_CSXCalibrateWidget
 993              		.section	.text.CapSense_1_CSXConnectTx,"ax",%progbits
 994              		.align	2
 995              		.global	CapSense_1_CSXConnectTx
 996              		.code	16
 997              		.thumb_func
 998              		.type	CapSense_1_CSXConnectTx, %function
 999              	CapSense_1_CSXConnectTx:
 1000              	.LFB11:
1666:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
 1001              		.loc 1 1666 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              	.LVL81:
 1006 0000 10B5     		push	{r4, lr}
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 4, -8
 1009              		.cfi_offset 14, -4
1669:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |= (CapSense_1_GPIO_STRGDRV << txPtr->shift);
 1010              		.loc 1 1669 0
 1011 0002 4268     		ldr	r2, [r0, #4]
 1012 0004 1168     		ldr	r1, [r2]
 1013              	.LVL82:
1670:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->pcPtr, regValue);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 58


 1014              		.loc 1 1670 0
 1015 0006 847E     		ldrb	r4, [r0, #26]
 1016 0008 0623     		movs	r3, #6
 1017 000a A340     		lsls	r3, r3, r4
 1018 000c 0B43     		orrs	r3, r1
 1019              	.LVL83:
1671:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1020              		.loc 1 1671 0
 1021 000e 1360     		str	r3, [r2]
1673:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |= (CapSense_1_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift);
 1022              		.loc 1 1673 0
 1023 0010 0268     		ldr	r2, [r0]
 1024 0012 1168     		ldr	r1, [r2]
 1025              	.LVL84:
1674:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 1026              		.loc 1 1674 0
 1027 0014 007E     		ldrb	r0, [r0, #24]
 1028              	.LVL85:
 1029 0016 0423     		movs	r3, #4
 1030 0018 8340     		lsls	r3, r3, r0
 1031 001a 0B43     		orrs	r3, r1
 1032              	.LVL86:
1675:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 1033              		.loc 1 1675 0
 1034 001c 1360     		str	r3, [r2]
1676:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1035              		.loc 1 1676 0
 1036              		@ sp needed
 1037 001e 10BD     		pop	{r4, pc}
 1038              		.cfi_endproc
 1039              	.LFE11:
 1040              		.size	CapSense_1_CSXConnectTx, .-CapSense_1_CSXConnectTx
 1041              		.section	.text.CapSense_1_CSXConnectRx,"ax",%progbits
 1042              		.align	2
 1043              		.global	CapSense_1_CSXConnectRx
 1044              		.code	16
 1045              		.thumb_func
 1046              		.type	CapSense_1_CSXConnectRx, %function
 1047              	CapSense_1_CSXConnectRx:
 1048              	.LFB12:
1700:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
 1049              		.loc 1 1700 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053              	.LVL87:
 1054 0000 10B5     		push	{r4, lr}
 1055              		.cfi_def_cfa_offset 8
 1056              		.cfi_offset 4, -8
 1057              		.cfi_offset 14, -4
1703:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(CapSense_1_GPIO_PC_MASK << rxPtr->shift);
 1058              		.loc 1 1703 0
 1059 0002 4168     		ldr	r1, [r0, #4]
 1060 0004 0B68     		ldr	r3, [r1]
 1061              	.LVL88:
1704:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
 1062              		.loc 1 1704 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 59


 1063 0006 847E     		ldrb	r4, [r0, #26]
 1064 0008 0722     		movs	r2, #7
 1065 000a A240     		lsls	r2, r2, r4
 1066 000c 9343     		bics	r3, r2
 1067              	.LVL89:
1705:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1068              		.loc 1 1705 0
 1069 000e 0B60     		str	r3, [r1]
1707:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |=  (CapSense_1_HSIOM_SEL_AMUXA << rxPtr->hsiomShift);
 1070              		.loc 1 1707 0
 1071 0010 0268     		ldr	r2, [r0]
 1072 0012 1168     		ldr	r1, [r2]
 1073              	.LVL90:
1708:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1074              		.loc 1 1708 0
 1075 0014 007E     		ldrb	r0, [r0, #24]
 1076              	.LVL91:
 1077 0016 0623     		movs	r3, #6
 1078 0018 8340     		lsls	r3, r3, r0
 1079 001a 0B43     		orrs	r3, r1
 1080              	.LVL92:
1709:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 1081              		.loc 1 1709 0
 1082 001c 1360     		str	r3, [r2]
1710:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1083              		.loc 1 1710 0
 1084              		@ sp needed
 1085 001e 10BD     		pop	{r4, pc}
 1086              		.cfi_endproc
 1087              	.LFE12:
 1088              		.size	CapSense_1_CSXConnectRx, .-CapSense_1_CSXConnectRx
 1089              		.section	.text.CapSense_1_CSXScan,"ax",%progbits
 1090              		.align	2
 1091              		.global	CapSense_1_CSXScan
 1092              		.code	16
 1093              		.thumb_func
 1094              		.type	CapSense_1_CSXScan, %function
 1095              	CapSense_1_CSXScan:
 1096              	.LFB5:
 646:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 1097              		.loc 1 646 0
 1098              		.cfi_startproc
 1099              		@ args = 0, pretend = 0, frame = 0
 1100              		@ frame_needed = 0, uses_anonymous_args = 0
 1101 0000 70B5     		push	{r4, r5, r6, lr}
 1102              		.cfi_def_cfa_offset 16
 1103              		.cfi_offset 4, -16
 1104              		.cfi_offset 5, -12
 1105              		.cfi_offset 6, -8
 1106              		.cfi_offset 14, -4
 655:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1107              		.loc 1 655 0
 1108 0002 0025     		movs	r5, #0
 1109 0004 134B     		ldr	r3, .L46
 1110 0006 1D70     		strb	r5, [r3]
 658:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1111              		.loc 1 658 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 60


 1112 0008 134B     		ldr	r3, .L46+4
 1113 000a 1B68     		ldr	r3, [r3]
 1114 000c 134A     		ldr	r2, .L46+8
 1115 000e 9968     		ldr	r1, [r3, #8]
 1116 0010 1160     		str	r1, [r2]
 746:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalRx  = CapSense_1_curFlashWdgtPtr->numCols;
 1117              		.loc 1 746 0
 1118 0012 1A7F     		ldrb	r2, [r3, #28]
 1119 0014 124C     		ldr	r4, .L46+12
 1120 0016 A280     		strh	r2, [r4, #4]
 747:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1121              		.loc 1 747 0
 1122 0018 DA7E     		ldrb	r2, [r3, #27]
 1123 001a E280     		strh	r2, [r4, #6]
 797:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = CapSense_1_curRxIOPtr;
 1124              		.loc 1 797 0
 1125 001c 1968     		ldr	r1, [r3]
 1126 001e A160     		str	r1, [r4, #8]
 799:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1127              		.loc 1 799 0
 1128 0020 D300     		lsls	r3, r2, #3
 1129 0022 981A     		subs	r0, r3, r2
 1130 0024 8000     		lsls	r0, r0, #2
 1131 0026 0818     		adds	r0, r1, r0
 1132 0028 E060     		str	r0, [r4, #12]
 802:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 1133              		.loc 1 802 0
 1134 002a FFF7FEFF 		bl	CapSense_1_CSXConnectTx
 1135              	.LVL93:
 803:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1136              		.loc 1 803 0
 1137 002e A068     		ldr	r0, [r4, #8]
 1138 0030 FFF7FEFF 		bl	CapSense_1_CSXConnectRx
 1139              	.LVL94:
 806:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 1140              		.loc 1 806 0
 1141 0034 0B4A     		ldr	r2, .L46+16
 1142 0036 0C4B     		ldr	r3, .L46+20
 1143 0038 1A60     		str	r2, [r3]
 811:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 1144              		.loc 1 811 0
 1145 003a 0C4B     		ldr	r3, .L46+24
 1146 003c 1D70     		strb	r5, [r3]
 815:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1147              		.loc 1 815 0
 1148 003e 0C4A     		ldr	r2, .L46+28
 1149 0040 D168     		ldr	r1, [r2, #12]
 1150 0042 8023     		movs	r3, #128
 1151 0044 0B43     		orrs	r3, r1
 1152 0046 D360     		str	r3, [r2, #12]
 820:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 1153              		.loc 1 820 0
 1154 0048 0A20     		movs	r0, #10
 1155 004a FFF7FEFF 		bl	CyDelayUs
 1156              	.LVL95:
 822:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1157              		.loc 1 822 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 61


 1158 004e FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 1159              	.LVL96:
 825:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1160              		.loc 1 825 0
 1161              		@ sp needed
 1162 0052 70BD     		pop	{r4, r5, r6, pc}
 1163              	.L47:
 1164              		.align	2
 1165              	.L46:
 1166 0054 00000000 		.word	CapSense_1_sensorIndex
 1167 0058 00000000 		.word	CapSense_1_curFlashWdgtPtr
 1168 005c 00000000 		.word	CapSense_1_curRamSnsPtr
 1169 0060 00000000 		.word	.LANCHOR0
 1170 0064 00000000 		.word	CapSense_1_SsCSXPostMultiScan
 1171 0068 00000000 		.word	.LANCHOR1
 1172 006c 00000000 		.word	CapSense_1_scanFreqIndex
 1173 0070 00000000 		.word	CapSense_1_dsRam
 1174              		.cfi_endproc
 1175              	.LFE5:
 1176              		.size	CapSense_1_CSXScan, .-CapSense_1_CSXScan
 1177              		.section	.text.CapSense_1_CSXDisconnectTx,"ax",%progbits
 1178              		.align	2
 1179              		.global	CapSense_1_CSXDisconnectTx
 1180              		.code	16
 1181              		.thumb_func
 1182              		.type	CapSense_1_CSXDisconnectTx, %function
 1183              	CapSense_1_CSXDisconnectTx:
 1184              	.LFB13:
1735:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
 1185              		.loc 1 1735 0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 0
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
 1189              		@ link register save eliminated.
 1190              	.LVL97:
1738:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
 1191              		.loc 1 1738 0
 1192 0000 0268     		ldr	r2, [r0]
 1193 0002 1368     		ldr	r3, [r2]
 1194              	.LVL98:
1739:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 1195              		.loc 1 1739 0
 1196 0004 0169     		ldr	r1, [r0, #16]
 1197 0006 8B43     		bics	r3, r1
 1198              	.LVL99:
1740:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 1199              		.loc 1 1740 0
 1200 0008 1360     		str	r3, [r2]
1741:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1201              		.loc 1 1741 0
 1202              		@ sp needed
 1203 000a 7047     		bx	lr
 1204              		.cfi_endproc
 1205              	.LFE13:
 1206              		.size	CapSense_1_CSXDisconnectTx, .-CapSense_1_CSXDisconnectTx
 1207              		.section	.text.CapSense_1_CSXDisconnectRx,"ax",%progbits
 1208              		.align	2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 62


 1209              		.global	CapSense_1_CSXDisconnectRx
 1210              		.code	16
 1211              		.thumb_func
 1212              		.type	CapSense_1_CSXDisconnectRx, %function
 1213              	CapSense_1_CSXDisconnectRx:
 1214              	.LFB14:
1766:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
 1215              		.loc 1 1766 0
 1216              		.cfi_startproc
 1217              		@ args = 0, pretend = 0, frame = 0
 1218              		@ frame_needed = 0, uses_anonymous_args = 0
 1219              	.LVL100:
 1220 0000 10B5     		push	{r4, lr}
 1221              		.cfi_def_cfa_offset 8
 1222              		.cfi_offset 4, -8
 1223              		.cfi_offset 14, -4
1769:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
 1224              		.loc 1 1769 0
 1225 0002 0268     		ldr	r2, [r0]
 1226 0004 1368     		ldr	r3, [r2]
 1227              	.LVL101:
1770:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1228              		.loc 1 1770 0
 1229 0006 0169     		ldr	r1, [r0, #16]
 1230 0008 8B43     		bics	r3, r1
 1231              	.LVL102:
1771:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1232              		.loc 1 1771 0
 1233 000a 1360     		str	r3, [r2]
1773:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(CapSense_1_GPIO_PC_MASK << rxPtr->shift);
 1234              		.loc 1 1773 0
 1235 000c 4168     		ldr	r1, [r0, #4]
 1236 000e 0B68     		ldr	r3, [r1]
 1237              	.LVL103:
1774:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |=  (CapSense_1_GPIO_STRGDRV << rxPtr->shift);
 1238              		.loc 1 1774 0
 1239 0010 847E     		ldrb	r4, [r0, #26]
 1240 0012 0722     		movs	r2, #7
 1241 0014 A240     		lsls	r2, r2, r4
 1242 0016 9343     		bics	r3, r2
 1243              	.LVL104:
 1244 0018 1A00     		movs	r2, r3
 1245              	.LVL105:
1775:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
 1246              		.loc 1 1775 0
 1247 001a 0623     		movs	r3, #6
 1248 001c A340     		lsls	r3, r3, r4
 1249 001e 1343     		orrs	r3, r2
 1250              	.LVL106:
1776:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1251              		.loc 1 1776 0
 1252 0020 0B60     		str	r3, [r1]
1778:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
 1253              		.loc 1 1778 0
 1254 0022 8268     		ldr	r2, [r0, #8]
 1255 0024 1368     		ldr	r3, [r2]
 1256              	.LVL107:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 63


1779:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
 1257              		.loc 1 1779 0
 1258 0026 4169     		ldr	r1, [r0, #20]
 1259 0028 8B43     		bics	r3, r1
 1260              	.LVL108:
1780:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 1261              		.loc 1 1780 0
 1262 002a 1360     		str	r3, [r2]
1781:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1263              		.loc 1 1781 0
 1264              		@ sp needed
 1265 002c 10BD     		pop	{r4, pc}
 1266              		.cfi_endproc
 1267              	.LFE14:
 1268              		.size	CapSense_1_CSXDisconnectRx, .-CapSense_1_CSXDisconnectRx
 1269 002e C046     		.section	.text.CapSense_1_SsCSXPostMultiScan,"ax",%progbits
 1270              		.align	2
 1271              		.code	16
 1272              		.thumb_func
 1273              		.type	CapSense_1_SsCSXPostMultiScan, %function
 1274              	CapSense_1_SsCSXPostMultiScan:
 1275              	.LFB7:
 916:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
 1276              		.loc 1 916 0
 1277              		.cfi_startproc
 1278              		@ args = 0, pretend = 0, frame = 0
 1279              		@ frame_needed = 0, uses_anonymous_args = 0
 1280 0000 10B5     		push	{r4, lr}
 1281              		.cfi_def_cfa_offset 8
 1282              		.cfi_offset 4, -8
 1283              		.cfi_offset 14, -4
 922:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                              (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
 1284              		.loc 1 922 0
 1285 0002 384B     		ldr	r3, .L56
 1286 0004 1C68     		ldr	r4, [r3]
 1287 0006 3849     		ldr	r1, .L56+4
 1288 0008 0B78     		ldrb	r3, [r1]
 1289 000a 3848     		ldr	r0, .L56+8
 1290 000c 4288     		ldrh	r2, [r0, #2]
 1291 000e 0088     		ldrh	r0, [r0]
 1292 0010 5B00     		lsls	r3, r3, #1
 1293 0012 121A     		subs	r2, r2, r0
 1294 0014 1A53     		strh	r2, [r3, r4]
 927:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 1295              		.loc 1 927 0
 1296 0016 0878     		ldrb	r0, [r1]
 1297 0018 0128     		cmp	r0, #1
 1298 001a 07D8     		bhi	.L51
 930:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1299              		.loc 1 930 0
 1300 001c 0130     		adds	r0, r0, #1
 1301 001e C0B2     		uxtb	r0, r0
 1302 0020 0870     		strb	r0, [r1]
 933:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
 1303              		.loc 1 933 0
 1304 0022 FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 1305              	.LVL109:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 64


 938:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 1306              		.loc 1 938 0
 1307 0026 FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 1308              	.LVL110:
 1309 002a 59E0     		b	.L50
 1310              	.L51:
 945:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1311              		.loc 1 945 0
 1312 002c 0022     		movs	r2, #0
 1313 002e 2E4B     		ldr	r3, .L56+4
 1314 0030 1A70     		strb	r2, [r3]
 948:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
 1315              		.loc 1 948 0
 1316 0032 0020     		movs	r0, #0
 1317 0034 FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 1318              	.LVL111:
1014:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1319              		.loc 1 1014 0
 1320 0038 2C4C     		ldr	r4, .L56+8
 1321 003a E068     		ldr	r0, [r4, #12]
 1322 003c FFF7FEFF 		bl	CapSense_1_CSXDisconnectTx
 1323              	.LVL112:
1017:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1324              		.loc 1 1017 0
 1325 0040 2B4A     		ldr	r2, .L56+12
 1326 0042 1378     		ldrb	r3, [r2]
 1327 0044 0133     		adds	r3, r3, #1
 1328 0046 DBB2     		uxtb	r3, r3
 1329 0048 1370     		strb	r3, [r2]
1023:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if (CapSense_1_curWdgtTotalTx > 0u)
 1330              		.loc 1 1023 0
 1331 004a A388     		ldrh	r3, [r4, #4]
 1332 004c 013B     		subs	r3, r3, #1
 1333 004e 9BB2     		uxth	r3, r3
 1334 0050 A380     		strh	r3, [r4, #4]
1024:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 1335              		.loc 1 1024 0
 1336 0052 002B     		cmp	r3, #0
 1337 0054 0CD0     		beq	.L53
1031:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectTx (CapSense_1_curTxIOPtr);
 1338              		.loc 1 1031 0
 1339 0056 254B     		ldr	r3, .L56+8
 1340 0058 D868     		ldr	r0, [r3, #12]
 1341 005a 1C30     		adds	r0, r0, #28
 1342 005c D860     		str	r0, [r3, #12]
1032:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
 1343              		.loc 1 1032 0
 1344 005e FFF7FEFF 		bl	CapSense_1_CSXConnectTx
 1345              	.LVL113:
1033:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1346              		.loc 1 1033 0
 1347 0062 204A     		ldr	r2, .L56
 1348 0064 1368     		ldr	r3, [r2]
 1349 0066 1833     		adds	r3, r3, #24
 1350 0068 1360     		str	r3, [r2]
1036:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
 1351              		.loc 1 1036 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 65


 1352 006a FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 1353              	.LVL114:
 1354 006e 37E0     		b	.L50
 1355              	.L53:
1042:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalRx > 0u)
 1356              		.loc 1 1042 0
 1357 0070 1E4A     		ldr	r2, .L56+8
 1358 0072 D388     		ldrh	r3, [r2, #6]
 1359 0074 013B     		subs	r3, r3, #1
 1360 0076 9BB2     		uxth	r3, r3
 1361 0078 D380     		strh	r3, [r2, #6]
1043:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 1362              		.loc 1 1043 0
 1363 007a 002B     		cmp	r3, #0
 1364 007c 1DD0     		beq	.L54
1052:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr++;
 1365              		.loc 1 1052 0
 1366 007e 1400     		movs	r4, r2
 1367 0080 9068     		ldr	r0, [r2, #8]
 1368 0082 FFF7FEFF 		bl	CapSense_1_CSXDisconnectRx
 1369              	.LVL115:
1053:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 1370              		.loc 1 1053 0
 1371 0086 A068     		ldr	r0, [r4, #8]
 1372 0088 1C30     		adds	r0, r0, #28
 1373 008a A060     		str	r0, [r4, #8]
1054:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalTx  = CapSense_1_curFlashWdgtPtr->numRows;
 1374              		.loc 1 1054 0
 1375 008c FFF7FEFF 		bl	CapSense_1_CSXConnectRx
 1376              	.LVL116:
1055:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curF
 1377              		.loc 1 1055 0
 1378 0090 184B     		ldr	r3, .L56+16
 1379 0092 1B68     		ldr	r3, [r3]
 1380 0094 1A7F     		ldrb	r2, [r3, #28]
 1381 0096 A280     		strh	r2, [r4, #4]
1056:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = & CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr
 1382              		.loc 1 1056 0
 1383 0098 1868     		ldr	r0, [r3]
 1384 009a E060     		str	r0, [r4, #12]
1057:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 1385              		.loc 1 1057 0
 1386 009c DA7E     		ldrb	r2, [r3, #27]
 1387 009e D300     		lsls	r3, r2, #3
 1388 00a0 9A1A     		subs	r2, r3, r2
 1389 00a2 9300     		lsls	r3, r2, #2
 1390 00a4 C018     		adds	r0, r0, r3
 1391 00a6 E060     		str	r0, [r4, #12]
1058:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1392              		.loc 1 1058 0
 1393 00a8 FFF7FEFF 		bl	CapSense_1_CSXConnectTx
 1394              	.LVL117:
1061:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1395              		.loc 1 1061 0
 1396 00ac 0D4A     		ldr	r2, .L56
 1397 00ae 1368     		ldr	r3, [r2]
 1398 00b0 1833     		adds	r3, r3, #24
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 66


 1399 00b2 1360     		str	r3, [r2]
1064:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 1400              		.loc 1 1064 0
 1401 00b4 FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 1402              	.LVL118:
 1403 00b8 12E0     		b	.L50
 1404              	.L54:
1069:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1405              		.loc 1 1069 0
 1406 00ba 0C4B     		ldr	r3, .L56+8
 1407 00bc 9868     		ldr	r0, [r3, #8]
 1408 00be FFF7FEFF 		bl	CapSense_1_CSXDisconnectRx
 1409              	.LVL119:
1072:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
 1410              		.loc 1 1072 0
 1411 00c2 0D4B     		ldr	r3, .L56+20
 1412 00c4 1B78     		ldrb	r3, [r3]
 1413 00c6 002B     		cmp	r3, #0
 1414 00c8 02D0     		beq	.L55
1074:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
 1415              		.loc 1 1074 0
 1416 00ca FFF7FEFF 		bl	CapSense_1_SsPostAllWidgetsScan
 1417              	.LVL120:
 1418 00ce 07E0     		b	.L50
 1419              	.L55:
1083:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
 1420              		.loc 1 1083 0
 1421 00d0 0A4B     		ldr	r3, .L56+24
 1422 00d2 1A89     		ldrh	r2, [r3, #8]
 1423 00d4 0132     		adds	r2, r2, #1
 1424 00d6 1A81     		strh	r2, [r3, #8]
1084:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
 1425              		.loc 1 1084 0
 1426 00d8 DA68     		ldr	r2, [r3, #12]
 1427 00da 8021     		movs	r1, #128
 1428 00dc 8A43     		bics	r2, r1
 1429 00de DA60     		str	r2, [r3, #12]
 1430              	.L50:
1094:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1431              		.loc 1 1094 0
 1432              		@ sp needed
 1433 00e0 10BD     		pop	{r4, pc}
 1434              	.L57:
 1435 00e2 C046     		.align	2
 1436              	.L56:
 1437 00e4 00000000 		.word	CapSense_1_curRamSnsPtr
 1438 00e8 00000000 		.word	CapSense_1_scanFreqIndex
 1439 00ec 00000000 		.word	.LANCHOR0
 1440 00f0 00000000 		.word	CapSense_1_sensorIndex
 1441 00f4 00000000 		.word	CapSense_1_curFlashWdgtPtr
 1442 00f8 00000000 		.word	CapSense_1_requestScanAllWidget
 1443 00fc 00000000 		.word	CapSense_1_dsRam
 1444              		.cfi_endproc
 1445              	.LFE7:
 1446              		.size	CapSense_1_SsCSXPostMultiScan, .-CapSense_1_SsCSXPostMultiScan
 1447              		.section	.text.CapSense_1_CSXElectrodeCheck,"ax",%progbits
 1448              		.align	2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 67


 1449              		.global	CapSense_1_CSXElectrodeCheck
 1450              		.code	16
 1451              		.thumb_func
 1452              		.type	CapSense_1_CSXElectrodeCheck, %function
 1453              	CapSense_1_CSXElectrodeCheck:
 1454              	.LFB2:
 316:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 1455              		.loc 1 316 0
 1456              		.cfi_startproc
 1457              		@ args = 0, pretend = 0, frame = 0
 1458              		@ frame_needed = 0, uses_anonymous_args = 0
 1459 0000 10B5     		push	{r4, lr}
 1460              		.cfi_def_cfa_offset 8
 1461              		.cfi_offset 4, -8
 1462              		.cfi_offset 14, -4
 321:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
 1463              		.loc 1 321 0
 1464 0002 074B     		ldr	r3, .L60
 1465 0004 1B8A     		ldrh	r3, [r3, #16]
 1466 0006 002B     		cmp	r3, #0
 1467 0008 08D0     		beq	.L58
 360:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
 1468              		.loc 1 360 0
 1469 000a 054C     		ldr	r4, .L60
 1470 000c E068     		ldr	r0, [r4, #12]
 1471 000e FFF7FEFF 		bl	CapSense_1_CSXDisconnectTx
 1472              	.LVL121:
 361:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 1473              		.loc 1 361 0
 1474 0012 A068     		ldr	r0, [r4, #8]
 1475 0014 FFF7FEFF 		bl	CapSense_1_CSXDisconnectRx
 1476              	.LVL122:
 363:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
 1477              		.loc 1 363 0
 1478 0018 0023     		movs	r3, #0
 1479 001a 2382     		strh	r3, [r4, #16]
 1480              	.L58:
 365:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1481              		.loc 1 365 0
 1482              		@ sp needed
 1483 001c 10BD     		pop	{r4, pc}
 1484              	.L61:
 1485 001e C046     		.align	2
 1486              	.L60:
 1487 0020 00000000 		.word	.LANCHOR0
 1488              		.cfi_endproc
 1489              	.LFE2:
 1490              		.size	CapSense_1_CSXElectrodeCheck, .-CapSense_1_CSXElectrodeCheck
 1491              		.section	.text.CapSense_1_CSXSetupWidget,"ax",%progbits
 1492              		.align	2
 1493              		.global	CapSense_1_CSXSetupWidget
 1494              		.code	16
 1495              		.thumb_func
 1496              		.type	CapSense_1_CSXSetupWidget, %function
 1497              	CapSense_1_CSXSetupWidget:
 1498              	.LFB3:
 407:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* variable to access widget details */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 68


 1499              		.loc 1 407 0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 0
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
 1503              	.LVL123:
 1504 0000 70B5     		push	{r4, r5, r6, lr}
 1505              		.cfi_def_cfa_offset 16
 1506              		.cfi_offset 4, -16
 1507              		.cfi_offset 5, -12
 1508              		.cfi_offset 6, -8
 1509              		.cfi_offset 14, -4
 1510 0002 0400     		movs	r4, r0
 417:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1511              		.loc 1 417 0
 1512 0004 C2B2     		uxtb	r2, r0
 1513 0006 124B     		ldr	r3, .L63
 1514 0008 1A70     		strb	r2, [r3]
 419:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1515              		.loc 1 419 0
 1516 000a 0220     		movs	r0, #2
 1517              	.LVL124:
 1518 000c FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
 1519              	.LVL125:
 425:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1520              		.loc 1 425 0
 1521 0010 FFF7FEFF 		bl	CapSense_1_CSXElectrodeCheck
 1522              	.LVL126:
 429:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1523              		.loc 1 429 0
 1524 0014 6001     		lsls	r0, r4, #5
 1525 0016 0F4B     		ldr	r3, .L63+4
 1526 0018 C018     		adds	r0, r0, r3
 1527 001a 0F4B     		ldr	r3, .L63+8
 1528 001c 1860     		str	r0, [r3]
 431:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1529              		.loc 1 431 0
 1530 001e 4668     		ldr	r6, [r0, #4]
 1531              	.LVL127:
 434:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #else
 1532              		.loc 1 434 0
 1533 0020 0E4D     		ldr	r5, .L63+12
 1534 0022 6C8C     		ldrh	r4, [r5, #34]
 1535              	.LVL128:
 439:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod  = CapSense_1_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 1536              		.loc 1 439 0
 1537 0024 3288     		ldrh	r2, [r6]
 1538 0026 0E4B     		ldr	r3, .L63+16
 1539 0028 1A60     		str	r2, [r3]
 440:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1540              		.loc 1 440 0
 1541 002a 3000     		movs	r0, r6
 1542 002c FFF7FEFF 		bl	CapSense_1_SsCalcCsxScanPeriod
 1543              	.LVL129:
 1544 0030 0C4B     		ldr	r3, .L63+20
 1545 0032 5880     		strh	r0, [r3, #2]
 442:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1546              		.loc 1 442 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 69


 1547 0034 737A     		ldrb	r3, [r6, #9]
 1548              	.LVL130:
 444:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << CapSense_1_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 1549              		.loc 1 444 0
 1550 0036 013C     		subs	r4, r4, #1
 1551              	.LVL131:
 1552 0038 2405     		lsls	r4, r4, #20
 1553              	.LVL132:
 1554 003a 240D     		lsrs	r4, r4, #20
 1555              	.LVL133:
 445:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, tmpRegVal);
 1556              		.loc 1 445 0
 1557 003c 1B04     		lsls	r3, r3, #16
 1558              	.LVL134:
 1559 003e 1C43     		orrs	r4, r3
 1560              	.LVL135:
 446:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsxClk);
 1561              		.loc 1 446 0
 1562 0040 094B     		ldr	r3, .L63+24
 1563 0042 1C60     		str	r4, [r3]
 447:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
 1564              		.loc 1 447 0
 1565 0044 2023     		movs	r3, #32
 1566 0046 E85C     		ldrb	r0, [r5, r3]
 1567 0048 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 1568              	.LVL136:
 476:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1569              		.loc 1 476 0
 1570              		@ sp needed
 1571              	.LVL137:
 1572              	.LVL138:
 1573 004c 70BD     		pop	{r4, r5, r6, pc}
 1574              	.L64:
 1575 004e C046     		.align	2
 1576              	.L63:
 1577 0050 00000000 		.word	CapSense_1_widgetIndex
 1578 0054 00000000 		.word	CapSense_1_dsFlash
 1579 0058 00000000 		.word	CapSense_1_curFlashWdgtPtr
 1580 005c 00000000 		.word	CapSense_1_dsRam
 1581 0060 14030B40 		.word	1074463508
 1582 0064 00000000 		.word	.LANCHOR0
 1583 0068 00020B40 		.word	1074463232
 1584              		.cfi_endproc
 1585              	.LFE3:
 1586              		.size	CapSense_1_CSXSetupWidget, .-CapSense_1_CSXSetupWidget
 1587              		.global	__aeabi_uidivmod
 1588              		.section	.text.CapSense_1_CSXSetupWidgetExt,"ax",%progbits
 1589              		.align	2
 1590              		.global	CapSense_1_CSXSetupWidgetExt
 1591              		.code	16
 1592              		.thumb_func
 1593              		.type	CapSense_1_CSXSetupWidgetExt, %function
 1594              	CapSense_1_CSXSetupWidgetExt:
 1595              	.LFB4:
 517:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 txIndex;
 1596              		.loc 1 517 0
 1597              		.cfi_startproc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 70


 1598              		@ args = 0, pretend = 0, frame = 0
 1599              		@ frame_needed = 0, uses_anonymous_args = 0
 1600              	.LVL139:
 1601 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1602              		.cfi_def_cfa_offset 24
 1603              		.cfi_offset 3, -24
 1604              		.cfi_offset 4, -20
 1605              		.cfi_offset 5, -16
 1606              		.cfi_offset 6, -12
 1607              		.cfi_offset 7, -8
 1608              		.cfi_offset 14, -4
 1609 0002 0C00     		movs	r4, r1
 526:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_sensorIndex = (uint8)sensorId;
 1610              		.loc 1 526 0
 1611 0004 FFF7FEFF 		bl	CapSense_1_CSXSetupWidget
 1612              	.LVL140:
 527:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1613              		.loc 1 527 0
 1614 0008 E2B2     		uxtb	r2, r4
 1615 000a 184B     		ldr	r3, .L66
 1616 000c 1A70     		strb	r2, [r3]
 530:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = &CapSense_1_curRamSnsPtr[sensorId];
 1617              		.loc 1 530 0
 1618 000e 184B     		ldr	r3, .L66+4
 1619 0010 1D68     		ldr	r5, [r3]
 531:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1620              		.loc 1 531 0
 1621 0012 6300     		lsls	r3, r4, #1
 1622 0014 1B19     		adds	r3, r3, r4
 1623 0016 DB00     		lsls	r3, r3, #3
 1624 0018 AA68     		ldr	r2, [r5, #8]
 1625 001a 9446     		mov	ip, r2
 1626 001c 6344     		add	r3, r3, ip
 1627 001e 154A     		ldr	r2, .L66+8
 1628 0020 1360     		str	r3, [r2]
 543:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     txIndex = sensorId % CapSense_1_curFlashWdgtPtr->numRows;
 1629              		.loc 1 543 0
 1630 0022 2F7F     		ldrb	r7, [r5, #28]
 1631 0024 3900     		movs	r1, r7
 1632 0026 2000     		movs	r0, r4
 1633 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1634              	.LVL141:
 1635 002c 0600     		movs	r6, r0
 1636              	.LVL142:
 544:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1637              		.loc 1 544 0
 1638 002e 3900     		movs	r1, r7
 1639 0030 2000     		movs	r0, r4
 1640              	.LVL143:
 1641 0032 FFF7FEFF 		bl	__aeabi_uidivmod
 1642              	.LVL144:
 596:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRxIOPtr = &CapSense_1_curRxIOPtr[rxIndex];
 1643              		.loc 1 596 0
 1644 0036 2A68     		ldr	r2, [r5]
 1645 0038 0F4C     		ldr	r4, .L66+12
 1646              	.LVL145:
 597:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 71


 1647              		.loc 1 597 0
 1648 003a F300     		lsls	r3, r6, #3
 1649 003c 9B1B     		subs	r3, r3, r6
 1650 003e 9B00     		lsls	r3, r3, #2
 1651 0040 D318     		adds	r3, r2, r3
 1652 0042 A360     		str	r3, [r4, #8]
 599:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curTxIOPtr = &CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr->numCols + t
 1653              		.loc 1 599 0
 1654 0044 E260     		str	r2, [r4, #12]
 600:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1655              		.loc 1 600 0
 1656 0046 E87E     		ldrb	r0, [r5, #27]
 1657 0048 4118     		adds	r1, r0, r1
 1658              	.LVL146:
 1659 004a CB00     		lsls	r3, r1, #3
 1660 004c 581A     		subs	r0, r3, r1
 1661 004e 8000     		lsls	r0, r0, #2
 1662 0050 1018     		adds	r0, r2, r0
 1663 0052 E060     		str	r0, [r4, #12]
 603:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 1664              		.loc 1 603 0
 1665 0054 FFF7FEFF 		bl	CapSense_1_CSXConnectTx
 1666              	.LVL147:
 604:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_eleCsxDisconnectFlag = CapSense_1_DISCONNECT_IO_FLAG;
 1667              		.loc 1 604 0
 1668 0058 A068     		ldr	r0, [r4, #8]
 1669 005a FFF7FEFF 		bl	CapSense_1_CSXConnectRx
 1670              	.LVL148:
 605:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1671              		.loc 1 605 0
 1672 005e 0123     		movs	r3, #1
 1673 0060 2382     		strh	r3, [r4, #16]
 608:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 1674              		.loc 1 608 0
 1675 0062 064A     		ldr	r2, .L66+16
 1676 0064 064B     		ldr	r3, .L66+20
 1677 0066 1A60     		str	r2, [r3]
 613:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1678              		.loc 1 613 0
 1679              		@ sp needed
 1680              	.LVL149:
 1681 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1682              	.L67:
 1683 006a C046     		.align	2
 1684              	.L66:
 1685 006c 00000000 		.word	CapSense_1_sensorIndex
 1686 0070 00000000 		.word	CapSense_1_curFlashWdgtPtr
 1687 0074 00000000 		.word	CapSense_1_curRamSnsPtr
 1688 0078 00000000 		.word	.LANCHOR0
 1689 007c 00000000 		.word	CapSense_1_SsCSXPostSingleScan
 1690 0080 00000000 		.word	.LANCHOR1
 1691              		.cfi_endproc
 1692              	.LFE4:
 1693              		.size	CapSense_1_CSXSetupWidgetExt, .-CapSense_1_CSXSetupWidgetExt
 1694              		.section	.text.CapSense_1_SsCSXGetTxClkDivider,"ax",%progbits
 1695              		.align	2
 1696              		.global	CapSense_1_SsCSXGetTxClkDivider
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 72


 1697              		.code	16
 1698              		.thumb_func
 1699              		.type	CapSense_1_SsCSXGetTxClkDivider, %function
 1700              	CapSense_1_SsCSXGetTxClkDivider:
 1701              	.LFB15:
1805:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 retVal;
 1702              		.loc 1 1805 0
 1703              		.cfi_startproc
 1704              		@ args = 0, pretend = 0, frame = 0
 1705              		@ frame_needed = 0, uses_anonymous_args = 0
 1706              		@ link register save eliminated.
 1707              	.LVL150:
1817:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
 1708              		.loc 1 1817 0
 1709 0000 014B     		ldr	r3, .L69
 1710 0002 588C     		ldrh	r0, [r3, #34]
 1711              	.LVL151:
1826:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1712              		.loc 1 1826 0
 1713              		@ sp needed
 1714 0004 7047     		bx	lr
 1715              	.L70:
 1716 0006 C046     		.align	2
 1717              	.L69:
 1718 0008 00000000 		.word	CapSense_1_dsRam
 1719              		.cfi_endproc
 1720              	.LFE15:
 1721              		.size	CapSense_1_SsCSXGetTxClkDivider, .-CapSense_1_SsCSXGetTxClkDivider
 1722              		.global	CapSense_1_CSXPostScanApiPtr
 1723              		.global	CapSense_1_csxRawCount
 1724              		.global	CapSense_1_csxScanPeriod
 1725              		.data
 1726              		.align	2
 1727              		.set	.LANCHOR1,. + 0
 1728              		.type	CapSense_1_CSXPostScanApiPtr, %object
 1729              		.size	CapSense_1_CSXPostScanApiPtr, 4
 1730              	CapSense_1_CSXPostScanApiPtr:
 1731 0000 00000000 		.word	CapSense_1_SsCSXPostMultiScan
 1732              		.bss
 1733              		.align	2
 1734              		.set	.LANCHOR0,. + 0
 1735              		.type	CapSense_1_csxRawCount, %object
 1736              		.size	CapSense_1_csxRawCount, 2
 1737              	CapSense_1_csxRawCount:
 1738 0000 0000     		.space	2
 1739              		.type	CapSense_1_csxScanPeriod, %object
 1740              		.size	CapSense_1_csxScanPeriod, 2
 1741              	CapSense_1_csxScanPeriod:
 1742 0002 0000     		.space	2
 1743              		.type	CapSense_1_curWdgtTotalTx, %object
 1744              		.size	CapSense_1_curWdgtTotalTx, 2
 1745              	CapSense_1_curWdgtTotalTx:
 1746 0004 0000     		.space	2
 1747              		.type	CapSense_1_curWdgtTotalRx, %object
 1748              		.size	CapSense_1_curWdgtTotalRx, 2
 1749              	CapSense_1_curWdgtTotalRx:
 1750 0006 0000     		.space	2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 73


 1751              		.type	CapSense_1_curRxIOPtr, %object
 1752              		.size	CapSense_1_curRxIOPtr, 4
 1753              	CapSense_1_curRxIOPtr:
 1754 0008 00000000 		.space	4
 1755              		.type	CapSense_1_curTxIOPtr, %object
 1756              		.size	CapSense_1_curTxIOPtr, 4
 1757              	CapSense_1_curTxIOPtr:
 1758 000c 00000000 		.space	4
 1759              		.type	CapSense_1_eleCsxDisconnectFlag, %object
 1760              		.size	CapSense_1_eleCsxDisconnectFlag, 2
 1761              	CapSense_1_eleCsxDisconnectFlag:
 1762 0010 0000     		.space	2
 1763              		.text
 1764              	.Letext0:
 1765              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1766              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1767              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1768              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_Sensing.h"
 1769              		.file 6 "Generated_Source\\PSoC4\\CyLib.h"
 1770              		.section	.debug_info,"",%progbits
 1771              	.Ldebug_info0:
 1772 0000 C00D0000 		.4byte	0xdc0
 1773 0004 0400     		.2byte	0x4
 1774 0006 00000000 		.4byte	.Ldebug_abbrev0
 1775 000a 04       		.byte	0x4
 1776 000b 01       		.uleb128 0x1
 1777 000c 77020000 		.4byte	.LASF160
 1778 0010 0C       		.byte	0xc
 1779 0011 62050000 		.4byte	.LASF161
 1780 0015 2E020000 		.4byte	.LASF162
 1781 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1782 001d 00000000 		.4byte	0
 1783 0021 00000000 		.4byte	.Ldebug_line0
 1784 0025 02       		.uleb128 0x2
 1785 0026 01       		.byte	0x1
 1786 0027 06       		.byte	0x6
 1787 0028 760A0000 		.4byte	.LASF0
 1788 002c 02       		.uleb128 0x2
 1789 002d 01       		.byte	0x1
 1790 002e 08       		.byte	0x8
 1791 002f 68090000 		.4byte	.LASF1
 1792 0033 02       		.uleb128 0x2
 1793 0034 02       		.byte	0x2
 1794 0035 05       		.byte	0x5
 1795 0036 C4070000 		.4byte	.LASF2
 1796 003a 02       		.uleb128 0x2
 1797 003b 02       		.byte	0x2
 1798 003c 07       		.byte	0x7
 1799 003d 870A0000 		.4byte	.LASF3
 1800 0041 02       		.uleb128 0x2
 1801 0042 04       		.byte	0x4
 1802 0043 05       		.byte	0x5
 1803 0044 E9070000 		.4byte	.LASF4
 1804 0048 02       		.uleb128 0x2
 1805 0049 04       		.byte	0x4
 1806 004a 07       		.byte	0x7
 1807 004b 12090000 		.4byte	.LASF5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 74


 1808 004f 02       		.uleb128 0x2
 1809 0050 08       		.byte	0x8
 1810 0051 05       		.byte	0x5
 1811 0052 9A050000 		.4byte	.LASF6
 1812 0056 02       		.uleb128 0x2
 1813 0057 08       		.byte	0x8
 1814 0058 07       		.byte	0x7
 1815 0059 4A030000 		.4byte	.LASF7
 1816 005d 03       		.uleb128 0x3
 1817 005e 04       		.byte	0x4
 1818 005f 05       		.byte	0x5
 1819 0060 696E7400 		.ascii	"int\000"
 1820 0064 02       		.uleb128 0x2
 1821 0065 04       		.byte	0x4
 1822 0066 07       		.byte	0x7
 1823 0067 C4000000 		.4byte	.LASF8
 1824 006b 04       		.uleb128 0x4
 1825 006c DE0A0000 		.4byte	.LASF9
 1826 0070 02       		.byte	0x2
 1827 0071 E401     		.2byte	0x1e4
 1828 0073 2C000000 		.4byte	0x2c
 1829 0077 04       		.uleb128 0x4
 1830 0078 1E050000 		.4byte	.LASF10
 1831 007c 02       		.byte	0x2
 1832 007d E501     		.2byte	0x1e5
 1833 007f 3A000000 		.4byte	0x3a
 1834 0083 04       		.uleb128 0x4
 1835 0084 58060000 		.4byte	.LASF11
 1836 0088 02       		.byte	0x2
 1837 0089 E601     		.2byte	0x1e6
 1838 008b 48000000 		.4byte	0x48
 1839 008f 02       		.uleb128 0x2
 1840 0090 04       		.byte	0x4
 1841 0091 04       		.byte	0x4
 1842 0092 22020000 		.4byte	.LASF12
 1843 0096 02       		.uleb128 0x2
 1844 0097 08       		.byte	0x8
 1845 0098 04       		.byte	0x4
 1846 0099 E40A0000 		.4byte	.LASF13
 1847 009d 02       		.uleb128 0x2
 1848 009e 01       		.byte	0x1
 1849 009f 08       		.byte	0x8
 1850 00a0 E2040000 		.4byte	.LASF14
 1851 00a4 05       		.uleb128 0x5
 1852 00a5 6B000000 		.4byte	0x6b
 1853 00a9 05       		.uleb128 0x5
 1854 00aa 77000000 		.4byte	0x77
 1855 00ae 04       		.uleb128 0x4
 1856 00af 4A070000 		.4byte	.LASF15
 1857 00b3 02       		.byte	0x2
 1858 00b4 9002     		.2byte	0x290
 1859 00b6 BA000000 		.4byte	0xba
 1860 00ba 05       		.uleb128 0x5
 1861 00bb 83000000 		.4byte	0x83
 1862 00bf 06       		.uleb128 0x6
 1863 00c0 04       		.byte	0x4
 1864 00c1 C5000000 		.4byte	0xc5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 75


 1865 00c5 07       		.uleb128 0x7
 1866 00c6 02       		.uleb128 0x2
 1867 00c7 08       		.byte	0x8
 1868 00c8 04       		.byte	0x4
 1869 00c9 3E070000 		.4byte	.LASF16
 1870 00cd 02       		.uleb128 0x2
 1871 00ce 04       		.byte	0x4
 1872 00cf 07       		.byte	0x7
 1873 00d0 01090000 		.4byte	.LASF17
 1874 00d4 08       		.uleb128 0x8
 1875 00d5 04       		.byte	0x4
 1876 00d6 04       		.uleb128 0x4
 1877 00d7 A8050000 		.4byte	.LASF18
 1878 00db 03       		.byte	0x3
 1879 00dc 5B01     		.2byte	0x15b
 1880 00de 77000000 		.4byte	0x77
 1881 00e2 04       		.uleb128 0x4
 1882 00e3 AB030000 		.4byte	.LASF19
 1883 00e7 03       		.byte	0x3
 1884 00e8 5F01     		.2byte	0x15f
 1885 00ea 6B000000 		.4byte	0x6b
 1886 00ee 09       		.uleb128 0x9
 1887 00ef 01       		.byte	0x1
 1888 00f0 2C000000 		.4byte	0x2c
 1889 00f4 04       		.byte	0x4
 1890 00f5 70       		.byte	0x70
 1891 00f6 19010000 		.4byte	0x119
 1892 00fa 0A       		.uleb128 0xa
 1893 00fb 7A060000 		.4byte	.LASF20
 1894 00ff 00       		.byte	0
 1895 0100 0A       		.uleb128 0xa
 1896 0101 A6070000 		.4byte	.LASF21
 1897 0105 01       		.byte	0x1
 1898 0106 0A       		.uleb128 0xa
 1899 0107 65080000 		.4byte	.LASF22
 1900 010b 02       		.byte	0x2
 1901 010c 0A       		.uleb128 0xa
 1902 010d 14040000 		.4byte	.LASF23
 1903 0111 03       		.byte	0x3
 1904 0112 0A       		.uleb128 0xa
 1905 0113 130B0000 		.4byte	.LASF24
 1906 0117 04       		.byte	0x4
 1907 0118 00       		.byte	0
 1908 0119 0B       		.uleb128 0xb
 1909 011a 0A       		.byte	0xa
 1910 011b 04       		.byte	0x4
 1911 011c 8E       		.byte	0x8e
 1912 011d 82010000 		.4byte	0x182
 1913 0121 0C       		.uleb128 0xc
 1914 0122 25050000 		.4byte	.LASF25
 1915 0126 04       		.byte	0x4
 1916 0127 93       		.byte	0x93
 1917 0128 77000000 		.4byte	0x77
 1918 012c 00       		.byte	0
 1919 012d 0C       		.uleb128 0xc
 1920 012e 41090000 		.4byte	.LASF26
 1921 0132 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 76


 1922 0133 98       		.byte	0x98
 1923 0134 D6000000 		.4byte	0xd6
 1924 0138 02       		.byte	0x2
 1925 0139 0C       		.uleb128 0xc
 1926 013a DA040000 		.4byte	.LASF27
 1927 013e 04       		.byte	0x4
 1928 013f 9D       		.byte	0x9d
 1929 0140 6B000000 		.4byte	0x6b
 1930 0144 04       		.byte	0x4
 1931 0145 0C       		.uleb128 0xc
 1932 0146 13060000 		.4byte	.LASF28
 1933 014a 04       		.byte	0x4
 1934 014b A2       		.byte	0xa2
 1935 014c 6B000000 		.4byte	0x6b
 1936 0150 05       		.byte	0x5
 1937 0151 0C       		.uleb128 0xc
 1938 0152 5F060000 		.4byte	.LASF29
 1939 0156 04       		.byte	0x4
 1940 0157 A8       		.byte	0xa8
 1941 0158 6B000000 		.4byte	0x6b
 1942 015c 06       		.byte	0x6
 1943 015d 0C       		.uleb128 0xc
 1944 015e C2050000 		.4byte	.LASF30
 1945 0162 04       		.byte	0x4
 1946 0163 AE       		.byte	0xae
 1947 0164 6B000000 		.4byte	0x6b
 1948 0168 07       		.byte	0x7
 1949 0169 0C       		.uleb128 0xc
 1950 016a 33040000 		.4byte	.LASF31
 1951 016e 04       		.byte	0x4
 1952 016f B5       		.byte	0xb5
 1953 0170 E2000000 		.4byte	0xe2
 1954 0174 08       		.byte	0x8
 1955 0175 0C       		.uleb128 0xc
 1956 0176 99070000 		.4byte	.LASF32
 1957 017a 04       		.byte	0x4
 1958 017b BA       		.byte	0xba
 1959 017c 6B000000 		.4byte	0x6b
 1960 0180 09       		.byte	0x9
 1961 0181 00       		.byte	0
 1962 0182 0D       		.uleb128 0xd
 1963 0183 31060000 		.4byte	.LASF33
 1964 0187 04       		.byte	0x4
 1965 0188 BB       		.byte	0xbb
 1966 0189 19010000 		.4byte	0x119
 1967 018d 0B       		.uleb128 0xb
 1968 018e 0A       		.byte	0xa
 1969 018f 04       		.byte	0x4
 1970 0190 C0       		.byte	0xc0
 1971 0191 F6010000 		.4byte	0x1f6
 1972 0195 0C       		.uleb128 0xc
 1973 0196 25050000 		.4byte	.LASF25
 1974 019a 04       		.byte	0x4
 1975 019b C5       		.byte	0xc5
 1976 019c 77000000 		.4byte	0x77
 1977 01a0 00       		.byte	0
 1978 01a1 0C       		.uleb128 0xc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 77


 1979 01a2 41090000 		.4byte	.LASF26
 1980 01a6 04       		.byte	0x4
 1981 01a7 CA       		.byte	0xca
 1982 01a8 D6000000 		.4byte	0xd6
 1983 01ac 02       		.byte	0x2
 1984 01ad 0C       		.uleb128 0xc
 1985 01ae DA040000 		.4byte	.LASF27
 1986 01b2 04       		.byte	0x4
 1987 01b3 CF       		.byte	0xcf
 1988 01b4 6B000000 		.4byte	0x6b
 1989 01b8 04       		.byte	0x4
 1990 01b9 0C       		.uleb128 0xc
 1991 01ba 13060000 		.4byte	.LASF28
 1992 01be 04       		.byte	0x4
 1993 01bf D4       		.byte	0xd4
 1994 01c0 6B000000 		.4byte	0x6b
 1995 01c4 05       		.byte	0x5
 1996 01c5 0C       		.uleb128 0xc
 1997 01c6 5F060000 		.4byte	.LASF29
 1998 01ca 04       		.byte	0x4
 1999 01cb DA       		.byte	0xda
 2000 01cc 6B000000 		.4byte	0x6b
 2001 01d0 06       		.byte	0x6
 2002 01d1 0C       		.uleb128 0xc
 2003 01d2 C2050000 		.4byte	.LASF30
 2004 01d6 04       		.byte	0x4
 2005 01d7 E0       		.byte	0xe0
 2006 01d8 6B000000 		.4byte	0x6b
 2007 01dc 07       		.byte	0x7
 2008 01dd 0C       		.uleb128 0xc
 2009 01de 33040000 		.4byte	.LASF31
 2010 01e2 04       		.byte	0x4
 2011 01e3 E7       		.byte	0xe7
 2012 01e4 E2000000 		.4byte	0xe2
 2013 01e8 08       		.byte	0x8
 2014 01e9 0C       		.uleb128 0xc
 2015 01ea 99070000 		.4byte	.LASF32
 2016 01ee 04       		.byte	0x4
 2017 01ef EC       		.byte	0xec
 2018 01f0 6B000000 		.4byte	0x6b
 2019 01f4 09       		.byte	0x9
 2020 01f5 00       		.byte	0
 2021 01f6 0D       		.uleb128 0xd
 2022 01f7 500B0000 		.4byte	.LASF34
 2023 01fb 04       		.byte	0x4
 2024 01fc ED       		.byte	0xed
 2025 01fd 8D010000 		.4byte	0x18d
 2026 0201 0B       		.uleb128 0xb
 2027 0202 3C       		.byte	0x3c
 2028 0203 04       		.byte	0x4
 2029 0204 F3       		.byte	0xf3
 2030 0205 56020000 		.4byte	0x256
 2031 0209 0C       		.uleb128 0xc
 2032 020a 8D080000 		.4byte	.LASF35
 2033 020e 04       		.byte	0x4
 2034 020f F8       		.byte	0xf8
 2035 0210 F6010000 		.4byte	0x1f6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 78


 2036 0214 00       		.byte	0
 2037 0215 0C       		.uleb128 0xc
 2038 0216 95080000 		.4byte	.LASF36
 2039 021a 04       		.byte	0x4
 2040 021b FD       		.byte	0xfd
 2041 021c F6010000 		.4byte	0x1f6
 2042 0220 0A       		.byte	0xa
 2043 0221 0E       		.uleb128 0xe
 2044 0222 9D080000 		.4byte	.LASF37
 2045 0226 04       		.byte	0x4
 2046 0227 0201     		.2byte	0x102
 2047 0229 F6010000 		.4byte	0x1f6
 2048 022d 14       		.byte	0x14
 2049 022e 0E       		.uleb128 0xe
 2050 022f A5080000 		.4byte	.LASF38
 2051 0233 04       		.byte	0x4
 2052 0234 0701     		.2byte	0x107
 2053 0236 F6010000 		.4byte	0x1f6
 2054 023a 1E       		.byte	0x1e
 2055 023b 0E       		.uleb128 0xe
 2056 023c AD080000 		.4byte	.LASF39
 2057 0240 04       		.byte	0x4
 2058 0241 0C01     		.2byte	0x10c
 2059 0243 F6010000 		.4byte	0x1f6
 2060 0247 28       		.byte	0x28
 2061 0248 0E       		.uleb128 0xe
 2062 0249 B5080000 		.4byte	.LASF40
 2063 024d 04       		.byte	0x4
 2064 024e 1101     		.2byte	0x111
 2065 0250 F6010000 		.4byte	0x1f6
 2066 0254 32       		.byte	0x32
 2067 0255 00       		.byte	0
 2068 0256 04       		.uleb128 0x4
 2069 0257 CF010000 		.4byte	.LASF41
 2070 025b 04       		.byte	0x4
 2071 025c 1201     		.2byte	0x112
 2072 025e 01020000 		.4byte	0x201
 2073 0262 0F       		.uleb128 0xf
 2074 0263 18       		.byte	0x18
 2075 0264 04       		.byte	0x4
 2076 0265 1801     		.2byte	0x118
 2077 0267 BA020000 		.4byte	0x2ba
 2078 026b 10       		.uleb128 0x10
 2079 026c 72617700 		.ascii	"raw\000"
 2080 0270 04       		.byte	0x4
 2081 0271 1D01     		.2byte	0x11d
 2082 0273 BA020000 		.4byte	0x2ba
 2083 0277 00       		.byte	0
 2084 0278 0E       		.uleb128 0xe
 2085 0279 820A0000 		.4byte	.LASF42
 2086 027d 04       		.byte	0x4
 2087 027e 2201     		.2byte	0x122
 2088 0280 BA020000 		.4byte	0x2ba
 2089 0284 06       		.byte	0x6
 2090 0285 0E       		.uleb128 0xe
 2091 0286 4A090000 		.4byte	.LASF43
 2092 028a 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 79


 2093 028b 2801     		.2byte	0x128
 2094 028d CA020000 		.4byte	0x2ca
 2095 0291 0C       		.byte	0xc
 2096 0292 0E       		.uleb128 0xe
 2097 0293 2C080000 		.4byte	.LASF44
 2098 0297 04       		.byte	0x4
 2099 0298 2D01     		.2byte	0x12d
 2100 029a D6000000 		.4byte	0xd6
 2101 029e 10       		.byte	0x10
 2102 029f 0E       		.uleb128 0xe
 2103 02a0 EB0A0000 		.4byte	.LASF45
 2104 02a4 04       		.byte	0x4
 2105 02a5 3201     		.2byte	0x132
 2106 02a7 DA020000 		.4byte	0x2da
 2107 02ab 12       		.byte	0x12
 2108 02ac 0E       		.uleb128 0xe
 2109 02ad 59050000 		.4byte	.LASF46
 2110 02b1 04       		.byte	0x4
 2111 02b2 3701     		.2byte	0x137
 2112 02b4 CA020000 		.4byte	0x2ca
 2113 02b8 15       		.byte	0x15
 2114 02b9 00       		.byte	0
 2115 02ba 11       		.uleb128 0x11
 2116 02bb 77000000 		.4byte	0x77
 2117 02bf CA020000 		.4byte	0x2ca
 2118 02c3 12       		.uleb128 0x12
 2119 02c4 CD000000 		.4byte	0xcd
 2120 02c8 02       		.byte	0x2
 2121 02c9 00       		.byte	0
 2122 02ca 11       		.uleb128 0x11
 2123 02cb 6B000000 		.4byte	0x6b
 2124 02cf DA020000 		.4byte	0x2da
 2125 02d3 12       		.uleb128 0x12
 2126 02d4 CD000000 		.4byte	0xcd
 2127 02d8 02       		.byte	0x2
 2128 02d9 00       		.byte	0
 2129 02da 11       		.uleb128 0x11
 2130 02db E2000000 		.4byte	0xe2
 2131 02df EA020000 		.4byte	0x2ea
 2132 02e3 12       		.uleb128 0x12
 2133 02e4 CD000000 		.4byte	0xcd
 2134 02e8 02       		.byte	0x2
 2135 02e9 00       		.byte	0
 2136 02ea 04       		.uleb128 0x4
 2137 02eb F90A0000 		.4byte	.LASF47
 2138 02ef 04       		.byte	0x4
 2139 02f0 3801     		.2byte	0x138
 2140 02f2 62020000 		.4byte	0x262
 2141 02f6 0F       		.uleb128 0xf
 2142 02f7 90       		.byte	0x90
 2143 02f8 04       		.byte	0x4
 2144 02f9 3E01     		.2byte	0x13e
 2145 02fb 4E030000 		.4byte	0x34e
 2146 02ff 0E       		.uleb128 0xe
 2147 0300 8D080000 		.4byte	.LASF35
 2148 0304 04       		.byte	0x4
 2149 0305 4301     		.2byte	0x143
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 80


 2150 0307 4E030000 		.4byte	0x34e
 2151 030b 00       		.byte	0
 2152 030c 0E       		.uleb128 0xe
 2153 030d 95080000 		.4byte	.LASF36
 2154 0311 04       		.byte	0x4
 2155 0312 4801     		.2byte	0x148
 2156 0314 4E030000 		.4byte	0x34e
 2157 0318 18       		.byte	0x18
 2158 0319 0E       		.uleb128 0xe
 2159 031a 9D080000 		.4byte	.LASF37
 2160 031e 04       		.byte	0x4
 2161 031f 4D01     		.2byte	0x14d
 2162 0321 4E030000 		.4byte	0x34e
 2163 0325 30       		.byte	0x30
 2164 0326 0E       		.uleb128 0xe
 2165 0327 A5080000 		.4byte	.LASF38
 2166 032b 04       		.byte	0x4
 2167 032c 5201     		.2byte	0x152
 2168 032e 4E030000 		.4byte	0x34e
 2169 0332 48       		.byte	0x48
 2170 0333 0E       		.uleb128 0xe
 2171 0334 AD080000 		.4byte	.LASF39
 2172 0338 04       		.byte	0x4
 2173 0339 5701     		.2byte	0x157
 2174 033b 4E030000 		.4byte	0x34e
 2175 033f 60       		.byte	0x60
 2176 0340 0E       		.uleb128 0xe
 2177 0341 B5080000 		.4byte	.LASF40
 2178 0345 04       		.byte	0x4
 2179 0346 5C01     		.2byte	0x15c
 2180 0348 4E030000 		.4byte	0x34e
 2181 034c 78       		.byte	0x78
 2182 034d 00       		.byte	0
 2183 034e 11       		.uleb128 0x11
 2184 034f EA020000 		.4byte	0x2ea
 2185 0353 5E030000 		.4byte	0x35e
 2186 0357 12       		.uleb128 0x12
 2187 0358 CD000000 		.4byte	0xcd
 2188 035c 00       		.byte	0
 2189 035d 00       		.byte	0
 2190 035e 04       		.uleb128 0x4
 2191 035f 91060000 		.4byte	.LASF48
 2192 0363 04       		.byte	0x4
 2193 0364 5D01     		.2byte	0x15d
 2194 0366 F6020000 		.4byte	0x2f6
 2195 036a 0F       		.uleb128 0xf
 2196 036b FC       		.byte	0xfc
 2197 036c 04       		.byte	0x4
 2198 036d 6301     		.2byte	0x163
 2199 036f 5E040000 		.4byte	0x45e
 2200 0373 0E       		.uleb128 0xe
 2201 0374 63070000 		.4byte	.LASF49
 2202 0378 04       		.byte	0x4
 2203 0379 6A01     		.2byte	0x16a
 2204 037b 77000000 		.4byte	0x77
 2205 037f 00       		.byte	0
 2206 0380 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 81


 2207 0381 470B0000 		.4byte	.LASF50
 2208 0385 04       		.byte	0x4
 2209 0386 6F01     		.2byte	0x16f
 2210 0388 77000000 		.4byte	0x77
 2211 038c 02       		.byte	0x2
 2212 038d 0E       		.uleb128 0xe
 2213 038e 0C010000 		.4byte	.LASF51
 2214 0392 04       		.byte	0x4
 2215 0393 7401     		.2byte	0x174
 2216 0395 77000000 		.4byte	0x77
 2217 0399 04       		.byte	0x4
 2218 039a 0E       		.uleb128 0xe
 2219 039b 31080000 		.4byte	.LASF52
 2220 039f 04       		.byte	0x4
 2221 03a0 7A01     		.2byte	0x17a
 2222 03a2 77000000 		.4byte	0x77
 2223 03a6 06       		.byte	0x6
 2224 03a7 0E       		.uleb128 0xe
 2225 03a8 00010000 		.4byte	.LASF53
 2226 03ac 04       		.byte	0x4
 2227 03ad 7F01     		.2byte	0x17f
 2228 03af 77000000 		.4byte	0x77
 2229 03b3 08       		.byte	0x8
 2230 03b4 0E       		.uleb128 0xe
 2231 03b5 46050000 		.4byte	.LASF54
 2232 03b9 04       		.byte	0x4
 2233 03ba 8401     		.2byte	0x184
 2234 03bc BA000000 		.4byte	0xba
 2235 03c0 0C       		.byte	0xc
 2236 03c1 0E       		.uleb128 0xe
 2237 03c2 F2070000 		.4byte	.LASF55
 2238 03c6 04       		.byte	0x4
 2239 03c7 8A01     		.2byte	0x18a
 2240 03c9 5E040000 		.4byte	0x45e
 2241 03cd 10       		.byte	0x10
 2242 03ce 0E       		.uleb128 0xe
 2243 03cf C5080000 		.4byte	.LASF56
 2244 03d3 04       		.byte	0x4
 2245 03d4 9101     		.2byte	0x191
 2246 03d6 5E040000 		.4byte	0x45e
 2247 03da 14       		.byte	0x14
 2248 03db 0E       		.uleb128 0xe
 2249 03dc 8F070000 		.4byte	.LASF57
 2250 03e0 04       		.byte	0x4
 2251 03e1 A101     		.2byte	0x1a1
 2252 03e3 6E040000 		.4byte	0x46e
 2253 03e7 18       		.byte	0x18
 2254 03e8 0E       		.uleb128 0xe
 2255 03e9 26060000 		.4byte	.LASF58
 2256 03ed 04       		.byte	0x4
 2257 03ee A701     		.2byte	0x1a7
 2258 03f0 77000000 		.4byte	0x77
 2259 03f4 1E       		.byte	0x1e
 2260 03f5 0E       		.uleb128 0xe
 2261 03f6 B5090000 		.4byte	.LASF59
 2262 03fa 04       		.byte	0x4
 2263 03fb AC01     		.2byte	0x1ac
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 82


 2264 03fd 6B000000 		.4byte	0x6b
 2265 0401 20       		.byte	0x20
 2266 0402 0E       		.uleb128 0xe
 2267 0403 1C060000 		.4byte	.LASF60
 2268 0407 04       		.byte	0x4
 2269 0408 B101     		.2byte	0x1b1
 2270 040a 77000000 		.4byte	0x77
 2271 040e 22       		.byte	0x22
 2272 040f 0E       		.uleb128 0xe
 2273 0410 ED050000 		.4byte	.LASF61
 2274 0414 04       		.byte	0x4
 2275 0415 B601     		.2byte	0x1b6
 2276 0417 56020000 		.4byte	0x256
 2277 041b 24       		.byte	0x24
 2278 041c 0E       		.uleb128 0xe
 2279 041d 42030000 		.4byte	.LASF62
 2280 0421 04       		.byte	0x4
 2281 0422 BB01     		.2byte	0x1bb
 2282 0424 5E030000 		.4byte	0x35e
 2283 0428 60       		.byte	0x60
 2284 0429 0E       		.uleb128 0xe
 2285 042a 94000000 		.4byte	.LASF63
 2286 042e 04       		.byte	0x4
 2287 042f C001     		.2byte	0x1c0
 2288 0431 6B000000 		.4byte	0x6b
 2289 0435 F0       		.byte	0xf0
 2290 0436 0E       		.uleb128 0xe
 2291 0437 79030000 		.4byte	.LASF64
 2292 043b 04       		.byte	0x4
 2293 043c C501     		.2byte	0x1c5
 2294 043e 6B000000 		.4byte	0x6b
 2295 0442 F1       		.byte	0xf1
 2296 0443 0E       		.uleb128 0xe
 2297 0444 50070000 		.4byte	.LASF65
 2298 0448 04       		.byte	0x4
 2299 0449 CA01     		.2byte	0x1ca
 2300 044b 77000000 		.4byte	0x77
 2301 044f F2       		.byte	0xf2
 2302 0450 0E       		.uleb128 0xe
 2303 0451 03060000 		.4byte	.LASF66
 2304 0455 04       		.byte	0x4
 2305 0456 CF01     		.2byte	0x1cf
 2306 0458 BA020000 		.4byte	0x2ba
 2307 045c F4       		.byte	0xf4
 2308 045d 00       		.byte	0
 2309 045e 11       		.uleb128 0x11
 2310 045f 83000000 		.4byte	0x83
 2311 0463 6E040000 		.4byte	0x46e
 2312 0467 12       		.uleb128 0x12
 2313 0468 CD000000 		.4byte	0xcd
 2314 046c 00       		.byte	0
 2315 046d 00       		.byte	0
 2316 046e 11       		.uleb128 0x11
 2317 046f 6B000000 		.4byte	0x6b
 2318 0473 7E040000 		.4byte	0x47e
 2319 0477 12       		.uleb128 0x12
 2320 0478 CD000000 		.4byte	0xcd
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 83


 2321 047c 05       		.byte	0x5
 2322 047d 00       		.byte	0
 2323 047e 04       		.uleb128 0x4
 2324 047f 30050000 		.4byte	.LASF67
 2325 0483 04       		.byte	0x4
 2326 0484 D001     		.2byte	0x1d0
 2327 0486 6A030000 		.4byte	0x36a
 2328 048a 0F       		.uleb128 0xf
 2329 048b 1C       		.byte	0x1c
 2330 048c 04       		.byte	0x4
 2331 048d D601     		.2byte	0x1d6
 2332 048f 09050000 		.4byte	0x509
 2333 0493 0E       		.uleb128 0xe
 2334 0494 4F060000 		.4byte	.LASF68
 2335 0498 04       		.byte	0x4
 2336 0499 DB01     		.2byte	0x1db
 2337 049b 09050000 		.4byte	0x509
 2338 049f 00       		.byte	0
 2339 04a0 0E       		.uleb128 0xe
 2340 04a1 94050000 		.4byte	.LASF69
 2341 04a5 04       		.byte	0x4
 2342 04a6 E001     		.2byte	0x1e0
 2343 04a8 09050000 		.4byte	0x509
 2344 04ac 04       		.byte	0x4
 2345 04ad 0E       		.uleb128 0xe
 2346 04ae D9030000 		.4byte	.LASF70
 2347 04b2 04       		.byte	0x4
 2348 04b3 E501     		.2byte	0x1e5
 2349 04b5 09050000 		.4byte	0x509
 2350 04b9 08       		.byte	0x8
 2351 04ba 0E       		.uleb128 0xe
 2352 04bb 5F080000 		.4byte	.LASF71
 2353 04bf 04       		.byte	0x4
 2354 04c0 EA01     		.2byte	0x1ea
 2355 04c2 09050000 		.4byte	0x509
 2356 04c6 0C       		.byte	0xc
 2357 04c7 0E       		.uleb128 0xe
 2358 04c8 050A0000 		.4byte	.LASF72
 2359 04cc 04       		.byte	0x4
 2360 04cd EF01     		.2byte	0x1ef
 2361 04cf 83000000 		.4byte	0x83
 2362 04d3 10       		.byte	0x10
 2363 04d4 0E       		.uleb128 0xe
 2364 04d5 B0060000 		.4byte	.LASF73
 2365 04d9 04       		.byte	0x4
 2366 04da F401     		.2byte	0x1f4
 2367 04dc 83000000 		.4byte	0x83
 2368 04e0 14       		.byte	0x14
 2369 04e1 0E       		.uleb128 0xe
 2370 04e2 13050000 		.4byte	.LASF74
 2371 04e6 04       		.byte	0x4
 2372 04e7 F901     		.2byte	0x1f9
 2373 04e9 6B000000 		.4byte	0x6b
 2374 04ed 18       		.byte	0x18
 2375 04ee 0E       		.uleb128 0xe
 2376 04ef 0A090000 		.4byte	.LASF75
 2377 04f3 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 84


 2378 04f4 FE01     		.2byte	0x1fe
 2379 04f6 6B000000 		.4byte	0x6b
 2380 04fa 19       		.byte	0x19
 2381 04fb 0E       		.uleb128 0xe
 2382 04fc 28020000 		.4byte	.LASF76
 2383 0500 04       		.byte	0x4
 2384 0501 0302     		.2byte	0x203
 2385 0503 6B000000 		.4byte	0x6b
 2386 0507 1A       		.byte	0x1a
 2387 0508 00       		.byte	0
 2388 0509 06       		.uleb128 0x6
 2389 050a 04       		.byte	0x4
 2390 050b AE000000 		.4byte	0xae
 2391 050f 04       		.uleb128 0x4
 2392 0510 AC0A0000 		.4byte	.LASF77
 2393 0514 04       		.byte	0x4
 2394 0515 0402     		.2byte	0x204
 2395 0517 8A040000 		.4byte	0x48a
 2396 051b 0F       		.uleb128 0xf
 2397 051c 20       		.byte	0x20
 2398 051d 04       		.byte	0x4
 2399 051e 3702     		.2byte	0x237
 2400 0520 A7050000 		.4byte	0x5a7
 2401 0524 0E       		.uleb128 0xe
 2402 0525 F6050000 		.4byte	.LASF78
 2403 0529 04       		.byte	0x4
 2404 052a 4002     		.2byte	0x240
 2405 052c A7050000 		.4byte	0x5a7
 2406 0530 00       		.byte	0
 2407 0531 0E       		.uleb128 0xe
 2408 0532 BF090000 		.4byte	.LASF79
 2409 0536 04       		.byte	0x4
 2410 0537 4702     		.2byte	0x247
 2411 0539 D4000000 		.4byte	0xd4
 2412 053d 04       		.byte	0x4
 2413 053e 0E       		.uleb128 0xe
 2414 053f 6C070000 		.4byte	.LASF80
 2415 0543 04       		.byte	0x4
 2416 0544 4D02     		.2byte	0x24d
 2417 0546 AE050000 		.4byte	0x5ae
 2418 054a 08       		.byte	0x8
 2419 054b 0E       		.uleb128 0xe
 2420 054c 6A060000 		.4byte	.LASF81
 2421 0550 04       		.byte	0x4
 2422 0551 5302     		.2byte	0x253
 2423 0553 D4000000 		.4byte	0xd4
 2424 0557 0C       		.byte	0xc
 2425 0558 0E       		.uleb128 0xe
 2426 0559 31090000 		.4byte	.LASF82
 2427 055d 04       		.byte	0x4
 2428 055e 5A02     		.2byte	0x25a
 2429 0560 B4050000 		.4byte	0x5b4
 2430 0564 10       		.byte	0x10
 2431 0565 0E       		.uleb128 0xe
 2432 0566 A8090000 		.4byte	.LASF83
 2433 056a 04       		.byte	0x4
 2434 056b 5F02     		.2byte	0x25f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 85


 2435 056d 83000000 		.4byte	0x83
 2436 0571 14       		.byte	0x14
 2437 0572 0E       		.uleb128 0xe
 2438 0573 97040000 		.4byte	.LASF84
 2439 0577 04       		.byte	0x4
 2440 0578 6602     		.2byte	0x266
 2441 057a 77000000 		.4byte	0x77
 2442 057e 18       		.byte	0x18
 2443 057f 0E       		.uleb128 0xe
 2444 0580 89030000 		.4byte	.LASF85
 2445 0584 04       		.byte	0x4
 2446 0585 6D02     		.2byte	0x26d
 2447 0587 6B000000 		.4byte	0x6b
 2448 058b 1A       		.byte	0x1a
 2449 058c 0E       		.uleb128 0xe
 2450 058d BD080000 		.4byte	.LASF86
 2451 0591 04       		.byte	0x4
 2452 0592 7702     		.2byte	0x277
 2453 0594 6B000000 		.4byte	0x6b
 2454 0598 1B       		.byte	0x1b
 2455 0599 0E       		.uleb128 0xe
 2456 059a EA090000 		.4byte	.LASF87
 2457 059e 04       		.byte	0x4
 2458 059f 7F02     		.2byte	0x27f
 2459 05a1 6B000000 		.4byte	0x6b
 2460 05a5 1C       		.byte	0x1c
 2461 05a6 00       		.byte	0
 2462 05a7 06       		.uleb128 0x6
 2463 05a8 04       		.byte	0x4
 2464 05a9 AD050000 		.4byte	0x5ad
 2465 05ad 13       		.uleb128 0x13
 2466 05ae 06       		.uleb128 0x6
 2467 05af 04       		.byte	0x4
 2468 05b0 EA020000 		.4byte	0x2ea
 2469 05b4 06       		.uleb128 0x6
 2470 05b5 04       		.byte	0x4
 2471 05b6 6B000000 		.4byte	0x6b
 2472 05ba 04       		.uleb128 0x4
 2473 05bb 26000000 		.4byte	.LASF88
 2474 05bf 04       		.byte	0x4
 2475 05c0 8002     		.2byte	0x280
 2476 05c2 1B050000 		.4byte	0x51b
 2477 05c6 0F       		.uleb128 0xf
 2478 05c7 C0       		.byte	0xc0
 2479 05c8 04       		.byte	0x4
 2480 05c9 8602     		.2byte	0x286
 2481 05cb DD050000 		.4byte	0x5dd
 2482 05cf 0E       		.uleb128 0xe
 2483 05d0 990B0000 		.4byte	.LASF89
 2484 05d4 04       		.byte	0x4
 2485 05d5 8B02     		.2byte	0x28b
 2486 05d7 DD050000 		.4byte	0x5dd
 2487 05db 00       		.byte	0
 2488 05dc 00       		.byte	0
 2489 05dd 11       		.uleb128 0x11
 2490 05de BA050000 		.4byte	0x5ba
 2491 05e2 ED050000 		.4byte	0x5ed
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 86


 2492 05e6 12       		.uleb128 0x12
 2493 05e7 CD000000 		.4byte	0xcd
 2494 05eb 05       		.byte	0x5
 2495 05ec 00       		.byte	0
 2496 05ed 04       		.uleb128 0x4
 2497 05ee 77070000 		.4byte	.LASF90
 2498 05f2 04       		.byte	0x4
 2499 05f3 8C02     		.2byte	0x28c
 2500 05f5 C6050000 		.4byte	0x5c6
 2501 05f9 14       		.uleb128 0x14
 2502 05fa CB090000 		.4byte	.LASF163
 2503 05fe 01       		.byte	0x1
 2504 05ff 3707     		.2byte	0x737
 2505 0601 77000000 		.4byte	0x77
 2506 0605 00000000 		.4byte	.LFB16
 2507 0609 14000000 		.4byte	.LFE16-.LFB16
 2508 060d 01       		.uleb128 0x1
 2509 060e 9C       		.byte	0x9c
 2510 060f 34060000 		.4byte	0x634
 2511 0613 15       		.uleb128 0x15
 2512 0614 76090000 		.4byte	.LASF103
 2513 0618 01       		.byte	0x1
 2514 0619 3707     		.2byte	0x737
 2515 061b 34060000 		.4byte	0x634
 2516 061f 00000000 		.4byte	.LLST0
 2517 0623 16       		.uleb128 0x16
 2518 0624 3A080000 		.4byte	.LASF94
 2519 0628 01       		.byte	0x1
 2520 0629 3907     		.2byte	0x739
 2521 062b 83000000 		.4byte	0x83
 2522 062f 21000000 		.4byte	.LLST1
 2523 0633 00       		.byte	0
 2524 0634 06       		.uleb128 0x6
 2525 0635 04       		.byte	0x4
 2526 0636 3A060000 		.4byte	0x63a
 2527 063a 17       		.uleb128 0x17
 2528 063b 82010000 		.4byte	0x182
 2529 063f 18       		.uleb128 0x18
 2530 0640 1D010000 		.4byte	.LASF164
 2531 0644 01       		.byte	0x1
 2532 0645 DF07     		.2byte	0x7df
 2533 0647 03       		.byte	0x3
 2534 0648 71060000 		.4byte	0x671
 2535 064c 19       		.uleb128 0x19
 2536 064d 4D050000 		.4byte	.LASF91
 2537 0651 01       		.byte	0x1
 2538 0652 E107     		.2byte	0x7e1
 2539 0654 83000000 		.4byte	0x83
 2540 0658 19       		.uleb128 0x19
 2541 0659 09030000 		.4byte	.LASF92
 2542 065d 01       		.byte	0x1
 2543 065e E207     		.2byte	0x7e2
 2544 0660 83000000 		.4byte	0x83
 2545 0664 19       		.uleb128 0x19
 2546 0665 EE060000 		.4byte	.LASF93
 2547 0669 01       		.byte	0x1
 2548 066a E407     		.2byte	0x7e4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 87


 2549 066c 83000000 		.4byte	0x83
 2550 0670 00       		.byte	0
 2551 0671 1A       		.uleb128 0x1a
 2552 0672 10080000 		.4byte	.LASF96
 2553 0676 01       		.byte	0x1
 2554 0677 2706     		.2byte	0x627
 2555 0679 00000000 		.4byte	.LFB10
 2556 067d 3C010000 		.4byte	.LFE10-.LFB10
 2557 0681 01       		.uleb128 0x1
 2558 0682 9C       		.byte	0x9c
 2559 0683 CE060000 		.4byte	0x6ce
 2560 0687 16       		.uleb128 0x16
 2561 0688 1B0A0000 		.4byte	.LASF95
 2562 068c 01       		.byte	0x1
 2563 068d 2906     		.2byte	0x629
 2564 068f 83000000 		.4byte	0x83
 2565 0693 45000000 		.4byte	.LLST2
 2566 0697 1B       		.uleb128 0x1b
 2567 0698 3F060000 		.4byte	0x63f
 2568 069c 1C000000 		.4byte	.LBB4
 2569 06a0 B6000000 		.4byte	.LBE4-.LBB4
 2570 06a4 01       		.byte	0x1
 2571 06a5 3C06     		.2byte	0x63c
 2572 06a7 1C       		.uleb128 0x1c
 2573 06a8 1C000000 		.4byte	.LBB5
 2574 06ac B6000000 		.4byte	.LBE5-.LBB5
 2575 06b0 1D       		.uleb128 0x1d
 2576 06b1 4C060000 		.4byte	0x64c
 2577 06b5 77000000 		.4byte	.LLST3
 2578 06b9 1D       		.uleb128 0x1d
 2579 06ba 58060000 		.4byte	0x658
 2580 06be 8A000000 		.4byte	.LLST4
 2581 06c2 1D       		.uleb128 0x1d
 2582 06c3 64060000 		.4byte	0x664
 2583 06c7 AB000000 		.4byte	.LLST5
 2584 06cb 00       		.byte	0
 2585 06cc 00       		.byte	0
 2586 06cd 00       		.byte	0
 2587 06ce 1E       		.uleb128 0x1e
 2588 06cf FE060000 		.4byte	.LASF97
 2589 06d3 01       		.byte	0x1
 2590 06d4 5D05     		.2byte	0x55d
 2591 06d6 00000000 		.4byte	.LFB8
 2592 06da 5C000000 		.4byte	.LFE8-.LFB8
 2593 06de 01       		.uleb128 0x1
 2594 06df 9C       		.byte	0x9c
 2595 06e0 06070000 		.4byte	0x706
 2596 06e4 1F       		.uleb128 0x1f
 2597 06e5 26000000 		.4byte	.LVL16
 2598 06e9 1E0D0000 		.4byte	0xd1e
 2599 06ed 1F       		.uleb128 0x1f
 2600 06ee 2A000000 		.4byte	.LVL17
 2601 06f2 71060000 		.4byte	0x671
 2602 06f6 20       		.uleb128 0x20
 2603 06f7 38000000 		.4byte	.LVL18
 2604 06fb 1E0D0000 		.4byte	0xd1e
 2605 06ff 21       		.uleb128 0x21
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 88


 2606 0700 01       		.uleb128 0x1
 2607 0701 50       		.byte	0x50
 2608 0702 01       		.uleb128 0x1
 2609 0703 30       		.byte	0x30
 2610 0704 00       		.byte	0
 2611 0705 00       		.byte	0
 2612 0706 22       		.uleb128 0x22
 2613 0707 310B0000 		.4byte	.LASF98
 2614 070b 01       		.byte	0x1
 2615 070c 9807     		.2byte	0x798
 2616 070e 00000000 		.4byte	.LFB17
 2617 0712 90000000 		.4byte	.LFE17-.LFB17
 2618 0716 01       		.uleb128 0x1
 2619 0717 9C       		.byte	0x9c
 2620 0718 3F070000 		.4byte	0x73f
 2621 071c 23       		.uleb128 0x23
 2622 071d 08000000 		.4byte	.LVL19
 2623 0721 290D0000 		.4byte	0xd29
 2624 0725 2F070000 		.4byte	0x72f
 2625 0729 21       		.uleb128 0x21
 2626 072a 01       		.uleb128 0x1
 2627 072b 50       		.byte	0x50
 2628 072c 01       		.uleb128 0x1
 2629 072d 3A       		.byte	0x3a
 2630 072e 00       		.byte	0
 2631 072f 20       		.uleb128 0x20
 2632 0730 62000000 		.4byte	.LVL21
 2633 0734 340D0000 		.4byte	0xd34
 2634 0738 21       		.uleb128 0x21
 2635 0739 01       		.uleb128 0x1
 2636 073a 50       		.byte	0x50
 2637 073b 01       		.uleb128 0x1
 2638 073c 3A       		.byte	0x3a
 2639 073d 00       		.byte	0
 2640 073e 00       		.byte	0
 2641 073f 24       		.uleb128 0x24
 2642 0740 92030000 		.4byte	.LASF99
 2643 0744 01       		.byte	0x1
 2644 0745 94       		.byte	0x94
 2645 0746 00000000 		.4byte	.LFB1
 2646 074a E0010000 		.4byte	.LFE1-.LFB1
 2647 074e 01       		.uleb128 0x1
 2648 074f 9C       		.byte	0x9c
 2649 0750 16080000 		.4byte	0x816
 2650 0754 25       		.uleb128 0x25
 2651 0755 3C010000 		.4byte	.LASF100
 2652 0759 01       		.byte	0x1
 2653 075a 97       		.byte	0x97
 2654 075b 6B000000 		.4byte	0x6b
 2655 075f BE000000 		.4byte	.LLST6
 2656 0763 25       		.uleb128 0x25
 2657 0764 1B0A0000 		.4byte	.LASF95
 2658 0768 01       		.byte	0x1
 2659 0769 98       		.byte	0x98
 2660 076a 83000000 		.4byte	0x83
 2661 076e 08010000 		.4byte	.LLST7
 2662 0772 1F       		.uleb128 0x1f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 89


 2663 0773 58000000 		.4byte	.LVL22
 2664 0777 3F0D0000 		.4byte	0xd3f
 2665 077b 1F       		.uleb128 0x1f
 2666 077c 6C000000 		.4byte	.LVL26
 2667 0780 4A0D0000 		.4byte	0xd4a
 2668 0784 1F       		.uleb128 0x1f
 2669 0785 7E000000 		.4byte	.LVL27
 2670 0789 3F0D0000 		.4byte	0xd3f
 2671 078d 1F       		.uleb128 0x1f
 2672 078e 92000000 		.4byte	.LVL31
 2673 0792 4A0D0000 		.4byte	0xd4a
 2674 0796 1F       		.uleb128 0x1f
 2675 0797 C6000000 		.4byte	.LVL32
 2676 079b 550D0000 		.4byte	0xd55
 2677 079f 1F       		.uleb128 0x1f
 2678 07a0 CA000000 		.4byte	.LVL33
 2679 07a4 3F0D0000 		.4byte	0xd3f
 2680 07a8 1F       		.uleb128 0x1f
 2681 07a9 D8000000 		.4byte	.LVL36
 2682 07ad 4A0D0000 		.4byte	0xd4a
 2683 07b1 1F       		.uleb128 0x1f
 2684 07b2 DC000000 		.4byte	.LVL37
 2685 07b6 3F0D0000 		.4byte	0xd3f
 2686 07ba 1F       		.uleb128 0x1f
 2687 07bb E8000000 		.4byte	.LVL40
 2688 07bf 4A0D0000 		.4byte	0xd4a
 2689 07c3 1F       		.uleb128 0x1f
 2690 07c4 EC000000 		.4byte	.LVL41
 2691 07c8 3F0D0000 		.4byte	0xd3f
 2692 07cc 1F       		.uleb128 0x1f
 2693 07cd 00010000 		.4byte	.LVL45
 2694 07d1 4A0D0000 		.4byte	0xd4a
 2695 07d5 1F       		.uleb128 0x1f
 2696 07d6 04010000 		.4byte	.LVL46
 2697 07da 3F0D0000 		.4byte	0xd3f
 2698 07de 1F       		.uleb128 0x1f
 2699 07df 16010000 		.4byte	.LVL50
 2700 07e3 4A0D0000 		.4byte	0xd4a
 2701 07e7 1F       		.uleb128 0x1f
 2702 07e8 20010000 		.4byte	.LVL51
 2703 07ec 600D0000 		.4byte	0xd60
 2704 07f0 1F       		.uleb128 0x1f
 2705 07f1 26010000 		.4byte	.LVL52
 2706 07f5 6B0D0000 		.4byte	0xd6b
 2707 07f9 1F       		.uleb128 0x1f
 2708 07fa 2A010000 		.4byte	.LVL53
 2709 07fe 760D0000 		.4byte	0xd76
 2710 0802 20       		.uleb128 0x20
 2711 0803 30010000 		.4byte	.LVL54
 2712 0807 810D0000 		.4byte	0xd81
 2713 080b 21       		.uleb128 0x21
 2714 080c 01       		.uleb128 0x1
 2715 080d 50       		.byte	0x50
 2716 080e 05       		.uleb128 0x5
 2717 080f 03       		.byte	0x3
 2718 0810 00000000 		.4byte	CapSense_1_CSXScanISR
 2719 0814 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 90


 2720 0815 00       		.byte	0
 2721 0816 26       		.uleb128 0x26
 2722 0817 52090000 		.4byte	.LASF101
 2723 081b 01       		.byte	0x1
 2724 081c 6603     		.2byte	0x366
 2725 081e 00000000 		.4byte	.LFB6
 2726 0822 28000000 		.4byte	.LFE6-.LFB6
 2727 0826 01       		.uleb128 0x1
 2728 0827 9C       		.byte	0x9c
 2729 0828 49080000 		.4byte	0x849
 2730 082c 23       		.uleb128 0x23
 2731 082d 18000000 		.4byte	.LVL55
 2732 0831 8C0D0000 		.4byte	0xd8c
 2733 0835 3F080000 		.4byte	0x83f
 2734 0839 21       		.uleb128 0x21
 2735 083a 01       		.uleb128 0x1
 2736 083b 50       		.byte	0x50
 2737 083c 01       		.uleb128 0x1
 2738 083d 3A       		.byte	0x3a
 2739 083e 00       		.byte	0
 2740 083f 1F       		.uleb128 0x1f
 2741 0840 1C000000 		.4byte	.LVL56
 2742 0844 71060000 		.4byte	0x671
 2743 0848 00       		.byte	0
 2744 0849 22       		.uleb128 0x22
 2745 084a D0060000 		.4byte	.LASF102
 2746 084e 01       		.byte	0x1
 2747 084f B205     		.2byte	0x5b2
 2748 0851 00000000 		.4byte	.LFB9
 2749 0855 EC000000 		.4byte	.LFE9-.LFB9
 2750 0859 01       		.uleb128 0x1
 2751 085a 9C       		.byte	0x9c
 2752 085b 03090000 		.4byte	0x903
 2753 085f 15       		.uleb128 0x15
 2754 0860 700B0000 		.4byte	.LASF104
 2755 0864 01       		.byte	0x1
 2756 0865 B205     		.2byte	0x5b2
 2757 0867 83000000 		.4byte	0x83
 2758 086b 94010000 		.4byte	.LLST8
 2759 086f 15       		.uleb128 0x15
 2760 0870 D2030000 		.4byte	.LASF105
 2761 0874 01       		.byte	0x1
 2762 0875 B205     		.2byte	0x5b2
 2763 0877 77000000 		.4byte	0x77
 2764 087b B3010000 		.4byte	.LLST9
 2765 087f 16       		.uleb128 0x16
 2766 0880 83080000 		.4byte	.LASF106
 2767 0884 01       		.byte	0x1
 2768 0885 B505     		.2byte	0x5b5
 2769 0887 83000000 		.4byte	0x83
 2770 088b D4010000 		.4byte	.LLST10
 2771 088f 16       		.uleb128 0x16
 2772 0890 D1040000 		.4byte	.LASF107
 2773 0894 01       		.byte	0x1
 2774 0895 B705     		.2byte	0x5b7
 2775 0897 83000000 		.4byte	0x83
 2776 089b 03020000 		.4byte	.LLST11
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 91


 2777 089f 16       		.uleb128 0x16
 2778 08a0 97090000 		.4byte	.LASF108
 2779 08a4 01       		.byte	0x1
 2780 08a5 B905     		.2byte	0x5b9
 2781 08a7 83000000 		.4byte	0x83
 2782 08ab 21020000 		.4byte	.LLST12
 2783 08af 16       		.uleb128 0x16
 2784 08b0 FC010000 		.4byte	.LASF109
 2785 08b4 01       		.byte	0x1
 2786 08b5 BC05     		.2byte	0x5bc
 2787 08b7 6B000000 		.4byte	0x6b
 2788 08bb 62020000 		.4byte	.LLST13
 2789 08bf 16       		.uleb128 0x16
 2790 08c0 F3000000 		.4byte	.LASF110
 2791 08c4 01       		.byte	0x1
 2792 08c5 BE05     		.2byte	0x5be
 2793 08c7 6B000000 		.4byte	0x6b
 2794 08cb 98020000 		.4byte	.LLST14
 2795 08cf 23       		.uleb128 0x23
 2796 08d0 22000000 		.4byte	.LVL60
 2797 08d4 F9050000 		.4byte	0x5f9
 2798 08d8 E4080000 		.4byte	0x8e4
 2799 08dc 21       		.uleb128 0x21
 2800 08dd 01       		.uleb128 0x1
 2801 08de 50       		.byte	0x50
 2802 08df 03       		.uleb128 0x3
 2803 08e0 74       		.byte	0x74
 2804 08e1 04       		.sleb128 4
 2805 08e2 06       		.byte	0x6
 2806 08e3 00       		.byte	0
 2807 08e4 23       		.uleb128 0x23
 2808 08e5 6E000000 		.4byte	.LVL71
 2809 08e9 970D0000 		.4byte	0xd97
 2810 08ed F9080000 		.4byte	0x8f9
 2811 08f1 21       		.uleb128 0x21
 2812 08f2 01       		.uleb128 0x1
 2813 08f3 50       		.byte	0x50
 2814 08f4 03       		.uleb128 0x3
 2815 08f5 91       		.byte	0x91
 2816 08f6 64       		.sleb128 -28
 2817 08f7 06       		.byte	0x6
 2818 08f8 00       		.byte	0
 2819 08f9 1F       		.uleb128 0x1f
 2820 08fa 72000000 		.4byte	.LVL72
 2821 08fe A20D0000 		.4byte	0xda2
 2822 0902 00       		.byte	0
 2823 0903 26       		.uleb128 0x26
 2824 0904 A3040000 		.4byte	.LASF111
 2825 0908 01       		.byte	0x1
 2826 0909 8106     		.2byte	0x681
 2827 090b 00000000 		.4byte	.LFB11
 2828 090f 20000000 		.4byte	.LFE11-.LFB11
 2829 0913 01       		.uleb128 0x1
 2830 0914 9C       		.byte	0x9c
 2831 0915 3A090000 		.4byte	0x93a
 2832 0919 15       		.uleb128 0x15
 2833 091a ED010000 		.4byte	.LASF112
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 92


 2834 091e 01       		.byte	0x1
 2835 091f 8106     		.2byte	0x681
 2836 0921 3A090000 		.4byte	0x93a
 2837 0925 CE020000 		.4byte	.LLST15
 2838 0929 16       		.uleb128 0x16
 2839 092a 14010000 		.4byte	.LASF113
 2840 092e 01       		.byte	0x1
 2841 092f 8306     		.2byte	0x683
 2842 0931 83000000 		.4byte	0x83
 2843 0935 EF020000 		.4byte	.LLST16
 2844 0939 00       		.byte	0
 2845 093a 06       		.uleb128 0x6
 2846 093b 04       		.byte	0x4
 2847 093c 40090000 		.4byte	0x940
 2848 0940 17       		.uleb128 0x17
 2849 0941 0F050000 		.4byte	0x50f
 2850 0945 26       		.uleb128 0x26
 2851 0946 61030000 		.4byte	.LASF114
 2852 094a 01       		.byte	0x1
 2853 094b A306     		.2byte	0x6a3
 2854 094d 00000000 		.4byte	.LFB12
 2855 0951 20000000 		.4byte	.LFE12-.LFB12
 2856 0955 01       		.uleb128 0x1
 2857 0956 9C       		.byte	0x9c
 2858 0957 7C090000 		.4byte	0x97c
 2859 095b 15       		.uleb128 0x15
 2860 095c 2B090000 		.4byte	.LASF115
 2861 0960 01       		.byte	0x1
 2862 0961 A306     		.2byte	0x6a3
 2863 0963 3A090000 		.4byte	0x93a
 2864 0967 23030000 		.4byte	.LLST17
 2865 096b 16       		.uleb128 0x16
 2866 096c 14010000 		.4byte	.LASF113
 2867 0970 01       		.byte	0x1
 2868 0971 A506     		.2byte	0x6a5
 2869 0973 83000000 		.4byte	0x83
 2870 0977 44030000 		.4byte	.LLST18
 2871 097b 00       		.byte	0
 2872 097c 26       		.uleb128 0x26
 2873 097d F2090000 		.4byte	.LASF116
 2874 0981 01       		.byte	0x1
 2875 0982 8502     		.2byte	0x285
 2876 0984 00000000 		.4byte	.LFB5
 2877 0988 74000000 		.4byte	.LFE5-.LFB5
 2878 098c 01       		.uleb128 0x1
 2879 098d 9C       		.byte	0x9c
 2880 098e C1090000 		.4byte	0x9c1
 2881 0992 1F       		.uleb128 0x1f
 2882 0993 2E000000 		.4byte	.LVL93
 2883 0997 03090000 		.4byte	0x903
 2884 099b 1F       		.uleb128 0x1f
 2885 099c 34000000 		.4byte	.LVL94
 2886 09a0 45090000 		.4byte	0x945
 2887 09a4 23       		.uleb128 0x23
 2888 09a5 4E000000 		.4byte	.LVL95
 2889 09a9 8C0D0000 		.4byte	0xd8c
 2890 09ad B7090000 		.4byte	0x9b7
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 93


 2891 09b1 21       		.uleb128 0x21
 2892 09b2 01       		.uleb128 0x1
 2893 09b3 50       		.byte	0x50
 2894 09b4 01       		.uleb128 0x1
 2895 09b5 3A       		.byte	0x3a
 2896 09b6 00       		.byte	0
 2897 09b7 1F       		.uleb128 0x1f
 2898 09b8 52000000 		.4byte	.LVL96
 2899 09bc 71060000 		.4byte	0x671
 2900 09c0 00       		.byte	0
 2901 09c1 26       		.uleb128 0x26
 2902 09c2 B4010000 		.4byte	.LASF117
 2903 09c6 01       		.byte	0x1
 2904 09c7 C606     		.2byte	0x6c6
 2905 09c9 00000000 		.4byte	.LFB13
 2906 09cd 0C000000 		.4byte	.LFE13-.LFB13
 2907 09d1 01       		.uleb128 0x1
 2908 09d2 9C       		.byte	0x9c
 2909 09d3 F4090000 		.4byte	0x9f4
 2910 09d7 27       		.uleb128 0x27
 2911 09d8 ED010000 		.4byte	.LASF112
 2912 09dc 01       		.byte	0x1
 2913 09dd C606     		.2byte	0x6c6
 2914 09df 3A090000 		.4byte	0x93a
 2915 09e3 01       		.uleb128 0x1
 2916 09e4 50       		.byte	0x50
 2917 09e5 28       		.uleb128 0x28
 2918 09e6 14010000 		.4byte	.LASF113
 2919 09ea 01       		.byte	0x1
 2920 09eb C806     		.2byte	0x6c8
 2921 09ed 83000000 		.4byte	0x83
 2922 09f1 01       		.uleb128 0x1
 2923 09f2 53       		.byte	0x53
 2924 09f3 00       		.byte	0
 2925 09f4 26       		.uleb128 0x26
 2926 09f5 61000000 		.4byte	.LASF118
 2927 09f9 01       		.byte	0x1
 2928 09fa E506     		.2byte	0x6e5
 2929 09fc 00000000 		.4byte	.LFB14
 2930 0a00 2E000000 		.4byte	.LFE14-.LFB14
 2931 0a04 01       		.uleb128 0x1
 2932 0a05 9C       		.byte	0x9c
 2933 0a06 290A0000 		.4byte	0xa29
 2934 0a0a 27       		.uleb128 0x27
 2935 0a0b 2B090000 		.4byte	.LASF115
 2936 0a0f 01       		.byte	0x1
 2937 0a10 E506     		.2byte	0x6e5
 2938 0a12 3A090000 		.4byte	0x93a
 2939 0a16 01       		.uleb128 0x1
 2940 0a17 50       		.byte	0x50
 2941 0a18 16       		.uleb128 0x16
 2942 0a19 14010000 		.4byte	.LASF113
 2943 0a1d 01       		.byte	0x1
 2944 0a1e E706     		.2byte	0x6e7
 2945 0a20 83000000 		.4byte	0x83
 2946 0a24 6D030000 		.4byte	.LLST19
 2947 0a28 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 94


 2948 0a29 1E       		.uleb128 0x1e
 2949 0a2a 53010000 		.4byte	.LASF119
 2950 0a2e 01       		.byte	0x1
 2951 0a2f 9303     		.2byte	0x393
 2952 0a31 00000000 		.4byte	.LFB7
 2953 0a35 00010000 		.4byte	.LFE7-.LFB7
 2954 0a39 01       		.uleb128 0x1
 2955 0a3a 9C       		.byte	0x9c
 2956 0a3b B60A0000 		.4byte	0xab6
 2957 0a3f 1F       		.uleb128 0x1f
 2958 0a40 26000000 		.4byte	.LVL109
 2959 0a44 1E0D0000 		.4byte	0xd1e
 2960 0a48 1F       		.uleb128 0x1f
 2961 0a49 2A000000 		.4byte	.LVL110
 2962 0a4d 71060000 		.4byte	0x671
 2963 0a51 23       		.uleb128 0x23
 2964 0a52 38000000 		.4byte	.LVL111
 2965 0a56 1E0D0000 		.4byte	0xd1e
 2966 0a5a 640A0000 		.4byte	0xa64
 2967 0a5e 21       		.uleb128 0x21
 2968 0a5f 01       		.uleb128 0x1
 2969 0a60 50       		.byte	0x50
 2970 0a61 01       		.uleb128 0x1
 2971 0a62 30       		.byte	0x30
 2972 0a63 00       		.byte	0
 2973 0a64 1F       		.uleb128 0x1f
 2974 0a65 40000000 		.4byte	.LVL112
 2975 0a69 C1090000 		.4byte	0x9c1
 2976 0a6d 1F       		.uleb128 0x1f
 2977 0a6e 62000000 		.4byte	.LVL113
 2978 0a72 03090000 		.4byte	0x903
 2979 0a76 1F       		.uleb128 0x1f
 2980 0a77 6E000000 		.4byte	.LVL114
 2981 0a7b 71060000 		.4byte	0x671
 2982 0a7f 1F       		.uleb128 0x1f
 2983 0a80 86000000 		.4byte	.LVL115
 2984 0a84 F4090000 		.4byte	0x9f4
 2985 0a88 1F       		.uleb128 0x1f
 2986 0a89 90000000 		.4byte	.LVL116
 2987 0a8d 45090000 		.4byte	0x945
 2988 0a91 1F       		.uleb128 0x1f
 2989 0a92 AC000000 		.4byte	.LVL117
 2990 0a96 03090000 		.4byte	0x903
 2991 0a9a 1F       		.uleb128 0x1f
 2992 0a9b B8000000 		.4byte	.LVL118
 2993 0a9f 71060000 		.4byte	0x671
 2994 0aa3 1F       		.uleb128 0x1f
 2995 0aa4 C2000000 		.4byte	.LVL119
 2996 0aa8 F4090000 		.4byte	0x9f4
 2997 0aac 1F       		.uleb128 0x1f
 2998 0aad CE000000 		.4byte	.LVL120
 2999 0ab1 AD0D0000 		.4byte	0xdad
 3000 0ab5 00       		.byte	0
 3001 0ab6 26       		.uleb128 0x26
 3002 0ab7 71010000 		.4byte	.LASF120
 3003 0abb 01       		.byte	0x1
 3004 0abc 3B01     		.2byte	0x13b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 95


 3005 0abe 00000000 		.4byte	.LFB2
 3006 0ac2 24000000 		.4byte	.LFE2-.LFB2
 3007 0ac6 01       		.uleb128 0x1
 3008 0ac7 9C       		.byte	0x9c
 3009 0ac8 DF0A0000 		.4byte	0xadf
 3010 0acc 1F       		.uleb128 0x1f
 3011 0acd 12000000 		.4byte	.LVL121
 3012 0ad1 C1090000 		.4byte	0x9c1
 3013 0ad5 1F       		.uleb128 0x1f
 3014 0ad6 18000000 		.4byte	.LVL122
 3015 0ada F4090000 		.4byte	0x9f4
 3016 0ade 00       		.byte	0
 3017 0adf 26       		.uleb128 0x26
 3018 0ae0 E7080000 		.4byte	.LASF121
 3019 0ae4 01       		.byte	0x1
 3020 0ae5 9601     		.2byte	0x196
 3021 0ae7 00000000 		.4byte	.LFB3
 3022 0aeb 6C000000 		.4byte	.LFE3-.LFB3
 3023 0aef 01       		.uleb128 0x1
 3024 0af0 9C       		.byte	0x9c
 3025 0af1 6F0B0000 		.4byte	0xb6f
 3026 0af5 15       		.uleb128 0x15
 3027 0af6 700B0000 		.4byte	.LASF104
 3028 0afa 01       		.byte	0x1
 3029 0afb 9601     		.2byte	0x196
 3030 0afd 83000000 		.4byte	0x83
 3031 0b01 96030000 		.4byte	.LLST20
 3032 0b05 16       		.uleb128 0x16
 3033 0b06 9A0A0000 		.4byte	.LASF122
 3034 0b0a 01       		.byte	0x1
 3035 0b0b 9901     		.2byte	0x199
 3036 0b0d 6F0B0000 		.4byte	0xb6f
 3037 0b11 C2030000 		.4byte	.LLST21
 3038 0b15 16       		.uleb128 0x16
 3039 0b16 1B0A0000 		.4byte	.LASF95
 3040 0b1a 01       		.byte	0x1
 3041 0b1b 9C01     		.2byte	0x19c
 3042 0b1d 83000000 		.4byte	0x83
 3043 0b21 D5030000 		.4byte	.LLST22
 3044 0b25 16       		.uleb128 0x16
 3045 0b26 C8030000 		.4byte	.LASF123
 3046 0b2a 01       		.byte	0x1
 3047 0b2b 9D01     		.2byte	0x19d
 3048 0b2d 83000000 		.4byte	0x83
 3049 0b31 05040000 		.4byte	.LLST23
 3050 0b35 23       		.uleb128 0x23
 3051 0b36 10000000 		.4byte	.LVL125
 3052 0b3a B80D0000 		.4byte	0xdb8
 3053 0b3e 480B0000 		.4byte	0xb48
 3054 0b42 21       		.uleb128 0x21
 3055 0b43 01       		.uleb128 0x1
 3056 0b44 50       		.byte	0x50
 3057 0b45 01       		.uleb128 0x1
 3058 0b46 32       		.byte	0x32
 3059 0b47 00       		.byte	0
 3060 0b48 1F       		.uleb128 0x1f
 3061 0b49 14000000 		.4byte	.LVL126
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 96


 3062 0b4d B60A0000 		.4byte	0xab6
 3063 0b51 23       		.uleb128 0x23
 3064 0b52 30000000 		.4byte	.LVL129
 3065 0b56 F9050000 		.4byte	0x5f9
 3066 0b5a 650B0000 		.4byte	0xb65
 3067 0b5e 21       		.uleb128 0x21
 3068 0b5f 01       		.uleb128 0x1
 3069 0b60 50       		.byte	0x50
 3070 0b61 02       		.uleb128 0x2
 3071 0b62 76       		.byte	0x76
 3072 0b63 00       		.sleb128 0
 3073 0b64 00       		.byte	0
 3074 0b65 1F       		.uleb128 0x1f
 3075 0b66 4C000000 		.4byte	.LVL136
 3076 0b6a 600D0000 		.4byte	0xd60
 3077 0b6e 00       		.byte	0
 3078 0b6f 06       		.uleb128 0x6
 3079 0b70 04       		.byte	0x4
 3080 0b71 82010000 		.4byte	0x182
 3081 0b75 22       		.uleb128 0x22
 3082 0b76 250A0000 		.4byte	.LASF124
 3083 0b7a 01       		.byte	0x1
 3084 0b7b 0402     		.2byte	0x204
 3085 0b7d 00000000 		.4byte	.LFB4
 3086 0b81 84000000 		.4byte	.LFE4-.LFB4
 3087 0b85 01       		.uleb128 0x1
 3088 0b86 9C       		.byte	0x9c
 3089 0b87 F30B0000 		.4byte	0xbf3
 3090 0b8b 15       		.uleb128 0x15
 3091 0b8c 700B0000 		.4byte	.LASF104
 3092 0b90 01       		.byte	0x1
 3093 0b91 0402     		.2byte	0x204
 3094 0b93 83000000 		.4byte	0x83
 3095 0b97 30040000 		.4byte	.LLST24
 3096 0b9b 15       		.uleb128 0x15
 3097 0b9c F3010000 		.4byte	.LASF125
 3098 0ba0 01       		.byte	0x1
 3099 0ba1 0402     		.2byte	0x204
 3100 0ba3 83000000 		.4byte	0x83
 3101 0ba7 51040000 		.4byte	.LLST25
 3102 0bab 16       		.uleb128 0x16
 3103 0bac 19030000 		.4byte	.LASF126
 3104 0bb0 01       		.byte	0x1
 3105 0bb1 0602     		.2byte	0x206
 3106 0bb3 83000000 		.4byte	0x83
 3107 0bb7 7D040000 		.4byte	.LLST26
 3108 0bbb 16       		.uleb128 0x16
 3109 0bbc 4B010000 		.4byte	.LASF127
 3110 0bc0 01       		.byte	0x1
 3111 0bc1 0702     		.2byte	0x207
 3112 0bc3 83000000 		.4byte	0x83
 3113 0bc7 90040000 		.4byte	.LLST27
 3114 0bcb 23       		.uleb128 0x23
 3115 0bcc 08000000 		.4byte	.LVL140
 3116 0bd0 DF0A0000 		.4byte	0xadf
 3117 0bd4 E00B0000 		.4byte	0xbe0
 3118 0bd8 21       		.uleb128 0x21
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 97


 3119 0bd9 01       		.uleb128 0x1
 3120 0bda 50       		.byte	0x50
 3121 0bdb 03       		.uleb128 0x3
 3122 0bdc F3       		.byte	0xf3
 3123 0bdd 01       		.uleb128 0x1
 3124 0bde 50       		.byte	0x50
 3125 0bdf 00       		.byte	0
 3126 0be0 1F       		.uleb128 0x1f
 3127 0be1 58000000 		.4byte	.LVL147
 3128 0be5 03090000 		.4byte	0x903
 3129 0be9 1F       		.uleb128 0x1f
 3130 0bea 5E000000 		.4byte	.LVL148
 3131 0bee 45090000 		.4byte	0x945
 3132 0bf2 00       		.byte	0
 3133 0bf3 29       		.uleb128 0x29
 3134 0bf4 3F080000 		.4byte	.LASF165
 3135 0bf8 01       		.byte	0x1
 3136 0bf9 0C07     		.2byte	0x70c
 3137 0bfb 83000000 		.4byte	0x83
 3138 0bff 00000000 		.4byte	.LFB15
 3139 0c03 0C000000 		.4byte	.LFE15-.LFB15
 3140 0c07 01       		.uleb128 0x1
 3141 0c08 9C       		.byte	0x9c
 3142 0c09 2C0C0000 		.4byte	0xc2c
 3143 0c0d 15       		.uleb128 0x15
 3144 0c0e 700B0000 		.4byte	.LASF104
 3145 0c12 01       		.byte	0x1
 3146 0c13 0C07     		.2byte	0x70c
 3147 0c15 83000000 		.4byte	0x83
 3148 0c19 AE040000 		.4byte	.LLST28
 3149 0c1d 28       		.uleb128 0x28
 3150 0c1e 24090000 		.4byte	.LASF128
 3151 0c22 01       		.byte	0x1
 3152 0c23 0E07     		.2byte	0x70e
 3153 0c25 83000000 		.4byte	0x83
 3154 0c29 01       		.uleb128 0x1
 3155 0c2a 50       		.byte	0x50
 3156 0c2b 00       		.byte	0
 3157 0c2c 2A       		.uleb128 0x2a
 3158 0c2d FD040000 		.4byte	.LASF129
 3159 0c31 01       		.byte	0x1
 3160 0c32 49       		.byte	0x49
 3161 0c33 3A090000 		.4byte	0x93a
 3162 0c37 05       		.uleb128 0x5
 3163 0c38 03       		.byte	0x3
 3164 0c39 0C000000 		.4byte	CapSense_1_curTxIOPtr
 3165 0c3d 2A       		.uleb128 0x2a
 3166 0c3e BB040000 		.4byte	.LASF130
 3167 0c42 01       		.byte	0x1
 3168 0c43 4B       		.byte	0x4b
 3169 0c44 3A090000 		.4byte	0x93a
 3170 0c48 05       		.uleb128 0x5
 3171 0c49 03       		.byte	0x3
 3172 0c4a 08000000 		.4byte	CapSense_1_curRxIOPtr
 3173 0c4e 2A       		.uleb128 0x2a
 3174 0c4f 08020000 		.4byte	.LASF131
 3175 0c53 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 98


 3176 0c54 4D       		.byte	0x4d
 3177 0c55 77000000 		.4byte	0x77
 3178 0c59 05       		.uleb128 0x5
 3179 0c5a 03       		.byte	0x3
 3180 0c5b 06000000 		.4byte	CapSense_1_curWdgtTotalRx
 3181 0c5f 2A       		.uleb128 0x2a
 3182 0c60 FA030000 		.4byte	.LASF132
 3183 0c64 01       		.byte	0x1
 3184 0c65 4F       		.byte	0x4f
 3185 0c66 77000000 		.4byte	0x77
 3186 0c6a 05       		.uleb128 0x5
 3187 0c6b 03       		.byte	0x3
 3188 0c6c 04000000 		.4byte	CapSense_1_curWdgtTotalTx
 3189 0c70 2A       		.uleb128 0x2a
 3190 0c71 A4000000 		.4byte	.LASF133
 3191 0c75 01       		.byte	0x1
 3192 0c76 51       		.byte	0x51
 3193 0c77 77000000 		.4byte	0x77
 3194 0c7b 05       		.uleb128 0x5
 3195 0c7c 03       		.byte	0x3
 3196 0c7d 10000000 		.4byte	CapSense_1_eleCsxDisconnectFlag
 3197 0c81 2B       		.uleb128 0x2b
 3198 0c82 1D070000 		.4byte	.LASF134
 3199 0c86 04       		.byte	0x4
 3200 0c87 2E04     		.2byte	0x42e
 3201 0c89 7E040000 		.4byte	0x47e
 3202 0c8d 2B       		.uleb128 0x2b
 3203 0c8e FD070000 		.4byte	.LASF135
 3204 0c92 04       		.byte	0x4
 3205 0c93 2F04     		.2byte	0x42f
 3206 0c95 990C0000 		.4byte	0xc99
 3207 0c99 17       		.uleb128 0x17
 3208 0c9a ED050000 		.4byte	0x5ed
 3209 0c9e 2C       		.uleb128 0x2c
 3210 0c9f 7E090000 		.4byte	.LASF136
 3211 0ca3 01       		.byte	0x1
 3212 0ca4 40       		.byte	0x40
 3213 0ca5 A9000000 		.4byte	0xa9
 3214 0ca9 05       		.uleb128 0x5
 3215 0caa 03       		.byte	0x3
 3216 0cab 00000000 		.4byte	CapSense_1_csxScanPeriod
 3217 0caf 2C       		.uleb128 0x2c
 3218 0cb0 C70A0000 		.4byte	.LASF137
 3219 0cb4 01       		.byte	0x1
 3220 0cb5 42       		.byte	0x42
 3221 0cb6 A9000000 		.4byte	0xa9
 3222 0cba 05       		.uleb128 0x5
 3223 0cbb 03       		.byte	0x3
 3224 0cbc 00000000 		.4byte	CapSense_1_csxRawCount
 3225 0cc0 2C       		.uleb128 0x2c
 3226 0cc1 420A0000 		.4byte	.LASF138
 3227 0cc5 01       		.byte	0x1
 3228 0cc6 73       		.byte	0x73
 3229 0cc7 BF000000 		.4byte	0xbf
 3230 0ccb 05       		.uleb128 0x5
 3231 0ccc 03       		.byte	0x3
 3232 0ccd 00000000 		.4byte	CapSense_1_CSXPostScanApiPtr
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 99


 3233 0cd1 2D       		.uleb128 0x2d
 3234 0cd2 3E040000 		.4byte	.LASF139
 3235 0cd6 05       		.byte	0x5
 3236 0cd7 9D       		.byte	0x9d
 3237 0cd8 A4000000 		.4byte	0xa4
 3238 0cdc 2D       		.uleb128 0x2d
 3239 0cdd D0080000 		.4byte	.LASF140
 3240 0ce1 05       		.byte	0x5
 3241 0ce2 9E       		.byte	0x9e
 3242 0ce3 A4000000 		.4byte	0xa4
 3243 0ce7 2D       		.uleb128 0x2d
 3244 0ce8 41000000 		.4byte	.LASF141
 3245 0cec 05       		.byte	0x5
 3246 0ced 9F       		.byte	0x9f
 3247 0cee 6B000000 		.4byte	0x6b
 3248 0cf2 2D       		.uleb128 0x2d
 3249 0cf3 7C000000 		.4byte	.LASF142
 3250 0cf7 05       		.byte	0x5
 3251 0cf8 A1       		.byte	0xa1
 3252 0cf9 AE050000 		.4byte	0x5ae
 3253 0cfd 2D       		.uleb128 0x2d
 3254 0cfe 9B010000 		.4byte	.LASF143
 3255 0d02 05       		.byte	0x5
 3256 0d03 A5       		.byte	0xa5
 3257 0d04 6B000000 		.4byte	0x6b
 3258 0d08 2D       		.uleb128 0x2d
 3259 0d09 CE070000 		.4byte	.LASF144
 3260 0d0d 05       		.byte	0x5
 3261 0d0e AE       		.byte	0xae
 3262 0d0f 130D0000 		.4byte	0xd13
 3263 0d13 06       		.uleb128 0x6
 3264 0d14 04       		.byte	0x4
 3265 0d15 190D0000 		.4byte	0xd19
 3266 0d19 17       		.uleb128 0x17
 3267 0d1a BA050000 		.4byte	0x5ba
 3268 0d1e 2E       		.uleb128 0x2e
 3269 0d1f B5060000 		.4byte	.LASF145
 3270 0d23 B5060000 		.4byte	.LASF145
 3271 0d27 05       		.byte	0x5
 3272 0d28 75       		.byte	0x75
 3273 0d29 2E       		.uleb128 0x2e
 3274 0d2a 8E010000 		.4byte	.LASF146
 3275 0d2e 8E010000 		.4byte	.LASF146
 3276 0d32 06       		.byte	0x6
 3277 0d33 C5       		.byte	0xc5
 3278 0d34 2E       		.uleb128 0x2e
 3279 0d35 0F0A0000 		.4byte	.LASF147
 3280 0d39 0F0A0000 		.4byte	.LASF147
 3281 0d3d 06       		.byte	0x6
 3282 0d3e C3       		.byte	0xc3
 3283 0d3f 2E       		.uleb128 0x2e
 3284 0d40 5F0A0000 		.4byte	.LASF148
 3285 0d44 5F0A0000 		.4byte	.LASF148
 3286 0d48 06       		.byte	0x6
 3287 0d49 E5       		.byte	0xe5
 3288 0d4a 2E       		.uleb128 0x2e
 3289 0d4b E7040000 		.4byte	.LASF149
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 100


 3290 0d4f E7040000 		.4byte	.LASF149
 3291 0d53 06       		.byte	0x6
 3292 0d54 E6       		.byte	0xe6
 3293 0d55 2E       		.uleb128 0x2e
 3294 0d56 00000000 		.4byte	.LASF150
 3295 0d5a 00000000 		.4byte	.LASF150
 3296 0d5e 05       		.byte	0x5
 3297 0d5f 93       		.byte	0x93
 3298 0d60 2E       		.uleb128 0x2e
 3299 0d61 74040000 		.4byte	.LASF151
 3300 0d65 74040000 		.4byte	.LASF151
 3301 0d69 05       		.byte	0x5
 3302 0d6a 68       		.byte	0x68
 3303 0d6b 2E       		.uleb128 0x2e
 3304 0d6c CD050000 		.4byte	.LASF152
 3305 0d70 CD050000 		.4byte	.LASF152
 3306 0d74 05       		.byte	0x5
 3307 0d75 69       		.byte	0x69
 3308 0d76 2E       		.uleb128 0x2e
 3309 0d77 D1000000 		.4byte	.LASF153
 3310 0d7b D1000000 		.4byte	.LASF153
 3311 0d7f 05       		.byte	0x5
 3312 0d80 6D       		.byte	0x6d
 3313 0d81 2E       		.uleb128 0x2e
 3314 0d82 DF030000 		.4byte	.LASF154
 3315 0d86 DF030000 		.4byte	.LASF154
 3316 0d8a 05       		.byte	0x5
 3317 0d8b 6B       		.byte	0x6b
 3318 0d8c 2E       		.uleb128 0x2e
 3319 0d8d 38030000 		.4byte	.LASF155
 3320 0d91 38030000 		.4byte	.LASF155
 3321 0d95 06       		.byte	0x6
 3322 0d96 DA       		.byte	0xda
 3323 0d97 2E       		.uleb128 0x2e
 3324 0d98 21030000 		.4byte	.LASF156
 3325 0d9c 21030000 		.4byte	.LASF156
 3326 0da0 05       		.byte	0x5
 3327 0da1 49       		.byte	0x49
 3328 0da2 2E       		.uleb128 0x2e
 3329 0da3 2E070000 		.4byte	.LASF157
 3330 0da7 2E070000 		.4byte	.LASF157
 3331 0dab 05       		.byte	0x5
 3332 0dac 4A       		.byte	0x4a
 3333 0dad 2E       		.uleb128 0x2e
 3334 0dae 790B0000 		.4byte	.LASF158
 3335 0db2 790B0000 		.4byte	.LASF158
 3336 0db6 05       		.byte	0x5
 3337 0db7 6C       		.byte	0x6c
 3338 0db8 2E       		.uleb128 0x2e
 3339 0db9 55040000 		.4byte	.LASF159
 3340 0dbd 55040000 		.4byte	.LASF159
 3341 0dc1 05       		.byte	0x5
 3342 0dc2 6E       		.byte	0x6e
 3343 0dc3 00       		.byte	0
 3344              		.section	.debug_abbrev,"",%progbits
 3345              	.Ldebug_abbrev0:
 3346 0000 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 101


 3347 0001 11       		.uleb128 0x11
 3348 0002 01       		.byte	0x1
 3349 0003 25       		.uleb128 0x25
 3350 0004 0E       		.uleb128 0xe
 3351 0005 13       		.uleb128 0x13
 3352 0006 0B       		.uleb128 0xb
 3353 0007 03       		.uleb128 0x3
 3354 0008 0E       		.uleb128 0xe
 3355 0009 1B       		.uleb128 0x1b
 3356 000a 0E       		.uleb128 0xe
 3357 000b 55       		.uleb128 0x55
 3358 000c 17       		.uleb128 0x17
 3359 000d 11       		.uleb128 0x11
 3360 000e 01       		.uleb128 0x1
 3361 000f 10       		.uleb128 0x10
 3362 0010 17       		.uleb128 0x17
 3363 0011 00       		.byte	0
 3364 0012 00       		.byte	0
 3365 0013 02       		.uleb128 0x2
 3366 0014 24       		.uleb128 0x24
 3367 0015 00       		.byte	0
 3368 0016 0B       		.uleb128 0xb
 3369 0017 0B       		.uleb128 0xb
 3370 0018 3E       		.uleb128 0x3e
 3371 0019 0B       		.uleb128 0xb
 3372 001a 03       		.uleb128 0x3
 3373 001b 0E       		.uleb128 0xe
 3374 001c 00       		.byte	0
 3375 001d 00       		.byte	0
 3376 001e 03       		.uleb128 0x3
 3377 001f 24       		.uleb128 0x24
 3378 0020 00       		.byte	0
 3379 0021 0B       		.uleb128 0xb
 3380 0022 0B       		.uleb128 0xb
 3381 0023 3E       		.uleb128 0x3e
 3382 0024 0B       		.uleb128 0xb
 3383 0025 03       		.uleb128 0x3
 3384 0026 08       		.uleb128 0x8
 3385 0027 00       		.byte	0
 3386 0028 00       		.byte	0
 3387 0029 04       		.uleb128 0x4
 3388 002a 16       		.uleb128 0x16
 3389 002b 00       		.byte	0
 3390 002c 03       		.uleb128 0x3
 3391 002d 0E       		.uleb128 0xe
 3392 002e 3A       		.uleb128 0x3a
 3393 002f 0B       		.uleb128 0xb
 3394 0030 3B       		.uleb128 0x3b
 3395 0031 05       		.uleb128 0x5
 3396 0032 49       		.uleb128 0x49
 3397 0033 13       		.uleb128 0x13
 3398 0034 00       		.byte	0
 3399 0035 00       		.byte	0
 3400 0036 05       		.uleb128 0x5
 3401 0037 35       		.uleb128 0x35
 3402 0038 00       		.byte	0
 3403 0039 49       		.uleb128 0x49
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 102


 3404 003a 13       		.uleb128 0x13
 3405 003b 00       		.byte	0
 3406 003c 00       		.byte	0
 3407 003d 06       		.uleb128 0x6
 3408 003e 0F       		.uleb128 0xf
 3409 003f 00       		.byte	0
 3410 0040 0B       		.uleb128 0xb
 3411 0041 0B       		.uleb128 0xb
 3412 0042 49       		.uleb128 0x49
 3413 0043 13       		.uleb128 0x13
 3414 0044 00       		.byte	0
 3415 0045 00       		.byte	0
 3416 0046 07       		.uleb128 0x7
 3417 0047 15       		.uleb128 0x15
 3418 0048 00       		.byte	0
 3419 0049 27       		.uleb128 0x27
 3420 004a 19       		.uleb128 0x19
 3421 004b 00       		.byte	0
 3422 004c 00       		.byte	0
 3423 004d 08       		.uleb128 0x8
 3424 004e 0F       		.uleb128 0xf
 3425 004f 00       		.byte	0
 3426 0050 0B       		.uleb128 0xb
 3427 0051 0B       		.uleb128 0xb
 3428 0052 00       		.byte	0
 3429 0053 00       		.byte	0
 3430 0054 09       		.uleb128 0x9
 3431 0055 04       		.uleb128 0x4
 3432 0056 01       		.byte	0x1
 3433 0057 0B       		.uleb128 0xb
 3434 0058 0B       		.uleb128 0xb
 3435 0059 49       		.uleb128 0x49
 3436 005a 13       		.uleb128 0x13
 3437 005b 3A       		.uleb128 0x3a
 3438 005c 0B       		.uleb128 0xb
 3439 005d 3B       		.uleb128 0x3b
 3440 005e 0B       		.uleb128 0xb
 3441 005f 01       		.uleb128 0x1
 3442 0060 13       		.uleb128 0x13
 3443 0061 00       		.byte	0
 3444 0062 00       		.byte	0
 3445 0063 0A       		.uleb128 0xa
 3446 0064 28       		.uleb128 0x28
 3447 0065 00       		.byte	0
 3448 0066 03       		.uleb128 0x3
 3449 0067 0E       		.uleb128 0xe
 3450 0068 1C       		.uleb128 0x1c
 3451 0069 0B       		.uleb128 0xb
 3452 006a 00       		.byte	0
 3453 006b 00       		.byte	0
 3454 006c 0B       		.uleb128 0xb
 3455 006d 13       		.uleb128 0x13
 3456 006e 01       		.byte	0x1
 3457 006f 0B       		.uleb128 0xb
 3458 0070 0B       		.uleb128 0xb
 3459 0071 3A       		.uleb128 0x3a
 3460 0072 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 103


 3461 0073 3B       		.uleb128 0x3b
 3462 0074 0B       		.uleb128 0xb
 3463 0075 01       		.uleb128 0x1
 3464 0076 13       		.uleb128 0x13
 3465 0077 00       		.byte	0
 3466 0078 00       		.byte	0
 3467 0079 0C       		.uleb128 0xc
 3468 007a 0D       		.uleb128 0xd
 3469 007b 00       		.byte	0
 3470 007c 03       		.uleb128 0x3
 3471 007d 0E       		.uleb128 0xe
 3472 007e 3A       		.uleb128 0x3a
 3473 007f 0B       		.uleb128 0xb
 3474 0080 3B       		.uleb128 0x3b
 3475 0081 0B       		.uleb128 0xb
 3476 0082 49       		.uleb128 0x49
 3477 0083 13       		.uleb128 0x13
 3478 0084 38       		.uleb128 0x38
 3479 0085 0B       		.uleb128 0xb
 3480 0086 00       		.byte	0
 3481 0087 00       		.byte	0
 3482 0088 0D       		.uleb128 0xd
 3483 0089 16       		.uleb128 0x16
 3484 008a 00       		.byte	0
 3485 008b 03       		.uleb128 0x3
 3486 008c 0E       		.uleb128 0xe
 3487 008d 3A       		.uleb128 0x3a
 3488 008e 0B       		.uleb128 0xb
 3489 008f 3B       		.uleb128 0x3b
 3490 0090 0B       		.uleb128 0xb
 3491 0091 49       		.uleb128 0x49
 3492 0092 13       		.uleb128 0x13
 3493 0093 00       		.byte	0
 3494 0094 00       		.byte	0
 3495 0095 0E       		.uleb128 0xe
 3496 0096 0D       		.uleb128 0xd
 3497 0097 00       		.byte	0
 3498 0098 03       		.uleb128 0x3
 3499 0099 0E       		.uleb128 0xe
 3500 009a 3A       		.uleb128 0x3a
 3501 009b 0B       		.uleb128 0xb
 3502 009c 3B       		.uleb128 0x3b
 3503 009d 05       		.uleb128 0x5
 3504 009e 49       		.uleb128 0x49
 3505 009f 13       		.uleb128 0x13
 3506 00a0 38       		.uleb128 0x38
 3507 00a1 0B       		.uleb128 0xb
 3508 00a2 00       		.byte	0
 3509 00a3 00       		.byte	0
 3510 00a4 0F       		.uleb128 0xf
 3511 00a5 13       		.uleb128 0x13
 3512 00a6 01       		.byte	0x1
 3513 00a7 0B       		.uleb128 0xb
 3514 00a8 0B       		.uleb128 0xb
 3515 00a9 3A       		.uleb128 0x3a
 3516 00aa 0B       		.uleb128 0xb
 3517 00ab 3B       		.uleb128 0x3b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 104


 3518 00ac 05       		.uleb128 0x5
 3519 00ad 01       		.uleb128 0x1
 3520 00ae 13       		.uleb128 0x13
 3521 00af 00       		.byte	0
 3522 00b0 00       		.byte	0
 3523 00b1 10       		.uleb128 0x10
 3524 00b2 0D       		.uleb128 0xd
 3525 00b3 00       		.byte	0
 3526 00b4 03       		.uleb128 0x3
 3527 00b5 08       		.uleb128 0x8
 3528 00b6 3A       		.uleb128 0x3a
 3529 00b7 0B       		.uleb128 0xb
 3530 00b8 3B       		.uleb128 0x3b
 3531 00b9 05       		.uleb128 0x5
 3532 00ba 49       		.uleb128 0x49
 3533 00bb 13       		.uleb128 0x13
 3534 00bc 38       		.uleb128 0x38
 3535 00bd 0B       		.uleb128 0xb
 3536 00be 00       		.byte	0
 3537 00bf 00       		.byte	0
 3538 00c0 11       		.uleb128 0x11
 3539 00c1 01       		.uleb128 0x1
 3540 00c2 01       		.byte	0x1
 3541 00c3 49       		.uleb128 0x49
 3542 00c4 13       		.uleb128 0x13
 3543 00c5 01       		.uleb128 0x1
 3544 00c6 13       		.uleb128 0x13
 3545 00c7 00       		.byte	0
 3546 00c8 00       		.byte	0
 3547 00c9 12       		.uleb128 0x12
 3548 00ca 21       		.uleb128 0x21
 3549 00cb 00       		.byte	0
 3550 00cc 49       		.uleb128 0x49
 3551 00cd 13       		.uleb128 0x13
 3552 00ce 2F       		.uleb128 0x2f
 3553 00cf 0B       		.uleb128 0xb
 3554 00d0 00       		.byte	0
 3555 00d1 00       		.byte	0
 3556 00d2 13       		.uleb128 0x13
 3557 00d3 26       		.uleb128 0x26
 3558 00d4 00       		.byte	0
 3559 00d5 00       		.byte	0
 3560 00d6 00       		.byte	0
 3561 00d7 14       		.uleb128 0x14
 3562 00d8 2E       		.uleb128 0x2e
 3563 00d9 01       		.byte	0x1
 3564 00da 03       		.uleb128 0x3
 3565 00db 0E       		.uleb128 0xe
 3566 00dc 3A       		.uleb128 0x3a
 3567 00dd 0B       		.uleb128 0xb
 3568 00de 3B       		.uleb128 0x3b
 3569 00df 05       		.uleb128 0x5
 3570 00e0 27       		.uleb128 0x27
 3571 00e1 19       		.uleb128 0x19
 3572 00e2 49       		.uleb128 0x49
 3573 00e3 13       		.uleb128 0x13
 3574 00e4 11       		.uleb128 0x11
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 105


 3575 00e5 01       		.uleb128 0x1
 3576 00e6 12       		.uleb128 0x12
 3577 00e7 06       		.uleb128 0x6
 3578 00e8 40       		.uleb128 0x40
 3579 00e9 18       		.uleb128 0x18
 3580 00ea 9742     		.uleb128 0x2117
 3581 00ec 19       		.uleb128 0x19
 3582 00ed 01       		.uleb128 0x1
 3583 00ee 13       		.uleb128 0x13
 3584 00ef 00       		.byte	0
 3585 00f0 00       		.byte	0
 3586 00f1 15       		.uleb128 0x15
 3587 00f2 05       		.uleb128 0x5
 3588 00f3 00       		.byte	0
 3589 00f4 03       		.uleb128 0x3
 3590 00f5 0E       		.uleb128 0xe
 3591 00f6 3A       		.uleb128 0x3a
 3592 00f7 0B       		.uleb128 0xb
 3593 00f8 3B       		.uleb128 0x3b
 3594 00f9 05       		.uleb128 0x5
 3595 00fa 49       		.uleb128 0x49
 3596 00fb 13       		.uleb128 0x13
 3597 00fc 02       		.uleb128 0x2
 3598 00fd 17       		.uleb128 0x17
 3599 00fe 00       		.byte	0
 3600 00ff 00       		.byte	0
 3601 0100 16       		.uleb128 0x16
 3602 0101 34       		.uleb128 0x34
 3603 0102 00       		.byte	0
 3604 0103 03       		.uleb128 0x3
 3605 0104 0E       		.uleb128 0xe
 3606 0105 3A       		.uleb128 0x3a
 3607 0106 0B       		.uleb128 0xb
 3608 0107 3B       		.uleb128 0x3b
 3609 0108 05       		.uleb128 0x5
 3610 0109 49       		.uleb128 0x49
 3611 010a 13       		.uleb128 0x13
 3612 010b 02       		.uleb128 0x2
 3613 010c 17       		.uleb128 0x17
 3614 010d 00       		.byte	0
 3615 010e 00       		.byte	0
 3616 010f 17       		.uleb128 0x17
 3617 0110 26       		.uleb128 0x26
 3618 0111 00       		.byte	0
 3619 0112 49       		.uleb128 0x49
 3620 0113 13       		.uleb128 0x13
 3621 0114 00       		.byte	0
 3622 0115 00       		.byte	0
 3623 0116 18       		.uleb128 0x18
 3624 0117 2E       		.uleb128 0x2e
 3625 0118 01       		.byte	0x1
 3626 0119 03       		.uleb128 0x3
 3627 011a 0E       		.uleb128 0xe
 3628 011b 3A       		.uleb128 0x3a
 3629 011c 0B       		.uleb128 0xb
 3630 011d 3B       		.uleb128 0x3b
 3631 011e 05       		.uleb128 0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 106


 3632 011f 27       		.uleb128 0x27
 3633 0120 19       		.uleb128 0x19
 3634 0121 20       		.uleb128 0x20
 3635 0122 0B       		.uleb128 0xb
 3636 0123 01       		.uleb128 0x1
 3637 0124 13       		.uleb128 0x13
 3638 0125 00       		.byte	0
 3639 0126 00       		.byte	0
 3640 0127 19       		.uleb128 0x19
 3641 0128 34       		.uleb128 0x34
 3642 0129 00       		.byte	0
 3643 012a 03       		.uleb128 0x3
 3644 012b 0E       		.uleb128 0xe
 3645 012c 3A       		.uleb128 0x3a
 3646 012d 0B       		.uleb128 0xb
 3647 012e 3B       		.uleb128 0x3b
 3648 012f 05       		.uleb128 0x5
 3649 0130 49       		.uleb128 0x49
 3650 0131 13       		.uleb128 0x13
 3651 0132 00       		.byte	0
 3652 0133 00       		.byte	0
 3653 0134 1A       		.uleb128 0x1a
 3654 0135 2E       		.uleb128 0x2e
 3655 0136 01       		.byte	0x1
 3656 0137 03       		.uleb128 0x3
 3657 0138 0E       		.uleb128 0xe
 3658 0139 3A       		.uleb128 0x3a
 3659 013a 0B       		.uleb128 0xb
 3660 013b 3B       		.uleb128 0x3b
 3661 013c 05       		.uleb128 0x5
 3662 013d 27       		.uleb128 0x27
 3663 013e 19       		.uleb128 0x19
 3664 013f 11       		.uleb128 0x11
 3665 0140 01       		.uleb128 0x1
 3666 0141 12       		.uleb128 0x12
 3667 0142 06       		.uleb128 0x6
 3668 0143 40       		.uleb128 0x40
 3669 0144 18       		.uleb128 0x18
 3670 0145 9642     		.uleb128 0x2116
 3671 0147 19       		.uleb128 0x19
 3672 0148 01       		.uleb128 0x1
 3673 0149 13       		.uleb128 0x13
 3674 014a 00       		.byte	0
 3675 014b 00       		.byte	0
 3676 014c 1B       		.uleb128 0x1b
 3677 014d 1D       		.uleb128 0x1d
 3678 014e 01       		.byte	0x1
 3679 014f 31       		.uleb128 0x31
 3680 0150 13       		.uleb128 0x13
 3681 0151 11       		.uleb128 0x11
 3682 0152 01       		.uleb128 0x1
 3683 0153 12       		.uleb128 0x12
 3684 0154 06       		.uleb128 0x6
 3685 0155 58       		.uleb128 0x58
 3686 0156 0B       		.uleb128 0xb
 3687 0157 59       		.uleb128 0x59
 3688 0158 05       		.uleb128 0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 107


 3689 0159 00       		.byte	0
 3690 015a 00       		.byte	0
 3691 015b 1C       		.uleb128 0x1c
 3692 015c 0B       		.uleb128 0xb
 3693 015d 01       		.byte	0x1
 3694 015e 11       		.uleb128 0x11
 3695 015f 01       		.uleb128 0x1
 3696 0160 12       		.uleb128 0x12
 3697 0161 06       		.uleb128 0x6
 3698 0162 00       		.byte	0
 3699 0163 00       		.byte	0
 3700 0164 1D       		.uleb128 0x1d
 3701 0165 34       		.uleb128 0x34
 3702 0166 00       		.byte	0
 3703 0167 31       		.uleb128 0x31
 3704 0168 13       		.uleb128 0x13
 3705 0169 02       		.uleb128 0x2
 3706 016a 17       		.uleb128 0x17
 3707 016b 00       		.byte	0
 3708 016c 00       		.byte	0
 3709 016d 1E       		.uleb128 0x1e
 3710 016e 2E       		.uleb128 0x2e
 3711 016f 01       		.byte	0x1
 3712 0170 03       		.uleb128 0x3
 3713 0171 0E       		.uleb128 0xe
 3714 0172 3A       		.uleb128 0x3a
 3715 0173 0B       		.uleb128 0xb
 3716 0174 3B       		.uleb128 0x3b
 3717 0175 05       		.uleb128 0x5
 3718 0176 27       		.uleb128 0x27
 3719 0177 19       		.uleb128 0x19
 3720 0178 11       		.uleb128 0x11
 3721 0179 01       		.uleb128 0x1
 3722 017a 12       		.uleb128 0x12
 3723 017b 06       		.uleb128 0x6
 3724 017c 40       		.uleb128 0x40
 3725 017d 18       		.uleb128 0x18
 3726 017e 9742     		.uleb128 0x2117
 3727 0180 19       		.uleb128 0x19
 3728 0181 01       		.uleb128 0x1
 3729 0182 13       		.uleb128 0x13
 3730 0183 00       		.byte	0
 3731 0184 00       		.byte	0
 3732 0185 1F       		.uleb128 0x1f
 3733 0186 898201   		.uleb128 0x4109
 3734 0189 00       		.byte	0
 3735 018a 11       		.uleb128 0x11
 3736 018b 01       		.uleb128 0x1
 3737 018c 31       		.uleb128 0x31
 3738 018d 13       		.uleb128 0x13
 3739 018e 00       		.byte	0
 3740 018f 00       		.byte	0
 3741 0190 20       		.uleb128 0x20
 3742 0191 898201   		.uleb128 0x4109
 3743 0194 01       		.byte	0x1
 3744 0195 11       		.uleb128 0x11
 3745 0196 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 108


 3746 0197 31       		.uleb128 0x31
 3747 0198 13       		.uleb128 0x13
 3748 0199 00       		.byte	0
 3749 019a 00       		.byte	0
 3750 019b 21       		.uleb128 0x21
 3751 019c 8A8201   		.uleb128 0x410a
 3752 019f 00       		.byte	0
 3753 01a0 02       		.uleb128 0x2
 3754 01a1 18       		.uleb128 0x18
 3755 01a2 9142     		.uleb128 0x2111
 3756 01a4 18       		.uleb128 0x18
 3757 01a5 00       		.byte	0
 3758 01a6 00       		.byte	0
 3759 01a7 22       		.uleb128 0x22
 3760 01a8 2E       		.uleb128 0x2e
 3761 01a9 01       		.byte	0x1
 3762 01aa 3F       		.uleb128 0x3f
 3763 01ab 19       		.uleb128 0x19
 3764 01ac 03       		.uleb128 0x3
 3765 01ad 0E       		.uleb128 0xe
 3766 01ae 3A       		.uleb128 0x3a
 3767 01af 0B       		.uleb128 0xb
 3768 01b0 3B       		.uleb128 0x3b
 3769 01b1 05       		.uleb128 0x5
 3770 01b2 27       		.uleb128 0x27
 3771 01b3 19       		.uleb128 0x19
 3772 01b4 11       		.uleb128 0x11
 3773 01b5 01       		.uleb128 0x1
 3774 01b6 12       		.uleb128 0x12
 3775 01b7 06       		.uleb128 0x6
 3776 01b8 40       		.uleb128 0x40
 3777 01b9 18       		.uleb128 0x18
 3778 01ba 9642     		.uleb128 0x2116
 3779 01bc 19       		.uleb128 0x19
 3780 01bd 01       		.uleb128 0x1
 3781 01be 13       		.uleb128 0x13
 3782 01bf 00       		.byte	0
 3783 01c0 00       		.byte	0
 3784 01c1 23       		.uleb128 0x23
 3785 01c2 898201   		.uleb128 0x4109
 3786 01c5 01       		.byte	0x1
 3787 01c6 11       		.uleb128 0x11
 3788 01c7 01       		.uleb128 0x1
 3789 01c8 31       		.uleb128 0x31
 3790 01c9 13       		.uleb128 0x13
 3791 01ca 01       		.uleb128 0x1
 3792 01cb 13       		.uleb128 0x13
 3793 01cc 00       		.byte	0
 3794 01cd 00       		.byte	0
 3795 01ce 24       		.uleb128 0x24
 3796 01cf 2E       		.uleb128 0x2e
 3797 01d0 01       		.byte	0x1
 3798 01d1 3F       		.uleb128 0x3f
 3799 01d2 19       		.uleb128 0x19
 3800 01d3 03       		.uleb128 0x3
 3801 01d4 0E       		.uleb128 0xe
 3802 01d5 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 109


 3803 01d6 0B       		.uleb128 0xb
 3804 01d7 3B       		.uleb128 0x3b
 3805 01d8 0B       		.uleb128 0xb
 3806 01d9 27       		.uleb128 0x27
 3807 01da 19       		.uleb128 0x19
 3808 01db 11       		.uleb128 0x11
 3809 01dc 01       		.uleb128 0x1
 3810 01dd 12       		.uleb128 0x12
 3811 01de 06       		.uleb128 0x6
 3812 01df 40       		.uleb128 0x40
 3813 01e0 18       		.uleb128 0x18
 3814 01e1 9742     		.uleb128 0x2117
 3815 01e3 19       		.uleb128 0x19
 3816 01e4 01       		.uleb128 0x1
 3817 01e5 13       		.uleb128 0x13
 3818 01e6 00       		.byte	0
 3819 01e7 00       		.byte	0
 3820 01e8 25       		.uleb128 0x25
 3821 01e9 34       		.uleb128 0x34
 3822 01ea 00       		.byte	0
 3823 01eb 03       		.uleb128 0x3
 3824 01ec 0E       		.uleb128 0xe
 3825 01ed 3A       		.uleb128 0x3a
 3826 01ee 0B       		.uleb128 0xb
 3827 01ef 3B       		.uleb128 0x3b
 3828 01f0 0B       		.uleb128 0xb
 3829 01f1 49       		.uleb128 0x49
 3830 01f2 13       		.uleb128 0x13
 3831 01f3 02       		.uleb128 0x2
 3832 01f4 17       		.uleb128 0x17
 3833 01f5 00       		.byte	0
 3834 01f6 00       		.byte	0
 3835 01f7 26       		.uleb128 0x26
 3836 01f8 2E       		.uleb128 0x2e
 3837 01f9 01       		.byte	0x1
 3838 01fa 3F       		.uleb128 0x3f
 3839 01fb 19       		.uleb128 0x19
 3840 01fc 03       		.uleb128 0x3
 3841 01fd 0E       		.uleb128 0xe
 3842 01fe 3A       		.uleb128 0x3a
 3843 01ff 0B       		.uleb128 0xb
 3844 0200 3B       		.uleb128 0x3b
 3845 0201 05       		.uleb128 0x5
 3846 0202 27       		.uleb128 0x27
 3847 0203 19       		.uleb128 0x19
 3848 0204 11       		.uleb128 0x11
 3849 0205 01       		.uleb128 0x1
 3850 0206 12       		.uleb128 0x12
 3851 0207 06       		.uleb128 0x6
 3852 0208 40       		.uleb128 0x40
 3853 0209 18       		.uleb128 0x18
 3854 020a 9742     		.uleb128 0x2117
 3855 020c 19       		.uleb128 0x19
 3856 020d 01       		.uleb128 0x1
 3857 020e 13       		.uleb128 0x13
 3858 020f 00       		.byte	0
 3859 0210 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 110


 3860 0211 27       		.uleb128 0x27
 3861 0212 05       		.uleb128 0x5
 3862 0213 00       		.byte	0
 3863 0214 03       		.uleb128 0x3
 3864 0215 0E       		.uleb128 0xe
 3865 0216 3A       		.uleb128 0x3a
 3866 0217 0B       		.uleb128 0xb
 3867 0218 3B       		.uleb128 0x3b
 3868 0219 05       		.uleb128 0x5
 3869 021a 49       		.uleb128 0x49
 3870 021b 13       		.uleb128 0x13
 3871 021c 02       		.uleb128 0x2
 3872 021d 18       		.uleb128 0x18
 3873 021e 00       		.byte	0
 3874 021f 00       		.byte	0
 3875 0220 28       		.uleb128 0x28
 3876 0221 34       		.uleb128 0x34
 3877 0222 00       		.byte	0
 3878 0223 03       		.uleb128 0x3
 3879 0224 0E       		.uleb128 0xe
 3880 0225 3A       		.uleb128 0x3a
 3881 0226 0B       		.uleb128 0xb
 3882 0227 3B       		.uleb128 0x3b
 3883 0228 05       		.uleb128 0x5
 3884 0229 49       		.uleb128 0x49
 3885 022a 13       		.uleb128 0x13
 3886 022b 02       		.uleb128 0x2
 3887 022c 18       		.uleb128 0x18
 3888 022d 00       		.byte	0
 3889 022e 00       		.byte	0
 3890 022f 29       		.uleb128 0x29
 3891 0230 2E       		.uleb128 0x2e
 3892 0231 01       		.byte	0x1
 3893 0232 3F       		.uleb128 0x3f
 3894 0233 19       		.uleb128 0x19
 3895 0234 03       		.uleb128 0x3
 3896 0235 0E       		.uleb128 0xe
 3897 0236 3A       		.uleb128 0x3a
 3898 0237 0B       		.uleb128 0xb
 3899 0238 3B       		.uleb128 0x3b
 3900 0239 05       		.uleb128 0x5
 3901 023a 27       		.uleb128 0x27
 3902 023b 19       		.uleb128 0x19
 3903 023c 49       		.uleb128 0x49
 3904 023d 13       		.uleb128 0x13
 3905 023e 11       		.uleb128 0x11
 3906 023f 01       		.uleb128 0x1
 3907 0240 12       		.uleb128 0x12
 3908 0241 06       		.uleb128 0x6
 3909 0242 40       		.uleb128 0x40
 3910 0243 18       		.uleb128 0x18
 3911 0244 9742     		.uleb128 0x2117
 3912 0246 19       		.uleb128 0x19
 3913 0247 01       		.uleb128 0x1
 3914 0248 13       		.uleb128 0x13
 3915 0249 00       		.byte	0
 3916 024a 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 111


 3917 024b 2A       		.uleb128 0x2a
 3918 024c 34       		.uleb128 0x34
 3919 024d 00       		.byte	0
 3920 024e 03       		.uleb128 0x3
 3921 024f 0E       		.uleb128 0xe
 3922 0250 3A       		.uleb128 0x3a
 3923 0251 0B       		.uleb128 0xb
 3924 0252 3B       		.uleb128 0x3b
 3925 0253 0B       		.uleb128 0xb
 3926 0254 49       		.uleb128 0x49
 3927 0255 13       		.uleb128 0x13
 3928 0256 02       		.uleb128 0x2
 3929 0257 18       		.uleb128 0x18
 3930 0258 00       		.byte	0
 3931 0259 00       		.byte	0
 3932 025a 2B       		.uleb128 0x2b
 3933 025b 34       		.uleb128 0x34
 3934 025c 00       		.byte	0
 3935 025d 03       		.uleb128 0x3
 3936 025e 0E       		.uleb128 0xe
 3937 025f 3A       		.uleb128 0x3a
 3938 0260 0B       		.uleb128 0xb
 3939 0261 3B       		.uleb128 0x3b
 3940 0262 05       		.uleb128 0x5
 3941 0263 49       		.uleb128 0x49
 3942 0264 13       		.uleb128 0x13
 3943 0265 3F       		.uleb128 0x3f
 3944 0266 19       		.uleb128 0x19
 3945 0267 3C       		.uleb128 0x3c
 3946 0268 19       		.uleb128 0x19
 3947 0269 00       		.byte	0
 3948 026a 00       		.byte	0
 3949 026b 2C       		.uleb128 0x2c
 3950 026c 34       		.uleb128 0x34
 3951 026d 00       		.byte	0
 3952 026e 03       		.uleb128 0x3
 3953 026f 0E       		.uleb128 0xe
 3954 0270 3A       		.uleb128 0x3a
 3955 0271 0B       		.uleb128 0xb
 3956 0272 3B       		.uleb128 0x3b
 3957 0273 0B       		.uleb128 0xb
 3958 0274 49       		.uleb128 0x49
 3959 0275 13       		.uleb128 0x13
 3960 0276 3F       		.uleb128 0x3f
 3961 0277 19       		.uleb128 0x19
 3962 0278 02       		.uleb128 0x2
 3963 0279 18       		.uleb128 0x18
 3964 027a 00       		.byte	0
 3965 027b 00       		.byte	0
 3966 027c 2D       		.uleb128 0x2d
 3967 027d 34       		.uleb128 0x34
 3968 027e 00       		.byte	0
 3969 027f 03       		.uleb128 0x3
 3970 0280 0E       		.uleb128 0xe
 3971 0281 3A       		.uleb128 0x3a
 3972 0282 0B       		.uleb128 0xb
 3973 0283 3B       		.uleb128 0x3b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 112


 3974 0284 0B       		.uleb128 0xb
 3975 0285 49       		.uleb128 0x49
 3976 0286 13       		.uleb128 0x13
 3977 0287 3F       		.uleb128 0x3f
 3978 0288 19       		.uleb128 0x19
 3979 0289 3C       		.uleb128 0x3c
 3980 028a 19       		.uleb128 0x19
 3981 028b 00       		.byte	0
 3982 028c 00       		.byte	0
 3983 028d 2E       		.uleb128 0x2e
 3984 028e 2E       		.uleb128 0x2e
 3985 028f 00       		.byte	0
 3986 0290 3F       		.uleb128 0x3f
 3987 0291 19       		.uleb128 0x19
 3988 0292 3C       		.uleb128 0x3c
 3989 0293 19       		.uleb128 0x19
 3990 0294 6E       		.uleb128 0x6e
 3991 0295 0E       		.uleb128 0xe
 3992 0296 03       		.uleb128 0x3
 3993 0297 0E       		.uleb128 0xe
 3994 0298 3A       		.uleb128 0x3a
 3995 0299 0B       		.uleb128 0xb
 3996 029a 3B       		.uleb128 0x3b
 3997 029b 0B       		.uleb128 0xb
 3998 029c 00       		.byte	0
 3999 029d 00       		.byte	0
 4000 029e 00       		.byte	0
 4001              		.section	.debug_loc,"",%progbits
 4002              	.Ldebug_loc0:
 4003              	.LLST0:
 4004 0000 00000000 		.4byte	.LVL0
 4005 0004 08000000 		.4byte	.LVL2
 4006 0008 0100     		.2byte	0x1
 4007 000a 50       		.byte	0x50
 4008 000b 08000000 		.4byte	.LVL2
 4009 000f 14000000 		.4byte	.LFE16
 4010 0013 0400     		.2byte	0x4
 4011 0015 F3       		.byte	0xf3
 4012 0016 01       		.uleb128 0x1
 4013 0017 50       		.byte	0x50
 4014 0018 9F       		.byte	0x9f
 4015 0019 00000000 		.4byte	0
 4016 001d 00000000 		.4byte	0
 4017              	.LLST1:
 4018 0021 04000000 		.4byte	.LVL1
 4019 0025 0C000000 		.4byte	.LVL3
 4020 0029 0100     		.2byte	0x1
 4021 002b 53       		.byte	0x53
 4022 002c 0C000000 		.4byte	.LVL3
 4023 0030 14000000 		.4byte	.LFE16
 4024 0034 0700     		.2byte	0x7
 4025 0036 70       		.byte	0x70
 4026 0037 00       		.sleb128 0
 4027 0038 0A       		.byte	0xa
 4028 0039 FFFF     		.2byte	0xffff
 4029 003b 1A       		.byte	0x1a
 4030 003c 9F       		.byte	0x9f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 113


 4031 003d 00000000 		.4byte	0
 4032 0041 00000000 		.4byte	0
 4033              	.LLST2:
 4034 0045 0E000000 		.4byte	.LVL4
 4035 0049 12000000 		.4byte	.LVL5
 4036 004d 0600     		.2byte	0x6
 4037 004f 73       		.byte	0x73
 4038 0050 00       		.sleb128 0
 4039 0051 08       		.byte	0x8
 4040 0052 FF       		.byte	0xff
 4041 0053 1A       		.byte	0x1a
 4042 0054 9F       		.byte	0x9f
 4043 0055 12000000 		.4byte	.LVL5
 4044 0059 1A000000 		.4byte	.LVL6
 4045 005d 0100     		.2byte	0x1
 4046 005f 53       		.byte	0x53
 4047 0060 1A000000 		.4byte	.LVL6
 4048 0064 1C000000 		.4byte	.LVL7
 4049 0068 0500     		.2byte	0x5
 4050 006a 0C       		.byte	0xc
 4051 006b C0010B40 		.4byte	0x400b01c0
 4052 006f 00000000 		.4byte	0
 4053 0073 00000000 		.4byte	0
 4054              	.LLST3:
 4055 0077 98000000 		.4byte	.LVL13
 4056 007b 9C000000 		.4byte	.LVL14
 4057 007f 0100     		.2byte	0x1
 4058 0081 53       		.byte	0x53
 4059 0082 00000000 		.4byte	0
 4060 0086 00000000 		.4byte	0
 4061              	.LLST4:
 4062 008a 52000000 		.4byte	.LVL8
 4063 008e 58000000 		.4byte	.LVL9
 4064 0092 0400     		.2byte	0x4
 4065 0094 0A       		.byte	0xa
 4066 0095 C003     		.2byte	0x3c0
 4067 0097 9F       		.byte	0x9f
 4068 0098 58000000 		.4byte	.LVL9
 4069 009c 68000000 		.4byte	.LVL11
 4070 00a0 0100     		.2byte	0x1
 4071 00a2 53       		.byte	0x53
 4072 00a3 00000000 		.4byte	0
 4073 00a7 00000000 		.4byte	0
 4074              	.LLST5:
 4075 00ab 82000000 		.4byte	.LVL12
 4076 00af B6000000 		.4byte	.LVL15
 4077 00b3 0100     		.2byte	0x1
 4078 00b5 50       		.byte	0x50
 4079 00b6 00000000 		.4byte	0
 4080 00ba 00000000 		.4byte	0
 4081              	.LLST6:
 4082 00be 58000000 		.4byte	.LVL22
 4083 00c2 6B000000 		.4byte	.LVL26-1
 4084 00c6 0100     		.2byte	0x1
 4085 00c8 50       		.byte	0x50
 4086 00c9 7E000000 		.4byte	.LVL27
 4087 00cd 91000000 		.4byte	.LVL31-1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 114


 4088 00d1 0100     		.2byte	0x1
 4089 00d3 50       		.byte	0x50
 4090 00d4 CA000000 		.4byte	.LVL33
 4091 00d8 D7000000 		.4byte	.LVL36-1
 4092 00dc 0100     		.2byte	0x1
 4093 00de 50       		.byte	0x50
 4094 00df DC000000 		.4byte	.LVL37
 4095 00e3 E7000000 		.4byte	.LVL40-1
 4096 00e7 0100     		.2byte	0x1
 4097 00e9 50       		.byte	0x50
 4098 00ea EC000000 		.4byte	.LVL41
 4099 00ee FF000000 		.4byte	.LVL45-1
 4100 00f2 0100     		.2byte	0x1
 4101 00f4 50       		.byte	0x50
 4102 00f5 04010000 		.4byte	.LVL46
 4103 00f9 15010000 		.4byte	.LVL50-1
 4104 00fd 0100     		.2byte	0x1
 4105 00ff 50       		.byte	0x50
 4106 0100 00000000 		.4byte	0
 4107 0104 00000000 		.4byte	0
 4108              	.LLST7:
 4109 0108 5C000000 		.4byte	.LVL23
 4110 010c 60000000 		.4byte	.LVL24
 4111 0110 0100     		.2byte	0x1
 4112 0112 51       		.byte	0x51
 4113 0113 60000000 		.4byte	.LVL24
 4114 0117 6B000000 		.4byte	.LVL26-1
 4115 011b 0100     		.2byte	0x1
 4116 011d 53       		.byte	0x53
 4117 011e 82000000 		.4byte	.LVL28
 4118 0122 86000000 		.4byte	.LVL29
 4119 0126 0100     		.2byte	0x1
 4120 0128 51       		.byte	0x51
 4121 0129 86000000 		.4byte	.LVL29
 4122 012d 91000000 		.4byte	.LVL31-1
 4123 0131 0100     		.2byte	0x1
 4124 0133 53       		.byte	0x53
 4125 0134 CE000000 		.4byte	.LVL34
 4126 0138 D2000000 		.4byte	.LVL35
 4127 013c 0100     		.2byte	0x1
 4128 013e 52       		.byte	0x52
 4129 013f D2000000 		.4byte	.LVL35
 4130 0143 D7000000 		.4byte	.LVL36-1
 4131 0147 0100     		.2byte	0x1
 4132 0149 53       		.byte	0x53
 4133 014a DE000000 		.4byte	.LVL38
 4134 014e E2000000 		.4byte	.LVL39
 4135 0152 0100     		.2byte	0x1
 4136 0154 52       		.byte	0x52
 4137 0155 E2000000 		.4byte	.LVL39
 4138 0159 E7000000 		.4byte	.LVL40-1
 4139 015d 0100     		.2byte	0x1
 4140 015f 53       		.byte	0x53
 4141 0160 F0000000 		.4byte	.LVL42
 4142 0164 F4000000 		.4byte	.LVL43
 4143 0168 0100     		.2byte	0x1
 4144 016a 52       		.byte	0x52
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 115


 4145 016b F4000000 		.4byte	.LVL43
 4146 016f FF000000 		.4byte	.LVL45-1
 4147 0173 0100     		.2byte	0x1
 4148 0175 53       		.byte	0x53
 4149 0176 06010000 		.4byte	.LVL47
 4150 017a 0A010000 		.4byte	.LVL48
 4151 017e 0100     		.2byte	0x1
 4152 0180 52       		.byte	0x52
 4153 0181 0A010000 		.4byte	.LVL48
 4154 0185 15010000 		.4byte	.LVL50-1
 4155 0189 0100     		.2byte	0x1
 4156 018b 53       		.byte	0x53
 4157 018c 00000000 		.4byte	0
 4158 0190 00000000 		.4byte	0
 4159              	.LLST8:
 4160 0194 00000000 		.4byte	.LVL57
 4161 0198 1E000000 		.4byte	.LVL59
 4162 019c 0100     		.2byte	0x1
 4163 019e 50       		.byte	0x50
 4164 019f 1E000000 		.4byte	.LVL59
 4165 01a3 EC000000 		.4byte	.LFE9
 4166 01a7 0200     		.2byte	0x2
 4167 01a9 91       		.byte	0x91
 4168 01aa 64       		.sleb128 -28
 4169 01ab 00000000 		.4byte	0
 4170 01af 00000000 		.4byte	0
 4171              	.LLST9:
 4172 01b3 00000000 		.4byte	.LVL57
 4173 01b7 21000000 		.4byte	.LVL60-1
 4174 01bb 0100     		.2byte	0x1
 4175 01bd 51       		.byte	0x51
 4176 01be 21000000 		.4byte	.LVL60-1
 4177 01c2 EC000000 		.4byte	.LFE9
 4178 01c6 0400     		.2byte	0x4
 4179 01c8 F3       		.byte	0xf3
 4180 01c9 01       		.uleb128 0x1
 4181 01ca 51       		.byte	0x51
 4182 01cb 9F       		.byte	0x9f
 4183 01cc 00000000 		.4byte	0
 4184 01d0 00000000 		.4byte	0
 4185              	.LLST10:
 4186 01d4 28000000 		.4byte	.LVL61
 4187 01d8 2A000000 		.4byte	.LVL62
 4188 01dc 0700     		.2byte	0x7
 4189 01de 70       		.byte	0x70
 4190 01df 00       		.sleb128 0
 4191 01e0 0A       		.byte	0xa
 4192 01e1 FFFF     		.2byte	0xffff
 4193 01e3 1A       		.byte	0x1a
 4194 01e4 9F       		.byte	0x9f
 4195 01e5 32000000 		.4byte	.LVL64
 4196 01e9 3E000000 		.4byte	.LVL66
 4197 01ed 0100     		.2byte	0x1
 4198 01ef 50       		.byte	0x50
 4199 01f0 3E000000 		.4byte	.LVL66
 4200 01f4 D4000000 		.4byte	.LVL80
 4201 01f8 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 116


 4202 01fa 56       		.byte	0x56
 4203 01fb 00000000 		.4byte	0
 4204 01ff 00000000 		.4byte	0
 4205              	.LLST11:
 4206 0203 3A000000 		.4byte	.LVL65
 4207 0207 3E000000 		.4byte	.LVL66
 4208 020b 0100     		.2byte	0x1
 4209 020d 52       		.byte	0x52
 4210 020e 3E000000 		.4byte	.LVL66
 4211 0212 D4000000 		.4byte	.LVL79
 4212 0216 0100     		.2byte	0x1
 4213 0218 55       		.byte	0x55
 4214 0219 00000000 		.4byte	0
 4215 021d 00000000 		.4byte	0
 4216              	.LLST12:
 4217 0221 3A000000 		.4byte	.LVL65
 4218 0225 3E000000 		.4byte	.LVL66
 4219 0229 0200     		.2byte	0x2
 4220 022b 30       		.byte	0x30
 4221 022c 9F       		.byte	0x9f
 4222 022d 3E000000 		.4byte	.LVL66
 4223 0231 62000000 		.4byte	.LVL68
 4224 0235 0100     		.2byte	0x1
 4225 0237 54       		.byte	0x54
 4226 0238 66000000 		.4byte	.LVL69
 4227 023c 68000000 		.4byte	.LVL70
 4228 0240 0100     		.2byte	0x1
 4229 0242 51       		.byte	0x51
 4230 0243 80000000 		.4byte	.LVL73
 4231 0247 84000000 		.4byte	.LVL74
 4232 024b 0200     		.2byte	0x2
 4233 024d 30       		.byte	0x30
 4234 024e 9F       		.byte	0x9f
 4235 024f 84000000 		.4byte	.LVL74
 4236 0253 EC000000 		.4byte	.LFE9
 4237 0257 0100     		.2byte	0x1
 4238 0259 51       		.byte	0x51
 4239 025a 00000000 		.4byte	0
 4240 025e 00000000 		.4byte	0
 4241              	.LLST13:
 4242 0262 0C000000 		.4byte	.LVL58
 4243 0266 66000000 		.4byte	.LVL69
 4244 026a 0300     		.2byte	0x3
 4245 026c 08       		.byte	0x8
 4246 026d 40       		.byte	0x40
 4247 026e 9F       		.byte	0x9f
 4248 026f 66000000 		.4byte	.LVL69
 4249 0273 68000000 		.4byte	.LVL70
 4250 0277 0100     		.2byte	0x1
 4251 0279 54       		.byte	0x54
 4252 027a 68000000 		.4byte	.LVL70
 4253 027e CA000000 		.4byte	.LVL76
 4254 0282 0100     		.2byte	0x1
 4255 0284 57       		.byte	0x57
 4256 0285 CA000000 		.4byte	.LVL76
 4257 0289 D4000000 		.4byte	.LVL78
 4258 028d 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 117


 4259 028f 54       		.byte	0x54
 4260 0290 00000000 		.4byte	0
 4261 0294 00000000 		.4byte	0
 4262              	.LLST14:
 4263 0298 0C000000 		.4byte	.LVL58
 4264 029c 66000000 		.4byte	.LVL69
 4265 02a0 0300     		.2byte	0x3
 4266 02a2 08       		.byte	0x8
 4267 02a3 20       		.byte	0x20
 4268 02a4 9F       		.byte	0x9f
 4269 02a5 66000000 		.4byte	.LVL69
 4270 02a9 68000000 		.4byte	.LVL70
 4271 02ad 0100     		.2byte	0x1
 4272 02af 53       		.byte	0x53
 4273 02b0 68000000 		.4byte	.LVL70
 4274 02b4 CE000000 		.4byte	.LVL77
 4275 02b8 0100     		.2byte	0x1
 4276 02ba 54       		.byte	0x54
 4277 02bb CE000000 		.4byte	.LVL77
 4278 02bf EC000000 		.4byte	.LFE9
 4279 02c3 0100     		.2byte	0x1
 4280 02c5 53       		.byte	0x53
 4281 02c6 00000000 		.4byte	0
 4282 02ca 00000000 		.4byte	0
 4283              	.LLST15:
 4284 02ce 00000000 		.4byte	.LVL81
 4285 02d2 16000000 		.4byte	.LVL85
 4286 02d6 0100     		.2byte	0x1
 4287 02d8 50       		.byte	0x50
 4288 02d9 16000000 		.4byte	.LVL85
 4289 02dd 20000000 		.4byte	.LFE11
 4290 02e1 0400     		.2byte	0x4
 4291 02e3 F3       		.byte	0xf3
 4292 02e4 01       		.uleb128 0x1
 4293 02e5 50       		.byte	0x50
 4294 02e6 9F       		.byte	0x9f
 4295 02e7 00000000 		.4byte	0
 4296 02eb 00000000 		.4byte	0
 4297              	.LLST16:
 4298 02ef 06000000 		.4byte	.LVL82
 4299 02f3 0E000000 		.4byte	.LVL83
 4300 02f7 0100     		.2byte	0x1
 4301 02f9 51       		.byte	0x51
 4302 02fa 0E000000 		.4byte	.LVL83
 4303 02fe 14000000 		.4byte	.LVL84
 4304 0302 0100     		.2byte	0x1
 4305 0304 53       		.byte	0x53
 4306 0305 14000000 		.4byte	.LVL84
 4307 0309 1C000000 		.4byte	.LVL86
 4308 030d 0100     		.2byte	0x1
 4309 030f 51       		.byte	0x51
 4310 0310 1C000000 		.4byte	.LVL86
 4311 0314 20000000 		.4byte	.LFE11
 4312 0318 0100     		.2byte	0x1
 4313 031a 53       		.byte	0x53
 4314 031b 00000000 		.4byte	0
 4315 031f 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 118


 4316              	.LLST17:
 4317 0323 00000000 		.4byte	.LVL87
 4318 0327 16000000 		.4byte	.LVL91
 4319 032b 0100     		.2byte	0x1
 4320 032d 50       		.byte	0x50
 4321 032e 16000000 		.4byte	.LVL91
 4322 0332 20000000 		.4byte	.LFE12
 4323 0336 0400     		.2byte	0x4
 4324 0338 F3       		.byte	0xf3
 4325 0339 01       		.uleb128 0x1
 4326 033a 50       		.byte	0x50
 4327 033b 9F       		.byte	0x9f
 4328 033c 00000000 		.4byte	0
 4329 0340 00000000 		.4byte	0
 4330              	.LLST18:
 4331 0344 06000000 		.4byte	.LVL88
 4332 0348 14000000 		.4byte	.LVL90
 4333 034c 0100     		.2byte	0x1
 4334 034e 53       		.byte	0x53
 4335 034f 14000000 		.4byte	.LVL90
 4336 0353 1C000000 		.4byte	.LVL92
 4337 0357 0100     		.2byte	0x1
 4338 0359 51       		.byte	0x51
 4339 035a 1C000000 		.4byte	.LVL92
 4340 035e 20000000 		.4byte	.LFE12
 4341 0362 0100     		.2byte	0x1
 4342 0364 53       		.byte	0x53
 4343 0365 00000000 		.4byte	0
 4344 0369 00000000 		.4byte	0
 4345              	.LLST19:
 4346 036d 06000000 		.4byte	.LVL101
 4347 0371 18000000 		.4byte	.LVL104
 4348 0375 0100     		.2byte	0x1
 4349 0377 53       		.byte	0x53
 4350 0378 1A000000 		.4byte	.LVL105
 4351 037c 20000000 		.4byte	.LVL106
 4352 0380 0100     		.2byte	0x1
 4353 0382 52       		.byte	0x52
 4354 0383 20000000 		.4byte	.LVL106
 4355 0387 2E000000 		.4byte	.LFE14
 4356 038b 0100     		.2byte	0x1
 4357 038d 53       		.byte	0x53
 4358 038e 00000000 		.4byte	0
 4359 0392 00000000 		.4byte	0
 4360              	.LLST20:
 4361 0396 00000000 		.4byte	.LVL123
 4362 039a 0C000000 		.4byte	.LVL124
 4363 039e 0100     		.2byte	0x1
 4364 03a0 50       		.byte	0x50
 4365 03a1 0C000000 		.4byte	.LVL124
 4366 03a5 24000000 		.4byte	.LVL128
 4367 03a9 0100     		.2byte	0x1
 4368 03ab 54       		.byte	0x54
 4369 03ac 24000000 		.4byte	.LVL128
 4370 03b0 6C000000 		.4byte	.LFE3
 4371 03b4 0400     		.2byte	0x4
 4372 03b6 F3       		.byte	0xf3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 119


 4373 03b7 01       		.uleb128 0x1
 4374 03b8 50       		.byte	0x50
 4375 03b9 9F       		.byte	0x9f
 4376 03ba 00000000 		.4byte	0
 4377 03be 00000000 		.4byte	0
 4378              	.LLST21:
 4379 03c2 20000000 		.4byte	.LVL127
 4380 03c6 4C000000 		.4byte	.LVL138
 4381 03ca 0100     		.2byte	0x1
 4382 03cc 56       		.byte	0x56
 4383 03cd 00000000 		.4byte	0
 4384 03d1 00000000 		.4byte	0
 4385              	.LLST22:
 4386 03d5 36000000 		.4byte	.LVL130
 4387 03d9 3E000000 		.4byte	.LVL134
 4388 03dd 0100     		.2byte	0x1
 4389 03df 53       		.byte	0x53
 4390 03e0 3E000000 		.4byte	.LVL134
 4391 03e4 40000000 		.4byte	.LVL135
 4392 03e8 0800     		.2byte	0x8
 4393 03ea 76       		.byte	0x76
 4394 03eb 09       		.sleb128 9
 4395 03ec 94       		.byte	0x94
 4396 03ed 01       		.byte	0x1
 4397 03ee 08       		.byte	0x8
 4398 03ef FF       		.byte	0xff
 4399 03f0 1A       		.byte	0x1a
 4400 03f1 9F       		.byte	0x9f
 4401 03f2 40000000 		.4byte	.LVL135
 4402 03f6 4C000000 		.4byte	.LVL137
 4403 03fa 0100     		.2byte	0x1
 4404 03fc 54       		.byte	0x54
 4405 03fd 00000000 		.4byte	0
 4406 0401 00000000 		.4byte	0
 4407              	.LLST23:
 4408 0405 24000000 		.4byte	.LVL128
 4409 0409 38000000 		.4byte	.LVL131
 4410 040d 0100     		.2byte	0x1
 4411 040f 54       		.byte	0x54
 4412 0410 38000000 		.4byte	.LVL131
 4413 0414 3A000000 		.4byte	.LVL132
 4414 0418 0300     		.2byte	0x3
 4415 041a 74       		.byte	0x74
 4416 041b 01       		.sleb128 1
 4417 041c 9F       		.byte	0x9f
 4418 041d 3C000000 		.4byte	.LVL133
 4419 0421 40000000 		.4byte	.LVL135
 4420 0425 0100     		.2byte	0x1
 4421 0427 54       		.byte	0x54
 4422 0428 00000000 		.4byte	0
 4423 042c 00000000 		.4byte	0
 4424              	.LLST24:
 4425 0430 00000000 		.4byte	.LVL139
 4426 0434 07000000 		.4byte	.LVL140-1
 4427 0438 0100     		.2byte	0x1
 4428 043a 50       		.byte	0x50
 4429 043b 07000000 		.4byte	.LVL140-1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 120


 4430 043f 84000000 		.4byte	.LFE4
 4431 0443 0400     		.2byte	0x4
 4432 0445 F3       		.byte	0xf3
 4433 0446 01       		.uleb128 0x1
 4434 0447 50       		.byte	0x50
 4435 0448 9F       		.byte	0x9f
 4436 0449 00000000 		.4byte	0
 4437 044d 00000000 		.4byte	0
 4438              	.LLST25:
 4439 0451 00000000 		.4byte	.LVL139
 4440 0455 07000000 		.4byte	.LVL140-1
 4441 0459 0100     		.2byte	0x1
 4442 045b 51       		.byte	0x51
 4443 045c 07000000 		.4byte	.LVL140-1
 4444 0460 3A000000 		.4byte	.LVL145
 4445 0464 0100     		.2byte	0x1
 4446 0466 54       		.byte	0x54
 4447 0467 3A000000 		.4byte	.LVL145
 4448 046b 84000000 		.4byte	.LFE4
 4449 046f 0400     		.2byte	0x4
 4450 0471 F3       		.byte	0xf3
 4451 0472 01       		.uleb128 0x1
 4452 0473 51       		.byte	0x51
 4453 0474 9F       		.byte	0x9f
 4454 0475 00000000 		.4byte	0
 4455 0479 00000000 		.4byte	0
 4456              	.LLST26:
 4457 047d 36000000 		.4byte	.LVL144
 4458 0481 4A000000 		.4byte	.LVL146
 4459 0485 0100     		.2byte	0x1
 4460 0487 51       		.byte	0x51
 4461 0488 00000000 		.4byte	0
 4462 048c 00000000 		.4byte	0
 4463              	.LLST27:
 4464 0490 2E000000 		.4byte	.LVL142
 4465 0494 32000000 		.4byte	.LVL143
 4466 0498 0100     		.2byte	0x1
 4467 049a 50       		.byte	0x50
 4468 049b 32000000 		.4byte	.LVL143
 4469 049f 68000000 		.4byte	.LVL149
 4470 04a3 0100     		.2byte	0x1
 4471 04a5 56       		.byte	0x56
 4472 04a6 00000000 		.4byte	0
 4473 04aa 00000000 		.4byte	0
 4474              	.LLST28:
 4475 04ae 00000000 		.4byte	.LVL150
 4476 04b2 04000000 		.4byte	.LVL151
 4477 04b6 0100     		.2byte	0x1
 4478 04b8 50       		.byte	0x50
 4479 04b9 04000000 		.4byte	.LVL151
 4480 04bd 0C000000 		.4byte	.LFE15
 4481 04c1 0400     		.2byte	0x4
 4482 04c3 F3       		.byte	0xf3
 4483 04c4 01       		.uleb128 0x1
 4484 04c5 50       		.byte	0x50
 4485 04c6 9F       		.byte	0x9f
 4486 04c7 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 121


 4487 04cb 00000000 		.4byte	0
 4488              		.section	.debug_aranges,"",%progbits
 4489 0000 9C000000 		.4byte	0x9c
 4490 0004 0200     		.2byte	0x2
 4491 0006 00000000 		.4byte	.Ldebug_info0
 4492 000a 04       		.byte	0x4
 4493 000b 00       		.byte	0
 4494 000c 0000     		.2byte	0
 4495 000e 0000     		.2byte	0
 4496 0010 00000000 		.4byte	.LFB16
 4497 0014 14000000 		.4byte	.LFE16-.LFB16
 4498 0018 00000000 		.4byte	.LFB10
 4499 001c 3C010000 		.4byte	.LFE10-.LFB10
 4500 0020 00000000 		.4byte	.LFB8
 4501 0024 5C000000 		.4byte	.LFE8-.LFB8
 4502 0028 00000000 		.4byte	.LFB17
 4503 002c 90000000 		.4byte	.LFE17-.LFB17
 4504 0030 00000000 		.4byte	.LFB1
 4505 0034 E0010000 		.4byte	.LFE1-.LFB1
 4506 0038 00000000 		.4byte	.LFB6
 4507 003c 28000000 		.4byte	.LFE6-.LFB6
 4508 0040 00000000 		.4byte	.LFB9
 4509 0044 EC000000 		.4byte	.LFE9-.LFB9
 4510 0048 00000000 		.4byte	.LFB11
 4511 004c 20000000 		.4byte	.LFE11-.LFB11
 4512 0050 00000000 		.4byte	.LFB12
 4513 0054 20000000 		.4byte	.LFE12-.LFB12
 4514 0058 00000000 		.4byte	.LFB5
 4515 005c 74000000 		.4byte	.LFE5-.LFB5
 4516 0060 00000000 		.4byte	.LFB13
 4517 0064 0C000000 		.4byte	.LFE13-.LFB13
 4518 0068 00000000 		.4byte	.LFB14
 4519 006c 2E000000 		.4byte	.LFE14-.LFB14
 4520 0070 00000000 		.4byte	.LFB7
 4521 0074 00010000 		.4byte	.LFE7-.LFB7
 4522 0078 00000000 		.4byte	.LFB2
 4523 007c 24000000 		.4byte	.LFE2-.LFB2
 4524 0080 00000000 		.4byte	.LFB3
 4525 0084 6C000000 		.4byte	.LFE3-.LFB3
 4526 0088 00000000 		.4byte	.LFB4
 4527 008c 84000000 		.4byte	.LFE4-.LFB4
 4528 0090 00000000 		.4byte	.LFB15
 4529 0094 0C000000 		.4byte	.LFE15-.LFB15
 4530 0098 00000000 		.4byte	0
 4531 009c 00000000 		.4byte	0
 4532              		.section	.debug_ranges,"",%progbits
 4533              	.Ldebug_ranges0:
 4534 0000 00000000 		.4byte	.LFB16
 4535 0004 14000000 		.4byte	.LFE16
 4536 0008 00000000 		.4byte	.LFB10
 4537 000c 3C010000 		.4byte	.LFE10
 4538 0010 00000000 		.4byte	.LFB8
 4539 0014 5C000000 		.4byte	.LFE8
 4540 0018 00000000 		.4byte	.LFB17
 4541 001c 90000000 		.4byte	.LFE17
 4542 0020 00000000 		.4byte	.LFB1
 4543 0024 E0010000 		.4byte	.LFE1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 122


 4544 0028 00000000 		.4byte	.LFB6
 4545 002c 28000000 		.4byte	.LFE6
 4546 0030 00000000 		.4byte	.LFB9
 4547 0034 EC000000 		.4byte	.LFE9
 4548 0038 00000000 		.4byte	.LFB11
 4549 003c 20000000 		.4byte	.LFE11
 4550 0040 00000000 		.4byte	.LFB12
 4551 0044 20000000 		.4byte	.LFE12
 4552 0048 00000000 		.4byte	.LFB5
 4553 004c 74000000 		.4byte	.LFE5
 4554 0050 00000000 		.4byte	.LFB13
 4555 0054 0C000000 		.4byte	.LFE13
 4556 0058 00000000 		.4byte	.LFB14
 4557 005c 2E000000 		.4byte	.LFE14
 4558 0060 00000000 		.4byte	.LFB7
 4559 0064 00010000 		.4byte	.LFE7
 4560 0068 00000000 		.4byte	.LFB2
 4561 006c 24000000 		.4byte	.LFE2
 4562 0070 00000000 		.4byte	.LFB3
 4563 0074 6C000000 		.4byte	.LFE3
 4564 0078 00000000 		.4byte	.LFB4
 4565 007c 84000000 		.4byte	.LFE4
 4566 0080 00000000 		.4byte	.LFB15
 4567 0084 0C000000 		.4byte	.LFE15
 4568 0088 00000000 		.4byte	0
 4569 008c 00000000 		.4byte	0
 4570              		.section	.debug_line,"",%progbits
 4571              	.Ldebug_line0:
 4572 0000 63030000 		.section	.debug_str,"MS",%progbits,1
 4572      0200B000 
 4572      00000201 
 4572      FB0E0D00 
 4572      01010101 
 4573              	.LASF150:
 4574 0000 43617053 		.ascii	"CapSense_1_BistDischargeExtCapacitors\000"
 4574      656E7365 
 4574      5F315F42 
 4574      69737444 
 4574      69736368 
 4575              	.LASF88:
 4576 0026 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 4576      656E7365 
 4576      5F315F46 
 4576      4C415348 
 4576      5F57445F 
 4577              	.LASF141:
 4578 0041 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
 4578      656E7365 
 4578      5F315F72 
 4578      65717565 
 4578      73745363 
 4579              	.LASF118:
 4580 0061 43617053 		.ascii	"CapSense_1_CSXDisconnectRx\000"
 4580      656E7365 
 4580      5F315F43 
 4580      53584469 
 4580      73636F6E 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 123


 4581              	.LASF142:
 4582 007c 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 4582      656E7365 
 4582      5F315F63 
 4582      75725261 
 4582      6D536E73 
 4583              	.LASF63:
 4584 0094 736E7254 		.ascii	"snrTestWidgetId\000"
 4584      65737457 
 4584      69646765 
 4584      74496400 
 4585              	.LASF133:
 4586 00a4 43617053 		.ascii	"CapSense_1_eleCsxDisconnectFlag\000"
 4586      656E7365 
 4586      5F315F65 
 4586      6C654373 
 4586      78446973 
 4587              	.LASF8:
 4588 00c4 756E7369 		.ascii	"unsigned int\000"
 4588      676E6564 
 4588      20696E74 
 4588      00
 4589              	.LASF153:
 4590 00d1 43617053 		.ascii	"CapSense_1_SsSetIOsInDefaultState\000"
 4590      656E7365 
 4590      5F315F53 
 4590      73536574 
 4590      494F7349 
 4591              	.LASF110:
 4592 00f3 6E657874 		.ascii	"nextIdacMask\000"
 4592      49646163 
 4592      4D61736B 
 4592      00
 4593              	.LASF53:
 4594 0100 7363616E 		.ascii	"scanCounter\000"
 4594      436F756E 
 4594      74657200 
 4595              	.LASF51:
 4596 010c 6877436C 		.ascii	"hwClock\000"
 4596      6F636B00 
 4597              	.LASF113:
 4598 0114 72656756 		.ascii	"regValue\000"
 4598      616C7565 
 4598      00
 4599              	.LASF164:
 4600 011d 43617053 		.ascii	"CapSense_1_SsCSXStartSampleExt\000"
 4600      656E7365 
 4600      5F315F53 
 4600      73435358 
 4600      53746172 
 4601              	.LASF100:
 4602 013c 696E7465 		.ascii	"interruptState\000"
 4602      72727570 
 4602      74537461 
 4602      746500
 4603              	.LASF127:
 4604 014b 7278496E 		.ascii	"rxIndex\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 124


 4604      64657800 
 4605              	.LASF119:
 4606 0153 43617053 		.ascii	"CapSense_1_SsCSXPostMultiScan\000"
 4606      656E7365 
 4606      5F315F53 
 4606      73435358 
 4606      506F7374 
 4607              	.LASF120:
 4608 0171 43617053 		.ascii	"CapSense_1_CSXElectrodeCheck\000"
 4608      656E7365 
 4608      5F315F43 
 4608      5358456C 
 4608      65637472 
 4609              	.LASF146:
 4610 018e 4379496E 		.ascii	"CyIntDisable\000"
 4610      74446973 
 4610      61626C65 
 4610      00
 4611              	.LASF143:
 4612 019b 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 4612      656E7365 
 4612      5F315F73 
 4612      63616E46 
 4612      72657149 
 4613              	.LASF117:
 4614 01b4 43617053 		.ascii	"CapSense_1_CSXDisconnectTx\000"
 4614      656E7365 
 4614      5F315F43 
 4614      53584469 
 4614      73636F6E 
 4615              	.LASF41:
 4616 01cf 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 4616      656E7365 
 4616      5F315F52 
 4616      414D5F57 
 4616      445F4C49 
 4617              	.LASF112:
 4618 01ed 74785074 		.ascii	"txPtr\000"
 4618      7200
 4619              	.LASF125:
 4620 01f3 73656E73 		.ascii	"sensorId\000"
 4620      6F724964 
 4620      00
 4621              	.LASF109:
 4622 01fc 63757249 		.ascii	"curIdacMask\000"
 4622      6461634D 
 4622      61736B00 
 4623              	.LASF131:
 4624 0208 43617053 		.ascii	"CapSense_1_curWdgtTotalRx\000"
 4624      656E7365 
 4624      5F315F63 
 4624      75725764 
 4624      6774546F 
 4625              	.LASF12:
 4626 0222 666C6F61 		.ascii	"float\000"
 4626      7400
 4627              	.LASF76:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 125


 4628 0228 73686966 		.ascii	"shift\000"
 4628      7400
 4629              	.LASF162:
 4630 022e 433A5C55 		.ascii	"C:\\Users\\michael.machate\\Desktop\\Cypress_Firstt"
 4630      73657273 
 4630      5C6D6963 
 4630      6861656C 
 4630      2E6D6163 
 4631 025d 65737473 		.ascii	"ests\\FirstTestMutal.cydsn\000"
 4631      5C466972 
 4631      73745465 
 4631      73744D75 
 4631      74616C2E 
 4632              	.LASF160:
 4633 0277 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4633      43313120 
 4633      352E342E 
 4633      31203230 
 4633      31363036 
 4634 02aa 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4634      20726576 
 4634      6973696F 
 4634      6E203233 
 4634      37373135 
 4635 02dd 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4635      67202D66 
 4635      66756E63 
 4635      74696F6E 
 4635      2D736563 
 4636              	.LASF92:
 4637 0309 77617463 		.ascii	"watchdogCounter\000"
 4637      68646F67 
 4637      436F756E 
 4637      74657200 
 4638              	.LASF126:
 4639 0319 7478496E 		.ascii	"txIndex\000"
 4639      64657800 
 4640              	.LASF156:
 4641 0321 43617053 		.ascii	"CapSense_1_SetupWidget\000"
 4641      656E7365 
 4641      5F315F53 
 4641      65747570 
 4641      57696467 
 4642              	.LASF155:
 4643 0338 43794465 		.ascii	"CyDelayUs\000"
 4643      6C617955 
 4643      7300
 4644              	.LASF62:
 4645 0342 736E734C 		.ascii	"snsList\000"
 4645      69737400 
 4646              	.LASF7:
 4647 034a 6C6F6E67 		.ascii	"long long unsigned int\000"
 4647      206C6F6E 
 4647      6720756E 
 4647      7369676E 
 4647      65642069 
 4648              	.LASF114:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 126


 4649 0361 43617053 		.ascii	"CapSense_1_CSXConnectRx\000"
 4649      656E7365 
 4649      5F315F43 
 4649      5358436F 
 4649      6E6E6563 
 4650              	.LASF64:
 4651 0379 736E7254 		.ascii	"snrTestSensorId\000"
 4651      65737453 
 4651      656E736F 
 4651      72496400 
 4652              	.LASF85:
 4653 0389 77646774 		.ascii	"wdgtType\000"
 4653      54797065 
 4653      00
 4654              	.LASF99:
 4655 0392 43617053 		.ascii	"CapSense_1_CSXInitialize\000"
 4655      656E7365 
 4655      5F315F43 
 4655      5358496E 
 4655      69746961 
 4656              	.LASF19:
 4657 03ab 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 4657      656E7365 
 4657      5F315F4C 
 4657      4F575F42 
 4657      534C4E5F 
 4658              	.LASF123:
 4659 03c8 736E7343 		.ascii	"snsClkVal\000"
 4659      6C6B5661 
 4659      6C00
 4660              	.LASF105:
 4661 03d2 74617267 		.ascii	"target\000"
 4661      657400
 4662              	.LASF70:
 4663 03d9 64725074 		.ascii	"drPtr\000"
 4663      7200
 4664              	.LASF154:
 4665 03df 43617053 		.ascii	"CapSense_1_SsIsrInitialize\000"
 4665      656E7365 
 4665      5F315F53 
 4665      73497372 
 4665      496E6974 
 4666              	.LASF132:
 4667 03fa 43617053 		.ascii	"CapSense_1_curWdgtTotalTx\000"
 4667      656E7365 
 4667      5F315F63 
 4667      75725764 
 4667      6774546F 
 4668              	.LASF23:
 4669 0414 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 4669      656E7365 
 4669      5F315F53 
 4669      454E5345 
 4669      5F4D4554 
 4670              	.LASF31:
 4671 0433 6C6F7742 		.ascii	"lowBslnRst\000"
 4671      736C6E52 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 127


 4671      737400
 4672              	.LASF139:
 4673 043e 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 4673      656E7365 
 4673      5F315F77 
 4673      69646765 
 4673      74496E64 
 4674              	.LASF159:
 4675 0455 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 4675      656E7365 
 4675      5F315F53 
 4675      73537769 
 4675      74636853 
 4676              	.LASF151:
 4677 0474 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 4677      656E7365 
 4677      5F315F53 
 4677      73536574 
 4677      4D6F6443 
 4678              	.LASF84:
 4679 0497 746F7461 		.ascii	"totalNumSns\000"
 4679      6C4E756D 
 4679      536E7300 
 4680              	.LASF111:
 4681 04a3 43617053 		.ascii	"CapSense_1_CSXConnectTx\000"
 4681      656E7365 
 4681      5F315F43 
 4681      5358436F 
 4681      6E6E6563 
 4682              	.LASF130:
 4683 04bb 43617053 		.ascii	"CapSense_1_curRxIOPtr\000"
 4683      656E7365 
 4683      5F315F63 
 4683      75725278 
 4683      494F5074 
 4684              	.LASF107:
 4685 04d1 746F7461 		.ascii	"totalSns\000"
 4685      6C536E73 
 4685      00
 4686              	.LASF27:
 4687 04da 6E6F6973 		.ascii	"noiseTh\000"
 4687      65546800 
 4688              	.LASF14:
 4689 04e2 63686172 		.ascii	"char\000"
 4689      00
 4690              	.LASF149:
 4691 04e7 43794578 		.ascii	"CyExitCriticalSection\000"
 4691      69744372 
 4691      69746963 
 4691      616C5365 
 4691      6374696F 
 4692              	.LASF129:
 4693 04fd 43617053 		.ascii	"CapSense_1_curTxIOPtr\000"
 4693      656E7365 
 4693      5F315F63 
 4693      75725478 
 4693      494F5074 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 128


 4694              	.LASF74:
 4695 0513 6873696F 		.ascii	"hsiomShift\000"
 4695      6D536869 
 4695      667400
 4696              	.LASF10:
 4697 051e 75696E74 		.ascii	"uint16\000"
 4697      313600
 4698              	.LASF25:
 4699 0525 7265736F 		.ascii	"resolution\000"
 4699      6C757469 
 4699      6F6E00
 4700              	.LASF67:
 4701 0530 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 4701      656E7365 
 4701      5F315F52 
 4701      414D5F53 
 4701      54525543 
 4702              	.LASF54:
 4703 0546 73746174 		.ascii	"status\000"
 4703      757300
 4704              	.LASF91:
 4705 054d 66696C74 		.ascii	"filterDelay\000"
 4705      65724465 
 4705      6C617900 
 4706              	.LASF46:
 4707 0559 69646163 		.ascii	"idacComp\000"
 4707      436F6D70 
 4707      00
 4708              	.LASF161:
 4709 0562 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_SensingCSX_LL.c"
 4709      72617465 
 4709      645F536F 
 4709      75726365 
 4709      5C50536F 
 4710 0593 00       		.ascii	"\000"
 4711              	.LASF69:
 4712 0594 70635074 		.ascii	"pcPtr\000"
 4712      7200
 4713              	.LASF6:
 4714 059a 6C6F6E67 		.ascii	"long long int\000"
 4714      206C6F6E 
 4714      6720696E 
 4714      7400
 4715              	.LASF18:
 4716 05a8 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 4716      656E7365 
 4716      5F315F54 
 4716      48524553 
 4716      484F4C44 
 4717              	.LASF30:
 4718 05c2 6F6E4465 		.ascii	"onDebounce\000"
 4718      626F756E 
 4718      636500
 4719              	.LASF152:
 4720 05cd 43617053 		.ascii	"CapSense_1_SsSetSnsClockDivider\000"
 4720      656E7365 
 4720      5F315F53 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 129


 4720      73536574 
 4720      536E7343 
 4721              	.LASF61:
 4722 05ed 77646774 		.ascii	"wdgtList\000"
 4722      4C697374 
 4722      00
 4723              	.LASF78:
 4724 05f6 70747232 		.ascii	"ptr2SnsFlash\000"
 4724      536E7346 
 4724      6C617368 
 4724      00
 4725              	.LASF66:
 4726 0603 736E7254 		.ascii	"snrTestRawCount\000"
 4726      65737452 
 4726      6177436F 
 4726      756E7400 
 4727              	.LASF28:
 4728 0613 6E4E6F69 		.ascii	"nNoiseTh\000"
 4728      73655468 
 4728      00
 4729              	.LASF60:
 4730 061c 736E7343 		.ascii	"snsCsxClk\000"
 4730      7378436C 
 4730      6B00
 4731              	.LASF58:
 4732 0626 63736430 		.ascii	"csd0Config\000"
 4732      436F6E66 
 4732      696700
 4733              	.LASF33:
 4734 0631 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 4734      656E7365 
 4734      5F315F52 
 4734      414D5F57 
 4734      445F4241 
 4735              	.LASF68:
 4736 064f 6873696F 		.ascii	"hsiomPtr\000"
 4736      6D507472 
 4736      00
 4737              	.LASF11:
 4738 0658 75696E74 		.ascii	"uint32\000"
 4738      333200
 4739              	.LASF29:
 4740 065f 68797374 		.ascii	"hysteresis\000"
 4740      65726573 
 4740      697300
 4741              	.LASF81:
 4742 066a 70747232 		.ascii	"ptr2FltrHistory\000"
 4742      466C7472 
 4742      48697374 
 4742      6F727900 
 4743              	.LASF20:
 4744 067a 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 4744      656E7365 
 4744      5F315F55 
 4744      4E444546 
 4744      494E4544 
 4745              	.LASF48:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 130


 4746 0691 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 4746      656E7365 
 4746      5F315F52 
 4746      414D5F53 
 4746      4E535F4C 
 4747              	.LASF73:
 4748 06b0 6D61736B 		.ascii	"mask\000"
 4748      00
 4749              	.LASF145:
 4750 06b5 43617053 		.ascii	"CapSense_1_SsChangeImoFreq\000"
 4750      656E7365 
 4750      5F315F53 
 4750      73436861 
 4750      6E676549 
 4751              	.LASF102:
 4752 06d0 43617053 		.ascii	"CapSense_1_CSXCalibrateWidget\000"
 4752      656E7365 
 4752      5F315F43 
 4752      53584361 
 4752      6C696272 
 4753              	.LASF93:
 4754 06ee 73616D70 		.ascii	"sampleClkFreqHz\000"
 4754      6C65436C 
 4754      6B467265 
 4754      71487A00 
 4755              	.LASF97:
 4756 06fe 43617053 		.ascii	"CapSense_1_SsCSXPostSingleScan\000"
 4756      656E7365 
 4756      5F315F53 
 4756      73435358 
 4756      506F7374 
 4757              	.LASF134:
 4758 071d 43617053 		.ascii	"CapSense_1_dsRam\000"
 4758      656E7365 
 4758      5F315F64 
 4758      7352616D 
 4758      00
 4759              	.LASF157:
 4760 072e 43617053 		.ascii	"CapSense_1_Scan\000"
 4760      656E7365 
 4760      5F315F53 
 4760      63616E00 
 4761              	.LASF16:
 4762 073e 6C6F6E67 		.ascii	"long double\000"
 4762      20646F75 
 4762      626C6500 
 4763              	.LASF15:
 4764 074a 72656733 		.ascii	"reg32\000"
 4764      3200
 4765              	.LASF65:
 4766 0750 736E7254 		.ascii	"snrTestScanCounter\000"
 4766      65737453 
 4766      63616E43 
 4766      6F756E74 
 4766      657200
 4767              	.LASF49:
 4768 0763 636F6E66 		.ascii	"configId\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 131


 4768      69674964 
 4768      00
 4769              	.LASF80:
 4770 076c 70747232 		.ascii	"ptr2SnsRam\000"
 4770      536E7352 
 4770      616D00
 4771              	.LASF90:
 4772 0777 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 4772      656E7365 
 4772      5F315F46 
 4772      4C415348 
 4772      5F535452 
 4773              	.LASF57:
 4774 078f 736E7353 		.ascii	"snsStatus\000"
 4774      74617475 
 4774      7300
 4775              	.LASF32:
 4776 0799 736E7343 		.ascii	"snsClkSource\000"
 4776      6C6B536F 
 4776      75726365 
 4776      00
 4777              	.LASF21:
 4778 07a6 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 4778      656E7365 
 4778      5F315F53 
 4778      454E5345 
 4778      5F4D4554 
 4779              	.LASF2:
 4780 07c4 73686F72 		.ascii	"short int\000"
 4780      7420696E 
 4780      7400
 4781              	.LASF144:
 4782 07ce 43617053 		.ascii	"CapSense_1_curFlashWdgtPtr\000"
 4782      656E7365 
 4782      5F315F63 
 4782      7572466C 
 4782      61736857 
 4783              	.LASF4:
 4784 07e9 6C6F6E67 		.ascii	"long int\000"
 4784      20696E74 
 4784      00
 4785              	.LASF55:
 4786 07f2 77646774 		.ascii	"wdgtEnable\000"
 4786      456E6162 
 4786      6C6500
 4787              	.LASF135:
 4788 07fd 43617053 		.ascii	"CapSense_1_dsFlash\000"
 4788      656E7365 
 4788      5F315F64 
 4788      73466C61 
 4788      736800
 4789              	.LASF96:
 4790 0810 43617053 		.ascii	"CapSense_1_SsCSXStartSample\000"
 4790      656E7365 
 4790      5F315F53 
 4790      73435358 
 4790      53746172 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 132


 4791              	.LASF44:
 4792 082c 64696666 		.ascii	"diff\000"
 4792      00
 4793              	.LASF52:
 4794 0831 74756E65 		.ascii	"tunerCmd\000"
 4794      72436D64 
 4794      00
 4795              	.LASF94:
 4796 083a 74656D70 		.ascii	"temp\000"
 4796      00
 4797              	.LASF165:
 4798 083f 43617053 		.ascii	"CapSense_1_SsCSXGetTxClkDivider\000"
 4798      656E7365 
 4798      5F315F53 
 4798      73435358 
 4798      47657454 
 4799              	.LASF71:
 4800 085f 70735074 		.ascii	"psPtr\000"
 4800      7200
 4801              	.LASF22:
 4802 0865 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 4802      656E7365 
 4802      5F315F53 
 4802      454E5345 
 4802      5F4D4554 
 4803              	.LASF106:
 4804 0883 72617754 		.ascii	"rawTarget\000"
 4804      61726765 
 4804      7400
 4805              	.LASF35:
 4806 088d 62757474 		.ascii	"button0\000"
 4806      6F6E3000 
 4807              	.LASF36:
 4808 0895 62757474 		.ascii	"button1\000"
 4808      6F6E3100 
 4809              	.LASF37:
 4810 089d 62757474 		.ascii	"button2\000"
 4810      6F6E3200 
 4811              	.LASF38:
 4812 08a5 62757474 		.ascii	"button3\000"
 4812      6F6E3300 
 4813              	.LASF39:
 4814 08ad 62757474 		.ascii	"button4\000"
 4814      6F6E3400 
 4815              	.LASF40:
 4816 08b5 62757474 		.ascii	"button5\000"
 4816      6F6E3500 
 4817              	.LASF86:
 4818 08bd 6E756D43 		.ascii	"numCols\000"
 4818      6F6C7300 
 4819              	.LASF56:
 4820 08c5 77646774 		.ascii	"wdgtStatus\000"
 4820      53746174 
 4820      757300
 4821              	.LASF140:
 4822 08d0 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 4822      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 133


 4822      5F315F73 
 4822      656E736F 
 4822      72496E64 
 4823              	.LASF121:
 4824 08e7 43617053 		.ascii	"CapSense_1_CSXSetupWidget\000"
 4824      656E7365 
 4824      5F315F43 
 4824      53585365 
 4824      74757057 
 4825              	.LASF17:
 4826 0901 73697A65 		.ascii	"sizetype\000"
 4826      74797065 
 4826      00
 4827              	.LASF75:
 4828 090a 64725368 		.ascii	"drShift\000"
 4828      69667400 
 4829              	.LASF5:
 4830 0912 6C6F6E67 		.ascii	"long unsigned int\000"
 4830      20756E73 
 4830      69676E65 
 4830      6420696E 
 4830      7400
 4831              	.LASF128:
 4832 0924 72657456 		.ascii	"retVal\000"
 4832      616C00
 4833              	.LASF115:
 4834 092b 72785074 		.ascii	"rxPtr\000"
 4834      7200
 4835              	.LASF82:
 4836 0931 70747232 		.ascii	"ptr2DebounceArr\000"
 4836      4465626F 
 4836      756E6365 
 4836      41727200 
 4837              	.LASF26:
 4838 0941 66696E67 		.ascii	"fingerTh\000"
 4838      65725468 
 4838      00
 4839              	.LASF43:
 4840 094a 62736C6E 		.ascii	"bslnExt\000"
 4840      45787400 
 4841              	.LASF101:
 4842 0952 43617053 		.ascii	"CapSense_1_CSXScanExt\000"
 4842      656E7365 
 4842      5F315F43 
 4842      53585363 
 4842      616E4578 
 4843              	.LASF1:
 4844 0968 756E7369 		.ascii	"unsigned char\000"
 4844      676E6564 
 4844      20636861 
 4844      7200
 4845              	.LASF103:
 4846 0976 77646774 		.ascii	"wdgtPtr\000"
 4846      50747200 
 4847              	.LASF136:
 4848 097e 43617053 		.ascii	"CapSense_1_csxScanPeriod\000"
 4848      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 134


 4848      5F315F63 
 4848      73785363 
 4848      616E5065 
 4849              	.LASF108:
 4850 0997 63616C69 		.ascii	"calibrationIndex\000"
 4850      62726174 
 4850      696F6E49 
 4850      6E646578 
 4850      00
 4851              	.LASF83:
 4852 09a8 73746174 		.ascii	"staticConfig\000"
 4852      6963436F 
 4852      6E666967 
 4852      00
 4853              	.LASF59:
 4854 09b5 6D6F6443 		.ascii	"modCsxClk\000"
 4854      7378436C 
 4854      6B00
 4855              	.LASF79:
 4856 09bf 70747232 		.ascii	"ptr2WdgtRam\000"
 4856      57646774 
 4856      52616D00 
 4857              	.LASF163:
 4858 09cb 43617053 		.ascii	"CapSense_1_SsCalcCsxScanPeriod\000"
 4858      656E7365 
 4858      5F315F53 
 4858      7343616C 
 4858      63437378 
 4859              	.LASF87:
 4860 09ea 6E756D52 		.ascii	"numRows\000"
 4860      6F777300 
 4861              	.LASF116:
 4862 09f2 43617053 		.ascii	"CapSense_1_CSXScan\000"
 4862      656E7365 
 4862      5F315F43 
 4862      53585363 
 4862      616E00
 4863              	.LASF72:
 4864 0a05 6873696F 		.ascii	"hsiomMask\000"
 4864      6D4D6173 
 4864      6B00
 4865              	.LASF147:
 4866 0a0f 4379496E 		.ascii	"CyIntEnable\000"
 4866      74456E61 
 4866      626C6500 
 4867              	.LASF95:
 4868 0a1b 746D7052 		.ascii	"tmpRegVal\000"
 4868      65675661 
 4868      6C00
 4869              	.LASF124:
 4870 0a25 43617053 		.ascii	"CapSense_1_CSXSetupWidgetExt\000"
 4870      656E7365 
 4870      5F315F43 
 4870      53585365 
 4870      74757057 
 4871              	.LASF138:
 4872 0a42 43617053 		.ascii	"CapSense_1_CSXPostScanApiPtr\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 135


 4872      656E7365 
 4872      5F315F43 
 4872      5358506F 
 4872      73745363 
 4873              	.LASF148:
 4874 0a5f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4874      74657243 
 4874      72697469 
 4874      63616C53 
 4874      65637469 
 4875              	.LASF0:
 4876 0a76 7369676E 		.ascii	"signed char\000"
 4876      65642063 
 4876      68617200 
 4877              	.LASF42:
 4878 0a82 62736C6E 		.ascii	"bsln\000"
 4878      00
 4879              	.LASF3:
 4880 0a87 73686F72 		.ascii	"short unsigned int\000"
 4880      7420756E 
 4880      7369676E 
 4880      65642069 
 4880      6E7400
 4881              	.LASF122:
 4882 0a9a 63757252 		.ascii	"curRamWdgtBasePtr\000"
 4882      616D5764 
 4882      67744261 
 4882      73655074 
 4882      7200
 4883              	.LASF77:
 4884 0aac 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 4884      656E7365 
 4884      5F315F46 
 4884      4C415348 
 4884      5F494F5F 
 4885              	.LASF137:
 4886 0ac7 43617053 		.ascii	"CapSense_1_csxRawCount\000"
 4886      656E7365 
 4886      5F315F63 
 4886      73785261 
 4886      77436F75 
 4887              	.LASF9:
 4888 0ade 75696E74 		.ascii	"uint8\000"
 4888      3800
 4889              	.LASF13:
 4890 0ae4 646F7562 		.ascii	"double\000"
 4890      6C6500
 4891              	.LASF45:
 4892 0aeb 6E656742 		.ascii	"negBslnRstCnt\000"
 4892      736C6E52 
 4892      7374436E 
 4892      7400
 4893              	.LASF47:
 4894 0af9 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 4894      656E7365 
 4894      5F315F52 
 4894      414D5F53 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccFQzfCQ.s 			page 136


 4894      4E535F53 
 4895              	.LASF24:
 4896 0b13 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 4896      656E7365 
 4896      5F315F53 
 4896      454E5345 
 4896      5F4D4554 
 4897              	.LASF98:
 4898 0b31 43617053 		.ascii	"CapSense_1_CSXScanISR\000"
 4898      656E7365 
 4898      5F315F43 
 4898      53585363 
 4898      616E4953 
 4899              	.LASF50:
 4900 0b47 64657669 		.ascii	"deviceId\000"
 4900      63654964 
 4900      00
 4901              	.LASF34:
 4902 0b50 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 4902      656E7365 
 4902      5F315F52 
 4902      414D5F57 
 4902      445F4255 
 4903              	.LASF104:
 4904 0b70 77696467 		.ascii	"widgetId\000"
 4904      65744964 
 4904      00
 4905              	.LASF158:
 4906 0b79 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 4906      656E7365 
 4906      5F315F53 
 4906      73506F73 
 4906      74416C6C 
 4907              	.LASF89:
 4908 0b99 77646774 		.ascii	"wdgtArray\000"
 4908      41727261 
 4908      7900
 4909              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
