ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_SensingCSX_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsCalcCsxScanPeriod,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsCalcCsxScanPeriod, %function
  24              	CapSense_1_SsCalcCsxScanPeriod:
  25              	.LFB16:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_SensingCSX_LL.c"
   1:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \file CapSense_1_SensingCSX_LL.c
   3:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \version 5.20
   4:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   implementation for the low-level APIs of the CSX part of
   8:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   initialization, calibration and scanning.
  10:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \see CapSense_1 v5.20 Datasheet
  12:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include <cytypes.h>
  42:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CyLib.h"
  43:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  44:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CapSense_1_Structure.h"
  45:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CapSense_1_Configuration.h"
  46:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CapSense_1_SensingCSX_LL.h"
  47:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "CapSense_1_Sensing.h"
  48:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #include "cyapicallbacks.h"
  49:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  50:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
  51:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
  53:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function constants
  54:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  56:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #define  CapSense_1_NUM_HALF_CYCLES                       (2u)
  57:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  58:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  59:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
  60:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Defines module variables
  61:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
  62:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  63:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Local variable used to store the Scan period */
  64:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** volatile uint16 CapSense_1_csxScanPeriod = 0u;
  65:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Local variable used to return raw count from the post scan ISR */
  66:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** volatile uint16 CapSense_1_csxRawCount = 0u;
  67:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  68:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(CapSense_1_ENABLE != CapSense_1_CSDV2)
  69:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     volatile uint32 CapSense_1_csxRawGarbage = 0u;
  70:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
  71:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  72:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Tx electrode that was connected previously */
  73:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curTxIOPtr;
  74:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Pointer to Flash structure to hold Rx electrode that was connected previously */
  75:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curRxIOPtr;
  76:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Local variable to hold total Tx in widget, while scanning all the sensors in widget */
  77:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_curWdgtTotalRx = 0u;
  78:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Local variable to hold total Rx in widget, while scanning all the sensors in widget */
  79:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_curWdgtTotalTx = 0u;
  80:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Flag to indicate that electrodes were connected previously */
  81:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_eleCsxDisconnectFlag = 0u;
  82:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Pointer to Flash structure holding info of sensor to be scanned */
  83:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
  84:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curGangRxPtr = 0u;
  85:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curGangTxPtr = 0u;
  86:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif
  87:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  88:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Module local function declarations
  90:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
  91:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /**
  92:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \cond SECTION_C_INTERNAL
  93:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \addtogroup group_c_internal
  94:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \{
  95:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** */
  96:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  97:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXStartSample(void);
  98:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostMultiScan(void);
  99:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostSingleScan(void);
 100:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_SsCalcCsxScanPeriod(CapSense_1_RAM_WD_BASE_STRUCT const *wdgtPtr);
 101:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 102:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
 103:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_INLINE static void CapSense_1_SsCSXStartSampleExt(void);
 104:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif
 105:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 106:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 107:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static uint32 CapSense_1_SsCSXOversample(void);
 108:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif
 109:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 110:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 111:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static void CapSense_1_SsCSXPostMultiScanGanged(void);
 112:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif
 113:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 114:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Pointer to Pointer to function used to register callback in ISR */
 115:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void (*CapSense_1_CSXPostScanApiPtr)(void) = &CapSense_1_SsCSXPostMultiScan;
 116:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /** \}
 117:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \endcond */
 118:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 119:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXInitialize
 121:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 122:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 123:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 124:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Performs hardware and firmware initialization required for the CSX operation
 125:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   of the CapSense_1 Component.
 126:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 127:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 128:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function initializes hardware to perform the CSX sensing operation. This
 129:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   function is called by the CapSense_1_Start() API during the Component
 130:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   initialization. If both CSX and CSD sensing methods are used in the Component,
 131:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   this function is called by the CapSense_1_SetupWidget() API to change hardware
 132:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   configured for CSD to re-initialize for the CSX sensing.
 133:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 134:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   If the CSD and CSX widgets are used in the Component, it is recommended not to
 135:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   mix the CSD widgets between the CSX widgets, instead, place all CSX widgets in
 136:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the required scanning order and then place the CSD widgets in the customizer.
 137:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   For the Component API, this action will eliminate the need for changing the hardware
 138:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   configuration for every widget scan and will increase the execution speed
 139:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   in the CapSense_1_ScanAllWidgets() when the API is called.
 140:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 141:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Similarly, it is recommended to set up and scan all the CSX widgets in such
 142:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   a sequence that the CapSense_1_SetupWidget() API  shouldn't need
 143:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   hardware  sensing-configuration change.
 144:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 145:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   It is highly not recommended to call this API directly from the application layer.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 147:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 148:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXInitialize(void)
 149:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 150:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
 151:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint8  interruptState;
 152:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 tmpRegVal;
 153:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 154:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_PTR,             CapSense_1_DEFAULT_CSD_INTR_CFG);
 155:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_SET_PTR,         CapSense_1_DEFAULT_CSD_INTR_SET_CFG);
 156:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_MASK_PTR,        CapSense_1_DEFAULT_CSD_INTR_MASK_CFG);
 157:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR,            CapSense_1_DEFAULT_CSD_HSCMP_CFG);
 158:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_AMBUF_PTR,            CapSense_1_DEFAULT_CSD_AMBUF_CFG);
 159:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_REFGEN_PTR,           CapSense_1_DEFAULT_CSD_REFGEN_CFG);
 160:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR,           CapSense_1_DEFAULT_CSD_CSDCMP_CFG);
 161:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_MOD_PTR,         CapSense_1_DEFAULT_CSD_IDACA_CFG);
 162:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 163:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if((0u != CapSense_1_ADC_EN) || (0u != CapSense_1_IDACB_USED))
 164:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_COMP_PTR,    CapSense_1_DEFAULT_CSD_IDACB_CFG);
 165:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (0u != CapSense_1_ADC_EN) || (0u != CapSense_1_IDACB_USED) */
 166:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 167:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR,           CapSense_1_DEFAULT_CSD_SW_RES_CFG);
 168:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR,     CapSense_1_DEFAULT_CSD_SENSE_PERIOD_CFG);
 169:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_DUTY_PTR,       CapSense_1_DEFAULT_CSD_SENSE_DUTY_CFG);
 170:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR,      CapSense_1_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 171:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR,      CapSense_1_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 172:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,    CapSense_1_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 173:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 174:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 175:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 176:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_SW_BYP_SEL_PTR);
 177:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~(CapSense_1_SW_BYP_SEL_SW_BYA_MASK);
 178:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= CapSense_1_DEFAULT_CSD_SW_BYP_SEL_CFG;
 179:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR,       tmpRegVal);
 180:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 181:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 182:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR,     CapSense_1_DEFAULT_CSD_SW_CMP_P_SEL_CFG);
 183:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_N_SEL_PTR,     CapSense_1_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 184:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 185:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 186:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 187:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_SW_REFGEN_SEL_SW_MASK;
 188:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= CapSense_1_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 189:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR,    tmpRegVal);
 190:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 191:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 192:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR,    CapSense_1_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 193:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 194:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR,       CapSense_1_DEFAULT_CSD_SW_DSI_SEL_CFG);
 195:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_TIME_PTR,         CapSense_1_DEFAULT_CSD_SEQ_TIME_CFG);
 196:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_INIT_CNT_PTR,     CapSense_1_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 197:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR,     CapSense_1_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 198:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_ADC_CTL_PTR,          CapSense_1_DEFAULT_CSD_ADC_CTL_CFG);
 199:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR,        CapSense_1_DEFAULT_CSD_SEQ_START_CFG);
 200:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR,           CapSense_1_DEFAULT_CSD_CONFIG_CFG);
 201:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 202:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_BistDischargeExtCapacitors();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 204:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 205:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintA_PC_PTR);
 206:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintA_SHIFT * CapSense_1_GPIO_PC_BIT
 207:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_PC_PTR, tmpRegVal);
 208:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 209:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 210:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 211:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintB_PC_PTR);
 212:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintB__SHIFT * CapSense_1_GPIO_PC_BI
 213:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_PC_PTR, tmpRegVal);
 214:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 215:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 216:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 217:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 218:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 219:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_CintA_HSIOM_MASK;
 220:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintA_HSIOM_SHIFT);
 221:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, tmpRegVal);
 222:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 223:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 224:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 225:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         interruptState = CyEnterCriticalSection();
 226:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 227:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_CintB_HSIOM_MASK;
 228:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintB_HSIOM_SHIFT);
 229:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, tmpRegVal);
 230:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 231:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 232:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsxClk);
 233:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 234:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
 235:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsSetSnsClockDivider((uint32)CapSense_1_dsRam.snsCsxClk);
 236:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 237:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 238:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set all IO states to default state */
 239:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetIOsInDefaultState();
 240:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 241:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
 242:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 trimValue;
 243:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 244:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set all IO states to default state */
 245:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetIOsInDefaultState();
 246:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 247:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 248:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             trimValue = CY_GET_REG32(CapSense_1_IDAC_PTR);
 249:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             trimValue &= ~(CapSense_1_IDAC_COMP_CFG_MASK | CapSense_1_IDAC_FEEDBACK_MODE_MASK);
 250:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, trimValue);
 251:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 252:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 253:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CintB to AMUXBUS-A using HSIOM registers. */
 254:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 255:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 256:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~CapSense_1_CintB_HSIOM_MASK;
 257:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintB_HSIOM_SHIFT);
 258:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, trimValue);
 259:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set drive mode of CintB pin to High-Z Analog state in PC register
 261:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             and set logic high on DR register. */
 262:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintB_PC_PTR);
 263:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintB__SHIFT * CapSense_1_GPIO_PC_BIT
 264:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_PC_PTR, trimValue);
 265:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 266:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintB_DR_PTR);
 267:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~(uint32)((uint32)0x01u << CapSense_1_CintB__SHIFT);
 268:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_DR_PTR, trimValue);
 269:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 270:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CintA_tank pin to AMUXBUS-A using HSIOM registers. */
 271:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 272:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~CapSense_1_CintA_HSIOM_MASK;
 273:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintA_HSIOM_SHIFT);
 274:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, trimValue);
 275:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 276:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set drive mode of CintA_tank pin to High-Z Analog state in PC register
 277:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             and set logic high on DR register. */
 278:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintA_PC_PTR);
 279:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintA_SHIFT * CapSense_1_GPIO_PC_BIT_
 280:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_PC_PTR, trimValue);
 281:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 282:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CintA_DR_PTR);
 283:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue &= ~(uint32)((uint32)0x01u << CapSense_1_CintA_SHIFT);
 284:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_DR_PTR, trimValue);
 285:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 286:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Connect CSD comparator to CintB via AMUXBUS-A */
 287:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue = CY_GET_REG32(CapSense_1_CONFIG_PTR);
 288:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         trimValue |= CapSense_1_CONFIG_SENSE_INSEL_MASK;
 289:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, trimValue);
 290:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 291:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* If common clocks are enabled for Component, set clock
 292:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them */
 293:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_CSX_COMMON_TX_CLK_EN == CapSense_1_ENABLE)
 294:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsSetClockDividers((uint32)CapSense_1_dsRam.snsCsxClk, (uint32)CapSense_1_ds
 295:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 296:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 297:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Enable CapSense_1 ISR and set ISR for CSX sensing */
 298:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_SsIsrInitialize(&CapSense_1_CSXScanISR);
 299:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 300:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 301:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 302:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 303:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXElectrodeCheck
 304:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 305:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 306:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 307:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Check if electrodes were previously connected using
 308:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the CapSense_1_CSXSetupWidgetExt() API and if yes, disconnect them.
 309:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 310:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 311:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function checks if CapSense_1_eleCsxDisconnectFlag is set.
 312:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   If it is set, the function disconnects the previously connected electrode.
 313:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 314:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 315:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXElectrodeCheck(void)
 316:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 318:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 numElectrodes;
 319:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN) */
 320:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 321:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if (0u != CapSense_1_eleCsxDisconnectFlag)
 322:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
 323:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****        /* Disconnect if electrodes were previous connected by SetupWidgetExt() API */
 324:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 325:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Check ganged sns flag */
 326:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_
 327:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 328:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Tx electrode
 329:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     3. Get Tx pointer
 330:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     4. Disconnect all Tx */
 331:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangTxPtr->numPins;
 332:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
 333:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 334:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 335:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 336:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr++);
 337:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
 338:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 339:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 340:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* 1. Get number of pins in previous connected Rx electrode
 341:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     3. Get Rx pointer
 342:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     4. Disconnect all Rx */
 343:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangRxPtr->numPins;
 344:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId];
 345:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 346:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 347:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 348:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr++);
 349:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
 350:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 351:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 352:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             else
 353:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 354:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 355:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr);
 356:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
 357:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 358:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #else
 359:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Disconnect if electrodes were previous connected by SetupWidgetExt API */
 360:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr);
 361:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
 362:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 363:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_eleCsxDisconnectFlag = 0u;
 364:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
 365:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 366:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 367:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 368:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 369:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXSetupWidget
 370:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 371:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 372:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 373:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  in a specific widget using the CSX sensing method. This function requires
 375:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  using the CapSense_1_CSXScan() function to start scanning.
 376:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 377:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 378:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function initializes the widgets specific common parameters to perform
 379:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  the CSX scanning. The initialization includes the following:
 380:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    1. The CSD_CONFIG register.
 381:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    2. The IDAC register.
 382:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    3. The Sense clock frequency
 383:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    4. The phase alignment of the sense and modulator clocks.
 384:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 385:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function does not connect any specific sensors to the scanning hardware
 386:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  and neither does it start a scanning process. The CapSense_1_CSXScan()
 387:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  function must be called after initializing the widget to start scanning.
 388:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 389:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 390:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
 391:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 392:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called by the CapSense_1_SetupWidget() API if the
 393:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  given widget uses the CSX sensing method.
 394:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 395:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 396:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 397:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 398:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 399:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param widgetId
 400:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 401:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  initialization required for scanning sensors in the specific widget.
 402:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration header
 403:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  file defined as CapSense_1_<WidgetName>_WDGT_ID.
 404:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 405:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 406:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXSetupWidget(uint32 widgetId)
 407:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 408:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* variable to access widget details */
 409:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
 410:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 411:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 412:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 tmpRegVal;
 413:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 snsClkVal;
 414:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
 415:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 416:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Save the current widget Id */
 417:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_widgetIndex = (uint8)widgetId;
 418:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 419:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSX_E);
 420:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 421:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /*
 422:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *  Check if CSX electrodes were previously connected using
 423:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *  CapSense_1_CSXSetupWidgetExt API and if yes, disconnect them
 424:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     */
 425:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_CSXElectrodeCheck();
 426:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 427:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Configure hardware block */
 428:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 429:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curFlashWdgtPtr = &CapSense_1_dsFlash.wdgtArray[widgetId];
 430:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 9


 431:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_curFlashWdgtPtr->ptr2WdgtRa
 432:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 433:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
 434:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             snsClkVal = (uint32)CapSense_1_dsRam.snsCsxClk;
 435:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #else
 436:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             snsClkVal = (uint32)curRamWdgtBasePtr->snsClk;
 437:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
 438:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 439:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (uint32)curRamWdgtBasePtr->resolution);
 440:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod  = CapSense_1_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 441:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 442:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = (uint32)curRamWdgtBasePtr->snsClkSource;
 443:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 444:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         snsClkVal = (snsClkVal - 1uL) & CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK;
 445:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << CapSense_1_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 446:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, tmpRegVal);
 447:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsxClk);
 448:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
 449:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /*
 450:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         * initialize access pointers for current:
 451:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *    1. Pointer to widget configuration in Flash
 452:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *    2. Widget configuration in RAM
 453:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *    3. Make a local copy of widget index
 454:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         */
 455:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curFlashWdgtPtr = &CapSense_1_dsFlash.wdgtArray[widgetId];
 456:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_curFlashWdgtPtr->ptr2WdgtRa
 457:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 458:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_CONFIG_ENABLE_MASK);
 459:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, (CY_GET_REG32(CapSense_1_CONFIG_PTR) |
 460:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_MUTUALCAP_EN_MASK     |
 461:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_SENSE_COMP_BW_MASK    |
 462:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_SENSE_COMP_EN_MASK    |
 463:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_SENSE_INSEL_MASK      |
 464:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_REFBUF_EN_MASK        |
 465:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                 CapSense_1_CONFIG_REFBUF_DRV_MASK));
 466:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 467:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* If individual clocks are enabled for each widget, set clock
 468:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             divider for sensor and modulator clocks and start/restart them. */
 469:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_CSX_COMMON_TX_CLK_EN == CapSense_1_DISABLE)
 470:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsSetClockDividers((uint32)curRamWdgtBasePtr->snsClk, (uint32)CapSense_1_dsR
 471:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 472:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 473:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Find scan period */
 474:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod = CapSense_1_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 475:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 476:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 477:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 478:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 479:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXSetupWidgetExt
 480:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 481:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 482:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 483:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Performs extended initialization for the CSX widget and also performs
 484:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  initialization required for a specific sensor in the widget. This function
 485:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  requires using the CapSense_1_CSXScan() function to initiate a scan.
 486:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 487:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 10


 488:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function does the same tasks as CapSense_1_CSXSetupWidget() and
 489:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  also connects a sensor in the widget for scanning. Once this function is
 490:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  called to initialize a widget and a sensor, the CapSense_1_CSXScanExt()
 491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  function must be called to scan the sensor.
 492:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 493:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 494:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
 495:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 496:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 497:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 498:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 499:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 500:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param widgetId
 501:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 502:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  initialization required for scanning a specific sensor in a specific widget.
 503:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration header
 504:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  file defined as CapSense_1_<WidgetName>_WDGT_ID.
 505:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 506:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param sensorId
 507:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 508:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
 509:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  specific widget.
 510:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
 511:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1 Configuration header file defined as
 512:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_<WidgetName>_SNS<SensorNumber>_ID.
 513:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 514:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 515:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 516:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXSetupWidgetExt(uint32 widgetId, uint32 sensorId)
 517:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 518:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 txIndex;
 519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 rxIndex;
 520:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 521:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 522:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint16 numElectrodes;
 523:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN) */
 524:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 525:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Initialize widget */
 526:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_CSXSetupWidget(widgetId);
 527:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_sensorIndex = (uint8)sensorId;
 528:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 529:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* initialize sensor data structure pointer to appropriate address */
 530:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsRam;
 531:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = &CapSense_1_curRamSnsPtr[sensorId];
 532:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 533:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 534:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (0u != CapSense_1_curRamSnsPtr->subConvNum)
 535:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 536:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 537:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 538:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /*
 539:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *  Find Tx and Rx index for given snsIndex
 540:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    rxIndex = sensorId / TxCount
 541:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    txIndex = sensorId % TxCount
 542:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     */
 543:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     rxIndex = sensorId /CapSense_1_curFlashWdgtPtr->numRows;
 544:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     txIndex = sensorId % CapSense_1_curFlashWdgtPtr->numRows;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 11


 545:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 546:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* If widget is APA, find node (Tx/Rx) to be connected for scanning */
 547:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 548:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_1_GA
 549:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 550:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /*
 551:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  1. Get access to Rx sensor pointer (Rx = Base + rxIndex).
 552:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  2. Get number of Rx electrodes
 553:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  3. Get Rx pointer
 554:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  4. Connect all Rx
 555:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             */
 556:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curGangRxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 557:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curGangRxPtr += rxIndex;
 558:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             numElectrodes = CapSense_1_curGangRxPtr->numPins;
 559:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId];
 560:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 561:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             do
 562:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 563:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
 564:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes--;
 565:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             } while (0u != numElectrodes);
 566:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 567:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /*
 568:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  1. Get access to Tx sensor pointer (Tx = Base + NumberRx + TxIndex).
 569:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  2. Get number of Tx electrodes
 570:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  3. Get Tx pointer
 571:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  4. Connect all Tx
 572:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             */
 573:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 574:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curGangTxPtr += (CapSense_1_curFlashWdgtPtr->numCols + txIndex);
 575:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 576:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             numElectrodes = CapSense_1_curGangTxPtr->numPins;
 577:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
 578:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 579:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             do
 580:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 581:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
 582:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes--;
 583:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }while (0u != numElectrodes);
 584:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 585:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Set callback to scan connected ganged sensor only */
 586:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostSingleScan;
 587:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 588:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
 589:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif  /* (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN) */
 590:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 591:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /*
 592:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *  If no ganged sensor in Component OR current widget no contains ganged sns, then:
 593:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *    1. Find Rx pointer: Rx = Base address + RxIndex
 594:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *    2. Find Tx pointer: Tx = Base address + (total Rx + TxIndex)
 595:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             */
 596:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgtPtr-
 597:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRxIOPtr = &CapSense_1_curRxIOPtr[rxIndex];
 598:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 599:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgtPtr-
 600:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curTxIOPtr = &CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr->numCols + t
 601:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 12


 602:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Connect Tx and Rx IOs for scan ad set flag to indicate that IOs should be disconnect
 603:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 604:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 605:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_eleCsxDisconnectFlag = CapSense_1_DISCONNECT_IO_FLAG;
 606:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 607:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Set callback to scan all the sensors in widget */
 608:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostSingleScan;
 609:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 610:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 611:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 612:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 613:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 614:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 615:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 616:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXScan
 617:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 618:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 619:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 620:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by
 621:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  the CapSense_1_CSXSetupWidget() function.
 622:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 623:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 624:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
 625:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  the CapSense_1_CSXSetupWidget() function. It does the following tasks:
 626:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    1. Connects the first sensor of the widget.
 627:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    2. Initializes an interrupt callback function to initialize a scan of the
 628:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *       next sensors in a widget.
 629:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    3. Starts scanning for the first sensor in the widget.
 630:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 631:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called by the CapSense_1_Scan() API if the given
 632:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  widget uses the CSX sensing method.
 633:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 634:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 635:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 636:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
 637:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 638:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is called when no scanning is in progress. I.e.
 639:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status. The widget must be
 640:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  preconfigured by the CapSense_1_CSXSetupWidget() function if any other
 641:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  widget was previously scanned or any other type of scan functions were used.
 642:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 643:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 644:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 645:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXScan(void)
 646:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 647:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 648:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 numElectrodes;
 649:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 650:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 651:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 snsIndex = 0u;
 652:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 snsNum;
 653:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 654:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 655:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_sensorIndex = 0u;
 656:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 657:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* initialize pointer to access sensor RAM elements */
 658:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsRam;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 13


 659:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 660:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 661:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Loop through the sensors until non-skipped is found */
 662:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         snsNum = CapSense_1_curFlashWdgtPtr->totalNumSns;
 663:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         while ((snsIndex < snsNum) && (CapSense_1_curRamSnsPtr->subConvNum == 0u))
 664:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 665:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Increment sensor pointers */
 666:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr++;
 667:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_sensorIndex++;
 668:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             snsIndex++;
 669:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 670:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /*
 671:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 672:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 673:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         */
 674:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalTx = (uint16)(CapSense_1_curFlashWdgtPtr->numRows - (snsIndex % CapS
 675:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalRx  = (uint16)(CapSense_1_curFlashWdgtPtr->numCols - (snsIndex / Cap
 676:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 677:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Scan sensor if it's index within a valid range otherwise do nothing as all the sensors a
 678:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (snsIndex < snsNum)
 679:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 680:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 681:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if ((CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_1_GANGED_SNS_MASK) != 0u)
 682:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 683:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect all Rx electrodes */
 684:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangRxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 685:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangRxPtr += snsIndex /CapSense_1_curFlashWdgtPtr->numRows;
 686:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangRxPtr->numPins;
 687:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId]
 688:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
 689:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 690:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
 691:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
 692:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
 693:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 694:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect all Tx electrodes */
 695:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 696:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangTxPtr += (CapSense_1_curFlashWdgtPtr->numCols + snsIndex % Ca
 697:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangTxPtr->numPins;
 698:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId]
 699:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
 700:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 701:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
 702:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
 703:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }while (0u != numElectrodes);
 704:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Assign callback to ISR */
 705:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostMultiScanGanged;
 706:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
 707:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
 708:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN) */
 709:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 710:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Find Rx pointer: Rx = Base_address + SnsIndex / total_Tx */
 711:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgt
 712:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr += (snsIndex / CapSense_1_curFlashWdgtPtr->numRows);
 713:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Find Tx pointer: Tx = Base_address + total_Rx + SnsIndex % total_Tx */
 714:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgt
 715:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr += CapSense_1_curFlashWdgtPtr->numCols;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 14


 716:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr += (snsIndex % CapSense_1_curFlashWdgtPtr->numRows);
 717:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Connect Tx and Rx electrodes for scan */
 718:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 719:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 720:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 721:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostMultiScan;
 722:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 723:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 724:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 725:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
 726:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 727:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 728:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 729:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Set scan status, enter critical section and initiate scan */
 730:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.status |= CapSense_1_SW_STS_BUSY;
 731:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 732:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
 733:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
 734:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 735:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
 736:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 737:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
 738:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 739:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 740:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 741:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 742:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /*
 743:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *  Calculate total sensor to be scanned. If buttons, one Tx and an Rx for each sensor
 744:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         *  if Matrix button or Touchpad, M x N rule applies
 745:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         */
 746:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalTx = CapSense_1_curFlashWdgtPtr->numRows;
 747:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalRx  = CapSense_1_curFlashWdgtPtr->numCols;
 748:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 749:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* If Component contains CSX ganged sensor, then check if widget contains ganged sensor */
 750:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if (CapSense_1_CSX_GANGED_SNS_EN == 1u)
 751:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             if ((CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_1_GANGED_SNS_MASK) != 0u)
 752:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 753:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
 754:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Rx
 755:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  2. Get number of Rx pin
 756:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  3. Get pointer to the Rx pin
 757:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  4. Connect all Rx pins
 758:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
 759:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curGangRxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 760:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangRxPtr->numPins ;
 761:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId];
 762:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 763:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 764:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
 765:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
 766:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
 767:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 768:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
 769:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  1. Get sns pointer for first Tx (Tx = Base + number of Rx).
 770:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  2. Get number of Tx electrodes
 771:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  3. Get pointer the Tx electrode
 772:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  4. Connect all Tx
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 15


 773:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
 774:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
 775:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curGangTxPtr += CapSense_1_curFlashWdgtPtr->numCols;
 776:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangTxPtr->numPins ;
 777:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
 778:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 779:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 780:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 781:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
 782:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
 783:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }while (0u != numElectrodes);
 784:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 785:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Assign callback to ISR */
 786:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostMultiScanGanged;
 787:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 788:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 789:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             else
 790:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 791:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 792:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
 793:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  If no ganged sensor in the Component OR current widget contains no ganged sns, t
 794:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *    1. Find Rx pointer: Rx = Base address.
 795:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *    2. Find Tx pointer: Tx = Base address + total Rx
 796:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
 797:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curFlashWdgt
 798:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = CapSense_1_curRxIOPtr;
 799:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr->numCols
 800:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 801:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Connect first Tx and first Rx IOs for scan */
 802:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 803:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 804:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 805:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Set callback to scan all the sensors in widget */
 806:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXPostScanApiPtr = &CapSense_1_SsCSXPostMultiScan;
 807:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 808:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 809:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Reset multi-frequency scan channel if enabled */
 810:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
 811:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 812:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 813:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set scan status, enter critical section and initiate scan */
 815:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_dsRam.status |= CapSense_1_SW_STS_BUSY;
 816:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
 818:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****            (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
 819:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****            (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 820:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
 821:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 822:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsCSXStartSample();
 823:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 824:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 825:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 826:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 827:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 828:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXScanExt()
 829:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 16


 830:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 831:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 832:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Starts the CSX conversion on the preconfigured sensor. This function requires
 833:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  using the CapSense_1_CSXSetupWidgetExt() function to set up a
 834:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  widget.
 835:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 836:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
 837:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function performs single scanning of one sensor in the widget configured
 838:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  by the CapSense_1_CSXSetupWidgetExt() function. It does the following
 839:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  tasks:
 840:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    1. Sets a busy flag in the CapSense_1_dsRam structure.
 841:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    2. Configures the Tx clock frequency.
 842:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    3. Configures the Modulator clock frequency.
 843:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    4. Configures the IDAC value.
 844:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *    5. Starts single scanning.
 845:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 846:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
 847:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
 848:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time or pipeline scanning for example). This
 849:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  function is called when no scanning is in progress. I.e.
 850:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
 851:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 852:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  The sensor must be preconfigured by using the
 853:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXSetupWidgetExt() API prior to calling this function.
 854:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  The sensor remains ready for the next scan if a previous scan was triggered
 855:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  by using the CapSense_1_CSXScanExt() function. In this case, calling
 856:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXSetupWidgetExt() is not required every time before the
 857:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXScanExt() function. If a previous scan was triggered in
 858:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  any other way - CapSense_1_Scan(), CapSense_1_ScanAllWidgets()
 859:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  or CapSense_1_RunTuner() - (see the CapSense_1_RunTuner() function
 860:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  description for more details), the sensor must be preconfigured again by
 861:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  using the CapSense_1_CSXSetupWidgetExt() API prior to calling the
 862:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXScanExt() function.
 863:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 864:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  If disconnection of the sensors is required after calling
 865:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXScanExt(), the CapSense_1_CSXDisconnectTx() and
 866:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_CSXDisconnectRx() APIs can be used.
 867:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 868:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 869:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 870:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXScanExt(void)
 871:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 872:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 873:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
 874:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 875:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 876:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 877:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 878:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (0u != CapSense_1_curRamSnsPtr->subConvNum)
 879:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 880:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Set busy flag and start conversion */
 881:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.status |= CapSense_1_SW_STS_BUSY;
 882:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 883:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
 884:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
 885:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 886:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 17


 887:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 888:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
 889:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 890:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
 891:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Set busy flag and start conversion */
 892:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_dsRam.status |= CapSense_1_SW_STS_BUSY;
 893:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 894:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
 895:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****            (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
 896:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****            (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
 897:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
 898:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 899:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsCSXStartSample();
 900:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 901:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 902:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 903:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 904:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
 905:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXPostMultiScan
 906:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
 907:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 908:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
 909:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   ISR function implements the multiple-sensor scanning for un-ganged CSX widgets.
 910:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function is called by the Component ISR only, it should not be used by
 911:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the application layer.
 912:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
 913:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
 914:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 915:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostMultiScan(void)
 916:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
 917:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
 918:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_EntryCallback();
 919:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_ENTRY_CALLBACK */
 920:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 921:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
 922:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] = \
 923:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                              (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
 924:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 925:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 926:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
 927:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 928:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 929:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
 930:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_scanFreqIndex++;
 931:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 932:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 933:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeImoFreq((uint32)CapSense_1_scanFreqIndex);
 934:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
 935:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeClkFreq((uint32)CapSense_1_scanFreqIndex);
 936:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 937:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 938:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
 939:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 940:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
 941:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 942:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 943:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 18


 944:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
 945:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 946:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 947:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 948:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
 949:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
 950:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
 951:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 952:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 953:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 954:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 955:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
 956:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect Tx/Rx electrodes of previously scanned sensor as preparation for next
 957:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr);
 958:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
 959:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 960:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
 961:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
 962:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 963:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
 964:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_sensorIndex++;
 965:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 966:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment sensor pointers */
 967:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
 968:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curWdgtTotalTx--;
 969:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalTx > 0u)
 970:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 971:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr++;
 972:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 973:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
 974:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 975:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalRx--;
 976:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         if (CapSense_1_curWdgtTotalRx > 0u)
 977:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
 978:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curRxIOPtr++;
 979:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curWdgtTotalTx  = CapSense_1_curFlashWdgtPtr->numRows;
 980:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_
 981:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curTxIOPtr = & CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdg
 982:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
 983:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 984:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while ((CapSense_1_curWdgtTotalRx != 0u) && (CapSense_1_curRamSnsPtr->subConvNum 
 985:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 986:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Perform the next scan or switch to the next widget */
 987:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if(CapSense_1_curWdgtTotalRx != 0u)
 988:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 989:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect Tx/Rx electrodes for the next scan */
 990:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 991:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 992:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
 993:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsCSXStartSample();
 994:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
 995:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
 996:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 997:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
 998:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_requestScanAllWidget != 0u)
 999:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1000:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_SsPostAllWidgetsScan();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 19


1001:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1002:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1003:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1004:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_dsRam.scanCounter++;
1005:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1006:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1007:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1008:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1009:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1010:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
1011:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  Disconnect Tx electrodes of previously scanned sensor as
1012:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  preparation for next sensor scan
1013:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
1014:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXDisconnectTx (CapSense_1_curTxIOPtr);
1015:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1016:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1017:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_sensorIndex++;
1018:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1019:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /*
1020:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  Initiate scan for next sensor in widget, if all the sensors in
1021:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *  widget are not scanned
1022:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
1023:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curWdgtTotalTx--;
1024:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if (CapSense_1_curWdgtTotalTx > 0u)
1025:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1026:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /*
1027:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  1. Increment pointer to next Tx
1028:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  2. Connect next Rx for scan
1029:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  3. Increment pointer to sns data
1030:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     */
1031:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curTxIOPtr++;
1032:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectTx (CapSense_1_curTxIOPtr);
1033:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
1034:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1035:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1036:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsCSXStartSample();
1037:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1038:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1039:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Check if all Rx are looped through */
1040:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
1041:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1042:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curWdgtTotalRx--;
1043:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalRx > 0u)
1044:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1045:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /*
1046:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  1. Disconnect current Rx electrode
1047:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  2. Connect next Rx electrode
1048:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1049:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  4. Find first Tx electrode again
1050:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  5. Connect first Tx electrode
1051:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         */
1052:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
1053:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr++;
1054:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
1055:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalTx  = CapSense_1_curFlashWdgtPtr->numRows;
1056:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curF
1057:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = & CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 20


1058:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
1059:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1060:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Increment RAM sensor pointer pointer */
1061:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRamSnsPtr++;
1062:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1063:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Initiate sample */
1064:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_SsCSXStartSample();
1065:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1066:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1067:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1068:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* If all the sensors are scanned, disconnect Tx */
1069:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
1070:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1071:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1072:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         if (CapSense_1_requestScanAllWidget != 0u)
1073:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1074:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_SsPostAllWidgetsScan();
1075:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1076:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         else
1077:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1078:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             /*
1079:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *  All pending scans completed,
1080:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *    1. update the counter to indicat same
1081:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
1082:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             */
1083:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.scanCounter++;
1084:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1085:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1086:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1087:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1088:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1089:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1090:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1091:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_EXIT_CALLBACK
1092:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_ExitCallback();
1093:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_EXIT_CALLBACK */
1094:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1095:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1096:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1097:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1098:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXPostMultiScanGanged
1099:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1100:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1101:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1102:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1103:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1104:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the application layer.
1105:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1106:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1107:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   The ISR function implements the multiple-sensor scanning for ganged CSX widgets.
1108:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function is called by the Component ISR only, should not be used by
1109:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the application layer.
1110:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1111:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1112:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_CSX_GANGED_SNS_EN == 1u)
1113:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1114:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostMultiScanGanged(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 21


1115:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1116:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 numElectrodes;
1117:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1118:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
1119:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_EntryCallback();
1120:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_ENTRY_CALLBACK */
1121:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1122:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Copy scan result into sensor raw count array */
1123:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] = \
1124:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
1125:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1126:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1127:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1128:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
1129:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1130:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1131:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_scanFreqIndex++;
1132:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1133:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
1134:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeImoFreq((uint32)CapSense_1_scanFreqIndex);
1135:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
1136:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeClkFreq((uint32)CapSense_1_scanFreqIndex);
1137:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
1138:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1139:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
1140:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1141:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
1142:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
1143:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1144:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
1145:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1146:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1147:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1148:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
1149:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
1150:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
1151:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
1152:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
1153:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1154:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
1155:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1156:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1157:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect Tx electrodes of previously scanned sensor as preparation for next se
1158:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangTxPtr->numPins;
1159:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
1160:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
1161:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1162:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectTx(CapSense_1_curTxIOPtr++);
1163:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
1164:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1165:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect Rx electrodes of previously scanned sensor as preparation for next se
1166:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangRxPtr->numPins;
1167:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId];
1168:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
1169:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1170:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr++);
1171:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 22


1172:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1173:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1174:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Increment sensor until non-skipped is found */
1175:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
1176:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1177:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment sensor index to configure next sensor in widget */
1178:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_sensorIndex++;
1179:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1180:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment RAM sensor pointer */
1181:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
1182:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curWdgtTotalTx--;
1183:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalTx > 0u)
1184:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1185:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curGangTxPtr++;
1186:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1187:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1188:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1189:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1190:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalRx--;
1191:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         if (CapSense_1_curWdgtTotalRx > 0u)
1192:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1193:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curGangRxPtr++;
1194:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curWdgtTotalTx = CapSense_1_curFlashWdgtPtr->numRows;
1195:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
1196:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_curGangTxPtr += CapSense_1_curFlashWdgtPtr->numCols;
1197:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1198:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1199:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while ((CapSense_1_curWdgtTotalRx != 0u) && (CapSense_1_curRamSnsPtr->subConvNum 
1200:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1201:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if(CapSense_1_curWdgtTotalRx != 0u)
1202:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1203:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1204:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangTxPtr->numPins;
1205:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId]
1206:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
1207:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1208:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
1209:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
1210:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1211:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Connect Tx electrodes for the next scan */
1212:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangRxPtr->numPins ;
1213:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPinId]
1214:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
1215:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1216:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
1217:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
1218:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1219:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Reset scan result holder, and initiate scan */
1220:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsCSXStartSample();
1221:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1222:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
1223:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1224:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Call scan next widget API if requested, if not, complete scan */
1225:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_requestScanAllWidget != 0u)
1226:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1227:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_SsPostAllWidgetsScan();
1228:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 23


1229:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1230:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1231:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_dsRam.scanCounter++;
1232:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1233:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1234:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1235:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1236:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1237:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Disconnect ALL pins of previously scanned Tx */
1238:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 numElectrodes = CapSense_1_curGangTxPtr->numPins ;
1239:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId];
1240:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 do
1241:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1242:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXDisconnectTx (CapSense_1_curTxIOPtr++);
1243:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes--;
1244:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 } while (0u != numElectrodes);
1245:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1246:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Increment sensor index to configure next sensor in widget */
1247:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_sensorIndex++;
1248:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1249:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Check if all Tx are scanned, if not, initiate scan for next Tx */
1250:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curWdgtTotalTx--;
1251:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if (CapSense_1_curWdgtTotalTx > 0u)
1252:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1253:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /*
1254:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  1. Find pointer of next Tx (ganged)
1255:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     *  2. Connect all Tx pins
1256:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     */
1257:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curGangTxPtr++;
1258:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     numElectrodes = CapSense_1_curGangTxPtr->numPins ;
1259:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPinId]
1260:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     do
1261:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1262:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
1263:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes--;
1264:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     } while (0u != numElectrodes);
1265:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1266:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Increment RAM pointer to next sensor */
1267:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
1268:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1269:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Reset scan result holder and initiate scan */
1270:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsCSXStartSample();
1271:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1272:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 else
1273:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1274:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     /* Check if all Rx are scanned, if not, initiate scan for next Rx */
1275:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curWdgtTotalRx--;
1276:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalRx > 0u)
1277:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1278:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* 1. Disconnect current Rx ALL pins */
1279:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes = CapSense_1_curGangRxPtr->numPins ;
1280:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPi
1281:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         do
1282:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1283:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr++);
1284:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             numElectrodes--;
1285:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 24


1286:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1287:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* 2. Connect next Rx ALL pins */
1288:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curGangRxPtr++;
1289:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes = CapSense_1_curGangRxPtr->numPins ;
1290:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPi
1291:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         do
1292:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1293:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr++);
1294:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             numElectrodes--;
1295:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1296:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1297:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /*
1298:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  3. Re-initialize total Tx to be scanned per Rx
1299:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  4. Find first Tx  again
1300:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         *  5. Connect first Tx ALL pins
1301:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         */
1302:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalTx = CapSense_1_curFlashWdgtPtr->numRows;
1303:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curGangTxPtr = CapSense_1_curFlashWdgtPtr->ptr2SnsFlash;
1304:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curGangTxPtr += CapSense_1_curFlashWdgtPtr->numCols;
1305:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1306:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* 6. Connect Tx ALL pins */
1307:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes = CapSense_1_curGangTxPtr->numPins ;
1308:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = &CapSense_1_ioList[CapSense_1_curGangTxPtr->firstPi
1309:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         do
1310:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1311:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr++);
1312:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             numElectrodes--;
1313:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1314:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1315:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Increment RAM pointer to next sensor */
1316:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRamSnsPtr++;
1317:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1318:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Reset scan result holder and initiate scan */
1319:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_SsCSXStartSample();
1320:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1321:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     else
1322:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1323:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Disconnect ALL electrodes of previously scanned Rx */
1324:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         numElectrodes = CapSense_1_curGangRxPtr->numPins ;
1325:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr = &CapSense_1_ioList[CapSense_1_curGangRxPtr->firstPi
1326:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         do
1327:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1328:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr++);
1329:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             numElectrodes--;
1330:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         } while (0u != numElectrodes);
1331:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1332:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         /* Call scan next widget API if requested, if not, complete scan */
1333:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         if (CapSense_1_requestScanAllWidget != 0u)
1334:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1335:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_SsPostAllWidgetsScan();
1336:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1337:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         else
1338:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
1339:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             /*
1340:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *  All pending scans completed,
1341:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *    1. update the counter to indicate same
1342:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             *    2. Clear busy state as scanning is completed
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 25


1343:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             */
1344:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.scanCounter++;
1345:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1346:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
1347:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1348:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1349:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1350:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1351:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1352:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_EXIT_CALLBACK
1353:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_ExitCallback();
1354:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_EXIT_CALLBACK */
1355:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1356:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1357:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif  /* (CapSense_1_CSX_GANGED_SNS_EN == 1u) */
1358:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1359:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1360:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXPostSingleScan
1361:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1362:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1363:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1364:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   The ISR function for single-sensor scanning implementation.
1365:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1366:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1367:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function is used by CapSense_1 ISR in the CSX scanning mode to implement
1368:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   the single-sensor scanning.
1369:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function should not be used by the application layer.
1370:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1371:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1372:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1373:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXPostSingleScan(void)
1374:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1375:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
1376:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_EntryCallback();
1377:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_ENTRY_CALLBACK */
1378:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1379:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /*
1380:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     * Copy scan result into sensor raw count array and clear busy flag
1381:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    No sensor is connected or disconnected in this function
1382:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    Calling CapSense_1_ScanExt from application would perform
1383:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     *    one more scan of same sensor. Specifically for low-power mode.
1384:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     */
1385:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] =
1386:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
1387:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1388:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1389:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Increment multi frequency scan index if all channels are not scanned */
1390:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
1391:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1392:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Change multi-frequency channel and start sample */
1393:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_scanFreqIndex++;
1394:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1395:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
1396:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeImoFreq((uint32)CapSense_1_scanFreqIndex);
1397:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
1398:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_SsChangeClkFreq((uint32)CapSense_1_scanFreqIndex);
1399:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 26


1400:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1401:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_SsCSXStartSample();
1402:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1403:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
1404:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
1405:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1406:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_MULTI_FREQ_SCAN_EN == CapSense_1_ENABLE)
1407:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* All channels are scanned. Reset the multi frequency scan channel */
1408:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1409:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1410:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
1411:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
1412:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
1413:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
1414:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
1415:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1416:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
1417:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /*
1418:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             * All pending scans completed,
1419:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *   1. Update the counter to indicate same
1420:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             *   2. Clear busy state as scanning is completed
1421:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             */
1422:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.scanCounter++;
1423:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1424:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1425:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1426:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_EXIT_CALLBACK
1427:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_ExitCallback();
1428:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_EXIT_CALLBACK */
1429:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1430:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1431:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1432:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXCalibrateWidget
1433:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1434:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1435:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1436:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calibrates the raw count values of all the sensors/nodes in a CSX widget.
1437:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1438:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1439:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Performs a successive approximation search algorithm to find appropriate
1440:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  IDAC values for sensors in the specified widget that provides a raw count
1441:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  to the level specified by the target parameter.
1442:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1443:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function is available when the CSX Enable IDAC auto-calibration
1444:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  parameter is enabled.
1445:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1446:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param widgetId
1447:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the ID number of the CSX widget to calibrate its raw count.
1448:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  A macro for the widget ID can be found in the
1449:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1 Configuration header file defined as
1450:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  CapSense_1_<WidgetName>_WDGT_ID.
1451:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1452:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param target
1453:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the calibration target in percentages of the maximum raw count.
1454:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1455:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1456:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 27


1457:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1458:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXCalibrateWidget(uint32 widgetId, uint16 target)
1459:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1460:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
1461:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 rawTarget;
1462:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Counter for loop execution */
1463:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 totalSns;
1464:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Counter for loop execution */
1465:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 calibrationIndex;
1466:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Currently used IDAC-bit */
1468:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint8 curIdacMask = (1u << (CapSense_1_CSX_IDAC_BITS_USED-1u));
1469:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Next used IDAC-bit */
1470:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint8 nextIdacMask = (curIdacMask >> 1u);
1471:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1472:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* initialize ptr to sensor structures */
1473:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)CapSense_1_dsFlash.wdgtArray[widgetId].p
1474:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1475:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1476:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Calculate target raw count */
1477:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod  = CapSense_1_SsCalcCsxScanPeriod(
1478:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
1479:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         rawTarget = CapSense_1_csxScanPeriod;
1480:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / CapSense_1_PERCENTAGE_100;
1481:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1482:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1483:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if (CapSense_1_SENSE_METHOD_CSX_E ==
1484:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****        CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1485:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1486:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Find out total sensors/nodes in widget */
1487:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         totalSns = ((uint32)CapSense_1_dsFlash.wdgtArray[widgetId].numCols *
1488:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     (uint32)CapSense_1_dsFlash.wdgtArray[widgetId].numRows);
1489:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1490:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Clear raw count registers and IDAC registers of all the sensors/nodes */
1491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1492:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1493:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_0] = 0u;
1494:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_0] = curIdacMask;
1495:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1496:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_1] = 0u;
1497:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_2] = 0u;
1498:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] = curIdacMask;
1499:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] = curIdacMask;
1500:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
1501:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr++;
1502:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1503:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1504:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Perform binary search for accurate IDAC value for each sensor/node */
1505:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         do
1506:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
1507:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Scan all the sensors/nodes in widget */
1508:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (void)CapSense_1_SetupWidget(widgetId);
1509:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (void)CapSense_1_Scan();
1510:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1511:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             while ((CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY) != 0u)
1512:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
1513:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 28


1514:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1515:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Get access to sensor data */
1516:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)CapSense_1_dsFlash.wdgtArray[wid
1517:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1518:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Check raw count and adjust IDAC, loop through all the sensors/nodes */
1519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             for (calibrationIndex = 0u; calibrationIndex < totalSns; calibrationIndex++)
1520:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
1521:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Calculate raw count target for specified node */
1522:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1523:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     rawTarget = (CapSense_1_SsCSXOversample() * target) / CapSense_1_PERCENTAGE_100
1524:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif
1525:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1526:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 /* Check if current raw count is above target,
1527:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *   if yes, clear the MS bit of bit
1528:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 *   if no, keep the MS bit and set next bit
1529:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 */
1530:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if (CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_0] > rawTarget)
1531:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
1532:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_0] &= (uint8)(~curIda
1533:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
1534:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_0] |= nextIdacMask;
1535:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1536:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1537:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_1] > rawTarget)
1538:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1539:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] &= (uint8)(~cu
1540:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1541:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1542:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_2] > rawTarget)
1543:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
1544:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] &= (uint8)(~cu
1545:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
1546:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1547:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] |= nextIdacMask;
1548:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] |= nextIdacMask;
1549:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif
1550:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr++;
1551:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
1552:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1553:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             /* Shift both current idac and pre Idac values to right by 1 */
1554:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             curIdacMask = nextIdacMask;
1555:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             nextIdacMask = nextIdacMask >> 1u;
1556:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
1557:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         while (curIdacMask != 0u);
1558:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1559:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1560:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1561:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (CapSense_1_CSX_IDAC_AUTOCAL_EN == CapSense_1_ENABLE) */
1562:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1563:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
1564:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1565:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXStartSample
1566:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1567:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1568:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1569:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1570:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 29


1571:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1572:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1573:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1574:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXStartSample(void)
1576:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1577:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 tmpRegVal;
1578:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1579:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = (uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex];
1580:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = (tmpRegVal & CapSense_1_IDAC_MOD_VAL_MASK) | CapSense_1_DEFAULT_CSD_IDACA_CFG;
1581:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, tmpRegVal);
1582:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1583:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1584:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1585:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod = (uint16)CapSense_1_SsCSXOversample();
1586:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (uint32)CapSense_1_curRamSnsPtr->subConvNum);
1587:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1588:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1589:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Clear scan result holder */
1590:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_csxRawCount = 0u;
1591:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1592:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_START_SAMPLE_CALLBACK
1593:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_StartSampleCallback(CapSense_1_widgetIndex, CapSense_1_sensorIndex);
1594:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_START_SAMPLE_CALLBACK */
1595:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1596:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_SsCSXStartSampleExt();
1597:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1598:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #else
1599:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1600:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1601:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXStartSample
1602:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1603:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1604:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1605:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Starts scanning for the CSX widget.
1606:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1607:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param widgetIndex The ID of the widget to be calibrated.
1608:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1609:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1610:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1611:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1612:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static void CapSense_1_SsCSXStartSample(void)
1613:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1614:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint8 critSect;
1615:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 tmpRegVal;
1616:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1617:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1618:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(CapSense_1_IDAC_PTR);
1619:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal &= ~(CapSense_1_IDAC_MOD_MASK);
1620:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal |= (CapSense_1_IDAC_MOD_MODE_VARIABLE | (uint32)CapSense_1_curRamSnsPtr->idacComp[Cap
1621:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_PTR, tmpRegVal);
1622:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1623:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1624:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Clear scan result holder */
1625:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_csxRawCount = 0u;
1626:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1627:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_START_SAMPLE_CALLBACK
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 30


1628:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_StartSampleCallback(CapSense_1_widgetIndex, CapSense_1_sensorIndex);
1629:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* CapSense_1_START_SAMPLE_CALLBACK */
1630:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1631:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1632:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         /* Configure node-specific number of sub-conversion */
1633:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod = (uint16)CapSense_1_SsCSXOversample();
1634:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1635:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1636:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Disable interrupts and initiate scan */
1637:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     critSect = CyEnterCriticalSection();
1638:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_SsCSXStartSampleExt();
1639:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CyExitCriticalSection(critSect);
1640:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1641:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1642:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1643:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1644:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXConnectTx
1645:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1646:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1647:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1648:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Connects a Tx electrode to the CSX scanning hardware.
1649:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1650:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1651:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function connects a port pin (Tx electrode) to the CSD_SENSE signal.
1652:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  It is assumed that drive mode of the port pin is already set to STRONG
1653:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  in the HSIOM_PORT_SELx register.
1654:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1655:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1656:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1657:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1658:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  electrode for example).
1659:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1660:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param txPtr
1661:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1662:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  to be connected to the sensing HW block as a Tx pin.
1663:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1664:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1665:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXConnectTx(CapSense_1_FLASH_IO_STRUCT const *txPtr)
1666:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1667:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
1668:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1669:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->pcPtr);
1670:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |= (CapSense_1_GPIO_STRGDRV << txPtr->shift);
1671:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->pcPtr, regValue);
1672:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1673:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1674:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |= (CapSense_1_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift);
1675:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1676:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1677:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1678:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1679:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXConnectRx
1680:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1681:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1682:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1683:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Connects an Rx electrode to the CSX scanning hardware.
1684:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 31


1685:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1686:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function connects a port pin (Rx electrode) to AMUXBUS-A and sets
1687:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  drive mode of the port pin to High-Z in the GPIO_PRT_PCx register.
1688:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1689:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1690:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1691:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1692:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  electrode for example).
1693:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1694:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param rxPtr
1695:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1696:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  to be connected to the sensing HW block as an Rx pin.
1697:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1698:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1699:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXConnectRx(CapSense_1_FLASH_IO_STRUCT const *rxPtr)
1700:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1701:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
1702:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1703:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->pcPtr);
1704:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(CapSense_1_GPIO_PC_MASK << rxPtr->shift);
1705:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
1706:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1707:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1708:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |=  (CapSense_1_HSIOM_SEL_AMUXA << rxPtr->hsiomShift);
1709:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1710:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1711:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1712:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1713:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXDisconnectTx
1714:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1715:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1716:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1717:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Disconnects a Tx electrode from the CSX scanning hardware.
1718:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1719:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1720:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function disconnects a port pin (Tx electrode) from the CSD_SENSE
1721:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  signal and configures the port pin to the strong drive mode. It is assumed
1722:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  that the data register (GPIO_PRTx_DR) of the port pin is already 0.
1723:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1724:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1725:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1726:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for an
1727:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  electrode for example).
1728:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1729:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param txPtr
1730:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a Tx pin
1731:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1732:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1733:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1734:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXDisconnectTx(CapSense_1_FLASH_IO_STRUCT const *txPtr)
1735:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1736:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
1737:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1738:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (txPtr->hsiomPtr);
1739:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
1740:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
1741:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 32


1742:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1743:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1744:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXDisconnectRx
1745:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1746:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1747:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1748:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Disconnects an Rx electrode from the CSX scanning hardware.
1749:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1750:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1751:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function disconnects a port pin (Rx electrode) from AMUXBUS_A and
1752:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  configures the port pin to the strong drive mode. It is assumed that the
1753:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  data register (GPIO_PRTx_DR) of the port pin is already 0.
1754:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1755:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calling this function directly from the application layer is not
1756:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  recommended. This function is used to implement only the user's specific
1757:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  use cases (for faster execution time when there is only one port pin for
1758:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  an electrode for example).
1759:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1760:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param rxPtr
1761:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to an Rx pin
1762:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  sensor to be disconnected from the sensing HW block.
1763:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1764:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1765:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** void CapSense_1_CSXDisconnectRx(CapSense_1_FLASH_IO_STRUCT const *rxPtr)
1766:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1767:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
1768:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1769:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->hsiomPtr);
1770:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
1771:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
1772:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1773:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->pcPtr);
1774:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(CapSense_1_GPIO_PC_MASK << rxPtr->shift);
1775:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |=  (CapSense_1_GPIO_STRGDRV << rxPtr->shift);
1776:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
1777:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1778:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue = CY_GET_REG32 (rxPtr->drPtr);
1779:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
1780:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
1781:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1782:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1783:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1784:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1785:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXGetTxClkDivider
1786:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1787:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1788:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1789:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value for one-dimension widgets
1790:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  and the Column Sense Clock divider value for two-dimension widgets.
1791:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1792:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1793:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function gets the Sense Clock Divider value based on the Component
1794:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  configuration. The function is applicable for one-dimension widgets and for
1795:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  two-dimension widgets.
1796:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1797:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param
1798:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  widgetId Specifies the ID of the widget.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 33


1799:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1800:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \return The Sense Clock Divider value for one-dimension widgets
1801:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *         and the Column Sense Clock divider value for two-dimension widgets.
1802:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1803:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1804:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** uint32 CapSense_1_SsCSXGetTxClkDivider(uint32 widgetId)
1805:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1806:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 retVal;
1807:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1808:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Get sense divider based on configuration */
1809:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
1810:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
1811:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1812:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1813:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
1814:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1815:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         retVal = (uint32)(ptrWdgt->snsClk);
1816:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
1817:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         retVal = (uint32)CapSense_1_dsRam.snsCsxClk;
1818:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
1819:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1820:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if(widgetId == 0uL)
1821:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1822:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         ;
1823:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1824:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1825:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     return (retVal);
1826:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1827:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1828:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1829:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1830:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCalcCsxScanPeriod
1831:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1832:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1833:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1834:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Calculates scan period for a desired CSX widget.
1835:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1836:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1837:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This function calculates a scan period for a desired CSX widget considering
1838:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  common Tx clock option.
1839:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1840:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \param wdgtPtr
1841:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  The pointer to a register map object that contains widget information.
1842:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1843:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \return
1844:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  Returns the CSX scan period for the widget.
1845:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1846:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1847:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint16 CapSense_1_SsCalcCsxScanPeriod(CapSense_1_RAM_WD_BASE_STRUCT const *wdgtPtr)
1848:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
  27              		.loc 1 1848 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
1849:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 temp;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 34


1850:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1851:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
1852:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = (uint32)(wdgtPtr->snsClk);
  33              		.loc 1 1852 0
  34 0000 4389     		ldrh	r3, [r0, #10]
  35              	.LVL1:
1853:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
1854:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = (uint32)(CapSense_1_dsRam.snsCsxClk);
1855:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
1856:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1857:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
1858:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp  = LO16((uint32)wdgtPtr->resolution * (temp - CapSense_1_CSX_DEADBAND_CYCLES_NUMBER));
  36              		.loc 1 1858 0
  37 0002 0288     		ldrh	r2, [r0]
  38 0004 981E     		subs	r0, r3, #2
  39              	.LVL2:
  40 0006 5043     		muls	r0, r2
  41 0008 80B2     		uxth	r0, r0
  42              	.LVL3:
1859:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
1860:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1861:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             temp = (temp / (uint32)CapSense_1_dsRam.modCsxClk);
1862:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1863:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1864:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = ((uint32)wdgtPtr->resolution * CapSense_1_NUM_HALF_CYCLES * temp);
1865:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1866:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1867:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* return the scan period */
1868:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     return ((uint16)temp);
1869:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
  43              		.loc 1 1869 0
  44              		@ sp needed
  45 000a 7047     		bx	lr
  46              		.cfi_endproc
  47              	.LFE16:
  48              		.size	CapSense_1_SsCalcCsxScanPeriod, .-CapSense_1_SsCalcCsxScanPeriod
  49              		.global	__aeabi_uidiv
  50              		.section	.text.CapSense_1_SsCSXStartSample,"ax",%progbits
  51              		.align	2
  52              		.code	16
  53              		.thumb_func
  54              		.type	CapSense_1_SsCSXStartSample, %function
  55              	CapSense_1_SsCSXStartSample:
  56              	.LFB10:
1576:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 tmpRegVal;
  57              		.loc 1 1576 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61 0000 10B5     		push	{r4, lr}
  62              		.cfi_def_cfa_offset 8
  63              		.cfi_offset 4, -8
  64              		.cfi_offset 14, -4
1579:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = (tmpRegVal & CapSense_1_IDAC_MOD_VAL_MASK) | CapSense_1_DEFAULT_CSD_IDACA_CFG;
  65              		.loc 1 1579 0
  66 0002 344B     		ldr	r3, .L10
  67 0004 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 35


  68 0006 344B     		ldr	r3, .L10+4
  69 0008 1B78     		ldrb	r3, [r3]
  70 000a D318     		adds	r3, r2, r3
  71 000c 5B7D     		ldrb	r3, [r3, #21]
  72              	.LVL4:
1580:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, tmpRegVal);
  73              		.loc 1 1580 0
  74 000e 334A     		ldr	r2, .L10+8
  75 0010 1343     		orrs	r3, r2
  76              	.LVL5:
1581:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  77              		.loc 1 1581 0
  78 0012 334A     		ldr	r2, .L10+12
  79 0014 1360     		str	r3, [r2]
1590:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
  80              		.loc 1 1590 0
  81 0016 0022     		movs	r2, #0
  82 0018 324B     		ldr	r3, .L10+16
  83              	.LVL6:
  84 001a 1A80     		strh	r2, [r3]
  85              	.LVL7:
  86              	.LBB4:
  87              	.LBB5:
1870:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1871:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1872:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
1873:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1874:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXOversample
1875:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1876:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1877:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1878:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Calculates the scan period of specific node.
1879:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1880:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1881:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Calculates the scan period of specific node that is used as maximum
1882:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   raw count at raw count inversion (CapSense_1_csxScanPeriod variable).
1883:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   The CapSense_1_curFlashWdgtPtr and CapSense_1_curRamSnsPtr
1884:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   must be configured to proper widget/sensor before calling this function.
1885:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1886:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \return
1887:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Returns the scan period of specific node (used as maximum raw count)
1888:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1889:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1890:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static uint32 CapSense_1_SsCSXOversample(void)
1891:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1892:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 temp;
1893:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1894:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
1895:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_RAM_WD_BASE_STRUCT * curRamWdgtBasePtr;
1896:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         curRamWdgtBasePtr = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_curFlashWdgtPtr->ptr2WdgtRa
1897:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = (uint32)(curRamWdgtBasePtr->snsClk);
1898:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
1899:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = (uint32)(CapSense_1_dsRam.snsCsxClk);
1900:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
1901:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1902:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
1903:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp  = LO16((uint32)CapSense_1_curRamSnsPtr->subConvNum * (temp - CapSense_1_CSX_DEADBAND_
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 36


1904:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
1905:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #if(CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1906:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             temp = (temp / (uint32)CapSense_1_dsRam.modCsxClk);
1907:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1908:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1909:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         temp = ((uint32)CapSense_1_curRamSnsPtr->subConvNum * CapSense_1_NUM_HALF_CYCLES * temp);
1910:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1911:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1912:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* return the scan period */
1913:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     return (temp);
1914:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1915:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
1916:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1917:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1918:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
1919:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /**
1920:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \cond SECTION_C_INTERRUPT
1921:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \addtogroup group_c_interrupt
1922:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \{
1923:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** */
1924:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
1925:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_CSXScanISR
1926:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
1927:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1928:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
1929:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This is an internal ISR function to handle the CSX sensing method operation.
1930:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1931:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
1932:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *  This handler covers the following functionality:
1933:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - Read the result of the measurement and store it into the corresponding register of
1934:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *     the data structure.
1935:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - If the Noise Metric functionality is enabled, then check the number of bad
1936:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *     conversions and repeat the scan of the current sensor of the number of bad
1937:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *     conversions is greater than the Noise Metric Threshold.
1938:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - Initiate the scan of the next sensor for multiple sensor scanning mode.
1939:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - Update the Status register in the data structure.
1940:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   - Switch the HW block to the default state if scanning of all the sensors is
1941:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *     completed.
1942:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
1943:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
1944:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** CY_ISR(CapSense_1_CSXScanISR)
1945:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
1946:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(0u != CapSense_1_CSX_NOISE_METRIC_EN)
1947:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 tmpRegVal;
1948:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (0u != CapSense_1_CSX_NOISE_METRIC_EN) */
1949:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(0u != CapSense_1_CSX_NOISE_METRIC_EN)
1950:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     static uint32 CapSense_1_resamplingCyclesCnt = CapSense_1_RESAMPLING_CYCLES_MAX_NUMBER;
1951:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (0u != CapSense_1_CSX_NOISE_METRIC_EN) */
1952:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1953:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CyIntDisable(CapSense_1_ISR_NUMBER);
1954:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1955:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_DEFAULT_CSD_INTR_CFG);
1956:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1957:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_csxRawCount  = (uint16)(CY_GET_REG32(CapSense_1_RESULT_VAL1_PTR) &\
1958:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                                          CapSense_1_RESULT_VAL1_VALUE_MASK);
1959:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1960:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_csxRawCount += (uint16)(CY_GET_REG32(CapSense_1_RESULT_VAL2_PTR) &\
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 37


1961:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                                          CapSense_1_RESULT_VAL2_VALUE_MASK);
1962:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1963:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* This workaround neded to prevent overflow in the SW register map. Cypress ID #234358 */
1964:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if(CapSense_1_csxRawCount > CapSense_1_csxScanPeriod)
1965:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1966:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxRawCount = CapSense_1_csxScanPeriod;
1967:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1968:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1969:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(0u != CapSense_1_CSX_NOISE_METRIC_EN)
1970:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     tmpRegVal = CY_GET_REG32(CapSense_1_RESULT_VAL1_PTR) >> CapSense_1_RESULT_VAL1_BAD_CONVS_SHIFT;
1971:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1972:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if((tmpRegVal > CapSense_1_CSX_NOISE_METRIC_TH) && (CapSense_1_resamplingCyclesCnt > 0uL))
1973:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1974:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SCAN_CSD_SEQ_START_CFG);
1975:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_resamplingCyclesCnt--;
1976:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1977:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     else
1978:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1979:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_CSXPostScanApiPtr();
1980:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_resamplingCyclesCnt = CapSense_1_RESAMPLING_CYCLES_MAX_NUMBER;
1981:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1982:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #else
1983:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_CSXPostScanApiPtr();
1984:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (0u != CapSense_1_CSX_NOISE_METRIC_EN) */
1985:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1986:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if(CapSense_1_NOT_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
1987:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
1988:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_DEFAULT_CSD_CONFIG_CFG);
1989:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_DEFAULT_CSD_CSDCMP_CFG);
1990:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, CapSense_1_DEFAULT_CSD_IDACA_CFG);
1991:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
1992:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1993:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CyIntEnable(CapSense_1_ISR_NUMBER);
1994:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
1995:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1996:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /** \}
1997:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \endcond */
1998:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
1999:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /*******************************************************************************
2000:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * Function Name: CapSense_1_SsCSXStartSampleExt
2001:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** ****************************************************************************//**
2002:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
2003:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \brief
2004:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   Starts the HW sequencer to perform the CSX conversion.
2005:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   specific widget.
2006:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
2007:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** * \details
2008:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *   This function covers the following functionality:
2009:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *      1. Configures the HW sequencer to perform the coarse initialization.
2010:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *      2. Waiting for completion of the coarse initialization.
2011:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *      3. Configures the HW sequencer to perform the normal conversion.
2012:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *      4. Starts the normal conversion
2013:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *
2014:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** *******************************************************************************/
2015:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** static CY_INLINE void CapSense_1_SsCSXStartSampleExt(void)
2016:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** {
2017:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 filterDelay;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 38


2018:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 watchdogCounter;
2019:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2020:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         uint32 sampleClkFreqHz;
2021:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2022:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2023:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the coarse initialization. */
2024:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_CONFIG_PTR,           CapSense_1_DEFAULT_CSD_CONFIG_CFG);
  88              		.loc 1 2024 0
  89 001c 324A     		ldr	r2, .L10+20
  90 001e 334B     		ldr	r3, .L10+24
  91 0020 1A60     		str	r2, [r3]
2025:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_HSCMP_PTR,            CapSense_1_PRECHARGE_CSD_HSCMP_CFG);
  92              		.loc 1 2025 0
  93 0022 0122     		movs	r2, #1
  94 0024 324B     		ldr	r3, .L10+28
  95 0026 1A60     		str	r2, [r3]
2026:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR,      CapSense_1_PRECHARGE_CSD_SW_HS_P_SEL_CFG);
  96              		.loc 1 2026 0
  97 0028 1123     		movs	r3, #17
  98 002a 324A     		ldr	r2, .L10+32
  99 002c 1360     		str	r3, [r2]
2027:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR,      CapSense_1_PRECHARGE_CSD_SW_HS_N_SEL_CFG);
 100              		.loc 1 2027 0
 101 002e 8021     		movs	r1, #128
 102 0030 4904     		lsls	r1, r1, #17
 103 0032 314A     		ldr	r2, .L10+36
 104 0034 1160     		str	r1, [r2]
2028:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR,       CapSense_1_PRECHARGE_CSD_SW_DSI_SEL_CFG);
 105              		.loc 1 2028 0
 106 0036 314A     		ldr	r2, .L10+40
 107 0038 1360     		str	r3, [r2]
2029:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,    CapSense_1_PRECHARGE_CSD_SW_SHIELD_SEL_CFG);
 108              		.loc 1 2029 0
 109 003a 0622     		movs	r2, #6
 110 003c 304B     		ldr	r3, .L10+44
 111 003e 1A60     		str	r2, [r3]
2030:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR,    CapSense_1_PRECHARGE_CSD_SW_FW_MOD_SEL_CFG);
 112              		.loc 1 2030 0
 113 0040 304A     		ldr	r2, .L10+48
 114 0042 314B     		ldr	r3, .L10+52
 115 0044 1A60     		str	r2, [r3]
2031:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,   CapSense_1_PRECHARGE_CSD_SW_FW_TANK_SEL_CFG);
 116              		.loc 1 2031 0
 117 0046 314A     		ldr	r2, .L10+56
 118 0048 314B     		ldr	r3, .L10+60
 119 004a 1A60     		str	r2, [r3]
2032:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2033:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2) &&\
2034:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****        (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
2035:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****        (CapSense_1_CSX_ANALOG_STARTUP_DELAY_US > 0uL)
2036:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CyDelayUs(CapSense_1_CSX_ANALOG_STARTUP_DELAY_US);
2037:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
2038:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2039:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SEQ_START_PTR,        CapSense_1_PRECHARGE_CSD_SEQ_START_CFG);
 120              		.loc 1 2039 0
 121 004c 314A     		ldr	r2, .L10+64
 122 004e 324B     		ldr	r3, .L10+68
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 39


 123 0050 1A60     		str	r2, [r3]
 124              	.LVL8:
2040:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2041:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Wait for the HSCMP trigger and retutn the sequencer to the IDLE state. */
2042:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     watchdogCounter = CapSense_1_CSX_PRECHARGE_WATCHDOG_CYCLES_NUM;
 125              		.loc 1 2042 0
 126 0052 F023     		movs	r3, #240
 127 0054 9B00     		lsls	r3, r3, #2
 128 0056 00E0     		b	.L3
 129              	.LVL9:
 130              	.L5:
2043:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     while((0u != (CapSense_1_SEQ_START_START_MASK & CY_GET_REG32(CapSense_1_SEQ_START_PTR))) && (0u
2044:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
2045:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         watchdogCounter--;
 131              		.loc 1 2045 0
 132 0058 013B     		subs	r3, r3, #1
 133              	.LVL10:
 134              	.L3:
2043:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     while((0u != (CapSense_1_SEQ_START_START_MASK & CY_GET_REG32(CapSense_1_SEQ_START_PTR))) && (0u
 135              		.loc 1 2043 0
 136 005a 2F4A     		ldr	r2, .L10+68
 137 005c 1268     		ldr	r2, [r2]
 138 005e D207     		lsls	r2, r2, #31
 139 0060 01D5     		bpl	.L4
 140 0062 002B     		cmp	r3, #0
 141 0064 F8D1     		bne	.L5
 142              	.L4:
2046:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
2047:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2048:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Reset the sequencer to the IDLE state if HSCMP not triggered till watchdog period is out. */
2049:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     if(0u != (CapSense_1_SEQ_START_START_MASK & CY_GET_REG32(CapSense_1_SEQ_START_PTR)))
 143              		.loc 1 2049 0
 144 0066 2C4B     		ldr	r3, .L10+68
 145              	.LVL11:
 146 0068 1B68     		ldr	r3, [r3]
 147 006a DB07     		lsls	r3, r3, #31
 148 006c 03D5     		bpl	.L6
2050:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
2051:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR,  CapSense_1_DEFAULT_CSD_SEQ_START_CFG);
 149              		.loc 1 2051 0
 150 006e C222     		movs	r2, #194
 151 0070 9200     		lsls	r2, r2, #2
 152 0072 294B     		ldr	r3, .L10+68
 153 0074 1A60     		str	r2, [r3]
 154              	.L6:
2052:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
2053:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2054:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
2055:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_1_dsRam.modCsxClk;
 155              		.loc 1 2055 0
 156 0076 294B     		ldr	r3, .L10+72
 157 0078 197F     		ldrb	r1, [r3, #28]
 158 007a 2948     		ldr	r0, .L10+76
 159 007c FFF7FEFF 		bl	__aeabi_uidiv
 160              	.LVL12:
2056:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         if(sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_12MHZ)
 161              		.loc 1 2056 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 40


 162 0080 284B     		ldr	r3, .L10+80
 163 0082 9842     		cmp	r0, r3
 164 0084 04D9     		bls	.L8
2057:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
2058:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             filterDelay = CapSense_1_CONFIG_FILTER_DELAY_12MHZ;
2059:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
2060:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else if(sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_24MHZ)
 165              		.loc 1 2060 0
 166 0086 284B     		ldr	r3, .L10+84
 167 0088 9842     		cmp	r0, r3
 168 008a 03D8     		bhi	.L9
2061:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
2062:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             filterDelay = CapSense_1_CONFIG_FILTER_DELAY_24MHZ;
 169              		.loc 1 2062 0
 170 008c 3023     		movs	r3, #48
 171 008e 02E0     		b	.L7
 172              	.L8:
2058:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 173              		.loc 1 2058 0
 174 0090 2023     		movs	r3, #32
 175 0092 00E0     		b	.L7
 176              	.L9:
2063:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
2064:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         else
2065:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
2066:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             filterDelay = CapSense_1_CONFIG_FILTER_DELAY_48MHZ;
 177              		.loc 1 2066 0
 178 0094 4023     		movs	r3, #64
 179              	.L7:
 180              	.LVL13:
2067:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
2068:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
2069:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         filterDelay = CapSense_1_CONFIG_FILTER_DELAY_12MHZ;
2070:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
2071:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2072:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** /* Configure the HW sequencer to perform the normal conversion. */
2073:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_PRESCAN_CSD_CONFIG_CFG | filterDelay);
 181              		.loc 1 2073 0
 182 0096 254A     		ldr	r2, .L10+88
 183 0098 1343     		orrs	r3, r2
 184              	.LVL14:
 185 009a 144A     		ldr	r2, .L10+24
 186 009c 1360     		str	r3, [r2]
2074:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_PRESCAN_CSD_CSDCMP_CFG);
 187              		.loc 1 2074 0
 188 009e 244A     		ldr	r2, .L10+92
 189 00a0 244B     		ldr	r3, .L10+96
 190 00a2 1A60     		str	r2, [r3]
2075:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_HSCMP_PTR, CapSense_1_DEFAULT_CSD_HSCMP_CFG);
 191              		.loc 1 2075 0
 192 00a4 0023     		movs	r3, #0
 193 00a6 1249     		ldr	r1, .L10+28
 194 00a8 0B60     		str	r3, [r1]
2076:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 195              		.loc 1 2076 0
 196 00aa 1249     		ldr	r1, .L10+32
 197 00ac 0B60     		str	r3, [r1]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 41


2077:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 198              		.loc 1 2077 0
 199 00ae 1249     		ldr	r1, .L10+36
 200 00b0 0B60     		str	r3, [r1]
2078:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_DSI_SEL_CFG);
 201              		.loc 1 2078 0
 202 00b2 2320     		movs	r0, #35
 203              	.LVL15:
 204 00b4 1149     		ldr	r1, .L10+40
 205 00b6 0860     		str	r0, [r1]
2079:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 206              		.loc 1 2079 0
 207 00b8 1149     		ldr	r1, .L10+44
 208 00ba 0B60     		str	r3, [r1]
2080:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_FW_MOD_SEL_CFG);
 209              		.loc 1 2080 0
 210 00bc 1249     		ldr	r1, .L10+52
 211 00be 0B60     		str	r3, [r1]
2081:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR, CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 212              		.loc 1 2081 0
 213 00c0 1349     		ldr	r1, .L10+60
 214 00c2 0B60     		str	r3, [r1]
2082:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2083:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Clear all pending interrupts of CSD block */
2084:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_DEFAULT_CSD_INTR_CFG);
 215              		.loc 1 2084 0
 216 00c4 8321     		movs	r1, #131
 217 00c6 4900     		lsls	r1, r1, #1
 218 00c8 1B4B     		ldr	r3, .L10+100
 219 00ca 1960     		str	r1, [r3]
2085:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
2086:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Start the normal conversion. */
2087:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SCAN_CSD_SEQ_START_CFG);
 220              		.loc 1 2087 0
 221 00cc 124B     		ldr	r3, .L10+68
 222 00ce 1A60     		str	r2, [r3]
 223              	.LBE5:
 224              	.LBE4:
1597:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #else
 225              		.loc 1 1597 0
 226              		@ sp needed
 227 00d0 10BD     		pop	{r4, pc}
 228              	.L11:
 229 00d2 C046     		.align	2
 230              	.L10:
 231 00d4 00000000 		.word	CapSense_1_curRamSnsPtr
 232 00d8 00000000 		.word	CapSense_1_scanFreqIndex
 233 00dc 800E4301 		.word	21171840
 234 00e0 C0010B40 		.word	1074463168
 235 00e4 00000000 		.word	.LANCHOR0
 236 00e8 20100480 		.word	-2147217376
 237 00ec 00000B40 		.word	1074462720
 238 00f0 80010B40 		.word	1074463104
 239 00f4 80020B40 		.word	1074463360
 240 00f8 84020B40 		.word	1074463364
 241 00fc C0020B40 		.word	1074463424
 242 0100 88020B40 		.word	1074463368
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 42


 243 0104 01010100 		.word	65793
 244 0108 B0020B40 		.word	1074463408
 245 010c 10100000 		.word	4112
 246 0110 B4020B40 		.word	1074463412
 247 0114 03030000 		.word	771
 248 0118 40030B40 		.word	1074463552
 249 011c 00000000 		.word	CapSense_1_dsRam
 250 0120 006CDC02 		.word	48000000
 251 0124 001BB700 		.word	12000000
 252 0128 00366E01 		.word	24000000
 253 012c 00100C80 		.word	-2146693120
 254 0130 01030000 		.word	769
 255 0134 8C010B40 		.word	1074463116
 256 0138 F0000B40 		.word	1074462960
 257              		.cfi_endproc
 258              	.LFE10:
 259              		.size	CapSense_1_SsCSXStartSample, .-CapSense_1_SsCSXStartSample
 260              		.section	.text.CapSense_1_SsCSXPostSingleScan,"ax",%progbits
 261              		.align	2
 262              		.code	16
 263              		.thumb_func
 264              		.type	CapSense_1_SsCSXPostSingleScan, %function
 265              	CapSense_1_SsCSXPostSingleScan:
 266              	.LFB8:
1374:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
 267              		.loc 1 1374 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
1385:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
 275              		.loc 1 1385 0
 276 0002 124B     		ldr	r3, .L15
 277 0004 1C68     		ldr	r4, [r3]
 278 0006 1249     		ldr	r1, .L15+4
 279 0008 0B78     		ldrb	r3, [r1]
 280 000a 1248     		ldr	r0, .L15+8
 281 000c 4288     		ldrh	r2, [r0, #2]
 282 000e 0088     		ldrh	r0, [r0]
 283 0010 5B00     		lsls	r3, r3, #1
 284 0012 121A     		subs	r2, r2, r0
 285 0014 1A53     		strh	r2, [r3, r4]
1390:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 286              		.loc 1 1390 0
 287 0016 0878     		ldrb	r0, [r1]
 288 0018 0128     		cmp	r0, #1
 289 001a 07D8     		bhi	.L13
1393:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 290              		.loc 1 1393 0
 291 001c 0130     		adds	r0, r0, #1
 292 001e C0B2     		uxtb	r0, r0
 293 0020 0870     		strb	r0, [r1]
1396:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
 294              		.loc 1 1396 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 43


 295 0022 FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 296              	.LVL16:
1401:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 297              		.loc 1 1401 0
 298 0026 FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 299              	.LVL17:
 300 002a 0DE0     		b	.L12
 301              	.L13:
1408:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 302              		.loc 1 1408 0
 303 002c 0022     		movs	r2, #0
 304 002e 084B     		ldr	r3, .L15+4
 305 0030 1A70     		strb	r2, [r3]
1411:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
 306              		.loc 1 1411 0
 307 0032 0020     		movs	r0, #0
 308 0034 FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 309              	.LVL18:
1422:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
 310              		.loc 1 1422 0
 311 0038 074B     		ldr	r3, .L15+12
 312 003a 1A89     		ldrh	r2, [r3, #8]
 313 003c 0132     		adds	r2, r2, #1
 314 003e 1A81     		strh	r2, [r3, #8]
1423:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 315              		.loc 1 1423 0
 316 0040 DA68     		ldr	r2, [r3, #12]
 317 0042 8021     		movs	r1, #128
 318 0044 8A43     		bics	r2, r1
 319 0046 DA60     		str	r2, [r3, #12]
 320              	.L12:
1429:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 321              		.loc 1 1429 0
 322              		@ sp needed
 323 0048 10BD     		pop	{r4, pc}
 324              	.L16:
 325 004a C046     		.align	2
 326              	.L15:
 327 004c 00000000 		.word	CapSense_1_curRamSnsPtr
 328 0050 00000000 		.word	CapSense_1_scanFreqIndex
 329 0054 00000000 		.word	.LANCHOR0
 330 0058 00000000 		.word	CapSense_1_dsRam
 331              		.cfi_endproc
 332              	.LFE8:
 333              		.size	CapSense_1_SsCSXPostSingleScan, .-CapSense_1_SsCSXPostSingleScan
 334              		.section	.text.CapSense_1_CSXScanISR,"ax",%progbits
 335              		.align	2
 336              		.global	CapSense_1_CSXScanISR
 337              		.code	16
 338              		.thumb_func
 339              		.type	CapSense_1_CSXScanISR, %function
 340              	CapSense_1_CSXScanISR:
 341              	.LFB17:
1945:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #if(0u != CapSense_1_CSX_NOISE_METRIC_EN)
 342              		.loc 1 1945 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 44


 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346 0000 10B5     		push	{r4, lr}
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 4, -8
 349              		.cfi_offset 14, -4
1953:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 350              		.loc 1 1953 0
 351 0002 0A20     		movs	r0, #10
 352 0004 FFF7FEFF 		bl	CyIntDisable
 353              	.LVL19:
1955:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 354              		.loc 1 1955 0
 355 0008 8322     		movs	r2, #131
 356 000a 5200     		lsls	r2, r2, #1
 357 000c 154B     		ldr	r3, .L20
 358 000e 1A60     		str	r2, [r3]
1957:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                                          CapSense_1_RESULT_VAL1_VALUE_MASK);
 359              		.loc 1 1957 0
 360 0010 154B     		ldr	r3, .L20+4
 361 0012 1B68     		ldr	r3, [r3]
 362 0014 9BB2     		uxth	r3, r3
 363 0016 154A     		ldr	r2, .L20+8
 364 0018 1380     		strh	r3, [r2]
1960:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                                                          CapSense_1_RESULT_VAL2_VALUE_MASK);
 365              		.loc 1 1960 0
 366 001a 154B     		ldr	r3, .L20+12
 367 001c 1B68     		ldr	r3, [r3]
 368 001e 9BB2     		uxth	r3, r3
 369 0020 1188     		ldrh	r1, [r2]
 370 0022 CB18     		adds	r3, r1, r3
 371 0024 9BB2     		uxth	r3, r3
 372 0026 1380     		strh	r3, [r2]
1964:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
 373              		.loc 1 1964 0
 374 0028 1188     		ldrh	r1, [r2]
 375 002a 89B2     		uxth	r1, r1
 376 002c 5388     		ldrh	r3, [r2, #2]
 377 002e 9BB2     		uxth	r3, r3
 378 0030 9942     		cmp	r1, r3
 379 0032 02D9     		bls	.L18
1966:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
 380              		.loc 1 1966 0
 381 0034 5388     		ldrh	r3, [r2, #2]
 382 0036 9BB2     		uxth	r3, r3
 383 0038 1380     		strh	r3, [r2]
 384              	.L18:
1983:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** #endif /* (0u != CapSense_1_CSX_NOISE_METRIC_EN) */
 385              		.loc 1 1983 0
 386 003a 0E4B     		ldr	r3, .L20+16
 387 003c 1B68     		ldr	r3, [r3]
 388 003e 9847     		blx	r3
 389              	.LVL20:
1986:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
 390              		.loc 1 1986 0
 391 0040 0D4B     		ldr	r3, .L20+20
 392 0042 DB68     		ldr	r3, [r3, #12]
 393 0044 1B06     		lsls	r3, r3, #24
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 45


 394 0046 09D4     		bmi	.L19
1988:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_DEFAULT_CSD_CSDCMP_CFG);
 395              		.loc 1 1988 0
 396 0048 0C4A     		ldr	r2, .L20+24
 397 004a 0D4B     		ldr	r3, .L20+28
 398 004c 1A60     		str	r2, [r3]
1989:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, CapSense_1_DEFAULT_CSD_IDACA_CFG);
 399              		.loc 1 1989 0
 400 004e C022     		movs	r2, #192
 401 0050 9200     		lsls	r2, r2, #2
 402 0052 0C4B     		ldr	r3, .L20+32
 403 0054 1A60     		str	r2, [r3]
1990:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
 404              		.loc 1 1990 0
 405 0056 0C4A     		ldr	r2, .L20+36
 406 0058 0C4B     		ldr	r3, .L20+40
 407 005a 1A60     		str	r2, [r3]
 408              	.L19:
1993:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 409              		.loc 1 1993 0
 410 005c 0A20     		movs	r0, #10
 411 005e FFF7FEFF 		bl	CyIntEnable
 412              	.LVL21:
1994:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 413              		.loc 1 1994 0
 414              		@ sp needed
 415 0062 10BD     		pop	{r4, pc}
 416              	.L21:
 417              		.align	2
 418              	.L20:
 419 0064 F0000B40 		.word	1074462960
 420 0068 D0000B40 		.word	1074462928
 421 006c 00000000 		.word	.LANCHOR0
 422 0070 D4000B40 		.word	1074462932
 423 0074 00000000 		.word	.LANCHOR1
 424 0078 00000000 		.word	CapSense_1_dsRam
 425 007c 20100480 		.word	-2147217376
 426 0080 00000B40 		.word	1074462720
 427 0084 8C010B40 		.word	1074463116
 428 0088 800E4301 		.word	21171840
 429 008c C0010B40 		.word	1074463168
 430              		.cfi_endproc
 431              	.LFE17:
 432              		.size	CapSense_1_CSXScanISR, .-CapSense_1_CSXScanISR
 433              		.section	.text.CapSense_1_CSXInitialize,"ax",%progbits
 434              		.align	2
 435              		.global	CapSense_1_CSXInitialize
 436              		.code	16
 437              		.thumb_func
 438              		.type	CapSense_1_CSXInitialize, %function
 439              	CapSense_1_CSXInitialize:
 440              	.LFB1:
 149:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
 441              		.loc 1 149 0
 442              		.cfi_startproc
 443              		@ args = 0, pretend = 0, frame = 0
 444              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 46


 445 0000 10B5     		push	{r4, lr}
 446              		.cfi_def_cfa_offset 8
 447              		.cfi_offset 4, -8
 448              		.cfi_offset 14, -4
 154:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_SET_PTR,         CapSense_1_DEFAULT_CSD_INTR_SET_CFG);
 449              		.loc 1 154 0
 450 0002 8322     		movs	r2, #131
 451 0004 5200     		lsls	r2, r2, #1
 452 0006 494B     		ldr	r3, .L23
 453 0008 1A60     		str	r2, [r3]
 155:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_INTR_MASK_PTR,        CapSense_1_DEFAULT_CSD_INTR_MASK_CFG);
 454              		.loc 1 155 0
 455 000a 0024     		movs	r4, #0
 456 000c 484B     		ldr	r3, .L23+4
 457 000e 1C60     		str	r4, [r3]
 156:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR,            CapSense_1_DEFAULT_CSD_HSCMP_CFG);
 458              		.loc 1 156 0
 459 0010 053A     		subs	r2, r2, #5
 460 0012 FF3A     		subs	r2, r2, #255
 461 0014 474B     		ldr	r3, .L23+8
 462 0016 1A60     		str	r2, [r3]
 157:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_AMBUF_PTR,            CapSense_1_DEFAULT_CSD_AMBUF_CFG);
 463              		.loc 1 157 0
 464 0018 474B     		ldr	r3, .L23+12
 465 001a 1C60     		str	r4, [r3]
 158:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_REFGEN_PTR,           CapSense_1_DEFAULT_CSD_REFGEN_CFG);
 466              		.loc 1 158 0
 467 001c 474B     		ldr	r3, .L23+16
 468 001e 1C60     		str	r4, [r3]
 159:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR,           CapSense_1_DEFAULT_CSD_CSDCMP_CFG);
 469              		.loc 1 159 0
 470 0020 474A     		ldr	r2, .L23+20
 471 0022 484B     		ldr	r3, .L23+24
 472 0024 1A60     		str	r2, [r3]
 160:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_MOD_PTR,         CapSense_1_DEFAULT_CSD_IDACA_CFG);
 473              		.loc 1 160 0
 474 0026 C022     		movs	r2, #192
 475 0028 9200     		lsls	r2, r2, #2
 476 002a 474B     		ldr	r3, .L23+28
 477 002c 1A60     		str	r2, [r3]
 161:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 478              		.loc 1 161 0
 479 002e 474A     		ldr	r2, .L23+32
 480 0030 474B     		ldr	r3, .L23+36
 481 0032 1A60     		str	r2, [r3]
 167:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR,     CapSense_1_DEFAULT_CSD_SENSE_PERIOD_CFG);
 482              		.loc 1 167 0
 483 0034 474A     		ldr	r2, .L23+40
 484 0036 484B     		ldr	r3, .L23+44
 485 0038 1A60     		str	r2, [r3]
 168:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_DUTY_PTR,       CapSense_1_DEFAULT_CSD_SENSE_DUTY_CFG);
 486              		.loc 1 168 0
 487 003a A022     		movs	r2, #160
 488 003c 474B     		ldr	r3, .L23+48
 489 003e 1A60     		str	r2, [r3]
 169:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR,      CapSense_1_DEFAULT_CSD_SW_HS_P_SEL_CFG);
 490              		.loc 1 169 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 47


 491 0040 474B     		ldr	r3, .L23+52
 492 0042 1C60     		str	r4, [r3]
 170:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR,      CapSense_1_DEFAULT_CSD_SW_HS_N_SEL_CFG);
 493              		.loc 1 170 0
 494 0044 474B     		ldr	r3, .L23+56
 495 0046 1C60     		str	r4, [r3]
 171:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,    CapSense_1_DEFAULT_CSD_SW_SHIELD_SEL_CFG);
 496              		.loc 1 171 0
 497 0048 474B     		ldr	r3, .L23+60
 498 004a 1C60     		str	r4, [r3]
 172:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_AMUXBUF_SEL_CFG);
 499              		.loc 1 172 0
 500 004c 474B     		ldr	r3, .L23+64
 501 004e 1C60     		str	r4, [r3]
 173:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 502              		.loc 1 173 0
 503 0050 474B     		ldr	r3, .L23+68
 504 0052 1C60     		str	r4, [r3]
 175:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_SW_BYP_SEL_PTR);
 505              		.loc 1 175 0
 506 0054 FFF7FEFF 		bl	CyEnterCriticalSection
 507              	.LVL22:
 176:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~(CapSense_1_SW_BYP_SEL_SW_BYA_MASK);
 508              		.loc 1 176 0
 509 0058 464A     		ldr	r2, .L23+72
 510 005a 1168     		ldr	r1, [r2]
 511              	.LVL23:
 177:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= CapSense_1_DEFAULT_CSD_SW_BYP_SEL_CFG;
 512              		.loc 1 177 0
 513 005c 464B     		ldr	r3, .L23+76
 514 005e 0B40     		ands	r3, r1
 515              	.LVL24:
 178:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR,       tmpRegVal);
 516              		.loc 1 178 0
 517 0060 8021     		movs	r1, #128
 518 0062 4901     		lsls	r1, r1, #5
 519 0064 0B43     		orrs	r3, r1
 520              	.LVL25:
 179:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 521              		.loc 1 179 0
 522 0066 1360     		str	r3, [r2]
 180:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 523              		.loc 1 180 0
 524 0068 FFF7FEFF 		bl	CyExitCriticalSection
 525              	.LVL26:
 182:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_N_SEL_PTR,     CapSense_1_DEFAULT_CSD_SW_CMP_N_SEL_CFG);
 526              		.loc 1 182 0
 527 006c 3222     		movs	r2, #50
 528 006e 434B     		ldr	r3, .L23+80
 529 0070 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 530              		.loc 1 183 0
 531 0072 8022     		movs	r2, #128
 532 0074 5204     		lsls	r2, r2, #17
 533 0076 424B     		ldr	r3, .L23+84
 534 0078 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 48


 535              		.loc 1 185 0
 536 007a FFF7FEFF 		bl	CyEnterCriticalSection
 537              	.LVL27:
 186:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_SW_REFGEN_SEL_SW_MASK;
 538              		.loc 1 186 0
 539 007e 414A     		ldr	r2, .L23+88
 540 0080 1168     		ldr	r1, [r2]
 541              	.LVL28:
 187:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= CapSense_1_DEFAULT_CSD_SW_REFGEN_SEL_CFG;
 542              		.loc 1 187 0
 543 0082 414B     		ldr	r3, .L23+92
 544 0084 0B40     		ands	r3, r1
 545              	.LVL29:
 188:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR,    tmpRegVal);
 546              		.loc 1 188 0
 547 0086 8021     		movs	r1, #128
 548 0088 4905     		lsls	r1, r1, #21
 549 008a 0B43     		orrs	r3, r1
 550              	.LVL30:
 189:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 551              		.loc 1 189 0
 552 008c 1360     		str	r3, [r2]
 190:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 553              		.loc 1 190 0
 554 008e FFF7FEFF 		bl	CyExitCriticalSection
 555              	.LVL31:
 192:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL_CFG);
 556              		.loc 1 192 0
 557 0092 3E4B     		ldr	r3, .L23+96
 558 0094 1C60     		str	r4, [r3]
 193:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR,       CapSense_1_DEFAULT_CSD_SW_DSI_SEL_CFG);
 559              		.loc 1 193 0
 560 0096 3E4B     		ldr	r3, .L23+100
 561 0098 1C60     		str	r4, [r3]
 194:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_TIME_PTR,         CapSense_1_DEFAULT_CSD_SEQ_TIME_CFG);
 562              		.loc 1 194 0
 563 009a 2322     		movs	r2, #35
 564 009c 3D4B     		ldr	r3, .L23+104
 565 009e 1A60     		str	r2, [r3]
 195:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_INIT_CNT_PTR,     CapSense_1_DEFAULT_CSD_SEQ_INIT_CNT_CFG);
 566              		.loc 1 195 0
 567 00a0 143A     		subs	r2, r2, #20
 568 00a2 3D4B     		ldr	r3, .L23+108
 569 00a4 1A60     		str	r2, [r3]
 196:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR,     CapSense_1_DEFAULT_CSD_SEQ_NORM_CNT_CFG);
 570              		.loc 1 196 0
 571 00a6 0B3A     		subs	r2, r2, #11
 572 00a8 3C4B     		ldr	r3, .L23+112
 573 00aa 1A60     		str	r2, [r3]
 197:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_ADC_CTL_PTR,          CapSense_1_DEFAULT_CSD_ADC_CTL_CFG);
 574              		.loc 1 197 0
 575 00ac 3C4B     		ldr	r3, .L23+116
 576 00ae 1C60     		str	r4, [r3]
 198:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR,        CapSense_1_DEFAULT_CSD_SEQ_START_CFG);
 577              		.loc 1 198 0
 578 00b0 3C4B     		ldr	r3, .L23+120
 579 00b2 1C60     		str	r4, [r3]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 49


 199:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR,           CapSense_1_DEFAULT_CSD_CONFIG_CFG);
 580              		.loc 1 199 0
 581 00b4 C222     		movs	r2, #194
 582 00b6 9200     		lsls	r2, r2, #2
 583 00b8 3B4B     		ldr	r3, .L23+124
 584 00ba 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 585              		.loc 1 200 0
 586 00bc 3B4A     		ldr	r2, .L23+128
 587 00be 3C4B     		ldr	r3, .L23+132
 588 00c0 1A60     		str	r2, [r3]
 202:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 589              		.loc 1 202 0
 590 00c2 FFF7FEFF 		bl	CapSense_1_BistDischargeExtCapacitors
 591              	.LVL32:
 204:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintA_PC_PTR);
 592              		.loc 1 204 0
 593 00c6 FFF7FEFF 		bl	CyEnterCriticalSection
 594              	.LVL33:
 205:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintA_SHIFT * CapSense_1_GPIO_PC_BIT
 595              		.loc 1 205 0
 596 00ca 3A4C     		ldr	r4, .L23+136
 597 00cc 2268     		ldr	r2, [r4]
 598              	.LVL34:
 206:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_PC_PTR, tmpRegVal);
 599              		.loc 1 206 0
 600 00ce 3A4B     		ldr	r3, .L23+140
 601 00d0 1340     		ands	r3, r2
 602              	.LVL35:
 207:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 603              		.loc 1 207 0
 604 00d2 2360     		str	r3, [r4]
 208:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 605              		.loc 1 208 0
 606 00d4 FFF7FEFF 		bl	CyExitCriticalSection
 607              	.LVL36:
 210:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintB_PC_PTR);
 608              		.loc 1 210 0
 609 00d8 FFF7FEFF 		bl	CyEnterCriticalSection
 610              	.LVL37:
 211:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= (~(CapSense_1_GPIO_PC_MASK << (CapSense_1_CintB__SHIFT * CapSense_1_GPIO_PC_BI
 611              		.loc 1 211 0
 612 00dc 2268     		ldr	r2, [r4]
 613              	.LVL38:
 212:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_PC_PTR, tmpRegVal);
 614              		.loc 1 212 0
 615 00de 374B     		ldr	r3, .L23+144
 616 00e0 1340     		ands	r3, r2
 617              	.LVL39:
 213:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 618              		.loc 1 213 0
 619 00e2 2360     		str	r3, [r4]
 214:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 620              		.loc 1 214 0
 621 00e4 FFF7FEFF 		bl	CyExitCriticalSection
 622              	.LVL40:
 217:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 50


 623              		.loc 1 217 0
 624 00e8 FFF7FEFF 		bl	CyEnterCriticalSection
 625              	.LVL41:
 218:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_CintA_HSIOM_MASK;
 626              		.loc 1 218 0
 627 00ec 344C     		ldr	r4, .L23+148
 628 00ee 2268     		ldr	r2, [r4]
 629              	.LVL42:
 219:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintA_HSIOM_SHIFT);
 630              		.loc 1 219 0
 631 00f0 344B     		ldr	r3, .L23+152
 632 00f2 1340     		ands	r3, r2
 633              	.LVL43:
 220:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, tmpRegVal);
 634              		.loc 1 220 0
 635 00f4 C022     		movs	r2, #192
 636 00f6 D200     		lsls	r2, r2, #3
 637 00f8 1343     		orrs	r3, r2
 638              	.LVL44:
 221:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 639              		.loc 1 221 0
 640 00fa 2360     		str	r3, [r4]
 222:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 641              		.loc 1 222 0
 642 00fc FFF7FEFF 		bl	CyExitCriticalSection
 643              	.LVL45:
 225:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 644              		.loc 1 225 0
 645 0100 FFF7FEFF 		bl	CyEnterCriticalSection
 646              	.LVL46:
 226:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal &= ~CapSense_1_CintB_HSIOM_MASK;
 647              		.loc 1 226 0
 648 0104 2268     		ldr	r2, [r4]
 649              	.LVL47:
 227:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CintB_HSIOM_SHIFT);
 650              		.loc 1 227 0
 651 0106 304B     		ldr	r3, .L23+156
 652 0108 1340     		ands	r3, r2
 653              	.LVL48:
 228:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, tmpRegVal);
 654              		.loc 1 228 0
 655 010a C022     		movs	r2, #192
 656 010c D201     		lsls	r2, r2, #7
 657 010e 1343     		orrs	r3, r2
 658              	.LVL49:
 229:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CyExitCriticalSection(interruptState);
 659              		.loc 1 229 0
 660 0110 2360     		str	r3, [r4]
 230:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 661              		.loc 1 230 0
 662 0112 FFF7FEFF 		bl	CyExitCriticalSection
 663              	.LVL50:
 232:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 664              		.loc 1 232 0
 665 0116 2D4B     		ldr	r3, .L23+160
 666 0118 187F     		ldrb	r0, [r3, #28]
 667 011a FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 51


 668              	.LVL51:
 239:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 669              		.loc 1 239 0
 670 011e FFF7FEFF 		bl	CapSense_1_SsSetIOsInDefaultState
 671              	.LVL52:
 298:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 672              		.loc 1 298 0
 673 0122 2B48     		ldr	r0, .L23+164
 674 0124 FFF7FEFF 		bl	CapSense_1_SsIsrInitialize
 675              	.LVL53:
 299:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 676              		.loc 1 299 0
 677              		@ sp needed
 678 0128 10BD     		pop	{r4, pc}
 679              	.L24:
 680 012a C046     		.align	2
 681              	.L23:
 682 012c F0000B40 		.word	1074462960
 683 0130 F4000B40 		.word	1074462964
 684 0134 F8000B40 		.word	1074462968
 685 0138 80010B40 		.word	1074463104
 686 013c 84010B40 		.word	1074463108
 687 0140 411F0000 		.word	8001
 688 0144 88010B40 		.word	1074463112
 689 0148 8C010B40 		.word	1074463116
 690 014c 800E4301 		.word	21171840
 691 0150 C0010B40 		.word	1074463168
 692 0154 AA000500 		.word	327850
 693 0158 F0010B40 		.word	1074463216
 694 015c 00020B40 		.word	1074463232
 695 0160 04020B40 		.word	1074463236
 696 0164 80020B40 		.word	1074463360
 697 0168 84020B40 		.word	1074463364
 698 016c 88020B40 		.word	1074463368
 699 0170 90020B40 		.word	1074463376
 700 0174 94020B40 		.word	1074463380
 701 0178 FFEFFFFF 		.word	-4097
 702 017c A0020B40 		.word	1074463392
 703 0180 A4020B40 		.word	1074463396
 704 0184 A8020B40 		.word	1074463400
 705 0188 EEFFFEEE 		.word	-285278226
 706 018c B0020B40 		.word	1074463408
 707 0190 B4020B40 		.word	1074463412
 708 0194 C0020B40 		.word	1074463424
 709 0198 00030B40 		.word	1074463488
 710 019c 10030B40 		.word	1074463504
 711 01a0 14030B40 		.word	1074463508
 712 01a4 20030B40 		.word	1074463520
 713 01a8 40030B40 		.word	1074463552
 714 01ac 20100480 		.word	-2147217376
 715 01b0 00000B40 		.word	1074462720
 716 01b4 08040440 		.word	1074005000
 717 01b8 3FFEFFFF 		.word	-449
 718 01bc FFF1FFFF 		.word	-3585
 719 01c0 00040240 		.word	1073873920
 720 01c4 FFF0FFFF 		.word	-3841
 721 01c8 FF0FFFFF 		.word	-61441
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 52


 722 01cc 00000000 		.word	CapSense_1_dsRam
 723 01d0 00000000 		.word	CapSense_1_CSXScanISR
 724              		.cfi_endproc
 725              	.LFE1:
 726              		.size	CapSense_1_CSXInitialize, .-CapSense_1_CSXInitialize
 727              		.section	.text.CapSense_1_CSXScanExt,"ax",%progbits
 728              		.align	2
 729              		.global	CapSense_1_CSXScanExt
 730              		.code	16
 731              		.thumb_func
 732              		.type	CapSense_1_CSXScanExt, %function
 733              	CapSense_1_CSXScanExt:
 734              	.LFB6:
 871:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Reset multi-frequency scan channel if enabled */
 735              		.loc 1 871 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739 0000 10B5     		push	{r4, lr}
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 4, -8
 742              		.cfi_offset 14, -4
 874:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif
 743              		.loc 1 874 0
 744 0002 0022     		movs	r2, #0
 745 0004 064B     		ldr	r3, .L26
 746 0006 1A70     		strb	r2, [r3]
 892:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 747              		.loc 1 892 0
 748 0008 064A     		ldr	r2, .L26+4
 749 000a D168     		ldr	r1, [r2, #12]
 750 000c 8023     		movs	r3, #128
 751 000e 0B43     		orrs	r3, r1
 752 0010 D360     		str	r3, [r2, #12]
 897:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 753              		.loc 1 897 0
 754 0012 0A20     		movs	r0, #10
 755 0014 FFF7FEFF 		bl	CyDelayUs
 756              	.LVL54:
 899:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 757              		.loc 1 899 0
 758 0018 FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 759              	.LVL55:
 901:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 760              		.loc 1 901 0
 761              		@ sp needed
 762 001c 10BD     		pop	{r4, pc}
 763              	.L27:
 764 001e C046     		.align	2
 765              	.L26:
 766 0020 00000000 		.word	CapSense_1_scanFreqIndex
 767 0024 00000000 		.word	CapSense_1_dsRam
 768              		.cfi_endproc
 769              	.LFE6:
 770              		.size	CapSense_1_CSXScanExt, .-CapSense_1_CSXScanExt
 771              		.section	.text.CapSense_1_CSXCalibrateWidget,"ax",%progbits
 772              		.align	2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 53


 773              		.global	CapSense_1_CSXCalibrateWidget
 774              		.code	16
 775              		.thumb_func
 776              		.type	CapSense_1_CSXCalibrateWidget, %function
 777              	CapSense_1_CSXCalibrateWidget:
 778              	.LFB9:
1459:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* Variable to calculate raw count target */
 779              		.loc 1 1459 0
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 8
 782              		@ frame_needed = 0, uses_anonymous_args = 0
 783              	.LVL56:
 784 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 785              		.cfi_def_cfa_offset 20
 786              		.cfi_offset 4, -20
 787              		.cfi_offset 5, -16
 788              		.cfi_offset 6, -12
 789              		.cfi_offset 7, -8
 790              		.cfi_offset 14, -4
 791 0002 4746     		mov	r7, r8
 792 0004 80B4     		push	{r7}
 793              		.cfi_def_cfa_offset 24
 794              		.cfi_offset 8, -24
 795 0006 82B0     		sub	sp, sp, #8
 796              		.cfi_def_cfa_offset 32
 797 0008 0190     		str	r0, [sp, #4]
 798 000a 0E00     		movs	r6, r1
 799              	.LVL57:
1473:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 800              		.loc 1 1473 0
 801 000c 4301     		lsls	r3, r0, #5
 802 000e 334C     		ldr	r4, .L39
 803 0010 E418     		adds	r4, r4, r3
 804 0012 A368     		ldr	r3, [r4, #8]
 805 0014 9846     		mov	r8, r3
 806 0016 324B     		ldr	r3, .L39+4
 807 0018 4246     		mov	r2, r8
 808 001a 1A60     		str	r2, [r3]
1477:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam);
 809              		.loc 1 1477 0
 810 001c 6068     		ldr	r0, [r4, #4]
 811              	.LVL58:
 812 001e FFF7FEFF 		bl	CapSense_1_SsCalcCsxScanPeriod
 813              	.LVL59:
 814 0022 304B     		ldr	r3, .L39+8
 815 0024 5880     		strh	r0, [r3, #2]
1479:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         rawTarget = (rawTarget * target) / CapSense_1_PERCENTAGE_100;
 816              		.loc 1 1479 0
 817 0026 5888     		ldrh	r0, [r3, #2]
 818              	.LVL60:
1480:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
 819              		.loc 1 1480 0
 820 0028 7043     		muls	r0, r6
 821              	.LVL61:
 822 002a 6421     		movs	r1, #100
 823 002c FFF7FEFF 		bl	__aeabi_uidiv
 824              	.LVL62:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 54


 825 0030 0600     		movs	r6, r0
 826              	.LVL63:
1487:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     (uint32)CapSense_1_dsFlash.wdgtArray[widgetId].numRows);
 827              		.loc 1 1487 0
 828 0032 E37E     		ldrb	r3, [r4, #27]
1488:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 829              		.loc 1 1488 0
 830 0034 227F     		ldrb	r2, [r4, #28]
1487:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     (uint32)CapSense_1_dsFlash.wdgtArray[widgetId].numRows);
 831              		.loc 1 1487 0
 832 0036 5A43     		muls	r2, r3
 833 0038 1500     		movs	r5, r2
 834              	.LVL64:
1491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 835              		.loc 1 1491 0
 836 003a 0024     		movs	r4, #0
 837 003c 0EE0     		b	.L29
 838              	.LVL65:
 839              	.L30:
1493:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_0] = curIdacMask;
 840              		.loc 1 1493 0 discriminator 3
 841 003e 284A     		ldr	r2, .L39+4
 842 0040 0020     		movs	r0, #0
 843 0042 1368     		ldr	r3, [r2]
 844 0044 1880     		strh	r0, [r3]
1494:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 845              		.loc 1 1494 0 discriminator 3
 846 0046 1368     		ldr	r3, [r2]
 847 0048 4021     		movs	r1, #64
 848 004a 5975     		strb	r1, [r3, #21]
1496:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_2] = 0u;
 849              		.loc 1 1496 0 discriminator 3
 850 004c 5880     		strh	r0, [r3, #2]
1497:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] = curIdacMask;
 851              		.loc 1 1497 0 discriminator 3
 852 004e 1368     		ldr	r3, [r2]
 853 0050 9880     		strh	r0, [r3, #4]
1498:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] = curIdacMask;
 854              		.loc 1 1498 0 discriminator 3
 855 0052 9975     		strb	r1, [r3, #22]
1499:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 856              		.loc 1 1499 0 discriminator 3
 857 0054 D975     		strb	r1, [r3, #23]
1501:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 858              		.loc 1 1501 0 discriminator 3
 859 0056 1833     		adds	r3, r3, #24
 860 0058 1360     		str	r3, [r2]
1491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 861              		.loc 1 1491 0 discriminator 3
 862 005a 0134     		adds	r4, r4, #1
 863              	.LVL66:
 864              	.L29:
1491:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 865              		.loc 1 1491 0 is_stmt 0 discriminator 1
 866 005c AC42     		cmp	r4, r5
 867 005e EED3     		bcc	.L30
 868 0060 2024     		movs	r4, #32
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 55


 869              	.LVL67:
 870 0062 4027     		movs	r7, #64
 871 0064 00E0     		b	.L37
 872              	.LVL68:
 873              	.L38:
1555:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 874              		.loc 1 1555 0 is_stmt 1
 875 0066 1C00     		movs	r4, r3
 876              	.LVL69:
 877              	.L37:
1508:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             (void)CapSense_1_Scan();
 878              		.loc 1 1508 0
 879 0068 0198     		ldr	r0, [sp, #4]
 880 006a FFF7FEFF 		bl	CapSense_1_SetupWidget
 881              	.LVL70:
1509:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 882              		.loc 1 1509 0
 883 006e FFF7FEFF 		bl	CapSense_1_Scan
 884              	.LVL71:
 885              	.L31:
1511:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 886              		.loc 1 1511 0 discriminator 1
 887 0072 1D4B     		ldr	r3, .L39+12
 888 0074 DB68     		ldr	r3, [r3, #12]
 889 0076 1B06     		lsls	r3, r3, #24
 890 0078 FBD4     		bmi	.L31
1516:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 891              		.loc 1 1516 0
 892 007a 194B     		ldr	r3, .L39+4
 893 007c 4246     		mov	r2, r8
 894 007e 1A60     		str	r2, [r3]
 895              	.LVL72:
1519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 896              		.loc 1 1519 0
 897 0080 0021     		movs	r1, #0
 898 0082 20E0     		b	.L32
 899              	.LVL73:
 900              	.L36:
1530:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 901              		.loc 1 1530 0
 902 0084 164B     		ldr	r3, .L39+4
 903 0086 1B68     		ldr	r3, [r3]
 904 0088 1A88     		ldrh	r2, [r3]
 905 008a 9642     		cmp	r6, r2
 906 008c 02D2     		bcs	.L33
1532:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
 907              		.loc 1 1532 0
 908 008e 5A7D     		ldrb	r2, [r3, #21]
 909 0090 BA43     		bics	r2, r7
 910 0092 5A75     		strb	r2, [r3, #21]
 911              	.L33:
1534:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 912              		.loc 1 1534 0
 913 0094 5A7D     		ldrb	r2, [r3, #21]
 914 0096 2243     		orrs	r2, r4
 915 0098 5A75     		strb	r2, [r3, #21]
1537:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 56


 916              		.loc 1 1537 0
 917 009a 5A88     		ldrh	r2, [r3, #2]
 918 009c 9642     		cmp	r6, r2
 919 009e 02D2     		bcs	.L34
1539:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 920              		.loc 1 1539 0
 921 00a0 9A7D     		ldrb	r2, [r3, #22]
 922 00a2 BA43     		bics	r2, r7
 923 00a4 9A75     		strb	r2, [r3, #22]
 924              	.L34:
1542:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 925              		.loc 1 1542 0
 926 00a6 9A88     		ldrh	r2, [r3, #4]
 927 00a8 9642     		cmp	r6, r2
 928 00aa 02D2     		bcs	.L35
1544:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 929              		.loc 1 1544 0
 930 00ac DA7D     		ldrb	r2, [r3, #23]
 931 00ae BA43     		bics	r2, r7
 932 00b0 DA75     		strb	r2, [r3, #23]
 933              	.L35:
1547:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] |= nextIdacMask;
 934              		.loc 1 1547 0 discriminator 2
 935 00b2 9A7D     		ldrb	r2, [r3, #22]
 936 00b4 2243     		orrs	r2, r4
 937 00b6 9A75     		strb	r2, [r3, #22]
1548:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #endif
 938              		.loc 1 1548 0 discriminator 2
 939 00b8 DA7D     		ldrb	r2, [r3, #23]
 940 00ba 2243     		orrs	r2, r4
 941 00bc DA75     		strb	r2, [r3, #23]
1550:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 942              		.loc 1 1550 0 discriminator 2
 943 00be 1833     		adds	r3, r3, #24
 944 00c0 074A     		ldr	r2, .L39+4
 945 00c2 1360     		str	r3, [r2]
1519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 946              		.loc 1 1519 0 discriminator 2
 947 00c4 0131     		adds	r1, r1, #1
 948              	.LVL74:
 949              	.L32:
1519:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             {
 950              		.loc 1 1519 0 is_stmt 0 discriminator 1
 951 00c6 A942     		cmp	r1, r5
 952 00c8 DCD3     		bcc	.L36
 953              	.LVL75:
1555:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 954              		.loc 1 1555 0 is_stmt 1
 955 00ca 6308     		lsrs	r3, r4, #1
 956 00cc DBB2     		uxtb	r3, r3
 957              	.LVL76:
1554:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             nextIdacMask = nextIdacMask >> 1u;
 958              		.loc 1 1554 0
 959 00ce 271E     		subs	r7, r4, #0
1557:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
 960              		.loc 1 1557 0
 961 00d0 C9D1     		bne	.L38
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 57


1559:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 962              		.loc 1 1559 0
 963 00d2 02B0     		add	sp, sp, #8
 964              		@ sp needed
 965              	.LVL77:
 966              	.LVL78:
 967              	.LVL79:
 968 00d4 04BC     		pop	{r2}
 969 00d6 9046     		mov	r8, r2
 970 00d8 F0BD     		pop	{r4, r5, r6, r7, pc}
 971              	.L40:
 972 00da C046     		.align	2
 973              	.L39:
 974 00dc 00000000 		.word	CapSense_1_dsFlash
 975 00e0 00000000 		.word	CapSense_1_curRamSnsPtr
 976 00e4 00000000 		.word	.LANCHOR0
 977 00e8 00000000 		.word	CapSense_1_dsRam
 978              		.cfi_endproc
 979              	.LFE9:
 980              		.size	CapSense_1_CSXCalibrateWidget, .-CapSense_1_CSXCalibrateWidget
 981              		.section	.text.CapSense_1_CSXConnectTx,"ax",%progbits
 982              		.align	2
 983              		.global	CapSense_1_CSXConnectTx
 984              		.code	16
 985              		.thumb_func
 986              		.type	CapSense_1_CSXConnectTx, %function
 987              	CapSense_1_CSXConnectTx:
 988              	.LFB11:
1666:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
 989              		.loc 1 1666 0
 990              		.cfi_startproc
 991              		@ args = 0, pretend = 0, frame = 0
 992              		@ frame_needed = 0, uses_anonymous_args = 0
 993              	.LVL80:
 994 0000 10B5     		push	{r4, lr}
 995              		.cfi_def_cfa_offset 8
 996              		.cfi_offset 4, -8
 997              		.cfi_offset 14, -4
1669:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |= (CapSense_1_GPIO_STRGDRV << txPtr->shift);
 998              		.loc 1 1669 0
 999 0002 4268     		ldr	r2, [r0, #4]
 1000 0004 1168     		ldr	r1, [r2]
 1001              	.LVL81:
1670:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->pcPtr, regValue);
 1002              		.loc 1 1670 0
 1003 0006 847E     		ldrb	r4, [r0, #26]
 1004 0008 0623     		movs	r3, #6
 1005 000a A340     		lsls	r3, r3, r4
 1006 000c 0B43     		orrs	r3, r1
 1007              	.LVL82:
1671:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1008              		.loc 1 1671 0
 1009 000e 1360     		str	r3, [r2]
1673:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |= (CapSense_1_HSIOM_SEL_CSD_SENSE << txPtr->hsiomShift);
 1010              		.loc 1 1673 0
 1011 0010 0268     		ldr	r2, [r0]
 1012 0012 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 58


 1013              	.LVL83:
1674:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 1014              		.loc 1 1674 0
 1015 0014 007E     		ldrb	r0, [r0, #24]
 1016              	.LVL84:
 1017 0016 0423     		movs	r3, #4
 1018 0018 8340     		lsls	r3, r3, r0
 1019 001a 0B43     		orrs	r3, r1
 1020              	.LVL85:
1675:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 1021              		.loc 1 1675 0
 1022 001c 1360     		str	r3, [r2]
1676:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1023              		.loc 1 1676 0
 1024              		@ sp needed
 1025 001e 10BD     		pop	{r4, pc}
 1026              		.cfi_endproc
 1027              	.LFE11:
 1028              		.size	CapSense_1_CSXConnectTx, .-CapSense_1_CSXConnectTx
 1029              		.section	.text.CapSense_1_CSXConnectRx,"ax",%progbits
 1030              		.align	2
 1031              		.global	CapSense_1_CSXConnectRx
 1032              		.code	16
 1033              		.thumb_func
 1034              		.type	CapSense_1_CSXConnectRx, %function
 1035              	CapSense_1_CSXConnectRx:
 1036              	.LFB12:
1700:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
 1037              		.loc 1 1700 0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 0
 1040              		@ frame_needed = 0, uses_anonymous_args = 0
 1041              	.LVL86:
 1042 0000 10B5     		push	{r4, lr}
 1043              		.cfi_def_cfa_offset 8
 1044              		.cfi_offset 4, -8
 1045              		.cfi_offset 14, -4
1703:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(CapSense_1_GPIO_PC_MASK << rxPtr->shift);
 1046              		.loc 1 1703 0
 1047 0002 4168     		ldr	r1, [r0, #4]
 1048 0004 0B68     		ldr	r3, [r1]
 1049              	.LVL87:
1704:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
 1050              		.loc 1 1704 0
 1051 0006 847E     		ldrb	r4, [r0, #26]
 1052 0008 0722     		movs	r2, #7
 1053 000a A240     		lsls	r2, r2, r4
 1054 000c 9343     		bics	r3, r2
 1055              	.LVL88:
1705:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1056              		.loc 1 1705 0
 1057 000e 0B60     		str	r3, [r1]
1707:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |=  (CapSense_1_HSIOM_SEL_AMUXA << rxPtr->hsiomShift);
 1058              		.loc 1 1707 0
 1059 0010 0268     		ldr	r2, [r0]
 1060 0012 1168     		ldr	r1, [r2]
 1061              	.LVL89:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 59


1708:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1062              		.loc 1 1708 0
 1063 0014 007E     		ldrb	r0, [r0, #24]
 1064              	.LVL90:
 1065 0016 0623     		movs	r3, #6
 1066 0018 8340     		lsls	r3, r3, r0
 1067 001a 0B43     		orrs	r3, r1
 1068              	.LVL91:
1709:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 1069              		.loc 1 1709 0
 1070 001c 1360     		str	r3, [r2]
1710:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1071              		.loc 1 1710 0
 1072              		@ sp needed
 1073 001e 10BD     		pop	{r4, pc}
 1074              		.cfi_endproc
 1075              	.LFE12:
 1076              		.size	CapSense_1_CSXConnectRx, .-CapSense_1_CSXConnectRx
 1077              		.section	.text.CapSense_1_CSXScan,"ax",%progbits
 1078              		.align	2
 1079              		.global	CapSense_1_CSXScan
 1080              		.code	16
 1081              		.thumb_func
 1082              		.type	CapSense_1_CSXScan, %function
 1083              	CapSense_1_CSXScan:
 1084              	.LFB5:
 646:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 1085              		.loc 1 646 0
 1086              		.cfi_startproc
 1087              		@ args = 0, pretend = 0, frame = 0
 1088              		@ frame_needed = 0, uses_anonymous_args = 0
 1089 0000 70B5     		push	{r4, r5, r6, lr}
 1090              		.cfi_def_cfa_offset 16
 1091              		.cfi_offset 4, -16
 1092              		.cfi_offset 5, -12
 1093              		.cfi_offset 6, -8
 1094              		.cfi_offset 14, -4
 655:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1095              		.loc 1 655 0
 1096 0002 0025     		movs	r5, #0
 1097 0004 134B     		ldr	r3, .L44
 1098 0006 1D70     		strb	r5, [r3]
 658:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1099              		.loc 1 658 0
 1100 0008 134B     		ldr	r3, .L44+4
 1101 000a 1B68     		ldr	r3, [r3]
 1102 000c 134A     		ldr	r2, .L44+8
 1103 000e 9968     		ldr	r1, [r3, #8]
 1104 0010 1160     		str	r1, [r2]
 746:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_curWdgtTotalRx  = CapSense_1_curFlashWdgtPtr->numCols;
 1105              		.loc 1 746 0
 1106 0012 1A7F     		ldrb	r2, [r3, #28]
 1107 0014 124C     		ldr	r4, .L44+12
 1108 0016 A280     		strh	r2, [r4, #4]
 747:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1109              		.loc 1 747 0
 1110 0018 DA7E     		ldrb	r2, [r3, #27]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 60


 1111 001a E280     		strh	r2, [r4, #6]
 797:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_curTxIOPtr = CapSense_1_curRxIOPtr;
 1112              		.loc 1 797 0
 1113 001c 1968     		ldr	r1, [r3]
 1114 001e A160     		str	r1, [r4, #8]
 799:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1115              		.loc 1 799 0
 1116 0020 D300     		lsls	r3, r2, #3
 1117 0022 981A     		subs	r0, r3, r2
 1118 0024 8000     		lsls	r0, r0, #2
 1119 0026 0818     		adds	r0, r1, r0
 1120 0028 E060     		str	r0, [r4, #12]
 802:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 1121              		.loc 1 802 0
 1122 002a FFF7FEFF 		bl	CapSense_1_CSXConnectTx
 1123              	.LVL92:
 803:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1124              		.loc 1 803 0
 1125 002e A068     		ldr	r0, [r4, #8]
 1126 0030 FFF7FEFF 		bl	CapSense_1_CSXConnectRx
 1127              	.LVL93:
 806:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             }
 1128              		.loc 1 806 0
 1129 0034 0B4A     		ldr	r2, .L44+16
 1130 0036 0C4B     		ldr	r3, .L44+20
 1131 0038 1A60     		str	r2, [r3]
 811:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #endif
 1132              		.loc 1 811 0
 1133 003a 0C4B     		ldr	r3, .L44+24
 1134 003c 1D70     		strb	r5, [r3]
 815:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1135              		.loc 1 815 0
 1136 003e 0C4A     		ldr	r2, .L44+28
 1137 0040 D168     		ldr	r1, [r2, #12]
 1138 0042 8023     		movs	r3, #128
 1139 0044 0B43     		orrs	r3, r1
 1140 0046 D360     		str	r3, [r2, #12]
 820:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 1141              		.loc 1 820 0
 1142 0048 0A20     		movs	r0, #10
 1143 004a FFF7FEFF 		bl	CyDelayUs
 1144              	.LVL94:
 822:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1145              		.loc 1 822 0
 1146 004e FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 1147              	.LVL95:
 825:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1148              		.loc 1 825 0
 1149              		@ sp needed
 1150 0052 70BD     		pop	{r4, r5, r6, pc}
 1151              	.L45:
 1152              		.align	2
 1153              	.L44:
 1154 0054 00000000 		.word	CapSense_1_sensorIndex
 1155 0058 00000000 		.word	CapSense_1_curFlashWdgtPtr
 1156 005c 00000000 		.word	CapSense_1_curRamSnsPtr
 1157 0060 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 61


 1158 0064 00000000 		.word	CapSense_1_SsCSXPostMultiScan
 1159 0068 00000000 		.word	.LANCHOR1
 1160 006c 00000000 		.word	CapSense_1_scanFreqIndex
 1161 0070 00000000 		.word	CapSense_1_dsRam
 1162              		.cfi_endproc
 1163              	.LFE5:
 1164              		.size	CapSense_1_CSXScan, .-CapSense_1_CSXScan
 1165              		.section	.text.CapSense_1_CSXDisconnectTx,"ax",%progbits
 1166              		.align	2
 1167              		.global	CapSense_1_CSXDisconnectTx
 1168              		.code	16
 1169              		.thumb_func
 1170              		.type	CapSense_1_CSXDisconnectTx, %function
 1171              	CapSense_1_CSXDisconnectTx:
 1172              	.LFB13:
1735:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
 1173              		.loc 1 1735 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
 1177              		@ link register save eliminated.
 1178              	.LVL96:
1738:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(txPtr->hsiomMask);
 1179              		.loc 1 1738 0
 1180 0000 0268     		ldr	r2, [r0]
 1181 0002 1368     		ldr	r3, [r2]
 1182              	.LVL97:
1739:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (txPtr->hsiomPtr, regValue);
 1183              		.loc 1 1739 0
 1184 0004 0169     		ldr	r1, [r0, #16]
 1185 0006 8B43     		bics	r3, r1
 1186              	.LVL98:
1740:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 1187              		.loc 1 1740 0
 1188 0008 1360     		str	r3, [r2]
1741:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1189              		.loc 1 1741 0
 1190              		@ sp needed
 1191 000a 7047     		bx	lr
 1192              		.cfi_endproc
 1193              	.LFE13:
 1194              		.size	CapSense_1_CSXDisconnectTx, .-CapSense_1_CSXDisconnectTx
 1195              		.section	.text.CapSense_1_CSXDisconnectRx,"ax",%progbits
 1196              		.align	2
 1197              		.global	CapSense_1_CSXDisconnectRx
 1198              		.code	16
 1199              		.thumb_func
 1200              		.type	CapSense_1_CSXDisconnectRx, %function
 1201              	CapSense_1_CSXDisconnectRx:
 1202              	.LFB14:
1766:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 regValue;
 1203              		.loc 1 1766 0
 1204              		.cfi_startproc
 1205              		@ args = 0, pretend = 0, frame = 0
 1206              		@ frame_needed = 0, uses_anonymous_args = 0
 1207              	.LVL99:
 1208 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 62


 1209              		.cfi_def_cfa_offset 8
 1210              		.cfi_offset 4, -8
 1211              		.cfi_offset 14, -4
1769:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(rxPtr->hsiomMask);
 1212              		.loc 1 1769 0
 1213 0002 0268     		ldr	r2, [r0]
 1214 0004 1368     		ldr	r3, [r2]
 1215              	.LVL100:
1770:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->hsiomPtr, regValue);
 1216              		.loc 1 1770 0
 1217 0006 0169     		ldr	r1, [r0, #16]
 1218 0008 8B43     		bics	r3, r1
 1219              	.LVL101:
1771:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1220              		.loc 1 1771 0
 1221 000a 1360     		str	r3, [r2]
1773:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &= ~(CapSense_1_GPIO_PC_MASK << rxPtr->shift);
 1222              		.loc 1 1773 0
 1223 000c 4168     		ldr	r1, [r0, #4]
 1224 000e 0B68     		ldr	r3, [r1]
 1225              	.LVL102:
1774:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue |=  (CapSense_1_GPIO_STRGDRV << rxPtr->shift);
 1226              		.loc 1 1774 0
 1227 0010 847E     		ldrb	r4, [r0, #26]
 1228 0012 0722     		movs	r2, #7
 1229 0014 A240     		lsls	r2, r2, r4
 1230 0016 9343     		bics	r3, r2
 1231              	.LVL103:
 1232 0018 1A00     		movs	r2, r3
 1233              	.LVL104:
1775:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->pcPtr, regValue);
 1234              		.loc 1 1775 0
 1235 001a 0623     		movs	r3, #6
 1236 001c A340     		lsls	r3, r3, r4
 1237 001e 1343     		orrs	r3, r2
 1238              	.LVL105:
1776:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1239              		.loc 1 1776 0
 1240 0020 0B60     		str	r3, [r1]
1778:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     regValue &=  ~(rxPtr->mask);
 1241              		.loc 1 1778 0
 1242 0022 8268     		ldr	r2, [r0, #8]
 1243 0024 1368     		ldr	r3, [r2]
 1244              	.LVL106:
1779:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CY_SET_REG32 (rxPtr->drPtr, regValue);
 1245              		.loc 1 1779 0
 1246 0026 4169     		ldr	r1, [r0, #20]
 1247 0028 8B43     		bics	r3, r1
 1248              	.LVL107:
1780:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** }
 1249              		.loc 1 1780 0
 1250 002a 1360     		str	r3, [r2]
1781:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1251              		.loc 1 1781 0
 1252              		@ sp needed
 1253 002c 10BD     		pop	{r4, pc}
 1254              		.cfi_endproc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 63


 1255              	.LFE14:
 1256              		.size	CapSense_1_CSXDisconnectRx, .-CapSense_1_CSXDisconnectRx
 1257 002e C046     		.section	.text.CapSense_1_SsCSXPostMultiScan,"ax",%progbits
 1258              		.align	2
 1259              		.code	16
 1260              		.thumb_func
 1261              		.type	CapSense_1_SsCSXPostMultiScan, %function
 1262              	CapSense_1_SsCSXPostMultiScan:
 1263              	.LFB7:
 916:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #ifdef CapSense_1_ENTRY_CALLBACK
 1264              		.loc 1 916 0
 1265              		.cfi_startproc
 1266              		@ args = 0, pretend = 0, frame = 0
 1267              		@ frame_needed = 0, uses_anonymous_args = 0
 1268 0000 10B5     		push	{r4, lr}
 1269              		.cfi_def_cfa_offset 8
 1270              		.cfi_offset 4, -8
 1271              		.cfi_offset 14, -4
 922:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                              (CapSense_1_csxScanPeriod - CapSense_1_csxRawCount);
 1272              		.loc 1 922 0
 1273 0002 384B     		ldr	r3, .L54
 1274 0004 1C68     		ldr	r4, [r3]
 1275 0006 3849     		ldr	r1, .L54+4
 1276 0008 0B78     		ldrb	r3, [r1]
 1277 000a 3848     		ldr	r0, .L54+8
 1278 000c 4288     		ldrh	r2, [r0, #2]
 1279 000e 0088     		ldrh	r0, [r0]
 1280 0010 5B00     		lsls	r3, r3, #1
 1281 0012 121A     		subs	r2, r2, r0
 1282 0014 1A53     		strh	r2, [r3, r4]
 927:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         {
 1283              		.loc 1 927 0
 1284 0016 0878     		ldrb	r0, [r1]
 1285 0018 0128     		cmp	r0, #1
 1286 001a 07D8     		bhi	.L49
 930:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1287              		.loc 1 930 0
 1288 001c 0130     		adds	r0, r0, #1
 1289 001e C0B2     		uxtb	r0, r0
 1290 0020 0870     		strb	r0, [r1]
 933:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             #else
 1291              		.loc 1 933 0
 1292 0022 FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 1293              	.LVL108:
 938:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 1294              		.loc 1 938 0
 1295 0026 FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 1296              	.LVL109:
 1297 002a 59E0     		b	.L48
 1298              	.L49:
 945:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1299              		.loc 1 945 0
 1300 002c 0022     		movs	r2, #0
 1301 002e 2E4B     		ldr	r3, .L54+4
 1302 0030 1A70     		strb	r2, [r3]
 948:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 #else
 1303              		.loc 1 948 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 64


 1304 0032 0020     		movs	r0, #0
 1305 0034 FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 1306              	.LVL110:
1014:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1307              		.loc 1 1014 0
 1308 0038 2C4C     		ldr	r4, .L54+8
 1309 003a E068     		ldr	r0, [r4, #12]
 1310 003c FFF7FEFF 		bl	CapSense_1_CSXDisconnectTx
 1311              	.LVL111:
1017:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1312              		.loc 1 1017 0
 1313 0040 2B4A     		ldr	r2, .L54+12
 1314 0042 1378     		ldrb	r3, [r2]
 1315 0044 0133     		adds	r3, r3, #1
 1316 0046 DBB2     		uxtb	r3, r3
 1317 0048 1370     		strb	r3, [r2]
1023:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 if (CapSense_1_curWdgtTotalTx > 0u)
 1318              		.loc 1 1023 0
 1319 004a A388     		ldrh	r3, [r4, #4]
 1320 004c 013B     		subs	r3, r3, #1
 1321 004e 9BB2     		uxth	r3, r3
 1322 0050 A380     		strh	r3, [r4, #4]
1024:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 {
 1323              		.loc 1 1024 0
 1324 0052 002B     		cmp	r3, #0
 1325 0054 0CD0     		beq	.L51
1031:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_CSXConnectTx (CapSense_1_curTxIOPtr);
 1326              		.loc 1 1031 0
 1327 0056 254B     		ldr	r3, .L54+8
 1328 0058 D868     		ldr	r0, [r3, #12]
 1329 005a 1C30     		adds	r0, r0, #28
 1330 005c D860     		str	r0, [r3, #12]
1032:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     CapSense_1_curRamSnsPtr++;
 1331              		.loc 1 1032 0
 1332 005e FFF7FEFF 		bl	CapSense_1_CSXConnectTx
 1333              	.LVL112:
1033:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1334              		.loc 1 1033 0
 1335 0062 204A     		ldr	r2, .L54
 1336 0064 1368     		ldr	r3, [r2]
 1337 0066 1833     		adds	r3, r3, #24
 1338 0068 1360     		str	r3, [r2]
1036:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                 }
 1339              		.loc 1 1036 0
 1340 006a FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 1341              	.LVL113:
 1342 006e 37E0     		b	.L48
 1343              	.L51:
1042:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     if (CapSense_1_curWdgtTotalRx > 0u)
 1344              		.loc 1 1042 0
 1345 0070 1E4A     		ldr	r2, .L54+8
 1346 0072 D388     		ldrh	r3, [r2, #6]
 1347 0074 013B     		subs	r3, r3, #1
 1348 0076 9BB2     		uxth	r3, r3
 1349 0078 D380     		strh	r3, [r2, #6]
1043:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     {
 1350              		.loc 1 1043 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 65


 1351 007a 002B     		cmp	r3, #0
 1352 007c 1DD0     		beq	.L52
1052:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curRxIOPtr++;
 1353              		.loc 1 1052 0
 1354 007e 1400     		movs	r4, r2
 1355 0080 9068     		ldr	r0, [r2, #8]
 1356 0082 FFF7FEFF 		bl	CapSense_1_CSXDisconnectRx
 1357              	.LVL114:
1053:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 1358              		.loc 1 1053 0
 1359 0086 A068     		ldr	r0, [r4, #8]
 1360 0088 1C30     		adds	r0, r0, #28
 1361 008a A060     		str	r0, [r4, #8]
1054:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curWdgtTotalTx  = CapSense_1_curFlashWdgtPtr->numRows;
 1362              		.loc 1 1054 0
 1363 008c FFF7FEFF 		bl	CapSense_1_CSXConnectRx
 1364              	.LVL115:
1055:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_curF
 1365              		.loc 1 1055 0
 1366 0090 184B     		ldr	r3, .L54+16
 1367 0092 1B68     		ldr	r3, [r3]
 1368 0094 1A7F     		ldrb	r2, [r3, #28]
 1369 0096 A280     		strh	r2, [r4, #4]
1056:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_curTxIOPtr = & CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr
 1370              		.loc 1 1056 0
 1371 0098 1868     		ldr	r0, [r3]
 1372 009a E060     		str	r0, [r4, #12]
1057:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         CapSense_1_CSXConnectTx(CapSense_1_curTxIOPtr);
 1373              		.loc 1 1057 0
 1374 009c DA7E     		ldrb	r2, [r3, #27]
 1375 009e D300     		lsls	r3, r2, #3
 1376 00a0 9A1A     		subs	r2, r3, r2
 1377 00a2 9300     		lsls	r3, r2, #2
 1378 00a4 C018     		adds	r0, r0, r3
 1379 00a6 E060     		str	r0, [r4, #12]
1058:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1380              		.loc 1 1058 0
 1381 00a8 FFF7FEFF 		bl	CapSense_1_CSXConnectTx
 1382              	.LVL116:
1061:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1383              		.loc 1 1061 0
 1384 00ac 0D4A     		ldr	r2, .L54
 1385 00ae 1368     		ldr	r3, [r2]
 1386 00b0 1833     		adds	r3, r3, #24
 1387 00b2 1360     		str	r3, [r2]
1064:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                     }
 1388              		.loc 1 1064 0
 1389 00b4 FFF7FEFF 		bl	CapSense_1_SsCSXStartSample
 1390              	.LVL117:
 1391 00b8 12E0     		b	.L48
 1392              	.L52:
1069:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1393              		.loc 1 1069 0
 1394 00ba 0C4B     		ldr	r3, .L54+8
 1395 00bc 9868     		ldr	r0, [r3, #8]
 1396 00be FFF7FEFF 		bl	CapSense_1_CSXDisconnectRx
 1397              	.LVL118:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 66


1072:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         {
 1398              		.loc 1 1072 0
 1399 00c2 0D4B     		ldr	r3, .L54+20
 1400 00c4 1B78     		ldrb	r3, [r3]
 1401 00c6 002B     		cmp	r3, #0
 1402 00c8 02D0     		beq	.L53
1074:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
 1403              		.loc 1 1074 0
 1404 00ca FFF7FEFF 		bl	CapSense_1_SsPostAllWidgetsScan
 1405              	.LVL119:
 1406 00ce 07E0     		b	.L48
 1407              	.L53:
1083:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
 1408              		.loc 1 1083 0
 1409 00d0 0A4B     		ldr	r3, .L54+24
 1410 00d2 1A89     		ldrh	r2, [r3, #8]
 1411 00d4 0132     		adds	r2, r2, #1
 1412 00d6 1A81     		strh	r2, [r3, #8]
1084:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****                         }
 1413              		.loc 1 1084 0
 1414 00d8 DA68     		ldr	r2, [r3, #12]
 1415 00da 8021     		movs	r1, #128
 1416 00dc 8A43     		bics	r2, r1
 1417 00de DA60     		str	r2, [r3, #12]
 1418              	.L48:
1094:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1419              		.loc 1 1094 0
 1420              		@ sp needed
 1421 00e0 10BD     		pop	{r4, pc}
 1422              	.L55:
 1423 00e2 C046     		.align	2
 1424              	.L54:
 1425 00e4 00000000 		.word	CapSense_1_curRamSnsPtr
 1426 00e8 00000000 		.word	CapSense_1_scanFreqIndex
 1427 00ec 00000000 		.word	.LANCHOR0
 1428 00f0 00000000 		.word	CapSense_1_sensorIndex
 1429 00f4 00000000 		.word	CapSense_1_curFlashWdgtPtr
 1430 00f8 00000000 		.word	CapSense_1_requestScanAllWidget
 1431 00fc 00000000 		.word	CapSense_1_dsRam
 1432              		.cfi_endproc
 1433              	.LFE7:
 1434              		.size	CapSense_1_SsCSXPostMultiScan, .-CapSense_1_SsCSXPostMultiScan
 1435              		.section	.text.CapSense_1_CSXElectrodeCheck,"ax",%progbits
 1436              		.align	2
 1437              		.global	CapSense_1_CSXElectrodeCheck
 1438              		.code	16
 1439              		.thumb_func
 1440              		.type	CapSense_1_CSXElectrodeCheck, %function
 1441              	CapSense_1_CSXElectrodeCheck:
 1442              	.LFB2:
 316:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSX_GANGED_SNS_EN)
 1443              		.loc 1 316 0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 0
 1446              		@ frame_needed = 0, uses_anonymous_args = 0
 1447 0000 10B5     		push	{r4, lr}
 1448              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 67


 1449              		.cfi_offset 4, -8
 1450              		.cfi_offset 14, -4
 321:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     {
 1451              		.loc 1 321 0
 1452 0002 074B     		ldr	r3, .L58
 1453 0004 1B8A     		ldrh	r3, [r3, #16]
 1454 0006 002B     		cmp	r3, #0
 1455 0008 08D0     		beq	.L56
 360:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXDisconnectRx(CapSense_1_curRxIOPtr);
 1456              		.loc 1 360 0
 1457 000a 054C     		ldr	r4, .L58
 1458 000c E068     		ldr	r0, [r4, #12]
 1459 000e FFF7FEFF 		bl	CapSense_1_CSXDisconnectTx
 1460              	.LVL120:
 361:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif
 1461              		.loc 1 361 0
 1462 0012 A068     		ldr	r0, [r4, #8]
 1463 0014 FFF7FEFF 		bl	CapSense_1_CSXDisconnectRx
 1464              	.LVL121:
 363:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     }
 1465              		.loc 1 363 0
 1466 0018 0023     		movs	r3, #0
 1467 001a 2382     		strh	r3, [r4, #16]
 1468              	.L56:
 365:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1469              		.loc 1 365 0
 1470              		@ sp needed
 1471 001c 10BD     		pop	{r4, pc}
 1472              	.L59:
 1473 001e C046     		.align	2
 1474              	.L58:
 1475 0020 00000000 		.word	.LANCHOR0
 1476              		.cfi_endproc
 1477              	.LFE2:
 1478              		.size	CapSense_1_CSXElectrodeCheck, .-CapSense_1_CSXElectrodeCheck
 1479              		.section	.text.CapSense_1_CSXSetupWidget,"ax",%progbits
 1480              		.align	2
 1481              		.global	CapSense_1_CSXSetupWidget
 1482              		.code	16
 1483              		.thumb_func
 1484              		.type	CapSense_1_CSXSetupWidget, %function
 1485              	CapSense_1_CSXSetupWidget:
 1486              	.LFB3:
 407:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     /* variable to access widget details */
 1487              		.loc 1 407 0
 1488              		.cfi_startproc
 1489              		@ args = 0, pretend = 0, frame = 0
 1490              		@ frame_needed = 0, uses_anonymous_args = 0
 1491              	.LVL122:
 1492 0000 70B5     		push	{r4, r5, r6, lr}
 1493              		.cfi_def_cfa_offset 16
 1494              		.cfi_offset 4, -16
 1495              		.cfi_offset 5, -12
 1496              		.cfi_offset 6, -8
 1497              		.cfi_offset 14, -4
 1498 0002 0400     		movs	r4, r0
 417:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 68


 1499              		.loc 1 417 0
 1500 0004 C2B2     		uxtb	r2, r0
 1501 0006 114B     		ldr	r3, .L61
 1502 0008 1A70     		strb	r2, [r3]
 419:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1503              		.loc 1 419 0
 1504 000a 0220     		movs	r0, #2
 1505              	.LVL123:
 1506 000c FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
 1507              	.LVL124:
 425:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1508              		.loc 1 425 0
 1509 0010 FFF7FEFF 		bl	CapSense_1_CSXElectrodeCheck
 1510              	.LVL125:
 429:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1511              		.loc 1 429 0
 1512 0014 6001     		lsls	r0, r4, #5
 1513 0016 0E4B     		ldr	r3, .L61+4
 1514 0018 C018     		adds	r0, r0, r3
 1515 001a 0E4B     		ldr	r3, .L61+8
 1516 001c 1860     		str	r0, [r3]
 431:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1517              		.loc 1 431 0
 1518 001e 4568     		ldr	r5, [r0, #4]
 1519              	.LVL126:
 436:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
 1520              		.loc 1 436 0
 1521 0020 6C89     		ldrh	r4, [r5, #10]
 1522              	.LVL127:
 439:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_csxScanPeriod  = CapSense_1_SsCalcCsxScanPeriod(curRamWdgtBasePtr);
 1523              		.loc 1 439 0
 1524 0022 2A88     		ldrh	r2, [r5]
 1525 0024 0C4B     		ldr	r3, .L61+12
 1526 0026 1A60     		str	r2, [r3]
 440:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1527              		.loc 1 440 0
 1528 0028 2800     		movs	r0, r5
 1529 002a FFF7FEFF 		bl	CapSense_1_SsCalcCsxScanPeriod
 1530              	.LVL128:
 1531 002e 0B4B     		ldr	r3, .L61+16
 1532 0030 5880     		strh	r0, [r3, #2]
 442:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1533              		.loc 1 442 0
 1534 0032 2B7B     		ldrb	r3, [r5, #12]
 1535              	.LVL129:
 444:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         tmpRegVal = (tmpRegVal << CapSense_1_SENSE_PERIOD_LFSR_SIZE_SHIFT) | snsClkVal;
 1536              		.loc 1 444 0
 1537 0034 013C     		subs	r4, r4, #1
 1538              	.LVL130:
 1539 0036 2405     		lsls	r4, r4, #20
 1540              	.LVL131:
 1541 0038 240D     		lsrs	r4, r4, #20
 1542              	.LVL132:
 445:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, tmpRegVal);
 1543              		.loc 1 445 0
 1544 003a 1B04     		lsls	r3, r3, #16
 1545              	.LVL133:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 69


 1546 003c 1C43     		orrs	r4, r3
 1547              	.LVL134:
 446:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsxClk);
 1548              		.loc 1 446 0
 1549 003e 084B     		ldr	r3, .L61+20
 1550 0040 1C60     		str	r4, [r3]
 447:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
 1551              		.loc 1 447 0
 1552 0042 084B     		ldr	r3, .L61+24
 1553 0044 187F     		ldrb	r0, [r3, #28]
 1554 0046 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 1555              	.LVL135:
 476:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1556              		.loc 1 476 0
 1557              		@ sp needed
 1558              	.LVL136:
 1559              	.LVL137:
 1560 004a 70BD     		pop	{r4, r5, r6, pc}
 1561              	.L62:
 1562              		.align	2
 1563              	.L61:
 1564 004c 00000000 		.word	CapSense_1_widgetIndex
 1565 0050 00000000 		.word	CapSense_1_dsFlash
 1566 0054 00000000 		.word	CapSense_1_curFlashWdgtPtr
 1567 0058 14030B40 		.word	1074463508
 1568 005c 00000000 		.word	.LANCHOR0
 1569 0060 00020B40 		.word	1074463232
 1570 0064 00000000 		.word	CapSense_1_dsRam
 1571              		.cfi_endproc
 1572              	.LFE3:
 1573              		.size	CapSense_1_CSXSetupWidget, .-CapSense_1_CSXSetupWidget
 1574              		.global	__aeabi_uidivmod
 1575              		.section	.text.CapSense_1_CSXSetupWidgetExt,"ax",%progbits
 1576              		.align	2
 1577              		.global	CapSense_1_CSXSetupWidgetExt
 1578              		.code	16
 1579              		.thumb_func
 1580              		.type	CapSense_1_CSXSetupWidgetExt, %function
 1581              	CapSense_1_CSXSetupWidgetExt:
 1582              	.LFB4:
 517:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 txIndex;
 1583              		.loc 1 517 0
 1584              		.cfi_startproc
 1585              		@ args = 0, pretend = 0, frame = 0
 1586              		@ frame_needed = 0, uses_anonymous_args = 0
 1587              	.LVL138:
 1588 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1589              		.cfi_def_cfa_offset 24
 1590              		.cfi_offset 3, -24
 1591              		.cfi_offset 4, -20
 1592              		.cfi_offset 5, -16
 1593              		.cfi_offset 6, -12
 1594              		.cfi_offset 7, -8
 1595              		.cfi_offset 14, -4
 1596 0002 0C00     		movs	r4, r1
 526:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_sensorIndex = (uint8)sensorId;
 1597              		.loc 1 526 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 70


 1598 0004 FFF7FEFF 		bl	CapSense_1_CSXSetupWidget
 1599              	.LVL139:
 527:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1600              		.loc 1 527 0
 1601 0008 E2B2     		uxtb	r2, r4
 1602 000a 184B     		ldr	r3, .L64
 1603 000c 1A70     		strb	r2, [r3]
 530:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     CapSense_1_curRamSnsPtr = &CapSense_1_curRamSnsPtr[sensorId];
 1604              		.loc 1 530 0
 1605 000e 184B     		ldr	r3, .L64+4
 1606 0010 1D68     		ldr	r5, [r3]
 531:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1607              		.loc 1 531 0
 1608 0012 6300     		lsls	r3, r4, #1
 1609 0014 1B19     		adds	r3, r3, r4
 1610 0016 DB00     		lsls	r3, r3, #3
 1611 0018 AA68     		ldr	r2, [r5, #8]
 1612 001a 9446     		mov	ip, r2
 1613 001c 6344     		add	r3, r3, ip
 1614 001e 154A     		ldr	r2, .L64+8
 1615 0020 1360     		str	r3, [r2]
 543:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     txIndex = sensorId % CapSense_1_curFlashWdgtPtr->numRows;
 1616              		.loc 1 543 0
 1617 0022 2F7F     		ldrb	r7, [r5, #28]
 1618 0024 3900     		movs	r1, r7
 1619 0026 2000     		movs	r0, r4
 1620 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1621              	.LVL140:
 1622 002c 0600     		movs	r6, r0
 1623              	.LVL141:
 544:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1624              		.loc 1 544 0
 1625 002e 3900     		movs	r1, r7
 1626 0030 2000     		movs	r0, r4
 1627              	.LVL142:
 1628 0032 FFF7FEFF 		bl	__aeabi_uidivmod
 1629              	.LVL143:
 596:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curRxIOPtr = &CapSense_1_curRxIOPtr[rxIndex];
 1630              		.loc 1 596 0
 1631 0036 2A68     		ldr	r2, [r5]
 1632 0038 0F4C     		ldr	r4, .L64+12
 1633              	.LVL144:
 597:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1634              		.loc 1 597 0
 1635 003a F300     		lsls	r3, r6, #3
 1636 003c 9B1B     		subs	r3, r3, r6
 1637 003e 9B00     		lsls	r3, r3, #2
 1638 0040 D318     		adds	r3, r2, r3
 1639 0042 A360     		str	r3, [r4, #8]
 599:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_curTxIOPtr = &CapSense_1_curTxIOPtr[(CapSense_1_curFlashWdgtPtr->numCols + t
 1640              		.loc 1 599 0
 1641 0044 E260     		str	r2, [r4, #12]
 600:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1642              		.loc 1 600 0
 1643 0046 E87E     		ldrb	r0, [r5, #27]
 1644 0048 4118     		adds	r1, r0, r1
 1645              	.LVL145:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 71


 1646 004a CB00     		lsls	r3, r1, #3
 1647 004c 581A     		subs	r0, r3, r1
 1648 004e 8000     		lsls	r0, r0, #2
 1649 0050 1018     		adds	r0, r2, r0
 1650 0052 E060     		str	r0, [r4, #12]
 603:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_CSXConnectRx(CapSense_1_curRxIOPtr);
 1651              		.loc 1 603 0
 1652 0054 FFF7FEFF 		bl	CapSense_1_CSXConnectTx
 1653              	.LVL146:
 604:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****             CapSense_1_eleCsxDisconnectFlag = CapSense_1_DISCONNECT_IO_FLAG;
 1654              		.loc 1 604 0
 1655 0058 A068     		ldr	r0, [r4, #8]
 1656 005a FFF7FEFF 		bl	CapSense_1_CSXConnectRx
 1657              	.LVL147:
 605:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1658              		.loc 1 605 0
 1659 005e 0123     		movs	r3, #1
 1660 0060 2382     		strh	r3, [r4, #16]
 608:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         }
 1661              		.loc 1 608 0
 1662 0062 064A     		ldr	r2, .L64+16
 1663 0064 064B     		ldr	r3, .L64+20
 1664 0066 1A60     		str	r2, [r3]
 613:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1665              		.loc 1 613 0
 1666              		@ sp needed
 1667              	.LVL148:
 1668 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1669              	.L65:
 1670 006a C046     		.align	2
 1671              	.L64:
 1672 006c 00000000 		.word	CapSense_1_sensorIndex
 1673 0070 00000000 		.word	CapSense_1_curFlashWdgtPtr
 1674 0074 00000000 		.word	CapSense_1_curRamSnsPtr
 1675 0078 00000000 		.word	.LANCHOR0
 1676 007c 00000000 		.word	CapSense_1_SsCSXPostSingleScan
 1677 0080 00000000 		.word	.LANCHOR1
 1678              		.cfi_endproc
 1679              	.LFE4:
 1680              		.size	CapSense_1_CSXSetupWidgetExt, .-CapSense_1_CSXSetupWidgetExt
 1681              		.section	.text.CapSense_1_SsCSXGetTxClkDivider,"ax",%progbits
 1682              		.align	2
 1683              		.global	CapSense_1_SsCSXGetTxClkDivider
 1684              		.code	16
 1685              		.thumb_func
 1686              		.type	CapSense_1_SsCSXGetTxClkDivider, %function
 1687              	CapSense_1_SsCSXGetTxClkDivider:
 1688              	.LFB15:
1805:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     uint32 retVal;
 1689              		.loc 1 1805 0
 1690              		.cfi_startproc
 1691              		@ args = 0, pretend = 0, frame = 0
 1692              		@ frame_needed = 0, uses_anonymous_args = 0
 1693              		@ link register save eliminated.
 1694              	.LVL149:
1812:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****         CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1695              		.loc 1 1812 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 72


 1696 0000 4001     		lsls	r0, r0, #5
 1697              	.LVL150:
 1698 0002 024B     		ldr	r3, .L67
 1699 0004 1818     		adds	r0, r3, r0
 1700 0006 4368     		ldr	r3, [r0, #4]
 1701              	.LVL151:
1815:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c ****     #else
 1702              		.loc 1 1815 0
 1703 0008 5889     		ldrh	r0, [r3, #10]
 1704              	.LVL152:
1826:Generated_Source\PSoC4/CapSense_1_SensingCSX_LL.c **** 
 1705              		.loc 1 1826 0
 1706              		@ sp needed
 1707 000a 7047     		bx	lr
 1708              	.L68:
 1709              		.align	2
 1710              	.L67:
 1711 000c 00000000 		.word	CapSense_1_dsFlash
 1712              		.cfi_endproc
 1713              	.LFE15:
 1714              		.size	CapSense_1_SsCSXGetTxClkDivider, .-CapSense_1_SsCSXGetTxClkDivider
 1715              		.global	CapSense_1_CSXPostScanApiPtr
 1716              		.global	CapSense_1_csxRawCount
 1717              		.global	CapSense_1_csxScanPeriod
 1718              		.data
 1719              		.align	2
 1720              		.set	.LANCHOR1,. + 0
 1721              		.type	CapSense_1_CSXPostScanApiPtr, %object
 1722              		.size	CapSense_1_CSXPostScanApiPtr, 4
 1723              	CapSense_1_CSXPostScanApiPtr:
 1724 0000 00000000 		.word	CapSense_1_SsCSXPostMultiScan
 1725              		.bss
 1726              		.align	2
 1727              		.set	.LANCHOR0,. + 0
 1728              		.type	CapSense_1_csxRawCount, %object
 1729              		.size	CapSense_1_csxRawCount, 2
 1730              	CapSense_1_csxRawCount:
 1731 0000 0000     		.space	2
 1732              		.type	CapSense_1_csxScanPeriod, %object
 1733              		.size	CapSense_1_csxScanPeriod, 2
 1734              	CapSense_1_csxScanPeriod:
 1735 0002 0000     		.space	2
 1736              		.type	CapSense_1_curWdgtTotalTx, %object
 1737              		.size	CapSense_1_curWdgtTotalTx, 2
 1738              	CapSense_1_curWdgtTotalTx:
 1739 0004 0000     		.space	2
 1740              		.type	CapSense_1_curWdgtTotalRx, %object
 1741              		.size	CapSense_1_curWdgtTotalRx, 2
 1742              	CapSense_1_curWdgtTotalRx:
 1743 0006 0000     		.space	2
 1744              		.type	CapSense_1_curRxIOPtr, %object
 1745              		.size	CapSense_1_curRxIOPtr, 4
 1746              	CapSense_1_curRxIOPtr:
 1747 0008 00000000 		.space	4
 1748              		.type	CapSense_1_curTxIOPtr, %object
 1749              		.size	CapSense_1_curTxIOPtr, 4
 1750              	CapSense_1_curTxIOPtr:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 73


 1751 000c 00000000 		.space	4
 1752              		.type	CapSense_1_eleCsxDisconnectFlag, %object
 1753              		.size	CapSense_1_eleCsxDisconnectFlag, 2
 1754              	CapSense_1_eleCsxDisconnectFlag:
 1755 0010 0000     		.space	2
 1756              		.text
 1757              	.Letext0:
 1758              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1759              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1760              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1761              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_Sensing.h"
 1762              		.file 6 "Generated_Source\\PSoC4\\CyLib.h"
 1763              		.section	.debug_info,"",%progbits
 1764              	.Ldebug_info0:
 1765 0000 460D0000 		.4byte	0xd46
 1766 0004 0400     		.2byte	0x4
 1767 0006 00000000 		.4byte	.Ldebug_abbrev0
 1768 000a 04       		.byte	0x4
 1769 000b 01       		.uleb128 0x1
 1770 000c 72020000 		.4byte	.LASF155
 1771 0010 0C       		.byte	0xc
 1772 0011 5D050000 		.4byte	.LASF156
 1773 0015 9B010000 		.4byte	.LASF157
 1774 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1775 001d 00000000 		.4byte	0
 1776 0021 00000000 		.4byte	.Ldebug_line0
 1777 0025 02       		.uleb128 0x2
 1778 0026 01       		.byte	0x1
 1779 0027 06       		.byte	0x6
 1780 0028 260A0000 		.4byte	.LASF0
 1781 002c 02       		.uleb128 0x2
 1782 002d 01       		.byte	0x1
 1783 002e 08       		.byte	0x8
 1784 002f 11090000 		.4byte	.LASF1
 1785 0033 02       		.uleb128 0x2
 1786 0034 02       		.byte	0x2
 1787 0035 05       		.byte	0x5
 1788 0036 95070000 		.4byte	.LASF2
 1789 003a 02       		.uleb128 0x2
 1790 003b 02       		.byte	0x2
 1791 003c 07       		.byte	0x7
 1792 003d 370A0000 		.4byte	.LASF3
 1793 0041 02       		.uleb128 0x2
 1794 0042 04       		.byte	0x4
 1795 0043 05       		.byte	0x5
 1796 0044 BA070000 		.4byte	.LASF4
 1797 0048 02       		.uleb128 0x2
 1798 0049 04       		.byte	0x4
 1799 004a 07       		.byte	0x7
 1800 004b BB080000 		.4byte	.LASF5
 1801 004f 02       		.uleb128 0x2
 1802 0050 08       		.byte	0x8
 1803 0051 05       		.byte	0x5
 1804 0052 95050000 		.4byte	.LASF6
 1805 0056 02       		.uleb128 0x2
 1806 0057 08       		.byte	0x8
 1807 0058 07       		.byte	0x7
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 74


 1808 0059 45030000 		.4byte	.LASF7
 1809 005d 03       		.uleb128 0x3
 1810 005e 04       		.byte	0x4
 1811 005f 05       		.byte	0x5
 1812 0060 696E7400 		.ascii	"int\000"
 1813 0064 02       		.uleb128 0x2
 1814 0065 04       		.byte	0x4
 1815 0066 07       		.byte	0x7
 1816 0067 C4000000 		.4byte	.LASF8
 1817 006b 04       		.uleb128 0x4
 1818 006c 8E0A0000 		.4byte	.LASF9
 1819 0070 02       		.byte	0x2
 1820 0071 E401     		.2byte	0x1e4
 1821 0073 2C000000 		.4byte	0x2c
 1822 0077 04       		.uleb128 0x4
 1823 0078 19050000 		.4byte	.LASF10
 1824 007c 02       		.byte	0x2
 1825 007d E501     		.2byte	0x1e5
 1826 007f 3A000000 		.4byte	0x3a
 1827 0083 04       		.uleb128 0x4
 1828 0084 29060000 		.4byte	.LASF11
 1829 0088 02       		.byte	0x2
 1830 0089 E601     		.2byte	0x1e6
 1831 008b 48000000 		.4byte	0x48
 1832 008f 02       		.uleb128 0x2
 1833 0090 04       		.byte	0x4
 1834 0091 04       		.byte	0x4
 1835 0092 66020000 		.4byte	.LASF12
 1836 0096 02       		.uleb128 0x2
 1837 0097 08       		.byte	0x8
 1838 0098 04       		.byte	0x4
 1839 0099 940A0000 		.4byte	.LASF13
 1840 009d 02       		.uleb128 0x2
 1841 009e 01       		.byte	0x1
 1842 009f 08       		.byte	0x8
 1843 00a0 DD040000 		.4byte	.LASF14
 1844 00a4 05       		.uleb128 0x5
 1845 00a5 6B000000 		.4byte	0x6b
 1846 00a9 05       		.uleb128 0x5
 1847 00aa 77000000 		.4byte	0x77
 1848 00ae 04       		.uleb128 0x4
 1849 00af 1B070000 		.4byte	.LASF15
 1850 00b3 02       		.byte	0x2
 1851 00b4 9002     		.2byte	0x290
 1852 00b6 BA000000 		.4byte	0xba
 1853 00ba 05       		.uleb128 0x5
 1854 00bb 83000000 		.4byte	0x83
 1855 00bf 06       		.uleb128 0x6
 1856 00c0 04       		.byte	0x4
 1857 00c1 C5000000 		.4byte	0xc5
 1858 00c5 07       		.uleb128 0x7
 1859 00c6 02       		.uleb128 0x2
 1860 00c7 08       		.byte	0x8
 1861 00c8 04       		.byte	0x4
 1862 00c9 0F070000 		.4byte	.LASF16
 1863 00cd 02       		.uleb128 0x2
 1864 00ce 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 75


 1865 00cf 07       		.byte	0x7
 1866 00d0 AA080000 		.4byte	.LASF17
 1867 00d4 08       		.uleb128 0x8
 1868 00d5 04       		.byte	0x4
 1869 00d6 04       		.uleb128 0x4
 1870 00d7 A3050000 		.4byte	.LASF18
 1871 00db 03       		.byte	0x3
 1872 00dc 2401     		.2byte	0x124
 1873 00de 77000000 		.4byte	0x77
 1874 00e2 04       		.uleb128 0x4
 1875 00e3 A6030000 		.4byte	.LASF19
 1876 00e7 03       		.byte	0x3
 1877 00e8 2801     		.2byte	0x128
 1878 00ea 6B000000 		.4byte	0x6b
 1879 00ee 09       		.uleb128 0x9
 1880 00ef 01       		.byte	0x1
 1881 00f0 2C000000 		.4byte	0x2c
 1882 00f4 04       		.byte	0x4
 1883 00f5 70       		.byte	0x70
 1884 00f6 19010000 		.4byte	0x119
 1885 00fa 0A       		.uleb128 0xa
 1886 00fb 4B060000 		.4byte	.LASF20
 1887 00ff 00       		.byte	0
 1888 0100 0A       		.uleb128 0xa
 1889 0101 77070000 		.4byte	.LASF21
 1890 0105 01       		.byte	0x1
 1891 0106 0A       		.uleb128 0xa
 1892 0107 36080000 		.4byte	.LASF22
 1893 010b 02       		.byte	0x2
 1894 010c 0A       		.uleb128 0xa
 1895 010d 0F040000 		.4byte	.LASF23
 1896 0111 03       		.byte	0x3
 1897 0112 0A       		.uleb128 0xa
 1898 0113 C30A0000 		.4byte	.LASF24
 1899 0117 04       		.byte	0x4
 1900 0118 00       		.byte	0
 1901 0119 0B       		.uleb128 0xb
 1902 011a 0E       		.byte	0xe
 1903 011b 04       		.byte	0x4
 1904 011c 8E       		.byte	0x8e
 1905 011d 8E010000 		.4byte	0x18e
 1906 0121 0C       		.uleb128 0xc
 1907 0122 20050000 		.4byte	.LASF25
 1908 0126 04       		.byte	0x4
 1909 0127 93       		.byte	0x93
 1910 0128 77000000 		.4byte	0x77
 1911 012c 00       		.byte	0
 1912 012d 0C       		.uleb128 0xc
 1913 012e EA080000 		.4byte	.LASF26
 1914 0132 04       		.byte	0x4
 1915 0133 98       		.byte	0x98
 1916 0134 D6000000 		.4byte	0xd6
 1917 0138 02       		.byte	0x2
 1918 0139 0C       		.uleb128 0xc
 1919 013a D5040000 		.4byte	.LASF27
 1920 013e 04       		.byte	0x4
 1921 013f 9D       		.byte	0x9d
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 76


 1922 0140 6B000000 		.4byte	0x6b
 1923 0144 04       		.byte	0x4
 1924 0145 0C       		.uleb128 0xc
 1925 0146 EE050000 		.4byte	.LASF28
 1926 014a 04       		.byte	0x4
 1927 014b A2       		.byte	0xa2
 1928 014c 6B000000 		.4byte	0x6b
 1929 0150 05       		.byte	0x5
 1930 0151 0C       		.uleb128 0xc
 1931 0152 30060000 		.4byte	.LASF29
 1932 0156 04       		.byte	0x4
 1933 0157 A8       		.byte	0xa8
 1934 0158 6B000000 		.4byte	0x6b
 1935 015c 06       		.byte	0x6
 1936 015d 0C       		.uleb128 0xc
 1937 015e BD050000 		.4byte	.LASF30
 1938 0162 04       		.byte	0x4
 1939 0163 AE       		.byte	0xae
 1940 0164 6B000000 		.4byte	0x6b
 1941 0168 07       		.byte	0x7
 1942 0169 0C       		.uleb128 0xc
 1943 016a 2E040000 		.4byte	.LASF31
 1944 016e 04       		.byte	0x4
 1945 016f B5       		.byte	0xb5
 1946 0170 E2000000 		.4byte	0xe2
 1947 0174 08       		.byte	0x8
 1948 0175 0C       		.uleb128 0xc
 1949 0176 CE090000 		.4byte	.LASF32
 1950 017a 04       		.byte	0x4
 1951 017b BD       		.byte	0xbd
 1952 017c 77000000 		.4byte	0x77
 1953 0180 0A       		.byte	0xa
 1954 0181 0C       		.uleb128 0xc
 1955 0182 6A070000 		.4byte	.LASF33
 1956 0186 04       		.byte	0x4
 1957 0187 C2       		.byte	0xc2
 1958 0188 6B000000 		.4byte	0x6b
 1959 018c 0C       		.byte	0xc
 1960 018d 00       		.byte	0
 1961 018e 0D       		.uleb128 0xd
 1962 018f 02060000 		.4byte	.LASF34
 1963 0193 04       		.byte	0x4
 1964 0194 C3       		.byte	0xc3
 1965 0195 19010000 		.4byte	0x119
 1966 0199 0B       		.uleb128 0xb
 1967 019a 0E       		.byte	0xe
 1968 019b 04       		.byte	0x4
 1969 019c C8       		.byte	0xc8
 1970 019d 0E020000 		.4byte	0x20e
 1971 01a1 0C       		.uleb128 0xc
 1972 01a2 20050000 		.4byte	.LASF25
 1973 01a6 04       		.byte	0x4
 1974 01a7 CD       		.byte	0xcd
 1975 01a8 77000000 		.4byte	0x77
 1976 01ac 00       		.byte	0
 1977 01ad 0C       		.uleb128 0xc
 1978 01ae EA080000 		.4byte	.LASF26
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 77


 1979 01b2 04       		.byte	0x4
 1980 01b3 D2       		.byte	0xd2
 1981 01b4 D6000000 		.4byte	0xd6
 1982 01b8 02       		.byte	0x2
 1983 01b9 0C       		.uleb128 0xc
 1984 01ba D5040000 		.4byte	.LASF27
 1985 01be 04       		.byte	0x4
 1986 01bf D7       		.byte	0xd7
 1987 01c0 6B000000 		.4byte	0x6b
 1988 01c4 04       		.byte	0x4
 1989 01c5 0C       		.uleb128 0xc
 1990 01c6 EE050000 		.4byte	.LASF28
 1991 01ca 04       		.byte	0x4
 1992 01cb DC       		.byte	0xdc
 1993 01cc 6B000000 		.4byte	0x6b
 1994 01d0 05       		.byte	0x5
 1995 01d1 0C       		.uleb128 0xc
 1996 01d2 30060000 		.4byte	.LASF29
 1997 01d6 04       		.byte	0x4
 1998 01d7 E2       		.byte	0xe2
 1999 01d8 6B000000 		.4byte	0x6b
 2000 01dc 06       		.byte	0x6
 2001 01dd 0C       		.uleb128 0xc
 2002 01de BD050000 		.4byte	.LASF30
 2003 01e2 04       		.byte	0x4
 2004 01e3 E8       		.byte	0xe8
 2005 01e4 6B000000 		.4byte	0x6b
 2006 01e8 07       		.byte	0x7
 2007 01e9 0C       		.uleb128 0xc
 2008 01ea 2E040000 		.4byte	.LASF31
 2009 01ee 04       		.byte	0x4
 2010 01ef EF       		.byte	0xef
 2011 01f0 E2000000 		.4byte	0xe2
 2012 01f4 08       		.byte	0x8
 2013 01f5 0C       		.uleb128 0xc
 2014 01f6 CE090000 		.4byte	.LASF32
 2015 01fa 04       		.byte	0x4
 2016 01fb F7       		.byte	0xf7
 2017 01fc 77000000 		.4byte	0x77
 2018 0200 0A       		.byte	0xa
 2019 0201 0C       		.uleb128 0xc
 2020 0202 6A070000 		.4byte	.LASF33
 2021 0206 04       		.byte	0x4
 2022 0207 FC       		.byte	0xfc
 2023 0208 6B000000 		.4byte	0x6b
 2024 020c 0C       		.byte	0xc
 2025 020d 00       		.byte	0
 2026 020e 0D       		.uleb128 0xd
 2027 020f 000B0000 		.4byte	.LASF35
 2028 0213 04       		.byte	0x4
 2029 0214 FD       		.byte	0xfd
 2030 0215 99010000 		.4byte	0x199
 2031 0219 0E       		.uleb128 0xe
 2032 021a 0E       		.byte	0xe
 2033 021b 04       		.byte	0x4
 2034 021c 0301     		.2byte	0x103
 2035 021e 30020000 		.4byte	0x230
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 78


 2036 0222 0F       		.uleb128 0xf
 2037 0223 5E080000 		.4byte	.LASF36
 2038 0227 04       		.byte	0x4
 2039 0228 0801     		.2byte	0x108
 2040 022a 0E020000 		.4byte	0x20e
 2041 022e 00       		.byte	0
 2042 022f 00       		.byte	0
 2043 0230 04       		.uleb128 0x4
 2044 0231 0B020000 		.4byte	.LASF37
 2045 0235 04       		.byte	0x4
 2046 0236 0901     		.2byte	0x109
 2047 0238 19020000 		.4byte	0x219
 2048 023c 0E       		.uleb128 0xe
 2049 023d 18       		.byte	0x18
 2050 023e 04       		.byte	0x4
 2051 023f 0F01     		.2byte	0x10f
 2052 0241 94020000 		.4byte	0x294
 2053 0245 10       		.uleb128 0x10
 2054 0246 72617700 		.ascii	"raw\000"
 2055 024a 04       		.byte	0x4
 2056 024b 1401     		.2byte	0x114
 2057 024d 94020000 		.4byte	0x294
 2058 0251 00       		.byte	0
 2059 0252 0F       		.uleb128 0xf
 2060 0253 320A0000 		.4byte	.LASF38
 2061 0257 04       		.byte	0x4
 2062 0258 1901     		.2byte	0x119
 2063 025a 94020000 		.4byte	0x294
 2064 025e 06       		.byte	0x6
 2065 025f 0F       		.uleb128 0xf
 2066 0260 F3080000 		.4byte	.LASF39
 2067 0264 04       		.byte	0x4
 2068 0265 1F01     		.2byte	0x11f
 2069 0267 A4020000 		.4byte	0x2a4
 2070 026b 0C       		.byte	0xc
 2071 026c 0F       		.uleb128 0xf
 2072 026d FD070000 		.4byte	.LASF40
 2073 0271 04       		.byte	0x4
 2074 0272 2401     		.2byte	0x124
 2075 0274 D6000000 		.4byte	0xd6
 2076 0278 10       		.byte	0x10
 2077 0279 0F       		.uleb128 0xf
 2078 027a 9B0A0000 		.4byte	.LASF41
 2079 027e 04       		.byte	0x4
 2080 027f 2901     		.2byte	0x129
 2081 0281 B4020000 		.4byte	0x2b4
 2082 0285 12       		.byte	0x12
 2083 0286 0F       		.uleb128 0xf
 2084 0287 54050000 		.4byte	.LASF42
 2085 028b 04       		.byte	0x4
 2086 028c 2E01     		.2byte	0x12e
 2087 028e A4020000 		.4byte	0x2a4
 2088 0292 15       		.byte	0x15
 2089 0293 00       		.byte	0
 2090 0294 11       		.uleb128 0x11
 2091 0295 77000000 		.4byte	0x77
 2092 0299 A4020000 		.4byte	0x2a4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 79


 2093 029d 12       		.uleb128 0x12
 2094 029e CD000000 		.4byte	0xcd
 2095 02a2 02       		.byte	0x2
 2096 02a3 00       		.byte	0
 2097 02a4 11       		.uleb128 0x11
 2098 02a5 6B000000 		.4byte	0x6b
 2099 02a9 B4020000 		.4byte	0x2b4
 2100 02ad 12       		.uleb128 0x12
 2101 02ae CD000000 		.4byte	0xcd
 2102 02b2 02       		.byte	0x2
 2103 02b3 00       		.byte	0
 2104 02b4 11       		.uleb128 0x11
 2105 02b5 E2000000 		.4byte	0xe2
 2106 02b9 C4020000 		.4byte	0x2c4
 2107 02bd 12       		.uleb128 0x12
 2108 02be CD000000 		.4byte	0xcd
 2109 02c2 02       		.byte	0x2
 2110 02c3 00       		.byte	0
 2111 02c4 04       		.uleb128 0x4
 2112 02c5 A90A0000 		.4byte	.LASF43
 2113 02c9 04       		.byte	0x4
 2114 02ca 2F01     		.2byte	0x12f
 2115 02cc 3C020000 		.4byte	0x23c
 2116 02d0 0E       		.uleb128 0xe
 2117 02d1 18       		.byte	0x18
 2118 02d2 04       		.byte	0x4
 2119 02d3 3501     		.2byte	0x135
 2120 02d5 E7020000 		.4byte	0x2e7
 2121 02d9 0F       		.uleb128 0xf
 2122 02da 5E080000 		.4byte	.LASF36
 2123 02de 04       		.byte	0x4
 2124 02df 3A01     		.2byte	0x13a
 2125 02e1 E7020000 		.4byte	0x2e7
 2126 02e5 00       		.byte	0
 2127 02e6 00       		.byte	0
 2128 02e7 11       		.uleb128 0x11
 2129 02e8 C4020000 		.4byte	0x2c4
 2130 02ec F7020000 		.4byte	0x2f7
 2131 02f0 12       		.uleb128 0x12
 2132 02f1 CD000000 		.4byte	0xcd
 2133 02f5 00       		.byte	0
 2134 02f6 00       		.byte	0
 2135 02f7 04       		.uleb128 0x4
 2136 02f8 62060000 		.4byte	.LASF44
 2137 02fc 04       		.byte	0x4
 2138 02fd 3B01     		.2byte	0x13b
 2139 02ff D0020000 		.4byte	0x2d0
 2140 0303 0E       		.uleb128 0xe
 2141 0304 50       		.byte	0x50
 2142 0305 04       		.byte	0x4
 2143 0306 4101     		.2byte	0x141
 2144 0308 EA030000 		.4byte	0x3ea
 2145 030c 0F       		.uleb128 0xf
 2146 030d 34070000 		.4byte	.LASF45
 2147 0311 04       		.byte	0x4
 2148 0312 4801     		.2byte	0x148
 2149 0314 77000000 		.4byte	0x77
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 80


 2150 0318 00       		.byte	0
 2151 0319 0F       		.uleb128 0xf
 2152 031a F70A0000 		.4byte	.LASF46
 2153 031e 04       		.byte	0x4
 2154 031f 4D01     		.2byte	0x14d
 2155 0321 77000000 		.4byte	0x77
 2156 0325 02       		.byte	0x2
 2157 0326 0F       		.uleb128 0xf
 2158 0327 0C010000 		.4byte	.LASF47
 2159 032b 04       		.byte	0x4
 2160 032c 5201     		.2byte	0x152
 2161 032e 77000000 		.4byte	0x77
 2162 0332 04       		.byte	0x4
 2163 0333 0F       		.uleb128 0xf
 2164 0334 02080000 		.4byte	.LASF48
 2165 0338 04       		.byte	0x4
 2166 0339 5801     		.2byte	0x158
 2167 033b 77000000 		.4byte	0x77
 2168 033f 06       		.byte	0x6
 2169 0340 0F       		.uleb128 0xf
 2170 0341 00010000 		.4byte	.LASF49
 2171 0345 04       		.byte	0x4
 2172 0346 5D01     		.2byte	0x15d
 2173 0348 77000000 		.4byte	0x77
 2174 034c 08       		.byte	0x8
 2175 034d 0F       		.uleb128 0xf
 2176 034e 41050000 		.4byte	.LASF50
 2177 0352 04       		.byte	0x4
 2178 0353 6201     		.2byte	0x162
 2179 0355 BA000000 		.4byte	0xba
 2180 0359 0C       		.byte	0xc
 2181 035a 0F       		.uleb128 0xf
 2182 035b C3070000 		.4byte	.LASF51
 2183 035f 04       		.byte	0x4
 2184 0360 6801     		.2byte	0x168
 2185 0362 EA030000 		.4byte	0x3ea
 2186 0366 10       		.byte	0x10
 2187 0367 0F       		.uleb128 0xf
 2188 0368 6E080000 		.4byte	.LASF52
 2189 036c 04       		.byte	0x4
 2190 036d 6F01     		.2byte	0x16f
 2191 036f EA030000 		.4byte	0x3ea
 2192 0373 14       		.byte	0x14
 2193 0374 0F       		.uleb128 0xf
 2194 0375 60070000 		.4byte	.LASF53
 2195 0379 04       		.byte	0x4
 2196 037a 7F01     		.2byte	0x17f
 2197 037c FA030000 		.4byte	0x3fa
 2198 0380 18       		.byte	0x18
 2199 0381 0F       		.uleb128 0xf
 2200 0382 F7050000 		.4byte	.LASF54
 2201 0386 04       		.byte	0x4
 2202 0387 8501     		.2byte	0x185
 2203 0389 77000000 		.4byte	0x77
 2204 038d 1A       		.byte	0x1a
 2205 038e 0F       		.uleb128 0xf
 2206 038f 5E090000 		.4byte	.LASF55
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 81


 2207 0393 04       		.byte	0x4
 2208 0394 8A01     		.2byte	0x18a
 2209 0396 6B000000 		.4byte	0x6b
 2210 039a 1C       		.byte	0x1c
 2211 039b 0F       		.uleb128 0xf
 2212 039c C8050000 		.4byte	.LASF56
 2213 03a0 04       		.byte	0x4
 2214 03a1 8F01     		.2byte	0x18f
 2215 03a3 30020000 		.4byte	0x230
 2216 03a7 1E       		.byte	0x1e
 2217 03a8 0F       		.uleb128 0xf
 2218 03a9 3D030000 		.4byte	.LASF57
 2219 03ad 04       		.byte	0x4
 2220 03ae 9401     		.2byte	0x194
 2221 03b0 F7020000 		.4byte	0x2f7
 2222 03b4 2C       		.byte	0x2c
 2223 03b5 0F       		.uleb128 0xf
 2224 03b6 94000000 		.4byte	.LASF58
 2225 03ba 04       		.byte	0x4
 2226 03bb 9901     		.2byte	0x199
 2227 03bd 6B000000 		.4byte	0x6b
 2228 03c1 44       		.byte	0x44
 2229 03c2 0F       		.uleb128 0xf
 2230 03c3 74030000 		.4byte	.LASF59
 2231 03c7 04       		.byte	0x4
 2232 03c8 9E01     		.2byte	0x19e
 2233 03ca 6B000000 		.4byte	0x6b
 2234 03ce 45       		.byte	0x45
 2235 03cf 0F       		.uleb128 0xf
 2236 03d0 21070000 		.4byte	.LASF60
 2237 03d4 04       		.byte	0x4
 2238 03d5 A301     		.2byte	0x1a3
 2239 03d7 77000000 		.4byte	0x77
 2240 03db 46       		.byte	0x46
 2241 03dc 0F       		.uleb128 0xf
 2242 03dd DE050000 		.4byte	.LASF61
 2243 03e1 04       		.byte	0x4
 2244 03e2 A801     		.2byte	0x1a8
 2245 03e4 94020000 		.4byte	0x294
 2246 03e8 48       		.byte	0x48
 2247 03e9 00       		.byte	0
 2248 03ea 11       		.uleb128 0x11
 2249 03eb 83000000 		.4byte	0x83
 2250 03ef FA030000 		.4byte	0x3fa
 2251 03f3 12       		.uleb128 0x12
 2252 03f4 CD000000 		.4byte	0xcd
 2253 03f8 00       		.byte	0
 2254 03f9 00       		.byte	0
 2255 03fa 11       		.uleb128 0x11
 2256 03fb 6B000000 		.4byte	0x6b
 2257 03ff 0A040000 		.4byte	0x40a
 2258 0403 12       		.uleb128 0x12
 2259 0404 CD000000 		.4byte	0xcd
 2260 0408 00       		.byte	0
 2261 0409 00       		.byte	0
 2262 040a 04       		.uleb128 0x4
 2263 040b 2B050000 		.4byte	.LASF62
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 82


 2264 040f 04       		.byte	0x4
 2265 0410 A901     		.2byte	0x1a9
 2266 0412 03030000 		.4byte	0x303
 2267 0416 0E       		.uleb128 0xe
 2268 0417 1C       		.byte	0x1c
 2269 0418 04       		.byte	0x4
 2270 0419 AF01     		.2byte	0x1af
 2271 041b 95040000 		.4byte	0x495
 2272 041f 0F       		.uleb128 0xf
 2273 0420 20060000 		.4byte	.LASF63
 2274 0424 04       		.byte	0x4
 2275 0425 B401     		.2byte	0x1b4
 2276 0427 95040000 		.4byte	0x495
 2277 042b 00       		.byte	0
 2278 042c 0F       		.uleb128 0xf
 2279 042d 8F050000 		.4byte	.LASF64
 2280 0431 04       		.byte	0x4
 2281 0432 B901     		.2byte	0x1b9
 2282 0434 95040000 		.4byte	0x495
 2283 0438 04       		.byte	0x4
 2284 0439 0F       		.uleb128 0xf
 2285 043a D4030000 		.4byte	.LASF65
 2286 043e 04       		.byte	0x4
 2287 043f BE01     		.2byte	0x1be
 2288 0441 95040000 		.4byte	0x495
 2289 0445 08       		.byte	0x8
 2290 0446 0F       		.uleb128 0xf
 2291 0447 30080000 		.4byte	.LASF66
 2292 044b 04       		.byte	0x4
 2293 044c C301     		.2byte	0x1c3
 2294 044e 95040000 		.4byte	0x495
 2295 0452 0C       		.byte	0xc
 2296 0453 0F       		.uleb128 0xf
 2297 0454 AE090000 		.4byte	.LASF67
 2298 0458 04       		.byte	0x4
 2299 0459 C801     		.2byte	0x1c8
 2300 045b 83000000 		.4byte	0x83
 2301 045f 10       		.byte	0x10
 2302 0460 0F       		.uleb128 0xf
 2303 0461 81060000 		.4byte	.LASF68
 2304 0465 04       		.byte	0x4
 2305 0466 CD01     		.2byte	0x1cd
 2306 0468 83000000 		.4byte	0x83
 2307 046c 14       		.byte	0x14
 2308 046d 0F       		.uleb128 0xf
 2309 046e 0E050000 		.4byte	.LASF69
 2310 0472 04       		.byte	0x4
 2311 0473 D201     		.2byte	0x1d2
 2312 0475 6B000000 		.4byte	0x6b
 2313 0479 18       		.byte	0x18
 2314 047a 0F       		.uleb128 0xf
 2315 047b B3080000 		.4byte	.LASF70
 2316 047f 04       		.byte	0x4
 2317 0480 D701     		.2byte	0x1d7
 2318 0482 6B000000 		.4byte	0x6b
 2319 0486 19       		.byte	0x19
 2320 0487 0F       		.uleb128 0xf
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 83


 2321 0488 6C020000 		.4byte	.LASF71
 2322 048c 04       		.byte	0x4
 2323 048d DC01     		.2byte	0x1dc
 2324 048f 6B000000 		.4byte	0x6b
 2325 0493 1A       		.byte	0x1a
 2326 0494 00       		.byte	0
 2327 0495 06       		.uleb128 0x6
 2328 0496 04       		.byte	0x4
 2329 0497 AE000000 		.4byte	0xae
 2330 049b 04       		.uleb128 0x4
 2331 049c 5C0A0000 		.4byte	.LASF72
 2332 04a0 04       		.byte	0x4
 2333 04a1 DD01     		.2byte	0x1dd
 2334 04a3 16040000 		.4byte	0x416
 2335 04a7 0E       		.uleb128 0xe
 2336 04a8 20       		.byte	0x20
 2337 04a9 04       		.byte	0x4
 2338 04aa 1002     		.2byte	0x210
 2339 04ac 33050000 		.4byte	0x533
 2340 04b0 0F       		.uleb128 0xf
 2341 04b1 D1050000 		.4byte	.LASF73
 2342 04b5 04       		.byte	0x4
 2343 04b6 1902     		.2byte	0x219
 2344 04b8 33050000 		.4byte	0x533
 2345 04bc 00       		.byte	0
 2346 04bd 0F       		.uleb128 0xf
 2347 04be 68090000 		.4byte	.LASF74
 2348 04c2 04       		.byte	0x4
 2349 04c3 2002     		.2byte	0x220
 2350 04c5 D4000000 		.4byte	0xd4
 2351 04c9 04       		.byte	0x4
 2352 04ca 0F       		.uleb128 0xf
 2353 04cb 3D070000 		.4byte	.LASF75
 2354 04cf 04       		.byte	0x4
 2355 04d0 2602     		.2byte	0x226
 2356 04d2 3A050000 		.4byte	0x53a
 2357 04d6 08       		.byte	0x8
 2358 04d7 0F       		.uleb128 0xf
 2359 04d8 3B060000 		.4byte	.LASF76
 2360 04dc 04       		.byte	0x4
 2361 04dd 2C02     		.2byte	0x22c
 2362 04df D4000000 		.4byte	0xd4
 2363 04e3 0C       		.byte	0xc
 2364 04e4 0F       		.uleb128 0xf
 2365 04e5 DA080000 		.4byte	.LASF77
 2366 04e9 04       		.byte	0x4
 2367 04ea 3302     		.2byte	0x233
 2368 04ec 40050000 		.4byte	0x540
 2369 04f0 10       		.byte	0x10
 2370 04f1 0F       		.uleb128 0xf
 2371 04f2 51090000 		.4byte	.LASF78
 2372 04f6 04       		.byte	0x4
 2373 04f7 3802     		.2byte	0x238
 2374 04f9 83000000 		.4byte	0x83
 2375 04fd 14       		.byte	0x14
 2376 04fe 0F       		.uleb128 0xf
 2377 04ff 92040000 		.4byte	.LASF79
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 84


 2378 0503 04       		.byte	0x4
 2379 0504 3F02     		.2byte	0x23f
 2380 0506 77000000 		.4byte	0x77
 2381 050a 18       		.byte	0x18
 2382 050b 0F       		.uleb128 0xf
 2383 050c 84030000 		.4byte	.LASF80
 2384 0510 04       		.byte	0x4
 2385 0511 4602     		.2byte	0x246
 2386 0513 6B000000 		.4byte	0x6b
 2387 0517 1A       		.byte	0x1a
 2388 0518 0F       		.uleb128 0xf
 2389 0519 66080000 		.4byte	.LASF81
 2390 051d 04       		.byte	0x4
 2391 051e 5002     		.2byte	0x250
 2392 0520 6B000000 		.4byte	0x6b
 2393 0524 1B       		.byte	0x1b
 2394 0525 0F       		.uleb128 0xf
 2395 0526 93090000 		.4byte	.LASF82
 2396 052a 04       		.byte	0x4
 2397 052b 5802     		.2byte	0x258
 2398 052d 6B000000 		.4byte	0x6b
 2399 0531 1C       		.byte	0x1c
 2400 0532 00       		.byte	0
 2401 0533 06       		.uleb128 0x6
 2402 0534 04       		.byte	0x4
 2403 0535 39050000 		.4byte	0x539
 2404 0539 13       		.uleb128 0x13
 2405 053a 06       		.uleb128 0x6
 2406 053b 04       		.byte	0x4
 2407 053c C4020000 		.4byte	0x2c4
 2408 0540 06       		.uleb128 0x6
 2409 0541 04       		.byte	0x4
 2410 0542 6B000000 		.4byte	0x6b
 2411 0546 04       		.uleb128 0x4
 2412 0547 26000000 		.4byte	.LASF83
 2413 054b 04       		.byte	0x4
 2414 054c 5902     		.2byte	0x259
 2415 054e A7040000 		.4byte	0x4a7
 2416 0552 0E       		.uleb128 0xe
 2417 0553 20       		.byte	0x20
 2418 0554 04       		.byte	0x4
 2419 0555 5F02     		.2byte	0x25f
 2420 0557 69050000 		.4byte	0x569
 2421 055b 0F       		.uleb128 0xf
 2422 055c 490B0000 		.4byte	.LASF84
 2423 0560 04       		.byte	0x4
 2424 0561 6402     		.2byte	0x264
 2425 0563 69050000 		.4byte	0x569
 2426 0567 00       		.byte	0
 2427 0568 00       		.byte	0
 2428 0569 11       		.uleb128 0x11
 2429 056a 46050000 		.4byte	0x546
 2430 056e 79050000 		.4byte	0x579
 2431 0572 12       		.uleb128 0x12
 2432 0573 CD000000 		.4byte	0xcd
 2433 0577 00       		.byte	0
 2434 0578 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 85


 2435 0579 04       		.uleb128 0x4
 2436 057a 48070000 		.4byte	.LASF85
 2437 057e 04       		.byte	0x4
 2438 057f 6502     		.2byte	0x265
 2439 0581 52050000 		.4byte	0x552
 2440 0585 14       		.uleb128 0x14
 2441 0586 74090000 		.4byte	.LASF158
 2442 058a 01       		.byte	0x1
 2443 058b 3707     		.2byte	0x737
 2444 058d 77000000 		.4byte	0x77
 2445 0591 00000000 		.4byte	.LFB16
 2446 0595 0C000000 		.4byte	.LFE16-.LFB16
 2447 0599 01       		.uleb128 0x1
 2448 059a 9C       		.byte	0x9c
 2449 059b C0050000 		.4byte	0x5c0
 2450 059f 15       		.uleb128 0x15
 2451 05a0 1F090000 		.4byte	.LASF98
 2452 05a4 01       		.byte	0x1
 2453 05a5 3707     		.2byte	0x737
 2454 05a7 C0050000 		.4byte	0x5c0
 2455 05ab 00000000 		.4byte	.LLST0
 2456 05af 16       		.uleb128 0x16
 2457 05b0 0B080000 		.4byte	.LASF89
 2458 05b4 01       		.byte	0x1
 2459 05b5 3907     		.2byte	0x739
 2460 05b7 83000000 		.4byte	0x83
 2461 05bb 21000000 		.4byte	.LLST1
 2462 05bf 00       		.byte	0
 2463 05c0 06       		.uleb128 0x6
 2464 05c1 04       		.byte	0x4
 2465 05c2 C6050000 		.4byte	0x5c6
 2466 05c6 17       		.uleb128 0x17
 2467 05c7 8E010000 		.4byte	0x18e
 2468 05cb 18       		.uleb128 0x18
 2469 05cc 1D010000 		.4byte	.LASF159
 2470 05d0 01       		.byte	0x1
 2471 05d1 DF07     		.2byte	0x7df
 2472 05d3 03       		.byte	0x3
 2473 05d4 FD050000 		.4byte	0x5fd
 2474 05d8 19       		.uleb128 0x19
 2475 05d9 48050000 		.4byte	.LASF86
 2476 05dd 01       		.byte	0x1
 2477 05de E107     		.2byte	0x7e1
 2478 05e0 83000000 		.4byte	0x83
 2479 05e4 19       		.uleb128 0x19
 2480 05e5 04030000 		.4byte	.LASF87
 2481 05e9 01       		.byte	0x1
 2482 05ea E207     		.2byte	0x7e2
 2483 05ec 83000000 		.4byte	0x83
 2484 05f0 19       		.uleb128 0x19
 2485 05f1 BF060000 		.4byte	.LASF88
 2486 05f5 01       		.byte	0x1
 2487 05f6 E407     		.2byte	0x7e4
 2488 05f8 83000000 		.4byte	0x83
 2489 05fc 00       		.byte	0
 2490 05fd 1A       		.uleb128 0x1a
 2491 05fe E1070000 		.4byte	.LASF91
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 86


 2492 0602 01       		.byte	0x1
 2493 0603 2706     		.2byte	0x627
 2494 0605 00000000 		.4byte	.LFB10
 2495 0609 3C010000 		.4byte	.LFE10-.LFB10
 2496 060d 01       		.uleb128 0x1
 2497 060e 9C       		.byte	0x9c
 2498 060f 5A060000 		.4byte	0x65a
 2499 0613 16       		.uleb128 0x16
 2500 0614 C4090000 		.4byte	.LASF90
 2501 0618 01       		.byte	0x1
 2502 0619 2906     		.2byte	0x629
 2503 061b 83000000 		.4byte	0x83
 2504 061f 45000000 		.4byte	.LLST2
 2505 0623 1B       		.uleb128 0x1b
 2506 0624 CB050000 		.4byte	0x5cb
 2507 0628 1C000000 		.4byte	.LBB4
 2508 062c B4000000 		.4byte	.LBE4-.LBB4
 2509 0630 01       		.byte	0x1
 2510 0631 3C06     		.2byte	0x63c
 2511 0633 1C       		.uleb128 0x1c
 2512 0634 1C000000 		.4byte	.LBB5
 2513 0638 B4000000 		.4byte	.LBE5-.LBB5
 2514 063c 1D       		.uleb128 0x1d
 2515 063d D8050000 		.4byte	0x5d8
 2516 0641 77000000 		.4byte	.LLST3
 2517 0645 1D       		.uleb128 0x1d
 2518 0646 E4050000 		.4byte	0x5e4
 2519 064a 8A000000 		.4byte	.LLST4
 2520 064e 1D       		.uleb128 0x1d
 2521 064f F0050000 		.4byte	0x5f0
 2522 0653 AB000000 		.4byte	.LLST5
 2523 0657 00       		.byte	0
 2524 0658 00       		.byte	0
 2525 0659 00       		.byte	0
 2526 065a 1E       		.uleb128 0x1e
 2527 065b CF060000 		.4byte	.LASF92
 2528 065f 01       		.byte	0x1
 2529 0660 5D05     		.2byte	0x55d
 2530 0662 00000000 		.4byte	.LFB8
 2531 0666 5C000000 		.4byte	.LFE8-.LFB8
 2532 066a 01       		.uleb128 0x1
 2533 066b 9C       		.byte	0x9c
 2534 066c 92060000 		.4byte	0x692
 2535 0670 1F       		.uleb128 0x1f
 2536 0671 26000000 		.4byte	.LVL16
 2537 0675 AF0C0000 		.4byte	0xcaf
 2538 0679 1F       		.uleb128 0x1f
 2539 067a 2A000000 		.4byte	.LVL17
 2540 067e FD050000 		.4byte	0x5fd
 2541 0682 20       		.uleb128 0x20
 2542 0683 38000000 		.4byte	.LVL18
 2543 0687 AF0C0000 		.4byte	0xcaf
 2544 068b 21       		.uleb128 0x21
 2545 068c 01       		.uleb128 0x1
 2546 068d 50       		.byte	0x50
 2547 068e 01       		.uleb128 0x1
 2548 068f 30       		.byte	0x30
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 87


 2549 0690 00       		.byte	0
 2550 0691 00       		.byte	0
 2551 0692 22       		.uleb128 0x22
 2552 0693 E10A0000 		.4byte	.LASF93
 2553 0697 01       		.byte	0x1
 2554 0698 9807     		.2byte	0x798
 2555 069a 00000000 		.4byte	.LFB17
 2556 069e 90000000 		.4byte	.LFE17-.LFB17
 2557 06a2 01       		.uleb128 0x1
 2558 06a3 9C       		.byte	0x9c
 2559 06a4 CB060000 		.4byte	0x6cb
 2560 06a8 23       		.uleb128 0x23
 2561 06a9 08000000 		.4byte	.LVL19
 2562 06ad BA0C0000 		.4byte	0xcba
 2563 06b1 BB060000 		.4byte	0x6bb
 2564 06b5 21       		.uleb128 0x21
 2565 06b6 01       		.uleb128 0x1
 2566 06b7 50       		.byte	0x50
 2567 06b8 01       		.uleb128 0x1
 2568 06b9 3A       		.byte	0x3a
 2569 06ba 00       		.byte	0
 2570 06bb 20       		.uleb128 0x20
 2571 06bc 62000000 		.4byte	.LVL21
 2572 06c0 C50C0000 		.4byte	0xcc5
 2573 06c4 21       		.uleb128 0x21
 2574 06c5 01       		.uleb128 0x1
 2575 06c6 50       		.byte	0x50
 2576 06c7 01       		.uleb128 0x1
 2577 06c8 3A       		.byte	0x3a
 2578 06c9 00       		.byte	0
 2579 06ca 00       		.byte	0
 2580 06cb 24       		.uleb128 0x24
 2581 06cc 8D030000 		.4byte	.LASF94
 2582 06d0 01       		.byte	0x1
 2583 06d1 94       		.byte	0x94
 2584 06d2 00000000 		.4byte	.LFB1
 2585 06d6 D4010000 		.4byte	.LFE1-.LFB1
 2586 06da 01       		.uleb128 0x1
 2587 06db 9C       		.byte	0x9c
 2588 06dc 99070000 		.4byte	0x799
 2589 06e0 25       		.uleb128 0x25
 2590 06e1 3C010000 		.4byte	.LASF95
 2591 06e5 01       		.byte	0x1
 2592 06e6 97       		.byte	0x97
 2593 06e7 6B000000 		.4byte	0x6b
 2594 06eb BE000000 		.4byte	.LLST6
 2595 06ef 25       		.uleb128 0x25
 2596 06f0 C4090000 		.4byte	.LASF90
 2597 06f4 01       		.byte	0x1
 2598 06f5 98       		.byte	0x98
 2599 06f6 83000000 		.4byte	0x83
 2600 06fa 08010000 		.4byte	.LLST7
 2601 06fe 1F       		.uleb128 0x1f
 2602 06ff 58000000 		.4byte	.LVL22
 2603 0703 D00C0000 		.4byte	0xcd0
 2604 0707 1F       		.uleb128 0x1f
 2605 0708 6C000000 		.4byte	.LVL26
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 88


 2606 070c DB0C0000 		.4byte	0xcdb
 2607 0710 1F       		.uleb128 0x1f
 2608 0711 7E000000 		.4byte	.LVL27
 2609 0715 D00C0000 		.4byte	0xcd0
 2610 0719 1F       		.uleb128 0x1f
 2611 071a 92000000 		.4byte	.LVL31
 2612 071e DB0C0000 		.4byte	0xcdb
 2613 0722 1F       		.uleb128 0x1f
 2614 0723 C6000000 		.4byte	.LVL32
 2615 0727 E60C0000 		.4byte	0xce6
 2616 072b 1F       		.uleb128 0x1f
 2617 072c CA000000 		.4byte	.LVL33
 2618 0730 D00C0000 		.4byte	0xcd0
 2619 0734 1F       		.uleb128 0x1f
 2620 0735 D8000000 		.4byte	.LVL36
 2621 0739 DB0C0000 		.4byte	0xcdb
 2622 073d 1F       		.uleb128 0x1f
 2623 073e DC000000 		.4byte	.LVL37
 2624 0742 D00C0000 		.4byte	0xcd0
 2625 0746 1F       		.uleb128 0x1f
 2626 0747 E8000000 		.4byte	.LVL40
 2627 074b DB0C0000 		.4byte	0xcdb
 2628 074f 1F       		.uleb128 0x1f
 2629 0750 EC000000 		.4byte	.LVL41
 2630 0754 D00C0000 		.4byte	0xcd0
 2631 0758 1F       		.uleb128 0x1f
 2632 0759 00010000 		.4byte	.LVL45
 2633 075d DB0C0000 		.4byte	0xcdb
 2634 0761 1F       		.uleb128 0x1f
 2635 0762 04010000 		.4byte	.LVL46
 2636 0766 D00C0000 		.4byte	0xcd0
 2637 076a 1F       		.uleb128 0x1f
 2638 076b 16010000 		.4byte	.LVL50
 2639 076f DB0C0000 		.4byte	0xcdb
 2640 0773 1F       		.uleb128 0x1f
 2641 0774 1E010000 		.4byte	.LVL51
 2642 0778 F10C0000 		.4byte	0xcf1
 2643 077c 1F       		.uleb128 0x1f
 2644 077d 22010000 		.4byte	.LVL52
 2645 0781 FC0C0000 		.4byte	0xcfc
 2646 0785 20       		.uleb128 0x20
 2647 0786 28010000 		.4byte	.LVL53
 2648 078a 070D0000 		.4byte	0xd07
 2649 078e 21       		.uleb128 0x21
 2650 078f 01       		.uleb128 0x1
 2651 0790 50       		.byte	0x50
 2652 0791 05       		.uleb128 0x5
 2653 0792 03       		.byte	0x3
 2654 0793 00000000 		.4byte	CapSense_1_CSXScanISR
 2655 0797 00       		.byte	0
 2656 0798 00       		.byte	0
 2657 0799 26       		.uleb128 0x26
 2658 079a FB080000 		.4byte	.LASF96
 2659 079e 01       		.byte	0x1
 2660 079f 6603     		.2byte	0x366
 2661 07a1 00000000 		.4byte	.LFB6
 2662 07a5 28000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 89


 2663 07a9 01       		.uleb128 0x1
 2664 07aa 9C       		.byte	0x9c
 2665 07ab CC070000 		.4byte	0x7cc
 2666 07af 23       		.uleb128 0x23
 2667 07b0 18000000 		.4byte	.LVL54
 2668 07b4 120D0000 		.4byte	0xd12
 2669 07b8 C2070000 		.4byte	0x7c2
 2670 07bc 21       		.uleb128 0x21
 2671 07bd 01       		.uleb128 0x1
 2672 07be 50       		.byte	0x50
 2673 07bf 01       		.uleb128 0x1
 2674 07c0 3A       		.byte	0x3a
 2675 07c1 00       		.byte	0
 2676 07c2 1F       		.uleb128 0x1f
 2677 07c3 1C000000 		.4byte	.LVL55
 2678 07c7 FD050000 		.4byte	0x5fd
 2679 07cb 00       		.byte	0
 2680 07cc 22       		.uleb128 0x22
 2681 07cd A1060000 		.4byte	.LASF97
 2682 07d1 01       		.byte	0x1
 2683 07d2 B205     		.2byte	0x5b2
 2684 07d4 00000000 		.4byte	.LFB9
 2685 07d8 EC000000 		.4byte	.LFE9-.LFB9
 2686 07dc 01       		.uleb128 0x1
 2687 07dd 9C       		.byte	0x9c
 2688 07de 86080000 		.4byte	0x886
 2689 07e2 15       		.uleb128 0x15
 2690 07e3 200B0000 		.4byte	.LASF99
 2691 07e7 01       		.byte	0x1
 2692 07e8 B205     		.2byte	0x5b2
 2693 07ea 83000000 		.4byte	0x83
 2694 07ee 94010000 		.4byte	.LLST8
 2695 07f2 15       		.uleb128 0x15
 2696 07f3 CD030000 		.4byte	.LASF100
 2697 07f7 01       		.byte	0x1
 2698 07f8 B205     		.2byte	0x5b2
 2699 07fa 77000000 		.4byte	0x77
 2700 07fe B3010000 		.4byte	.LLST9
 2701 0802 16       		.uleb128 0x16
 2702 0803 54080000 		.4byte	.LASF101
 2703 0807 01       		.byte	0x1
 2704 0808 B505     		.2byte	0x5b5
 2705 080a 83000000 		.4byte	0x83
 2706 080e D4010000 		.4byte	.LLST10
 2707 0812 16       		.uleb128 0x16
 2708 0813 CC040000 		.4byte	.LASF102
 2709 0817 01       		.byte	0x1
 2710 0818 B705     		.2byte	0x5b7
 2711 081a 83000000 		.4byte	0x83
 2712 081e 03020000 		.4byte	.LLST11
 2713 0822 16       		.uleb128 0x16
 2714 0823 40090000 		.4byte	.LASF103
 2715 0827 01       		.byte	0x1
 2716 0828 B905     		.2byte	0x5b9
 2717 082a 83000000 		.4byte	0x83
 2718 082e 21020000 		.4byte	.LLST12
 2719 0832 16       		.uleb128 0x16
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 90


 2720 0833 40020000 		.4byte	.LASF104
 2721 0837 01       		.byte	0x1
 2722 0838 BC05     		.2byte	0x5bc
 2723 083a 6B000000 		.4byte	0x6b
 2724 083e 62020000 		.4byte	.LLST13
 2725 0842 16       		.uleb128 0x16
 2726 0843 F3000000 		.4byte	.LASF105
 2727 0847 01       		.byte	0x1
 2728 0848 BE05     		.2byte	0x5be
 2729 084a 6B000000 		.4byte	0x6b
 2730 084e 98020000 		.4byte	.LLST14
 2731 0852 23       		.uleb128 0x23
 2732 0853 22000000 		.4byte	.LVL59
 2733 0857 85050000 		.4byte	0x585
 2734 085b 67080000 		.4byte	0x867
 2735 085f 21       		.uleb128 0x21
 2736 0860 01       		.uleb128 0x1
 2737 0861 50       		.byte	0x50
 2738 0862 03       		.uleb128 0x3
 2739 0863 74       		.byte	0x74
 2740 0864 04       		.sleb128 4
 2741 0865 06       		.byte	0x6
 2742 0866 00       		.byte	0
 2743 0867 23       		.uleb128 0x23
 2744 0868 6E000000 		.4byte	.LVL70
 2745 086c 1D0D0000 		.4byte	0xd1d
 2746 0870 7C080000 		.4byte	0x87c
 2747 0874 21       		.uleb128 0x21
 2748 0875 01       		.uleb128 0x1
 2749 0876 50       		.byte	0x50
 2750 0877 03       		.uleb128 0x3
 2751 0878 91       		.byte	0x91
 2752 0879 64       		.sleb128 -28
 2753 087a 06       		.byte	0x6
 2754 087b 00       		.byte	0
 2755 087c 1F       		.uleb128 0x1f
 2756 087d 72000000 		.4byte	.LVL71
 2757 0881 280D0000 		.4byte	0xd28
 2758 0885 00       		.byte	0
 2759 0886 26       		.uleb128 0x26
 2760 0887 9E040000 		.4byte	.LASF106
 2761 088b 01       		.byte	0x1
 2762 088c 8106     		.2byte	0x681
 2763 088e 00000000 		.4byte	.LFB11
 2764 0892 20000000 		.4byte	.LFE11-.LFB11
 2765 0896 01       		.uleb128 0x1
 2766 0897 9C       		.byte	0x9c
 2767 0898 BD080000 		.4byte	0x8bd
 2768 089c 15       		.uleb128 0x15
 2769 089d 29020000 		.4byte	.LASF107
 2770 08a1 01       		.byte	0x1
 2771 08a2 8106     		.2byte	0x681
 2772 08a4 BD080000 		.4byte	0x8bd
 2773 08a8 CE020000 		.4byte	.LLST15
 2774 08ac 16       		.uleb128 0x16
 2775 08ad 14010000 		.4byte	.LASF108
 2776 08b1 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 91


 2777 08b2 8306     		.2byte	0x683
 2778 08b4 83000000 		.4byte	0x83
 2779 08b8 EF020000 		.4byte	.LLST16
 2780 08bc 00       		.byte	0
 2781 08bd 06       		.uleb128 0x6
 2782 08be 04       		.byte	0x4
 2783 08bf C3080000 		.4byte	0x8c3
 2784 08c3 17       		.uleb128 0x17
 2785 08c4 9B040000 		.4byte	0x49b
 2786 08c8 26       		.uleb128 0x26
 2787 08c9 5C030000 		.4byte	.LASF109
 2788 08cd 01       		.byte	0x1
 2789 08ce A306     		.2byte	0x6a3
 2790 08d0 00000000 		.4byte	.LFB12
 2791 08d4 20000000 		.4byte	.LFE12-.LFB12
 2792 08d8 01       		.uleb128 0x1
 2793 08d9 9C       		.byte	0x9c
 2794 08da FF080000 		.4byte	0x8ff
 2795 08de 15       		.uleb128 0x15
 2796 08df D4080000 		.4byte	.LASF110
 2797 08e3 01       		.byte	0x1
 2798 08e4 A306     		.2byte	0x6a3
 2799 08e6 BD080000 		.4byte	0x8bd
 2800 08ea 23030000 		.4byte	.LLST17
 2801 08ee 16       		.uleb128 0x16
 2802 08ef 14010000 		.4byte	.LASF108
 2803 08f3 01       		.byte	0x1
 2804 08f4 A506     		.2byte	0x6a5
 2805 08f6 83000000 		.4byte	0x83
 2806 08fa 44030000 		.4byte	.LLST18
 2807 08fe 00       		.byte	0
 2808 08ff 26       		.uleb128 0x26
 2809 0900 9B090000 		.4byte	.LASF111
 2810 0904 01       		.byte	0x1
 2811 0905 8502     		.2byte	0x285
 2812 0907 00000000 		.4byte	.LFB5
 2813 090b 74000000 		.4byte	.LFE5-.LFB5
 2814 090f 01       		.uleb128 0x1
 2815 0910 9C       		.byte	0x9c
 2816 0911 44090000 		.4byte	0x944
 2817 0915 1F       		.uleb128 0x1f
 2818 0916 2E000000 		.4byte	.LVL92
 2819 091a 86080000 		.4byte	0x886
 2820 091e 1F       		.uleb128 0x1f
 2821 091f 34000000 		.4byte	.LVL93
 2822 0923 C8080000 		.4byte	0x8c8
 2823 0927 23       		.uleb128 0x23
 2824 0928 4E000000 		.4byte	.LVL94
 2825 092c 120D0000 		.4byte	0xd12
 2826 0930 3A090000 		.4byte	0x93a
 2827 0934 21       		.uleb128 0x21
 2828 0935 01       		.uleb128 0x1
 2829 0936 50       		.byte	0x50
 2830 0937 01       		.uleb128 0x1
 2831 0938 3A       		.byte	0x3a
 2832 0939 00       		.byte	0
 2833 093a 1F       		.uleb128 0x1f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 92


 2834 093b 52000000 		.4byte	.LVL95
 2835 093f FD050000 		.4byte	0x5fd
 2836 0943 00       		.byte	0
 2837 0944 26       		.uleb128 0x26
 2838 0945 F0010000 		.4byte	.LASF112
 2839 0949 01       		.byte	0x1
 2840 094a C606     		.2byte	0x6c6
 2841 094c 00000000 		.4byte	.LFB13
 2842 0950 0C000000 		.4byte	.LFE13-.LFB13
 2843 0954 01       		.uleb128 0x1
 2844 0955 9C       		.byte	0x9c
 2845 0956 77090000 		.4byte	0x977
 2846 095a 27       		.uleb128 0x27
 2847 095b 29020000 		.4byte	.LASF107
 2848 095f 01       		.byte	0x1
 2849 0960 C606     		.2byte	0x6c6
 2850 0962 BD080000 		.4byte	0x8bd
 2851 0966 01       		.uleb128 0x1
 2852 0967 50       		.byte	0x50
 2853 0968 28       		.uleb128 0x28
 2854 0969 14010000 		.4byte	.LASF108
 2855 096d 01       		.byte	0x1
 2856 096e C806     		.2byte	0x6c8
 2857 0970 83000000 		.4byte	0x83
 2858 0974 01       		.uleb128 0x1
 2859 0975 53       		.byte	0x53
 2860 0976 00       		.byte	0
 2861 0977 26       		.uleb128 0x26
 2862 0978 61000000 		.4byte	.LASF113
 2863 097c 01       		.byte	0x1
 2864 097d E506     		.2byte	0x6e5
 2865 097f 00000000 		.4byte	.LFB14
 2866 0983 2E000000 		.4byte	.LFE14-.LFB14
 2867 0987 01       		.uleb128 0x1
 2868 0988 9C       		.byte	0x9c
 2869 0989 AC090000 		.4byte	0x9ac
 2870 098d 27       		.uleb128 0x27
 2871 098e D4080000 		.4byte	.LASF110
 2872 0992 01       		.byte	0x1
 2873 0993 E506     		.2byte	0x6e5
 2874 0995 BD080000 		.4byte	0x8bd
 2875 0999 01       		.uleb128 0x1
 2876 099a 50       		.byte	0x50
 2877 099b 16       		.uleb128 0x16
 2878 099c 14010000 		.4byte	.LASF108
 2879 09a0 01       		.byte	0x1
 2880 09a1 E706     		.2byte	0x6e7
 2881 09a3 83000000 		.4byte	0x83
 2882 09a7 6D030000 		.4byte	.LLST19
 2883 09ab 00       		.byte	0
 2884 09ac 1E       		.uleb128 0x1e
 2885 09ad 53010000 		.4byte	.LASF114
 2886 09b1 01       		.byte	0x1
 2887 09b2 9303     		.2byte	0x393
 2888 09b4 00000000 		.4byte	.LFB7
 2889 09b8 00010000 		.4byte	.LFE7-.LFB7
 2890 09bc 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 93


 2891 09bd 9C       		.byte	0x9c
 2892 09be 390A0000 		.4byte	0xa39
 2893 09c2 1F       		.uleb128 0x1f
 2894 09c3 26000000 		.4byte	.LVL108
 2895 09c7 AF0C0000 		.4byte	0xcaf
 2896 09cb 1F       		.uleb128 0x1f
 2897 09cc 2A000000 		.4byte	.LVL109
 2898 09d0 FD050000 		.4byte	0x5fd
 2899 09d4 23       		.uleb128 0x23
 2900 09d5 38000000 		.4byte	.LVL110
 2901 09d9 AF0C0000 		.4byte	0xcaf
 2902 09dd E7090000 		.4byte	0x9e7
 2903 09e1 21       		.uleb128 0x21
 2904 09e2 01       		.uleb128 0x1
 2905 09e3 50       		.byte	0x50
 2906 09e4 01       		.uleb128 0x1
 2907 09e5 30       		.byte	0x30
 2908 09e6 00       		.byte	0
 2909 09e7 1F       		.uleb128 0x1f
 2910 09e8 40000000 		.4byte	.LVL111
 2911 09ec 44090000 		.4byte	0x944
 2912 09f0 1F       		.uleb128 0x1f
 2913 09f1 62000000 		.4byte	.LVL112
 2914 09f5 86080000 		.4byte	0x886
 2915 09f9 1F       		.uleb128 0x1f
 2916 09fa 6E000000 		.4byte	.LVL113
 2917 09fe FD050000 		.4byte	0x5fd
 2918 0a02 1F       		.uleb128 0x1f
 2919 0a03 86000000 		.4byte	.LVL114
 2920 0a07 77090000 		.4byte	0x977
 2921 0a0b 1F       		.uleb128 0x1f
 2922 0a0c 90000000 		.4byte	.LVL115
 2923 0a10 C8080000 		.4byte	0x8c8
 2924 0a14 1F       		.uleb128 0x1f
 2925 0a15 AC000000 		.4byte	.LVL116
 2926 0a19 86080000 		.4byte	0x886
 2927 0a1d 1F       		.uleb128 0x1f
 2928 0a1e B8000000 		.4byte	.LVL117
 2929 0a22 FD050000 		.4byte	0x5fd
 2930 0a26 1F       		.uleb128 0x1f
 2931 0a27 C2000000 		.4byte	.LVL118
 2932 0a2b 77090000 		.4byte	0x977
 2933 0a2f 1F       		.uleb128 0x1f
 2934 0a30 CE000000 		.4byte	.LVL119
 2935 0a34 330D0000 		.4byte	0xd33
 2936 0a38 00       		.byte	0
 2937 0a39 26       		.uleb128 0x26
 2938 0a3a 71010000 		.4byte	.LASF115
 2939 0a3e 01       		.byte	0x1
 2940 0a3f 3B01     		.2byte	0x13b
 2941 0a41 00000000 		.4byte	.LFB2
 2942 0a45 24000000 		.4byte	.LFE2-.LFB2
 2943 0a49 01       		.uleb128 0x1
 2944 0a4a 9C       		.byte	0x9c
 2945 0a4b 620A0000 		.4byte	0xa62
 2946 0a4f 1F       		.uleb128 0x1f
 2947 0a50 12000000 		.4byte	.LVL120
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 94


 2948 0a54 44090000 		.4byte	0x944
 2949 0a58 1F       		.uleb128 0x1f
 2950 0a59 18000000 		.4byte	.LVL121
 2951 0a5d 77090000 		.4byte	0x977
 2952 0a61 00       		.byte	0
 2953 0a62 26       		.uleb128 0x26
 2954 0a63 90080000 		.4byte	.LASF116
 2955 0a67 01       		.byte	0x1
 2956 0a68 9601     		.2byte	0x196
 2957 0a6a 00000000 		.4byte	.LFB3
 2958 0a6e 68000000 		.4byte	.LFE3-.LFB3
 2959 0a72 01       		.uleb128 0x1
 2960 0a73 9C       		.byte	0x9c
 2961 0a74 F20A0000 		.4byte	0xaf2
 2962 0a78 15       		.uleb128 0x15
 2963 0a79 200B0000 		.4byte	.LASF99
 2964 0a7d 01       		.byte	0x1
 2965 0a7e 9601     		.2byte	0x196
 2966 0a80 83000000 		.4byte	0x83
 2967 0a84 96030000 		.4byte	.LLST20
 2968 0a88 16       		.uleb128 0x16
 2969 0a89 4A0A0000 		.4byte	.LASF117
 2970 0a8d 01       		.byte	0x1
 2971 0a8e 9901     		.2byte	0x199
 2972 0a90 F20A0000 		.4byte	0xaf2
 2973 0a94 C2030000 		.4byte	.LLST21
 2974 0a98 16       		.uleb128 0x16
 2975 0a99 C4090000 		.4byte	.LASF90
 2976 0a9d 01       		.byte	0x1
 2977 0a9e 9C01     		.2byte	0x19c
 2978 0aa0 83000000 		.4byte	0x83
 2979 0aa4 D5030000 		.4byte	.LLST22
 2980 0aa8 16       		.uleb128 0x16
 2981 0aa9 C3030000 		.4byte	.LASF118
 2982 0aad 01       		.byte	0x1
 2983 0aae 9D01     		.2byte	0x19d
 2984 0ab0 83000000 		.4byte	0x83
 2985 0ab4 05040000 		.4byte	.LLST23
 2986 0ab8 23       		.uleb128 0x23
 2987 0ab9 10000000 		.4byte	.LVL124
 2988 0abd 3E0D0000 		.4byte	0xd3e
 2989 0ac1 CB0A0000 		.4byte	0xacb
 2990 0ac5 21       		.uleb128 0x21
 2991 0ac6 01       		.uleb128 0x1
 2992 0ac7 50       		.byte	0x50
 2993 0ac8 01       		.uleb128 0x1
 2994 0ac9 32       		.byte	0x32
 2995 0aca 00       		.byte	0
 2996 0acb 1F       		.uleb128 0x1f
 2997 0acc 14000000 		.4byte	.LVL125
 2998 0ad0 390A0000 		.4byte	0xa39
 2999 0ad4 23       		.uleb128 0x23
 3000 0ad5 2E000000 		.4byte	.LVL128
 3001 0ad9 85050000 		.4byte	0x585
 3002 0add E80A0000 		.4byte	0xae8
 3003 0ae1 21       		.uleb128 0x21
 3004 0ae2 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 95


 3005 0ae3 50       		.byte	0x50
 3006 0ae4 02       		.uleb128 0x2
 3007 0ae5 75       		.byte	0x75
 3008 0ae6 00       		.sleb128 0
 3009 0ae7 00       		.byte	0
 3010 0ae8 1F       		.uleb128 0x1f
 3011 0ae9 4A000000 		.4byte	.LVL135
 3012 0aed F10C0000 		.4byte	0xcf1
 3013 0af1 00       		.byte	0
 3014 0af2 06       		.uleb128 0x6
 3015 0af3 04       		.byte	0x4
 3016 0af4 8E010000 		.4byte	0x18e
 3017 0af8 22       		.uleb128 0x22
 3018 0af9 D5090000 		.4byte	.LASF119
 3019 0afd 01       		.byte	0x1
 3020 0afe 0402     		.2byte	0x204
 3021 0b00 00000000 		.4byte	.LFB4
 3022 0b04 84000000 		.4byte	.LFE4-.LFB4
 3023 0b08 01       		.uleb128 0x1
 3024 0b09 9C       		.byte	0x9c
 3025 0b0a 760B0000 		.4byte	0xb76
 3026 0b0e 15       		.uleb128 0x15
 3027 0b0f 200B0000 		.4byte	.LASF99
 3028 0b13 01       		.byte	0x1
 3029 0b14 0402     		.2byte	0x204
 3030 0b16 83000000 		.4byte	0x83
 3031 0b1a 30040000 		.4byte	.LLST24
 3032 0b1e 15       		.uleb128 0x15
 3033 0b1f 2F020000 		.4byte	.LASF120
 3034 0b23 01       		.byte	0x1
 3035 0b24 0402     		.2byte	0x204
 3036 0b26 83000000 		.4byte	0x83
 3037 0b2a 51040000 		.4byte	.LLST25
 3038 0b2e 16       		.uleb128 0x16
 3039 0b2f 14030000 		.4byte	.LASF121
 3040 0b33 01       		.byte	0x1
 3041 0b34 0602     		.2byte	0x206
 3042 0b36 83000000 		.4byte	0x83
 3043 0b3a 7D040000 		.4byte	.LLST26
 3044 0b3e 16       		.uleb128 0x16
 3045 0b3f 4B010000 		.4byte	.LASF122
 3046 0b43 01       		.byte	0x1
 3047 0b44 0702     		.2byte	0x207
 3048 0b46 83000000 		.4byte	0x83
 3049 0b4a 90040000 		.4byte	.LLST27
 3050 0b4e 23       		.uleb128 0x23
 3051 0b4f 08000000 		.4byte	.LVL139
 3052 0b53 620A0000 		.4byte	0xa62
 3053 0b57 630B0000 		.4byte	0xb63
 3054 0b5b 21       		.uleb128 0x21
 3055 0b5c 01       		.uleb128 0x1
 3056 0b5d 50       		.byte	0x50
 3057 0b5e 03       		.uleb128 0x3
 3058 0b5f F3       		.byte	0xf3
 3059 0b60 01       		.uleb128 0x1
 3060 0b61 50       		.byte	0x50
 3061 0b62 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 96


 3062 0b63 1F       		.uleb128 0x1f
 3063 0b64 58000000 		.4byte	.LVL146
 3064 0b68 86080000 		.4byte	0x886
 3065 0b6c 1F       		.uleb128 0x1f
 3066 0b6d 5E000000 		.4byte	.LVL147
 3067 0b71 C8080000 		.4byte	0x8c8
 3068 0b75 00       		.byte	0
 3069 0b76 29       		.uleb128 0x29
 3070 0b77 10080000 		.4byte	.LASF160
 3071 0b7b 01       		.byte	0x1
 3072 0b7c 0C07     		.2byte	0x70c
 3073 0b7e 83000000 		.4byte	0x83
 3074 0b82 00000000 		.4byte	.LFB15
 3075 0b86 10000000 		.4byte	.LFE15-.LFB15
 3076 0b8a 01       		.uleb128 0x1
 3077 0b8b 9C       		.byte	0x9c
 3078 0b8c BD0B0000 		.4byte	0xbbd
 3079 0b90 15       		.uleb128 0x15
 3080 0b91 200B0000 		.4byte	.LASF99
 3081 0b95 01       		.byte	0x1
 3082 0b96 0C07     		.2byte	0x70c
 3083 0b98 83000000 		.4byte	0x83
 3084 0b9c AE040000 		.4byte	.LLST28
 3085 0ba0 28       		.uleb128 0x28
 3086 0ba1 CD080000 		.4byte	.LASF123
 3087 0ba5 01       		.byte	0x1
 3088 0ba6 0E07     		.2byte	0x70e
 3089 0ba8 83000000 		.4byte	0x83
 3090 0bac 01       		.uleb128 0x1
 3091 0bad 50       		.byte	0x50
 3092 0bae 28       		.uleb128 0x28
 3093 0baf 38020000 		.4byte	.LASF124
 3094 0bb3 01       		.byte	0x1
 3095 0bb4 1207     		.2byte	0x712
 3096 0bb6 F20A0000 		.4byte	0xaf2
 3097 0bba 01       		.uleb128 0x1
 3098 0bbb 53       		.byte	0x53
 3099 0bbc 00       		.byte	0
 3100 0bbd 2A       		.uleb128 0x2a
 3101 0bbe F8040000 		.4byte	.LASF125
 3102 0bc2 01       		.byte	0x1
 3103 0bc3 49       		.byte	0x49
 3104 0bc4 BD080000 		.4byte	0x8bd
 3105 0bc8 05       		.uleb128 0x5
 3106 0bc9 03       		.byte	0x3
 3107 0bca 0C000000 		.4byte	CapSense_1_curTxIOPtr
 3108 0bce 2A       		.uleb128 0x2a
 3109 0bcf B6040000 		.4byte	.LASF126
 3110 0bd3 01       		.byte	0x1
 3111 0bd4 4B       		.byte	0x4b
 3112 0bd5 BD080000 		.4byte	0x8bd
 3113 0bd9 05       		.uleb128 0x5
 3114 0bda 03       		.byte	0x3
 3115 0bdb 08000000 		.4byte	CapSense_1_curRxIOPtr
 3116 0bdf 2A       		.uleb128 0x2a
 3117 0be0 4C020000 		.4byte	.LASF127
 3118 0be4 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 97


 3119 0be5 4D       		.byte	0x4d
 3120 0be6 77000000 		.4byte	0x77
 3121 0bea 05       		.uleb128 0x5
 3122 0beb 03       		.byte	0x3
 3123 0bec 06000000 		.4byte	CapSense_1_curWdgtTotalRx
 3124 0bf0 2A       		.uleb128 0x2a
 3125 0bf1 F5030000 		.4byte	.LASF128
 3126 0bf5 01       		.byte	0x1
 3127 0bf6 4F       		.byte	0x4f
 3128 0bf7 77000000 		.4byte	0x77
 3129 0bfb 05       		.uleb128 0x5
 3130 0bfc 03       		.byte	0x3
 3131 0bfd 04000000 		.4byte	CapSense_1_curWdgtTotalTx
 3132 0c01 2A       		.uleb128 0x2a
 3133 0c02 A4000000 		.4byte	.LASF129
 3134 0c06 01       		.byte	0x1
 3135 0c07 51       		.byte	0x51
 3136 0c08 77000000 		.4byte	0x77
 3137 0c0c 05       		.uleb128 0x5
 3138 0c0d 03       		.byte	0x3
 3139 0c0e 10000000 		.4byte	CapSense_1_eleCsxDisconnectFlag
 3140 0c12 2B       		.uleb128 0x2b
 3141 0c13 EE060000 		.4byte	.LASF130
 3142 0c17 04       		.byte	0x4
 3143 0c18 0704     		.2byte	0x407
 3144 0c1a 0A040000 		.4byte	0x40a
 3145 0c1e 2B       		.uleb128 0x2b
 3146 0c1f CE070000 		.4byte	.LASF131
 3147 0c23 04       		.byte	0x4
 3148 0c24 0804     		.2byte	0x408
 3149 0c26 2A0C0000 		.4byte	0xc2a
 3150 0c2a 17       		.uleb128 0x17
 3151 0c2b 79050000 		.4byte	0x579
 3152 0c2f 2C       		.uleb128 0x2c
 3153 0c30 27090000 		.4byte	.LASF132
 3154 0c34 01       		.byte	0x1
 3155 0c35 40       		.byte	0x40
 3156 0c36 A9000000 		.4byte	0xa9
 3157 0c3a 05       		.uleb128 0x5
 3158 0c3b 03       		.byte	0x3
 3159 0c3c 00000000 		.4byte	CapSense_1_csxScanPeriod
 3160 0c40 2C       		.uleb128 0x2c
 3161 0c41 770A0000 		.4byte	.LASF133
 3162 0c45 01       		.byte	0x1
 3163 0c46 42       		.byte	0x42
 3164 0c47 A9000000 		.4byte	0xa9
 3165 0c4b 05       		.uleb128 0x5
 3166 0c4c 03       		.byte	0x3
 3167 0c4d 00000000 		.4byte	CapSense_1_csxRawCount
 3168 0c51 2C       		.uleb128 0x2c
 3169 0c52 F2090000 		.4byte	.LASF134
 3170 0c56 01       		.byte	0x1
 3171 0c57 73       		.byte	0x73
 3172 0c58 BF000000 		.4byte	0xbf
 3173 0c5c 05       		.uleb128 0x5
 3174 0c5d 03       		.byte	0x3
 3175 0c5e 00000000 		.4byte	CapSense_1_CSXPostScanApiPtr
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 98


 3176 0c62 2D       		.uleb128 0x2d
 3177 0c63 39040000 		.4byte	.LASF135
 3178 0c67 05       		.byte	0x5
 3179 0c68 9D       		.byte	0x9d
 3180 0c69 A4000000 		.4byte	0xa4
 3181 0c6d 2D       		.uleb128 0x2d
 3182 0c6e 79080000 		.4byte	.LASF136
 3183 0c72 05       		.byte	0x5
 3184 0c73 9E       		.byte	0x9e
 3185 0c74 A4000000 		.4byte	0xa4
 3186 0c78 2D       		.uleb128 0x2d
 3187 0c79 41000000 		.4byte	.LASF137
 3188 0c7d 05       		.byte	0x5
 3189 0c7e 9F       		.byte	0x9f
 3190 0c7f 6B000000 		.4byte	0x6b
 3191 0c83 2D       		.uleb128 0x2d
 3192 0c84 7C000000 		.4byte	.LASF138
 3193 0c88 05       		.byte	0x5
 3194 0c89 A1       		.byte	0xa1
 3195 0c8a 3A050000 		.4byte	0x53a
 3196 0c8e 2D       		.uleb128 0x2d
 3197 0c8f D7010000 		.4byte	.LASF139
 3198 0c93 05       		.byte	0x5
 3199 0c94 A5       		.byte	0xa5
 3200 0c95 6B000000 		.4byte	0x6b
 3201 0c99 2D       		.uleb128 0x2d
 3202 0c9a 9F070000 		.4byte	.LASF140
 3203 0c9e 05       		.byte	0x5
 3204 0c9f AE       		.byte	0xae
 3205 0ca0 A40C0000 		.4byte	0xca4
 3206 0ca4 06       		.uleb128 0x6
 3207 0ca5 04       		.byte	0x4
 3208 0ca6 AA0C0000 		.4byte	0xcaa
 3209 0caa 17       		.uleb128 0x17
 3210 0cab 46050000 		.4byte	0x546
 3211 0caf 2E       		.uleb128 0x2e
 3212 0cb0 86060000 		.4byte	.LASF141
 3213 0cb4 86060000 		.4byte	.LASF141
 3214 0cb8 05       		.byte	0x5
 3215 0cb9 75       		.byte	0x75
 3216 0cba 2E       		.uleb128 0x2e
 3217 0cbb 8E010000 		.4byte	.LASF142
 3218 0cbf 8E010000 		.4byte	.LASF142
 3219 0cc3 06       		.byte	0x6
 3220 0cc4 C5       		.byte	0xc5
 3221 0cc5 2E       		.uleb128 0x2e
 3222 0cc6 B8090000 		.4byte	.LASF143
 3223 0cca B8090000 		.4byte	.LASF143
 3224 0cce 06       		.byte	0x6
 3225 0ccf C3       		.byte	0xc3
 3226 0cd0 2E       		.uleb128 0x2e
 3227 0cd1 0F0A0000 		.4byte	.LASF144
 3228 0cd5 0F0A0000 		.4byte	.LASF144
 3229 0cd9 06       		.byte	0x6
 3230 0cda E5       		.byte	0xe5
 3231 0cdb 2E       		.uleb128 0x2e
 3232 0cdc E2040000 		.4byte	.LASF145
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 99


 3233 0ce0 E2040000 		.4byte	.LASF145
 3234 0ce4 06       		.byte	0x6
 3235 0ce5 E6       		.byte	0xe6
 3236 0ce6 2E       		.uleb128 0x2e
 3237 0ce7 00000000 		.4byte	.LASF146
 3238 0ceb 00000000 		.4byte	.LASF146
 3239 0cef 05       		.byte	0x5
 3240 0cf0 93       		.byte	0x93
 3241 0cf1 2E       		.uleb128 0x2e
 3242 0cf2 6F040000 		.4byte	.LASF147
 3243 0cf6 6F040000 		.4byte	.LASF147
 3244 0cfa 05       		.byte	0x5
 3245 0cfb 68       		.byte	0x68
 3246 0cfc 2E       		.uleb128 0x2e
 3247 0cfd D1000000 		.4byte	.LASF148
 3248 0d01 D1000000 		.4byte	.LASF148
 3249 0d05 05       		.byte	0x5
 3250 0d06 6D       		.byte	0x6d
 3251 0d07 2E       		.uleb128 0x2e
 3252 0d08 DA030000 		.4byte	.LASF149
 3253 0d0c DA030000 		.4byte	.LASF149
 3254 0d10 05       		.byte	0x5
 3255 0d11 6B       		.byte	0x6b
 3256 0d12 2E       		.uleb128 0x2e
 3257 0d13 33030000 		.4byte	.LASF150
 3258 0d17 33030000 		.4byte	.LASF150
 3259 0d1b 06       		.byte	0x6
 3260 0d1c DA       		.byte	0xda
 3261 0d1d 2E       		.uleb128 0x2e
 3262 0d1e 1C030000 		.4byte	.LASF151
 3263 0d22 1C030000 		.4byte	.LASF151
 3264 0d26 05       		.byte	0x5
 3265 0d27 49       		.byte	0x49
 3266 0d28 2E       		.uleb128 0x2e
 3267 0d29 FF060000 		.4byte	.LASF152
 3268 0d2d FF060000 		.4byte	.LASF152
 3269 0d31 05       		.byte	0x5
 3270 0d32 4A       		.byte	0x4a
 3271 0d33 2E       		.uleb128 0x2e
 3272 0d34 290B0000 		.4byte	.LASF153
 3273 0d38 290B0000 		.4byte	.LASF153
 3274 0d3c 05       		.byte	0x5
 3275 0d3d 6C       		.byte	0x6c
 3276 0d3e 2E       		.uleb128 0x2e
 3277 0d3f 50040000 		.4byte	.LASF154
 3278 0d43 50040000 		.4byte	.LASF154
 3279 0d47 05       		.byte	0x5
 3280 0d48 6E       		.byte	0x6e
 3281 0d49 00       		.byte	0
 3282              		.section	.debug_abbrev,"",%progbits
 3283              	.Ldebug_abbrev0:
 3284 0000 01       		.uleb128 0x1
 3285 0001 11       		.uleb128 0x11
 3286 0002 01       		.byte	0x1
 3287 0003 25       		.uleb128 0x25
 3288 0004 0E       		.uleb128 0xe
 3289 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 100


 3290 0006 0B       		.uleb128 0xb
 3291 0007 03       		.uleb128 0x3
 3292 0008 0E       		.uleb128 0xe
 3293 0009 1B       		.uleb128 0x1b
 3294 000a 0E       		.uleb128 0xe
 3295 000b 55       		.uleb128 0x55
 3296 000c 17       		.uleb128 0x17
 3297 000d 11       		.uleb128 0x11
 3298 000e 01       		.uleb128 0x1
 3299 000f 10       		.uleb128 0x10
 3300 0010 17       		.uleb128 0x17
 3301 0011 00       		.byte	0
 3302 0012 00       		.byte	0
 3303 0013 02       		.uleb128 0x2
 3304 0014 24       		.uleb128 0x24
 3305 0015 00       		.byte	0
 3306 0016 0B       		.uleb128 0xb
 3307 0017 0B       		.uleb128 0xb
 3308 0018 3E       		.uleb128 0x3e
 3309 0019 0B       		.uleb128 0xb
 3310 001a 03       		.uleb128 0x3
 3311 001b 0E       		.uleb128 0xe
 3312 001c 00       		.byte	0
 3313 001d 00       		.byte	0
 3314 001e 03       		.uleb128 0x3
 3315 001f 24       		.uleb128 0x24
 3316 0020 00       		.byte	0
 3317 0021 0B       		.uleb128 0xb
 3318 0022 0B       		.uleb128 0xb
 3319 0023 3E       		.uleb128 0x3e
 3320 0024 0B       		.uleb128 0xb
 3321 0025 03       		.uleb128 0x3
 3322 0026 08       		.uleb128 0x8
 3323 0027 00       		.byte	0
 3324 0028 00       		.byte	0
 3325 0029 04       		.uleb128 0x4
 3326 002a 16       		.uleb128 0x16
 3327 002b 00       		.byte	0
 3328 002c 03       		.uleb128 0x3
 3329 002d 0E       		.uleb128 0xe
 3330 002e 3A       		.uleb128 0x3a
 3331 002f 0B       		.uleb128 0xb
 3332 0030 3B       		.uleb128 0x3b
 3333 0031 05       		.uleb128 0x5
 3334 0032 49       		.uleb128 0x49
 3335 0033 13       		.uleb128 0x13
 3336 0034 00       		.byte	0
 3337 0035 00       		.byte	0
 3338 0036 05       		.uleb128 0x5
 3339 0037 35       		.uleb128 0x35
 3340 0038 00       		.byte	0
 3341 0039 49       		.uleb128 0x49
 3342 003a 13       		.uleb128 0x13
 3343 003b 00       		.byte	0
 3344 003c 00       		.byte	0
 3345 003d 06       		.uleb128 0x6
 3346 003e 0F       		.uleb128 0xf
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 101


 3347 003f 00       		.byte	0
 3348 0040 0B       		.uleb128 0xb
 3349 0041 0B       		.uleb128 0xb
 3350 0042 49       		.uleb128 0x49
 3351 0043 13       		.uleb128 0x13
 3352 0044 00       		.byte	0
 3353 0045 00       		.byte	0
 3354 0046 07       		.uleb128 0x7
 3355 0047 15       		.uleb128 0x15
 3356 0048 00       		.byte	0
 3357 0049 27       		.uleb128 0x27
 3358 004a 19       		.uleb128 0x19
 3359 004b 00       		.byte	0
 3360 004c 00       		.byte	0
 3361 004d 08       		.uleb128 0x8
 3362 004e 0F       		.uleb128 0xf
 3363 004f 00       		.byte	0
 3364 0050 0B       		.uleb128 0xb
 3365 0051 0B       		.uleb128 0xb
 3366 0052 00       		.byte	0
 3367 0053 00       		.byte	0
 3368 0054 09       		.uleb128 0x9
 3369 0055 04       		.uleb128 0x4
 3370 0056 01       		.byte	0x1
 3371 0057 0B       		.uleb128 0xb
 3372 0058 0B       		.uleb128 0xb
 3373 0059 49       		.uleb128 0x49
 3374 005a 13       		.uleb128 0x13
 3375 005b 3A       		.uleb128 0x3a
 3376 005c 0B       		.uleb128 0xb
 3377 005d 3B       		.uleb128 0x3b
 3378 005e 0B       		.uleb128 0xb
 3379 005f 01       		.uleb128 0x1
 3380 0060 13       		.uleb128 0x13
 3381 0061 00       		.byte	0
 3382 0062 00       		.byte	0
 3383 0063 0A       		.uleb128 0xa
 3384 0064 28       		.uleb128 0x28
 3385 0065 00       		.byte	0
 3386 0066 03       		.uleb128 0x3
 3387 0067 0E       		.uleb128 0xe
 3388 0068 1C       		.uleb128 0x1c
 3389 0069 0B       		.uleb128 0xb
 3390 006a 00       		.byte	0
 3391 006b 00       		.byte	0
 3392 006c 0B       		.uleb128 0xb
 3393 006d 13       		.uleb128 0x13
 3394 006e 01       		.byte	0x1
 3395 006f 0B       		.uleb128 0xb
 3396 0070 0B       		.uleb128 0xb
 3397 0071 3A       		.uleb128 0x3a
 3398 0072 0B       		.uleb128 0xb
 3399 0073 3B       		.uleb128 0x3b
 3400 0074 0B       		.uleb128 0xb
 3401 0075 01       		.uleb128 0x1
 3402 0076 13       		.uleb128 0x13
 3403 0077 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 102


 3404 0078 00       		.byte	0
 3405 0079 0C       		.uleb128 0xc
 3406 007a 0D       		.uleb128 0xd
 3407 007b 00       		.byte	0
 3408 007c 03       		.uleb128 0x3
 3409 007d 0E       		.uleb128 0xe
 3410 007e 3A       		.uleb128 0x3a
 3411 007f 0B       		.uleb128 0xb
 3412 0080 3B       		.uleb128 0x3b
 3413 0081 0B       		.uleb128 0xb
 3414 0082 49       		.uleb128 0x49
 3415 0083 13       		.uleb128 0x13
 3416 0084 38       		.uleb128 0x38
 3417 0085 0B       		.uleb128 0xb
 3418 0086 00       		.byte	0
 3419 0087 00       		.byte	0
 3420 0088 0D       		.uleb128 0xd
 3421 0089 16       		.uleb128 0x16
 3422 008a 00       		.byte	0
 3423 008b 03       		.uleb128 0x3
 3424 008c 0E       		.uleb128 0xe
 3425 008d 3A       		.uleb128 0x3a
 3426 008e 0B       		.uleb128 0xb
 3427 008f 3B       		.uleb128 0x3b
 3428 0090 0B       		.uleb128 0xb
 3429 0091 49       		.uleb128 0x49
 3430 0092 13       		.uleb128 0x13
 3431 0093 00       		.byte	0
 3432 0094 00       		.byte	0
 3433 0095 0E       		.uleb128 0xe
 3434 0096 13       		.uleb128 0x13
 3435 0097 01       		.byte	0x1
 3436 0098 0B       		.uleb128 0xb
 3437 0099 0B       		.uleb128 0xb
 3438 009a 3A       		.uleb128 0x3a
 3439 009b 0B       		.uleb128 0xb
 3440 009c 3B       		.uleb128 0x3b
 3441 009d 05       		.uleb128 0x5
 3442 009e 01       		.uleb128 0x1
 3443 009f 13       		.uleb128 0x13
 3444 00a0 00       		.byte	0
 3445 00a1 00       		.byte	0
 3446 00a2 0F       		.uleb128 0xf
 3447 00a3 0D       		.uleb128 0xd
 3448 00a4 00       		.byte	0
 3449 00a5 03       		.uleb128 0x3
 3450 00a6 0E       		.uleb128 0xe
 3451 00a7 3A       		.uleb128 0x3a
 3452 00a8 0B       		.uleb128 0xb
 3453 00a9 3B       		.uleb128 0x3b
 3454 00aa 05       		.uleb128 0x5
 3455 00ab 49       		.uleb128 0x49
 3456 00ac 13       		.uleb128 0x13
 3457 00ad 38       		.uleb128 0x38
 3458 00ae 0B       		.uleb128 0xb
 3459 00af 00       		.byte	0
 3460 00b0 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 103


 3461 00b1 10       		.uleb128 0x10
 3462 00b2 0D       		.uleb128 0xd
 3463 00b3 00       		.byte	0
 3464 00b4 03       		.uleb128 0x3
 3465 00b5 08       		.uleb128 0x8
 3466 00b6 3A       		.uleb128 0x3a
 3467 00b7 0B       		.uleb128 0xb
 3468 00b8 3B       		.uleb128 0x3b
 3469 00b9 05       		.uleb128 0x5
 3470 00ba 49       		.uleb128 0x49
 3471 00bb 13       		.uleb128 0x13
 3472 00bc 38       		.uleb128 0x38
 3473 00bd 0B       		.uleb128 0xb
 3474 00be 00       		.byte	0
 3475 00bf 00       		.byte	0
 3476 00c0 11       		.uleb128 0x11
 3477 00c1 01       		.uleb128 0x1
 3478 00c2 01       		.byte	0x1
 3479 00c3 49       		.uleb128 0x49
 3480 00c4 13       		.uleb128 0x13
 3481 00c5 01       		.uleb128 0x1
 3482 00c6 13       		.uleb128 0x13
 3483 00c7 00       		.byte	0
 3484 00c8 00       		.byte	0
 3485 00c9 12       		.uleb128 0x12
 3486 00ca 21       		.uleb128 0x21
 3487 00cb 00       		.byte	0
 3488 00cc 49       		.uleb128 0x49
 3489 00cd 13       		.uleb128 0x13
 3490 00ce 2F       		.uleb128 0x2f
 3491 00cf 0B       		.uleb128 0xb
 3492 00d0 00       		.byte	0
 3493 00d1 00       		.byte	0
 3494 00d2 13       		.uleb128 0x13
 3495 00d3 26       		.uleb128 0x26
 3496 00d4 00       		.byte	0
 3497 00d5 00       		.byte	0
 3498 00d6 00       		.byte	0
 3499 00d7 14       		.uleb128 0x14
 3500 00d8 2E       		.uleb128 0x2e
 3501 00d9 01       		.byte	0x1
 3502 00da 03       		.uleb128 0x3
 3503 00db 0E       		.uleb128 0xe
 3504 00dc 3A       		.uleb128 0x3a
 3505 00dd 0B       		.uleb128 0xb
 3506 00de 3B       		.uleb128 0x3b
 3507 00df 05       		.uleb128 0x5
 3508 00e0 27       		.uleb128 0x27
 3509 00e1 19       		.uleb128 0x19
 3510 00e2 49       		.uleb128 0x49
 3511 00e3 13       		.uleb128 0x13
 3512 00e4 11       		.uleb128 0x11
 3513 00e5 01       		.uleb128 0x1
 3514 00e6 12       		.uleb128 0x12
 3515 00e7 06       		.uleb128 0x6
 3516 00e8 40       		.uleb128 0x40
 3517 00e9 18       		.uleb128 0x18
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 104


 3518 00ea 9742     		.uleb128 0x2117
 3519 00ec 19       		.uleb128 0x19
 3520 00ed 01       		.uleb128 0x1
 3521 00ee 13       		.uleb128 0x13
 3522 00ef 00       		.byte	0
 3523 00f0 00       		.byte	0
 3524 00f1 15       		.uleb128 0x15
 3525 00f2 05       		.uleb128 0x5
 3526 00f3 00       		.byte	0
 3527 00f4 03       		.uleb128 0x3
 3528 00f5 0E       		.uleb128 0xe
 3529 00f6 3A       		.uleb128 0x3a
 3530 00f7 0B       		.uleb128 0xb
 3531 00f8 3B       		.uleb128 0x3b
 3532 00f9 05       		.uleb128 0x5
 3533 00fa 49       		.uleb128 0x49
 3534 00fb 13       		.uleb128 0x13
 3535 00fc 02       		.uleb128 0x2
 3536 00fd 17       		.uleb128 0x17
 3537 00fe 00       		.byte	0
 3538 00ff 00       		.byte	0
 3539 0100 16       		.uleb128 0x16
 3540 0101 34       		.uleb128 0x34
 3541 0102 00       		.byte	0
 3542 0103 03       		.uleb128 0x3
 3543 0104 0E       		.uleb128 0xe
 3544 0105 3A       		.uleb128 0x3a
 3545 0106 0B       		.uleb128 0xb
 3546 0107 3B       		.uleb128 0x3b
 3547 0108 05       		.uleb128 0x5
 3548 0109 49       		.uleb128 0x49
 3549 010a 13       		.uleb128 0x13
 3550 010b 02       		.uleb128 0x2
 3551 010c 17       		.uleb128 0x17
 3552 010d 00       		.byte	0
 3553 010e 00       		.byte	0
 3554 010f 17       		.uleb128 0x17
 3555 0110 26       		.uleb128 0x26
 3556 0111 00       		.byte	0
 3557 0112 49       		.uleb128 0x49
 3558 0113 13       		.uleb128 0x13
 3559 0114 00       		.byte	0
 3560 0115 00       		.byte	0
 3561 0116 18       		.uleb128 0x18
 3562 0117 2E       		.uleb128 0x2e
 3563 0118 01       		.byte	0x1
 3564 0119 03       		.uleb128 0x3
 3565 011a 0E       		.uleb128 0xe
 3566 011b 3A       		.uleb128 0x3a
 3567 011c 0B       		.uleb128 0xb
 3568 011d 3B       		.uleb128 0x3b
 3569 011e 05       		.uleb128 0x5
 3570 011f 27       		.uleb128 0x27
 3571 0120 19       		.uleb128 0x19
 3572 0121 20       		.uleb128 0x20
 3573 0122 0B       		.uleb128 0xb
 3574 0123 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 105


 3575 0124 13       		.uleb128 0x13
 3576 0125 00       		.byte	0
 3577 0126 00       		.byte	0
 3578 0127 19       		.uleb128 0x19
 3579 0128 34       		.uleb128 0x34
 3580 0129 00       		.byte	0
 3581 012a 03       		.uleb128 0x3
 3582 012b 0E       		.uleb128 0xe
 3583 012c 3A       		.uleb128 0x3a
 3584 012d 0B       		.uleb128 0xb
 3585 012e 3B       		.uleb128 0x3b
 3586 012f 05       		.uleb128 0x5
 3587 0130 49       		.uleb128 0x49
 3588 0131 13       		.uleb128 0x13
 3589 0132 00       		.byte	0
 3590 0133 00       		.byte	0
 3591 0134 1A       		.uleb128 0x1a
 3592 0135 2E       		.uleb128 0x2e
 3593 0136 01       		.byte	0x1
 3594 0137 03       		.uleb128 0x3
 3595 0138 0E       		.uleb128 0xe
 3596 0139 3A       		.uleb128 0x3a
 3597 013a 0B       		.uleb128 0xb
 3598 013b 3B       		.uleb128 0x3b
 3599 013c 05       		.uleb128 0x5
 3600 013d 27       		.uleb128 0x27
 3601 013e 19       		.uleb128 0x19
 3602 013f 11       		.uleb128 0x11
 3603 0140 01       		.uleb128 0x1
 3604 0141 12       		.uleb128 0x12
 3605 0142 06       		.uleb128 0x6
 3606 0143 40       		.uleb128 0x40
 3607 0144 18       		.uleb128 0x18
 3608 0145 9642     		.uleb128 0x2116
 3609 0147 19       		.uleb128 0x19
 3610 0148 01       		.uleb128 0x1
 3611 0149 13       		.uleb128 0x13
 3612 014a 00       		.byte	0
 3613 014b 00       		.byte	0
 3614 014c 1B       		.uleb128 0x1b
 3615 014d 1D       		.uleb128 0x1d
 3616 014e 01       		.byte	0x1
 3617 014f 31       		.uleb128 0x31
 3618 0150 13       		.uleb128 0x13
 3619 0151 11       		.uleb128 0x11
 3620 0152 01       		.uleb128 0x1
 3621 0153 12       		.uleb128 0x12
 3622 0154 06       		.uleb128 0x6
 3623 0155 58       		.uleb128 0x58
 3624 0156 0B       		.uleb128 0xb
 3625 0157 59       		.uleb128 0x59
 3626 0158 05       		.uleb128 0x5
 3627 0159 00       		.byte	0
 3628 015a 00       		.byte	0
 3629 015b 1C       		.uleb128 0x1c
 3630 015c 0B       		.uleb128 0xb
 3631 015d 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 106


 3632 015e 11       		.uleb128 0x11
 3633 015f 01       		.uleb128 0x1
 3634 0160 12       		.uleb128 0x12
 3635 0161 06       		.uleb128 0x6
 3636 0162 00       		.byte	0
 3637 0163 00       		.byte	0
 3638 0164 1D       		.uleb128 0x1d
 3639 0165 34       		.uleb128 0x34
 3640 0166 00       		.byte	0
 3641 0167 31       		.uleb128 0x31
 3642 0168 13       		.uleb128 0x13
 3643 0169 02       		.uleb128 0x2
 3644 016a 17       		.uleb128 0x17
 3645 016b 00       		.byte	0
 3646 016c 00       		.byte	0
 3647 016d 1E       		.uleb128 0x1e
 3648 016e 2E       		.uleb128 0x2e
 3649 016f 01       		.byte	0x1
 3650 0170 03       		.uleb128 0x3
 3651 0171 0E       		.uleb128 0xe
 3652 0172 3A       		.uleb128 0x3a
 3653 0173 0B       		.uleb128 0xb
 3654 0174 3B       		.uleb128 0x3b
 3655 0175 05       		.uleb128 0x5
 3656 0176 27       		.uleb128 0x27
 3657 0177 19       		.uleb128 0x19
 3658 0178 11       		.uleb128 0x11
 3659 0179 01       		.uleb128 0x1
 3660 017a 12       		.uleb128 0x12
 3661 017b 06       		.uleb128 0x6
 3662 017c 40       		.uleb128 0x40
 3663 017d 18       		.uleb128 0x18
 3664 017e 9742     		.uleb128 0x2117
 3665 0180 19       		.uleb128 0x19
 3666 0181 01       		.uleb128 0x1
 3667 0182 13       		.uleb128 0x13
 3668 0183 00       		.byte	0
 3669 0184 00       		.byte	0
 3670 0185 1F       		.uleb128 0x1f
 3671 0186 898201   		.uleb128 0x4109
 3672 0189 00       		.byte	0
 3673 018a 11       		.uleb128 0x11
 3674 018b 01       		.uleb128 0x1
 3675 018c 31       		.uleb128 0x31
 3676 018d 13       		.uleb128 0x13
 3677 018e 00       		.byte	0
 3678 018f 00       		.byte	0
 3679 0190 20       		.uleb128 0x20
 3680 0191 898201   		.uleb128 0x4109
 3681 0194 01       		.byte	0x1
 3682 0195 11       		.uleb128 0x11
 3683 0196 01       		.uleb128 0x1
 3684 0197 31       		.uleb128 0x31
 3685 0198 13       		.uleb128 0x13
 3686 0199 00       		.byte	0
 3687 019a 00       		.byte	0
 3688 019b 21       		.uleb128 0x21
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 107


 3689 019c 8A8201   		.uleb128 0x410a
 3690 019f 00       		.byte	0
 3691 01a0 02       		.uleb128 0x2
 3692 01a1 18       		.uleb128 0x18
 3693 01a2 9142     		.uleb128 0x2111
 3694 01a4 18       		.uleb128 0x18
 3695 01a5 00       		.byte	0
 3696 01a6 00       		.byte	0
 3697 01a7 22       		.uleb128 0x22
 3698 01a8 2E       		.uleb128 0x2e
 3699 01a9 01       		.byte	0x1
 3700 01aa 3F       		.uleb128 0x3f
 3701 01ab 19       		.uleb128 0x19
 3702 01ac 03       		.uleb128 0x3
 3703 01ad 0E       		.uleb128 0xe
 3704 01ae 3A       		.uleb128 0x3a
 3705 01af 0B       		.uleb128 0xb
 3706 01b0 3B       		.uleb128 0x3b
 3707 01b1 05       		.uleb128 0x5
 3708 01b2 27       		.uleb128 0x27
 3709 01b3 19       		.uleb128 0x19
 3710 01b4 11       		.uleb128 0x11
 3711 01b5 01       		.uleb128 0x1
 3712 01b6 12       		.uleb128 0x12
 3713 01b7 06       		.uleb128 0x6
 3714 01b8 40       		.uleb128 0x40
 3715 01b9 18       		.uleb128 0x18
 3716 01ba 9642     		.uleb128 0x2116
 3717 01bc 19       		.uleb128 0x19
 3718 01bd 01       		.uleb128 0x1
 3719 01be 13       		.uleb128 0x13
 3720 01bf 00       		.byte	0
 3721 01c0 00       		.byte	0
 3722 01c1 23       		.uleb128 0x23
 3723 01c2 898201   		.uleb128 0x4109
 3724 01c5 01       		.byte	0x1
 3725 01c6 11       		.uleb128 0x11
 3726 01c7 01       		.uleb128 0x1
 3727 01c8 31       		.uleb128 0x31
 3728 01c9 13       		.uleb128 0x13
 3729 01ca 01       		.uleb128 0x1
 3730 01cb 13       		.uleb128 0x13
 3731 01cc 00       		.byte	0
 3732 01cd 00       		.byte	0
 3733 01ce 24       		.uleb128 0x24
 3734 01cf 2E       		.uleb128 0x2e
 3735 01d0 01       		.byte	0x1
 3736 01d1 3F       		.uleb128 0x3f
 3737 01d2 19       		.uleb128 0x19
 3738 01d3 03       		.uleb128 0x3
 3739 01d4 0E       		.uleb128 0xe
 3740 01d5 3A       		.uleb128 0x3a
 3741 01d6 0B       		.uleb128 0xb
 3742 01d7 3B       		.uleb128 0x3b
 3743 01d8 0B       		.uleb128 0xb
 3744 01d9 27       		.uleb128 0x27
 3745 01da 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 108


 3746 01db 11       		.uleb128 0x11
 3747 01dc 01       		.uleb128 0x1
 3748 01dd 12       		.uleb128 0x12
 3749 01de 06       		.uleb128 0x6
 3750 01df 40       		.uleb128 0x40
 3751 01e0 18       		.uleb128 0x18
 3752 01e1 9742     		.uleb128 0x2117
 3753 01e3 19       		.uleb128 0x19
 3754 01e4 01       		.uleb128 0x1
 3755 01e5 13       		.uleb128 0x13
 3756 01e6 00       		.byte	0
 3757 01e7 00       		.byte	0
 3758 01e8 25       		.uleb128 0x25
 3759 01e9 34       		.uleb128 0x34
 3760 01ea 00       		.byte	0
 3761 01eb 03       		.uleb128 0x3
 3762 01ec 0E       		.uleb128 0xe
 3763 01ed 3A       		.uleb128 0x3a
 3764 01ee 0B       		.uleb128 0xb
 3765 01ef 3B       		.uleb128 0x3b
 3766 01f0 0B       		.uleb128 0xb
 3767 01f1 49       		.uleb128 0x49
 3768 01f2 13       		.uleb128 0x13
 3769 01f3 02       		.uleb128 0x2
 3770 01f4 17       		.uleb128 0x17
 3771 01f5 00       		.byte	0
 3772 01f6 00       		.byte	0
 3773 01f7 26       		.uleb128 0x26
 3774 01f8 2E       		.uleb128 0x2e
 3775 01f9 01       		.byte	0x1
 3776 01fa 3F       		.uleb128 0x3f
 3777 01fb 19       		.uleb128 0x19
 3778 01fc 03       		.uleb128 0x3
 3779 01fd 0E       		.uleb128 0xe
 3780 01fe 3A       		.uleb128 0x3a
 3781 01ff 0B       		.uleb128 0xb
 3782 0200 3B       		.uleb128 0x3b
 3783 0201 05       		.uleb128 0x5
 3784 0202 27       		.uleb128 0x27
 3785 0203 19       		.uleb128 0x19
 3786 0204 11       		.uleb128 0x11
 3787 0205 01       		.uleb128 0x1
 3788 0206 12       		.uleb128 0x12
 3789 0207 06       		.uleb128 0x6
 3790 0208 40       		.uleb128 0x40
 3791 0209 18       		.uleb128 0x18
 3792 020a 9742     		.uleb128 0x2117
 3793 020c 19       		.uleb128 0x19
 3794 020d 01       		.uleb128 0x1
 3795 020e 13       		.uleb128 0x13
 3796 020f 00       		.byte	0
 3797 0210 00       		.byte	0
 3798 0211 27       		.uleb128 0x27
 3799 0212 05       		.uleb128 0x5
 3800 0213 00       		.byte	0
 3801 0214 03       		.uleb128 0x3
 3802 0215 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 109


 3803 0216 3A       		.uleb128 0x3a
 3804 0217 0B       		.uleb128 0xb
 3805 0218 3B       		.uleb128 0x3b
 3806 0219 05       		.uleb128 0x5
 3807 021a 49       		.uleb128 0x49
 3808 021b 13       		.uleb128 0x13
 3809 021c 02       		.uleb128 0x2
 3810 021d 18       		.uleb128 0x18
 3811 021e 00       		.byte	0
 3812 021f 00       		.byte	0
 3813 0220 28       		.uleb128 0x28
 3814 0221 34       		.uleb128 0x34
 3815 0222 00       		.byte	0
 3816 0223 03       		.uleb128 0x3
 3817 0224 0E       		.uleb128 0xe
 3818 0225 3A       		.uleb128 0x3a
 3819 0226 0B       		.uleb128 0xb
 3820 0227 3B       		.uleb128 0x3b
 3821 0228 05       		.uleb128 0x5
 3822 0229 49       		.uleb128 0x49
 3823 022a 13       		.uleb128 0x13
 3824 022b 02       		.uleb128 0x2
 3825 022c 18       		.uleb128 0x18
 3826 022d 00       		.byte	0
 3827 022e 00       		.byte	0
 3828 022f 29       		.uleb128 0x29
 3829 0230 2E       		.uleb128 0x2e
 3830 0231 01       		.byte	0x1
 3831 0232 3F       		.uleb128 0x3f
 3832 0233 19       		.uleb128 0x19
 3833 0234 03       		.uleb128 0x3
 3834 0235 0E       		.uleb128 0xe
 3835 0236 3A       		.uleb128 0x3a
 3836 0237 0B       		.uleb128 0xb
 3837 0238 3B       		.uleb128 0x3b
 3838 0239 05       		.uleb128 0x5
 3839 023a 27       		.uleb128 0x27
 3840 023b 19       		.uleb128 0x19
 3841 023c 49       		.uleb128 0x49
 3842 023d 13       		.uleb128 0x13
 3843 023e 11       		.uleb128 0x11
 3844 023f 01       		.uleb128 0x1
 3845 0240 12       		.uleb128 0x12
 3846 0241 06       		.uleb128 0x6
 3847 0242 40       		.uleb128 0x40
 3848 0243 18       		.uleb128 0x18
 3849 0244 9742     		.uleb128 0x2117
 3850 0246 19       		.uleb128 0x19
 3851 0247 01       		.uleb128 0x1
 3852 0248 13       		.uleb128 0x13
 3853 0249 00       		.byte	0
 3854 024a 00       		.byte	0
 3855 024b 2A       		.uleb128 0x2a
 3856 024c 34       		.uleb128 0x34
 3857 024d 00       		.byte	0
 3858 024e 03       		.uleb128 0x3
 3859 024f 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 110


 3860 0250 3A       		.uleb128 0x3a
 3861 0251 0B       		.uleb128 0xb
 3862 0252 3B       		.uleb128 0x3b
 3863 0253 0B       		.uleb128 0xb
 3864 0254 49       		.uleb128 0x49
 3865 0255 13       		.uleb128 0x13
 3866 0256 02       		.uleb128 0x2
 3867 0257 18       		.uleb128 0x18
 3868 0258 00       		.byte	0
 3869 0259 00       		.byte	0
 3870 025a 2B       		.uleb128 0x2b
 3871 025b 34       		.uleb128 0x34
 3872 025c 00       		.byte	0
 3873 025d 03       		.uleb128 0x3
 3874 025e 0E       		.uleb128 0xe
 3875 025f 3A       		.uleb128 0x3a
 3876 0260 0B       		.uleb128 0xb
 3877 0261 3B       		.uleb128 0x3b
 3878 0262 05       		.uleb128 0x5
 3879 0263 49       		.uleb128 0x49
 3880 0264 13       		.uleb128 0x13
 3881 0265 3F       		.uleb128 0x3f
 3882 0266 19       		.uleb128 0x19
 3883 0267 3C       		.uleb128 0x3c
 3884 0268 19       		.uleb128 0x19
 3885 0269 00       		.byte	0
 3886 026a 00       		.byte	0
 3887 026b 2C       		.uleb128 0x2c
 3888 026c 34       		.uleb128 0x34
 3889 026d 00       		.byte	0
 3890 026e 03       		.uleb128 0x3
 3891 026f 0E       		.uleb128 0xe
 3892 0270 3A       		.uleb128 0x3a
 3893 0271 0B       		.uleb128 0xb
 3894 0272 3B       		.uleb128 0x3b
 3895 0273 0B       		.uleb128 0xb
 3896 0274 49       		.uleb128 0x49
 3897 0275 13       		.uleb128 0x13
 3898 0276 3F       		.uleb128 0x3f
 3899 0277 19       		.uleb128 0x19
 3900 0278 02       		.uleb128 0x2
 3901 0279 18       		.uleb128 0x18
 3902 027a 00       		.byte	0
 3903 027b 00       		.byte	0
 3904 027c 2D       		.uleb128 0x2d
 3905 027d 34       		.uleb128 0x34
 3906 027e 00       		.byte	0
 3907 027f 03       		.uleb128 0x3
 3908 0280 0E       		.uleb128 0xe
 3909 0281 3A       		.uleb128 0x3a
 3910 0282 0B       		.uleb128 0xb
 3911 0283 3B       		.uleb128 0x3b
 3912 0284 0B       		.uleb128 0xb
 3913 0285 49       		.uleb128 0x49
 3914 0286 13       		.uleb128 0x13
 3915 0287 3F       		.uleb128 0x3f
 3916 0288 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 111


 3917 0289 3C       		.uleb128 0x3c
 3918 028a 19       		.uleb128 0x19
 3919 028b 00       		.byte	0
 3920 028c 00       		.byte	0
 3921 028d 2E       		.uleb128 0x2e
 3922 028e 2E       		.uleb128 0x2e
 3923 028f 00       		.byte	0
 3924 0290 3F       		.uleb128 0x3f
 3925 0291 19       		.uleb128 0x19
 3926 0292 3C       		.uleb128 0x3c
 3927 0293 19       		.uleb128 0x19
 3928 0294 6E       		.uleb128 0x6e
 3929 0295 0E       		.uleb128 0xe
 3930 0296 03       		.uleb128 0x3
 3931 0297 0E       		.uleb128 0xe
 3932 0298 3A       		.uleb128 0x3a
 3933 0299 0B       		.uleb128 0xb
 3934 029a 3B       		.uleb128 0x3b
 3935 029b 0B       		.uleb128 0xb
 3936 029c 00       		.byte	0
 3937 029d 00       		.byte	0
 3938 029e 00       		.byte	0
 3939              		.section	.debug_loc,"",%progbits
 3940              	.Ldebug_loc0:
 3941              	.LLST0:
 3942 0000 00000000 		.4byte	.LVL0
 3943 0004 06000000 		.4byte	.LVL2
 3944 0008 0100     		.2byte	0x1
 3945 000a 50       		.byte	0x50
 3946 000b 06000000 		.4byte	.LVL2
 3947 000f 0C000000 		.4byte	.LFE16
 3948 0013 0400     		.2byte	0x4
 3949 0015 F3       		.byte	0xf3
 3950 0016 01       		.uleb128 0x1
 3951 0017 50       		.byte	0x50
 3952 0018 9F       		.byte	0x9f
 3953 0019 00000000 		.4byte	0
 3954 001d 00000000 		.4byte	0
 3955              	.LLST1:
 3956 0021 02000000 		.4byte	.LVL1
 3957 0025 0A000000 		.4byte	.LVL3
 3958 0029 0100     		.2byte	0x1
 3959 002b 53       		.byte	0x53
 3960 002c 0A000000 		.4byte	.LVL3
 3961 0030 0C000000 		.4byte	.LFE16
 3962 0034 0700     		.2byte	0x7
 3963 0036 70       		.byte	0x70
 3964 0037 00       		.sleb128 0
 3965 0038 0A       		.byte	0xa
 3966 0039 FFFF     		.2byte	0xffff
 3967 003b 1A       		.byte	0x1a
 3968 003c 9F       		.byte	0x9f
 3969 003d 00000000 		.4byte	0
 3970 0041 00000000 		.4byte	0
 3971              	.LLST2:
 3972 0045 0E000000 		.4byte	.LVL4
 3973 0049 12000000 		.4byte	.LVL5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 112


 3974 004d 0600     		.2byte	0x6
 3975 004f 73       		.byte	0x73
 3976 0050 00       		.sleb128 0
 3977 0051 08       		.byte	0x8
 3978 0052 FF       		.byte	0xff
 3979 0053 1A       		.byte	0x1a
 3980 0054 9F       		.byte	0x9f
 3981 0055 12000000 		.4byte	.LVL5
 3982 0059 1A000000 		.4byte	.LVL6
 3983 005d 0100     		.2byte	0x1
 3984 005f 53       		.byte	0x53
 3985 0060 1A000000 		.4byte	.LVL6
 3986 0064 1C000000 		.4byte	.LVL7
 3987 0068 0500     		.2byte	0x5
 3988 006a 0C       		.byte	0xc
 3989 006b C0010B40 		.4byte	0x400b01c0
 3990 006f 00000000 		.4byte	0
 3991 0073 00000000 		.4byte	0
 3992              	.LLST3:
 3993 0077 96000000 		.4byte	.LVL13
 3994 007b 9A000000 		.4byte	.LVL14
 3995 007f 0100     		.2byte	0x1
 3996 0081 53       		.byte	0x53
 3997 0082 00000000 		.4byte	0
 3998 0086 00000000 		.4byte	0
 3999              	.LLST4:
 4000 008a 52000000 		.4byte	.LVL8
 4001 008e 58000000 		.4byte	.LVL9
 4002 0092 0400     		.2byte	0x4
 4003 0094 0A       		.byte	0xa
 4004 0095 C003     		.2byte	0x3c0
 4005 0097 9F       		.byte	0x9f
 4006 0098 58000000 		.4byte	.LVL9
 4007 009c 68000000 		.4byte	.LVL11
 4008 00a0 0100     		.2byte	0x1
 4009 00a2 53       		.byte	0x53
 4010 00a3 00000000 		.4byte	0
 4011 00a7 00000000 		.4byte	0
 4012              	.LLST5:
 4013 00ab 80000000 		.4byte	.LVL12
 4014 00af B4000000 		.4byte	.LVL15
 4015 00b3 0100     		.2byte	0x1
 4016 00b5 50       		.byte	0x50
 4017 00b6 00000000 		.4byte	0
 4018 00ba 00000000 		.4byte	0
 4019              	.LLST6:
 4020 00be 58000000 		.4byte	.LVL22
 4021 00c2 6B000000 		.4byte	.LVL26-1
 4022 00c6 0100     		.2byte	0x1
 4023 00c8 50       		.byte	0x50
 4024 00c9 7E000000 		.4byte	.LVL27
 4025 00cd 91000000 		.4byte	.LVL31-1
 4026 00d1 0100     		.2byte	0x1
 4027 00d3 50       		.byte	0x50
 4028 00d4 CA000000 		.4byte	.LVL33
 4029 00d8 D7000000 		.4byte	.LVL36-1
 4030 00dc 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 113


 4031 00de 50       		.byte	0x50
 4032 00df DC000000 		.4byte	.LVL37
 4033 00e3 E7000000 		.4byte	.LVL40-1
 4034 00e7 0100     		.2byte	0x1
 4035 00e9 50       		.byte	0x50
 4036 00ea EC000000 		.4byte	.LVL41
 4037 00ee FF000000 		.4byte	.LVL45-1
 4038 00f2 0100     		.2byte	0x1
 4039 00f4 50       		.byte	0x50
 4040 00f5 04010000 		.4byte	.LVL46
 4041 00f9 15010000 		.4byte	.LVL50-1
 4042 00fd 0100     		.2byte	0x1
 4043 00ff 50       		.byte	0x50
 4044 0100 00000000 		.4byte	0
 4045 0104 00000000 		.4byte	0
 4046              	.LLST7:
 4047 0108 5C000000 		.4byte	.LVL23
 4048 010c 60000000 		.4byte	.LVL24
 4049 0110 0100     		.2byte	0x1
 4050 0112 51       		.byte	0x51
 4051 0113 60000000 		.4byte	.LVL24
 4052 0117 6B000000 		.4byte	.LVL26-1
 4053 011b 0100     		.2byte	0x1
 4054 011d 53       		.byte	0x53
 4055 011e 82000000 		.4byte	.LVL28
 4056 0122 86000000 		.4byte	.LVL29
 4057 0126 0100     		.2byte	0x1
 4058 0128 51       		.byte	0x51
 4059 0129 86000000 		.4byte	.LVL29
 4060 012d 91000000 		.4byte	.LVL31-1
 4061 0131 0100     		.2byte	0x1
 4062 0133 53       		.byte	0x53
 4063 0134 CE000000 		.4byte	.LVL34
 4064 0138 D2000000 		.4byte	.LVL35
 4065 013c 0100     		.2byte	0x1
 4066 013e 52       		.byte	0x52
 4067 013f D2000000 		.4byte	.LVL35
 4068 0143 D7000000 		.4byte	.LVL36-1
 4069 0147 0100     		.2byte	0x1
 4070 0149 53       		.byte	0x53
 4071 014a DE000000 		.4byte	.LVL38
 4072 014e E2000000 		.4byte	.LVL39
 4073 0152 0100     		.2byte	0x1
 4074 0154 52       		.byte	0x52
 4075 0155 E2000000 		.4byte	.LVL39
 4076 0159 E7000000 		.4byte	.LVL40-1
 4077 015d 0100     		.2byte	0x1
 4078 015f 53       		.byte	0x53
 4079 0160 F0000000 		.4byte	.LVL42
 4080 0164 F4000000 		.4byte	.LVL43
 4081 0168 0100     		.2byte	0x1
 4082 016a 52       		.byte	0x52
 4083 016b F4000000 		.4byte	.LVL43
 4084 016f FF000000 		.4byte	.LVL45-1
 4085 0173 0100     		.2byte	0x1
 4086 0175 53       		.byte	0x53
 4087 0176 06010000 		.4byte	.LVL47
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 114


 4088 017a 0A010000 		.4byte	.LVL48
 4089 017e 0100     		.2byte	0x1
 4090 0180 52       		.byte	0x52
 4091 0181 0A010000 		.4byte	.LVL48
 4092 0185 15010000 		.4byte	.LVL50-1
 4093 0189 0100     		.2byte	0x1
 4094 018b 53       		.byte	0x53
 4095 018c 00000000 		.4byte	0
 4096 0190 00000000 		.4byte	0
 4097              	.LLST8:
 4098 0194 00000000 		.4byte	.LVL56
 4099 0198 1E000000 		.4byte	.LVL58
 4100 019c 0100     		.2byte	0x1
 4101 019e 50       		.byte	0x50
 4102 019f 1E000000 		.4byte	.LVL58
 4103 01a3 EC000000 		.4byte	.LFE9
 4104 01a7 0200     		.2byte	0x2
 4105 01a9 91       		.byte	0x91
 4106 01aa 64       		.sleb128 -28
 4107 01ab 00000000 		.4byte	0
 4108 01af 00000000 		.4byte	0
 4109              	.LLST9:
 4110 01b3 00000000 		.4byte	.LVL56
 4111 01b7 21000000 		.4byte	.LVL59-1
 4112 01bb 0100     		.2byte	0x1
 4113 01bd 51       		.byte	0x51
 4114 01be 21000000 		.4byte	.LVL59-1
 4115 01c2 EC000000 		.4byte	.LFE9
 4116 01c6 0400     		.2byte	0x4
 4117 01c8 F3       		.byte	0xf3
 4118 01c9 01       		.uleb128 0x1
 4119 01ca 51       		.byte	0x51
 4120 01cb 9F       		.byte	0x9f
 4121 01cc 00000000 		.4byte	0
 4122 01d0 00000000 		.4byte	0
 4123              	.LLST10:
 4124 01d4 28000000 		.4byte	.LVL60
 4125 01d8 2A000000 		.4byte	.LVL61
 4126 01dc 0700     		.2byte	0x7
 4127 01de 70       		.byte	0x70
 4128 01df 00       		.sleb128 0
 4129 01e0 0A       		.byte	0xa
 4130 01e1 FFFF     		.2byte	0xffff
 4131 01e3 1A       		.byte	0x1a
 4132 01e4 9F       		.byte	0x9f
 4133 01e5 32000000 		.4byte	.LVL63
 4134 01e9 3E000000 		.4byte	.LVL65
 4135 01ed 0100     		.2byte	0x1
 4136 01ef 50       		.byte	0x50
 4137 01f0 3E000000 		.4byte	.LVL65
 4138 01f4 D4000000 		.4byte	.LVL79
 4139 01f8 0100     		.2byte	0x1
 4140 01fa 56       		.byte	0x56
 4141 01fb 00000000 		.4byte	0
 4142 01ff 00000000 		.4byte	0
 4143              	.LLST11:
 4144 0203 3A000000 		.4byte	.LVL64
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 115


 4145 0207 3E000000 		.4byte	.LVL65
 4146 020b 0100     		.2byte	0x1
 4147 020d 52       		.byte	0x52
 4148 020e 3E000000 		.4byte	.LVL65
 4149 0212 D4000000 		.4byte	.LVL78
 4150 0216 0100     		.2byte	0x1
 4151 0218 55       		.byte	0x55
 4152 0219 00000000 		.4byte	0
 4153 021d 00000000 		.4byte	0
 4154              	.LLST12:
 4155 0221 3A000000 		.4byte	.LVL64
 4156 0225 3E000000 		.4byte	.LVL65
 4157 0229 0200     		.2byte	0x2
 4158 022b 30       		.byte	0x30
 4159 022c 9F       		.byte	0x9f
 4160 022d 3E000000 		.4byte	.LVL65
 4161 0231 62000000 		.4byte	.LVL67
 4162 0235 0100     		.2byte	0x1
 4163 0237 54       		.byte	0x54
 4164 0238 66000000 		.4byte	.LVL68
 4165 023c 68000000 		.4byte	.LVL69
 4166 0240 0100     		.2byte	0x1
 4167 0242 51       		.byte	0x51
 4168 0243 80000000 		.4byte	.LVL72
 4169 0247 84000000 		.4byte	.LVL73
 4170 024b 0200     		.2byte	0x2
 4171 024d 30       		.byte	0x30
 4172 024e 9F       		.byte	0x9f
 4173 024f 84000000 		.4byte	.LVL73
 4174 0253 EC000000 		.4byte	.LFE9
 4175 0257 0100     		.2byte	0x1
 4176 0259 51       		.byte	0x51
 4177 025a 00000000 		.4byte	0
 4178 025e 00000000 		.4byte	0
 4179              	.LLST13:
 4180 0262 0C000000 		.4byte	.LVL57
 4181 0266 66000000 		.4byte	.LVL68
 4182 026a 0300     		.2byte	0x3
 4183 026c 08       		.byte	0x8
 4184 026d 40       		.byte	0x40
 4185 026e 9F       		.byte	0x9f
 4186 026f 66000000 		.4byte	.LVL68
 4187 0273 68000000 		.4byte	.LVL69
 4188 0277 0100     		.2byte	0x1
 4189 0279 54       		.byte	0x54
 4190 027a 68000000 		.4byte	.LVL69
 4191 027e CA000000 		.4byte	.LVL75
 4192 0282 0100     		.2byte	0x1
 4193 0284 57       		.byte	0x57
 4194 0285 CA000000 		.4byte	.LVL75
 4195 0289 D4000000 		.4byte	.LVL77
 4196 028d 0100     		.2byte	0x1
 4197 028f 54       		.byte	0x54
 4198 0290 00000000 		.4byte	0
 4199 0294 00000000 		.4byte	0
 4200              	.LLST14:
 4201 0298 0C000000 		.4byte	.LVL57
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 116


 4202 029c 66000000 		.4byte	.LVL68
 4203 02a0 0300     		.2byte	0x3
 4204 02a2 08       		.byte	0x8
 4205 02a3 20       		.byte	0x20
 4206 02a4 9F       		.byte	0x9f
 4207 02a5 66000000 		.4byte	.LVL68
 4208 02a9 68000000 		.4byte	.LVL69
 4209 02ad 0100     		.2byte	0x1
 4210 02af 53       		.byte	0x53
 4211 02b0 68000000 		.4byte	.LVL69
 4212 02b4 CE000000 		.4byte	.LVL76
 4213 02b8 0100     		.2byte	0x1
 4214 02ba 54       		.byte	0x54
 4215 02bb CE000000 		.4byte	.LVL76
 4216 02bf EC000000 		.4byte	.LFE9
 4217 02c3 0100     		.2byte	0x1
 4218 02c5 53       		.byte	0x53
 4219 02c6 00000000 		.4byte	0
 4220 02ca 00000000 		.4byte	0
 4221              	.LLST15:
 4222 02ce 00000000 		.4byte	.LVL80
 4223 02d2 16000000 		.4byte	.LVL84
 4224 02d6 0100     		.2byte	0x1
 4225 02d8 50       		.byte	0x50
 4226 02d9 16000000 		.4byte	.LVL84
 4227 02dd 20000000 		.4byte	.LFE11
 4228 02e1 0400     		.2byte	0x4
 4229 02e3 F3       		.byte	0xf3
 4230 02e4 01       		.uleb128 0x1
 4231 02e5 50       		.byte	0x50
 4232 02e6 9F       		.byte	0x9f
 4233 02e7 00000000 		.4byte	0
 4234 02eb 00000000 		.4byte	0
 4235              	.LLST16:
 4236 02ef 06000000 		.4byte	.LVL81
 4237 02f3 0E000000 		.4byte	.LVL82
 4238 02f7 0100     		.2byte	0x1
 4239 02f9 51       		.byte	0x51
 4240 02fa 0E000000 		.4byte	.LVL82
 4241 02fe 14000000 		.4byte	.LVL83
 4242 0302 0100     		.2byte	0x1
 4243 0304 53       		.byte	0x53
 4244 0305 14000000 		.4byte	.LVL83
 4245 0309 1C000000 		.4byte	.LVL85
 4246 030d 0100     		.2byte	0x1
 4247 030f 51       		.byte	0x51
 4248 0310 1C000000 		.4byte	.LVL85
 4249 0314 20000000 		.4byte	.LFE11
 4250 0318 0100     		.2byte	0x1
 4251 031a 53       		.byte	0x53
 4252 031b 00000000 		.4byte	0
 4253 031f 00000000 		.4byte	0
 4254              	.LLST17:
 4255 0323 00000000 		.4byte	.LVL86
 4256 0327 16000000 		.4byte	.LVL90
 4257 032b 0100     		.2byte	0x1
 4258 032d 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 117


 4259 032e 16000000 		.4byte	.LVL90
 4260 0332 20000000 		.4byte	.LFE12
 4261 0336 0400     		.2byte	0x4
 4262 0338 F3       		.byte	0xf3
 4263 0339 01       		.uleb128 0x1
 4264 033a 50       		.byte	0x50
 4265 033b 9F       		.byte	0x9f
 4266 033c 00000000 		.4byte	0
 4267 0340 00000000 		.4byte	0
 4268              	.LLST18:
 4269 0344 06000000 		.4byte	.LVL87
 4270 0348 14000000 		.4byte	.LVL89
 4271 034c 0100     		.2byte	0x1
 4272 034e 53       		.byte	0x53
 4273 034f 14000000 		.4byte	.LVL89
 4274 0353 1C000000 		.4byte	.LVL91
 4275 0357 0100     		.2byte	0x1
 4276 0359 51       		.byte	0x51
 4277 035a 1C000000 		.4byte	.LVL91
 4278 035e 20000000 		.4byte	.LFE12
 4279 0362 0100     		.2byte	0x1
 4280 0364 53       		.byte	0x53
 4281 0365 00000000 		.4byte	0
 4282 0369 00000000 		.4byte	0
 4283              	.LLST19:
 4284 036d 06000000 		.4byte	.LVL100
 4285 0371 18000000 		.4byte	.LVL103
 4286 0375 0100     		.2byte	0x1
 4287 0377 53       		.byte	0x53
 4288 0378 1A000000 		.4byte	.LVL104
 4289 037c 20000000 		.4byte	.LVL105
 4290 0380 0100     		.2byte	0x1
 4291 0382 52       		.byte	0x52
 4292 0383 20000000 		.4byte	.LVL105
 4293 0387 2E000000 		.4byte	.LFE14
 4294 038b 0100     		.2byte	0x1
 4295 038d 53       		.byte	0x53
 4296 038e 00000000 		.4byte	0
 4297 0392 00000000 		.4byte	0
 4298              	.LLST20:
 4299 0396 00000000 		.4byte	.LVL122
 4300 039a 0C000000 		.4byte	.LVL123
 4301 039e 0100     		.2byte	0x1
 4302 03a0 50       		.byte	0x50
 4303 03a1 0C000000 		.4byte	.LVL123
 4304 03a5 22000000 		.4byte	.LVL127
 4305 03a9 0100     		.2byte	0x1
 4306 03ab 54       		.byte	0x54
 4307 03ac 22000000 		.4byte	.LVL127
 4308 03b0 68000000 		.4byte	.LFE3
 4309 03b4 0400     		.2byte	0x4
 4310 03b6 F3       		.byte	0xf3
 4311 03b7 01       		.uleb128 0x1
 4312 03b8 50       		.byte	0x50
 4313 03b9 9F       		.byte	0x9f
 4314 03ba 00000000 		.4byte	0
 4315 03be 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 118


 4316              	.LLST21:
 4317 03c2 20000000 		.4byte	.LVL126
 4318 03c6 4A000000 		.4byte	.LVL137
 4319 03ca 0100     		.2byte	0x1
 4320 03cc 55       		.byte	0x55
 4321 03cd 00000000 		.4byte	0
 4322 03d1 00000000 		.4byte	0
 4323              	.LLST22:
 4324 03d5 34000000 		.4byte	.LVL129
 4325 03d9 3C000000 		.4byte	.LVL133
 4326 03dd 0100     		.2byte	0x1
 4327 03df 53       		.byte	0x53
 4328 03e0 3C000000 		.4byte	.LVL133
 4329 03e4 3E000000 		.4byte	.LVL134
 4330 03e8 0800     		.2byte	0x8
 4331 03ea 75       		.byte	0x75
 4332 03eb 0C       		.sleb128 12
 4333 03ec 94       		.byte	0x94
 4334 03ed 01       		.byte	0x1
 4335 03ee 08       		.byte	0x8
 4336 03ef FF       		.byte	0xff
 4337 03f0 1A       		.byte	0x1a
 4338 03f1 9F       		.byte	0x9f
 4339 03f2 3E000000 		.4byte	.LVL134
 4340 03f6 4A000000 		.4byte	.LVL136
 4341 03fa 0100     		.2byte	0x1
 4342 03fc 54       		.byte	0x54
 4343 03fd 00000000 		.4byte	0
 4344 0401 00000000 		.4byte	0
 4345              	.LLST23:
 4346 0405 22000000 		.4byte	.LVL127
 4347 0409 36000000 		.4byte	.LVL130
 4348 040d 0100     		.2byte	0x1
 4349 040f 54       		.byte	0x54
 4350 0410 36000000 		.4byte	.LVL130
 4351 0414 38000000 		.4byte	.LVL131
 4352 0418 0300     		.2byte	0x3
 4353 041a 74       		.byte	0x74
 4354 041b 01       		.sleb128 1
 4355 041c 9F       		.byte	0x9f
 4356 041d 3A000000 		.4byte	.LVL132
 4357 0421 3E000000 		.4byte	.LVL134
 4358 0425 0100     		.2byte	0x1
 4359 0427 54       		.byte	0x54
 4360 0428 00000000 		.4byte	0
 4361 042c 00000000 		.4byte	0
 4362              	.LLST24:
 4363 0430 00000000 		.4byte	.LVL138
 4364 0434 07000000 		.4byte	.LVL139-1
 4365 0438 0100     		.2byte	0x1
 4366 043a 50       		.byte	0x50
 4367 043b 07000000 		.4byte	.LVL139-1
 4368 043f 84000000 		.4byte	.LFE4
 4369 0443 0400     		.2byte	0x4
 4370 0445 F3       		.byte	0xf3
 4371 0446 01       		.uleb128 0x1
 4372 0447 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 119


 4373 0448 9F       		.byte	0x9f
 4374 0449 00000000 		.4byte	0
 4375 044d 00000000 		.4byte	0
 4376              	.LLST25:
 4377 0451 00000000 		.4byte	.LVL138
 4378 0455 07000000 		.4byte	.LVL139-1
 4379 0459 0100     		.2byte	0x1
 4380 045b 51       		.byte	0x51
 4381 045c 07000000 		.4byte	.LVL139-1
 4382 0460 3A000000 		.4byte	.LVL144
 4383 0464 0100     		.2byte	0x1
 4384 0466 54       		.byte	0x54
 4385 0467 3A000000 		.4byte	.LVL144
 4386 046b 84000000 		.4byte	.LFE4
 4387 046f 0400     		.2byte	0x4
 4388 0471 F3       		.byte	0xf3
 4389 0472 01       		.uleb128 0x1
 4390 0473 51       		.byte	0x51
 4391 0474 9F       		.byte	0x9f
 4392 0475 00000000 		.4byte	0
 4393 0479 00000000 		.4byte	0
 4394              	.LLST26:
 4395 047d 36000000 		.4byte	.LVL143
 4396 0481 4A000000 		.4byte	.LVL145
 4397 0485 0100     		.2byte	0x1
 4398 0487 51       		.byte	0x51
 4399 0488 00000000 		.4byte	0
 4400 048c 00000000 		.4byte	0
 4401              	.LLST27:
 4402 0490 2E000000 		.4byte	.LVL141
 4403 0494 32000000 		.4byte	.LVL142
 4404 0498 0100     		.2byte	0x1
 4405 049a 50       		.byte	0x50
 4406 049b 32000000 		.4byte	.LVL142
 4407 049f 68000000 		.4byte	.LVL148
 4408 04a3 0100     		.2byte	0x1
 4409 04a5 56       		.byte	0x56
 4410 04a6 00000000 		.4byte	0
 4411 04aa 00000000 		.4byte	0
 4412              	.LLST28:
 4413 04ae 00000000 		.4byte	.LVL149
 4414 04b2 02000000 		.4byte	.LVL150
 4415 04b6 0100     		.2byte	0x1
 4416 04b8 50       		.byte	0x50
 4417 04b9 02000000 		.4byte	.LVL150
 4418 04bd 10000000 		.4byte	.LFE15
 4419 04c1 0400     		.2byte	0x4
 4420 04c3 F3       		.byte	0xf3
 4421 04c4 01       		.uleb128 0x1
 4422 04c5 50       		.byte	0x50
 4423 04c6 9F       		.byte	0x9f
 4424 04c7 00000000 		.4byte	0
 4425 04cb 00000000 		.4byte	0
 4426              		.section	.debug_aranges,"",%progbits
 4427 0000 9C000000 		.4byte	0x9c
 4428 0004 0200     		.2byte	0x2
 4429 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 120


 4430 000a 04       		.byte	0x4
 4431 000b 00       		.byte	0
 4432 000c 0000     		.2byte	0
 4433 000e 0000     		.2byte	0
 4434 0010 00000000 		.4byte	.LFB16
 4435 0014 0C000000 		.4byte	.LFE16-.LFB16
 4436 0018 00000000 		.4byte	.LFB10
 4437 001c 3C010000 		.4byte	.LFE10-.LFB10
 4438 0020 00000000 		.4byte	.LFB8
 4439 0024 5C000000 		.4byte	.LFE8-.LFB8
 4440 0028 00000000 		.4byte	.LFB17
 4441 002c 90000000 		.4byte	.LFE17-.LFB17
 4442 0030 00000000 		.4byte	.LFB1
 4443 0034 D4010000 		.4byte	.LFE1-.LFB1
 4444 0038 00000000 		.4byte	.LFB6
 4445 003c 28000000 		.4byte	.LFE6-.LFB6
 4446 0040 00000000 		.4byte	.LFB9
 4447 0044 EC000000 		.4byte	.LFE9-.LFB9
 4448 0048 00000000 		.4byte	.LFB11
 4449 004c 20000000 		.4byte	.LFE11-.LFB11
 4450 0050 00000000 		.4byte	.LFB12
 4451 0054 20000000 		.4byte	.LFE12-.LFB12
 4452 0058 00000000 		.4byte	.LFB5
 4453 005c 74000000 		.4byte	.LFE5-.LFB5
 4454 0060 00000000 		.4byte	.LFB13
 4455 0064 0C000000 		.4byte	.LFE13-.LFB13
 4456 0068 00000000 		.4byte	.LFB14
 4457 006c 2E000000 		.4byte	.LFE14-.LFB14
 4458 0070 00000000 		.4byte	.LFB7
 4459 0074 00010000 		.4byte	.LFE7-.LFB7
 4460 0078 00000000 		.4byte	.LFB2
 4461 007c 24000000 		.4byte	.LFE2-.LFB2
 4462 0080 00000000 		.4byte	.LFB3
 4463 0084 68000000 		.4byte	.LFE3-.LFB3
 4464 0088 00000000 		.4byte	.LFB4
 4465 008c 84000000 		.4byte	.LFE4-.LFB4
 4466 0090 00000000 		.4byte	.LFB15
 4467 0094 10000000 		.4byte	.LFE15-.LFB15
 4468 0098 00000000 		.4byte	0
 4469 009c 00000000 		.4byte	0
 4470              		.section	.debug_ranges,"",%progbits
 4471              	.Ldebug_ranges0:
 4472 0000 00000000 		.4byte	.LFB16
 4473 0004 0C000000 		.4byte	.LFE16
 4474 0008 00000000 		.4byte	.LFB10
 4475 000c 3C010000 		.4byte	.LFE10
 4476 0010 00000000 		.4byte	.LFB8
 4477 0014 5C000000 		.4byte	.LFE8
 4478 0018 00000000 		.4byte	.LFB17
 4479 001c 90000000 		.4byte	.LFE17
 4480 0020 00000000 		.4byte	.LFB1
 4481 0024 D4010000 		.4byte	.LFE1
 4482 0028 00000000 		.4byte	.LFB6
 4483 002c 28000000 		.4byte	.LFE6
 4484 0030 00000000 		.4byte	.LFB9
 4485 0034 EC000000 		.4byte	.LFE9
 4486 0038 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 121


 4487 003c 20000000 		.4byte	.LFE11
 4488 0040 00000000 		.4byte	.LFB12
 4489 0044 20000000 		.4byte	.LFE12
 4490 0048 00000000 		.4byte	.LFB5
 4491 004c 74000000 		.4byte	.LFE5
 4492 0050 00000000 		.4byte	.LFB13
 4493 0054 0C000000 		.4byte	.LFE13
 4494 0058 00000000 		.4byte	.LFB14
 4495 005c 2E000000 		.4byte	.LFE14
 4496 0060 00000000 		.4byte	.LFB7
 4497 0064 00010000 		.4byte	.LFE7
 4498 0068 00000000 		.4byte	.LFB2
 4499 006c 24000000 		.4byte	.LFE2
 4500 0070 00000000 		.4byte	.LFB3
 4501 0074 68000000 		.4byte	.LFE3
 4502 0078 00000000 		.4byte	.LFB4
 4503 007c 84000000 		.4byte	.LFE4
 4504 0080 00000000 		.4byte	.LFB15
 4505 0084 10000000 		.4byte	.LFE15
 4506 0088 00000000 		.4byte	0
 4507 008c 00000000 		.4byte	0
 4508              		.section	.debug_line,"",%progbits
 4509              	.Ldebug_line0:
 4510 0000 61030000 		.section	.debug_str,"MS",%progbits,1
 4510      0200B000 
 4510      00000201 
 4510      FB0E0D00 
 4510      01010101 
 4511              	.LASF146:
 4512 0000 43617053 		.ascii	"CapSense_1_BistDischargeExtCapacitors\000"
 4512      656E7365 
 4512      5F315F42 
 4512      69737444 
 4512      69736368 
 4513              	.LASF83:
 4514 0026 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 4514      656E7365 
 4514      5F315F46 
 4514      4C415348 
 4514      5F57445F 
 4515              	.LASF137:
 4516 0041 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
 4516      656E7365 
 4516      5F315F72 
 4516      65717565 
 4516      73745363 
 4517              	.LASF113:
 4518 0061 43617053 		.ascii	"CapSense_1_CSXDisconnectRx\000"
 4518      656E7365 
 4518      5F315F43 
 4518      53584469 
 4518      73636F6E 
 4519              	.LASF138:
 4520 007c 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 4520      656E7365 
 4520      5F315F63 
 4520      75725261 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 122


 4520      6D536E73 
 4521              	.LASF58:
 4522 0094 736E7254 		.ascii	"snrTestWidgetId\000"
 4522      65737457 
 4522      69646765 
 4522      74496400 
 4523              	.LASF129:
 4524 00a4 43617053 		.ascii	"CapSense_1_eleCsxDisconnectFlag\000"
 4524      656E7365 
 4524      5F315F65 
 4524      6C654373 
 4524      78446973 
 4525              	.LASF8:
 4526 00c4 756E7369 		.ascii	"unsigned int\000"
 4526      676E6564 
 4526      20696E74 
 4526      00
 4527              	.LASF148:
 4528 00d1 43617053 		.ascii	"CapSense_1_SsSetIOsInDefaultState\000"
 4528      656E7365 
 4528      5F315F53 
 4528      73536574 
 4528      494F7349 
 4529              	.LASF105:
 4530 00f3 6E657874 		.ascii	"nextIdacMask\000"
 4530      49646163 
 4530      4D61736B 
 4530      00
 4531              	.LASF49:
 4532 0100 7363616E 		.ascii	"scanCounter\000"
 4532      436F756E 
 4532      74657200 
 4533              	.LASF47:
 4534 010c 6877436C 		.ascii	"hwClock\000"
 4534      6F636B00 
 4535              	.LASF108:
 4536 0114 72656756 		.ascii	"regValue\000"
 4536      616C7565 
 4536      00
 4537              	.LASF159:
 4538 011d 43617053 		.ascii	"CapSense_1_SsCSXStartSampleExt\000"
 4538      656E7365 
 4538      5F315F53 
 4538      73435358 
 4538      53746172 
 4539              	.LASF95:
 4540 013c 696E7465 		.ascii	"interruptState\000"
 4540      72727570 
 4540      74537461 
 4540      746500
 4541              	.LASF122:
 4542 014b 7278496E 		.ascii	"rxIndex\000"
 4542      64657800 
 4543              	.LASF114:
 4544 0153 43617053 		.ascii	"CapSense_1_SsCSXPostMultiScan\000"
 4544      656E7365 
 4544      5F315F53 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 123


 4544      73435358 
 4544      506F7374 
 4545              	.LASF115:
 4546 0171 43617053 		.ascii	"CapSense_1_CSXElectrodeCheck\000"
 4546      656E7365 
 4546      5F315F43 
 4546      5358456C 
 4546      65637472 
 4547              	.LASF142:
 4548 018e 4379496E 		.ascii	"CyIntDisable\000"
 4548      74446973 
 4548      61626C65 
 4548      00
 4549              	.LASF157:
 4550 019b 433A5C55 		.ascii	"C:\\Users\\michael.machate\\Desktop\\Mutal\\FirstTe"
 4550      73657273 
 4550      5C6D6963 
 4550      6861656C 
 4550      2E6D6163 
 4551 01c9 73744D75 		.ascii	"stMutal.cydsn\000"
 4551      74616C2E 
 4551      63796473 
 4551      6E00
 4552              	.LASF139:
 4553 01d7 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 4553      656E7365 
 4553      5F315F73 
 4553      63616E46 
 4553      72657149 
 4554              	.LASF112:
 4555 01f0 43617053 		.ascii	"CapSense_1_CSXDisconnectTx\000"
 4555      656E7365 
 4555      5F315F43 
 4555      53584469 
 4555      73636F6E 
 4556              	.LASF37:
 4557 020b 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 4557      656E7365 
 4557      5F315F52 
 4557      414D5F57 
 4557      445F4C49 
 4558              	.LASF107:
 4559 0229 74785074 		.ascii	"txPtr\000"
 4559      7200
 4560              	.LASF120:
 4561 022f 73656E73 		.ascii	"sensorId\000"
 4561      6F724964 
 4561      00
 4562              	.LASF124:
 4563 0238 70747257 		.ascii	"ptrWdgt\000"
 4563      64677400 
 4564              	.LASF104:
 4565 0240 63757249 		.ascii	"curIdacMask\000"
 4565      6461634D 
 4565      61736B00 
 4566              	.LASF127:
 4567 024c 43617053 		.ascii	"CapSense_1_curWdgtTotalRx\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 124


 4567      656E7365 
 4567      5F315F63 
 4567      75725764 
 4567      6774546F 
 4568              	.LASF12:
 4569 0266 666C6F61 		.ascii	"float\000"
 4569      7400
 4570              	.LASF71:
 4571 026c 73686966 		.ascii	"shift\000"
 4571      7400
 4572              	.LASF155:
 4573 0272 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4573      43313120 
 4573      352E342E 
 4573      31203230 
 4573      31363036 
 4574 02a5 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4574      20726576 
 4574      6973696F 
 4574      6E203233 
 4574      37373135 
 4575 02d8 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4575      67202D66 
 4575      66756E63 
 4575      74696F6E 
 4575      2D736563 
 4576              	.LASF87:
 4577 0304 77617463 		.ascii	"watchdogCounter\000"
 4577      68646F67 
 4577      436F756E 
 4577      74657200 
 4578              	.LASF121:
 4579 0314 7478496E 		.ascii	"txIndex\000"
 4579      64657800 
 4580              	.LASF151:
 4581 031c 43617053 		.ascii	"CapSense_1_SetupWidget\000"
 4581      656E7365 
 4581      5F315F53 
 4581      65747570 
 4581      57696467 
 4582              	.LASF150:
 4583 0333 43794465 		.ascii	"CyDelayUs\000"
 4583      6C617955 
 4583      7300
 4584              	.LASF57:
 4585 033d 736E734C 		.ascii	"snsList\000"
 4585      69737400 
 4586              	.LASF7:
 4587 0345 6C6F6E67 		.ascii	"long long unsigned int\000"
 4587      206C6F6E 
 4587      6720756E 
 4587      7369676E 
 4587      65642069 
 4588              	.LASF109:
 4589 035c 43617053 		.ascii	"CapSense_1_CSXConnectRx\000"
 4589      656E7365 
 4589      5F315F43 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 125


 4589      5358436F 
 4589      6E6E6563 
 4590              	.LASF59:
 4591 0374 736E7254 		.ascii	"snrTestSensorId\000"
 4591      65737453 
 4591      656E736F 
 4591      72496400 
 4592              	.LASF80:
 4593 0384 77646774 		.ascii	"wdgtType\000"
 4593      54797065 
 4593      00
 4594              	.LASF94:
 4595 038d 43617053 		.ascii	"CapSense_1_CSXInitialize\000"
 4595      656E7365 
 4595      5F315F43 
 4595      5358496E 
 4595      69746961 
 4596              	.LASF19:
 4597 03a6 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 4597      656E7365 
 4597      5F315F4C 
 4597      4F575F42 
 4597      534C4E5F 
 4598              	.LASF118:
 4599 03c3 736E7343 		.ascii	"snsClkVal\000"
 4599      6C6B5661 
 4599      6C00
 4600              	.LASF100:
 4601 03cd 74617267 		.ascii	"target\000"
 4601      657400
 4602              	.LASF65:
 4603 03d4 64725074 		.ascii	"drPtr\000"
 4603      7200
 4604              	.LASF149:
 4605 03da 43617053 		.ascii	"CapSense_1_SsIsrInitialize\000"
 4605      656E7365 
 4605      5F315F53 
 4605      73497372 
 4605      496E6974 
 4606              	.LASF128:
 4607 03f5 43617053 		.ascii	"CapSense_1_curWdgtTotalTx\000"
 4607      656E7365 
 4607      5F315F63 
 4607      75725764 
 4607      6774546F 
 4608              	.LASF23:
 4609 040f 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 4609      656E7365 
 4609      5F315F53 
 4609      454E5345 
 4609      5F4D4554 
 4610              	.LASF31:
 4611 042e 6C6F7742 		.ascii	"lowBslnRst\000"
 4611      736C6E52 
 4611      737400
 4612              	.LASF135:
 4613 0439 43617053 		.ascii	"CapSense_1_widgetIndex\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 126


 4613      656E7365 
 4613      5F315F77 
 4613      69646765 
 4613      74496E64 
 4614              	.LASF154:
 4615 0450 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 4615      656E7365 
 4615      5F315F53 
 4615      73537769 
 4615      74636853 
 4616              	.LASF147:
 4617 046f 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 4617      656E7365 
 4617      5F315F53 
 4617      73536574 
 4617      4D6F6443 
 4618              	.LASF79:
 4619 0492 746F7461 		.ascii	"totalNumSns\000"
 4619      6C4E756D 
 4619      536E7300 
 4620              	.LASF106:
 4621 049e 43617053 		.ascii	"CapSense_1_CSXConnectTx\000"
 4621      656E7365 
 4621      5F315F43 
 4621      5358436F 
 4621      6E6E6563 
 4622              	.LASF126:
 4623 04b6 43617053 		.ascii	"CapSense_1_curRxIOPtr\000"
 4623      656E7365 
 4623      5F315F63 
 4623      75725278 
 4623      494F5074 
 4624              	.LASF102:
 4625 04cc 746F7461 		.ascii	"totalSns\000"
 4625      6C536E73 
 4625      00
 4626              	.LASF27:
 4627 04d5 6E6F6973 		.ascii	"noiseTh\000"
 4627      65546800 
 4628              	.LASF14:
 4629 04dd 63686172 		.ascii	"char\000"
 4629      00
 4630              	.LASF145:
 4631 04e2 43794578 		.ascii	"CyExitCriticalSection\000"
 4631      69744372 
 4631      69746963 
 4631      616C5365 
 4631      6374696F 
 4632              	.LASF125:
 4633 04f8 43617053 		.ascii	"CapSense_1_curTxIOPtr\000"
 4633      656E7365 
 4633      5F315F63 
 4633      75725478 
 4633      494F5074 
 4634              	.LASF69:
 4635 050e 6873696F 		.ascii	"hsiomShift\000"
 4635      6D536869 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 127


 4635      667400
 4636              	.LASF10:
 4637 0519 75696E74 		.ascii	"uint16\000"
 4637      313600
 4638              	.LASF25:
 4639 0520 7265736F 		.ascii	"resolution\000"
 4639      6C757469 
 4639      6F6E00
 4640              	.LASF62:
 4641 052b 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 4641      656E7365 
 4641      5F315F52 
 4641      414D5F53 
 4641      54525543 
 4642              	.LASF50:
 4643 0541 73746174 		.ascii	"status\000"
 4643      757300
 4644              	.LASF86:
 4645 0548 66696C74 		.ascii	"filterDelay\000"
 4645      65724465 
 4645      6C617900 
 4646              	.LASF42:
 4647 0554 69646163 		.ascii	"idacComp\000"
 4647      436F6D70 
 4647      00
 4648              	.LASF156:
 4649 055d 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_SensingCSX_LL.c"
 4649      72617465 
 4649      645F536F 
 4649      75726365 
 4649      5C50536F 
 4650 058e 00       		.ascii	"\000"
 4651              	.LASF64:
 4652 058f 70635074 		.ascii	"pcPtr\000"
 4652      7200
 4653              	.LASF6:
 4654 0595 6C6F6E67 		.ascii	"long long int\000"
 4654      206C6F6E 
 4654      6720696E 
 4654      7400
 4655              	.LASF18:
 4656 05a3 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 4656      656E7365 
 4656      5F315F54 
 4656      48524553 
 4656      484F4C44 
 4657              	.LASF30:
 4658 05bd 6F6E4465 		.ascii	"onDebounce\000"
 4658      626F756E 
 4658      636500
 4659              	.LASF56:
 4660 05c8 77646774 		.ascii	"wdgtList\000"
 4660      4C697374 
 4660      00
 4661              	.LASF73:
 4662 05d1 70747232 		.ascii	"ptr2SnsFlash\000"
 4662      536E7346 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 128


 4662      6C617368 
 4662      00
 4663              	.LASF61:
 4664 05de 736E7254 		.ascii	"snrTestRawCount\000"
 4664      65737452 
 4664      6177436F 
 4664      756E7400 
 4665              	.LASF28:
 4666 05ee 6E4E6F69 		.ascii	"nNoiseTh\000"
 4666      73655468 
 4666      00
 4667              	.LASF54:
 4668 05f7 63736430 		.ascii	"csd0Config\000"
 4668      436F6E66 
 4668      696700
 4669              	.LASF34:
 4670 0602 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 4670      656E7365 
 4670      5F315F52 
 4670      414D5F57 
 4670      445F4241 
 4671              	.LASF63:
 4672 0620 6873696F 		.ascii	"hsiomPtr\000"
 4672      6D507472 
 4672      00
 4673              	.LASF11:
 4674 0629 75696E74 		.ascii	"uint32\000"
 4674      333200
 4675              	.LASF29:
 4676 0630 68797374 		.ascii	"hysteresis\000"
 4676      65726573 
 4676      697300
 4677              	.LASF76:
 4678 063b 70747232 		.ascii	"ptr2FltrHistory\000"
 4678      466C7472 
 4678      48697374 
 4678      6F727900 
 4679              	.LASF20:
 4680 064b 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 4680      656E7365 
 4680      5F315F55 
 4680      4E444546 
 4680      494E4544 
 4681              	.LASF44:
 4682 0662 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 4682      656E7365 
 4682      5F315F52 
 4682      414D5F53 
 4682      4E535F4C 
 4683              	.LASF68:
 4684 0681 6D61736B 		.ascii	"mask\000"
 4684      00
 4685              	.LASF141:
 4686 0686 43617053 		.ascii	"CapSense_1_SsChangeImoFreq\000"
 4686      656E7365 
 4686      5F315F53 
 4686      73436861 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 129


 4686      6E676549 
 4687              	.LASF97:
 4688 06a1 43617053 		.ascii	"CapSense_1_CSXCalibrateWidget\000"
 4688      656E7365 
 4688      5F315F43 
 4688      53584361 
 4688      6C696272 
 4689              	.LASF88:
 4690 06bf 73616D70 		.ascii	"sampleClkFreqHz\000"
 4690      6C65436C 
 4690      6B467265 
 4690      71487A00 
 4691              	.LASF92:
 4692 06cf 43617053 		.ascii	"CapSense_1_SsCSXPostSingleScan\000"
 4692      656E7365 
 4692      5F315F53 
 4692      73435358 
 4692      506F7374 
 4693              	.LASF130:
 4694 06ee 43617053 		.ascii	"CapSense_1_dsRam\000"
 4694      656E7365 
 4694      5F315F64 
 4694      7352616D 
 4694      00
 4695              	.LASF152:
 4696 06ff 43617053 		.ascii	"CapSense_1_Scan\000"
 4696      656E7365 
 4696      5F315F53 
 4696      63616E00 
 4697              	.LASF16:
 4698 070f 6C6F6E67 		.ascii	"long double\000"
 4698      20646F75 
 4698      626C6500 
 4699              	.LASF15:
 4700 071b 72656733 		.ascii	"reg32\000"
 4700      3200
 4701              	.LASF60:
 4702 0721 736E7254 		.ascii	"snrTestScanCounter\000"
 4702      65737453 
 4702      63616E43 
 4702      6F756E74 
 4702      657200
 4703              	.LASF45:
 4704 0734 636F6E66 		.ascii	"configId\000"
 4704      69674964 
 4704      00
 4705              	.LASF75:
 4706 073d 70747232 		.ascii	"ptr2SnsRam\000"
 4706      536E7352 
 4706      616D00
 4707              	.LASF85:
 4708 0748 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 4708      656E7365 
 4708      5F315F46 
 4708      4C415348 
 4708      5F535452 
 4709              	.LASF53:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 130


 4710 0760 736E7353 		.ascii	"snsStatus\000"
 4710      74617475 
 4710      7300
 4711              	.LASF33:
 4712 076a 736E7343 		.ascii	"snsClkSource\000"
 4712      6C6B536F 
 4712      75726365 
 4712      00
 4713              	.LASF21:
 4714 0777 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 4714      656E7365 
 4714      5F315F53 
 4714      454E5345 
 4714      5F4D4554 
 4715              	.LASF2:
 4716 0795 73686F72 		.ascii	"short int\000"
 4716      7420696E 
 4716      7400
 4717              	.LASF140:
 4718 079f 43617053 		.ascii	"CapSense_1_curFlashWdgtPtr\000"
 4718      656E7365 
 4718      5F315F63 
 4718      7572466C 
 4718      61736857 
 4719              	.LASF4:
 4720 07ba 6C6F6E67 		.ascii	"long int\000"
 4720      20696E74 
 4720      00
 4721              	.LASF51:
 4722 07c3 77646774 		.ascii	"wdgtEnable\000"
 4722      456E6162 
 4722      6C6500
 4723              	.LASF131:
 4724 07ce 43617053 		.ascii	"CapSense_1_dsFlash\000"
 4724      656E7365 
 4724      5F315F64 
 4724      73466C61 
 4724      736800
 4725              	.LASF91:
 4726 07e1 43617053 		.ascii	"CapSense_1_SsCSXStartSample\000"
 4726      656E7365 
 4726      5F315F53 
 4726      73435358 
 4726      53746172 
 4727              	.LASF40:
 4728 07fd 64696666 		.ascii	"diff\000"
 4728      00
 4729              	.LASF48:
 4730 0802 74756E65 		.ascii	"tunerCmd\000"
 4730      72436D64 
 4730      00
 4731              	.LASF89:
 4732 080b 74656D70 		.ascii	"temp\000"
 4732      00
 4733              	.LASF160:
 4734 0810 43617053 		.ascii	"CapSense_1_SsCSXGetTxClkDivider\000"
 4734      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 131


 4734      5F315F53 
 4734      73435358 
 4734      47657454 
 4735              	.LASF66:
 4736 0830 70735074 		.ascii	"psPtr\000"
 4736      7200
 4737              	.LASF22:
 4738 0836 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 4738      656E7365 
 4738      5F315F53 
 4738      454E5345 
 4738      5F4D4554 
 4739              	.LASF101:
 4740 0854 72617754 		.ascii	"rawTarget\000"
 4740      61726765 
 4740      7400
 4741              	.LASF36:
 4742 085e 62757474 		.ascii	"button0\000"
 4742      6F6E3000 
 4743              	.LASF81:
 4744 0866 6E756D43 		.ascii	"numCols\000"
 4744      6F6C7300 
 4745              	.LASF52:
 4746 086e 77646774 		.ascii	"wdgtStatus\000"
 4746      53746174 
 4746      757300
 4747              	.LASF136:
 4748 0879 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 4748      656E7365 
 4748      5F315F73 
 4748      656E736F 
 4748      72496E64 
 4749              	.LASF116:
 4750 0890 43617053 		.ascii	"CapSense_1_CSXSetupWidget\000"
 4750      656E7365 
 4750      5F315F43 
 4750      53585365 
 4750      74757057 
 4751              	.LASF17:
 4752 08aa 73697A65 		.ascii	"sizetype\000"
 4752      74797065 
 4752      00
 4753              	.LASF70:
 4754 08b3 64725368 		.ascii	"drShift\000"
 4754      69667400 
 4755              	.LASF5:
 4756 08bb 6C6F6E67 		.ascii	"long unsigned int\000"
 4756      20756E73 
 4756      69676E65 
 4756      6420696E 
 4756      7400
 4757              	.LASF123:
 4758 08cd 72657456 		.ascii	"retVal\000"
 4758      616C00
 4759              	.LASF110:
 4760 08d4 72785074 		.ascii	"rxPtr\000"
 4760      7200
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 132


 4761              	.LASF77:
 4762 08da 70747232 		.ascii	"ptr2DebounceArr\000"
 4762      4465626F 
 4762      756E6365 
 4762      41727200 
 4763              	.LASF26:
 4764 08ea 66696E67 		.ascii	"fingerTh\000"
 4764      65725468 
 4764      00
 4765              	.LASF39:
 4766 08f3 62736C6E 		.ascii	"bslnExt\000"
 4766      45787400 
 4767              	.LASF96:
 4768 08fb 43617053 		.ascii	"CapSense_1_CSXScanExt\000"
 4768      656E7365 
 4768      5F315F43 
 4768      53585363 
 4768      616E4578 
 4769              	.LASF1:
 4770 0911 756E7369 		.ascii	"unsigned char\000"
 4770      676E6564 
 4770      20636861 
 4770      7200
 4771              	.LASF98:
 4772 091f 77646774 		.ascii	"wdgtPtr\000"
 4772      50747200 
 4773              	.LASF132:
 4774 0927 43617053 		.ascii	"CapSense_1_csxScanPeriod\000"
 4774      656E7365 
 4774      5F315F63 
 4774      73785363 
 4774      616E5065 
 4775              	.LASF103:
 4776 0940 63616C69 		.ascii	"calibrationIndex\000"
 4776      62726174 
 4776      696F6E49 
 4776      6E646578 
 4776      00
 4777              	.LASF78:
 4778 0951 73746174 		.ascii	"staticConfig\000"
 4778      6963436F 
 4778      6E666967 
 4778      00
 4779              	.LASF55:
 4780 095e 6D6F6443 		.ascii	"modCsxClk\000"
 4780      7378436C 
 4780      6B00
 4781              	.LASF74:
 4782 0968 70747232 		.ascii	"ptr2WdgtRam\000"
 4782      57646774 
 4782      52616D00 
 4783              	.LASF158:
 4784 0974 43617053 		.ascii	"CapSense_1_SsCalcCsxScanPeriod\000"
 4784      656E7365 
 4784      5F315F53 
 4784      7343616C 
 4784      63437378 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 133


 4785              	.LASF82:
 4786 0993 6E756D52 		.ascii	"numRows\000"
 4786      6F777300 
 4787              	.LASF111:
 4788 099b 43617053 		.ascii	"CapSense_1_CSXScan\000"
 4788      656E7365 
 4788      5F315F43 
 4788      53585363 
 4788      616E00
 4789              	.LASF67:
 4790 09ae 6873696F 		.ascii	"hsiomMask\000"
 4790      6D4D6173 
 4790      6B00
 4791              	.LASF143:
 4792 09b8 4379496E 		.ascii	"CyIntEnable\000"
 4792      74456E61 
 4792      626C6500 
 4793              	.LASF90:
 4794 09c4 746D7052 		.ascii	"tmpRegVal\000"
 4794      65675661 
 4794      6C00
 4795              	.LASF32:
 4796 09ce 736E7343 		.ascii	"snsClk\000"
 4796      6C6B00
 4797              	.LASF119:
 4798 09d5 43617053 		.ascii	"CapSense_1_CSXSetupWidgetExt\000"
 4798      656E7365 
 4798      5F315F43 
 4798      53585365 
 4798      74757057 
 4799              	.LASF134:
 4800 09f2 43617053 		.ascii	"CapSense_1_CSXPostScanApiPtr\000"
 4800      656E7365 
 4800      5F315F43 
 4800      5358506F 
 4800      73745363 
 4801              	.LASF144:
 4802 0a0f 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4802      74657243 
 4802      72697469 
 4802      63616C53 
 4802      65637469 
 4803              	.LASF0:
 4804 0a26 7369676E 		.ascii	"signed char\000"
 4804      65642063 
 4804      68617200 
 4805              	.LASF38:
 4806 0a32 62736C6E 		.ascii	"bsln\000"
 4806      00
 4807              	.LASF3:
 4808 0a37 73686F72 		.ascii	"short unsigned int\000"
 4808      7420756E 
 4808      7369676E 
 4808      65642069 
 4808      6E7400
 4809              	.LASF117:
 4810 0a4a 63757252 		.ascii	"curRamWdgtBasePtr\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 134


 4810      616D5764 
 4810      67744261 
 4810      73655074 
 4810      7200
 4811              	.LASF72:
 4812 0a5c 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 4812      656E7365 
 4812      5F315F46 
 4812      4C415348 
 4812      5F494F5F 
 4813              	.LASF133:
 4814 0a77 43617053 		.ascii	"CapSense_1_csxRawCount\000"
 4814      656E7365 
 4814      5F315F63 
 4814      73785261 
 4814      77436F75 
 4815              	.LASF9:
 4816 0a8e 75696E74 		.ascii	"uint8\000"
 4816      3800
 4817              	.LASF13:
 4818 0a94 646F7562 		.ascii	"double\000"
 4818      6C6500
 4819              	.LASF41:
 4820 0a9b 6E656742 		.ascii	"negBslnRstCnt\000"
 4820      736C6E52 
 4820      7374436E 
 4820      7400
 4821              	.LASF43:
 4822 0aa9 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 4822      656E7365 
 4822      5F315F52 
 4822      414D5F53 
 4822      4E535F53 
 4823              	.LASF24:
 4824 0ac3 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 4824      656E7365 
 4824      5F315F53 
 4824      454E5345 
 4824      5F4D4554 
 4825              	.LASF93:
 4826 0ae1 43617053 		.ascii	"CapSense_1_CSXScanISR\000"
 4826      656E7365 
 4826      5F315F43 
 4826      53585363 
 4826      616E4953 
 4827              	.LASF46:
 4828 0af7 64657669 		.ascii	"deviceId\000"
 4828      63654964 
 4828      00
 4829              	.LASF35:
 4830 0b00 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 4830      656E7365 
 4830      5F315F52 
 4830      414D5F57 
 4830      445F4255 
 4831              	.LASF99:
 4832 0b20 77696467 		.ascii	"widgetId\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccjdkdQJ.s 			page 135


 4832      65744964 
 4832      00
 4833              	.LASF153:
 4834 0b29 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 4834      656E7365 
 4834      5F315F53 
 4834      73506F73 
 4834      74416C6C 
 4835              	.LASF84:
 4836 0b49 77646774 		.ascii	"wdgtArray\000"
 4836      41727261 
 4836      7900
 4837              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
