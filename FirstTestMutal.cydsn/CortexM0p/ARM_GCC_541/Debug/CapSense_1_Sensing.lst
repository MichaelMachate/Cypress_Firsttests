ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidivmod
  20              		.section	.text.CapSense_1_SsCalcLfsrSize,"ax",%progbits
  21              		.align	2
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_1_SsCalcLfsrSize, %function
  25              	CapSense_1_SsCalcLfsrSize:
  26              	.LFB21:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \file CapSense_1_Sensing.c
   3:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \version 5.20
   4:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \see CapSense_1 v5.20 Datasheet
  10:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 2


  31:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Structure.h"
  43:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_Adc.h"
  58:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (0u != CapSense_1_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #include "CapSense_1_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (0u != CapSense_1_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_1_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  85:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 3


  88:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 4


 145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
 161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
 165:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_SENSE_METHOD_ENUM CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_immunity[CapSense_1_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     const uint8 CapSense_1_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint8 CapSense_1_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_RAM_SNS_STRUCT *CapSense_1_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_WD_STRUCT const *CapSense_1_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 5


 202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_IsBusy
 212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint32 CapSense_1_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetupWidget
 240:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDSetupWidgetExt(), CapSense_1_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 6


 259:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_I_REP
 260:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function does not start sensor scanning, the CapSense_1_Scan()
 264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if ((CapSense_1_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 7


 316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
 317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_Scan
 348:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function is called only after the CapSense_1_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_1_IsBusy()
 358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_Scan(void)
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 8


 373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXScan();
 384:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDScan();
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXScan();
 394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_SetupWidget() and CapSense_1_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  using the CapSense_1_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 9


 430:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_ScanAllWidgets(void)
 431:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CapSense_1_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (0u != (CapSense_1_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_ENABLE;
 462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (0u != (CapSense_1_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 scanStatus = CapSense_1_Scan();
 477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 10


 487:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 488:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitialize
 489:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling the CapSense_1_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1 Component at power-up. The CapSense_1_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (centerFreqTrim < CapSense_1_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_1_IMO_FREQUE
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (centerFreqTrim > (CapSense_1_IMO_FREQUENCY_OFFSET_MAX - CapSense_1_IMO_FREQUENCY_O
 534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 11


 544:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****               ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 559:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_MANY_SENSE_MODES_EN)
 564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
 568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSX_E);
 570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ISX_E);
 572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 576:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (initStatus);
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 580:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 581:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetPinState
 583:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 585:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 586:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 587:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 589:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  associated with the ganged sensor is updated.
 590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 592:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 594:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 595:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 596:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 597:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 598:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function accepts the CapSense_1_SHIELD and
 599:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SENSOR states as an input only if there is at least
 600:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_1_TX_PIN
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 12


 601:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and CapSense_1_RX_PIN states as an input only if there is at least
 602:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSX widget in the project.
 603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling this function directly from the application layer is not
 605:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 606:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 607:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  automatically set the required pin states. They ignore changes
 608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  in the design made by the CapSense_1_SetPinState() function.
 609:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 610:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 611:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 612:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 613:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  sensor.
 614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration
 615:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  header file defined as CapSense_1_<WidgetName>_WDGT_ID.
 616:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param sensorElement
 618:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 619:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  its pin state.
 620:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 622:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 623:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_SNS<SensorNumber>_ID.
 624:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 625:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 627:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 628:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \endif
 629:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as:
 631:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_RX<RXNumber>_ID
 632:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_TX<TXNumber>_ID.
 633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 634:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param state
 635:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the state of the sensor to be set:
 636:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     1. CapSense_1_GROUND - The pin is connected to the ground.
 637:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     2. CapSense_1_HIGHZ - The drive mode of the pin is set to High-Z
 638:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        Analog.
 639:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     3. CapSense_1_SHIELD - The shield signal is routed to the pin
 640:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 641:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     4. CapSense_1_SENSOR - The pin is connected to the scanning bus
 642:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method is enabled).
 643:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     5. CapSense_1_TX_PIN - The Tx signal is routed to the sensor
 644:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     6. CapSense_1_RX_PIN - The pin is connected to the scanning bus
 646:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 647:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdIndex;
 653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8  interruptState;
 654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr;
 655:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 13


 658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check the ganged sns flag */
 662:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig & Ca
 663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr = CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 665:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr += sensorElement;
 666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinId];
 667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2
 672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = 1u;
 673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsF
 676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 678:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Reset HSIOM and PC registers */
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 687:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (state)
 689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_GROUND:
 691:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_HIGHZ:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSOR:
 706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Enable sensor */
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDConnectSns(ioPtr);
 708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 709:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 case CapSense_1_SHIELD:
 712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 14


 715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CyExitCriticalSection(interruptState);
 716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     break;
 717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 719:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_TX_PIN:
 723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_GPIO_STRGDRV <<
 726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 728:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_RX_PIN:
 730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK <
 733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wrong state */
 739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 741:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
 743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 745:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 746:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDDisableMode
 749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSD mode.
 753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  4. Disable Shield Electrodes.
 760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void)
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 765:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 770:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 15


 772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)))
 774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Disconnect IDACA and IDACB */
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))) */
 781:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsCSDElectrodeCheck();
 784:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
 789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_1_CSH_TO_AMUXBUS_B_MASK << CapSense_1_CSH_HS
 790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, newRegValue);
 791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 793:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT))
 796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableShieldElectrodes();
 797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)) */
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 800:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 801:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 802:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableCSXMode
 806:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSX mode.
 810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void)
 818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 820:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 825:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 16


 829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
 830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_CSXElectrodeCheck();
 833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 834:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 836:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableISXMode
 839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables ISX mode.
 843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void)
 851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 853:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 858:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
 863:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXElectrodeCheck();
 866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_DigPrt2_Stop();
 867:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_USES_PORT_3)
 868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DigPrt3_Stop();
 869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* CapSense_1_USES_PORT_3 */
 870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 871:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 873:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 874:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSwitchSensingMode
 875:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 876:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 877:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 878:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanned.
 880:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 881:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 882:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 883:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 884:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSD mode.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 17


 886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 887:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 888:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 889:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 890:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSX mode.
 891:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 892:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param mode
 893:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the scan mode:
 894:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSD_E
 895:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSX_E
 896:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_ISX_E
 897:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_BIST_E
 898:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_UNDEFINED_E
 899:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 900:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 901:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ENUM mode)
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == CapSense_1_currentSenseMethod)
 907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDDisableMode();
 910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 911:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == CapSense_1_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableCSXMode();
 916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == CapSense_1_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableISXMode();
 922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == CapSense_1_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistDisableMode();
 928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
 933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Release ADC resources */
 934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_AdcReleaseResources();
 935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
 936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 937:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Enable the specified mode */
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == mode)
 940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 18


 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDInitialize();
 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == mode)
 948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXInitialize();
 952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSX_E;
 953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 954:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == mode)
 956:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 957:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXInitialize();
 960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_ISX_E;
 961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == mode)
 964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistInitialize();
 967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_BIST_E;
 968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 976:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 978:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetIOsInDefaultState
 980:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 981:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 982:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 983:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all electrodes into a default state.
 984:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 985:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 986:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 987:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 988:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - Strong drive.
 989:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 990:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the ADC channels into a default state:
 992:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 993:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - HiZ-Analog.
 994:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 995:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 996:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly from the application
 997:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  layer.
 998:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 19


1000:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetIOsInDefaultState(void)
1001:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
1003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
1004:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 regValue;
1005:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes */
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_1_TOTAL_ELECTRODES; loopIndex++)
1008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 1. Disconnect HSIOM.
1011:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 2. Set strong DM.
1012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 3. Set pin state to logic 0.
1013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1022:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1026:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get next electrode */
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
1029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1030:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ADC_EN)
1032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ClearAdcChannels();
1033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     
1035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ISX_EN)
1036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXSetDefaultDigital();
1037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1039:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
1041:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1042:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsReleaseResources()
1043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1044:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1045:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1046:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1047:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  default state.
1048:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1049:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1050:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The function performs following tasks:
1051:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1052:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1053:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     Cmod for CSD mode)
1054:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1055:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1056:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 20


1057:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
1058:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Resources released successfully.
1059:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1060:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1062:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsReleaseResources(void)
1063:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1065:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
1067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1070:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
1072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableCSXMode();
1075:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1076:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableISXMode();
1079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1080:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableMode();
1083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
1084:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_BistDisableMode();
1087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1088:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) &&  \
1091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsSetIOsInDefaultState();
1093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1094:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE != CapSense_1_CSD_SHIELD_EN) &&  \
1095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION)) */
1096:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1100:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
1102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1103:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return busyStatus;
1105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1108:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1109:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsPostAllWidgetsScan
1111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 21


1114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is the function used by the CapSense_1 ISR to implement multiple widget
1118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanning.
1119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Should not be used by the application layer.
1120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsPostAllWidgetsScan(void)
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Increment widget index
1126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Check if all the widgets are scanned
1127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     */
1129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (1u != CapSense_1_TOTAL_WIDGETS)
1130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus postScanStatus;
1131:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_widgetIndex++;
1135:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             postScanStatus = CapSense_1_SetupWidget((uint32)CapSense_1_widgetIndex);
1137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
1144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_Scan();
1146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (CapSense_1_ENABLE == CapSense_1_CSD_EN))
1151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widget
1153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable the CSD block */
1155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
1156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1158:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                            (CapSense_1_ENABLE == CapSense_1_CSD_EN)) */
1159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update scan Counter */
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.scanCounter++;
1162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1164:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure */
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1169:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 22


1171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1173:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1174:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsIsrInitialize
1185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  proper working of the Component.
1194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1195:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param address
1196:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1197:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1198:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsIsrInitialize(cyisraddress address)
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1203:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetModClkClockDivider
1207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param modClk
1219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The divider value for the modulator clock.
1220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetModClkClockDivider(uint32 modClk)
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Stop modulator clock */
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 23


1228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CapSense_1_MODCLK_CMD_DIV_SHIFT)|
1229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_MODCLK_CMD_DISABLE_MASK));
1230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense modClk.
1233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) & CapSense_1_MODCLK_CMD_ENABLE_MASK))
1240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1242:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
1247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_MODCLK_CMD_PA_DIV_SHIFT) |
1248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   CapSense_1_MODCLK_CMD_ENABLE_MASK));
1249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1252:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) &
1255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(~CapSense_1_ModClk__ENABLE_MASK));
1256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Update ModClk clock divider.
1259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_ModClk__DI
1262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= (modClk - 1u);
1263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, newRegValue);
1264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set bit to enable ModClk clock. */
1266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) |
1268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ModClk__ENABLE_MASK);
1269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetSnsClockDivider
1275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the sense clock.
1280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 24


1285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1287:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1289:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1290:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetSnsClockDivider(uint32 snsClk)
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1292:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1294:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense clock.
1297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_SENSE_PERIOD_PTR);
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
1304:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Stop sense clock clock   */
1307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SnsClk__DIV_ID <<
1309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CapSense_1_SNSCLK_CMD_DIV_SHIFT)|
1310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SNSCLK_CMD_DISABLE_MASK));
1311:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Set divider value for sense clock.
1314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * to dividing by 1.
1316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) & CapSense_1_SNSCLK_CMD_ENABLE_MASK))
1321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1324:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_SHIFT
1328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_SNSCLK_CMD_PA_DIV_SHIFT) 
1329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       CapSense_1_SNSCLK_CMD_ENABLE_MASK));
1330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
1331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
1332:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
1336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(~(uint32)CapSense_1_SnsClk__ENABLE_MASK));
1337:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Update snsClk clock divider.
1340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 25


1342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_SnsClk
1343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (snsClk - 1u);
1344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, newRegValue);
1345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1346:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
1349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_SnsClk__ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetClockDividers
1357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  modClk The divider value for the modulator clock.
1372:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1373:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetModClkClockDivider(modClk);
1378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Sns clock */
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetSnsClockDivider(snsClk);
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ANYMODE_AUTOCAL)
1385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateWidget
1387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the
1392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget prior to calibration.
1393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function performs exactly the same tasks as
1396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_CalibrateAllWidgets, but only for a specified widget.
1397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the Enable compensation IDAC parameter. 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 26


1399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1403:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
1413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  A macro for the widget ID can be found in the
1415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1 Configuration header file defined as
1416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_<WidgetName>_WDGT_ID.
1417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the specified widget calibration:
1420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateWidget(uint32 widgetId)
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_TOTAL_WIDGETS <= widgetId)
1433:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1435:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /*
1438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              */
1441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (0u != CapSense_1_GET_WIDGET_EN_STATUS(widgetId))
1443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 else
1447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif  /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1453:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Exit from the loop because of a fail */
1455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 27


1456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN)
1462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSX_E ==
1463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSX widget */
1466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                        CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN) */
1469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)
1471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1474:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSD widget */
1475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RA
1476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1477:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN) */
1478:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RAWCOUNT_C
1482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXCalibrateWidget(widgetId, CapSense_1_ISX_RAWCOUNT_CAL_LEVEL);
1490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
1492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
1494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              /* Update CRC */
1496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN)
1497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_DsUpdateWidgetCrc(widgetId);
1498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN) */
1499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (0u);
1501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateAllWidgets
1508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1511:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 28


1513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  prior to calibration.
1514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1526:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endcond
1527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the calibration process:
1534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateAllWidgets(void)
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1543:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             calibrateStatus |= CapSense_1_CalibrateWidget(wdgtIndex);
1547:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1551:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
1552:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1554:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
1555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsAutoTune
1557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense_1 operation.
1561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the following:
1564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    2*5*R*Cp.
1567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 29


1570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the operation:
1571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_SsAutoTune(void)
1576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cp = 0uL;
1581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1582:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 cpRow = 0uL;
1583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cpWidget[CapSense_1_TOTAL_WIDGETS];
1586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
1587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Configure common config variables */
1590:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_1_CSD_SNSCLK_R_CONST;
1591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.vRef = CapSense_1_CSD_VREF_MV;
1592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_1_CSD_IDAC_GAIN_VALUE_NA;
1593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif ((CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) && (CapSense_1_DISABLE == CY_PSO
1599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained */
1600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1603:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Initialize CSD mode */
1612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDInitialize();
1613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN) */
1614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #1:
1617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - performing the first calibration at fixed settings
1618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sensor Cp
1619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sense clock frequency based on Cp
1620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sense clock for all the widgets */
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1626:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 30


1627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = CapSense_1_CALIBRATION_RESOLUTION;
1633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_1_CAL
1637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
1645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_CAL_LEVEL);
1648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get IDAC */
1657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calculate achived calibration level */
1660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcountR
1661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Find correct sense clock value */
1664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cpRow)
1667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1670:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
1672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
1675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1680:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 31


1684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << Ca
1685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 {
1686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_1_dsRam.modCsdClk;
1687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 }
1688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #else
1689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #endif
1691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1694:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1700:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calculate achived calibration level */
1702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcount * CapSen
1703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1704:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find correct sense clock value */
1706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cp)
1709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1712:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
1714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1722:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_1_FL
1727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                              ptrWdgt->snsClk = CapSense_1_dsRam.modCsdClk;
1729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
1731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif
1733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1734:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 32


1741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (cpRow > cp)
1742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1744:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Non-CSD widget */
1752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1756:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #2:
1759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with new sense clock frequency
1760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting resolution
1761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1762:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune resolution for all the widgets */
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1771:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1774:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1777:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set parasitic capacitance for columns */
1779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1780:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1787:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1794:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Set parasitic capacitance for rows */
1796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1797:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 33


1798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get IDAC */
1799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get finger capacitance */
1805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Init pointer to sigPFC */
1808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1809:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find resolution */
1811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1814:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #3:
1817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - selecting a widget clock source if AUTO
1818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - updating sensitivity
1820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1821:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sensitivity for all the widgets */
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1832:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
1837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
1838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
1839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return autoTuneStatus;
1843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1844:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) */
1845:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1846:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1847:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
1848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) ||\
1850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
1851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSinking
1853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 34


1855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
1856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1863:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void)
1865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1867:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sinking Mode */
1869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM2_PTR) & ~CapSense_1_IDAC_TRIM2_MOD_SNK_MASK;
1870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1871:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK) ;
1872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1873:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1874:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1875:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM2_COMP_SNK_MASK;
1876:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1877:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1878:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1880:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1881:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM2_PTR, trimValue);
1882:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1883:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1884:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
1885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1887:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1888:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) || \
1889:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
1890:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1891:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSourcing
1892:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1893:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1894:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
1895:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1896:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1897:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1898:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1899:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1900:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1901:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void)
1904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1906:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM1_PTR) & ~CapSense_1_IDAC_TRIM1_MOD_SRC_MASK;
1909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK);
1911:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 35


1912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM1_COMP_SRC_MASK;
1915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1918:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM1_PTR, trimValue);
1921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
1924:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1925:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsTrimIdacs
1928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1937:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  source mode based on sink/source mode configuration.
1938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void)
1942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
1947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_
1953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1954:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
1955:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1957:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeImoFreq
1960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the IMO frequency.
1964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  trims are contained in the CapSense_1_immunity[value] array for each
1968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  frequency channel.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 36


1969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param value The frequency channel ID.
1971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeImoFreq(uint32 value)
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1978:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1979:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeClkFreq
1980:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1981:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1982:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1983:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1984:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1985:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1986:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1987:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1988:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1989:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1990:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param chId
1991:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The frequency channel ID.
1992:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1993:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1994:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeClkFreq(uint32 chId)
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1996:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
1997:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset1 = 0u;
1998:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset2 = 0u;
1999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2000:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2004:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 snsClkSrc;
2009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2011:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((0u != CapSense_1_TOTAL_CSD_WIDGETS) || \
2013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_1_TOTAL_CS
2014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_1_dsFlash.wdgtArray[CapSense
2015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)ptrFlas
2016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch(CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex]))
2019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
2022:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get sensor clock divider value */
2023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
2024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsdClk;
2025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 37


2026:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2030:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2038:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2039:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2041:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F1;
2042:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F2;
2043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2044:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2045:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2046:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2047:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Get sense clk source */
2048:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2049:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2050:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2051:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2052:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2053:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2054:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2055:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2056:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2057:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2058:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2059:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2060:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2062:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2063:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2065:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset1 <<= 1u;
2068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset2 <<= 1u;
2069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2070:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2075:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2076:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
2080:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 38


2083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2084:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2088:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2094:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2096:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)
2098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM
2099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2105:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2106:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2107:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider >>= 1;
2110:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (snsClkDivider == 0u)
2111:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2112:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = 1u;
2113:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2114:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2116:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2117:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2118:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2119:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2121:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2122:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSD_WIDGETS) */
2126:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSX_WIDGETS)
2128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
2130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsxClk;
2131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F1;
2135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F2;
2136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2137:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 39


2140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
2141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2155:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2159:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSX_WIDGETS) */
2161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CYASSERT(0);
2164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2)))
2173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitializeSourceSenseClk
2175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2177:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2178:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2179:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  for all CSD widgets.
2183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsInitializeSourceSenseClk(void)
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2187:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
2188:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
2191:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2Wdgt
2193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2194:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 40


2197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2199:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2204:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2205:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_IS
2206:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2207:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2208:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2209:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
2210:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
2211:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
2212:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2215:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
2216:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_ISX_EN)) && \
2217:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2))) */
2218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2221:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2222:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetSenseClkSrc
2223:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2224:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2230:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget.
2236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2237:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
2239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2243:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2251:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             snsClkDivider = CapSense_1_SsCSDGetColSnsClkDivider(wdgtIndex);
2252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 41


2254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrW
2255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                              CapSen
2256:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /*
2260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * average PRS frequency through the argument.
2262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     */
2263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->r
2264:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
2268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2269:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * average PRS frequency through the argument.
2270:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
2271:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resol
2272:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2273:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2274:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2275:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2276:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2277:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2278:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2280:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
2281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2283:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
2284:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
2285:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_SsCSDGetRowSnsClkDivider(wdgtIndex);
2288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /*
2294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * average PRS frequency through the argument.
2296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             */
2297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)pt
2298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
2302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * average PRS frequency through the argument.
2304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
2305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdg
2306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = 0u;
2307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
2309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrScale = 0u;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 42


2311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LF
2313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2316:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2317:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2319:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetTxClkSrc
2322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
2337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2340:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
2342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 conversionsNum;
2344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2345:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)
2348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 snsClkDivider = CapSense_1_SsCSXGetTxClkDivider(wdgtIndex);
2351:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2352:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2353:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2354:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2355:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2356:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Unused function argument */
2357:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)wdgtIndex;
2358:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2359:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2360:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_CSX_TX_CLK_SOURCE;
2361:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2362:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Unused function argument */
2363:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex;
2364:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) */
2365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2366:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
2367:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 43


2368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)) */
2369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
2378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2379:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrSize
2380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2385:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2386:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2387:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  requirements:
2388:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2389:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2390:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2391:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2392:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2393:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2394:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2395:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  resolution The widget resolution.
2396:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2397:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2398:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2400:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2401:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
  28              		.loc 1 2401 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
2402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 lfsrSize = 0u;
2403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Find LFSR value */
2405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((CapSense_1_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
  42              		.loc 1 2405 0
  43 0006 9F28     		cmp	r0, #159
  44 0008 08D9     		bls	.L2
  45              		.loc 1 2405 0 is_stmt 0 discriminator 1
  46 000a 1B4B     		ldr	r3, .L12
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 44


  47 000c 9942     		cmp	r1, r3
  48 000e 05D9     		bls	.L2
2406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (CapSense_1_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC4_PERIOD)))
  49              		.loc 1 2407 0 is_stmt 1
  50 0010 1A49     		ldr	r1, .L12+4
  51              	.LVL2:
  52 0012 2800     		movs	r0, r5
  53              	.LVL3:
  54 0014 FFF7FEFF 		bl	__aeabi_uidivmod
  55              	.LVL4:
2406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (CapSense_1_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
  56              		.loc 1 2406 0
  57 0018 0029     		cmp	r1, #0
  58 001a 21D0     		beq	.L6
  59              	.L2:
2408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC4;
2410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
  60              		.loc 1 2411 0
  61 001c 9F2C     		cmp	r4, #159
  62 001e 09D9     		bls	.L4
  63              		.loc 1 2411 0 is_stmt 0 discriminator 1
  64 0020 FF23     		movs	r3, #255
  65 0022 5B00     		lsls	r3, r3, #1
  66 0024 9D42     		cmp	r5, r3
  67 0026 05D9     		bls	.L4
2412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC3_PERIOD)))
  68              		.loc 1 2413 0 is_stmt 1
  69 0028 1549     		ldr	r1, .L12+8
  70 002a 2800     		movs	r0, r5
  71 002c FFF7FEFF 		bl	__aeabi_uidivmod
  72              	.LVL5:
2412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
  73              		.loc 1 2412 0
  74 0030 0029     		cmp	r1, #0
  75 0032 17D0     		beq	.L7
  76              	.L4:
2414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC3;
2416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
  77              		.loc 1 2417 0
  78 0034 9F2C     		cmp	r4, #159
  79 0036 07D9     		bls	.L5
  80              		.loc 1 2417 0 is_stmt 0 discriminator 1
  81 0038 7E2D     		cmp	r5, #126
  82 003a 05D9     		bls	.L5
2418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC2_PERIOD)))
  83              		.loc 1 2419 0 is_stmt 1
  84 003c 7F21     		movs	r1, #127
  85 003e 2800     		movs	r0, r5
  86 0040 FFF7FEFF 		bl	__aeabi_uidivmod
  87              	.LVL6:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 45


2418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
  88              		.loc 1 2418 0
  89 0044 0029     		cmp	r1, #0
  90 0046 0FD0     		beq	.L8
  91              	.L5:
2420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC2;
2422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
  92              		.loc 1 2423 0
  93 0048 9F2C     		cmp	r4, #159
  94 004a 0FD9     		bls	.L9
  95              		.loc 1 2423 0 is_stmt 0 discriminator 1
  96 004c 3E2D     		cmp	r5, #62
  97 004e 0FD9     		bls	.L10
2424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC1_PERIOD)))
  98              		.loc 1 2425 0 is_stmt 1
  99 0050 3F21     		movs	r1, #63
 100 0052 2800     		movs	r0, r5
 101 0054 FFF7FEFF 		bl	__aeabi_uidivmod
 102              	.LVL7:
2424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 103              		.loc 1 2424 0
 104 0058 0029     		cmp	r1, #0
 105 005a 0BD0     		beq	.L11
2426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC1;
2428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2429:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
 106              		.loc 1 2431 0
 107 005c 0020     		movs	r0, #0
 108 005e 0AE0     		b	.L3
 109              	.L6:
2409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 110              		.loc 1 2409 0
 111 0060 0420     		movs	r0, #4
 112 0062 08E0     		b	.L3
 113              	.L7:
2415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 114              		.loc 1 2415 0
 115 0064 0320     		movs	r0, #3
 116 0066 06E0     		b	.L3
 117              	.L8:
2421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 118              		.loc 1 2421 0
 119 0068 0220     		movs	r0, #2
 120 006a 04E0     		b	.L3
 121              	.L9:
 122              		.loc 1 2431 0
 123 006c 0020     		movs	r0, #0
 124 006e 02E0     		b	.L3
 125              	.L10:
 126 0070 0020     		movs	r0, #0
 127 0072 00E0     		b	.L3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 46


 128              	.L11:
2427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 129              		.loc 1 2427 0
 130 0074 0120     		movs	r0, #1
 131              	.L3:
 132              	.LVL8:
2432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (lfsrSize);
2435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 133              		.loc 1 2435 0
 134              		@ sp needed
 135              	.LVL9:
 136              	.LVL10:
 137 0076 70BD     		pop	{r4, r5, r6, pc}
 138              	.L13:
 139              		.align	2
 140              	.L12:
 141 0078 FE030000 		.word	1022
 142 007c FF030000 		.word	1023
 143 0080 FF010000 		.word	511
 144              		.cfi_endproc
 145              	.LFE21:
 146              		.size	CapSense_1_SsCalcLfsrSize, .-CapSense_1_SsCalcLfsrSize
 147              		.global	__aeabi_uidiv
 148              		.section	.text.CapSense_1_SsCalcLfsrScale,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	CapSense_1_SsCalcLfsrScale, %function
 153              	CapSense_1_SsCalcLfsrScale:
 154              	.LFB22:
2436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2437:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2439:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrScale
2440:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2441:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2442:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2443:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2444:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2445:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2446:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2447:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2448:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  period.
2449:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2450:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  range +/-10%.
2452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2454:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2455:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2456:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2458:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2459:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2460:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 47


2461:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2462:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2463:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2464:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2465:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2466:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2467:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2468:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2470:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2471:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2472:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
2473:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2475:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 155              		.loc 1 2477 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL11:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
2478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrScale;
2479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrRange;
2480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrDither;
2481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2482:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     switch(lfsrSize)
 164              		.loc 1 2483 0
 165 0002 4B1E     		subs	r3, r1, #1
 166 0004 DBB2     		uxtb	r3, r3
 167 0006 032B     		cmp	r3, #3
 168 0008 01D8     		bhi	.L20
2484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC1:
2486:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC1_RANGE;
 169              		.loc 1 2487 0
 170 000a 1023     		movs	r3, #16
 171 000c 00E0     		b	.L15
 172              	.L20:
2488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2490:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC2:
2491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC2_RANGE;
2493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2494:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC3:
2496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC3_RANGE;
2498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2499:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 48


2500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC4:
2501:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC4_RANGE;
2503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2504:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2505:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = 0u;
 173              		.loc 1 2507 0
 174 000e 0023     		movs	r3, #0
 175              	.L15:
 176              	.LVL12:
2508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
2515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((lfsrSize != CapSense_1_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
 177              		.loc 1 2515 0
 178 0010 0029     		cmp	r1, #0
 179 0012 11D0     		beq	.L21
 180              		.loc 1 2515 0 is_stmt 0 discriminator 1
 181 0014 002B     		cmp	r3, #0
 182 0016 11D0     		beq	.L22
2516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
 183              		.loc 1 2518 0 is_stmt 1
 184 0018 6422     		movs	r2, #100
 185 001a 5343     		muls	r3, r2
 186              	.LVL13:
 187 001c 0100     		movs	r1, r0
 188              	.LVL14:
 189 001e 1800     		movs	r0, r3
 190              	.LVL15:
 191 0020 FFF7FEFF 		bl	__aeabi_uidiv
 192              	.LVL16:
2519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
 193              		.loc 1 2519 0
 194 0024 0023     		movs	r3, #0
2520:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(lfsrDither < CapSense_1_LFSR_DITHER_PERCENTAGE)
 195              		.loc 1 2521 0
 196 0026 01E0     		b	.L18
 197              	.LVL17:
 198              	.L19:
2522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale++;
 199              		.loc 1 2523 0
 200 0028 0133     		adds	r3, r3, #1
 201              	.LVL18:
2524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrDither <<=1uL;
 202              		.loc 1 2524 0
 203 002a 4000     		lsls	r0, r0, #1
 204              	.LVL19:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 49


 205              	.L18:
2521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 206              		.loc 1 2521 0
 207 002c 0928     		cmp	r0, #9
 208 002e FBD9     		bls	.L19
2525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if(lfsrDither > CapSense_1_LFSR_DITHER_PERCENTAGE)
 209              		.loc 1 2527 0
 210 0030 0A28     		cmp	r0, #10
 211 0032 04D9     		bls	.L17
2528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale--;
 212              		.loc 1 2529 0
 213 0034 013B     		subs	r3, r3, #1
 214              	.LVL20:
 215 0036 02E0     		b	.L17
 216              	.LVL21:
 217              	.L21:
2530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
 218              		.loc 1 2534 0
 219 0038 0023     		movs	r3, #0
 220              	.LVL22:
 221 003a 00E0     		b	.L17
 222              	.LVL23:
 223              	.L22:
 224 003c 0023     		movs	r3, #0
 225              	.LVL24:
 226              	.L17:
2535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2536:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return ((uint8)lfsrScale);
 227              		.loc 1 2537 0
 228 003e D8B2     		uxtb	r0, r3
2538:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 229              		.loc 1 2538 0
 230              		@ sp needed
 231 0040 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE22:
 234              		.size	CapSense_1_SsCalcLfsrScale, .-CapSense_1_SsCalcLfsrScale
 235 0042 C046     		.section	.text.CapSense_1_SsDisableCSXMode,"ax",%progbits
 236              		.align	2
 237              		.code	16
 238              		.thumb_func
 239              		.type	CapSense_1_SsDisableCSXMode, %function
 240              	CapSense_1_SsDisableCSXMode:
 241              	.LFB7:
 818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 242              		.loc 1 818 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 50


 246 0000 10B5     		push	{r4, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 4, -8
 249              		.cfi_offset 14, -4
 822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 250              		.loc 1 822 0
 251 0002 064B     		ldr	r3, .L24
 252 0004 1968     		ldr	r1, [r3]
 253              	.LVL25:
 823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 254              		.loc 1 823 0
 255 0006 064A     		ldr	r2, .L24+4
 256 0008 0A40     		ands	r2, r1
 257              	.LVL26:
 824:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 258              		.loc 1 824 0
 259 000a 1A60     		str	r2, [r3]
 827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 260              		.loc 1 827 0
 261 000c 1968     		ldr	r1, [r3]
 262              	.LVL27:
 828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
 263              		.loc 1 828 0
 264 000e 054A     		ldr	r2, .L24+8
 265 0010 0A40     		ands	r2, r1
 266              	.LVL28:
 829:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 267              		.loc 1 829 0
 268 0012 1A60     		str	r2, [r3]
 832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 269              		.loc 1 832 0
 270 0014 FFF7FEFF 		bl	CapSense_1_CSXElectrodeCheck
 271              	.LVL29:
 833:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 272              		.loc 1 833 0
 273              		@ sp needed
 274 0018 10BD     		pop	{r4, pc}
 275              	.L25:
 276 001a C046     		.align	2
 277              	.L24:
 278 001c 00040240 		.word	1073873920
 279 0020 FFF0FFFF 		.word	-3841
 280 0024 FF0FFFFF 		.word	-61441
 281              		.cfi_endproc
 282              	.LFE7:
 283              		.size	CapSense_1_SsDisableCSXMode, .-CapSense_1_SsDisableCSXMode
 284              		.section	.text.CapSense_1_SsSetWidgetTxClkSrc,"ax",%progbits
 285              		.align	2
 286              		.code	16
 287              		.thumb_func
 288              		.type	CapSense_1_SsSetWidgetTxClkSrc, %function
 289              	CapSense_1_SsSetWidgetTxClkSrc:
 290              	.LFB20:
2337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
 291              		.loc 1 2337 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 51


 294              		@ frame_needed = 0, uses_anonymous_args = 0
 295              	.LVL30:
 296 0000 70B5     		push	{r4, r5, r6, lr}
 297              		.cfi_def_cfa_offset 16
 298              		.cfi_offset 4, -16
 299              		.cfi_offset 5, -12
 300              		.cfi_offset 6, -8
 301              		.cfi_offset 14, -4
 302 0002 0D00     		movs	r5, r1
2349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 snsClkDivider = CapSense_1_SsCSXGetTxClkDivider(wdgtIndex);
 303              		.loc 1 2349 0
 304 0004 0C88     		ldrh	r4, [r1]
 305              	.LVL31:
2350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
 306              		.loc 1 2350 0
 307 0006 FFF7FEFF 		bl	CapSense_1_SsCSXGetTxClkDivider
 308              	.LVL32:
 309 000a 0600     		movs	r6, r0
 310              	.LVL33:
2351:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
 311              		.loc 1 2351 0
 312 000c 2100     		movs	r1, r4
 313 000e FFF7FEFF 		bl	CapSense_1_SsCalcLfsrSize
 314              	.LVL34:
 315 0012 0400     		movs	r4, r0
 316              	.LVL35:
2352:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
 317              		.loc 1 2352 0
 318 0014 0100     		movs	r1, r0
 319 0016 3000     		movs	r0, r6
 320              	.LVL36:
 321 0018 FFF7FEFF 		bl	CapSense_1_SsCalcLfsrScale
 322              	.LVL37:
2366:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 323              		.loc 1 2366 0
 324 001c 0001     		lsls	r0, r0, #4
 325              	.LVL38:
 326 001e C0B2     		uxtb	r0, r0
 327 0020 2043     		orrs	r0, r4
 328 0022 2873     		strb	r0, [r5, #12]
2367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)) */
 329              		.loc 1 2367 0
 330              		@ sp needed
 331              	.LVL39:
 332              	.LVL40:
 333 0024 70BD     		pop	{r4, r5, r6, pc}
 334              		.cfi_endproc
 335              	.LFE20:
 336              		.size	CapSense_1_SsSetWidgetTxClkSrc, .-CapSense_1_SsSetWidgetTxClkSrc
 337 0026 C046     		.section	.text.CapSense_1_IsBusy,"ax",%progbits
 338              		.align	2
 339              		.global	CapSense_1_IsBusy
 340              		.code	16
 341              		.thumb_func
 342              		.type	CapSense_1_IsBusy, %function
 343              	CapSense_1_IsBusy:
 344              	.LFB1:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 52


 234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
 345              		.loc 1 234 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 350              		.loc 1 235 0
 351 0000 024B     		ldr	r3, .L28
 352 0002 DB68     		ldr	r3, [r3, #12]
 353 0004 8020     		movs	r0, #128
 354 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 355              		.loc 1 236 0
 356              		@ sp needed
 357 0008 7047     		bx	lr
 358              	.L29:
 359 000a C046     		.align	2
 360              	.L28:
 361 000c 00000000 		.word	CapSense_1_dsRam
 362              		.cfi_endproc
 363              	.LFE1:
 364              		.size	CapSense_1_IsBusy, .-CapSense_1_IsBusy
 365              		.section	.text.CapSense_1_SetupWidget,"ax",%progbits
 366              		.align	2
 367              		.global	CapSense_1_SetupWidget
 368              		.code	16
 369              		.thumb_func
 370              		.type	CapSense_1_SetupWidget, %function
 371              	CapSense_1_SetupWidget:
 372              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 373              		.loc 1 286 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              	.LVL41:
 378 0000 10B5     		push	{r4, lr}
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 4, -8
 381              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 382              		.loc 1 289 0
 383 0002 0E4B     		ldr	r3, .L36
 384 0004 DB68     		ldr	r3, [r3, #12]
 385 0006 DB03     		lsls	r3, r3, #15
 386 0008 0DD4     		bmi	.L33
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 387              		.loc 1 299 0
 388 000a 0528     		cmp	r0, #5
 389 000c 0DD8     		bhi	.L34
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 390              		.loc 1 300 0 discriminator 1
 391 000e 4309     		lsrs	r3, r0, #5
 392 0010 0433     		adds	r3, r3, #4
 393 0012 9B00     		lsls	r3, r3, #2
 394 0014 094A     		ldr	r2, .L36
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 53


 395 0016 9B58     		ldr	r3, [r3, r2]
 396 0018 1F22     		movs	r2, #31
 397 001a 0240     		ands	r2, r0
 398 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 399              		.loc 1 299 0 discriminator 1
 400 001e DB07     		lsls	r3, r3, #31
 401 0020 05D4     		bmi	.L35
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 402              		.loc 1 307 0
 403 0022 0124     		movs	r4, #1
 404 0024 04E0     		b	.L31
 405              	.L33:
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 406              		.loc 1 292 0
 407 0026 1124     		movs	r4, #17
 408 0028 02E0     		b	.L31
 409              	.L34:
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 410              		.loc 1 307 0
 411 002a 0124     		movs	r4, #1
 412 002c 00E0     		b	.L31
 413              	.L35:
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 414              		.loc 1 303 0
 415 002e 0024     		movs	r4, #0
 416              	.L31:
 417              	.LVL42:
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 418              		.loc 1 314 0
 419 0030 002C     		cmp	r4, #0
 420 0032 01D1     		bne	.L32
 321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 421              		.loc 1 321 0
 422 0034 FFF7FEFF 		bl	CapSense_1_CSXSetupWidget
 423              	.LVL43:
 424              	.L32:
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 425              		.loc 1 343 0
 426 0038 2000     		movs	r0, r4
 427              		@ sp needed
 428              	.LVL44:
 429 003a 10BD     		pop	{r4, pc}
 430              	.L37:
 431              		.align	2
 432              	.L36:
 433 003c 00000000 		.word	CapSense_1_dsRam
 434              		.cfi_endproc
 435              	.LFE2:
 436              		.size	CapSense_1_SetupWidget, .-CapSense_1_SetupWidget
 437              		.section	.text.CapSense_1_Scan,"ax",%progbits
 438              		.align	2
 439              		.global	CapSense_1_Scan
 440              		.code	16
 441              		.thumb_func
 442              		.type	CapSense_1_Scan, %function
 443              	CapSense_1_Scan:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 54


 444              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 445              		.loc 1 369 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449 0000 10B5     		push	{r4, lr}
 450              		.cfi_def_cfa_offset 8
 451              		.cfi_offset 4, -8
 452              		.cfi_offset 14, -4
 453              	.LVL45:
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 454              		.loc 1 372 0
 455 0002 084B     		ldr	r3, .L44
 456 0004 DB68     		ldr	r3, [r3, #12]
 457 0006 DB03     		lsls	r3, r3, #15
 458 0008 07D4     		bmi	.L41
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 459              		.loc 1 379 0
 460 000a 074B     		ldr	r3, .L44+4
 461 000c 1B78     		ldrb	r3, [r3]
 462 000e 022B     		cmp	r3, #2
 463 0010 05D1     		bne	.L43
 383:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 464              		.loc 1 383 0
 465 0012 FFF7FEFF 		bl	CapSense_1_CSXScan
 466              	.LVL46:
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 467              		.loc 1 370 0
 468 0016 0020     		movs	r0, #0
 384:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 469              		.loc 1 384 0
 470 0018 03E0     		b	.L39
 471              	.L41:
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 472              		.loc 1 375 0
 473 001a 1120     		movs	r0, #17
 474 001c 01E0     		b	.L39
 475              	.L43:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 476              		.loc 1 397 0
 477 001e 0120     		movs	r0, #1
 478 0020 4042     		rsbs	r0, r0, #0
 479              	.L39:
 480              	.LVL47:
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 481              		.loc 1 402 0
 482              		@ sp needed
 483 0022 10BD     		pop	{r4, pc}
 484              	.L45:
 485              		.align	2
 486              	.L44:
 487 0024 00000000 		.word	CapSense_1_dsRam
 488 0028 00000000 		.word	.LANCHOR0
 489              		.cfi_endproc
 490              	.LFE3:
 491              		.size	CapSense_1_Scan, .-CapSense_1_Scan
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 55


 492              		.section	.text.CapSense_1_ScanAllWidgets,"ax",%progbits
 493              		.align	2
 494              		.global	CapSense_1_ScanAllWidgets
 495              		.code	16
 496              		.thumb_func
 497              		.type	CapSense_1_ScanAllWidgets, %function
 498              	CapSense_1_ScanAllWidgets:
 499              	.LFB4:
 431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 500              		.loc 1 431 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504 0000 10B5     		push	{r4, lr}
 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 4, -8
 507              		.cfi_offset 14, -4
 508              	.LVL48:
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 509              		.loc 1 436 0
 510 0002 0F4B     		ldr	r3, .L54
 511 0004 DB68     		ldr	r3, [r3, #12]
 512 0006 1B06     		lsls	r3, r3, #24
 513 0008 18D4     		bmi	.L53
 514 000a 0024     		movs	r4, #0
 515 000c 0120     		movs	r0, #1
 516 000e 4042     		rsbs	r0, r0, #0
 517 0010 11E0     		b	.L48
 518              	.LVL49:
 519              	.L52:
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 520              		.loc 1 452 0
 521 0012 2000     		movs	r0, r4
 522              	.LVL50:
 523 0014 FFF7FEFF 		bl	CapSense_1_SetupWidget
 524              	.LVL51:
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 525              		.loc 1 454 0
 526 0018 0028     		cmp	r0, #0
 527 001a 0BD1     		bne	.L49
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 528              		.loc 1 458 0
 529 001c 042C     		cmp	r4, #4
 530 001e 03D8     		bhi	.L50
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 531              		.loc 1 461 0
 532 0020 0122     		movs	r2, #1
 533 0022 084B     		ldr	r3, .L54+4
 534 0024 5A70     		strb	r2, [r3, #1]
 535 0026 02E0     		b	.L51
 536              	.L50:
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 537              		.loc 1 466 0
 538 0028 0022     		movs	r2, #0
 539 002a 064B     		ldr	r3, .L54+4
 540 002c 5A70     		strb	r2, [r3, #1]
 541              	.L51:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 56


 476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 542              		.loc 1 476 0
 543 002e FFF7FEFF 		bl	CapSense_1_Scan
 544              	.LVL52:
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 545              		.loc 1 478 0
 546 0032 04E0     		b	.L47
 547              	.L49:
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 548              		.loc 1 449 0
 549 0034 0134     		adds	r4, r4, #1
 550              	.LVL53:
 551              	.L48:
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 552              		.loc 1 447 0 discriminator 1
 553 0036 052C     		cmp	r4, #5
 554 0038 EBD9     		bls	.L52
 555 003a 00E0     		b	.L47
 556              	.LVL54:
 557              	.L53:
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 558              		.loc 1 439 0
 559 003c 1120     		movs	r0, #17
 560              	.LVL55:
 561              	.L47:
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 562              		.loc 1 484 0
 563              		@ sp needed
 564 003e 10BD     		pop	{r4, pc}
 565              	.L55:
 566              		.align	2
 567              	.L54:
 568 0040 00000000 		.word	CapSense_1_dsRam
 569 0044 00000000 		.word	.LANCHOR0
 570              		.cfi_endproc
 571              	.LFE4:
 572              		.size	CapSense_1_ScanAllWidgets, .-CapSense_1_ScanAllWidgets
 573              		.section	.text.CapSense_1_SetPinState,"ax",%progbits
 574              		.align	2
 575              		.global	CapSense_1_SetPinState
 576              		.code	16
 577              		.thumb_func
 578              		.type	CapSense_1_SetPinState, %function
 579              	CapSense_1_SetPinState:
 580              	.LFB6:
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 581              		.loc 1 650 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 0
 584              		@ frame_needed = 0, uses_anonymous_args = 0
 585              	.LVL56:
 586 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 587              		.cfi_def_cfa_offset 24
 588              		.cfi_offset 3, -24
 589              		.cfi_offset 4, -20
 590              		.cfi_offset 5, -16
 591              		.cfi_offset 6, -12
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 57


 592              		.cfi_offset 7, -8
 593              		.cfi_offset 14, -4
 594 0002 1600     		movs	r6, r2
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 595              		.loc 1 675 0
 596 0004 4001     		lsls	r0, r0, #5
 597              	.LVL57:
 598 0006 364B     		ldr	r3, .L64
 599 0008 C458     		ldr	r4, [r0, r3]
 600 000a CB00     		lsls	r3, r1, #3
 601 000c 591A     		subs	r1, r3, r1
 602              	.LVL58:
 603 000e 8B00     		lsls	r3, r1, #2
 604 0010 E418     		adds	r4, r4, r3
 605              	.LVL59:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 606              		.loc 1 680 0
 607 0012 0025     		movs	r5, #0
 608 0014 60E0     		b	.L57
 609              	.LVL60:
 610              	.L63:
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 611              		.loc 1 683 0
 612 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 613              	.LVL61:
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 614              		.loc 1 684 0
 615 001a 2168     		ldr	r1, [r4]
 616 001c 0B68     		ldr	r3, [r1]
 617 001e 277E     		ldrb	r7, [r4, #24]
 618 0020 0F22     		movs	r2, #15
 619 0022 BA40     		lsls	r2, r2, r7
 620 0024 9343     		bics	r3, r2
 621 0026 0B60     		str	r3, [r1]
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 622              		.loc 1 685 0
 623 0028 6168     		ldr	r1, [r4, #4]
 624 002a 0B68     		ldr	r3, [r1]
 625 002c A77E     		ldrb	r7, [r4, #26]
 626 002e 0722     		movs	r2, #7
 627 0030 BA40     		lsls	r2, r2, r7
 628 0032 9343     		bics	r3, r2
 629 0034 0B60     		str	r3, [r1]
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 630              		.loc 1 686 0
 631 0036 FFF7FEFF 		bl	CyExitCriticalSection
 632              	.LVL62:
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 633              		.loc 1 688 0
 634 003a 012E     		cmp	r6, #1
 635 003c 19D0     		beq	.L59
 636 003e 002E     		cmp	r6, #0
 637 0040 04D0     		beq	.L60
 638 0042 042E     		cmp	r6, #4
 639 0044 21D0     		beq	.L61
 640 0046 052E     		cmp	r6, #5
 641 0048 32D0     		beq	.L62
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 58


 642 004a 43E0     		b	.L58
 643              	.L60:
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 644              		.loc 1 692 0
 645 004c FFF7FEFF 		bl	CyEnterCriticalSection
 646              	.LVL63:
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 647              		.loc 1 693 0
 648 0050 6268     		ldr	r2, [r4, #4]
 649 0052 1168     		ldr	r1, [r2]
 650 0054 A77E     		ldrb	r7, [r4, #26]
 651 0056 0623     		movs	r3, #6
 652 0058 BB40     		lsls	r3, r3, r7
 653 005a 0B43     		orrs	r3, r1
 654 005c 1360     		str	r3, [r2]
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 655              		.loc 1 694 0
 656 005e A168     		ldr	r1, [r4, #8]
 657 0060 0B68     		ldr	r3, [r1]
 658 0062 677E     		ldrb	r7, [r4, #25]
 659 0064 0122     		movs	r2, #1
 660 0066 BA40     		lsls	r2, r2, r7
 661 0068 9343     		bics	r3, r2
 662 006a 0B60     		str	r3, [r1]
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 663              		.loc 1 695 0
 664 006c FFF7FEFF 		bl	CyExitCriticalSection
 665              	.LVL64:
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 666              		.loc 1 696 0
 667 0070 30E0     		b	.L58
 668              	.L59:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 669              		.loc 1 699 0
 670 0072 FFF7FEFF 		bl	CyEnterCriticalSection
 671              	.LVL65:
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 672              		.loc 1 700 0
 673 0076 A168     		ldr	r1, [r4, #8]
 674 0078 0B68     		ldr	r3, [r1]
 675 007a 677E     		ldrb	r7, [r4, #25]
 676 007c 0122     		movs	r2, #1
 677 007e BA40     		lsls	r2, r2, r7
 678 0080 9343     		bics	r3, r2
 679 0082 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 680              		.loc 1 701 0
 681 0084 FFF7FEFF 		bl	CyExitCriticalSection
 682              	.LVL66:
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 683              		.loc 1 702 0
 684 0088 24E0     		b	.L58
 685              	.L61:
 723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 686              		.loc 1 723 0
 687 008a FFF7FEFF 		bl	CyEnterCriticalSection
 688              	.LVL67:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 59


 724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_GPIO_STRGDRV <<
 689              		.loc 1 724 0
 690 008e 2268     		ldr	r2, [r4]
 691 0090 1168     		ldr	r1, [r2]
 692 0092 277E     		ldrb	r7, [r4, #24]
 693 0094 0423     		movs	r3, #4
 694 0096 BB40     		lsls	r3, r3, r7
 695 0098 0B43     		orrs	r3, r1
 696 009a 1360     		str	r3, [r2]
 725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 697              		.loc 1 725 0
 698 009c 6268     		ldr	r2, [r4, #4]
 699 009e 1168     		ldr	r1, [r2]
 700 00a0 A77E     		ldrb	r7, [r4, #26]
 701 00a2 0623     		movs	r3, #6
 702 00a4 BB40     		lsls	r3, r3, r7
 703 00a6 0B43     		orrs	r3, r1
 704 00a8 1360     		str	r3, [r2]
 726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 705              		.loc 1 726 0
 706 00aa FFF7FEFF 		bl	CyExitCriticalSection
 707              	.LVL68:
 727:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 708              		.loc 1 727 0
 709 00ae 11E0     		b	.L58
 710              	.L62:
 730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 711              		.loc 1 730 0
 712 00b0 FFF7FEFF 		bl	CyEnterCriticalSection
 713              	.LVL69:
 731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK <
 714              		.loc 1 731 0
 715 00b4 2268     		ldr	r2, [r4]
 716 00b6 1168     		ldr	r1, [r2]
 717 00b8 277E     		ldrb	r7, [r4, #24]
 718 00ba 0623     		movs	r3, #6
 719 00bc BB40     		lsls	r3, r3, r7
 720 00be 0B43     		orrs	r3, r1
 721 00c0 1360     		str	r3, [r2]
 732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 722              		.loc 1 732 0
 723 00c2 6168     		ldr	r1, [r4, #4]
 724 00c4 0B68     		ldr	r3, [r1]
 725 00c6 A77E     		ldrb	r7, [r4, #26]
 726 00c8 0722     		movs	r2, #7
 727 00ca BA40     		lsls	r2, r2, r7
 728 00cc 9343     		bics	r3, r2
 729 00ce 0B60     		str	r3, [r1]
 733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 730              		.loc 1 733 0
 731 00d0 FFF7FEFF 		bl	CyExitCriticalSection
 732              	.LVL70:
 733              	.L58:
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 734              		.loc 1 742 0 discriminator 2
 735 00d4 1C34     		adds	r4, r4, #28
 736              	.LVL71:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 60


 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 737              		.loc 1 680 0 discriminator 2
 738 00d6 0135     		adds	r5, r5, #1
 739              	.LVL72:
 740              	.L57:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 741              		.loc 1 680 0 is_stmt 0 discriminator 1
 742 00d8 002D     		cmp	r5, #0
 743 00da 9CD0     		beq	.L63
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 744              		.loc 1 744 0 is_stmt 1
 745              		@ sp needed
 746              	.LVL73:
 747              	.LVL74:
 748              	.LVL75:
 749 00dc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 750              	.L65:
 751 00de C046     		.align	2
 752              	.L64:
 753 00e0 00000000 		.word	CapSense_1_dsFlash
 754              		.cfi_endproc
 755              	.LFE6:
 756              		.size	CapSense_1_SetPinState, .-CapSense_1_SetPinState
 757              		.section	.text.CapSense_1_SsSwitchSensingMode,"ax",%progbits
 758              		.align	2
 759              		.global	CapSense_1_SsSwitchSensingMode
 760              		.code	16
 761              		.thumb_func
 762              		.type	CapSense_1_SsSwitchSensingMode, %function
 763              	CapSense_1_SsSwitchSensingMode:
 764              	.LFB8:
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 765              		.loc 1 902 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              	.LVL76:
 770 0000 10B5     		push	{r4, lr}
 771              		.cfi_def_cfa_offset 8
 772              		.cfi_offset 4, -8
 773              		.cfi_offset 14, -4
 774 0002 0400     		movs	r4, r0
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 775              		.loc 1 903 0
 776 0004 0D4B     		ldr	r3, .L70
 777 0006 1B78     		ldrb	r3, [r3]
 778 0008 8342     		cmp	r3, r0
 779 000a 16D0     		beq	.L66
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 780              		.loc 1 906 0
 781 000c 012B     		cmp	r3, #1
 782 000e 03D0     		beq	.L68
 912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 783              		.loc 1 912 0
 784 0010 022B     		cmp	r3, #2
 785 0012 01D1     		bne	.L68
 915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 61


 786              		.loc 1 915 0
 787 0014 FFF7FEFF 		bl	CapSense_1_SsDisableCSXMode
 788              	.LVL77:
 789              	.L68:
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 790              		.loc 1 939 0
 791 0018 012C     		cmp	r4, #1
 792 001a 0ED0     		beq	.L66
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 793              		.loc 1 947 0
 794 001c 022C     		cmp	r4, #2
 795 001e 05D1     		bne	.L69
 951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSX_E;
 796              		.loc 1 951 0
 797 0020 FFF7FEFF 		bl	CapSense_1_CSXInitialize
 798              	.LVL78:
 952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 799              		.loc 1 952 0
 800 0024 0222     		movs	r2, #2
 801 0026 054B     		ldr	r3, .L70
 802 0028 1A70     		strb	r2, [r3]
 803 002a 06E0     		b	.L66
 804              	.L69:
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 805              		.loc 1 955 0
 806 002c 042C     		cmp	r4, #4
 807 002e 04D0     		beq	.L66
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 808              		.loc 1 963 0
 809 0030 032C     		cmp	r4, #3
 810 0032 02D0     		beq	.L66
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 811              		.loc 1 972 0
 812 0034 0022     		movs	r2, #0
 813 0036 014B     		ldr	r3, .L70
 814 0038 1A70     		strb	r2, [r3]
 815              	.L66:
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 816              		.loc 1 975 0
 817              		@ sp needed
 818 003a 10BD     		pop	{r4, pc}
 819              	.L71:
 820              		.align	2
 821              	.L70:
 822 003c 00000000 		.word	.LANCHOR0
 823              		.cfi_endproc
 824              	.LFE8:
 825              		.size	CapSense_1_SsSwitchSensingMode, .-CapSense_1_SsSwitchSensingMode
 826              		.section	.text.CapSense_1_SsSetIOsInDefaultState,"ax",%progbits
 827              		.align	2
 828              		.global	CapSense_1_SsSetIOsInDefaultState
 829              		.code	16
 830              		.thumb_func
 831              		.type	CapSense_1_SsSetIOsInDefaultState, %function
 832              	CapSense_1_SsSetIOsInDefaultState:
 833              	.LFB9:
1001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 62


 834              		.loc 1 1001 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838 0000 30B5     		push	{r4, r5, lr}
 839              		.cfi_def_cfa_offset 12
 840              		.cfi_offset 4, -12
 841              		.cfi_offset 5, -8
 842              		.cfi_offset 14, -4
 843              	.LVL79:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 844              		.loc 1 1007 0
 845 0002 0020     		movs	r0, #0
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
 846              		.loc 1 1002 0
 847 0004 0D4B     		ldr	r3, .L75
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 848              		.loc 1 1007 0
 849 0006 16E0     		b	.L73
 850              	.LVL80:
 851              	.L74:
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 852              		.loc 1 1014 0 discriminator 3
 853 0008 1968     		ldr	r1, [r3]
 854 000a 0A68     		ldr	r2, [r1]
 855              	.LVL81:
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 856              		.loc 1 1015 0 discriminator 3
 857 000c 1C69     		ldr	r4, [r3, #16]
 858 000e A243     		bics	r2, r4
 859              	.LVL82:
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 860              		.loc 1 1016 0 discriminator 3
 861 0010 0A60     		str	r2, [r1]
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
 862              		.loc 1 1018 0 discriminator 3
 863 0012 5C68     		ldr	r4, [r3, #4]
 864 0014 2268     		ldr	r2, [r4]
 865              	.LVL83:
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
 866              		.loc 1 1019 0 discriminator 3
 867 0016 9D7E     		ldrb	r5, [r3, #26]
 868 0018 0721     		movs	r1, #7
 869 001a A940     		lsls	r1, r1, r5
 870 001c 8A43     		bics	r2, r1
 871              	.LVL84:
 872 001e 1100     		movs	r1, r2
 873              	.LVL85:
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 874              		.loc 1 1020 0 discriminator 3
 875 0020 0622     		movs	r2, #6
 876 0022 AA40     		lsls	r2, r2, r5
 877 0024 0A43     		orrs	r2, r1
 878              	.LVL86:
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 879              		.loc 1 1021 0 discriminator 3
 880 0026 2260     		str	r2, [r4]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 63


1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
 881              		.loc 1 1023 0 discriminator 3
 882 0028 9968     		ldr	r1, [r3, #8]
 883 002a 0A68     		ldr	r2, [r1]
 884              	.LVL87:
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 885              		.loc 1 1024 0 discriminator 3
 886 002c 5C69     		ldr	r4, [r3, #20]
 887 002e A243     		bics	r2, r4
 888              	.LVL88:
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 889              		.loc 1 1025 0 discriminator 3
 890 0030 0A60     		str	r2, [r1]
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 891              		.loc 1 1028 0 discriminator 3
 892 0032 1C33     		adds	r3, r3, #28
 893              	.LVL89:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 894              		.loc 1 1007 0 discriminator 3
 895 0034 0130     		adds	r0, r0, #1
 896              	.LVL90:
 897              	.L73:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 898              		.loc 1 1007 0 is_stmt 0 discriminator 1
 899 0036 0B28     		cmp	r0, #11
 900 0038 E6D9     		bls	.L74
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 901              		.loc 1 1038 0 is_stmt 1
 902              		@ sp needed
 903 003a 30BD     		pop	{r4, r5, pc}
 904              	.L76:
 905              		.align	2
 906              	.L75:
 907 003c 00000000 		.word	CapSense_1_ioList
 908              		.cfi_endproc
 909              	.LFE9:
 910              		.size	CapSense_1_SsSetIOsInDefaultState, .-CapSense_1_SsSetIOsInDefaultState
 911              		.section	.text.CapSense_1_SsPostAllWidgetsScan,"ax",%progbits
 912              		.align	2
 913              		.global	CapSense_1_SsPostAllWidgetsScan
 914              		.code	16
 915              		.thumb_func
 916              		.type	CapSense_1_SsPostAllWidgetsScan, %function
 917              	CapSense_1_SsPostAllWidgetsScan:
 918              	.LFB10:
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 919              		.loc 1 1123 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923 0000 10B5     		push	{r4, lr}
 924              		.cfi_def_cfa_offset 8
 925              		.cfi_offset 4, -8
 926              		.cfi_offset 14, -4
 927              	.L82:
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 928              		.loc 1 1134 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 64


 929 0002 1B4A     		ldr	r2, .L83
 930 0004 9378     		ldrb	r3, [r2, #2]
 931 0006 0133     		adds	r3, r3, #1
 932 0008 DBB2     		uxtb	r3, r3
 933 000a 9370     		strb	r3, [r2, #2]
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 934              		.loc 1 1136 0
 935 000c 9078     		ldrb	r0, [r2, #2]
 936 000e C0B2     		uxtb	r0, r0
 937 0010 FFF7FEFF 		bl	CapSense_1_SetupWidget
 938              	.LVL91:
 939 0014 041E     		subs	r4, r0, #0
 940              	.LVL92:
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 941              		.loc 1 1138 0
 942 0016 09D1     		bne	.L78
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 943              		.loc 1 1140 0
 944 0018 154B     		ldr	r3, .L83
 945 001a 9B78     		ldrb	r3, [r3, #2]
 946 001c 052B     		cmp	r3, #5
 947 001e 02D1     		bne	.L79
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 948              		.loc 1 1143 0
 949 0020 0022     		movs	r2, #0
 950 0022 134B     		ldr	r3, .L83
 951 0024 5A70     		strb	r2, [r3, #1]
 952              	.L79:
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 953              		.loc 1 1145 0
 954 0026 FFF7FEFF 		bl	CapSense_1_Scan
 955              	.LVL93:
 956 002a 1EE0     		b	.L80
 957              	.LVL94:
 958              	.L78:
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 959              		.loc 1 1147 0
 960 002c 104B     		ldr	r3, .L83
 961 002e 9B78     		ldrb	r3, [r3, #2]
 962 0030 052B     		cmp	r3, #5
 963 0032 11D1     		bne	.L81
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 964              		.loc 1 1161 0
 965 0034 0F4B     		ldr	r3, .L83+4
 966 0036 1A89     		ldrh	r2, [r3, #8]
 967 0038 0132     		adds	r2, r2, #1
 968 003a 1A81     		strh	r2, [r3, #8]
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 969              		.loc 1 1163 0
 970 003c DA68     		ldr	r2, [r3, #12]
 971 003e 8021     		movs	r1, #128
 972 0040 8A43     		bics	r2, r1
 973 0042 DA60     		str	r2, [r3, #12]
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
 974              		.loc 1 1166 0
 975 0044 DA68     		ldr	r2, [r3, #12]
 976 0046 1202     		lsls	r2, r2, #8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 65


 977 0048 120A     		lsrs	r2, r2, #8
 978 004a DA60     		str	r2, [r3, #12]
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 979              		.loc 1 1167 0
 980 004c DA68     		ldr	r2, [r3, #12]
 981 004e 0406     		lsls	r4, r0, #24
 982 0050 1443     		orrs	r4, r2
 983 0052 DC60     		str	r4, [r3, #12]
 984              	.LVL95:
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 985              		.loc 1 1170 0
 986 0054 0024     		movs	r4, #0
 987 0056 08E0     		b	.L80
 988              	.LVL96:
 989              	.L81:
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
 990              		.loc 1 1175 0
 991 0058 064A     		ldr	r2, .L83+4
 992 005a D368     		ldr	r3, [r2, #12]
 993 005c 1B02     		lsls	r3, r3, #8
 994 005e 1B0A     		lsrs	r3, r3, #8
 995 0060 D360     		str	r3, [r2, #12]
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 996              		.loc 1 1176 0
 997 0062 D168     		ldr	r1, [r2, #12]
 998 0064 0306     		lsls	r3, r0, #24
 999 0066 0B43     		orrs	r3, r1
 1000 0068 D360     		str	r3, [r2, #12]
 1001              	.LVL97:
 1002              	.L80:
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
 1003              		.loc 1 1178 0
 1004 006a 002C     		cmp	r4, #0
 1005 006c C9D1     		bne	.L82
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1006              		.loc 1 1180 0
 1007              		@ sp needed
 1008              	.LVL98:
 1009 006e 10BD     		pop	{r4, pc}
 1010              	.L84:
 1011              		.align	2
 1012              	.L83:
 1013 0070 00000000 		.word	.LANCHOR0
 1014 0074 00000000 		.word	CapSense_1_dsRam
 1015              		.cfi_endproc
 1016              	.LFE10:
 1017              		.size	CapSense_1_SsPostAllWidgetsScan, .-CapSense_1_SsPostAllWidgetsScan
 1018              		.section	.text.CapSense_1_SsIsrInitialize,"ax",%progbits
 1019              		.align	2
 1020              		.global	CapSense_1_SsIsrInitialize
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	CapSense_1_SsIsrInitialize, %function
 1024              	CapSense_1_SsIsrInitialize:
 1025              	.LFB11:
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
 1026              		.loc 1 1200 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 66


 1027              		.cfi_startproc
 1028              		@ args = 0, pretend = 0, frame = 0
 1029              		@ frame_needed = 0, uses_anonymous_args = 0
 1030              	.LVL99:
 1031 0000 10B5     		push	{r4, lr}
 1032              		.cfi_def_cfa_offset 8
 1033              		.cfi_offset 4, -8
 1034              		.cfi_offset 14, -4
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 1035              		.loc 1 1201 0
 1036 0002 FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 1037              	.LVL100:
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1038              		.loc 1 1202 0
 1039              		@ sp needed
 1040 0006 10BD     		pop	{r4, pc}
 1041              		.cfi_endproc
 1042              	.LFE11:
 1043              		.size	CapSense_1_SsIsrInitialize, .-CapSense_1_SsIsrInitialize
 1044              		.section	.text.CapSense_1_SsSetModClkClockDivider,"ax",%progbits
 1045              		.align	2
 1046              		.global	CapSense_1_SsSetModClkClockDivider
 1047              		.code	16
 1048              		.thumb_func
 1049              		.type	CapSense_1_SsSetModClkClockDivider, %function
 1050              	CapSense_1_SsSetModClkClockDivider:
 1051              	.LFB12:
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
 1052              		.loc 1 1223 0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 0
 1055              		@ frame_needed = 0, uses_anonymous_args = 0
 1056              		@ link register save eliminated.
 1057              	.LVL101:
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
 1058              		.loc 1 1226 0
 1059 0000 074A     		ldr	r2, .L88
 1060 0002 084B     		ldr	r3, .L88+4
 1061 0004 1A60     		str	r2, [r3]
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1062              		.loc 1 1236 0
 1063 0006 0138     		subs	r0, r0, #1
 1064              	.LVL102:
 1065 0008 0002     		lsls	r0, r0, #8
 1066              	.LVL103:
 1067 000a 074B     		ldr	r3, .L88+8
 1068 000c 1860     		str	r0, [r3]
 1069              	.L87:
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1070              		.loc 1 1239 0 discriminator 1
 1071 000e 054B     		ldr	r3, .L88+4
 1072 0010 1B68     		ldr	r3, [r3]
 1073 0012 002B     		cmp	r3, #0
 1074 0014 FBDB     		blt	.L87
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
 1075              		.loc 1 1245 0
 1076 0016 054A     		ldr	r2, .L88+12
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 67


 1077 0018 024B     		ldr	r3, .L88+4
 1078 001a 1A60     		str	r2, [r3]
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1079              		.loc 1 1270 0
 1080              		@ sp needed
 1081 001c 7047     		bx	lr
 1082              	.L89:
 1083 001e C046     		.align	2
 1084              	.L88:
 1085 0020 40000040 		.word	1073741888
 1086 0024 00000140 		.word	1073807360
 1087 0028 00030140 		.word	1073808128
 1088 002c 40FF0080 		.word	-2147418304
 1089              		.cfi_endproc
 1090              	.LFE12:
 1091              		.size	CapSense_1_SsSetModClkClockDivider, .-CapSense_1_SsSetModClkClockDivider
 1092              		.section	.text.CapSense_1_SsSetSnsClockDivider,"ax",%progbits
 1093              		.align	2
 1094              		.global	CapSense_1_SsSetSnsClockDivider
 1095              		.code	16
 1096              		.thumb_func
 1097              		.type	CapSense_1_SsSetSnsClockDivider, %function
 1098              	CapSense_1_SsSetSnsClockDivider:
 1099              	.LFB13:
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 1100              		.loc 1 1291 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 0
 1103              		@ frame_needed = 0, uses_anonymous_args = 0
 1104              		@ link register save eliminated.
 1105              	.LVL104:
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
 1106              		.loc 1 1300 0
 1107 0000 034A     		ldr	r2, .L91
 1108 0002 1368     		ldr	r3, [r2]
 1109              	.LVL105:
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
 1110              		.loc 1 1301 0
 1111 0004 1B0B     		lsrs	r3, r3, #12
 1112              	.LVL106:
 1113 0006 1B03     		lsls	r3, r3, #12
 1114              	.LVL107:
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
 1115              		.loc 1 1302 0
 1116 0008 0138     		subs	r0, r0, #1
 1117              	.LVL108:
 1118 000a 1843     		orrs	r0, r3
 1119              	.LVL109:
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 1120              		.loc 1 1303 0
 1121 000c 1060     		str	r0, [r2]
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1122              		.loc 1 1352 0
 1123              		@ sp needed
 1124 000e 7047     		bx	lr
 1125              	.L92:
 1126              		.align	2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 68


 1127              	.L91:
 1128 0010 00020B40 		.word	1074463232
 1129              		.cfi_endproc
 1130              	.LFE13:
 1131              		.size	CapSense_1_SsSetSnsClockDivider, .-CapSense_1_SsSetSnsClockDivider
 1132              		.section	.text.CapSense_1_SsSetClockDividers,"ax",%progbits
 1133              		.align	2
 1134              		.global	CapSense_1_SsSetClockDividers
 1135              		.code	16
 1136              		.thumb_func
 1137              		.type	CapSense_1_SsSetClockDividers, %function
 1138              	CapSense_1_SsSetClockDividers:
 1139              	.LFB14:
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
 1140              		.loc 1 1375 0
 1141              		.cfi_startproc
 1142              		@ args = 0, pretend = 0, frame = 0
 1143              		@ frame_needed = 0, uses_anonymous_args = 0
 1144              	.LVL110:
 1145 0000 10B5     		push	{r4, lr}
 1146              		.cfi_def_cfa_offset 8
 1147              		.cfi_offset 4, -8
 1148              		.cfi_offset 14, -4
 1149 0002 0400     		movs	r4, r0
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1150              		.loc 1 1377 0
 1151 0004 0800     		movs	r0, r1
 1152              	.LVL111:
 1153 0006 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 1154              	.LVL112:
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 1155              		.loc 1 1380 0
 1156 000a 2000     		movs	r0, r4
 1157 000c FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 1158              	.LVL113:
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1159              		.loc 1 1381 0
 1160              		@ sp needed
 1161              	.LVL114:
 1162 0010 10BD     		pop	{r4, pc}
 1163              		.cfi_endproc
 1164              	.LFE14:
 1165              		.size	CapSense_1_SsSetClockDividers, .-CapSense_1_SsSetClockDividers
 1166 0012 C046     		.section	.text.CapSense_1_CalibrateWidget,"ax",%progbits
 1167              		.align	2
 1168              		.global	CapSense_1_CalibrateWidget
 1169              		.code	16
 1170              		.thumb_func
 1171              		.type	CapSense_1_CalibrateWidget, %function
 1172              	CapSense_1_CalibrateWidget:
 1173              	.LFB15:
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1174              		.loc 1 1427 0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 0
 1177              		@ frame_needed = 0, uses_anonymous_args = 0
 1178              	.LVL115:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 69


 1179 0000 10B5     		push	{r4, lr}
 1180              		.cfi_def_cfa_offset 8
 1181              		.cfi_offset 4, -8
 1182              		.cfi_offset 14, -4
 1183              	.LVL116:
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 1184              		.loc 1 1432 0
 1185 0002 0528     		cmp	r0, #5
 1186 0004 01D8     		bhi	.L97
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1187              		.loc 1 1428 0
 1188 0006 0024     		movs	r4, #0
 1189 0008 00E0     		b	.L95
 1190              	.L97:
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 1191              		.loc 1 1434 0
 1192 000a 0124     		movs	r4, #1
 1193              	.L95:
 1194              	.LVL117:
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 1195              		.loc 1 1452 0
 1196 000c 002C     		cmp	r4, #0
 1197 000e 02D1     		bne	.L96
1485:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1198              		.loc 1 1485 0
 1199 0010 2821     		movs	r1, #40
 1200 0012 FFF7FEFF 		bl	CapSense_1_CSXCalibrateWidget
 1201              	.LVL118:
 1202              	.L96:
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1203              		.loc 1 1503 0
 1204 0016 2000     		movs	r0, r4
 1205              		@ sp needed
 1206              	.LVL119:
 1207 0018 10BD     		pop	{r4, pc}
 1208              		.cfi_endproc
 1209              	.LFE15:
 1210              		.size	CapSense_1_CalibrateWidget, .-CapSense_1_CalibrateWidget
 1211 001a C046     		.section	.text.CapSense_1_CalibrateAllWidgets,"ax",%progbits
 1212              		.align	2
 1213              		.global	CapSense_1_CalibrateAllWidgets
 1214              		.code	16
 1215              		.thumb_func
 1216              		.type	CapSense_1_CalibrateAllWidgets, %function
 1217              	CapSense_1_CalibrateAllWidgets:
 1218              	.LFB16:
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1219              		.loc 1 1540 0
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 0
 1222              		@ frame_needed = 0, uses_anonymous_args = 0
 1223 0000 70B5     		push	{r4, r5, r6, lr}
 1224              		.cfi_def_cfa_offset 16
 1225              		.cfi_offset 4, -16
 1226              		.cfi_offset 5, -12
 1227              		.cfi_offset 6, -8
 1228              		.cfi_offset 14, -4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 70


 1229              	.LVL120:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1230              		.loc 1 1544 0
 1231 0002 0024     		movs	r4, #0
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
 1232              		.loc 1 1541 0
 1233 0004 0025     		movs	r5, #0
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1234              		.loc 1 1544 0
 1235 0006 04E0     		b	.L99
 1236              	.LVL121:
 1237              	.L100:
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 1238              		.loc 1 1546 0 discriminator 3
 1239 0008 2000     		movs	r0, r4
 1240 000a FFF7FEFF 		bl	CapSense_1_CalibrateWidget
 1241              	.LVL122:
 1242 000e 0543     		orrs	r5, r0
 1243              	.LVL123:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1244              		.loc 1 1544 0 discriminator 3
 1245 0010 0134     		adds	r4, r4, #1
 1246              	.LVL124:
 1247              	.L99:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1248              		.loc 1 1544 0 is_stmt 0 discriminator 1
 1249 0012 052C     		cmp	r4, #5
 1250 0014 F8D9     		bls	.L100
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
 1251              		.loc 1 1550 0 is_stmt 1
 1252 0016 2800     		movs	r0, r5
 1253              		@ sp needed
 1254              	.LVL125:
 1255              	.LVL126:
 1256 0018 70BD     		pop	{r4, r5, r6, pc}
 1257              		.cfi_endproc
 1258              	.LFE16:
 1259              		.size	CapSense_1_CalibrateAllWidgets, .-CapSense_1_CalibrateAllWidgets
 1260 001a C046     		.section	.text.CapSense_1_SsChangeImoFreq,"ax",%progbits
 1261              		.align	2
 1262              		.global	CapSense_1_SsChangeImoFreq
 1263              		.code	16
 1264              		.thumb_func
 1265              		.type	CapSense_1_SsChangeImoFreq, %function
 1266              	CapSense_1_SsChangeImoFreq:
 1267              	.LFB17:
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
 1268              		.loc 1 1974 0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 0
 1271              		@ frame_needed = 0, uses_anonymous_args = 0
 1272              		@ link register save eliminated.
 1273              	.LVL127:
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1274              		.loc 1 1975 0
 1275 0000 024B     		ldr	r3, .L102
 1276 0002 1818     		adds	r0, r3, r0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 71


 1277              	.LVL128:
 1278 0004 0279     		ldrb	r2, [r0, #4]
 1279 0006 024B     		ldr	r3, .L102+4
 1280 0008 1A60     		str	r2, [r3]
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1281              		.loc 1 1976 0
 1282              		@ sp needed
 1283 000a 7047     		bx	lr
 1284              	.L103:
 1285              		.align	2
 1286              	.L102:
 1287 000c 00000000 		.word	.LANCHOR0
 1288 0010 0C0F0340 		.word	1073942284
 1289              		.cfi_endproc
 1290              	.LFE17:
 1291              		.size	CapSense_1_SsChangeImoFreq, .-CapSense_1_SsChangeImoFreq
 1292              		.section	.text.CapSense_1_SsChangeClkFreq,"ax",%progbits
 1293              		.align	2
 1294              		.global	CapSense_1_SsChangeClkFreq
 1295              		.code	16
 1296              		.thumb_func
 1297              		.type	CapSense_1_SsChangeClkFreq, %function
 1298              	CapSense_1_SsChangeClkFreq:
 1299              	.LFB18:
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
 1300              		.loc 1 1995 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 0, uses_anonymous_args = 0
 1304              	.LVL129:
 1305 0000 10B5     		push	{r4, lr}
 1306              		.cfi_def_cfa_offset 8
 1307              		.cfi_offset 4, -8
 1308              		.cfi_offset 14, -4
 1309              	.LVL130:
2014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)ptrFlas
 1310              		.loc 1 2014 0
 1311 0002 094B     		ldr	r3, .L108
 1312 0004 9B78     		ldrb	r3, [r3, #2]
 1313              	.LVL131:
2015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 1314              		.loc 1 2015 0
 1315 0006 5B01     		lsls	r3, r3, #5
 1316              	.LVL132:
 1317 0008 084A     		ldr	r2, .L108+4
 1318 000a D318     		adds	r3, r2, r3
 1319 000c 5B68     		ldr	r3, [r3, #4]
 1320              	.LVL133:
2132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
 1321              		.loc 1 2132 0
 1322 000e 5B89     		ldrh	r3, [r3, #10]
 1323              	.LVL134:
2138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1324              		.loc 1 2138 0
 1325 0010 0128     		cmp	r0, #1
 1326 0012 02D0     		beq	.L106
 1327 0014 0228     		cmp	r0, #2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 72


 1328 0016 02D0     		beq	.L107
 1329 0018 02E0     		b	.L105
 1330              	.L106:
2142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
 1331              		.loc 1 2142 0
 1332 001a 0133     		adds	r3, r3, #1
 1333              	.LVL135:
2143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 1334              		.loc 1 2143 0
 1335 001c 00E0     		b	.L105
 1336              	.L107:
2147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
 1337              		.loc 1 2147 0
 1338 001e 0233     		adds	r3, r3, #2
 1339              	.LVL136:
 1340              	.L105:
2157:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1341              		.loc 1 2157 0
 1342 0020 1800     		movs	r0, r3
 1343              	.LVL137:
 1344 0022 FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 1345              	.LVL138:
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 1346              		.loc 1 2166 0
 1347              		@ sp needed
 1348 0026 10BD     		pop	{r4, pc}
 1349              	.L109:
 1350              		.align	2
 1351              	.L108:
 1352 0028 00000000 		.word	.LANCHOR0
 1353 002c 00000000 		.word	CapSense_1_dsFlash
 1354              		.cfi_endproc
 1355              	.LFE18:
 1356              		.size	CapSense_1_SsChangeClkFreq, .-CapSense_1_SsChangeClkFreq
 1357              		.section	.text.CapSense_1_SsInitializeSourceSenseClk,"ax",%progbits
 1358              		.align	2
 1359              		.global	CapSense_1_SsInitializeSourceSenseClk
 1360              		.code	16
 1361              		.thumb_func
 1362              		.type	CapSense_1_SsInitializeSourceSenseClk, %function
 1363              	CapSense_1_SsInitializeSourceSenseClk:
 1364              	.LFB19:
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 1365              		.loc 1 2186 0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 0
 1368              		@ frame_needed = 0, uses_anonymous_args = 0
 1369 0000 10B5     		push	{r4, lr}
 1370              		.cfi_def_cfa_offset 8
 1371              		.cfi_offset 4, -8
 1372              		.cfi_offset 14, -4
 1373              	.LVL139:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1374              		.loc 1 2190 0
 1375 0002 0024     		movs	r4, #0
 1376 0004 07E0     		b	.L111
 1377              	.LVL140:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 73


 1378              	.L112:
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1379              		.loc 1 2192 0
 1380 0006 6301     		lsls	r3, r4, #5
 1381 0008 044A     		ldr	r2, .L113
 1382 000a D318     		adds	r3, r2, r3
 1383 000c 5968     		ldr	r1, [r3, #4]
 1384              	.LVL141:
2203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 1385              		.loc 1 2203 0
 1386 000e 2000     		movs	r0, r4
 1387 0010 FFF7FEFF 		bl	CapSense_1_SsSetWidgetTxClkSrc
 1388              	.LVL142:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1389              		.loc 1 2190 0
 1390 0014 0134     		adds	r4, r4, #1
 1391              	.LVL143:
 1392              	.L111:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1393              		.loc 1 2190 0 is_stmt 0 discriminator 1
 1394 0016 052C     		cmp	r4, #5
 1395 0018 F5D9     		bls	.L112
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
 1396              		.loc 1 2213 0 is_stmt 1
 1397              		@ sp needed
 1398              	.LVL144:
 1399 001a 10BD     		pop	{r4, pc}
 1400              	.L114:
 1401              		.align	2
 1402              	.L113:
 1403 001c 00000000 		.word	CapSense_1_dsFlash
 1404              		.cfi_endproc
 1405              	.LFE19:
 1406              		.size	CapSense_1_SsInitializeSourceSenseClk, .-CapSense_1_SsInitializeSourceSenseClk
 1407              		.section	.text.CapSense_1_SsInitialize,"ax",%progbits
 1408              		.align	2
 1409              		.global	CapSense_1_SsInitialize
 1410              		.code	16
 1411              		.thumb_func
 1412              		.type	CapSense_1_SsInitialize, %function
 1413              	CapSense_1_SsInitialize:
 1414              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 1415              		.loc 1 517 0
 1416              		.cfi_startproc
 1417              		@ args = 0, pretend = 0, frame = 0
 1418              		@ frame_needed = 0, uses_anonymous_args = 0
 1419 0000 10B5     		push	{r4, lr}
 1420              		.cfi_def_cfa_offset 8
 1421              		.cfi_offset 4, -8
 1422              		.cfi_offset 14, -4
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 1423              		.loc 1 524 0
 1424 0002 124B     		ldr	r3, .L119
 1425 0004 1B68     		ldr	r3, [r3]
 1426 0006 DBB2     		uxtb	r3, r3
 1427              	.LVL145:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 74


 525:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1428              		.loc 1 525 0
 1429 0008 114A     		ldr	r2, .L119+4
 1430 000a 1371     		strb	r3, [r2, #4]
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1431              		.loc 1 527 0
 1432 000c 132B     		cmp	r3, #19
 1433 000e 05D8     		bhi	.L116
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 1434              		.loc 1 529 0
 1435 0010 1900     		movs	r1, r3
 1436 0012 1431     		adds	r1, r1, #20
 1437 0014 5171     		strb	r1, [r2, #5]
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 1438              		.loc 1 530 0
 1439 0016 2833     		adds	r3, r3, #40
 1440              	.LVL146:
 1441 0018 9371     		strb	r3, [r2, #6]
 1442 001a 0EE0     		b	.L117
 1443              	.LVL147:
 1444              	.L116:
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1445              		.loc 1 533 0
 1446 001c EB2B     		cmp	r3, #235
 1447 001e 06D9     		bls	.L118
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 1448              		.loc 1 535 0
 1449 0020 0B4A     		ldr	r2, .L119+4
 1450 0022 1900     		movs	r1, r3
 1451 0024 1439     		subs	r1, r1, #20
 1452 0026 5171     		strb	r1, [r2, #5]
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 1453              		.loc 1 536 0
 1454 0028 283B     		subs	r3, r3, #40
 1455              	.LVL148:
 1456 002a 9371     		strb	r3, [r2, #6]
 1457 002c 05E0     		b	.L117
 1458              	.LVL149:
 1459              	.L118:
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 1460              		.loc 1 541 0
 1461 002e 084A     		ldr	r2, .L119+4
 1462 0030 1900     		movs	r1, r3
 1463 0032 1439     		subs	r1, r1, #20
 1464 0034 5171     		strb	r1, [r2, #5]
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 1465              		.loc 1 542 0
 1466 0036 1433     		adds	r3, r3, #20
 1467              	.LVL150:
 1468 0038 9371     		strb	r3, [r2, #6]
 1469              	.L117:
 1470              	.LVL151:
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 1471              		.loc 1 556 0
 1472 003a FFF7FEFF 		bl	CapSense_1_SsInitializeSourceSenseClk
 1473              	.LVL152:
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 75


 1474              		.loc 1 561 0
 1475 003e FFF7FEFF 		bl	CapSense_1_SsSetIOsInDefaultState
 1476              	.LVL153:
 569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 1477              		.loc 1 569 0
 1478 0042 0220     		movs	r0, #2
 1479 0044 FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
 1480              	.LVL154:
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1481              		.loc 1 578 0
 1482 0048 0020     		movs	r0, #0
 1483              		@ sp needed
 1484 004a 10BD     		pop	{r4, pc}
 1485              	.L120:
 1486              		.align	2
 1487              	.L119:
 1488 004c 0C0F0340 		.word	1073942284
 1489 0050 00000000 		.word	.LANCHOR0
 1490              		.cfi_endproc
 1491              	.LFE5:
 1492              		.size	CapSense_1_SsInitialize, .-CapSense_1_SsInitialize
 1493              		.section	.text.CapSense_1_BistDischargeExtCapacitors,"ax",%progbits
 1494              		.align	2
 1495              		.global	CapSense_1_BistDischargeExtCapacitors
 1496              		.code	16
 1497              		.thumb_func
 1498              		.type	CapSense_1_BistDischargeExtCapacitors, %function
 1499              	CapSense_1_BistDischargeExtCapacitors:
 1500              	.LFB23:
2539:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2540:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****           ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))) */
2547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsClearCSDSensors
2552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  an inactive state.
2558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  connection is Ground or Hi-Z.
2564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsClearCSDSensors(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 76


2567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
2569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsIndex;
2570:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 pinIndex;
2573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2574:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Declare ptr to sensor IO structure */
2577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2579:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_IO_STRUCT const *curSnsIOPtr;
2582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
2584:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
2586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2588:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
2589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                 CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlas
2590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Go through all the sensors in widget */
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_1_dsFlash.wdgtArray[wdgtIndex].total
2593:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Check ganged sns flag */
2596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[wdgtIndex].
2597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                  CapSense_1_GANGED_SNS_MASK))
2598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get sns pointer */
2600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
2601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                CapSense_1_dsFlash.wdgtArray[wdgtInd
2602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                snsIndex;
2603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             {
2606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinI
2608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Disconnect dedicated pin */
2610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 CapSense_1_CSDDisconnectSns(curDedicatedSnsIOPtr);
2611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             }
2612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2614:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Disable sensor */
2616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable sensor */
2620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2621:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 77


2624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDGetColSnsClkDivider
2629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2630:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2633:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
2641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
2644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2645:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2648:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 CapSense_1_SsCSDGetColSnsClkDivider(uint32 widgetId)
2649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 retVal;
2651:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
2660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return (retVal);
2667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2668:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2669:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDSetColSnsClkDivider
2672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value for one-dimension widgets
2676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value based on the Component
2680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 78


2681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param
2684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widgetId Specifies the ID of the widget.
2685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return The Sense Clock Divider value for one-dimension widgets
2687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *        and the Column Sense Clock divider value for two-dimension widgets.
2688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsCSDSetColSnsClkDivider(uint32 widgetId, uint32 dividerVal)
2691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2695:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2697:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2698:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt->snsClk = (uint16)dividerVal;
2700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsRam.snsCsdClk = (uint16)dividerVal;
2702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2706:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDGetRowSnsClkDivider
2711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  two-dimension widgets.
2721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return
2726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 CapSense_1_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 retVal;
2733:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Get sense divider based on configuration */
2735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2736:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2737:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 79


2738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2740:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2747:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (retVal);
2749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2752:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2753:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDCalcPrsSize
2757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  requirements:
2765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  resolution The widget resolution.
2770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 CapSense_1_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 prsSize;
2777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 modClkDivider = 1u;
2778:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if ((CapSense_1_ENABLE != CapSense_1_CSDV2) && \
2780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK))
2781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     modClkDivider = (uint32)CapSense_1_dsRam.modCsdClk;
2782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((snsClkDivider * CapSense_1_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu 
2785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS12 mode */
2787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_12_CONFIG;
2788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if ((snsClkDivider * CapSense_1_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x0000000
2790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS8 mode */
2792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_8_CONFIG;
2793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 80


2795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set Direct clock mode */
2797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_CLK_SOURCE_DIRECT;
2798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (uint8)prsSize;
2801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2804:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2805:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_BistDischargeExtCapacitors
2809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors.
2813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors by connection them
2816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects 
2817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses 
2819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_BistDischargeExtCapacitors(void)
2823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1501              		.loc 1 2823 0
 1502              		.cfi_startproc
 1503              		@ args = 0, pretend = 0, frame = 0
 1504              		@ frame_needed = 0, uses_anonymous_args = 0
 1505 0000 70B5     		push	{r4, r5, r6, lr}
 1506              		.cfi_def_cfa_offset 16
 1507              		.cfi_offset 4, -16
 1508              		.cfi_offset 5, -12
 1509              		.cfi_offset 6, -8
 1510              		.cfi_offset 14, -4
2824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
2825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8  interruptState;
2826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         
2827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1511              		.loc 1 2828 0
 1512 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1513              	.LVL155:
2829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR);
 1514              		.loc 1 2829 0
 1515 0006 134A     		ldr	r2, .L122
 1516 0008 1168     		ldr	r1, [r2]
 1517              	.LVL156:
2830:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_HSIOM_MASK);
 1518              		.loc 1 2830 0
 1519 000a 134B     		ldr	r3, .L122+4
 1520 000c 0B40     		ands	r3, r1
 1521              	.LVL157:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 81


2831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR, newRegValue);
 1522              		.loc 1 2831 0
 1523 000e 1360     		str	r3, [r2]
2832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1524              		.loc 1 2832 0
 1525 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1526              	.LVL158:
2833:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2835:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1527              		.loc 1 2835 0
 1528 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1529              	.LVL159:
2836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_DR_PTR);
 1530              		.loc 1 2836 0
 1531 0018 104A     		ldr	r2, .L122+8
 1532 001a 1368     		ldr	r3, [r2]
 1533              	.LVL160:
2837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_DR_MASK);
 1534              		.loc 1 2837 0
 1535 001c 0C21     		movs	r1, #12
 1536 001e 8B43     		bics	r3, r1
 1537              	.LVL161:
2838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_DR_PTR, newRegValue);
 1538              		.loc 1 2838 0
 1539 0020 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1540              		.loc 1 2839 0
 1541 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1542              	.LVL162:
2840:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1543              		.loc 1 2842 0
 1544 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 1545              	.LVL163:
2843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1546              		.loc 1 2843 0
 1547 002a 0D4C     		ldr	r4, .L122+12
 1548 002c 2368     		ldr	r3, [r4]
 1549              	.LVL164:
2844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1550              		.loc 1 2844 0
 1551 002e 0D4D     		ldr	r5, .L122+16
 1552 0030 2B40     		ands	r3, r5
 1553              	.LVL165:
2845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (CapSense_1_EXT_CAP_PC_STRONG_CFG);
 1554              		.loc 1 2845 0
 1555 0032 D822     		movs	r2, #216
 1556 0034 1201     		lsls	r2, r2, #4
 1557 0036 1343     		orrs	r3, r2
 1558              	.LVL166:
2846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1559              		.loc 1 2846 0
 1560 0038 2360     		str	r3, [r4]
2847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1561              		.loc 1 2847 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 82


 1562 003a FFF7FEFF 		bl	CyExitCriticalSection
 1563              	.LVL167:
2848:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Delay to discharge external capacitors */
2850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyDelayUs(CapSense_1_EXT_CAP_DISCHARGE_TIME);
 1564              		.loc 1 2850 0
 1565 003e 0120     		movs	r0, #1
 1566 0040 FFF7FEFF 		bl	CyDelayUs
 1567              	.LVL168:
2851:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1568              		.loc 1 2853 0
 1569 0044 FFF7FEFF 		bl	CyEnterCriticalSection
 1570              	.LVL169:
2854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1571              		.loc 1 2854 0
 1572 0048 2368     		ldr	r3, [r4]
 1573              	.LVL170:
2855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1574              		.loc 1 2855 0
 1575 004a 1D40     		ands	r5, r3
 1576              	.LVL171:
2856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1577              		.loc 1 2856 0
 1578 004c 2560     		str	r5, [r4]
2857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1579              		.loc 1 2857 0
 1580 004e FFF7FEFF 		bl	CyExitCriticalSection
 1581              	.LVL172:
2858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1582              		.loc 1 2858 0
 1583              		@ sp needed
 1584              	.LVL173:
 1585 0052 70BD     		pop	{r4, r5, r6, pc}
 1586              	.L123:
 1587              		.align	2
 1588              	.L122:
 1589 0054 00040240 		.word	1073873920
 1590 0058 FF00FFFF 		.word	-65281
 1591 005c 00040440 		.word	1074004992
 1592 0060 08040440 		.word	1074005000
 1593 0064 3FF0FFFF 		.word	-4033
 1594              		.cfi_endproc
 1595              	.LFE23:
 1596              		.size	CapSense_1_BistDischargeExtCapacitors, .-CapSense_1_BistDischargeExtCapacitors
 1597              		.comm	CapSense_1_curSnsIOPtr,4,4
 1598              		.global	CapSense_1_curFlashWdgtPtr
 1599              		.comm	CapSense_1_curRamSnsPtr,4,4
 1600              		.global	CapSense_1_requestScanAllWidget
 1601              		.global	CapSense_1_sensorIndex
 1602              		.global	CapSense_1_widgetIndex
 1603              		.global	CapSense_1_immunity
 1604              		.global	CapSense_1_scanFreqIndex
 1605              		.global	CapSense_1_currentSenseMethod
 1606              		.bss
 1607              		.align	2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 83


 1608              		.set	.LANCHOR0,. + 0
 1609              		.type	CapSense_1_currentSenseMethod, %object
 1610              		.size	CapSense_1_currentSenseMethod, 1
 1611              	CapSense_1_currentSenseMethod:
 1612 0000 00       		.space	1
 1613              		.type	CapSense_1_requestScanAllWidget, %object
 1614              		.size	CapSense_1_requestScanAllWidget, 1
 1615              	CapSense_1_requestScanAllWidget:
 1616 0001 00       		.space	1
 1617              		.type	CapSense_1_widgetIndex, %object
 1618              		.size	CapSense_1_widgetIndex, 1
 1619              	CapSense_1_widgetIndex:
 1620 0002 00       		.space	1
 1621 0003 00       		.space	1
 1622              		.type	CapSense_1_immunity, %object
 1623              		.size	CapSense_1_immunity, 3
 1624              	CapSense_1_immunity:
 1625 0004 000000   		.space	3
 1626 0007 00       		.space	1
 1627              		.type	CapSense_1_curFlashWdgtPtr, %object
 1628              		.size	CapSense_1_curFlashWdgtPtr, 4
 1629              	CapSense_1_curFlashWdgtPtr:
 1630 0008 00000000 		.space	4
 1631              		.type	CapSense_1_sensorIndex, %object
 1632              		.size	CapSense_1_sensorIndex, 1
 1633              	CapSense_1_sensorIndex:
 1634 000c 00       		.space	1
 1635              		.type	CapSense_1_scanFreqIndex, %object
 1636              		.size	CapSense_1_scanFreqIndex, 1
 1637              	CapSense_1_scanFreqIndex:
 1638 000d 00       		.space	1
 1639              		.text
 1640              	.Letext0:
 1641              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1642              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1643              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1644              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_SensingCSX_LL.h"
 1645              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 1646              		.file 7 "Generated_Source\\PSoC4\\CapSense_1_ISR.h"
 1647              		.section	.debug_info,"",%progbits
 1648              	.Ldebug_info0:
 1649 0000 0E0F0000 		.4byte	0xf0e
 1650 0004 0400     		.2byte	0x4
 1651 0006 00000000 		.4byte	.Ldebug_abbrev0
 1652 000a 04       		.byte	0x4
 1653 000b 01       		.uleb128 0x1
 1654 000c DA020000 		.4byte	.LASF169
 1655 0010 0C       		.byte	0xc
 1656 0011 F9060000 		.4byte	.LASF170
 1657 0015 91020000 		.4byte	.LASF171
 1658 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1659 001d 00000000 		.4byte	0
 1660 0021 00000000 		.4byte	.Ldebug_line0
 1661 0025 02       		.uleb128 0x2
 1662 0026 01       		.byte	0x1
 1663 0027 06       		.byte	0x6
 1664 0028 A20A0000 		.4byte	.LASF0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 84


 1665 002c 02       		.uleb128 0x2
 1666 002d 01       		.byte	0x1
 1667 002e 08       		.byte	0x8
 1668 002f ED090000 		.4byte	.LASF1
 1669 0033 02       		.uleb128 0x2
 1670 0034 02       		.byte	0x2
 1671 0035 05       		.byte	0x5
 1672 0036 2F080000 		.4byte	.LASF2
 1673 003a 02       		.uleb128 0x2
 1674 003b 02       		.byte	0x2
 1675 003c 07       		.byte	0x7
 1676 003d B30A0000 		.4byte	.LASF3
 1677 0041 02       		.uleb128 0x2
 1678 0042 04       		.byte	0x4
 1679 0043 05       		.byte	0x5
 1680 0044 54080000 		.4byte	.LASF4
 1681 0048 02       		.uleb128 0x2
 1682 0049 04       		.byte	0x4
 1683 004a 07       		.byte	0x7
 1684 004b 85090000 		.4byte	.LASF5
 1685 004f 02       		.uleb128 0x2
 1686 0050 08       		.byte	0x8
 1687 0051 05       		.byte	0x5
 1688 0052 A7050000 		.4byte	.LASF6
 1689 0056 02       		.uleb128 0x2
 1690 0057 08       		.byte	0x8
 1691 0058 07       		.byte	0x7
 1692 0059 95030000 		.4byte	.LASF7
 1693 005d 03       		.uleb128 0x3
 1694 005e 04       		.byte	0x4
 1695 005f 05       		.byte	0x5
 1696 0060 696E7400 		.ascii	"int\000"
 1697 0064 02       		.uleb128 0x2
 1698 0065 04       		.byte	0x4
 1699 0066 07       		.byte	0x7
 1700 0067 C6000000 		.4byte	.LASF8
 1701 006b 04       		.uleb128 0x4
 1702 006c F80A0000 		.4byte	.LASF9
 1703 0070 02       		.byte	0x2
 1704 0071 E401     		.2byte	0x1e4
 1705 0073 2C000000 		.4byte	0x2c
 1706 0077 04       		.uleb128 0x4
 1707 0078 5A050000 		.4byte	.LASF10
 1708 007c 02       		.byte	0x2
 1709 007d E501     		.2byte	0x1e5
 1710 007f 3A000000 		.4byte	0x3a
 1711 0083 04       		.uleb128 0x4
 1712 0084 9C060000 		.4byte	.LASF11
 1713 0088 02       		.byte	0x2
 1714 0089 E601     		.2byte	0x1e6
 1715 008b 48000000 		.4byte	0x48
 1716 008f 02       		.uleb128 0x2
 1717 0090 04       		.byte	0x4
 1718 0091 04       		.byte	0x4
 1719 0092 85020000 		.4byte	.LASF12
 1720 0096 02       		.uleb128 0x2
 1721 0097 08       		.byte	0x8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 85


 1722 0098 04       		.byte	0x4
 1723 0099 FE0A0000 		.4byte	.LASF13
 1724 009d 02       		.uleb128 0x2
 1725 009e 01       		.byte	0x1
 1726 009f 08       		.byte	0x8
 1727 00a0 1A050000 		.4byte	.LASF14
 1728 00a4 04       		.uleb128 0x4
 1729 00a5 E4090000 		.4byte	.LASF15
 1730 00a9 02       		.byte	0x2
 1731 00aa 8602     		.2byte	0x286
 1732 00ac 48000000 		.4byte	0x48
 1733 00b0 05       		.uleb128 0x5
 1734 00b1 6B000000 		.4byte	0x6b
 1735 00b5 04       		.uleb128 0x4
 1736 00b6 BB070000 		.4byte	.LASF16
 1737 00ba 02       		.byte	0x2
 1738 00bb 9002     		.2byte	0x290
 1739 00bd C1000000 		.4byte	0xc1
 1740 00c1 05       		.uleb128 0x5
 1741 00c2 83000000 		.4byte	0x83
 1742 00c6 04       		.uleb128 0x4
 1743 00c7 50060000 		.4byte	.LASF17
 1744 00cb 02       		.byte	0x2
 1745 00cc A002     		.2byte	0x2a0
 1746 00ce D2000000 		.4byte	0xd2
 1747 00d2 06       		.uleb128 0x6
 1748 00d3 04       		.byte	0x4
 1749 00d4 D8000000 		.4byte	0xd8
 1750 00d8 07       		.uleb128 0x7
 1751 00d9 04       		.uleb128 0x4
 1752 00da B5050000 		.4byte	.LASF18
 1753 00de 03       		.byte	0x3
 1754 00df 5B01     		.2byte	0x15b
 1755 00e1 77000000 		.4byte	0x77
 1756 00e5 04       		.uleb128 0x4
 1757 00e6 E7030000 		.4byte	.LASF19
 1758 00ea 03       		.byte	0x3
 1759 00eb 5F01     		.2byte	0x15f
 1760 00ed 6B000000 		.4byte	0x6b
 1761 00f1 08       		.uleb128 0x8
 1762 00f2 01       		.byte	0x1
 1763 00f3 2C000000 		.4byte	0x2c
 1764 00f7 04       		.byte	0x4
 1765 00f8 70       		.byte	0x70
 1766 00f9 1C010000 		.4byte	0x11c
 1767 00fd 09       		.uleb128 0x9
 1768 00fe BE060000 		.4byte	.LASF20
 1769 0102 00       		.byte	0
 1770 0103 09       		.uleb128 0x9
 1771 0104 5F090000 		.4byte	.LASF21
 1772 0108 01       		.byte	0x1
 1773 0109 09       		.uleb128 0x9
 1774 010a CD080000 		.4byte	.LASF22
 1775 010e 02       		.byte	0x2
 1776 010f 09       		.uleb128 0x9
 1777 0110 5F040000 		.4byte	.LASF23
 1778 0114 03       		.byte	0x3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 86


 1779 0115 09       		.uleb128 0x9
 1780 0116 9D070000 		.4byte	.LASF24
 1781 011a 04       		.byte	0x4
 1782 011b 00       		.byte	0
 1783 011c 0A       		.uleb128 0xa
 1784 011d 04040000 		.4byte	.LASF25
 1785 0121 04       		.byte	0x4
 1786 0122 76       		.byte	0x76
 1787 0123 F1000000 		.4byte	0xf1
 1788 0127 0B       		.uleb128 0xb
 1789 0128 0E       		.byte	0xe
 1790 0129 04       		.byte	0x4
 1791 012a 8E       		.byte	0x8e
 1792 012b 9C010000 		.4byte	0x19c
 1793 012f 0C       		.uleb128 0xc
 1794 0130 70050000 		.4byte	.LASF26
 1795 0134 04       		.byte	0x4
 1796 0135 93       		.byte	0x93
 1797 0136 77000000 		.4byte	0x77
 1798 013a 00       		.byte	0
 1799 013b 0C       		.uleb128 0xc
 1800 013c AF090000 		.4byte	.LASF27
 1801 0140 04       		.byte	0x4
 1802 0141 98       		.byte	0x98
 1803 0142 D9000000 		.4byte	0xd9
 1804 0146 02       		.byte	0x2
 1805 0147 0C       		.uleb128 0xc
 1806 0148 12050000 		.4byte	.LASF28
 1807 014c 04       		.byte	0x4
 1808 014d 9D       		.byte	0x9d
 1809 014e 6B000000 		.4byte	0x6b
 1810 0152 04       		.byte	0x4
 1811 0153 0C       		.uleb128 0xc
 1812 0154 3C060000 		.4byte	.LASF29
 1813 0158 04       		.byte	0x4
 1814 0159 A2       		.byte	0xa2
 1815 015a 6B000000 		.4byte	0x6b
 1816 015e 05       		.byte	0x5
 1817 015f 0C       		.uleb128 0xc
 1818 0160 A3060000 		.4byte	.LASF30
 1819 0164 04       		.byte	0x4
 1820 0165 A8       		.byte	0xa8
 1821 0166 6B000000 		.4byte	0x6b
 1822 016a 06       		.byte	0x6
 1823 016b 0C       		.uleb128 0xc
 1824 016c CF050000 		.4byte	.LASF31
 1825 0170 04       		.byte	0x4
 1826 0171 AE       		.byte	0xae
 1827 0172 6B000000 		.4byte	0x6b
 1828 0176 07       		.byte	0x7
 1829 0177 0C       		.uleb128 0xc
 1830 0178 7E040000 		.4byte	.LASF32
 1831 017c 04       		.byte	0x4
 1832 017d B5       		.byte	0xb5
 1833 017e E5000000 		.4byte	0xe5
 1834 0182 08       		.byte	0x8
 1835 0183 0C       		.uleb128 0xc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 87


 1836 0184 840A0000 		.4byte	.LASF33
 1837 0188 04       		.byte	0x4
 1838 0189 BD       		.byte	0xbd
 1839 018a 77000000 		.4byte	0x77
 1840 018e 0A       		.byte	0xa
 1841 018f 0C       		.uleb128 0xc
 1842 0190 19080000 		.4byte	.LASF34
 1843 0194 04       		.byte	0x4
 1844 0195 C2       		.byte	0xc2
 1845 0196 6B000000 		.4byte	0x6b
 1846 019a 0C       		.byte	0xc
 1847 019b 00       		.byte	0
 1848 019c 0A       		.uleb128 0xa
 1849 019d 75060000 		.4byte	.LASF35
 1850 01a1 04       		.byte	0x4
 1851 01a2 C3       		.byte	0xc3
 1852 01a3 27010000 		.4byte	0x127
 1853 01a7 0B       		.uleb128 0xb
 1854 01a8 0E       		.byte	0xe
 1855 01a9 04       		.byte	0x4
 1856 01aa C8       		.byte	0xc8
 1857 01ab 1C020000 		.4byte	0x21c
 1858 01af 0C       		.uleb128 0xc
 1859 01b0 70050000 		.4byte	.LASF26
 1860 01b4 04       		.byte	0x4
 1861 01b5 CD       		.byte	0xcd
 1862 01b6 77000000 		.4byte	0x77
 1863 01ba 00       		.byte	0
 1864 01bb 0C       		.uleb128 0xc
 1865 01bc AF090000 		.4byte	.LASF27
 1866 01c0 04       		.byte	0x4
 1867 01c1 D2       		.byte	0xd2
 1868 01c2 D9000000 		.4byte	0xd9
 1869 01c6 02       		.byte	0x2
 1870 01c7 0C       		.uleb128 0xc
 1871 01c8 12050000 		.4byte	.LASF28
 1872 01cc 04       		.byte	0x4
 1873 01cd D7       		.byte	0xd7
 1874 01ce 6B000000 		.4byte	0x6b
 1875 01d2 04       		.byte	0x4
 1876 01d3 0C       		.uleb128 0xc
 1877 01d4 3C060000 		.4byte	.LASF29
 1878 01d8 04       		.byte	0x4
 1879 01d9 DC       		.byte	0xdc
 1880 01da 6B000000 		.4byte	0x6b
 1881 01de 05       		.byte	0x5
 1882 01df 0C       		.uleb128 0xc
 1883 01e0 A3060000 		.4byte	.LASF30
 1884 01e4 04       		.byte	0x4
 1885 01e5 E2       		.byte	0xe2
 1886 01e6 6B000000 		.4byte	0x6b
 1887 01ea 06       		.byte	0x6
 1888 01eb 0C       		.uleb128 0xc
 1889 01ec CF050000 		.4byte	.LASF31
 1890 01f0 04       		.byte	0x4
 1891 01f1 E8       		.byte	0xe8
 1892 01f2 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 88


 1893 01f6 07       		.byte	0x7
 1894 01f7 0C       		.uleb128 0xc
 1895 01f8 7E040000 		.4byte	.LASF32
 1896 01fc 04       		.byte	0x4
 1897 01fd EF       		.byte	0xef
 1898 01fe E5000000 		.4byte	0xe5
 1899 0202 08       		.byte	0x8
 1900 0203 0C       		.uleb128 0xc
 1901 0204 840A0000 		.4byte	.LASF33
 1902 0208 04       		.byte	0x4
 1903 0209 F7       		.byte	0xf7
 1904 020a 77000000 		.4byte	0x77
 1905 020e 0A       		.byte	0xa
 1906 020f 0C       		.uleb128 0xc
 1907 0210 19080000 		.4byte	.LASF34
 1908 0214 04       		.byte	0x4
 1909 0215 FC       		.byte	0xfc
 1910 0216 6B000000 		.4byte	0x6b
 1911 021a 0C       		.byte	0xc
 1912 021b 00       		.byte	0
 1913 021c 0A       		.uleb128 0xa
 1914 021d 510B0000 		.4byte	.LASF36
 1915 0221 04       		.byte	0x4
 1916 0222 FD       		.byte	0xfd
 1917 0223 A7010000 		.4byte	0x1a7
 1918 0227 0D       		.uleb128 0xd
 1919 0228 54       		.byte	0x54
 1920 0229 04       		.byte	0x4
 1921 022a 0301     		.2byte	0x103
 1922 022c 7F020000 		.4byte	0x27f
 1923 0230 0E       		.uleb128 0xe
 1924 0231 EB080000 		.4byte	.LASF37
 1925 0235 04       		.byte	0x4
 1926 0236 0801     		.2byte	0x108
 1927 0238 1C020000 		.4byte	0x21c
 1928 023c 00       		.byte	0
 1929 023d 0E       		.uleb128 0xe
 1930 023e F3080000 		.4byte	.LASF38
 1931 0242 04       		.byte	0x4
 1932 0243 0D01     		.2byte	0x10d
 1933 0245 1C020000 		.4byte	0x21c
 1934 0249 0E       		.byte	0xe
 1935 024a 0E       		.uleb128 0xe
 1936 024b FB080000 		.4byte	.LASF39
 1937 024f 04       		.byte	0x4
 1938 0250 1201     		.2byte	0x112
 1939 0252 1C020000 		.4byte	0x21c
 1940 0256 1C       		.byte	0x1c
 1941 0257 0E       		.uleb128 0xe
 1942 0258 03090000 		.4byte	.LASF40
 1943 025c 04       		.byte	0x4
 1944 025d 1701     		.2byte	0x117
 1945 025f 1C020000 		.4byte	0x21c
 1946 0263 2A       		.byte	0x2a
 1947 0264 0E       		.uleb128 0xe
 1948 0265 0B090000 		.4byte	.LASF41
 1949 0269 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 89


 1950 026a 1C01     		.2byte	0x11c
 1951 026c 1C020000 		.4byte	0x21c
 1952 0270 38       		.byte	0x38
 1953 0271 0E       		.uleb128 0xe
 1954 0272 13090000 		.4byte	.LASF42
 1955 0276 04       		.byte	0x4
 1956 0277 2101     		.2byte	0x121
 1957 0279 1C020000 		.4byte	0x21c
 1958 027d 46       		.byte	0x46
 1959 027e 00       		.byte	0
 1960 027f 04       		.uleb128 0x4
 1961 0280 11020000 		.4byte	.LASF43
 1962 0284 04       		.byte	0x4
 1963 0285 2201     		.2byte	0x122
 1964 0287 27020000 		.4byte	0x227
 1965 028b 0D       		.uleb128 0xd
 1966 028c 18       		.byte	0x18
 1967 028d 04       		.byte	0x4
 1968 028e 2801     		.2byte	0x128
 1969 0290 E3020000 		.4byte	0x2e3
 1970 0294 0F       		.uleb128 0xf
 1971 0295 72617700 		.ascii	"raw\000"
 1972 0299 04       		.byte	0x4
 1973 029a 2D01     		.2byte	0x12d
 1974 029c E3020000 		.4byte	0x2e3
 1975 02a0 00       		.byte	0
 1976 02a1 0E       		.uleb128 0xe
 1977 02a2 AE0A0000 		.4byte	.LASF44
 1978 02a6 04       		.byte	0x4
 1979 02a7 3201     		.2byte	0x132
 1980 02a9 E3020000 		.4byte	0x2e3
 1981 02ad 06       		.byte	0x6
 1982 02ae 0E       		.uleb128 0xe
 1983 02af D7090000 		.4byte	.LASF45
 1984 02b3 04       		.byte	0x4
 1985 02b4 3801     		.2byte	0x138
 1986 02b6 FA020000 		.4byte	0x2fa
 1987 02ba 0C       		.byte	0xc
 1988 02bb 0E       		.uleb128 0xe
 1989 02bc 99080000 		.4byte	.LASF46
 1990 02c0 04       		.byte	0x4
 1991 02c1 3D01     		.2byte	0x13d
 1992 02c3 D9000000 		.4byte	0xd9
 1993 02c7 10       		.byte	0x10
 1994 02c8 0E       		.uleb128 0xe
 1995 02c9 050B0000 		.4byte	.LASF47
 1996 02cd 04       		.byte	0x4
 1997 02ce 4201     		.2byte	0x142
 1998 02d0 0A030000 		.4byte	0x30a
 1999 02d4 12       		.byte	0x12
 2000 02d5 0E       		.uleb128 0xe
 2001 02d6 98050000 		.4byte	.LASF48
 2002 02da 04       		.byte	0x4
 2003 02db 4701     		.2byte	0x147
 2004 02dd FA020000 		.4byte	0x2fa
 2005 02e1 15       		.byte	0x15
 2006 02e2 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 90


 2007 02e3 10       		.uleb128 0x10
 2008 02e4 77000000 		.4byte	0x77
 2009 02e8 F3020000 		.4byte	0x2f3
 2010 02ec 11       		.uleb128 0x11
 2011 02ed F3020000 		.4byte	0x2f3
 2012 02f1 02       		.byte	0x2
 2013 02f2 00       		.byte	0
 2014 02f3 02       		.uleb128 0x2
 2015 02f4 04       		.byte	0x4
 2016 02f5 07       		.byte	0x7
 2017 02f6 26080000 		.4byte	.LASF49
 2018 02fa 10       		.uleb128 0x10
 2019 02fb 6B000000 		.4byte	0x6b
 2020 02ff 0A030000 		.4byte	0x30a
 2021 0303 11       		.uleb128 0x11
 2022 0304 F3020000 		.4byte	0x2f3
 2023 0308 02       		.byte	0x2
 2024 0309 00       		.byte	0
 2025 030a 10       		.uleb128 0x10
 2026 030b E5000000 		.4byte	0xe5
 2027 030f 1A030000 		.4byte	0x31a
 2028 0313 11       		.uleb128 0x11
 2029 0314 F3020000 		.4byte	0x2f3
 2030 0318 02       		.byte	0x2
 2031 0319 00       		.byte	0
 2032 031a 04       		.uleb128 0x4
 2033 031b 130B0000 		.4byte	.LASF50
 2034 031f 04       		.byte	0x4
 2035 0320 4801     		.2byte	0x148
 2036 0322 8B020000 		.4byte	0x28b
 2037 0326 0D       		.uleb128 0xd
 2038 0327 90       		.byte	0x90
 2039 0328 04       		.byte	0x4
 2040 0329 4E01     		.2byte	0x14e
 2041 032b 7E030000 		.4byte	0x37e
 2042 032f 0E       		.uleb128 0xe
 2043 0330 EB080000 		.4byte	.LASF37
 2044 0334 04       		.byte	0x4
 2045 0335 5301     		.2byte	0x153
 2046 0337 7E030000 		.4byte	0x37e
 2047 033b 00       		.byte	0
 2048 033c 0E       		.uleb128 0xe
 2049 033d F3080000 		.4byte	.LASF38
 2050 0341 04       		.byte	0x4
 2051 0342 5801     		.2byte	0x158
 2052 0344 7E030000 		.4byte	0x37e
 2053 0348 18       		.byte	0x18
 2054 0349 0E       		.uleb128 0xe
 2055 034a FB080000 		.4byte	.LASF39
 2056 034e 04       		.byte	0x4
 2057 034f 5D01     		.2byte	0x15d
 2058 0351 7E030000 		.4byte	0x37e
 2059 0355 30       		.byte	0x30
 2060 0356 0E       		.uleb128 0xe
 2061 0357 03090000 		.4byte	.LASF40
 2062 035b 04       		.byte	0x4
 2063 035c 6201     		.2byte	0x162
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 91


 2064 035e 7E030000 		.4byte	0x37e
 2065 0362 48       		.byte	0x48
 2066 0363 0E       		.uleb128 0xe
 2067 0364 0B090000 		.4byte	.LASF41
 2068 0368 04       		.byte	0x4
 2069 0369 6701     		.2byte	0x167
 2070 036b 7E030000 		.4byte	0x37e
 2071 036f 60       		.byte	0x60
 2072 0370 0E       		.uleb128 0xe
 2073 0371 13090000 		.4byte	.LASF42
 2074 0375 04       		.byte	0x4
 2075 0376 6C01     		.2byte	0x16c
 2076 0378 7E030000 		.4byte	0x37e
 2077 037c 78       		.byte	0x78
 2078 037d 00       		.byte	0
 2079 037e 10       		.uleb128 0x10
 2080 037f 1A030000 		.4byte	0x31a
 2081 0383 8E030000 		.4byte	0x38e
 2082 0387 11       		.uleb128 0x11
 2083 0388 F3020000 		.4byte	0x2f3
 2084 038c 00       		.byte	0
 2085 038d 00       		.byte	0
 2086 038e 04       		.uleb128 0x4
 2087 038f D5060000 		.4byte	.LASF51
 2088 0393 04       		.byte	0x4
 2089 0394 6D01     		.2byte	0x16d
 2090 0396 26030000 		.4byte	0x326
 2091 039a 12       		.uleb128 0x12
 2092 039b 1001     		.2byte	0x110
 2093 039d 04       		.byte	0x4
 2094 039e 7301     		.2byte	0x173
 2095 03a0 86040000 		.4byte	0x486
 2096 03a4 0E       		.uleb128 0xe
 2097 03a5 D4070000 		.4byte	.LASF52
 2098 03a9 04       		.byte	0x4
 2099 03aa 7A01     		.2byte	0x17a
 2100 03ac 77000000 		.4byte	0x77
 2101 03b0 00       		.byte	0
 2102 03b1 0E       		.uleb128 0xe
 2103 03b2 3B0B0000 		.4byte	.LASF53
 2104 03b6 04       		.byte	0x4
 2105 03b7 7F01     		.2byte	0x17f
 2106 03b9 77000000 		.4byte	0x77
 2107 03bd 02       		.byte	0x2
 2108 03be 0E       		.uleb128 0xe
 2109 03bf 19010000 		.4byte	.LASF54
 2110 03c3 04       		.byte	0x4
 2111 03c4 8401     		.2byte	0x184
 2112 03c6 77000000 		.4byte	0x77
 2113 03ca 04       		.byte	0x4
 2114 03cb 0E       		.uleb128 0xe
 2115 03cc 9E080000 		.4byte	.LASF55
 2116 03d0 04       		.byte	0x4
 2117 03d1 8A01     		.2byte	0x18a
 2118 03d3 77000000 		.4byte	0x77
 2119 03d7 06       		.byte	0x6
 2120 03d8 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 92


 2121 03d9 0D010000 		.4byte	.LASF56
 2122 03dd 04       		.byte	0x4
 2123 03de 8F01     		.2byte	0x18f
 2124 03e0 77000000 		.4byte	0x77
 2125 03e4 08       		.byte	0x8
 2126 03e5 0E       		.uleb128 0xe
 2127 03e6 91050000 		.4byte	.LASF57
 2128 03ea 04       		.byte	0x4
 2129 03eb 9401     		.2byte	0x194
 2130 03ed C1000000 		.4byte	0xc1
 2131 03f1 0C       		.byte	0xc
 2132 03f2 0E       		.uleb128 0xe
 2133 03f3 5D080000 		.4byte	.LASF58
 2134 03f7 04       		.byte	0x4
 2135 03f8 9A01     		.2byte	0x19a
 2136 03fa 86040000 		.4byte	0x486
 2137 03fe 10       		.byte	0x10
 2138 03ff 0E       		.uleb128 0xe
 2139 0400 23090000 		.4byte	.LASF59
 2140 0404 04       		.byte	0x4
 2141 0405 A101     		.2byte	0x1a1
 2142 0407 86040000 		.4byte	0x486
 2143 040b 14       		.byte	0x14
 2144 040c 0E       		.uleb128 0xe
 2145 040d 00080000 		.4byte	.LASF60
 2146 0411 04       		.byte	0x4
 2147 0412 B101     		.2byte	0x1b1
 2148 0414 96040000 		.4byte	0x496
 2149 0418 18       		.byte	0x18
 2150 0419 0E       		.uleb128 0xe
 2151 041a 45060000 		.4byte	.LASF61
 2152 041e 04       		.byte	0x4
 2153 041f B701     		.2byte	0x1b7
 2154 0421 77000000 		.4byte	0x77
 2155 0425 1E       		.byte	0x1e
 2156 0426 0E       		.uleb128 0xe
 2157 0427 150A0000 		.4byte	.LASF62
 2158 042b 04       		.byte	0x4
 2159 042c BC01     		.2byte	0x1bc
 2160 042e 6B000000 		.4byte	0x6b
 2161 0432 20       		.byte	0x20
 2162 0433 0E       		.uleb128 0xe
 2163 0434 0A060000 		.4byte	.LASF63
 2164 0438 04       		.byte	0x4
 2165 0439 C101     		.2byte	0x1c1
 2166 043b 7F020000 		.4byte	0x27f
 2167 043f 22       		.byte	0x22
 2168 0440 0E       		.uleb128 0xe
 2169 0441 8D030000 		.4byte	.LASF64
 2170 0445 04       		.byte	0x4
 2171 0446 C601     		.2byte	0x1c6
 2172 0448 8E030000 		.4byte	0x38e
 2173 044c 76       		.byte	0x76
 2174 044d 13       		.uleb128 0x13
 2175 044e 8C000000 		.4byte	.LASF65
 2176 0452 04       		.byte	0x4
 2177 0453 CB01     		.2byte	0x1cb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 93


 2178 0455 6B000000 		.4byte	0x6b
 2179 0459 0601     		.2byte	0x106
 2180 045b 13       		.uleb128 0x13
 2181 045c AC030000 		.4byte	.LASF66
 2182 0460 04       		.byte	0x4
 2183 0461 D001     		.2byte	0x1d0
 2184 0463 6B000000 		.4byte	0x6b
 2185 0467 0701     		.2byte	0x107
 2186 0469 13       		.uleb128 0x13
 2187 046a C1070000 		.4byte	.LASF67
 2188 046e 04       		.byte	0x4
 2189 046f D501     		.2byte	0x1d5
 2190 0471 77000000 		.4byte	0x77
 2191 0475 0801     		.2byte	0x108
 2192 0477 13       		.uleb128 0x13
 2193 0478 20060000 		.4byte	.LASF68
 2194 047c 04       		.byte	0x4
 2195 047d DA01     		.2byte	0x1da
 2196 047f E3020000 		.4byte	0x2e3
 2197 0483 0A01     		.2byte	0x10a
 2198 0485 00       		.byte	0
 2199 0486 10       		.uleb128 0x10
 2200 0487 83000000 		.4byte	0x83
 2201 048b 96040000 		.4byte	0x496
 2202 048f 11       		.uleb128 0x11
 2203 0490 F3020000 		.4byte	0x2f3
 2204 0494 00       		.byte	0
 2205 0495 00       		.byte	0
 2206 0496 10       		.uleb128 0x10
 2207 0497 6B000000 		.4byte	0x6b
 2208 049b A6040000 		.4byte	0x4a6
 2209 049f 11       		.uleb128 0x11
 2210 04a0 F3020000 		.4byte	0x2f3
 2211 04a4 05       		.byte	0x5
 2212 04a5 00       		.byte	0
 2213 04a6 04       		.uleb128 0x4
 2214 04a7 7B050000 		.4byte	.LASF69
 2215 04ab 04       		.byte	0x4
 2216 04ac DB01     		.2byte	0x1db
 2217 04ae 9A030000 		.4byte	0x39a
 2218 04b2 0D       		.uleb128 0xd
 2219 04b3 1C       		.byte	0x1c
 2220 04b4 04       		.byte	0x4
 2221 04b5 E101     		.2byte	0x1e1
 2222 04b7 31050000 		.4byte	0x531
 2223 04bb 0E       		.uleb128 0xe
 2224 04bc 93060000 		.4byte	.LASF70
 2225 04c0 04       		.byte	0x4
 2226 04c1 E601     		.2byte	0x1e6
 2227 04c3 31050000 		.4byte	0x531
 2228 04c7 00       		.byte	0
 2229 04c8 0E       		.uleb128 0xe
 2230 04c9 A1050000 		.4byte	.LASF71
 2231 04cd 04       		.byte	0x4
 2232 04ce EB01     		.2byte	0x1eb
 2233 04d0 31050000 		.4byte	0x531
 2234 04d4 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 94


 2235 04d5 0E       		.uleb128 0xe
 2236 04d6 3E040000 		.4byte	.LASF72
 2237 04da 04       		.byte	0x4
 2238 04db F001     		.2byte	0x1f0
 2239 04dd 31050000 		.4byte	0x531
 2240 04e1 08       		.byte	0x8
 2241 04e2 0E       		.uleb128 0xe
 2242 04e3 C7080000 		.4byte	.LASF73
 2243 04e7 04       		.byte	0x4
 2244 04e8 F501     		.2byte	0x1f5
 2245 04ea 31050000 		.4byte	0x531
 2246 04ee 0C       		.byte	0xc
 2247 04ef 0E       		.uleb128 0xe
 2248 04f0 5C0A0000 		.4byte	.LASF74
 2249 04f4 04       		.byte	0x4
 2250 04f5 FA01     		.2byte	0x1fa
 2251 04f7 83000000 		.4byte	0x83
 2252 04fb 10       		.byte	0x10
 2253 04fc 0E       		.uleb128 0xe
 2254 04fd F4060000 		.4byte	.LASF75
 2255 0501 04       		.byte	0x4
 2256 0502 FF01     		.2byte	0x1ff
 2257 0504 83000000 		.4byte	0x83
 2258 0508 14       		.byte	0x14
 2259 0509 0E       		.uleb128 0xe
 2260 050a 4F050000 		.4byte	.LASF76
 2261 050e 04       		.byte	0x4
 2262 050f 0402     		.2byte	0x204
 2263 0511 6B000000 		.4byte	0x6b
 2264 0515 18       		.byte	0x18
 2265 0516 0E       		.uleb128 0xe
 2266 0517 7D090000 		.4byte	.LASF77
 2267 051b 04       		.byte	0x4
 2268 051c 0902     		.2byte	0x209
 2269 051e 6B000000 		.4byte	0x6b
 2270 0522 19       		.byte	0x19
 2271 0523 0E       		.uleb128 0xe
 2272 0524 8B020000 		.4byte	.LASF78
 2273 0528 04       		.byte	0x4
 2274 0529 0E02     		.2byte	0x20e
 2275 052b 6B000000 		.4byte	0x6b
 2276 052f 1A       		.byte	0x1a
 2277 0530 00       		.byte	0
 2278 0531 06       		.uleb128 0x6
 2279 0532 04       		.byte	0x4
 2280 0533 B5000000 		.4byte	0xb5
 2281 0537 04       		.uleb128 0x4
 2282 0538 C60A0000 		.4byte	.LASF79
 2283 053c 04       		.byte	0x4
 2284 053d 0F02     		.2byte	0x20f
 2285 053f B2040000 		.4byte	0x4b2
 2286 0543 0D       		.uleb128 0xd
 2287 0544 20       		.byte	0x20
 2288 0545 04       		.byte	0x4
 2289 0546 4202     		.2byte	0x242
 2290 0548 CF050000 		.4byte	0x5cf
 2291 054c 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 95


 2292 054d 13060000 		.4byte	.LASF80
 2293 0551 04       		.byte	0x4
 2294 0552 4B02     		.2byte	0x24b
 2295 0554 CF050000 		.4byte	0x5cf
 2296 0558 00       		.byte	0
 2297 0559 0E       		.uleb128 0xe
 2298 055a 250A0000 		.4byte	.LASF81
 2299 055e 04       		.byte	0x4
 2300 055f 5202     		.2byte	0x252
 2301 0561 D6050000 		.4byte	0x5d6
 2302 0565 04       		.byte	0x4
 2303 0566 0E       		.uleb128 0xe
 2304 0567 DD070000 		.4byte	.LASF82
 2305 056b 04       		.byte	0x4
 2306 056c 5802     		.2byte	0x258
 2307 056e D8050000 		.4byte	0x5d8
 2308 0572 08       		.byte	0x8
 2309 0573 0E       		.uleb128 0xe
 2310 0574 AE060000 		.4byte	.LASF83
 2311 0578 04       		.byte	0x4
 2312 0579 5E02     		.2byte	0x25e
 2313 057b D6050000 		.4byte	0x5d6
 2314 057f 0C       		.byte	0xc
 2315 0580 0E       		.uleb128 0xe
 2316 0581 9F090000 		.4byte	.LASF84
 2317 0585 04       		.byte	0x4
 2318 0586 6502     		.2byte	0x265
 2319 0588 DE050000 		.4byte	0x5de
 2320 058c 10       		.byte	0x10
 2321 058d 0E       		.uleb128 0xe
 2322 058e 080A0000 		.4byte	.LASF85
 2323 0592 04       		.byte	0x4
 2324 0593 6A02     		.2byte	0x26a
 2325 0595 83000000 		.4byte	0x83
 2326 0599 14       		.byte	0x14
 2327 059a 0E       		.uleb128 0xe
 2328 059b E2040000 		.4byte	.LASF86
 2329 059f 04       		.byte	0x4
 2330 05a0 7102     		.2byte	0x271
 2331 05a2 77000000 		.4byte	0x77
 2332 05a6 18       		.byte	0x18
 2333 05a7 0E       		.uleb128 0xe
 2334 05a8 BC030000 		.4byte	.LASF87
 2335 05ac 04       		.byte	0x4
 2336 05ad 7802     		.2byte	0x278
 2337 05af 6B000000 		.4byte	0x6b
 2338 05b3 1A       		.byte	0x1a
 2339 05b4 0E       		.uleb128 0xe
 2340 05b5 1B090000 		.4byte	.LASF88
 2341 05b9 04       		.byte	0x4
 2342 05ba 8202     		.2byte	0x282
 2343 05bc 6B000000 		.4byte	0x6b
 2344 05c0 1B       		.byte	0x1b
 2345 05c1 0E       		.uleb128 0xe
 2346 05c2 310A0000 		.4byte	.LASF89
 2347 05c6 04       		.byte	0x4
 2348 05c7 8A02     		.2byte	0x28a
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 96


 2349 05c9 6B000000 		.4byte	0x6b
 2350 05cd 1C       		.byte	0x1c
 2351 05ce 00       		.byte	0
 2352 05cf 06       		.uleb128 0x6
 2353 05d0 04       		.byte	0x4
 2354 05d1 D5050000 		.4byte	0x5d5
 2355 05d5 14       		.uleb128 0x14
 2356 05d6 15       		.uleb128 0x15
 2357 05d7 04       		.byte	0x4
 2358 05d8 06       		.uleb128 0x6
 2359 05d9 04       		.byte	0x4
 2360 05da 1A030000 		.4byte	0x31a
 2361 05de 06       		.uleb128 0x6
 2362 05df 04       		.byte	0x4
 2363 05e0 6B000000 		.4byte	0x6b
 2364 05e4 04       		.uleb128 0x4
 2365 05e5 4E000000 		.4byte	.LASF90
 2366 05e9 04       		.byte	0x4
 2367 05ea 8B02     		.2byte	0x28b
 2368 05ec 43050000 		.4byte	0x543
 2369 05f0 0D       		.uleb128 0xd
 2370 05f1 C0       		.byte	0xc0
 2371 05f2 04       		.byte	0x4
 2372 05f3 9102     		.2byte	0x291
 2373 05f5 07060000 		.4byte	0x607
 2374 05f9 0E       		.uleb128 0xe
 2375 05fa CC0B0000 		.4byte	.LASF91
 2376 05fe 04       		.byte	0x4
 2377 05ff 9602     		.2byte	0x296
 2378 0601 07060000 		.4byte	0x607
 2379 0605 00       		.byte	0
 2380 0606 00       		.byte	0
 2381 0607 10       		.uleb128 0x10
 2382 0608 E4050000 		.4byte	0x5e4
 2383 060c 17060000 		.4byte	0x617
 2384 0610 11       		.uleb128 0x11
 2385 0611 F3020000 		.4byte	0x2f3
 2386 0615 05       		.byte	0x5
 2387 0616 00       		.byte	0
 2388 0617 04       		.uleb128 0x4
 2389 0618 E8070000 		.4byte	.LASF92
 2390 061c 04       		.byte	0x4
 2391 061d 9702     		.2byte	0x297
 2392 061f F0050000 		.4byte	0x5f0
 2393 0623 02       		.uleb128 0x2
 2394 0624 08       		.byte	0x8
 2395 0625 04       		.byte	0x4
 2396 0626 69060000 		.4byte	.LASF93
 2397 062a 16       		.uleb128 0x16
 2398 062b 00000000 		.4byte	.LASF96
 2399 062f 01       		.byte	0x1
 2400 0630 6009     		.2byte	0x960
 2401 0632 6B000000 		.4byte	0x6b
 2402 0636 00000000 		.4byte	.LFB21
 2403 063a 84000000 		.4byte	.LFE21-.LFB21
 2404 063e 01       		.uleb128 0x1
 2405 063f 9C       		.byte	0x9c
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 97


 2406 0640 75060000 		.4byte	0x675
 2407 0644 17       		.uleb128 0x17
 2408 0645 2D0B0000 		.4byte	.LASF94
 2409 0649 01       		.byte	0x1
 2410 064a 6009     		.2byte	0x960
 2411 064c 83000000 		.4byte	0x83
 2412 0650 00000000 		.4byte	.LLST0
 2413 0654 17       		.uleb128 0x17
 2414 0655 61050000 		.4byte	.LASF95
 2415 0659 01       		.byte	0x1
 2416 065a 6009     		.2byte	0x960
 2417 065c 83000000 		.4byte	0x83
 2418 0660 2C000000 		.4byte	.LLST1
 2419 0664 18       		.uleb128 0x18
 2420 0665 C5030000 		.4byte	.LASF98
 2421 0669 01       		.byte	0x1
 2422 066a 6209     		.2byte	0x962
 2423 066c 6B000000 		.4byte	0x6b
 2424 0670 58000000 		.4byte	.LLST2
 2425 0674 00       		.byte	0
 2426 0675 16       		.uleb128 0x16
 2427 0676 B10B0000 		.4byte	.LASF97
 2428 067a 01       		.byte	0x1
 2429 067b AC09     		.2byte	0x9ac
 2430 067d 6B000000 		.4byte	0x6b
 2431 0681 00000000 		.4byte	.LFB22
 2432 0685 42000000 		.4byte	.LFE22-.LFB22
 2433 0689 01       		.uleb128 0x1
 2434 068a 9C       		.byte	0x9c
 2435 068b E0060000 		.4byte	0x6e0
 2436 068f 17       		.uleb128 0x17
 2437 0690 2D0B0000 		.4byte	.LASF94
 2438 0694 01       		.byte	0x1
 2439 0695 AC09     		.2byte	0x9ac
 2440 0697 83000000 		.4byte	0x83
 2441 069b 77000000 		.4byte	.LLST3
 2442 069f 17       		.uleb128 0x17
 2443 06a0 C5030000 		.4byte	.LASF98
 2444 06a4 01       		.byte	0x1
 2445 06a5 AC09     		.2byte	0x9ac
 2446 06a7 6B000000 		.4byte	0x6b
 2447 06ab BC000000 		.4byte	.LLST4
 2448 06af 18       		.uleb128 0x18
 2449 06b0 7F010000 		.4byte	.LASF99
 2450 06b4 01       		.byte	0x1
 2451 06b5 AE09     		.2byte	0x9ae
 2452 06b7 83000000 		.4byte	0x83
 2453 06bb F6000000 		.4byte	.LLST5
 2454 06bf 18       		.uleb128 0x18
 2455 06c0 C3010000 		.4byte	.LASF100
 2456 06c4 01       		.byte	0x1
 2457 06c5 AF09     		.2byte	0x9af
 2458 06c7 83000000 		.4byte	0x83
 2459 06cb 20010000 		.4byte	.LLST6
 2460 06cf 18       		.uleb128 0x18
 2461 06d0 E10A0000 		.4byte	.LASF101
 2462 06d4 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 98


 2463 06d5 B009     		.2byte	0x9b0
 2464 06d7 83000000 		.4byte	0x83
 2465 06db 49010000 		.4byte	.LLST7
 2466 06df 00       		.byte	0
 2467 06e0 19       		.uleb128 0x19
 2468 06e1 69020000 		.4byte	.LASF103
 2469 06e5 01       		.byte	0x1
 2470 06e6 3103     		.2byte	0x331
 2471 06e8 00000000 		.4byte	.LFB7
 2472 06ec 28000000 		.4byte	.LFE7-.LFB7
 2473 06f0 01       		.uleb128 0x1
 2474 06f1 9C       		.byte	0x9c
 2475 06f2 10070000 		.4byte	0x710
 2476 06f6 18       		.uleb128 0x18
 2477 06f7 EC0A0000 		.4byte	.LASF102
 2478 06fb 01       		.byte	0x1
 2479 06fc 3303     		.2byte	0x333
 2480 06fe 83000000 		.4byte	0x83
 2481 0702 5C010000 		.4byte	.LLST8
 2482 0706 1A       		.uleb128 0x1a
 2483 0707 18000000 		.4byte	.LVL29
 2484 070b A30E0000 		.4byte	0xea3
 2485 070f 00       		.byte	0
 2486 0710 19       		.uleb128 0x19
 2487 0711 89010000 		.4byte	.LASF104
 2488 0715 01       		.byte	0x1
 2489 0716 2009     		.2byte	0x920
 2490 0718 00000000 		.4byte	.LFB20
 2491 071c 26000000 		.4byte	.LFE20-.LFB20
 2492 0720 01       		.uleb128 0x1
 2493 0721 9C       		.byte	0x9c
 2494 0722 CC070000 		.4byte	0x7cc
 2495 0726 17       		.uleb128 0x17
 2496 0727 72070000 		.4byte	.LASF105
 2497 072b 01       		.byte	0x1
 2498 072c 2009     		.2byte	0x920
 2499 072e 83000000 		.4byte	0x83
 2500 0732 90010000 		.4byte	.LLST9
 2501 0736 17       		.uleb128 0x17
 2502 0737 37020000 		.4byte	.LASF106
 2503 073b 01       		.byte	0x1
 2504 073c 2009     		.2byte	0x920
 2505 073e CC070000 		.4byte	0x7cc
 2506 0742 B1010000 		.4byte	.LLST10
 2507 0746 18       		.uleb128 0x18
 2508 0747 C5030000 		.4byte	.LASF98
 2509 074b 01       		.byte	0x1
 2510 074c 2209     		.2byte	0x922
 2511 074e 6B000000 		.4byte	0x6b
 2512 0752 DD010000 		.4byte	.LLST11
 2513 0756 18       		.uleb128 0x18
 2514 0757 7F010000 		.4byte	.LASF99
 2515 075b 01       		.byte	0x1
 2516 075c 2309     		.2byte	0x923
 2517 075e 6B000000 		.4byte	0x6b
 2518 0762 F0010000 		.4byte	.LLST12
 2519 0766 18       		.uleb128 0x18
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 99


 2520 0767 61050000 		.4byte	.LASF95
 2521 076b 01       		.byte	0x1
 2522 076c 2709     		.2byte	0x927
 2523 076e 83000000 		.4byte	0x83
 2524 0772 03020000 		.4byte	.LLST13
 2525 0776 18       		.uleb128 0x18
 2526 0777 2D0B0000 		.4byte	.LASF94
 2527 077b 01       		.byte	0x1
 2528 077c 2809     		.2byte	0x928
 2529 077e 83000000 		.4byte	0x83
 2530 0782 16020000 		.4byte	.LLST14
 2531 0786 1B       		.uleb128 0x1b
 2532 0787 0A000000 		.4byte	.LVL32
 2533 078b AE0E0000 		.4byte	0xeae
 2534 078f 9B070000 		.4byte	0x79b
 2535 0793 1C       		.uleb128 0x1c
 2536 0794 01       		.uleb128 0x1
 2537 0795 50       		.byte	0x50
 2538 0796 03       		.uleb128 0x3
 2539 0797 F3       		.byte	0xf3
 2540 0798 01       		.uleb128 0x1
 2541 0799 50       		.byte	0x50
 2542 079a 00       		.byte	0
 2543 079b 1B       		.uleb128 0x1b
 2544 079c 12000000 		.4byte	.LVL34
 2545 07a0 2A060000 		.4byte	0x62a
 2546 07a4 B5070000 		.4byte	0x7b5
 2547 07a8 1C       		.uleb128 0x1c
 2548 07a9 01       		.uleb128 0x1
 2549 07aa 50       		.byte	0x50
 2550 07ab 02       		.uleb128 0x2
 2551 07ac 76       		.byte	0x76
 2552 07ad 00       		.sleb128 0
 2553 07ae 1C       		.uleb128 0x1c
 2554 07af 01       		.uleb128 0x1
 2555 07b0 51       		.byte	0x51
 2556 07b1 02       		.uleb128 0x2
 2557 07b2 74       		.byte	0x74
 2558 07b3 00       		.sleb128 0
 2559 07b4 00       		.byte	0
 2560 07b5 1D       		.uleb128 0x1d
 2561 07b6 1C000000 		.4byte	.LVL37
 2562 07ba 75060000 		.4byte	0x675
 2563 07be 1C       		.uleb128 0x1c
 2564 07bf 01       		.uleb128 0x1
 2565 07c0 50       		.byte	0x50
 2566 07c1 02       		.uleb128 0x2
 2567 07c2 76       		.byte	0x76
 2568 07c3 00       		.sleb128 0
 2569 07c4 1C       		.uleb128 0x1c
 2570 07c5 01       		.uleb128 0x1
 2571 07c6 51       		.byte	0x51
 2572 07c7 02       		.uleb128 0x2
 2573 07c8 74       		.byte	0x74
 2574 07c9 00       		.sleb128 0
 2575 07ca 00       		.byte	0
 2576 07cb 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 100


 2577 07cc 06       		.uleb128 0x6
 2578 07cd 04       		.byte	0x4
 2579 07ce 9C010000 		.4byte	0x19c
 2580 07d2 1E       		.uleb128 0x1e
 2581 07d3 6D010000 		.4byte	.LASF172
 2582 07d7 01       		.byte	0x1
 2583 07d8 E9       		.byte	0xe9
 2584 07d9 83000000 		.4byte	0x83
 2585 07dd 00000000 		.4byte	.LFB1
 2586 07e1 10000000 		.4byte	.LFE1-.LFB1
 2587 07e5 01       		.uleb128 0x1
 2588 07e6 9C       		.byte	0x9c
 2589 07e7 1F       		.uleb128 0x1f
 2590 07e8 6C030000 		.4byte	.LASF109
 2591 07ec 01       		.byte	0x1
 2592 07ed 1D01     		.2byte	0x11d
 2593 07ef A4000000 		.4byte	0xa4
 2594 07f3 00000000 		.4byte	.LFB2
 2595 07f7 40000000 		.4byte	.LFE2-.LFB2
 2596 07fb 01       		.uleb128 0x1
 2597 07fc 9C       		.byte	0x9c
 2598 07fd 2B080000 		.4byte	0x82b
 2599 0801 17       		.uleb128 0x17
 2600 0802 710B0000 		.4byte	.LASF107
 2601 0806 01       		.byte	0x1
 2602 0807 1D01     		.2byte	0x11d
 2603 0809 83000000 		.4byte	0x83
 2604 080d 34020000 		.4byte	.LLST15
 2605 0811 18       		.uleb128 0x18
 2606 0812 440B0000 		.4byte	.LASF108
 2607 0816 01       		.byte	0x1
 2608 0817 1F01     		.2byte	0x11f
 2609 0819 A4000000 		.4byte	0xa4
 2610 081d 55020000 		.4byte	.LLST16
 2611 0821 1A       		.uleb128 0x1a
 2612 0822 38000000 		.4byte	.LVL43
 2613 0826 B90E0000 		.4byte	0xeb9
 2614 082a 00       		.byte	0
 2615 082b 1F       		.uleb128 0x1f
 2616 082c 8D070000 		.4byte	.LASF110
 2617 0830 01       		.byte	0x1
 2618 0831 7001     		.2byte	0x170
 2619 0833 A4000000 		.4byte	0xa4
 2620 0837 00000000 		.4byte	.LFB3
 2621 083b 2C000000 		.4byte	.LFE3-.LFB3
 2622 083f 01       		.uleb128 0x1
 2623 0840 9C       		.byte	0x9c
 2624 0841 5F080000 		.4byte	0x85f
 2625 0845 18       		.uleb128 0x18
 2626 0846 69000000 		.4byte	.LASF111
 2627 084a 01       		.byte	0x1
 2628 084b 7201     		.2byte	0x172
 2629 084d A4000000 		.4byte	0xa4
 2630 0851 73020000 		.4byte	.LLST17
 2631 0855 1A       		.uleb128 0x1a
 2632 0856 16000000 		.4byte	.LVL46
 2633 085a C40E0000 		.4byte	0xec4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 101


 2634 085e 00       		.byte	0
 2635 085f 1F       		.uleb128 0x1f
 2636 0860 35050000 		.4byte	.LASF112
 2637 0864 01       		.byte	0x1
 2638 0865 AE01     		.2byte	0x1ae
 2639 0867 A4000000 		.4byte	0xa4
 2640 086b 00000000 		.4byte	.LFB4
 2641 086f 48000000 		.4byte	.LFE4-.LFB4
 2642 0873 01       		.uleb128 0x1
 2643 0874 9C       		.byte	0x9c
 2644 0875 B7080000 		.4byte	0x8b7
 2645 0879 18       		.uleb128 0x18
 2646 087a 69000000 		.4byte	.LASF111
 2647 087e 01       		.byte	0x1
 2648 087f B001     		.2byte	0x1b0
 2649 0881 A4000000 		.4byte	0xa4
 2650 0885 92020000 		.4byte	.LLST18
 2651 0889 18       		.uleb128 0x18
 2652 088a 72070000 		.4byte	.LASF105
 2653 088e 01       		.byte	0x1
 2654 088f B201     		.2byte	0x1b2
 2655 0891 83000000 		.4byte	0x83
 2656 0895 E0020000 		.4byte	.LLST19
 2657 0899 1B       		.uleb128 0x1b
 2658 089a 18000000 		.4byte	.LVL51
 2659 089e E7070000 		.4byte	0x7e7
 2660 08a2 AD080000 		.4byte	0x8ad
 2661 08a6 1C       		.uleb128 0x1c
 2662 08a7 01       		.uleb128 0x1
 2663 08a8 50       		.byte	0x50
 2664 08a9 02       		.uleb128 0x2
 2665 08aa 74       		.byte	0x74
 2666 08ab 00       		.sleb128 0
 2667 08ac 00       		.byte	0
 2668 08ad 1A       		.uleb128 0x1a
 2669 08ae 32000000 		.4byte	.LVL52
 2670 08b2 2B080000 		.4byte	0x82b
 2671 08b6 00       		.byte	0
 2672 08b7 20       		.uleb128 0x20
 2673 08b8 89040000 		.4byte	.LASF119
 2674 08bc 01       		.byte	0x1
 2675 08bd 8902     		.2byte	0x289
 2676 08bf 00000000 		.4byte	.LFB6
 2677 08c3 E4000000 		.4byte	.LFE6-.LFB6
 2678 08c7 01       		.uleb128 0x1
 2679 08c8 9C       		.byte	0x9c
 2680 08c9 95090000 		.4byte	0x995
 2681 08cd 17       		.uleb128 0x17
 2682 08ce 710B0000 		.4byte	.LASF107
 2683 08d2 01       		.byte	0x1
 2684 08d3 8902     		.2byte	0x289
 2685 08d5 83000000 		.4byte	0x83
 2686 08d9 F3020000 		.4byte	.LLST20
 2687 08dd 17       		.uleb128 0x17
 2688 08de 1A000000 		.4byte	.LASF113
 2689 08e2 01       		.byte	0x1
 2690 08e3 8902     		.2byte	0x289
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 102


 2691 08e5 83000000 		.4byte	0x83
 2692 08e9 14030000 		.4byte	.LLST21
 2693 08ed 17       		.uleb128 0x17
 2694 08ee 390A0000 		.4byte	.LASF114
 2695 08f2 01       		.byte	0x1
 2696 08f3 8902     		.2byte	0x289
 2697 08f5 83000000 		.4byte	0x83
 2698 08f9 35030000 		.4byte	.LLST22
 2699 08fd 21       		.uleb128 0x21
 2700 08fe 2F020000 		.4byte	.LASF115
 2701 0902 01       		.byte	0x1
 2702 0903 8B02     		.2byte	0x28b
 2703 0905 83000000 		.4byte	0x83
 2704 0909 01       		.byte	0x1
 2705 090a 18       		.uleb128 0x18
 2706 090b 520A0000 		.4byte	.LASF116
 2707 090f 01       		.byte	0x1
 2708 0910 8C02     		.2byte	0x28c
 2709 0912 83000000 		.4byte	0x83
 2710 0916 61030000 		.4byte	.LLST23
 2711 091a 18       		.uleb128 0x18
 2712 091b 5E010000 		.4byte	.LASF117
 2713 091f 01       		.byte	0x1
 2714 0920 8D02     		.2byte	0x28d
 2715 0922 6B000000 		.4byte	0x6b
 2716 0926 80030000 		.4byte	.LLST24
 2717 092a 18       		.uleb128 0x18
 2718 092b 1F0A0000 		.4byte	.LASF118
 2719 092f 01       		.byte	0x1
 2720 0930 8E02     		.2byte	0x28e
 2721 0932 95090000 		.4byte	0x995
 2722 0936 BF030000 		.4byte	.LLST25
 2723 093a 1A       		.uleb128 0x1a
 2724 093b 1A000000 		.4byte	.LVL61
 2725 093f CF0E0000 		.4byte	0xecf
 2726 0943 1A       		.uleb128 0x1a
 2727 0944 3A000000 		.4byte	.LVL62
 2728 0948 DA0E0000 		.4byte	0xeda
 2729 094c 1A       		.uleb128 0x1a
 2730 094d 50000000 		.4byte	.LVL63
 2731 0951 CF0E0000 		.4byte	0xecf
 2732 0955 1A       		.uleb128 0x1a
 2733 0956 70000000 		.4byte	.LVL64
 2734 095a DA0E0000 		.4byte	0xeda
 2735 095e 1A       		.uleb128 0x1a
 2736 095f 76000000 		.4byte	.LVL65
 2737 0963 CF0E0000 		.4byte	0xecf
 2738 0967 1A       		.uleb128 0x1a
 2739 0968 88000000 		.4byte	.LVL66
 2740 096c DA0E0000 		.4byte	0xeda
 2741 0970 1A       		.uleb128 0x1a
 2742 0971 8E000000 		.4byte	.LVL67
 2743 0975 CF0E0000 		.4byte	0xecf
 2744 0979 1A       		.uleb128 0x1a
 2745 097a AE000000 		.4byte	.LVL68
 2746 097e DA0E0000 		.4byte	0xeda
 2747 0982 1A       		.uleb128 0x1a
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 103


 2748 0983 B4000000 		.4byte	.LVL69
 2749 0987 CF0E0000 		.4byte	0xecf
 2750 098b 1A       		.uleb128 0x1a
 2751 098c D4000000 		.4byte	.LVL70
 2752 0990 DA0E0000 		.4byte	0xeda
 2753 0994 00       		.byte	0
 2754 0995 06       		.uleb128 0x6
 2755 0996 04       		.byte	0x4
 2756 0997 9B090000 		.4byte	0x99b
 2757 099b 22       		.uleb128 0x22
 2758 099c 37050000 		.4byte	0x537
 2759 09a0 20       		.uleb128 0x20
 2760 09a1 A0040000 		.4byte	.LASF120
 2761 09a5 01       		.byte	0x1
 2762 09a6 8503     		.2byte	0x385
 2763 09a8 00000000 		.4byte	.LFB8
 2764 09ac 40000000 		.4byte	.LFE8-.LFB8
 2765 09b0 01       		.uleb128 0x1
 2766 09b1 9C       		.byte	0x9c
 2767 09b2 D9090000 		.4byte	0x9d9
 2768 09b6 17       		.uleb128 0x17
 2769 09b7 CD010000 		.4byte	.LASF121
 2770 09bb 01       		.byte	0x1
 2771 09bc 8503     		.2byte	0x385
 2772 09be 1C010000 		.4byte	0x11c
 2773 09c2 D2030000 		.4byte	.LLST26
 2774 09c6 1A       		.uleb128 0x1a
 2775 09c7 18000000 		.4byte	.LVL77
 2776 09cb E0060000 		.4byte	0x6e0
 2777 09cf 1A       		.uleb128 0x1a
 2778 09d0 24000000 		.4byte	.LVL78
 2779 09d4 E50E0000 		.4byte	0xee5
 2780 09d8 00       		.byte	0
 2781 09d9 20       		.uleb128 0x20
 2782 09da D3000000 		.4byte	.LASF122
 2783 09de 01       		.byte	0x1
 2784 09df E803     		.2byte	0x3e8
 2785 09e1 00000000 		.4byte	.LFB9
 2786 09e5 40000000 		.4byte	.LFE9-.LFB9
 2787 09e9 01       		.uleb128 0x1
 2788 09ea 9C       		.byte	0x9c
 2789 09eb 200A0000 		.4byte	0xa20
 2790 09ef 18       		.uleb128 0x18
 2791 09f0 1F0A0000 		.4byte	.LASF118
 2792 09f4 01       		.byte	0x1
 2793 09f5 EA03     		.2byte	0x3ea
 2794 09f7 95090000 		.4byte	0x995
 2795 09fb F3030000 		.4byte	.LLST27
 2796 09ff 18       		.uleb128 0x18
 2797 0a00 5F020000 		.4byte	.LASF123
 2798 0a04 01       		.byte	0x1
 2799 0a05 EB03     		.2byte	0x3eb
 2800 0a07 83000000 		.4byte	0x83
 2801 0a0b 06040000 		.4byte	.LLST28
 2802 0a0f 18       		.uleb128 0x18
 2803 0a10 43010000 		.4byte	.LASF124
 2804 0a14 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 104


 2805 0a15 EC03     		.2byte	0x3ec
 2806 0a17 83000000 		.4byte	0x83
 2807 0a1b 25040000 		.4byte	.LLST29
 2808 0a1f 00       		.byte	0
 2809 0a20 20       		.uleb128 0x20
 2810 0a21 7A0B0000 		.4byte	.LASF125
 2811 0a25 01       		.byte	0x1
 2812 0a26 6204     		.2byte	0x462
 2813 0a28 00000000 		.4byte	.LFB10
 2814 0a2c 78000000 		.4byte	.LFE10-.LFB10
 2815 0a30 01       		.uleb128 0x1
 2816 0a31 9C       		.byte	0x9c
 2817 0a32 590A0000 		.4byte	0xa59
 2818 0a36 18       		.uleb128 0x18
 2819 0a37 0A080000 		.4byte	.LASF126
 2820 0a3b 01       		.byte	0x1
 2821 0a3c 6A04     		.2byte	0x46a
 2822 0a3e A4000000 		.4byte	0xa4
 2823 0a42 4E040000 		.4byte	.LLST30
 2824 0a46 1A       		.uleb128 0x1a
 2825 0a47 14000000 		.4byte	.LVL91
 2826 0a4b E7070000 		.4byte	0x7e7
 2827 0a4f 1A       		.uleb128 0x1a
 2828 0a50 2A000000 		.4byte	.LVL93
 2829 0a54 2B080000 		.4byte	0x82b
 2830 0a58 00       		.byte	0
 2831 0a59 20       		.uleb128 0x20
 2832 0a5a 44040000 		.4byte	.LASF127
 2833 0a5e 01       		.byte	0x1
 2834 0a5f AF04     		.2byte	0x4af
 2835 0a61 00000000 		.4byte	.LFB11
 2836 0a65 08000000 		.4byte	.LFE11-.LFB11
 2837 0a69 01       		.uleb128 0x1
 2838 0a6a 9C       		.byte	0x9c
 2839 0a6b 910A0000 		.4byte	0xa91
 2840 0a6f 17       		.uleb128 0x17
 2841 0a70 97090000 		.4byte	.LASF128
 2842 0a74 01       		.byte	0x1
 2843 0a75 AF04     		.2byte	0x4af
 2844 0a77 C6000000 		.4byte	0xc6
 2845 0a7b 99040000 		.4byte	.LLST31
 2846 0a7f 1D       		.uleb128 0x1d
 2847 0a80 06000000 		.4byte	.LVL100
 2848 0a84 F00E0000 		.4byte	0xef0
 2849 0a88 1C       		.uleb128 0x1c
 2850 0a89 01       		.uleb128 0x1
 2851 0a8a 50       		.byte	0x50
 2852 0a8b 03       		.uleb128 0x3
 2853 0a8c F3       		.byte	0xf3
 2854 0a8d 01       		.uleb128 0x1
 2855 0a8e 50       		.byte	0x50
 2856 0a8f 00       		.byte	0
 2857 0a90 00       		.byte	0
 2858 0a91 20       		.uleb128 0x20
 2859 0a92 BF040000 		.4byte	.LASF129
 2860 0a96 01       		.byte	0x1
 2861 0a97 C604     		.2byte	0x4c6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 105


 2862 0a99 00000000 		.4byte	.LFB12
 2863 0a9d 30000000 		.4byte	.LFE12-.LFB12
 2864 0aa1 01       		.uleb128 0x1
 2865 0aa2 9C       		.byte	0x9c
 2866 0aa3 B80A0000 		.4byte	0xab8
 2867 0aa7 17       		.uleb128 0x17
 2868 0aa8 0B050000 		.4byte	.LASF130
 2869 0aac 01       		.byte	0x1
 2870 0aad C604     		.2byte	0x4c6
 2871 0aaf 83000000 		.4byte	0x83
 2872 0ab3 BA040000 		.4byte	.LLST32
 2873 0ab7 00       		.byte	0
 2874 0ab8 20       		.uleb128 0x20
 2875 0ab9 DA050000 		.4byte	.LASF131
 2876 0abd 01       		.byte	0x1
 2877 0abe 0A05     		.2byte	0x50a
 2878 0ac0 00000000 		.4byte	.LFB13
 2879 0ac4 14000000 		.4byte	.LFE13-.LFB13
 2880 0ac8 01       		.uleb128 0x1
 2881 0ac9 9C       		.byte	0x9c
 2882 0aca EF0A0000 		.4byte	0xaef
 2883 0ace 17       		.uleb128 0x17
 2884 0acf 840A0000 		.4byte	.LASF33
 2885 0ad3 01       		.byte	0x1
 2886 0ad4 0A05     		.2byte	0x50a
 2887 0ad6 83000000 		.4byte	0x83
 2888 0ada E8040000 		.4byte	.LLST33
 2889 0ade 18       		.uleb128 0x18
 2890 0adf EC0A0000 		.4byte	.LASF102
 2891 0ae3 01       		.byte	0x1
 2892 0ae4 0D05     		.2byte	0x50d
 2893 0ae6 83000000 		.4byte	0x83
 2894 0aea 16050000 		.4byte	.LLST34
 2895 0aee 00       		.byte	0
 2896 0aef 20       		.uleb128 0x20
 2897 0af0 68080000 		.4byte	.LASF132
 2898 0af4 01       		.byte	0x1
 2899 0af5 5E05     		.2byte	0x55e
 2900 0af7 00000000 		.4byte	.LFB14
 2901 0afb 12000000 		.4byte	.LFE14-.LFB14
 2902 0aff 01       		.uleb128 0x1
 2903 0b00 9C       		.byte	0x9c
 2904 0b01 4B0B0000 		.4byte	0xb4b
 2905 0b05 17       		.uleb128 0x17
 2906 0b06 840A0000 		.4byte	.LASF33
 2907 0b0a 01       		.byte	0x1
 2908 0b0b 5E05     		.2byte	0x55e
 2909 0b0d 83000000 		.4byte	0x83
 2910 0b11 3F050000 		.4byte	.LLST35
 2911 0b15 17       		.uleb128 0x17
 2912 0b16 0B050000 		.4byte	.LASF130
 2913 0b1a 01       		.byte	0x1
 2914 0b1b 5E05     		.2byte	0x55e
 2915 0b1d 83000000 		.4byte	0x83
 2916 0b21 6B050000 		.4byte	.LLST36
 2917 0b25 1B       		.uleb128 0x1b
 2918 0b26 0A000000 		.4byte	.LVL112
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 106


 2919 0b2a 910A0000 		.4byte	0xa91
 2920 0b2e 3A0B0000 		.4byte	0xb3a
 2921 0b32 1C       		.uleb128 0x1c
 2922 0b33 01       		.uleb128 0x1
 2923 0b34 50       		.byte	0x50
 2924 0b35 03       		.uleb128 0x3
 2925 0b36 F3       		.byte	0xf3
 2926 0b37 01       		.uleb128 0x1
 2927 0b38 51       		.byte	0x51
 2928 0b39 00       		.byte	0
 2929 0b3a 1D       		.uleb128 0x1d
 2930 0b3b 10000000 		.4byte	.LVL113
 2931 0b3f B80A0000 		.4byte	0xab8
 2932 0b43 1C       		.uleb128 0x1c
 2933 0b44 01       		.uleb128 0x1
 2934 0b45 50       		.byte	0x50
 2935 0b46 02       		.uleb128 0x2
 2936 0b47 74       		.byte	0x74
 2937 0b48 00       		.sleb128 0
 2938 0b49 00       		.byte	0
 2939 0b4a 00       		.byte	0
 2940 0b4b 1F       		.uleb128 0x1f
 2941 0b4c A8010000 		.4byte	.LASF133
 2942 0b50 01       		.byte	0x1
 2943 0b51 9205     		.2byte	0x592
 2944 0b53 A4000000 		.4byte	0xa4
 2945 0b57 00000000 		.4byte	.LFB15
 2946 0b5b 1A000000 		.4byte	.LFE15-.LFB15
 2947 0b5f 01       		.uleb128 0x1
 2948 0b60 9C       		.byte	0x9c
 2949 0b61 960B0000 		.4byte	0xb96
 2950 0b65 17       		.uleb128 0x17
 2951 0b66 710B0000 		.4byte	.LASF107
 2952 0b6a 01       		.byte	0x1
 2953 0b6b 9205     		.2byte	0x592
 2954 0b6d 83000000 		.4byte	0x83
 2955 0b71 8C050000 		.4byte	.LLST37
 2956 0b75 18       		.uleb128 0x18
 2957 0b76 FA050000 		.4byte	.LASF134
 2958 0b7a 01       		.byte	0x1
 2959 0b7b 9405     		.2byte	0x594
 2960 0b7d A4000000 		.4byte	0xa4
 2961 0b81 AD050000 		.4byte	.LLST38
 2962 0b85 1D       		.uleb128 0x1d
 2963 0b86 16000000 		.4byte	.LVL118
 2964 0b8a FB0E0000 		.4byte	0xefb
 2965 0b8e 1C       		.uleb128 0x1c
 2966 0b8f 01       		.uleb128 0x1
 2967 0b90 51       		.byte	0x51
 2968 0b91 02       		.uleb128 0x2
 2969 0b92 08       		.byte	0x8
 2970 0b93 28       		.byte	0x28
 2971 0b94 00       		.byte	0
 2972 0b95 00       		.byte	0
 2973 0b96 1F       		.uleb128 0x1f
 2974 0b97 B8090000 		.4byte	.LASF135
 2975 0b9b 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 107


 2976 0b9c 0306     		.2byte	0x603
 2977 0b9e A4000000 		.4byte	0xa4
 2978 0ba2 00000000 		.4byte	.LFB16
 2979 0ba6 1A000000 		.4byte	.LFE16-.LFB16
 2980 0baa 01       		.uleb128 0x1
 2981 0bab 9C       		.byte	0x9c
 2982 0bac E10B0000 		.4byte	0xbe1
 2983 0bb0 18       		.uleb128 0x18
 2984 0bb1 FA050000 		.4byte	.LASF134
 2985 0bb5 01       		.byte	0x1
 2986 0bb6 0506     		.2byte	0x605
 2987 0bb8 A4000000 		.4byte	0xa4
 2988 0bbc D7050000 		.4byte	.LLST39
 2989 0bc0 18       		.uleb128 0x18
 2990 0bc1 72070000 		.4byte	.LASF105
 2991 0bc5 01       		.byte	0x1
 2992 0bc6 0606     		.2byte	0x606
 2993 0bc8 83000000 		.4byte	0x83
 2994 0bcc 01060000 		.4byte	.LLST40
 2995 0bd0 1D       		.uleb128 0x1d
 2996 0bd1 0E000000 		.4byte	.LVL122
 2997 0bd5 4B0B0000 		.4byte	0xb4b
 2998 0bd9 1C       		.uleb128 0x1c
 2999 0bda 01       		.uleb128 0x1
 3000 0bdb 50       		.byte	0x50
 3001 0bdc 02       		.uleb128 0x2
 3002 0bdd 74       		.byte	0x74
 3003 0bde 00       		.sleb128 0
 3004 0bdf 00       		.byte	0
 3005 0be0 00       		.byte	0
 3006 0be1 20       		.uleb128 0x20
 3007 0be2 25070000 		.4byte	.LASF136
 3008 0be6 01       		.byte	0x1
 3009 0be7 B507     		.2byte	0x7b5
 3010 0be9 00000000 		.4byte	.LFB17
 3011 0bed 14000000 		.4byte	.LFE17-.LFB17
 3012 0bf1 01       		.uleb128 0x1
 3013 0bf2 9C       		.byte	0x9c
 3014 0bf3 080C0000 		.4byte	0xc08
 3015 0bf7 17       		.uleb128 0x17
 3016 0bf8 21040000 		.4byte	.LASF137
 3017 0bfc 01       		.byte	0x1
 3018 0bfd B507     		.2byte	0x7b5
 3019 0bff 83000000 		.4byte	0x83
 3020 0c03 20060000 		.4byte	.LLST41
 3021 0c07 00       		.byte	0
 3022 0c08 20       		.uleb128 0x20
 3023 0c09 9C000000 		.4byte	.LASF138
 3024 0c0d 01       		.byte	0x1
 3025 0c0e CA07     		.2byte	0x7ca
 3026 0c10 00000000 		.4byte	.LFB18
 3027 0c14 30000000 		.4byte	.LFE18-.LFB18
 3028 0c18 01       		.uleb128 0x1
 3029 0c19 9C       		.byte	0x9c
 3030 0c1a 840C0000 		.4byte	0xc84
 3031 0c1e 17       		.uleb128 0x17
 3032 0c1f DF090000 		.4byte	.LASF139
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 108


 3033 0c23 01       		.byte	0x1
 3034 0c24 CA07     		.2byte	0x7ca
 3035 0c26 83000000 		.4byte	0x83
 3036 0c2a 41060000 		.4byte	.LLST42
 3037 0c2e 18       		.uleb128 0x18
 3038 0c2f 2D0B0000 		.4byte	.LASF94
 3039 0c33 01       		.byte	0x1
 3040 0c34 CC07     		.2byte	0x7cc
 3041 0c36 83000000 		.4byte	0x83
 3042 0c3a 62060000 		.4byte	.LLST43
 3043 0c3e 18       		.uleb128 0x18
 3044 0c3f 30060000 		.4byte	.LASF140
 3045 0c43 01       		.byte	0x1
 3046 0c44 CD07     		.2byte	0x7cd
 3047 0c46 83000000 		.4byte	0x83
 3048 0c4a 75060000 		.4byte	.LLST44
 3049 0c4e 18       		.uleb128 0x18
 3050 0c4f 5D060000 		.4byte	.LASF141
 3051 0c53 01       		.byte	0x1
 3052 0c54 CE07     		.2byte	0x7ce
 3053 0c56 83000000 		.4byte	0x83
 3054 0c5a 95060000 		.4byte	.LLST45
 3055 0c5e 23       		.uleb128 0x23
 3056 0c5f FB090000 		.4byte	.LASF173
 3057 0c63 01       		.byte	0x1
 3058 0c64 DE07     		.2byte	0x7de
 3059 0c66 840C0000 		.4byte	0xc84
 3060 0c6a 18       		.uleb128 0x18
 3061 0c6b 37020000 		.4byte	.LASF106
 3062 0c6f 01       		.byte	0x1
 3063 0c70 DF07     		.2byte	0x7df
 3064 0c72 8F0C0000 		.4byte	0xc8f
 3065 0c76 B5060000 		.4byte	.LLST46
 3066 0c7a 1A       		.uleb128 0x1a
 3067 0c7b 26000000 		.4byte	.LVL138
 3068 0c7f B80A0000 		.4byte	0xab8
 3069 0c83 00       		.byte	0
 3070 0c84 06       		.uleb128 0x6
 3071 0c85 04       		.byte	0x4
 3072 0c86 8A0C0000 		.4byte	0xc8a
 3073 0c8a 22       		.uleb128 0x22
 3074 0c8b E4050000 		.4byte	0x5e4
 3075 0c8f 06       		.uleb128 0x6
 3076 0c90 04       		.byte	0x4
 3077 0c91 950C0000 		.4byte	0xc95
 3078 0c95 22       		.uleb128 0x22
 3079 0c96 9C010000 		.4byte	0x19c
 3080 0c9a 20       		.uleb128 0x20
 3081 0c9b D2010000 		.4byte	.LASF142
 3082 0c9f 01       		.byte	0x1
 3083 0ca0 8908     		.2byte	0x889
 3084 0ca2 00000000 		.4byte	.LFB19
 3085 0ca6 20000000 		.4byte	.LFE19-.LFB19
 3086 0caa 01       		.uleb128 0x1
 3087 0cab 9C       		.byte	0x9c
 3088 0cac E10C0000 		.4byte	0xce1
 3089 0cb0 18       		.uleb128 0x18
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 109


 3090 0cb1 72070000 		.4byte	.LASF105
 3091 0cb5 01       		.byte	0x1
 3092 0cb6 8B08     		.2byte	0x88b
 3093 0cb8 83000000 		.4byte	0x83
 3094 0cbc C8060000 		.4byte	.LLST47
 3095 0cc0 18       		.uleb128 0x18
 3096 0cc1 37020000 		.4byte	.LASF106
 3097 0cc5 01       		.byte	0x1
 3098 0cc6 8C08     		.2byte	0x88c
 3099 0cc8 CC070000 		.4byte	0x7cc
 3100 0ccc E7060000 		.4byte	.LLST48
 3101 0cd0 1D       		.uleb128 0x1d
 3102 0cd1 14000000 		.4byte	.LVL142
 3103 0cd5 10070000 		.4byte	0x710
 3104 0cd9 1C       		.uleb128 0x1c
 3105 0cda 01       		.uleb128 0x1
 3106 0cdb 50       		.byte	0x50
 3107 0cdc 02       		.uleb128 0x2
 3108 0cdd 74       		.byte	0x74
 3109 0cde 00       		.sleb128 0
 3110 0cdf 00       		.byte	0
 3111 0ce0 00       		.byte	0
 3112 0ce1 1F       		.uleb128 0x1f
 3113 0ce2 F5000000 		.4byte	.LASF143
 3114 0ce6 01       		.byte	0x1
 3115 0ce7 0402     		.2byte	0x204
 3116 0ce9 A4000000 		.4byte	0xa4
 3117 0ced 00000000 		.4byte	.LFB5
 3118 0cf1 54000000 		.4byte	.LFE5-.LFB5
 3119 0cf5 01       		.uleb128 0x1
 3120 0cf6 9C       		.byte	0x9c
 3121 0cf7 3A0D0000 		.4byte	0xd3a
 3122 0cfb 21       		.uleb128 0x21
 3123 0cfc 38010000 		.4byte	.LASF144
 3124 0d00 01       		.byte	0x1
 3125 0d01 0602     		.2byte	0x206
 3126 0d03 A4000000 		.4byte	0xa4
 3127 0d07 00       		.byte	0
 3128 0d08 18       		.uleb128 0x18
 3129 0d09 B7000000 		.4byte	.LASF145
 3130 0d0d 01       		.byte	0x1
 3131 0d0e 0A02     		.2byte	0x20a
 3132 0d10 6B000000 		.4byte	0x6b
 3133 0d14 FA060000 		.4byte	.LLST49
 3134 0d18 1A       		.uleb128 0x1a
 3135 0d19 3E000000 		.4byte	.LVL152
 3136 0d1d 9A0C0000 		.4byte	0xc9a
 3137 0d21 1A       		.uleb128 0x1a
 3138 0d22 42000000 		.4byte	.LVL153
 3139 0d26 D9090000 		.4byte	0x9d9
 3140 0d2a 1D       		.uleb128 0x1d
 3141 0d2b 48000000 		.4byte	.LVL154
 3142 0d2f A0090000 		.4byte	0x9a0
 3143 0d33 1C       		.uleb128 0x1c
 3144 0d34 01       		.uleb128 0x1
 3145 0d35 50       		.byte	0x50
 3146 0d36 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 110


 3147 0d37 32       		.byte	0x32
 3148 0d38 00       		.byte	0
 3149 0d39 00       		.byte	0
 3150 0d3a 20       		.uleb128 0x20
 3151 0d3b 28000000 		.4byte	.LASF146
 3152 0d3f 01       		.byte	0x1
 3153 0d40 060B     		.2byte	0xb06
 3154 0d42 00000000 		.4byte	.LFB23
 3155 0d46 68000000 		.4byte	.LFE23-.LFB23
 3156 0d4a 01       		.uleb128 0x1
 3157 0d4b 9C       		.byte	0x9c
 3158 0d4c CC0D0000 		.4byte	0xdcc
 3159 0d50 18       		.uleb128 0x18
 3160 0d51 EC0A0000 		.4byte	.LASF102
 3161 0d55 01       		.byte	0x1
 3162 0d56 080B     		.2byte	0xb08
 3163 0d58 83000000 		.4byte	0x83
 3164 0d5c 50070000 		.4byte	.LLST50
 3165 0d60 18       		.uleb128 0x18
 3166 0d61 5E010000 		.4byte	.LASF117
 3167 0d65 01       		.byte	0x1
 3168 0d66 090B     		.2byte	0xb09
 3169 0d68 6B000000 		.4byte	0x6b
 3170 0d6c 9A070000 		.4byte	.LLST51
 3171 0d70 1A       		.uleb128 0x1a
 3172 0d71 06000000 		.4byte	.LVL155
 3173 0d75 CF0E0000 		.4byte	0xecf
 3174 0d79 1A       		.uleb128 0x1a
 3175 0d7a 14000000 		.4byte	.LVL158
 3176 0d7e DA0E0000 		.4byte	0xeda
 3177 0d82 1A       		.uleb128 0x1a
 3178 0d83 18000000 		.4byte	.LVL159
 3179 0d87 CF0E0000 		.4byte	0xecf
 3180 0d8b 1A       		.uleb128 0x1a
 3181 0d8c 26000000 		.4byte	.LVL162
 3182 0d90 DA0E0000 		.4byte	0xeda
 3183 0d94 1A       		.uleb128 0x1a
 3184 0d95 2A000000 		.4byte	.LVL163
 3185 0d99 CF0E0000 		.4byte	0xecf
 3186 0d9d 1A       		.uleb128 0x1a
 3187 0d9e 3E000000 		.4byte	.LVL167
 3188 0da2 DA0E0000 		.4byte	0xeda
 3189 0da6 1B       		.uleb128 0x1b
 3190 0da7 44000000 		.4byte	.LVL168
 3191 0dab 060F0000 		.4byte	0xf06
 3192 0daf B90D0000 		.4byte	0xdb9
 3193 0db3 1C       		.uleb128 0x1c
 3194 0db4 01       		.uleb128 0x1
 3195 0db5 50       		.byte	0x50
 3196 0db6 01       		.uleb128 0x1
 3197 0db7 31       		.byte	0x31
 3198 0db8 00       		.byte	0
 3199 0db9 1A       		.uleb128 0x1a
 3200 0dba 48000000 		.4byte	.LVL169
 3201 0dbe CF0E0000 		.4byte	0xecf
 3202 0dc2 1A       		.uleb128 0x1a
 3203 0dc3 52000000 		.4byte	.LVL172
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 111


 3204 0dc7 DA0E0000 		.4byte	0xeda
 3205 0dcb 00       		.byte	0
 3206 0dcc 24       		.uleb128 0x24
 3207 0dcd 7C070000 		.4byte	.LASF147
 3208 0dd1 04       		.byte	0x4
 3209 0dd2 3904     		.2byte	0x439
 3210 0dd4 A6040000 		.4byte	0x4a6
 3211 0dd8 24       		.uleb128 0x24
 3212 0dd9 86080000 		.4byte	.LASF148
 3213 0ddd 04       		.byte	0x4
 3214 0dde 3A04     		.2byte	0x43a
 3215 0de0 E40D0000 		.4byte	0xde4
 3216 0de4 22       		.uleb128 0x22
 3217 0de5 17060000 		.4byte	0x617
 3218 0de9 10       		.uleb128 0x10
 3219 0dea 9B090000 		.4byte	0x99b
 3220 0dee F90D0000 		.4byte	0xdf9
 3221 0df2 11       		.uleb128 0x11
 3222 0df3 F3020000 		.4byte	0x2f3
 3223 0df7 0B       		.byte	0xb
 3224 0df8 00       		.byte	0
 3225 0df9 24       		.uleb128 0x24
 3226 0dfa 4C010000 		.4byte	.LASF149
 3227 0dfe 04       		.byte	0x4
 3228 0dff 3B04     		.2byte	0x43b
 3229 0e01 050E0000 		.4byte	0xe05
 3230 0e05 22       		.uleb128 0x22
 3231 0e06 E90D0000 		.4byte	0xde9
 3232 0e0a 25       		.uleb128 0x25
 3233 0e0b 9A0B0000 		.4byte	.LASF150
 3234 0e0f 01       		.byte	0x1
 3235 0e10 BB       		.byte	0xbb
 3236 0e11 B0000000 		.4byte	0xb0
 3237 0e15 05       		.uleb128 0x5
 3238 0e16 03       		.byte	0x3
 3239 0e17 00000000 		.4byte	CapSense_1_widgetIndex
 3240 0e1b 25       		.uleb128 0x25
 3241 0e1c 2E090000 		.4byte	.LASF151
 3242 0e20 01       		.byte	0x1
 3243 0e21 BC       		.byte	0xbc
 3244 0e22 B0000000 		.4byte	0xb0
 3245 0e26 05       		.uleb128 0x5
 3246 0e27 03       		.byte	0x3
 3247 0e28 00000000 		.4byte	CapSense_1_sensorIndex
 3248 0e2c 25       		.uleb128 0x25
 3249 0e2d 3F020000 		.4byte	.LASF152
 3250 0e31 01       		.byte	0x1
 3251 0e32 BD       		.byte	0xbd
 3252 0e33 6B000000 		.4byte	0x6b
 3253 0e37 05       		.uleb128 0x5
 3254 0e38 03       		.byte	0x3
 3255 0e39 00000000 		.4byte	CapSense_1_requestScanAllWidget
 3256 0e3d 25       		.uleb128 0x25
 3257 0e3e 74000000 		.4byte	.LASF153
 3258 0e42 01       		.byte	0x1
 3259 0e43 C0       		.byte	0xc0
 3260 0e44 D8050000 		.4byte	0x5d8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 112


 3261 0e48 05       		.uleb128 0x5
 3262 0e49 03       		.byte	0x3
 3263 0e4a 00000000 		.4byte	CapSense_1_curRamSnsPtr
 3264 0e4e 25       		.uleb128 0x25
 3265 0e4f 660A0000 		.4byte	.LASF154
 3266 0e53 01       		.byte	0x1
 3267 0e54 AE       		.byte	0xae
 3268 0e55 1C010000 		.4byte	0x11c
 3269 0e59 05       		.uleb128 0x5
 3270 0e5a 03       		.byte	0x3
 3271 0e5b 00000000 		.4byte	CapSense_1_currentSenseMethod
 3272 0e5f 25       		.uleb128 0x25
 3273 0e60 F8010000 		.4byte	.LASF155
 3274 0e64 01       		.byte	0x1
 3275 0e65 B2       		.byte	0xb2
 3276 0e66 6B000000 		.4byte	0x6b
 3277 0e6a 05       		.uleb128 0x5
 3278 0e6b 03       		.byte	0x3
 3279 0e6c 00000000 		.4byte	CapSense_1_scanFreqIndex
 3280 0e70 25       		.uleb128 0x25
 3281 0e71 40070000 		.4byte	.LASF156
 3282 0e75 01       		.byte	0x1
 3283 0e76 B4       		.byte	0xb4
 3284 0e77 FA020000 		.4byte	0x2fa
 3285 0e7b 05       		.uleb128 0x5
 3286 0e7c 03       		.byte	0x3
 3287 0e7d 00000000 		.4byte	CapSense_1_immunity
 3288 0e81 25       		.uleb128 0x25
 3289 0e82 39080000 		.4byte	.LASF157
 3290 0e86 01       		.byte	0x1
 3291 0e87 C6       		.byte	0xc6
 3292 0e88 840C0000 		.4byte	0xc84
 3293 0e8c 05       		.uleb128 0x5
 3294 0e8d 03       		.byte	0x3
 3295 0e8e 00000000 		.4byte	CapSense_1_curFlashWdgtPtr
 3296 0e92 25       		.uleb128 0x25
 3297 0e93 21010000 		.4byte	.LASF158
 3298 0e97 01       		.byte	0x1
 3299 0e98 CF       		.byte	0xcf
 3300 0e99 95090000 		.4byte	0x995
 3301 0e9d 05       		.uleb128 0x5
 3302 0e9e 03       		.byte	0x3
 3303 0e9f 00000000 		.4byte	CapSense_1_curSnsIOPtr
 3304 0ea3 26       		.uleb128 0x26
 3305 0ea4 EE040000 		.4byte	.LASF159
 3306 0ea8 EE040000 		.4byte	.LASF159
 3307 0eac 05       		.byte	0x5
 3308 0ead 54       		.byte	0x54
 3309 0eae 26       		.uleb128 0x26
 3310 0eaf A7080000 		.4byte	.LASF160
 3311 0eb3 A7080000 		.4byte	.LASF160
 3312 0eb7 05       		.byte	0x5
 3313 0eb8 55       		.byte	0x55
 3314 0eb9 26       		.uleb128 0x26
 3315 0eba 45090000 		.4byte	.LASF161
 3316 0ebe 45090000 		.4byte	.LASF161
 3317 0ec2 05       		.byte	0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 113


 3318 0ec3 39       		.byte	0x39
 3319 0ec4 26       		.uleb128 0x26
 3320 0ec5 3F0A0000 		.4byte	.LASF162
 3321 0ec9 3F0A0000 		.4byte	.LASF162
 3322 0ecd 05       		.byte	0x5
 3323 0ece 3B       		.byte	0x3b
 3324 0ecf 26       		.uleb128 0x26
 3325 0ed0 8B0A0000 		.4byte	.LASF163
 3326 0ed4 8B0A0000 		.4byte	.LASF163
 3327 0ed8 06       		.byte	0x6
 3328 0ed9 E5       		.byte	0xe5
 3329 0eda 26       		.uleb128 0x26
 3330 0edb 1F050000 		.4byte	.LASF164
 3331 0edf 1F050000 		.4byte	.LASF164
 3332 0ee3 06       		.byte	0x6
 3333 0ee4 E6       		.byte	0xe6
 3334 0ee5 26       		.uleb128 0x26
 3335 0ee6 CE030000 		.4byte	.LASF165
 3336 0eea CE030000 		.4byte	.LASF165
 3337 0eee 05       		.byte	0x5
 3338 0eef 53       		.byte	0x53
 3339 0ef0 26       		.uleb128 0x26
 3340 0ef1 27040000 		.4byte	.LASF166
 3341 0ef5 27040000 		.4byte	.LASF166
 3342 0ef9 07       		.byte	0x7
 3343 0efa 18       		.byte	0x18
 3344 0efb 26       		.uleb128 0x26
 3345 0efc 54070000 		.4byte	.LASF167
 3346 0f00 54070000 		.4byte	.LASF167
 3347 0f04 05       		.byte	0x5
 3348 0f05 3F       		.byte	0x3f
 3349 0f06 26       		.uleb128 0x26
 3350 0f07 83030000 		.4byte	.LASF168
 3351 0f0b 83030000 		.4byte	.LASF168
 3352 0f0f 06       		.byte	0x6
 3353 0f10 DA       		.byte	0xda
 3354 0f11 00       		.byte	0
 3355              		.section	.debug_abbrev,"",%progbits
 3356              	.Ldebug_abbrev0:
 3357 0000 01       		.uleb128 0x1
 3358 0001 11       		.uleb128 0x11
 3359 0002 01       		.byte	0x1
 3360 0003 25       		.uleb128 0x25
 3361 0004 0E       		.uleb128 0xe
 3362 0005 13       		.uleb128 0x13
 3363 0006 0B       		.uleb128 0xb
 3364 0007 03       		.uleb128 0x3
 3365 0008 0E       		.uleb128 0xe
 3366 0009 1B       		.uleb128 0x1b
 3367 000a 0E       		.uleb128 0xe
 3368 000b 55       		.uleb128 0x55
 3369 000c 17       		.uleb128 0x17
 3370 000d 11       		.uleb128 0x11
 3371 000e 01       		.uleb128 0x1
 3372 000f 10       		.uleb128 0x10
 3373 0010 17       		.uleb128 0x17
 3374 0011 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 114


 3375 0012 00       		.byte	0
 3376 0013 02       		.uleb128 0x2
 3377 0014 24       		.uleb128 0x24
 3378 0015 00       		.byte	0
 3379 0016 0B       		.uleb128 0xb
 3380 0017 0B       		.uleb128 0xb
 3381 0018 3E       		.uleb128 0x3e
 3382 0019 0B       		.uleb128 0xb
 3383 001a 03       		.uleb128 0x3
 3384 001b 0E       		.uleb128 0xe
 3385 001c 00       		.byte	0
 3386 001d 00       		.byte	0
 3387 001e 03       		.uleb128 0x3
 3388 001f 24       		.uleb128 0x24
 3389 0020 00       		.byte	0
 3390 0021 0B       		.uleb128 0xb
 3391 0022 0B       		.uleb128 0xb
 3392 0023 3E       		.uleb128 0x3e
 3393 0024 0B       		.uleb128 0xb
 3394 0025 03       		.uleb128 0x3
 3395 0026 08       		.uleb128 0x8
 3396 0027 00       		.byte	0
 3397 0028 00       		.byte	0
 3398 0029 04       		.uleb128 0x4
 3399 002a 16       		.uleb128 0x16
 3400 002b 00       		.byte	0
 3401 002c 03       		.uleb128 0x3
 3402 002d 0E       		.uleb128 0xe
 3403 002e 3A       		.uleb128 0x3a
 3404 002f 0B       		.uleb128 0xb
 3405 0030 3B       		.uleb128 0x3b
 3406 0031 05       		.uleb128 0x5
 3407 0032 49       		.uleb128 0x49
 3408 0033 13       		.uleb128 0x13
 3409 0034 00       		.byte	0
 3410 0035 00       		.byte	0
 3411 0036 05       		.uleb128 0x5
 3412 0037 35       		.uleb128 0x35
 3413 0038 00       		.byte	0
 3414 0039 49       		.uleb128 0x49
 3415 003a 13       		.uleb128 0x13
 3416 003b 00       		.byte	0
 3417 003c 00       		.byte	0
 3418 003d 06       		.uleb128 0x6
 3419 003e 0F       		.uleb128 0xf
 3420 003f 00       		.byte	0
 3421 0040 0B       		.uleb128 0xb
 3422 0041 0B       		.uleb128 0xb
 3423 0042 49       		.uleb128 0x49
 3424 0043 13       		.uleb128 0x13
 3425 0044 00       		.byte	0
 3426 0045 00       		.byte	0
 3427 0046 07       		.uleb128 0x7
 3428 0047 15       		.uleb128 0x15
 3429 0048 00       		.byte	0
 3430 0049 27       		.uleb128 0x27
 3431 004a 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 115


 3432 004b 00       		.byte	0
 3433 004c 00       		.byte	0
 3434 004d 08       		.uleb128 0x8
 3435 004e 04       		.uleb128 0x4
 3436 004f 01       		.byte	0x1
 3437 0050 0B       		.uleb128 0xb
 3438 0051 0B       		.uleb128 0xb
 3439 0052 49       		.uleb128 0x49
 3440 0053 13       		.uleb128 0x13
 3441 0054 3A       		.uleb128 0x3a
 3442 0055 0B       		.uleb128 0xb
 3443 0056 3B       		.uleb128 0x3b
 3444 0057 0B       		.uleb128 0xb
 3445 0058 01       		.uleb128 0x1
 3446 0059 13       		.uleb128 0x13
 3447 005a 00       		.byte	0
 3448 005b 00       		.byte	0
 3449 005c 09       		.uleb128 0x9
 3450 005d 28       		.uleb128 0x28
 3451 005e 00       		.byte	0
 3452 005f 03       		.uleb128 0x3
 3453 0060 0E       		.uleb128 0xe
 3454 0061 1C       		.uleb128 0x1c
 3455 0062 0B       		.uleb128 0xb
 3456 0063 00       		.byte	0
 3457 0064 00       		.byte	0
 3458 0065 0A       		.uleb128 0xa
 3459 0066 16       		.uleb128 0x16
 3460 0067 00       		.byte	0
 3461 0068 03       		.uleb128 0x3
 3462 0069 0E       		.uleb128 0xe
 3463 006a 3A       		.uleb128 0x3a
 3464 006b 0B       		.uleb128 0xb
 3465 006c 3B       		.uleb128 0x3b
 3466 006d 0B       		.uleb128 0xb
 3467 006e 49       		.uleb128 0x49
 3468 006f 13       		.uleb128 0x13
 3469 0070 00       		.byte	0
 3470 0071 00       		.byte	0
 3471 0072 0B       		.uleb128 0xb
 3472 0073 13       		.uleb128 0x13
 3473 0074 01       		.byte	0x1
 3474 0075 0B       		.uleb128 0xb
 3475 0076 0B       		.uleb128 0xb
 3476 0077 3A       		.uleb128 0x3a
 3477 0078 0B       		.uleb128 0xb
 3478 0079 3B       		.uleb128 0x3b
 3479 007a 0B       		.uleb128 0xb
 3480 007b 01       		.uleb128 0x1
 3481 007c 13       		.uleb128 0x13
 3482 007d 00       		.byte	0
 3483 007e 00       		.byte	0
 3484 007f 0C       		.uleb128 0xc
 3485 0080 0D       		.uleb128 0xd
 3486 0081 00       		.byte	0
 3487 0082 03       		.uleb128 0x3
 3488 0083 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 116


 3489 0084 3A       		.uleb128 0x3a
 3490 0085 0B       		.uleb128 0xb
 3491 0086 3B       		.uleb128 0x3b
 3492 0087 0B       		.uleb128 0xb
 3493 0088 49       		.uleb128 0x49
 3494 0089 13       		.uleb128 0x13
 3495 008a 38       		.uleb128 0x38
 3496 008b 0B       		.uleb128 0xb
 3497 008c 00       		.byte	0
 3498 008d 00       		.byte	0
 3499 008e 0D       		.uleb128 0xd
 3500 008f 13       		.uleb128 0x13
 3501 0090 01       		.byte	0x1
 3502 0091 0B       		.uleb128 0xb
 3503 0092 0B       		.uleb128 0xb
 3504 0093 3A       		.uleb128 0x3a
 3505 0094 0B       		.uleb128 0xb
 3506 0095 3B       		.uleb128 0x3b
 3507 0096 05       		.uleb128 0x5
 3508 0097 01       		.uleb128 0x1
 3509 0098 13       		.uleb128 0x13
 3510 0099 00       		.byte	0
 3511 009a 00       		.byte	0
 3512 009b 0E       		.uleb128 0xe
 3513 009c 0D       		.uleb128 0xd
 3514 009d 00       		.byte	0
 3515 009e 03       		.uleb128 0x3
 3516 009f 0E       		.uleb128 0xe
 3517 00a0 3A       		.uleb128 0x3a
 3518 00a1 0B       		.uleb128 0xb
 3519 00a2 3B       		.uleb128 0x3b
 3520 00a3 05       		.uleb128 0x5
 3521 00a4 49       		.uleb128 0x49
 3522 00a5 13       		.uleb128 0x13
 3523 00a6 38       		.uleb128 0x38
 3524 00a7 0B       		.uleb128 0xb
 3525 00a8 00       		.byte	0
 3526 00a9 00       		.byte	0
 3527 00aa 0F       		.uleb128 0xf
 3528 00ab 0D       		.uleb128 0xd
 3529 00ac 00       		.byte	0
 3530 00ad 03       		.uleb128 0x3
 3531 00ae 08       		.uleb128 0x8
 3532 00af 3A       		.uleb128 0x3a
 3533 00b0 0B       		.uleb128 0xb
 3534 00b1 3B       		.uleb128 0x3b
 3535 00b2 05       		.uleb128 0x5
 3536 00b3 49       		.uleb128 0x49
 3537 00b4 13       		.uleb128 0x13
 3538 00b5 38       		.uleb128 0x38
 3539 00b6 0B       		.uleb128 0xb
 3540 00b7 00       		.byte	0
 3541 00b8 00       		.byte	0
 3542 00b9 10       		.uleb128 0x10
 3543 00ba 01       		.uleb128 0x1
 3544 00bb 01       		.byte	0x1
 3545 00bc 49       		.uleb128 0x49
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 117


 3546 00bd 13       		.uleb128 0x13
 3547 00be 01       		.uleb128 0x1
 3548 00bf 13       		.uleb128 0x13
 3549 00c0 00       		.byte	0
 3550 00c1 00       		.byte	0
 3551 00c2 11       		.uleb128 0x11
 3552 00c3 21       		.uleb128 0x21
 3553 00c4 00       		.byte	0
 3554 00c5 49       		.uleb128 0x49
 3555 00c6 13       		.uleb128 0x13
 3556 00c7 2F       		.uleb128 0x2f
 3557 00c8 0B       		.uleb128 0xb
 3558 00c9 00       		.byte	0
 3559 00ca 00       		.byte	0
 3560 00cb 12       		.uleb128 0x12
 3561 00cc 13       		.uleb128 0x13
 3562 00cd 01       		.byte	0x1
 3563 00ce 0B       		.uleb128 0xb
 3564 00cf 05       		.uleb128 0x5
 3565 00d0 3A       		.uleb128 0x3a
 3566 00d1 0B       		.uleb128 0xb
 3567 00d2 3B       		.uleb128 0x3b
 3568 00d3 05       		.uleb128 0x5
 3569 00d4 01       		.uleb128 0x1
 3570 00d5 13       		.uleb128 0x13
 3571 00d6 00       		.byte	0
 3572 00d7 00       		.byte	0
 3573 00d8 13       		.uleb128 0x13
 3574 00d9 0D       		.uleb128 0xd
 3575 00da 00       		.byte	0
 3576 00db 03       		.uleb128 0x3
 3577 00dc 0E       		.uleb128 0xe
 3578 00dd 3A       		.uleb128 0x3a
 3579 00de 0B       		.uleb128 0xb
 3580 00df 3B       		.uleb128 0x3b
 3581 00e0 05       		.uleb128 0x5
 3582 00e1 49       		.uleb128 0x49
 3583 00e2 13       		.uleb128 0x13
 3584 00e3 38       		.uleb128 0x38
 3585 00e4 05       		.uleb128 0x5
 3586 00e5 00       		.byte	0
 3587 00e6 00       		.byte	0
 3588 00e7 14       		.uleb128 0x14
 3589 00e8 26       		.uleb128 0x26
 3590 00e9 00       		.byte	0
 3591 00ea 00       		.byte	0
 3592 00eb 00       		.byte	0
 3593 00ec 15       		.uleb128 0x15
 3594 00ed 0F       		.uleb128 0xf
 3595 00ee 00       		.byte	0
 3596 00ef 0B       		.uleb128 0xb
 3597 00f0 0B       		.uleb128 0xb
 3598 00f1 00       		.byte	0
 3599 00f2 00       		.byte	0
 3600 00f3 16       		.uleb128 0x16
 3601 00f4 2E       		.uleb128 0x2e
 3602 00f5 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 118


 3603 00f6 03       		.uleb128 0x3
 3604 00f7 0E       		.uleb128 0xe
 3605 00f8 3A       		.uleb128 0x3a
 3606 00f9 0B       		.uleb128 0xb
 3607 00fa 3B       		.uleb128 0x3b
 3608 00fb 05       		.uleb128 0x5
 3609 00fc 27       		.uleb128 0x27
 3610 00fd 19       		.uleb128 0x19
 3611 00fe 49       		.uleb128 0x49
 3612 00ff 13       		.uleb128 0x13
 3613 0100 11       		.uleb128 0x11
 3614 0101 01       		.uleb128 0x1
 3615 0102 12       		.uleb128 0x12
 3616 0103 06       		.uleb128 0x6
 3617 0104 40       		.uleb128 0x40
 3618 0105 18       		.uleb128 0x18
 3619 0106 9642     		.uleb128 0x2116
 3620 0108 19       		.uleb128 0x19
 3621 0109 01       		.uleb128 0x1
 3622 010a 13       		.uleb128 0x13
 3623 010b 00       		.byte	0
 3624 010c 00       		.byte	0
 3625 010d 17       		.uleb128 0x17
 3626 010e 05       		.uleb128 0x5
 3627 010f 00       		.byte	0
 3628 0110 03       		.uleb128 0x3
 3629 0111 0E       		.uleb128 0xe
 3630 0112 3A       		.uleb128 0x3a
 3631 0113 0B       		.uleb128 0xb
 3632 0114 3B       		.uleb128 0x3b
 3633 0115 05       		.uleb128 0x5
 3634 0116 49       		.uleb128 0x49
 3635 0117 13       		.uleb128 0x13
 3636 0118 02       		.uleb128 0x2
 3637 0119 17       		.uleb128 0x17
 3638 011a 00       		.byte	0
 3639 011b 00       		.byte	0
 3640 011c 18       		.uleb128 0x18
 3641 011d 34       		.uleb128 0x34
 3642 011e 00       		.byte	0
 3643 011f 03       		.uleb128 0x3
 3644 0120 0E       		.uleb128 0xe
 3645 0121 3A       		.uleb128 0x3a
 3646 0122 0B       		.uleb128 0xb
 3647 0123 3B       		.uleb128 0x3b
 3648 0124 05       		.uleb128 0x5
 3649 0125 49       		.uleb128 0x49
 3650 0126 13       		.uleb128 0x13
 3651 0127 02       		.uleb128 0x2
 3652 0128 17       		.uleb128 0x17
 3653 0129 00       		.byte	0
 3654 012a 00       		.byte	0
 3655 012b 19       		.uleb128 0x19
 3656 012c 2E       		.uleb128 0x2e
 3657 012d 01       		.byte	0x1
 3658 012e 03       		.uleb128 0x3
 3659 012f 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 119


 3660 0130 3A       		.uleb128 0x3a
 3661 0131 0B       		.uleb128 0xb
 3662 0132 3B       		.uleb128 0x3b
 3663 0133 05       		.uleb128 0x5
 3664 0134 27       		.uleb128 0x27
 3665 0135 19       		.uleb128 0x19
 3666 0136 11       		.uleb128 0x11
 3667 0137 01       		.uleb128 0x1
 3668 0138 12       		.uleb128 0x12
 3669 0139 06       		.uleb128 0x6
 3670 013a 40       		.uleb128 0x40
 3671 013b 18       		.uleb128 0x18
 3672 013c 9742     		.uleb128 0x2117
 3673 013e 19       		.uleb128 0x19
 3674 013f 01       		.uleb128 0x1
 3675 0140 13       		.uleb128 0x13
 3676 0141 00       		.byte	0
 3677 0142 00       		.byte	0
 3678 0143 1A       		.uleb128 0x1a
 3679 0144 898201   		.uleb128 0x4109
 3680 0147 00       		.byte	0
 3681 0148 11       		.uleb128 0x11
 3682 0149 01       		.uleb128 0x1
 3683 014a 31       		.uleb128 0x31
 3684 014b 13       		.uleb128 0x13
 3685 014c 00       		.byte	0
 3686 014d 00       		.byte	0
 3687 014e 1B       		.uleb128 0x1b
 3688 014f 898201   		.uleb128 0x4109
 3689 0152 01       		.byte	0x1
 3690 0153 11       		.uleb128 0x11
 3691 0154 01       		.uleb128 0x1
 3692 0155 31       		.uleb128 0x31
 3693 0156 13       		.uleb128 0x13
 3694 0157 01       		.uleb128 0x1
 3695 0158 13       		.uleb128 0x13
 3696 0159 00       		.byte	0
 3697 015a 00       		.byte	0
 3698 015b 1C       		.uleb128 0x1c
 3699 015c 8A8201   		.uleb128 0x410a
 3700 015f 00       		.byte	0
 3701 0160 02       		.uleb128 0x2
 3702 0161 18       		.uleb128 0x18
 3703 0162 9142     		.uleb128 0x2111
 3704 0164 18       		.uleb128 0x18
 3705 0165 00       		.byte	0
 3706 0166 00       		.byte	0
 3707 0167 1D       		.uleb128 0x1d
 3708 0168 898201   		.uleb128 0x4109
 3709 016b 01       		.byte	0x1
 3710 016c 11       		.uleb128 0x11
 3711 016d 01       		.uleb128 0x1
 3712 016e 31       		.uleb128 0x31
 3713 016f 13       		.uleb128 0x13
 3714 0170 00       		.byte	0
 3715 0171 00       		.byte	0
 3716 0172 1E       		.uleb128 0x1e
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 120


 3717 0173 2E       		.uleb128 0x2e
 3718 0174 00       		.byte	0
 3719 0175 3F       		.uleb128 0x3f
 3720 0176 19       		.uleb128 0x19
 3721 0177 03       		.uleb128 0x3
 3722 0178 0E       		.uleb128 0xe
 3723 0179 3A       		.uleb128 0x3a
 3724 017a 0B       		.uleb128 0xb
 3725 017b 3B       		.uleb128 0x3b
 3726 017c 0B       		.uleb128 0xb
 3727 017d 27       		.uleb128 0x27
 3728 017e 19       		.uleb128 0x19
 3729 017f 49       		.uleb128 0x49
 3730 0180 13       		.uleb128 0x13
 3731 0181 11       		.uleb128 0x11
 3732 0182 01       		.uleb128 0x1
 3733 0183 12       		.uleb128 0x12
 3734 0184 06       		.uleb128 0x6
 3735 0185 40       		.uleb128 0x40
 3736 0186 18       		.uleb128 0x18
 3737 0187 9742     		.uleb128 0x2117
 3738 0189 19       		.uleb128 0x19
 3739 018a 00       		.byte	0
 3740 018b 00       		.byte	0
 3741 018c 1F       		.uleb128 0x1f
 3742 018d 2E       		.uleb128 0x2e
 3743 018e 01       		.byte	0x1
 3744 018f 3F       		.uleb128 0x3f
 3745 0190 19       		.uleb128 0x19
 3746 0191 03       		.uleb128 0x3
 3747 0192 0E       		.uleb128 0xe
 3748 0193 3A       		.uleb128 0x3a
 3749 0194 0B       		.uleb128 0xb
 3750 0195 3B       		.uleb128 0x3b
 3751 0196 05       		.uleb128 0x5
 3752 0197 27       		.uleb128 0x27
 3753 0198 19       		.uleb128 0x19
 3754 0199 49       		.uleb128 0x49
 3755 019a 13       		.uleb128 0x13
 3756 019b 11       		.uleb128 0x11
 3757 019c 01       		.uleb128 0x1
 3758 019d 12       		.uleb128 0x12
 3759 019e 06       		.uleb128 0x6
 3760 019f 40       		.uleb128 0x40
 3761 01a0 18       		.uleb128 0x18
 3762 01a1 9742     		.uleb128 0x2117
 3763 01a3 19       		.uleb128 0x19
 3764 01a4 01       		.uleb128 0x1
 3765 01a5 13       		.uleb128 0x13
 3766 01a6 00       		.byte	0
 3767 01a7 00       		.byte	0
 3768 01a8 20       		.uleb128 0x20
 3769 01a9 2E       		.uleb128 0x2e
 3770 01aa 01       		.byte	0x1
 3771 01ab 3F       		.uleb128 0x3f
 3772 01ac 19       		.uleb128 0x19
 3773 01ad 03       		.uleb128 0x3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 121


 3774 01ae 0E       		.uleb128 0xe
 3775 01af 3A       		.uleb128 0x3a
 3776 01b0 0B       		.uleb128 0xb
 3777 01b1 3B       		.uleb128 0x3b
 3778 01b2 05       		.uleb128 0x5
 3779 01b3 27       		.uleb128 0x27
 3780 01b4 19       		.uleb128 0x19
 3781 01b5 11       		.uleb128 0x11
 3782 01b6 01       		.uleb128 0x1
 3783 01b7 12       		.uleb128 0x12
 3784 01b8 06       		.uleb128 0x6
 3785 01b9 40       		.uleb128 0x40
 3786 01ba 18       		.uleb128 0x18
 3787 01bb 9742     		.uleb128 0x2117
 3788 01bd 19       		.uleb128 0x19
 3789 01be 01       		.uleb128 0x1
 3790 01bf 13       		.uleb128 0x13
 3791 01c0 00       		.byte	0
 3792 01c1 00       		.byte	0
 3793 01c2 21       		.uleb128 0x21
 3794 01c3 34       		.uleb128 0x34
 3795 01c4 00       		.byte	0
 3796 01c5 03       		.uleb128 0x3
 3797 01c6 0E       		.uleb128 0xe
 3798 01c7 3A       		.uleb128 0x3a
 3799 01c8 0B       		.uleb128 0xb
 3800 01c9 3B       		.uleb128 0x3b
 3801 01ca 05       		.uleb128 0x5
 3802 01cb 49       		.uleb128 0x49
 3803 01cc 13       		.uleb128 0x13
 3804 01cd 1C       		.uleb128 0x1c
 3805 01ce 0B       		.uleb128 0xb
 3806 01cf 00       		.byte	0
 3807 01d0 00       		.byte	0
 3808 01d1 22       		.uleb128 0x22
 3809 01d2 26       		.uleb128 0x26
 3810 01d3 00       		.byte	0
 3811 01d4 49       		.uleb128 0x49
 3812 01d5 13       		.uleb128 0x13
 3813 01d6 00       		.byte	0
 3814 01d7 00       		.byte	0
 3815 01d8 23       		.uleb128 0x23
 3816 01d9 34       		.uleb128 0x34
 3817 01da 00       		.byte	0
 3818 01db 03       		.uleb128 0x3
 3819 01dc 0E       		.uleb128 0xe
 3820 01dd 3A       		.uleb128 0x3a
 3821 01de 0B       		.uleb128 0xb
 3822 01df 3B       		.uleb128 0x3b
 3823 01e0 05       		.uleb128 0x5
 3824 01e1 49       		.uleb128 0x49
 3825 01e2 13       		.uleb128 0x13
 3826 01e3 00       		.byte	0
 3827 01e4 00       		.byte	0
 3828 01e5 24       		.uleb128 0x24
 3829 01e6 34       		.uleb128 0x34
 3830 01e7 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 122


 3831 01e8 03       		.uleb128 0x3
 3832 01e9 0E       		.uleb128 0xe
 3833 01ea 3A       		.uleb128 0x3a
 3834 01eb 0B       		.uleb128 0xb
 3835 01ec 3B       		.uleb128 0x3b
 3836 01ed 05       		.uleb128 0x5
 3837 01ee 49       		.uleb128 0x49
 3838 01ef 13       		.uleb128 0x13
 3839 01f0 3F       		.uleb128 0x3f
 3840 01f1 19       		.uleb128 0x19
 3841 01f2 3C       		.uleb128 0x3c
 3842 01f3 19       		.uleb128 0x19
 3843 01f4 00       		.byte	0
 3844 01f5 00       		.byte	0
 3845 01f6 25       		.uleb128 0x25
 3846 01f7 34       		.uleb128 0x34
 3847 01f8 00       		.byte	0
 3848 01f9 03       		.uleb128 0x3
 3849 01fa 0E       		.uleb128 0xe
 3850 01fb 3A       		.uleb128 0x3a
 3851 01fc 0B       		.uleb128 0xb
 3852 01fd 3B       		.uleb128 0x3b
 3853 01fe 0B       		.uleb128 0xb
 3854 01ff 49       		.uleb128 0x49
 3855 0200 13       		.uleb128 0x13
 3856 0201 3F       		.uleb128 0x3f
 3857 0202 19       		.uleb128 0x19
 3858 0203 02       		.uleb128 0x2
 3859 0204 18       		.uleb128 0x18
 3860 0205 00       		.byte	0
 3861 0206 00       		.byte	0
 3862 0207 26       		.uleb128 0x26
 3863 0208 2E       		.uleb128 0x2e
 3864 0209 00       		.byte	0
 3865 020a 3F       		.uleb128 0x3f
 3866 020b 19       		.uleb128 0x19
 3867 020c 3C       		.uleb128 0x3c
 3868 020d 19       		.uleb128 0x19
 3869 020e 6E       		.uleb128 0x6e
 3870 020f 0E       		.uleb128 0xe
 3871 0210 03       		.uleb128 0x3
 3872 0211 0E       		.uleb128 0xe
 3873 0212 3A       		.uleb128 0x3a
 3874 0213 0B       		.uleb128 0xb
 3875 0214 3B       		.uleb128 0x3b
 3876 0215 0B       		.uleb128 0xb
 3877 0216 00       		.byte	0
 3878 0217 00       		.byte	0
 3879 0218 00       		.byte	0
 3880              		.section	.debug_loc,"",%progbits
 3881              	.Ldebug_loc0:
 3882              	.LLST0:
 3883 0000 00000000 		.4byte	.LVL0
 3884 0004 14000000 		.4byte	.LVL3
 3885 0008 0100     		.2byte	0x1
 3886 000a 50       		.byte	0x50
 3887 000b 14000000 		.4byte	.LVL3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 123


 3888 000f 76000000 		.4byte	.LVL9
 3889 0013 0100     		.2byte	0x1
 3890 0015 54       		.byte	0x54
 3891 0016 76000000 		.4byte	.LVL9
 3892 001a 84000000 		.4byte	.LFE21
 3893 001e 0400     		.2byte	0x4
 3894 0020 F3       		.byte	0xf3
 3895 0021 01       		.uleb128 0x1
 3896 0022 50       		.byte	0x50
 3897 0023 9F       		.byte	0x9f
 3898 0024 00000000 		.4byte	0
 3899 0028 00000000 		.4byte	0
 3900              	.LLST1:
 3901 002c 00000000 		.4byte	.LVL0
 3902 0030 12000000 		.4byte	.LVL2
 3903 0034 0100     		.2byte	0x1
 3904 0036 51       		.byte	0x51
 3905 0037 12000000 		.4byte	.LVL2
 3906 003b 76000000 		.4byte	.LVL10
 3907 003f 0100     		.2byte	0x1
 3908 0041 55       		.byte	0x55
 3909 0042 76000000 		.4byte	.LVL10
 3910 0046 84000000 		.4byte	.LFE21
 3911 004a 0400     		.2byte	0x4
 3912 004c F3       		.byte	0xf3
 3913 004d 01       		.uleb128 0x1
 3914 004e 51       		.byte	0x51
 3915 004f 9F       		.byte	0x9f
 3916 0050 00000000 		.4byte	0
 3917 0054 00000000 		.4byte	0
 3918              	.LLST2:
 3919 0058 06000000 		.4byte	.LVL1
 3920 005c 76000000 		.4byte	.LVL8
 3921 0060 0200     		.2byte	0x2
 3922 0062 30       		.byte	0x30
 3923 0063 9F       		.byte	0x9f
 3924 0064 76000000 		.4byte	.LVL8
 3925 0068 84000000 		.4byte	.LFE21
 3926 006c 0100     		.2byte	0x1
 3927 006e 50       		.byte	0x50
 3928 006f 00000000 		.4byte	0
 3929 0073 00000000 		.4byte	0
 3930              	.LLST3:
 3931 0077 00000000 		.4byte	.LVL11
 3932 007b 20000000 		.4byte	.LVL15
 3933 007f 0100     		.2byte	0x1
 3934 0081 50       		.byte	0x50
 3935 0082 20000000 		.4byte	.LVL15
 3936 0086 23000000 		.4byte	.LVL16-1
 3937 008a 0100     		.2byte	0x1
 3938 008c 51       		.byte	0x51
 3939 008d 23000000 		.4byte	.LVL16-1
 3940 0091 38000000 		.4byte	.LVL21
 3941 0095 0400     		.2byte	0x4
 3942 0097 F3       		.byte	0xf3
 3943 0098 01       		.uleb128 0x1
 3944 0099 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 124


 3945 009a 9F       		.byte	0x9f
 3946 009b 38000000 		.4byte	.LVL21
 3947 009f 3E000000 		.4byte	.LVL24
 3948 00a3 0100     		.2byte	0x1
 3949 00a5 50       		.byte	0x50
 3950 00a6 3E000000 		.4byte	.LVL24
 3951 00aa 42000000 		.4byte	.LFE22
 3952 00ae 0400     		.2byte	0x4
 3953 00b0 F3       		.byte	0xf3
 3954 00b1 01       		.uleb128 0x1
 3955 00b2 50       		.byte	0x50
 3956 00b3 9F       		.byte	0x9f
 3957 00b4 00000000 		.4byte	0
 3958 00b8 00000000 		.4byte	0
 3959              	.LLST4:
 3960 00bc 00000000 		.4byte	.LVL11
 3961 00c0 1E000000 		.4byte	.LVL14
 3962 00c4 0100     		.2byte	0x1
 3963 00c6 51       		.byte	0x51
 3964 00c7 1E000000 		.4byte	.LVL14
 3965 00cb 38000000 		.4byte	.LVL21
 3966 00cf 0400     		.2byte	0x4
 3967 00d1 F3       		.byte	0xf3
 3968 00d2 01       		.uleb128 0x1
 3969 00d3 51       		.byte	0x51
 3970 00d4 9F       		.byte	0x9f
 3971 00d5 38000000 		.4byte	.LVL21
 3972 00d9 3E000000 		.4byte	.LVL24
 3973 00dd 0100     		.2byte	0x1
 3974 00df 51       		.byte	0x51
 3975 00e0 3E000000 		.4byte	.LVL24
 3976 00e4 42000000 		.4byte	.LFE22
 3977 00e8 0400     		.2byte	0x4
 3978 00ea F3       		.byte	0xf3
 3979 00eb 01       		.uleb128 0x1
 3980 00ec 51       		.byte	0x51
 3981 00ed 9F       		.byte	0x9f
 3982 00ee 00000000 		.4byte	0
 3983 00f2 00000000 		.4byte	0
 3984              	.LLST5:
 3985 00f6 24000000 		.4byte	.LVL16
 3986 00fa 28000000 		.4byte	.LVL17
 3987 00fe 0200     		.2byte	0x2
 3988 0100 30       		.byte	0x30
 3989 0101 9F       		.byte	0x9f
 3990 0102 28000000 		.4byte	.LVL17
 3991 0106 38000000 		.4byte	.LVL21
 3992 010a 0100     		.2byte	0x1
 3993 010c 53       		.byte	0x53
 3994 010d 3E000000 		.4byte	.LVL24
 3995 0111 42000000 		.4byte	.LFE22
 3996 0115 0100     		.2byte	0x1
 3997 0117 53       		.byte	0x53
 3998 0118 00000000 		.4byte	0
 3999 011c 00000000 		.4byte	0
 4000              	.LLST6:
 4001 0120 10000000 		.4byte	.LVL12
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 125


 4002 0124 1C000000 		.4byte	.LVL13
 4003 0128 0100     		.2byte	0x1
 4004 012a 53       		.byte	0x53
 4005 012b 38000000 		.4byte	.LVL21
 4006 012f 3A000000 		.4byte	.LVL22
 4007 0133 0100     		.2byte	0x1
 4008 0135 53       		.byte	0x53
 4009 0136 3C000000 		.4byte	.LVL23
 4010 013a 3E000000 		.4byte	.LVL24
 4011 013e 0100     		.2byte	0x1
 4012 0140 53       		.byte	0x53
 4013 0141 00000000 		.4byte	0
 4014 0145 00000000 		.4byte	0
 4015              	.LLST7:
 4016 0149 24000000 		.4byte	.LVL16
 4017 014d 38000000 		.4byte	.LVL21
 4018 0151 0100     		.2byte	0x1
 4019 0153 50       		.byte	0x50
 4020 0154 00000000 		.4byte	0
 4021 0158 00000000 		.4byte	0
 4022              	.LLST8:
 4023 015c 06000000 		.4byte	.LVL25
 4024 0160 0A000000 		.4byte	.LVL26
 4025 0164 0100     		.2byte	0x1
 4026 0166 51       		.byte	0x51
 4027 0167 0A000000 		.4byte	.LVL26
 4028 016b 0E000000 		.4byte	.LVL27
 4029 016f 0100     		.2byte	0x1
 4030 0171 52       		.byte	0x52
 4031 0172 0E000000 		.4byte	.LVL27
 4032 0176 12000000 		.4byte	.LVL28
 4033 017a 0100     		.2byte	0x1
 4034 017c 51       		.byte	0x51
 4035 017d 12000000 		.4byte	.LVL28
 4036 0181 17000000 		.4byte	.LVL29-1
 4037 0185 0100     		.2byte	0x1
 4038 0187 52       		.byte	0x52
 4039 0188 00000000 		.4byte	0
 4040 018c 00000000 		.4byte	0
 4041              	.LLST9:
 4042 0190 00000000 		.4byte	.LVL30
 4043 0194 09000000 		.4byte	.LVL32-1
 4044 0198 0100     		.2byte	0x1
 4045 019a 50       		.byte	0x50
 4046 019b 09000000 		.4byte	.LVL32-1
 4047 019f 26000000 		.4byte	.LFE20
 4048 01a3 0400     		.2byte	0x4
 4049 01a5 F3       		.byte	0xf3
 4050 01a6 01       		.uleb128 0x1
 4051 01a7 50       		.byte	0x50
 4052 01a8 9F       		.byte	0x9f
 4053 01a9 00000000 		.4byte	0
 4054 01ad 00000000 		.4byte	0
 4055              	.LLST10:
 4056 01b1 00000000 		.4byte	.LVL30
 4057 01b5 09000000 		.4byte	.LVL32-1
 4058 01b9 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 126


 4059 01bb 51       		.byte	0x51
 4060 01bc 09000000 		.4byte	.LVL32-1
 4061 01c0 24000000 		.4byte	.LVL39
 4062 01c4 0100     		.2byte	0x1
 4063 01c6 55       		.byte	0x55
 4064 01c7 24000000 		.4byte	.LVL39
 4065 01cb 26000000 		.4byte	.LFE20
 4066 01cf 0400     		.2byte	0x4
 4067 01d1 F3       		.byte	0xf3
 4068 01d2 01       		.uleb128 0x1
 4069 01d3 51       		.byte	0x51
 4070 01d4 9F       		.byte	0x9f
 4071 01d5 00000000 		.4byte	0
 4072 01d9 00000000 		.4byte	0
 4073              	.LLST11:
 4074 01dd 14000000 		.4byte	.LVL35
 4075 01e1 18000000 		.4byte	.LVL36
 4076 01e5 0100     		.2byte	0x1
 4077 01e7 50       		.byte	0x50
 4078 01e8 00000000 		.4byte	0
 4079 01ec 00000000 		.4byte	0
 4080              	.LLST12:
 4081 01f0 1C000000 		.4byte	.LVL37
 4082 01f4 1E000000 		.4byte	.LVL38
 4083 01f8 0100     		.2byte	0x1
 4084 01fa 50       		.byte	0x50
 4085 01fb 00000000 		.4byte	0
 4086 01ff 00000000 		.4byte	0
 4087              	.LLST13:
 4088 0203 06000000 		.4byte	.LVL31
 4089 0207 14000000 		.4byte	.LVL35
 4090 020b 0100     		.2byte	0x1
 4091 020d 54       		.byte	0x54
 4092 020e 00000000 		.4byte	0
 4093 0212 00000000 		.4byte	0
 4094              	.LLST14:
 4095 0216 0C000000 		.4byte	.LVL33
 4096 021a 11000000 		.4byte	.LVL34-1
 4097 021e 0100     		.2byte	0x1
 4098 0220 50       		.byte	0x50
 4099 0221 11000000 		.4byte	.LVL34-1
 4100 0225 24000000 		.4byte	.LVL40
 4101 0229 0100     		.2byte	0x1
 4102 022b 56       		.byte	0x56
 4103 022c 00000000 		.4byte	0
 4104 0230 00000000 		.4byte	0
 4105              	.LLST15:
 4106 0234 00000000 		.4byte	.LVL41
 4107 0238 37000000 		.4byte	.LVL43-1
 4108 023c 0100     		.2byte	0x1
 4109 023e 50       		.byte	0x50
 4110 023f 37000000 		.4byte	.LVL43-1
 4111 0243 40000000 		.4byte	.LFE2
 4112 0247 0400     		.2byte	0x4
 4113 0249 F3       		.byte	0xf3
 4114 024a 01       		.uleb128 0x1
 4115 024b 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 127


 4116 024c 9F       		.byte	0x9f
 4117 024d 00000000 		.4byte	0
 4118 0251 00000000 		.4byte	0
 4119              	.LLST16:
 4120 0255 30000000 		.4byte	.LVL42
 4121 0259 3A000000 		.4byte	.LVL44
 4122 025d 0100     		.2byte	0x1
 4123 025f 54       		.byte	0x54
 4124 0260 3A000000 		.4byte	.LVL44
 4125 0264 40000000 		.4byte	.LFE2
 4126 0268 0100     		.2byte	0x1
 4127 026a 50       		.byte	0x50
 4128 026b 00000000 		.4byte	0
 4129 026f 00000000 		.4byte	0
 4130              	.LLST17:
 4131 0273 02000000 		.4byte	.LVL45
 4132 0277 22000000 		.4byte	.LVL47
 4133 027b 0200     		.2byte	0x2
 4134 027d 30       		.byte	0x30
 4135 027e 9F       		.byte	0x9f
 4136 027f 22000000 		.4byte	.LVL47
 4137 0283 2C000000 		.4byte	.LFE3
 4138 0287 0100     		.2byte	0x1
 4139 0289 50       		.byte	0x50
 4140 028a 00000000 		.4byte	0
 4141 028e 00000000 		.4byte	0
 4142              	.LLST18:
 4143 0292 02000000 		.4byte	.LVL48
 4144 0296 12000000 		.4byte	.LVL49
 4145 029a 0300     		.2byte	0x3
 4146 029c 09       		.byte	0x9
 4147 029d FF       		.byte	0xff
 4148 029e 9F       		.byte	0x9f
 4149 029f 12000000 		.4byte	.LVL49
 4150 02a3 14000000 		.4byte	.LVL50
 4151 02a7 0100     		.2byte	0x1
 4152 02a9 50       		.byte	0x50
 4153 02aa 18000000 		.4byte	.LVL51
 4154 02ae 31000000 		.4byte	.LVL52-1
 4155 02b2 0100     		.2byte	0x1
 4156 02b4 50       		.byte	0x50
 4157 02b5 32000000 		.4byte	.LVL52
 4158 02b9 3C000000 		.4byte	.LVL54
 4159 02bd 0100     		.2byte	0x1
 4160 02bf 50       		.byte	0x50
 4161 02c0 3C000000 		.4byte	.LVL54
 4162 02c4 3E000000 		.4byte	.LVL55
 4163 02c8 0300     		.2byte	0x3
 4164 02ca 09       		.byte	0x9
 4165 02cb FF       		.byte	0xff
 4166 02cc 9F       		.byte	0x9f
 4167 02cd 3E000000 		.4byte	.LVL55
 4168 02d1 48000000 		.4byte	.LFE4
 4169 02d5 0100     		.2byte	0x1
 4170 02d7 50       		.byte	0x50
 4171 02d8 00000000 		.4byte	0
 4172 02dc 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 128


 4173              	.LLST19:
 4174 02e0 12000000 		.4byte	.LVL49
 4175 02e4 3C000000 		.4byte	.LVL54
 4176 02e8 0100     		.2byte	0x1
 4177 02ea 54       		.byte	0x54
 4178 02eb 00000000 		.4byte	0
 4179 02ef 00000000 		.4byte	0
 4180              	.LLST20:
 4181 02f3 00000000 		.4byte	.LVL56
 4182 02f7 06000000 		.4byte	.LVL57
 4183 02fb 0100     		.2byte	0x1
 4184 02fd 50       		.byte	0x50
 4185 02fe 06000000 		.4byte	.LVL57
 4186 0302 E4000000 		.4byte	.LFE6
 4187 0306 0400     		.2byte	0x4
 4188 0308 F3       		.byte	0xf3
 4189 0309 01       		.uleb128 0x1
 4190 030a 50       		.byte	0x50
 4191 030b 9F       		.byte	0x9f
 4192 030c 00000000 		.4byte	0
 4193 0310 00000000 		.4byte	0
 4194              	.LLST21:
 4195 0314 00000000 		.4byte	.LVL56
 4196 0318 0E000000 		.4byte	.LVL58
 4197 031c 0100     		.2byte	0x1
 4198 031e 51       		.byte	0x51
 4199 031f 0E000000 		.4byte	.LVL58
 4200 0323 E4000000 		.4byte	.LFE6
 4201 0327 0400     		.2byte	0x4
 4202 0329 F3       		.byte	0xf3
 4203 032a 01       		.uleb128 0x1
 4204 032b 51       		.byte	0x51
 4205 032c 9F       		.byte	0x9f
 4206 032d 00000000 		.4byte	0
 4207 0331 00000000 		.4byte	0
 4208              	.LLST22:
 4209 0335 00000000 		.4byte	.LVL56
 4210 0339 16000000 		.4byte	.LVL60
 4211 033d 0100     		.2byte	0x1
 4212 033f 52       		.byte	0x52
 4213 0340 16000000 		.4byte	.LVL60
 4214 0344 DC000000 		.4byte	.LVL75
 4215 0348 0100     		.2byte	0x1
 4216 034a 56       		.byte	0x56
 4217 034b DC000000 		.4byte	.LVL75
 4218 034f E4000000 		.4byte	.LFE6
 4219 0353 0400     		.2byte	0x4
 4220 0355 F3       		.byte	0xf3
 4221 0356 01       		.uleb128 0x1
 4222 0357 52       		.byte	0x52
 4223 0358 9F       		.byte	0x9f
 4224 0359 00000000 		.4byte	0
 4225 035d 00000000 		.4byte	0
 4226              	.LLST23:
 4227 0361 12000000 		.4byte	.LVL59
 4228 0365 16000000 		.4byte	.LVL60
 4229 0369 0200     		.2byte	0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 129


 4230 036b 30       		.byte	0x30
 4231 036c 9F       		.byte	0x9f
 4232 036d 16000000 		.4byte	.LVL60
 4233 0371 DC000000 		.4byte	.LVL74
 4234 0375 0100     		.2byte	0x1
 4235 0377 55       		.byte	0x55
 4236 0378 00000000 		.4byte	0
 4237 037c 00000000 		.4byte	0
 4238              	.LLST24:
 4239 0380 1A000000 		.4byte	.LVL61
 4240 0384 39000000 		.4byte	.LVL62-1
 4241 0388 0100     		.2byte	0x1
 4242 038a 50       		.byte	0x50
 4243 038b 50000000 		.4byte	.LVL63
 4244 038f 6F000000 		.4byte	.LVL64-1
 4245 0393 0100     		.2byte	0x1
 4246 0395 50       		.byte	0x50
 4247 0396 76000000 		.4byte	.LVL65
 4248 039a 87000000 		.4byte	.LVL66-1
 4249 039e 0100     		.2byte	0x1
 4250 03a0 50       		.byte	0x50
 4251 03a1 8E000000 		.4byte	.LVL67
 4252 03a5 AD000000 		.4byte	.LVL68-1
 4253 03a9 0100     		.2byte	0x1
 4254 03ab 50       		.byte	0x50
 4255 03ac B4000000 		.4byte	.LVL69
 4256 03b0 D3000000 		.4byte	.LVL70-1
 4257 03b4 0100     		.2byte	0x1
 4258 03b6 50       		.byte	0x50
 4259 03b7 00000000 		.4byte	0
 4260 03bb 00000000 		.4byte	0
 4261              	.LLST25:
 4262 03bf 12000000 		.4byte	.LVL59
 4263 03c3 DC000000 		.4byte	.LVL73
 4264 03c7 0100     		.2byte	0x1
 4265 03c9 54       		.byte	0x54
 4266 03ca 00000000 		.4byte	0
 4267 03ce 00000000 		.4byte	0
 4268              	.LLST26:
 4269 03d2 00000000 		.4byte	.LVL76
 4270 03d6 17000000 		.4byte	.LVL77-1
 4271 03da 0100     		.2byte	0x1
 4272 03dc 50       		.byte	0x50
 4273 03dd 17000000 		.4byte	.LVL77-1
 4274 03e1 40000000 		.4byte	.LFE8
 4275 03e5 0400     		.2byte	0x4
 4276 03e7 F3       		.byte	0xf3
 4277 03e8 01       		.uleb128 0x1
 4278 03e9 50       		.byte	0x50
 4279 03ea 9F       		.byte	0x9f
 4280 03eb 00000000 		.4byte	0
 4281 03ef 00000000 		.4byte	0
 4282              	.LLST27:
 4283 03f3 08000000 		.4byte	.LVL80
 4284 03f7 40000000 		.4byte	.LFE9
 4285 03fb 0100     		.2byte	0x1
 4286 03fd 53       		.byte	0x53
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 130


 4287 03fe 00000000 		.4byte	0
 4288 0402 00000000 		.4byte	0
 4289              	.LLST28:
 4290 0406 02000000 		.4byte	.LVL79
 4291 040a 08000000 		.4byte	.LVL80
 4292 040e 0200     		.2byte	0x2
 4293 0410 30       		.byte	0x30
 4294 0411 9F       		.byte	0x9f
 4295 0412 08000000 		.4byte	.LVL80
 4296 0416 40000000 		.4byte	.LFE9
 4297 041a 0100     		.2byte	0x1
 4298 041c 50       		.byte	0x50
 4299 041d 00000000 		.4byte	0
 4300 0421 00000000 		.4byte	0
 4301              	.LLST29:
 4302 0425 0C000000 		.4byte	.LVL81
 4303 0429 1E000000 		.4byte	.LVL84
 4304 042d 0100     		.2byte	0x1
 4305 042f 52       		.byte	0x52
 4306 0430 20000000 		.4byte	.LVL85
 4307 0434 26000000 		.4byte	.LVL86
 4308 0438 0100     		.2byte	0x1
 4309 043a 51       		.byte	0x51
 4310 043b 26000000 		.4byte	.LVL86
 4311 043f 36000000 		.4byte	.LVL90
 4312 0443 0100     		.2byte	0x1
 4313 0445 52       		.byte	0x52
 4314 0446 00000000 		.4byte	0
 4315 044a 00000000 		.4byte	0
 4316              	.LLST30:
 4317 044e 16000000 		.4byte	.LVL92
 4318 0452 29000000 		.4byte	.LVL93-1
 4319 0456 0100     		.2byte	0x1
 4320 0458 50       		.byte	0x50
 4321 0459 29000000 		.4byte	.LVL93-1
 4322 045d 2C000000 		.4byte	.LVL94
 4323 0461 0100     		.2byte	0x1
 4324 0463 54       		.byte	0x54
 4325 0464 2C000000 		.4byte	.LVL94
 4326 0468 54000000 		.4byte	.LVL95
 4327 046c 0100     		.2byte	0x1
 4328 046e 50       		.byte	0x50
 4329 046f 54000000 		.4byte	.LVL95
 4330 0473 58000000 		.4byte	.LVL96
 4331 0477 0200     		.2byte	0x2
 4332 0479 30       		.byte	0x30
 4333 047a 9F       		.byte	0x9f
 4334 047b 58000000 		.4byte	.LVL96
 4335 047f 6A000000 		.4byte	.LVL97
 4336 0483 0100     		.2byte	0x1
 4337 0485 50       		.byte	0x50
 4338 0486 6A000000 		.4byte	.LVL97
 4339 048a 6E000000 		.4byte	.LVL98
 4340 048e 0100     		.2byte	0x1
 4341 0490 54       		.byte	0x54
 4342 0491 00000000 		.4byte	0
 4343 0495 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 131


 4344              	.LLST31:
 4345 0499 00000000 		.4byte	.LVL99
 4346 049d 05000000 		.4byte	.LVL100-1
 4347 04a1 0100     		.2byte	0x1
 4348 04a3 50       		.byte	0x50
 4349 04a4 05000000 		.4byte	.LVL100-1
 4350 04a8 08000000 		.4byte	.LFE11
 4351 04ac 0400     		.2byte	0x4
 4352 04ae F3       		.byte	0xf3
 4353 04af 01       		.uleb128 0x1
 4354 04b0 50       		.byte	0x50
 4355 04b1 9F       		.byte	0x9f
 4356 04b2 00000000 		.4byte	0
 4357 04b6 00000000 		.4byte	0
 4358              	.LLST32:
 4359 04ba 00000000 		.4byte	.LVL101
 4360 04be 08000000 		.4byte	.LVL102
 4361 04c2 0100     		.2byte	0x1
 4362 04c4 50       		.byte	0x50
 4363 04c5 08000000 		.4byte	.LVL102
 4364 04c9 0A000000 		.4byte	.LVL103
 4365 04cd 0300     		.2byte	0x3
 4366 04cf 70       		.byte	0x70
 4367 04d0 01       		.sleb128 1
 4368 04d1 9F       		.byte	0x9f
 4369 04d2 0A000000 		.4byte	.LVL103
 4370 04d6 30000000 		.4byte	.LFE12
 4371 04da 0400     		.2byte	0x4
 4372 04dc F3       		.byte	0xf3
 4373 04dd 01       		.uleb128 0x1
 4374 04de 50       		.byte	0x50
 4375 04df 9F       		.byte	0x9f
 4376 04e0 00000000 		.4byte	0
 4377 04e4 00000000 		.4byte	0
 4378              	.LLST33:
 4379 04e8 00000000 		.4byte	.LVL104
 4380 04ec 0A000000 		.4byte	.LVL108
 4381 04f0 0100     		.2byte	0x1
 4382 04f2 50       		.byte	0x50
 4383 04f3 0A000000 		.4byte	.LVL108
 4384 04f7 0C000000 		.4byte	.LVL109
 4385 04fb 0300     		.2byte	0x3
 4386 04fd 70       		.byte	0x70
 4387 04fe 01       		.sleb128 1
 4388 04ff 9F       		.byte	0x9f
 4389 0500 0C000000 		.4byte	.LVL109
 4390 0504 14000000 		.4byte	.LFE13
 4391 0508 0400     		.2byte	0x4
 4392 050a F3       		.byte	0xf3
 4393 050b 01       		.uleb128 0x1
 4394 050c 50       		.byte	0x50
 4395 050d 9F       		.byte	0x9f
 4396 050e 00000000 		.4byte	0
 4397 0512 00000000 		.4byte	0
 4398              	.LLST34:
 4399 0516 04000000 		.4byte	.LVL105
 4400 051a 06000000 		.4byte	.LVL106
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 132


 4401 051e 0100     		.2byte	0x1
 4402 0520 53       		.byte	0x53
 4403 0521 08000000 		.4byte	.LVL107
 4404 0525 0C000000 		.4byte	.LVL109
 4405 0529 0100     		.2byte	0x1
 4406 052b 53       		.byte	0x53
 4407 052c 0C000000 		.4byte	.LVL109
 4408 0530 14000000 		.4byte	.LFE13
 4409 0534 0100     		.2byte	0x1
 4410 0536 50       		.byte	0x50
 4411 0537 00000000 		.4byte	0
 4412 053b 00000000 		.4byte	0
 4413              	.LLST35:
 4414 053f 00000000 		.4byte	.LVL110
 4415 0543 06000000 		.4byte	.LVL111
 4416 0547 0100     		.2byte	0x1
 4417 0549 50       		.byte	0x50
 4418 054a 06000000 		.4byte	.LVL111
 4419 054e 10000000 		.4byte	.LVL114
 4420 0552 0100     		.2byte	0x1
 4421 0554 54       		.byte	0x54
 4422 0555 10000000 		.4byte	.LVL114
 4423 0559 12000000 		.4byte	.LFE14
 4424 055d 0400     		.2byte	0x4
 4425 055f F3       		.byte	0xf3
 4426 0560 01       		.uleb128 0x1
 4427 0561 50       		.byte	0x50
 4428 0562 9F       		.byte	0x9f
 4429 0563 00000000 		.4byte	0
 4430 0567 00000000 		.4byte	0
 4431              	.LLST36:
 4432 056b 00000000 		.4byte	.LVL110
 4433 056f 09000000 		.4byte	.LVL112-1
 4434 0573 0100     		.2byte	0x1
 4435 0575 51       		.byte	0x51
 4436 0576 09000000 		.4byte	.LVL112-1
 4437 057a 12000000 		.4byte	.LFE14
 4438 057e 0400     		.2byte	0x4
 4439 0580 F3       		.byte	0xf3
 4440 0581 01       		.uleb128 0x1
 4441 0582 51       		.byte	0x51
 4442 0583 9F       		.byte	0x9f
 4443 0584 00000000 		.4byte	0
 4444 0588 00000000 		.4byte	0
 4445              	.LLST37:
 4446 058c 00000000 		.4byte	.LVL115
 4447 0590 15000000 		.4byte	.LVL118-1
 4448 0594 0100     		.2byte	0x1
 4449 0596 50       		.byte	0x50
 4450 0597 15000000 		.4byte	.LVL118-1
 4451 059b 1A000000 		.4byte	.LFE15
 4452 059f 0400     		.2byte	0x4
 4453 05a1 F3       		.byte	0xf3
 4454 05a2 01       		.uleb128 0x1
 4455 05a3 50       		.byte	0x50
 4456 05a4 9F       		.byte	0x9f
 4457 05a5 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 133


 4458 05a9 00000000 		.4byte	0
 4459              	.LLST38:
 4460 05ad 02000000 		.4byte	.LVL116
 4461 05b1 0C000000 		.4byte	.LVL117
 4462 05b5 0200     		.2byte	0x2
 4463 05b7 30       		.byte	0x30
 4464 05b8 9F       		.byte	0x9f
 4465 05b9 0C000000 		.4byte	.LVL117
 4466 05bd 18000000 		.4byte	.LVL119
 4467 05c1 0100     		.2byte	0x1
 4468 05c3 54       		.byte	0x54
 4469 05c4 18000000 		.4byte	.LVL119
 4470 05c8 1A000000 		.4byte	.LFE15
 4471 05cc 0100     		.2byte	0x1
 4472 05ce 50       		.byte	0x50
 4473 05cf 00000000 		.4byte	0
 4474 05d3 00000000 		.4byte	0
 4475              	.LLST39:
 4476 05d7 02000000 		.4byte	.LVL120
 4477 05db 08000000 		.4byte	.LVL121
 4478 05df 0200     		.2byte	0x2
 4479 05e1 30       		.byte	0x30
 4480 05e2 9F       		.byte	0x9f
 4481 05e3 08000000 		.4byte	.LVL121
 4482 05e7 18000000 		.4byte	.LVL126
 4483 05eb 0100     		.2byte	0x1
 4484 05ed 55       		.byte	0x55
 4485 05ee 18000000 		.4byte	.LVL126
 4486 05f2 1A000000 		.4byte	.LFE16
 4487 05f6 0100     		.2byte	0x1
 4488 05f8 50       		.byte	0x50
 4489 05f9 00000000 		.4byte	0
 4490 05fd 00000000 		.4byte	0
 4491              	.LLST40:
 4492 0601 02000000 		.4byte	.LVL120
 4493 0605 08000000 		.4byte	.LVL121
 4494 0609 0200     		.2byte	0x2
 4495 060b 30       		.byte	0x30
 4496 060c 9F       		.byte	0x9f
 4497 060d 08000000 		.4byte	.LVL121
 4498 0611 18000000 		.4byte	.LVL125
 4499 0615 0100     		.2byte	0x1
 4500 0617 54       		.byte	0x54
 4501 0618 00000000 		.4byte	0
 4502 061c 00000000 		.4byte	0
 4503              	.LLST41:
 4504 0620 00000000 		.4byte	.LVL127
 4505 0624 04000000 		.4byte	.LVL128
 4506 0628 0100     		.2byte	0x1
 4507 062a 50       		.byte	0x50
 4508 062b 04000000 		.4byte	.LVL128
 4509 062f 14000000 		.4byte	.LFE17
 4510 0633 0400     		.2byte	0x4
 4511 0635 F3       		.byte	0xf3
 4512 0636 01       		.uleb128 0x1
 4513 0637 50       		.byte	0x50
 4514 0638 9F       		.byte	0x9f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 134


 4515 0639 00000000 		.4byte	0
 4516 063d 00000000 		.4byte	0
 4517              	.LLST42:
 4518 0641 00000000 		.4byte	.LVL129
 4519 0645 22000000 		.4byte	.LVL137
 4520 0649 0100     		.2byte	0x1
 4521 064b 50       		.byte	0x50
 4522 064c 22000000 		.4byte	.LVL137
 4523 0650 30000000 		.4byte	.LFE18
 4524 0654 0400     		.2byte	0x4
 4525 0656 F3       		.byte	0xf3
 4526 0657 01       		.uleb128 0x1
 4527 0658 50       		.byte	0x50
 4528 0659 9F       		.byte	0x9f
 4529 065a 00000000 		.4byte	0
 4530 065e 00000000 		.4byte	0
 4531              	.LLST43:
 4532 0662 10000000 		.4byte	.LVL134
 4533 0666 25000000 		.4byte	.LVL138-1
 4534 066a 0100     		.2byte	0x1
 4535 066c 53       		.byte	0x53
 4536 066d 00000000 		.4byte	0
 4537 0671 00000000 		.4byte	0
 4538              	.LLST44:
 4539 0675 02000000 		.4byte	.LVL130
 4540 0679 10000000 		.4byte	.LVL134
 4541 067d 0200     		.2byte	0x2
 4542 067f 30       		.byte	0x30
 4543 0680 9F       		.byte	0x9f
 4544 0681 10000000 		.4byte	.LVL134
 4545 0685 30000000 		.4byte	.LFE18
 4546 0689 0200     		.2byte	0x2
 4547 068b 31       		.byte	0x31
 4548 068c 9F       		.byte	0x9f
 4549 068d 00000000 		.4byte	0
 4550 0691 00000000 		.4byte	0
 4551              	.LLST45:
 4552 0695 02000000 		.4byte	.LVL130
 4553 0699 10000000 		.4byte	.LVL134
 4554 069d 0200     		.2byte	0x2
 4555 069f 30       		.byte	0x30
 4556 06a0 9F       		.byte	0x9f
 4557 06a1 10000000 		.4byte	.LVL134
 4558 06a5 30000000 		.4byte	.LFE18
 4559 06a9 0200     		.2byte	0x2
 4560 06ab 32       		.byte	0x32
 4561 06ac 9F       		.byte	0x9f
 4562 06ad 00000000 		.4byte	0
 4563 06b1 00000000 		.4byte	0
 4564              	.LLST46:
 4565 06b5 0E000000 		.4byte	.LVL133
 4566 06b9 10000000 		.4byte	.LVL134
 4567 06bd 0100     		.2byte	0x1
 4568 06bf 53       		.byte	0x53
 4569 06c0 00000000 		.4byte	0
 4570 06c4 00000000 		.4byte	0
 4571              	.LLST47:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 135


 4572 06c8 02000000 		.4byte	.LVL139
 4573 06cc 06000000 		.4byte	.LVL140
 4574 06d0 0200     		.2byte	0x2
 4575 06d2 30       		.byte	0x30
 4576 06d3 9F       		.byte	0x9f
 4577 06d4 06000000 		.4byte	.LVL140
 4578 06d8 1A000000 		.4byte	.LVL144
 4579 06dc 0100     		.2byte	0x1
 4580 06de 54       		.byte	0x54
 4581 06df 00000000 		.4byte	0
 4582 06e3 00000000 		.4byte	0
 4583              	.LLST48:
 4584 06e7 0E000000 		.4byte	.LVL141
 4585 06eb 13000000 		.4byte	.LVL142-1
 4586 06ef 0100     		.2byte	0x1
 4587 06f1 51       		.byte	0x51
 4588 06f2 00000000 		.4byte	0
 4589 06f6 00000000 		.4byte	0
 4590              	.LLST49:
 4591 06fa 08000000 		.4byte	.LVL145
 4592 06fe 18000000 		.4byte	.LVL146
 4593 0702 0100     		.2byte	0x1
 4594 0704 53       		.byte	0x53
 4595 0705 18000000 		.4byte	.LVL146
 4596 0709 1C000000 		.4byte	.LVL147
 4597 070d 0500     		.2byte	0x5
 4598 070f 03       		.byte	0x3
 4599 0710 00000000 		.4byte	CapSense_1_immunity
 4600 0714 1C000000 		.4byte	.LVL147
 4601 0718 2A000000 		.4byte	.LVL148
 4602 071c 0100     		.2byte	0x1
 4603 071e 53       		.byte	0x53
 4604 071f 2A000000 		.4byte	.LVL148
 4605 0723 2E000000 		.4byte	.LVL149
 4606 0727 0500     		.2byte	0x5
 4607 0729 03       		.byte	0x3
 4608 072a 00000000 		.4byte	CapSense_1_immunity
 4609 072e 2E000000 		.4byte	.LVL149
 4610 0732 38000000 		.4byte	.LVL150
 4611 0736 0100     		.2byte	0x1
 4612 0738 53       		.byte	0x53
 4613 0739 38000000 		.4byte	.LVL150
 4614 073d 3D000000 		.4byte	.LVL152-1
 4615 0741 0500     		.2byte	0x5
 4616 0743 03       		.byte	0x3
 4617 0744 00000000 		.4byte	CapSense_1_immunity
 4618 0748 00000000 		.4byte	0
 4619 074c 00000000 		.4byte	0
 4620              	.LLST50:
 4621 0750 0A000000 		.4byte	.LVL156
 4622 0754 0E000000 		.4byte	.LVL157
 4623 0758 0100     		.2byte	0x1
 4624 075a 51       		.byte	0x51
 4625 075b 0E000000 		.4byte	.LVL157
 4626 075f 13000000 		.4byte	.LVL158-1
 4627 0763 0100     		.2byte	0x1
 4628 0765 53       		.byte	0x53
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 136


 4629 0766 1C000000 		.4byte	.LVL160
 4630 076a 25000000 		.4byte	.LVL162-1
 4631 076e 0100     		.2byte	0x1
 4632 0770 53       		.byte	0x53
 4633 0771 2E000000 		.4byte	.LVL164
 4634 0775 3D000000 		.4byte	.LVL167-1
 4635 0779 0100     		.2byte	0x1
 4636 077b 53       		.byte	0x53
 4637 077c 4A000000 		.4byte	.LVL170
 4638 0780 4C000000 		.4byte	.LVL171
 4639 0784 0100     		.2byte	0x1
 4640 0786 53       		.byte	0x53
 4641 0787 4C000000 		.4byte	.LVL171
 4642 078b 52000000 		.4byte	.LVL173
 4643 078f 0100     		.2byte	0x1
 4644 0791 55       		.byte	0x55
 4645 0792 00000000 		.4byte	0
 4646 0796 00000000 		.4byte	0
 4647              	.LLST51:
 4648 079a 06000000 		.4byte	.LVL155
 4649 079e 13000000 		.4byte	.LVL158-1
 4650 07a2 0100     		.2byte	0x1
 4651 07a4 50       		.byte	0x50
 4652 07a5 18000000 		.4byte	.LVL159
 4653 07a9 25000000 		.4byte	.LVL162-1
 4654 07ad 0100     		.2byte	0x1
 4655 07af 50       		.byte	0x50
 4656 07b0 2A000000 		.4byte	.LVL163
 4657 07b4 3D000000 		.4byte	.LVL167-1
 4658 07b8 0100     		.2byte	0x1
 4659 07ba 50       		.byte	0x50
 4660 07bb 48000000 		.4byte	.LVL169
 4661 07bf 51000000 		.4byte	.LVL172-1
 4662 07c3 0100     		.2byte	0x1
 4663 07c5 50       		.byte	0x50
 4664 07c6 00000000 		.4byte	0
 4665 07ca 00000000 		.4byte	0
 4666              		.section	.debug_aranges,"",%progbits
 4667 0000 CC000000 		.4byte	0xcc
 4668 0004 0200     		.2byte	0x2
 4669 0006 00000000 		.4byte	.Ldebug_info0
 4670 000a 04       		.byte	0x4
 4671 000b 00       		.byte	0
 4672 000c 0000     		.2byte	0
 4673 000e 0000     		.2byte	0
 4674 0010 00000000 		.4byte	.LFB21
 4675 0014 84000000 		.4byte	.LFE21-.LFB21
 4676 0018 00000000 		.4byte	.LFB22
 4677 001c 42000000 		.4byte	.LFE22-.LFB22
 4678 0020 00000000 		.4byte	.LFB7
 4679 0024 28000000 		.4byte	.LFE7-.LFB7
 4680 0028 00000000 		.4byte	.LFB20
 4681 002c 26000000 		.4byte	.LFE20-.LFB20
 4682 0030 00000000 		.4byte	.LFB1
 4683 0034 10000000 		.4byte	.LFE1-.LFB1
 4684 0038 00000000 		.4byte	.LFB2
 4685 003c 40000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 137


 4686 0040 00000000 		.4byte	.LFB3
 4687 0044 2C000000 		.4byte	.LFE3-.LFB3
 4688 0048 00000000 		.4byte	.LFB4
 4689 004c 48000000 		.4byte	.LFE4-.LFB4
 4690 0050 00000000 		.4byte	.LFB6
 4691 0054 E4000000 		.4byte	.LFE6-.LFB6
 4692 0058 00000000 		.4byte	.LFB8
 4693 005c 40000000 		.4byte	.LFE8-.LFB8
 4694 0060 00000000 		.4byte	.LFB9
 4695 0064 40000000 		.4byte	.LFE9-.LFB9
 4696 0068 00000000 		.4byte	.LFB10
 4697 006c 78000000 		.4byte	.LFE10-.LFB10
 4698 0070 00000000 		.4byte	.LFB11
 4699 0074 08000000 		.4byte	.LFE11-.LFB11
 4700 0078 00000000 		.4byte	.LFB12
 4701 007c 30000000 		.4byte	.LFE12-.LFB12
 4702 0080 00000000 		.4byte	.LFB13
 4703 0084 14000000 		.4byte	.LFE13-.LFB13
 4704 0088 00000000 		.4byte	.LFB14
 4705 008c 12000000 		.4byte	.LFE14-.LFB14
 4706 0090 00000000 		.4byte	.LFB15
 4707 0094 1A000000 		.4byte	.LFE15-.LFB15
 4708 0098 00000000 		.4byte	.LFB16
 4709 009c 1A000000 		.4byte	.LFE16-.LFB16
 4710 00a0 00000000 		.4byte	.LFB17
 4711 00a4 14000000 		.4byte	.LFE17-.LFB17
 4712 00a8 00000000 		.4byte	.LFB18
 4713 00ac 30000000 		.4byte	.LFE18-.LFB18
 4714 00b0 00000000 		.4byte	.LFB19
 4715 00b4 20000000 		.4byte	.LFE19-.LFB19
 4716 00b8 00000000 		.4byte	.LFB5
 4717 00bc 54000000 		.4byte	.LFE5-.LFB5
 4718 00c0 00000000 		.4byte	.LFB23
 4719 00c4 68000000 		.4byte	.LFE23-.LFB23
 4720 00c8 00000000 		.4byte	0
 4721 00cc 00000000 		.4byte	0
 4722              		.section	.debug_ranges,"",%progbits
 4723              	.Ldebug_ranges0:
 4724 0000 00000000 		.4byte	.LFB21
 4725 0004 84000000 		.4byte	.LFE21
 4726 0008 00000000 		.4byte	.LFB22
 4727 000c 42000000 		.4byte	.LFE22
 4728 0010 00000000 		.4byte	.LFB7
 4729 0014 28000000 		.4byte	.LFE7
 4730 0018 00000000 		.4byte	.LFB20
 4731 001c 26000000 		.4byte	.LFE20
 4732 0020 00000000 		.4byte	.LFB1
 4733 0024 10000000 		.4byte	.LFE1
 4734 0028 00000000 		.4byte	.LFB2
 4735 002c 40000000 		.4byte	.LFE2
 4736 0030 00000000 		.4byte	.LFB3
 4737 0034 2C000000 		.4byte	.LFE3
 4738 0038 00000000 		.4byte	.LFB4
 4739 003c 48000000 		.4byte	.LFE4
 4740 0040 00000000 		.4byte	.LFB6
 4741 0044 E4000000 		.4byte	.LFE6
 4742 0048 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 138


 4743 004c 40000000 		.4byte	.LFE8
 4744 0050 00000000 		.4byte	.LFB9
 4745 0054 40000000 		.4byte	.LFE9
 4746 0058 00000000 		.4byte	.LFB10
 4747 005c 78000000 		.4byte	.LFE10
 4748 0060 00000000 		.4byte	.LFB11
 4749 0064 08000000 		.4byte	.LFE11
 4750 0068 00000000 		.4byte	.LFB12
 4751 006c 30000000 		.4byte	.LFE12
 4752 0070 00000000 		.4byte	.LFB13
 4753 0074 14000000 		.4byte	.LFE13
 4754 0078 00000000 		.4byte	.LFB14
 4755 007c 12000000 		.4byte	.LFE14
 4756 0080 00000000 		.4byte	.LFB15
 4757 0084 1A000000 		.4byte	.LFE15
 4758 0088 00000000 		.4byte	.LFB16
 4759 008c 1A000000 		.4byte	.LFE16
 4760 0090 00000000 		.4byte	.LFB17
 4761 0094 14000000 		.4byte	.LFE17
 4762 0098 00000000 		.4byte	.LFB18
 4763 009c 30000000 		.4byte	.LFE18
 4764 00a0 00000000 		.4byte	.LFB19
 4765 00a4 20000000 		.4byte	.LFE19
 4766 00a8 00000000 		.4byte	.LFB5
 4767 00ac 54000000 		.4byte	.LFE5
 4768 00b0 00000000 		.4byte	.LFB23
 4769 00b4 68000000 		.4byte	.LFE23
 4770 00b8 00000000 		.4byte	0
 4771 00bc 00000000 		.4byte	0
 4772              		.section	.debug_line,"",%progbits
 4773              	.Ldebug_line0:
 4774 0000 10040000 		.section	.debug_str,"MS",%progbits,1
 4774      0200C400 
 4774      00000201 
 4774      FB0E0D00 
 4774      01010101 
 4775              	.LASF96:
 4776 0000 43617053 		.ascii	"CapSense_1_SsCalcLfsrSize\000"
 4776      656E7365 
 4776      5F315F53 
 4776      7343616C 
 4776      634C6673 
 4777              	.LASF113:
 4778 001a 73656E73 		.ascii	"sensorElement\000"
 4778      6F72456C 
 4778      656D656E 
 4778      7400
 4779              	.LASF146:
 4780 0028 43617053 		.ascii	"CapSense_1_BistDischargeExtCapacitors\000"
 4780      656E7365 
 4780      5F315F42 
 4780      69737444 
 4780      69736368 
 4781              	.LASF90:
 4782 004e 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 4782      656E7365 
 4782      5F315F46 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 139


 4782      4C415348 
 4782      5F57445F 
 4783              	.LASF111:
 4784 0069 7363616E 		.ascii	"scanStatus\000"
 4784      53746174 
 4784      757300
 4785              	.LASF153:
 4786 0074 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 4786      656E7365 
 4786      5F315F63 
 4786      75725261 
 4786      6D536E73 
 4787              	.LASF65:
 4788 008c 736E7254 		.ascii	"snrTestWidgetId\000"
 4788      65737457 
 4788      69646765 
 4788      74496400 
 4789              	.LASF138:
 4790 009c 43617053 		.ascii	"CapSense_1_SsChangeClkFreq\000"
 4790      656E7365 
 4790      5F315F53 
 4790      73436861 
 4790      6E676543 
 4791              	.LASF145:
 4792 00b7 63656E74 		.ascii	"centerFreqTrim\000"
 4792      65724672 
 4792      65715472 
 4792      696D00
 4793              	.LASF8:
 4794 00c6 756E7369 		.ascii	"unsigned int\000"
 4794      676E6564 
 4794      20696E74 
 4794      00
 4795              	.LASF122:
 4796 00d3 43617053 		.ascii	"CapSense_1_SsSetIOsInDefaultState\000"
 4796      656E7365 
 4796      5F315F53 
 4796      73536574 
 4796      494F7349 
 4797              	.LASF143:
 4798 00f5 43617053 		.ascii	"CapSense_1_SsInitialize\000"
 4798      656E7365 
 4798      5F315F53 
 4798      73496E69 
 4798      7469616C 
 4799              	.LASF56:
 4800 010d 7363616E 		.ascii	"scanCounter\000"
 4800      436F756E 
 4800      74657200 
 4801              	.LASF54:
 4802 0119 6877436C 		.ascii	"hwClock\000"
 4802      6F636B00 
 4803              	.LASF158:
 4804 0121 43617053 		.ascii	"CapSense_1_curSnsIOPtr\000"
 4804      656E7365 
 4804      5F315F63 
 4804      7572536E 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 140


 4804      73494F50 
 4805              	.LASF144:
 4806 0138 696E6974 		.ascii	"initStatus\000"
 4806      53746174 
 4806      757300
 4807              	.LASF124:
 4808 0143 72656756 		.ascii	"regValue\000"
 4808      616C7565 
 4808      00
 4809              	.LASF149:
 4810 014c 43617053 		.ascii	"CapSense_1_ioList\000"
 4810      656E7365 
 4810      5F315F69 
 4810      6F4C6973 
 4810      7400
 4811              	.LASF117:
 4812 015e 696E7465 		.ascii	"interruptState\000"
 4812      72727570 
 4812      74537461 
 4812      746500
 4813              	.LASF172:
 4814 016d 43617053 		.ascii	"CapSense_1_IsBusy\000"
 4814      656E7365 
 4814      5F315F49 
 4814      73427573 
 4814      7900
 4815              	.LASF99:
 4816 017f 6C667372 		.ascii	"lfsrScale\000"
 4816      5363616C 
 4816      6500
 4817              	.LASF104:
 4818 0189 43617053 		.ascii	"CapSense_1_SsSetWidgetTxClkSrc\000"
 4818      656E7365 
 4818      5F315F53 
 4818      73536574 
 4818      57696467 
 4819              	.LASF133:
 4820 01a8 43617053 		.ascii	"CapSense_1_CalibrateWidget\000"
 4820      656E7365 
 4820      5F315F43 
 4820      616C6962 
 4820      72617465 
 4821              	.LASF100:
 4822 01c3 6C667372 		.ascii	"lfsrRange\000"
 4822      52616E67 
 4822      6500
 4823              	.LASF121:
 4824 01cd 6D6F6465 		.ascii	"mode\000"
 4824      00
 4825              	.LASF142:
 4826 01d2 43617053 		.ascii	"CapSense_1_SsInitializeSourceSenseClk\000"
 4826      656E7365 
 4826      5F315F53 
 4826      73496E69 
 4826      7469616C 
 4827              	.LASF155:
 4828 01f8 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 141


 4828      656E7365 
 4828      5F315F73 
 4828      63616E46 
 4828      72657149 
 4829              	.LASF43:
 4830 0211 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 4830      656E7365 
 4830      5F315F52 
 4830      414D5F57 
 4830      445F4C49 
 4831              	.LASF115:
 4832 022f 656C7464 		.ascii	"eltdNum\000"
 4832      4E756D00 
 4833              	.LASF106:
 4834 0237 70747257 		.ascii	"ptrWdgt\000"
 4834      64677400 
 4835              	.LASF152:
 4836 023f 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
 4836      656E7365 
 4836      5F315F72 
 4836      65717565 
 4836      73745363 
 4837              	.LASF123:
 4838 025f 6C6F6F70 		.ascii	"loopIndex\000"
 4838      496E6465 
 4838      7800
 4839              	.LASF103:
 4840 0269 43617053 		.ascii	"CapSense_1_SsDisableCSXMode\000"
 4840      656E7365 
 4840      5F315F53 
 4840      73446973 
 4840      61626C65 
 4841              	.LASF12:
 4842 0285 666C6F61 		.ascii	"float\000"
 4842      7400
 4843              	.LASF78:
 4844 028b 73686966 		.ascii	"shift\000"
 4844      7400
 4845              	.LASF171:
 4846 0291 433A5C55 		.ascii	"C:\\Users\\michael.machate\\Desktop\\Cypress_Firstt"
 4846      73657273 
 4846      5C6D6963 
 4846      6861656C 
 4846      2E6D6163 
 4847 02c0 65737473 		.ascii	"ests\\FirstTestMutal.cydsn\000"
 4847      5C466972 
 4847      73745465 
 4847      73744D75 
 4847      74616C2E 
 4848              	.LASF169:
 4849 02da 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4849      43313120 
 4849      352E342E 
 4849      31203230 
 4849      31363036 
 4850 030d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4850      20726576 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 142


 4850      6973696F 
 4850      6E203233 
 4850      37373135 
 4851 0340 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4851      67202D66 
 4851      66756E63 
 4851      74696F6E 
 4851      2D736563 
 4852              	.LASF109:
 4853 036c 43617053 		.ascii	"CapSense_1_SetupWidget\000"
 4853      656E7365 
 4853      5F315F53 
 4853      65747570 
 4853      57696467 
 4854              	.LASF168:
 4855 0383 43794465 		.ascii	"CyDelayUs\000"
 4855      6C617955 
 4855      7300
 4856              	.LASF64:
 4857 038d 736E734C 		.ascii	"snsList\000"
 4857      69737400 
 4858              	.LASF7:
 4859 0395 6C6F6E67 		.ascii	"long long unsigned int\000"
 4859      206C6F6E 
 4859      6720756E 
 4859      7369676E 
 4859      65642069 
 4860              	.LASF66:
 4861 03ac 736E7254 		.ascii	"snrTestSensorId\000"
 4861      65737453 
 4861      656E736F 
 4861      72496400 
 4862              	.LASF87:
 4863 03bc 77646774 		.ascii	"wdgtType\000"
 4863      54797065 
 4863      00
 4864              	.LASF98:
 4865 03c5 6C667372 		.ascii	"lfsrSize\000"
 4865      53697A65 
 4865      00
 4866              	.LASF165:
 4867 03ce 43617053 		.ascii	"CapSense_1_CSXInitialize\000"
 4867      656E7365 
 4867      5F315F43 
 4867      5358496E 
 4867      69746961 
 4868              	.LASF19:
 4869 03e7 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 4869      656E7365 
 4869      5F315F4C 
 4869      4F575F42 
 4869      534C4E5F 
 4870              	.LASF25:
 4871 0404 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ENUM\000"
 4871      656E7365 
 4871      5F315F53 
 4871      454E5345 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 143


 4871      5F4D4554 
 4872              	.LASF137:
 4873 0421 76616C75 		.ascii	"value\000"
 4873      6500
 4874              	.LASF166:
 4875 0427 43617053 		.ascii	"CapSense_1_ISR_StartEx\000"
 4875      656E7365 
 4875      5F315F49 
 4875      53525F53 
 4875      74617274 
 4876              	.LASF72:
 4877 043e 64725074 		.ascii	"drPtr\000"
 4877      7200
 4878              	.LASF127:
 4879 0444 43617053 		.ascii	"CapSense_1_SsIsrInitialize\000"
 4879      656E7365 
 4879      5F315F53 
 4879      73497372 
 4879      496E6974 
 4880              	.LASF23:
 4881 045f 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 4881      656E7365 
 4881      5F315F53 
 4881      454E5345 
 4881      5F4D4554 
 4882              	.LASF32:
 4883 047e 6C6F7742 		.ascii	"lowBslnRst\000"
 4883      736C6E52 
 4883      737400
 4884              	.LASF119:
 4885 0489 43617053 		.ascii	"CapSense_1_SetPinState\000"
 4885      656E7365 
 4885      5F315F53 
 4885      65745069 
 4885      6E537461 
 4886              	.LASF120:
 4887 04a0 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 4887      656E7365 
 4887      5F315F53 
 4887      73537769 
 4887      74636853 
 4888              	.LASF129:
 4889 04bf 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 4889      656E7365 
 4889      5F315F53 
 4889      73536574 
 4889      4D6F6443 
 4890              	.LASF86:
 4891 04e2 746F7461 		.ascii	"totalNumSns\000"
 4891      6C4E756D 
 4891      536E7300 
 4892              	.LASF159:
 4893 04ee 43617053 		.ascii	"CapSense_1_CSXElectrodeCheck\000"
 4893      656E7365 
 4893      5F315F43 
 4893      5358456C 
 4893      65637472 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 144


 4894              	.LASF130:
 4895 050b 6D6F6443 		.ascii	"modClk\000"
 4895      6C6B00
 4896              	.LASF28:
 4897 0512 6E6F6973 		.ascii	"noiseTh\000"
 4897      65546800 
 4898              	.LASF14:
 4899 051a 63686172 		.ascii	"char\000"
 4899      00
 4900              	.LASF164:
 4901 051f 43794578 		.ascii	"CyExitCriticalSection\000"
 4901      69744372 
 4901      69746963 
 4901      616C5365 
 4901      6374696F 
 4902              	.LASF112:
 4903 0535 43617053 		.ascii	"CapSense_1_ScanAllWidgets\000"
 4903      656E7365 
 4903      5F315F53 
 4903      63616E41 
 4903      6C6C5769 
 4904              	.LASF76:
 4905 054f 6873696F 		.ascii	"hsiomShift\000"
 4905      6D536869 
 4905      667400
 4906              	.LASF10:
 4907 055a 75696E74 		.ascii	"uint16\000"
 4907      313600
 4908              	.LASF95:
 4909 0561 636F6E76 		.ascii	"conversionsNum\000"
 4909      65727369 
 4909      6F6E734E 
 4909      756D00
 4910              	.LASF26:
 4911 0570 7265736F 		.ascii	"resolution\000"
 4911      6C757469 
 4911      6F6E00
 4912              	.LASF69:
 4913 057b 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 4913      656E7365 
 4913      5F315F52 
 4913      414D5F53 
 4913      54525543 
 4914              	.LASF57:
 4915 0591 73746174 		.ascii	"status\000"
 4915      757300
 4916              	.LASF48:
 4917 0598 69646163 		.ascii	"idacComp\000"
 4917      436F6D70 
 4917      00
 4918              	.LASF71:
 4919 05a1 70635074 		.ascii	"pcPtr\000"
 4919      7200
 4920              	.LASF6:
 4921 05a7 6C6F6E67 		.ascii	"long long int\000"
 4921      206C6F6E 
 4921      6720696E 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 145


 4921      7400
 4922              	.LASF18:
 4923 05b5 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 4923      656E7365 
 4923      5F315F54 
 4923      48524553 
 4923      484F4C44 
 4924              	.LASF31:
 4925 05cf 6F6E4465 		.ascii	"onDebounce\000"
 4925      626F756E 
 4925      636500
 4926              	.LASF131:
 4927 05da 43617053 		.ascii	"CapSense_1_SsSetSnsClockDivider\000"
 4927      656E7365 
 4927      5F315F53 
 4927      73536574 
 4927      536E7343 
 4928              	.LASF134:
 4929 05fa 63616C69 		.ascii	"calibrateStatus\000"
 4929      62726174 
 4929      65537461 
 4929      74757300 
 4930              	.LASF63:
 4931 060a 77646774 		.ascii	"wdgtList\000"
 4931      4C697374 
 4931      00
 4932              	.LASF80:
 4933 0613 70747232 		.ascii	"ptr2SnsFlash\000"
 4933      536E7346 
 4933      6C617368 
 4933      00
 4934              	.LASF68:
 4935 0620 736E7254 		.ascii	"snrTestRawCount\000"
 4935      65737452 
 4935      6177436F 
 4935      756E7400 
 4936              	.LASF140:
 4937 0630 66726571 		.ascii	"freqOffset1\000"
 4937      4F666673 
 4937      65743100 
 4938              	.LASF29:
 4939 063c 6E4E6F69 		.ascii	"nNoiseTh\000"
 4939      73655468 
 4939      00
 4940              	.LASF61:
 4941 0645 63736430 		.ascii	"csd0Config\000"
 4941      436F6E66 
 4941      696700
 4942              	.LASF17:
 4943 0650 63796973 		.ascii	"cyisraddress\000"
 4943      72616464 
 4943      72657373 
 4943      00
 4944              	.LASF141:
 4945 065d 66726571 		.ascii	"freqOffset2\000"
 4945      4F666673 
 4945      65743200 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 146


 4946              	.LASF93:
 4947 0669 6C6F6E67 		.ascii	"long double\000"
 4947      20646F75 
 4947      626C6500 
 4948              	.LASF35:
 4949 0675 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 4949      656E7365 
 4949      5F315F52 
 4949      414D5F57 
 4949      445F4241 
 4950              	.LASF70:
 4951 0693 6873696F 		.ascii	"hsiomPtr\000"
 4951      6D507472 
 4951      00
 4952              	.LASF11:
 4953 069c 75696E74 		.ascii	"uint32\000"
 4953      333200
 4954              	.LASF30:
 4955 06a3 68797374 		.ascii	"hysteresis\000"
 4955      65726573 
 4955      697300
 4956              	.LASF83:
 4957 06ae 70747232 		.ascii	"ptr2FltrHistory\000"
 4957      466C7472 
 4957      48697374 
 4957      6F727900 
 4958              	.LASF20:
 4959 06be 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 4959      656E7365 
 4959      5F315F55 
 4959      4E444546 
 4959      494E4544 
 4960              	.LASF51:
 4961 06d5 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 4961      656E7365 
 4961      5F315F52 
 4961      414D5F53 
 4961      4E535F4C 
 4962              	.LASF75:
 4963 06f4 6D61736B 		.ascii	"mask\000"
 4963      00
 4964              	.LASF170:
 4965 06f9 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_Sensing.c\000"
 4965      72617465 
 4965      645F536F 
 4965      75726365 
 4965      5C50536F 
 4966              	.LASF136:
 4967 0725 43617053 		.ascii	"CapSense_1_SsChangeImoFreq\000"
 4967      656E7365 
 4967      5F315F53 
 4967      73436861 
 4967      6E676549 
 4968              	.LASF156:
 4969 0740 43617053 		.ascii	"CapSense_1_immunity\000"
 4969      656E7365 
 4969      5F315F69 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 147


 4969      6D6D756E 
 4969      69747900 
 4970              	.LASF167:
 4971 0754 43617053 		.ascii	"CapSense_1_CSXCalibrateWidget\000"
 4971      656E7365 
 4971      5F315F43 
 4971      53584361 
 4971      6C696272 
 4972              	.LASF105:
 4973 0772 77646774 		.ascii	"wdgtIndex\000"
 4973      496E6465 
 4973      7800
 4974              	.LASF147:
 4975 077c 43617053 		.ascii	"CapSense_1_dsRam\000"
 4975      656E7365 
 4975      5F315F64 
 4975      7352616D 
 4975      00
 4976              	.LASF110:
 4977 078d 43617053 		.ascii	"CapSense_1_Scan\000"
 4977      656E7365 
 4977      5F315F53 
 4977      63616E00 
 4978              	.LASF24:
 4979 079d 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 4979      656E7365 
 4979      5F315F53 
 4979      454E5345 
 4979      5F4D4554 
 4980              	.LASF16:
 4981 07bb 72656733 		.ascii	"reg32\000"
 4981      3200
 4982              	.LASF67:
 4983 07c1 736E7254 		.ascii	"snrTestScanCounter\000"
 4983      65737453 
 4983      63616E43 
 4983      6F756E74 
 4983      657200
 4984              	.LASF52:
 4985 07d4 636F6E66 		.ascii	"configId\000"
 4985      69674964 
 4985      00
 4986              	.LASF82:
 4987 07dd 70747232 		.ascii	"ptr2SnsRam\000"
 4987      536E7352 
 4987      616D00
 4988              	.LASF92:
 4989 07e8 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 4989      656E7365 
 4989      5F315F46 
 4989      4C415348 
 4989      5F535452 
 4990              	.LASF60:
 4991 0800 736E7353 		.ascii	"snsStatus\000"
 4991      74617475 
 4991      7300
 4992              	.LASF126:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 148


 4993 080a 706F7374 		.ascii	"postScanStatus\000"
 4993      5363616E 
 4993      53746174 
 4993      757300
 4994              	.LASF34:
 4995 0819 736E7343 		.ascii	"snsClkSource\000"
 4995      6C6B536F 
 4995      75726365 
 4995      00
 4996              	.LASF49:
 4997 0826 73697A65 		.ascii	"sizetype\000"
 4997      74797065 
 4997      00
 4998              	.LASF2:
 4999 082f 73686F72 		.ascii	"short int\000"
 4999      7420696E 
 4999      7400
 5000              	.LASF157:
 5001 0839 43617053 		.ascii	"CapSense_1_curFlashWdgtPtr\000"
 5001      656E7365 
 5001      5F315F63 
 5001      7572466C 
 5001      61736857 
 5002              	.LASF4:
 5003 0854 6C6F6E67 		.ascii	"long int\000"
 5003      20696E74 
 5003      00
 5004              	.LASF58:
 5005 085d 77646774 		.ascii	"wdgtEnable\000"
 5005      456E6162 
 5005      6C6500
 5006              	.LASF132:
 5007 0868 43617053 		.ascii	"CapSense_1_SsSetClockDividers\000"
 5007      656E7365 
 5007      5F315F53 
 5007      73536574 
 5007      436C6F63 
 5008              	.LASF148:
 5009 0886 43617053 		.ascii	"CapSense_1_dsFlash\000"
 5009      656E7365 
 5009      5F315F64 
 5009      73466C61 
 5009      736800
 5010              	.LASF46:
 5011 0899 64696666 		.ascii	"diff\000"
 5011      00
 5012              	.LASF55:
 5013 089e 74756E65 		.ascii	"tunerCmd\000"
 5013      72436D64 
 5013      00
 5014              	.LASF160:
 5015 08a7 43617053 		.ascii	"CapSense_1_SsCSXGetTxClkDivider\000"
 5015      656E7365 
 5015      5F315F53 
 5015      73435358 
 5015      47657454 
 5016              	.LASF73:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 149


 5017 08c7 70735074 		.ascii	"psPtr\000"
 5017      7200
 5018              	.LASF22:
 5019 08cd 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 5019      656E7365 
 5019      5F315F53 
 5019      454E5345 
 5019      5F4D4554 
 5020              	.LASF37:
 5021 08eb 62757474 		.ascii	"button0\000"
 5021      6F6E3000 
 5022              	.LASF38:
 5023 08f3 62757474 		.ascii	"button1\000"
 5023      6F6E3100 
 5024              	.LASF39:
 5025 08fb 62757474 		.ascii	"button2\000"
 5025      6F6E3200 
 5026              	.LASF40:
 5027 0903 62757474 		.ascii	"button3\000"
 5027      6F6E3300 
 5028              	.LASF41:
 5029 090b 62757474 		.ascii	"button4\000"
 5029      6F6E3400 
 5030              	.LASF42:
 5031 0913 62757474 		.ascii	"button5\000"
 5031      6F6E3500 
 5032              	.LASF88:
 5033 091b 6E756D43 		.ascii	"numCols\000"
 5033      6F6C7300 
 5034              	.LASF59:
 5035 0923 77646774 		.ascii	"wdgtStatus\000"
 5035      53746174 
 5035      757300
 5036              	.LASF151:
 5037 092e 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 5037      656E7365 
 5037      5F315F73 
 5037      656E736F 
 5037      72496E64 
 5038              	.LASF161:
 5039 0945 43617053 		.ascii	"CapSense_1_CSXSetupWidget\000"
 5039      656E7365 
 5039      5F315F43 
 5039      53585365 
 5039      74757057 
 5040              	.LASF21:
 5041 095f 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 5041      656E7365 
 5041      5F315F53 
 5041      454E5345 
 5041      5F4D4554 
 5042              	.LASF77:
 5043 097d 64725368 		.ascii	"drShift\000"
 5043      69667400 
 5044              	.LASF5:
 5045 0985 6C6F6E67 		.ascii	"long unsigned int\000"
 5045      20756E73 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 150


 5045      69676E65 
 5045      6420696E 
 5045      7400
 5046              	.LASF128:
 5047 0997 61646472 		.ascii	"address\000"
 5047      65737300 
 5048              	.LASF84:
 5049 099f 70747232 		.ascii	"ptr2DebounceArr\000"
 5049      4465626F 
 5049      756E6365 
 5049      41727200 
 5050              	.LASF27:
 5051 09af 66696E67 		.ascii	"fingerTh\000"
 5051      65725468 
 5051      00
 5052              	.LASF135:
 5053 09b8 43617053 		.ascii	"CapSense_1_CalibrateAllWidgets\000"
 5053      656E7365 
 5053      5F315F43 
 5053      616C6962 
 5053      72617465 
 5054              	.LASF45:
 5055 09d7 62736C6E 		.ascii	"bslnExt\000"
 5055      45787400 
 5056              	.LASF139:
 5057 09df 63684964 		.ascii	"chId\000"
 5057      00
 5058              	.LASF15:
 5059 09e4 63797374 		.ascii	"cystatus\000"
 5059      61747573 
 5059      00
 5060              	.LASF1:
 5061 09ed 756E7369 		.ascii	"unsigned char\000"
 5061      676E6564 
 5061      20636861 
 5061      7200
 5062              	.LASF173:
 5063 09fb 70747246 		.ascii	"ptrFlashWdgt\000"
 5063      6C617368 
 5063      57646774 
 5063      00
 5064              	.LASF85:
 5065 0a08 73746174 		.ascii	"staticConfig\000"
 5065      6963436F 
 5065      6E666967 
 5065      00
 5066              	.LASF62:
 5067 0a15 6D6F6443 		.ascii	"modCsxClk\000"
 5067      7378436C 
 5067      6B00
 5068              	.LASF118:
 5069 0a1f 696F5074 		.ascii	"ioPtr\000"
 5069      7200
 5070              	.LASF81:
 5071 0a25 70747232 		.ascii	"ptr2WdgtRam\000"
 5071      57646774 
 5071      52616D00 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 151


 5072              	.LASF89:
 5073 0a31 6E756D52 		.ascii	"numRows\000"
 5073      6F777300 
 5074              	.LASF114:
 5075 0a39 73746174 		.ascii	"state\000"
 5075      6500
 5076              	.LASF162:
 5077 0a3f 43617053 		.ascii	"CapSense_1_CSXScan\000"
 5077      656E7365 
 5077      5F315F43 
 5077      53585363 
 5077      616E00
 5078              	.LASF116:
 5079 0a52 656C7464 		.ascii	"eltdIndex\000"
 5079      496E6465 
 5079      7800
 5080              	.LASF74:
 5081 0a5c 6873696F 		.ascii	"hsiomMask\000"
 5081      6D4D6173 
 5081      6B00
 5082              	.LASF154:
 5083 0a66 43617053 		.ascii	"CapSense_1_currentSenseMethod\000"
 5083      656E7365 
 5083      5F315F63 
 5083      75727265 
 5083      6E745365 
 5084              	.LASF33:
 5085 0a84 736E7343 		.ascii	"snsClk\000"
 5085      6C6B00
 5086              	.LASF163:
 5087 0a8b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5087      74657243 
 5087      72697469 
 5087      63616C53 
 5087      65637469 
 5088              	.LASF0:
 5089 0aa2 7369676E 		.ascii	"signed char\000"
 5089      65642063 
 5089      68617200 
 5090              	.LASF44:
 5091 0aae 62736C6E 		.ascii	"bsln\000"
 5091      00
 5092              	.LASF3:
 5093 0ab3 73686F72 		.ascii	"short unsigned int\000"
 5093      7420756E 
 5093      7369676E 
 5093      65642069 
 5093      6E7400
 5094              	.LASF79:
 5095 0ac6 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 5095      656E7365 
 5095      5F315F46 
 5095      4C415348 
 5095      5F494F5F 
 5096              	.LASF101:
 5097 0ae1 6C667372 		.ascii	"lfsrDither\000"
 5097      44697468 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 152


 5097      657200
 5098              	.LASF102:
 5099 0aec 6E657752 		.ascii	"newRegValue\000"
 5099      65675661 
 5099      6C756500 
 5100              	.LASF9:
 5101 0af8 75696E74 		.ascii	"uint8\000"
 5101      3800
 5102              	.LASF13:
 5103 0afe 646F7562 		.ascii	"double\000"
 5103      6C6500
 5104              	.LASF47:
 5105 0b05 6E656742 		.ascii	"negBslnRstCnt\000"
 5105      736C6E52 
 5105      7374436E 
 5105      7400
 5106              	.LASF50:
 5107 0b13 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 5107      656E7365 
 5107      5F315F52 
 5107      414D5F53 
 5107      4E535F53 
 5108              	.LASF94:
 5109 0b2d 736E7343 		.ascii	"snsClkDivider\000"
 5109      6C6B4469 
 5109      76696465 
 5109      7200
 5110              	.LASF53:
 5111 0b3b 64657669 		.ascii	"deviceId\000"
 5111      63654964 
 5111      00
 5112              	.LASF108:
 5113 0b44 77696467 		.ascii	"widgetStatus\000"
 5113      65745374 
 5113      61747573 
 5113      00
 5114              	.LASF36:
 5115 0b51 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 5115      656E7365 
 5115      5F315F52 
 5115      414D5F57 
 5115      445F4255 
 5116              	.LASF107:
 5117 0b71 77696467 		.ascii	"widgetId\000"
 5117      65744964 
 5117      00
 5118              	.LASF125:
 5119 0b7a 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 5119      656E7365 
 5119      5F315F53 
 5119      73506F73 
 5119      74416C6C 
 5120              	.LASF150:
 5121 0b9a 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 5121      656E7365 
 5121      5F315F77 
 5121      69646765 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccJ5wnV6.s 			page 153


 5121      74496E64 
 5122              	.LASF97:
 5123 0bb1 43617053 		.ascii	"CapSense_1_SsCalcLfsrScale\000"
 5123      656E7365 
 5123      5F315F53 
 5123      7343616C 
 5123      634C6673 
 5124              	.LASF91:
 5125 0bcc 77646774 		.ascii	"wdgtArray\000"
 5125      41727261 
 5125      7900
 5126              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
