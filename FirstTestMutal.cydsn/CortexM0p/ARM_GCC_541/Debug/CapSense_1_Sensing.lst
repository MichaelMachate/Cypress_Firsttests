ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsSetWidgetTxClkSrc,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsSetWidgetTxClkSrc, %function
  24              	CapSense_1_SsSetWidgetTxClkSrc:
  25              	.LFB20:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \file CapSense_1_Sensing.c
   3:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \version 5.20
   4:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \see CapSense_1 v5.20 Datasheet
  10:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Structure.h"
  43:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_Adc.h"
  58:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (0u != CapSense_1_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #include "CapSense_1_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (0u != CapSense_1_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_1_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  85:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
 161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
 165:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_SENSE_METHOD_ENUM CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_immunity[CapSense_1_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     const uint8 CapSense_1_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint8 CapSense_1_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_RAM_SNS_STRUCT *CapSense_1_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_WD_STRUCT const *CapSense_1_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_IsBusy
 212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint32 CapSense_1_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetupWidget
 240:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDSetupWidgetExt(), CapSense_1_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 259:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_I_REP
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function does not start sensor scanning, the CapSense_1_Scan()
 264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if ((CapSense_1_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_Scan
 348:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function is called only after the CapSense_1_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_1_IsBusy()
 358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_Scan(void)
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXScan();
 384:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDScan();
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXScan();
 394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_SetupWidget() and CapSense_1_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  using the CapSense_1_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 430:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_ScanAllWidgets(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 9


 431:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CapSense_1_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (0u != (CapSense_1_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_ENABLE;
 462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (0u != (CapSense_1_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 scanStatus = CapSense_1_Scan();
 477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 487:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 10


 488:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitialize
 489:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling the CapSense_1_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1 Component at power-up. The CapSense_1_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (centerFreqTrim < CapSense_1_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_1_IMO_FREQUE
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (centerFreqTrim > (CapSense_1_IMO_FREQUENCY_OFFSET_MAX - CapSense_1_IMO_FREQUENCY_O
 534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 544:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 11


 545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****               ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 559:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_MANY_SENSE_MODES_EN)
 564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
 568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSX_E);
 570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ISX_E);
 572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 576:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (initStatus);
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 580:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 581:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetPinState
 583:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 585:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 586:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 587:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 589:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  associated with the ganged sensor is updated.
 590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 592:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 594:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 595:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 596:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 597:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 598:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function accepts the CapSense_1_SHIELD and
 599:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SENSOR states as an input only if there is at least
 600:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_1_TX_PIN
 601:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and CapSense_1_RX_PIN states as an input only if there is at least
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 12


 602:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSX widget in the project.
 603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling this function directly from the application layer is not
 605:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 606:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 607:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  automatically set the required pin states. They ignore changes
 608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  in the design made by the CapSense_1_SetPinState() function.
 609:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 610:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 611:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 612:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 613:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  sensor.
 614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration
 615:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  header file defined as CapSense_1_<WidgetName>_WDGT_ID.
 616:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param sensorElement
 618:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 619:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  its pin state.
 620:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 622:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 623:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_SNS<SensorNumber>_ID.
 624:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 625:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 627:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 628:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \endif
 629:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as:
 631:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_RX<RXNumber>_ID
 632:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_TX<TXNumber>_ID.
 633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 634:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param state
 635:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the state of the sensor to be set:
 636:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     1. CapSense_1_GROUND - The pin is connected to the ground.
 637:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     2. CapSense_1_HIGHZ - The drive mode of the pin is set to High-Z
 638:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        Analog.
 639:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     3. CapSense_1_SHIELD - The shield signal is routed to the pin
 640:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 641:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     4. CapSense_1_SENSOR - The pin is connected to the scanning bus
 642:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method is enabled).
 643:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     5. CapSense_1_TX_PIN - The Tx signal is routed to the sensor
 644:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     6. CapSense_1_RX_PIN - The pin is connected to the scanning bus
 646:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 647:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdIndex;
 653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8  interruptState;
 654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr;
 655:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 13


 659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check the ganged sns flag */
 662:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig & Ca
 663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr = CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 665:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr += sensorElement;
 666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinId];
 667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2
 672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = 1u;
 673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsF
 676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 678:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Reset HSIOM and PC registers */
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 687:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (state)
 689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_GROUND:
 691:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_HIGHZ:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSOR:
 706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Enable sensor */
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDConnectSns(ioPtr);
 708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 709:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 case CapSense_1_SHIELD:
 712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM
 715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 14


 716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     break;
 717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 719:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_TX_PIN:
 723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_GPIO_STRGDRV <<
 726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 728:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_RX_PIN:
 730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK <
 733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wrong state */
 739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 741:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
 743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 745:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 746:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDDisableMode
 749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSD mode.
 753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  4. Disable Shield Electrodes.
 760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void)
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 765:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 770:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 15


 773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)))
 774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Disconnect IDACA and IDACB */
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))) */
 781:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsCSDElectrodeCheck();
 784:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
 789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_1_CSH_TO_AMUXBUS_B_MASK << CapSense_1_CSH_HS
 790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, newRegValue);
 791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 793:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT))
 796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableShieldElectrodes();
 797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)) */
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 800:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 801:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 802:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableCSXMode
 806:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSX mode.
 810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void)
 818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 820:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 825:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 16


 830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_CSXElectrodeCheck();
 833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 834:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 836:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableISXMode
 839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables ISX mode.
 843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void)
 851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 853:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 858:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
 863:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXElectrodeCheck();
 866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_DigPrt2_Stop();
 867:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_USES_PORT_3)
 868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DigPrt3_Stop();
 869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* CapSense_1_USES_PORT_3 */
 870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 871:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 873:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 874:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSwitchSensingMode
 875:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 876:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 877:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 878:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanned.
 880:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 881:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 882:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 883:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 884:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSD mode.
 886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 17


 887:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 888:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 889:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 890:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSX mode.
 891:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 892:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param mode
 893:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the scan mode:
 894:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSD_E
 895:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSX_E
 896:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_ISX_E
 897:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_BIST_E
 898:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_UNDEFINED_E
 899:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 900:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 901:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ENUM mode)
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == CapSense_1_currentSenseMethod)
 907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDDisableMode();
 910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 911:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == CapSense_1_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableCSXMode();
 916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == CapSense_1_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableISXMode();
 922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == CapSense_1_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistDisableMode();
 928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
 933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Release ADC resources */
 934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_AdcReleaseResources();
 935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
 936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 937:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Enable the specified mode */
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == mode)
 940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDInitialize();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 18


 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == mode)
 948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXInitialize();
 952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSX_E;
 953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 954:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == mode)
 956:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 957:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXInitialize();
 960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_ISX_E;
 961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == mode)
 964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistInitialize();
 967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_BIST_E;
 968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 976:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 978:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetIOsInDefaultState
 980:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 981:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 982:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 983:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all electrodes into a default state.
 984:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 985:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 986:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 987:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 988:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - Strong drive.
 989:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 990:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the ADC channels into a default state:
 992:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 993:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - HiZ-Analog.
 994:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 995:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 996:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly from the application
 997:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  layer.
 998:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetIOsInDefaultState(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 19


1001:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
1003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
1004:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 regValue;
1005:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes */
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_1_TOTAL_ELECTRODES; loopIndex++)
1008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 1. Disconnect HSIOM.
1011:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 2. Set strong DM.
1012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 3. Set pin state to logic 0.
1013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1022:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1026:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get next electrode */
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
1029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1030:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ADC_EN)
1032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ClearAdcChannels();
1033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     
1035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ISX_EN)
1036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXSetDefaultDigital();
1037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1039:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
1041:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1042:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsReleaseResources()
1043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1044:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1045:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1046:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1047:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  default state.
1048:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1049:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1050:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The function performs following tasks:
1051:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1052:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1053:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     Cmod for CSD mode)
1054:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1055:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1056:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
1057:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 20


1058:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Resources released successfully.
1059:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1060:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1062:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsReleaseResources(void)
1063:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1065:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
1067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1070:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
1072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableCSXMode();
1075:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1076:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableISXMode();
1079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1080:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableMode();
1083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
1084:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_BistDisableMode();
1087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1088:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) &&  \
1091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsSetIOsInDefaultState();
1093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1094:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE != CapSense_1_CSD_SHIELD_EN) &&  \
1095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION)) */
1096:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1100:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
1102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1103:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return busyStatus;
1105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1108:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1109:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsPostAllWidgetsScan
1111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 21


1115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is the function used by the CapSense_1 ISR to implement multiple widget
1118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanning.
1119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Should not be used by the application layer.
1120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsPostAllWidgetsScan(void)
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Increment widget index
1126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Check if all the widgets are scanned
1127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     */
1129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (1u != CapSense_1_TOTAL_WIDGETS)
1130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus postScanStatus;
1131:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_widgetIndex++;
1135:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             postScanStatus = CapSense_1_SetupWidget((uint32)CapSense_1_widgetIndex);
1137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
1144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_Scan();
1146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (CapSense_1_ENABLE == CapSense_1_CSD_EN))
1151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widget
1153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable the CSD block */
1155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
1156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1158:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                            (CapSense_1_ENABLE == CapSense_1_CSD_EN)) */
1159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update scan Counter */
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.scanCounter++;
1162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1164:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure */
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1169:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 22


1172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1173:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1174:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsIsrInitialize
1185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  proper working of the Component.
1194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1195:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param address
1196:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1197:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1198:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsIsrInitialize(cyisraddress address)
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1203:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetModClkClockDivider
1207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param modClk
1219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The divider value for the modulator clock.
1220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetModClkClockDivider(uint32 modClk)
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Stop modulator clock */
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
1228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CapSense_1_MODCLK_CMD_DIV_SHIFT)|
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 23


1229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_MODCLK_CMD_DISABLE_MASK));
1230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense modClk.
1233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) & CapSense_1_MODCLK_CMD_ENABLE_MASK))
1240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1242:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
1247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_MODCLK_CMD_PA_DIV_SHIFT) |
1248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   CapSense_1_MODCLK_CMD_ENABLE_MASK));
1249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1252:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) &
1255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(~CapSense_1_ModClk__ENABLE_MASK));
1256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Update ModClk clock divider.
1259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_ModClk__DI
1262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= (modClk - 1u);
1263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, newRegValue);
1264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set bit to enable ModClk clock. */
1266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) |
1268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ModClk__ENABLE_MASK);
1269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetSnsClockDivider
1275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the sense clock.
1280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 24


1286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1287:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1289:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1290:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetSnsClockDivider(uint32 snsClk)
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1292:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1294:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense clock.
1297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_SENSE_PERIOD_PTR);
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
1304:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Stop sense clock clock   */
1307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SnsClk__DIV_ID <<
1309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CapSense_1_SNSCLK_CMD_DIV_SHIFT)|
1310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SNSCLK_CMD_DISABLE_MASK));
1311:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Set divider value for sense clock.
1314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * to dividing by 1.
1316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) & CapSense_1_SNSCLK_CMD_ENABLE_MASK))
1321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1324:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_SHIFT
1328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_SNSCLK_CMD_PA_DIV_SHIFT) 
1329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       CapSense_1_SNSCLK_CMD_ENABLE_MASK));
1330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
1331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
1332:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
1336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(~(uint32)CapSense_1_SnsClk__ENABLE_MASK));
1337:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Update snsClk clock divider.
1340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_SnsClk
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 25


1343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (snsClk - 1u);
1344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, newRegValue);
1345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1346:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
1349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_SnsClk__ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetClockDividers
1357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  modClk The divider value for the modulator clock.
1372:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1373:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetModClkClockDivider(modClk);
1378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Sns clock */
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetSnsClockDivider(snsClk);
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ANYMODE_AUTOCAL)
1385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateWidget
1387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the
1392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget prior to calibration.
1393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function performs exactly the same tasks as
1396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_CalibrateAllWidgets, but only for a specified widget.
1397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 26


1400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1403:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
1413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  A macro for the widget ID can be found in the
1415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1 Configuration header file defined as
1416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_<WidgetName>_WDGT_ID.
1417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the specified widget calibration:
1420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateWidget(uint32 widgetId)
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_TOTAL_WIDGETS <= widgetId)
1433:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1435:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /*
1438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              */
1441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (0u != CapSense_1_GET_WIDGET_EN_STATUS(widgetId))
1443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 else
1447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif  /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1453:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Exit from the loop because of a fail */
1455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
1456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 27


1457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN)
1462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSX_E ==
1463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSX widget */
1466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                        CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN) */
1469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)
1471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1474:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSD widget */
1475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RA
1476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1477:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN) */
1478:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RAWCOUNT_C
1482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXCalibrateWidget(widgetId, CapSense_1_ISX_RAWCOUNT_CAL_LEVEL);
1490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
1492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
1494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              /* Update CRC */
1496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN)
1497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_DsUpdateWidgetCrc(widgetId);
1498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN) */
1499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (0u);
1501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateAllWidgets
1508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1511:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  prior to calibration.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 28


1514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1526:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endcond
1527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the calibration process:
1534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateAllWidgets(void)
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1543:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             calibrateStatus |= CapSense_1_CalibrateWidget(wdgtIndex);
1547:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1551:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
1552:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1554:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
1555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsAutoTune
1557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense_1 operation.
1561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the following:
1564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    2*5*R*Cp.
1567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the operation:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 29


1571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_SsAutoTune(void)
1576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cp = 0uL;
1581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1582:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 cpRow = 0uL;
1583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cpWidget[CapSense_1_TOTAL_WIDGETS];
1586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
1587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Configure common config variables */
1590:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_1_CSD_SNSCLK_R_CONST;
1591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.vRef = CapSense_1_CSD_VREF_MV;
1592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_1_CSD_IDAC_GAIN_VALUE_NA;
1593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif ((CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) && (CapSense_1_DISABLE == CY_PSO
1599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained */
1600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1603:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Initialize CSD mode */
1612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDInitialize();
1613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN) */
1614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #1:
1617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - performing the first calibration at fixed settings
1618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sensor Cp
1619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sense clock frequency based on Cp
1620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sense clock for all the widgets */
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1626:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 30


1628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = CapSense_1_CALIBRATION_RESOLUTION;
1633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_1_CAL
1637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
1645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_CAL_LEVEL);
1648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get IDAC */
1657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calculate achived calibration level */
1660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcountR
1661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Find correct sense clock value */
1664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cpRow)
1667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1670:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
1672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
1675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1680:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << Ca
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 31


1685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 {
1686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_1_dsRam.modCsdClk;
1687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 }
1688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #else
1689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #endif
1691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1694:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1700:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calculate achived calibration level */
1702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcount * CapSen
1703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1704:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find correct sense clock value */
1706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cp)
1709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1712:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
1714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1722:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_1_FL
1727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                              ptrWdgt->snsClk = CapSense_1_dsRam.modCsdClk;
1729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
1731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif
1733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1734:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (cpRow > cp)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 32


1742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1744:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Non-CSD widget */
1752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1756:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #2:
1759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with new sense clock frequency
1760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting resolution
1761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1762:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune resolution for all the widgets */
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1771:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1774:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1777:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set parasitic capacitance for columns */
1779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1780:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1787:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1794:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Set parasitic capacitance for rows */
1796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1797:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get IDAC */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 33


1799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get finger capacitance */
1805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Init pointer to sigPFC */
1808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1809:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find resolution */
1811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1814:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #3:
1817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - selecting a widget clock source if AUTO
1818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - updating sensitivity
1820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1821:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sensitivity for all the widgets */
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1832:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
1837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
1838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
1839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return autoTuneStatus;
1843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1844:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) */
1845:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1846:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1847:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
1848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) ||\
1850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
1851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSinking
1853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 34


1856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1863:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void)
1865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1867:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sinking Mode */
1869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM2_PTR) & ~CapSense_1_IDAC_TRIM2_MOD_SNK_MASK;
1870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1871:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK) ;
1872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1873:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1874:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1875:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM2_COMP_SNK_MASK;
1876:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1877:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1878:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1880:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1881:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM2_PTR, trimValue);
1882:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1883:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1884:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
1885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1887:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1888:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) || \
1889:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
1890:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1891:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSourcing
1892:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1893:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1894:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
1895:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1896:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1897:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1898:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1899:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1900:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1901:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void)
1904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1906:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM1_PTR) & ~CapSense_1_IDAC_TRIM1_MOD_SRC_MASK;
1909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK);
1911:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 35


1913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM1_COMP_SRC_MASK;
1915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1918:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM1_PTR, trimValue);
1921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
1924:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1925:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsTrimIdacs
1928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1937:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  source mode based on sink/source mode configuration.
1938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void)
1942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
1947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_
1953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1954:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
1955:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1957:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeImoFreq
1960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the IMO frequency.
1964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  trims are contained in the CapSense_1_immunity[value] array for each
1968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  frequency channel.
1969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 36


1970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param value The frequency channel ID.
1971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeImoFreq(uint32 value)
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1978:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1979:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeClkFreq
1980:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1981:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1982:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1983:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1984:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1985:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1986:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1987:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1988:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1989:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1990:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param chId
1991:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The frequency channel ID.
1992:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1993:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1994:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeClkFreq(uint32 chId)
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1996:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
1997:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset1 = 0u;
1998:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset2 = 0u;
1999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2000:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2004:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 snsClkSrc;
2009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2011:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((0u != CapSense_1_TOTAL_CSD_WIDGETS) || \
2013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_1_TOTAL_CS
2014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_1_dsFlash.wdgtArray[CapSense
2015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)ptrFlas
2016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch(CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex]))
2019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
2022:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get sensor clock divider value */
2023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
2024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsdClk;
2025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2026:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 37


2027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2030:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2038:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2039:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2041:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F1;
2042:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F2;
2043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2044:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2045:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2046:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2047:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Get sense clk source */
2048:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2049:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2050:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2051:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2052:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2053:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2054:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2055:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2056:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2057:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2058:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2059:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2060:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2062:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2063:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2065:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset1 <<= 1u;
2068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset2 <<= 1u;
2069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2070:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2075:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2076:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
2080:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 38


2084:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2088:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2094:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2096:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)
2098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM
2099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2105:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2106:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2107:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider >>= 1;
2110:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (snsClkDivider == 0u)
2111:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2112:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = 1u;
2113:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2114:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2116:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2117:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2118:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2119:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2121:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2122:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSD_WIDGETS) */
2126:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSX_WIDGETS)
2128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
2130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsxClk;
2131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F1;
2135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F2;
2136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2137:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 39


2141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2155:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2159:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSX_WIDGETS) */
2161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CYASSERT(0);
2164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2)))
2173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitializeSourceSenseClk
2175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2177:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2178:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2179:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  for all CSD widgets.
2183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsInitializeSourceSenseClk(void)
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2187:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
2188:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
2191:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2Wdgt
2193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2194:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 40


2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2199:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2204:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2205:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_IS
2206:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2207:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2208:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2209:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
2210:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
2211:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
2212:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2215:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
2216:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_ISX_EN)) && \
2217:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2))) */
2218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2221:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2222:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetSenseClkSrc
2223:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2224:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2230:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget.
2236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2237:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
2239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2243:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2251:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             snsClkDivider = CapSense_1_SsCSDGetColSnsClkDivider(wdgtIndex);
2252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrW
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 41


2255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                              CapSen
2256:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /*
2260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * average PRS frequency through the argument.
2262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     */
2263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->r
2264:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
2268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2269:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * average PRS frequency through the argument.
2270:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
2271:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resol
2272:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2273:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2274:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2275:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2276:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2277:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2278:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2280:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
2281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2283:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
2284:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
2285:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_SsCSDGetRowSnsClkDivider(wdgtIndex);
2288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /*
2294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * average PRS frequency through the argument.
2296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             */
2297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)pt
2298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
2302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * average PRS frequency through the argument.
2304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
2305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdg
2306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = 0u;
2307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
2309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrScale = 0u;
2311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 42


2312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LF
2313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2316:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2317:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2319:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetTxClkSrc
2322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
2337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
  27              		.loc 1 2337 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2340:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
2342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 conversionsNum;
2344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2345:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)
2348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 snsClkDivider = CapSense_1_SsCSXGetTxClkDivider(wdgtIndex);
2351:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2352:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2353:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2354:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2355:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2356:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Unused function argument */
2357:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)wdgtIndex;
2358:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2359:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2360:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_CSX_TX_CLK_SOURCE;
2361:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2362:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Unused function argument */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 43


2363:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex;
2364:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) */
2365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2366:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
  33              		.loc 1 2366 0
  34 0000 0423     		movs	r3, #4
  35 0002 4B72     		strb	r3, [r1, #9]
2367:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
  36              		.loc 1 2367 0
  37              		@ sp needed
  38 0004 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE20:
  41              		.size	CapSense_1_SsSetWidgetTxClkSrc, .-CapSense_1_SsSetWidgetTxClkSrc
  42 0006 C046     		.section	.text.CapSense_1_SsDisableCSXMode,"ax",%progbits
  43              		.align	2
  44              		.code	16
  45              		.thumb_func
  46              		.type	CapSense_1_SsDisableCSXMode, %function
  47              	CapSense_1_SsDisableCSXMode:
  48              	.LFB7:
 818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
  49              		.loc 1 818 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53 0000 10B5     		push	{r4, lr}
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 4, -8
  56              		.cfi_offset 14, -4
 822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
  57              		.loc 1 822 0
  58 0002 064B     		ldr	r3, .L3
  59 0004 1968     		ldr	r1, [r3]
  60              	.LVL1:
 823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
  61              		.loc 1 823 0
  62 0006 064A     		ldr	r2, .L3+4
  63 0008 0A40     		ands	r2, r1
  64              	.LVL2:
 824:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  65              		.loc 1 824 0
  66 000a 1A60     		str	r2, [r3]
 827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
  67              		.loc 1 827 0
  68 000c 1968     		ldr	r1, [r3]
  69              	.LVL3:
 828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
  70              		.loc 1 828 0
  71 000e 054A     		ldr	r2, .L3+8
  72 0010 0A40     		ands	r2, r1
  73              	.LVL4:
 829:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  74              		.loc 1 829 0
  75 0012 1A60     		str	r2, [r3]
 832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
  76              		.loc 1 832 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 44


  77 0014 FFF7FEFF 		bl	CapSense_1_CSXElectrodeCheck
  78              	.LVL5:
 833:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
  79              		.loc 1 833 0
  80              		@ sp needed
  81 0018 10BD     		pop	{r4, pc}
  82              	.L4:
  83 001a C046     		.align	2
  84              	.L3:
  85 001c 00040240 		.word	1073873920
  86 0020 FFF0FFFF 		.word	-3841
  87 0024 FF0FFFFF 		.word	-61441
  88              		.cfi_endproc
  89              	.LFE7:
  90              		.size	CapSense_1_SsDisableCSXMode, .-CapSense_1_SsDisableCSXMode
  91              		.section	.text.CapSense_1_IsBusy,"ax",%progbits
  92              		.align	2
  93              		.global	CapSense_1_IsBusy
  94              		.code	16
  95              		.thumb_func
  96              		.type	CapSense_1_IsBusy, %function
  97              	CapSense_1_IsBusy:
  98              	.LFB1:
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
  99              		.loc 1 234 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 104              		.loc 1 235 0
 105 0000 024B     		ldr	r3, .L6
 106 0002 DB68     		ldr	r3, [r3, #12]
 107 0004 8020     		movs	r0, #128
 108 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 109              		.loc 1 236 0
 110              		@ sp needed
 111 0008 7047     		bx	lr
 112              	.L7:
 113 000a C046     		.align	2
 114              	.L6:
 115 000c 00000000 		.word	CapSense_1_dsRam
 116              		.cfi_endproc
 117              	.LFE1:
 118              		.size	CapSense_1_IsBusy, .-CapSense_1_IsBusy
 119              		.section	.text.CapSense_1_SetupWidget,"ax",%progbits
 120              		.align	2
 121              		.global	CapSense_1_SetupWidget
 122              		.code	16
 123              		.thumb_func
 124              		.type	CapSense_1_SetupWidget, %function
 125              	CapSense_1_SetupWidget:
 126              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 127              		.loc 1 286 0
 128              		.cfi_startproc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 45


 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              	.LVL6:
 132 0000 10B5     		push	{r4, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 4, -8
 135              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 136              		.loc 1 289 0
 137 0002 0E4B     		ldr	r3, .L14
 138 0004 DB68     		ldr	r3, [r3, #12]
 139 0006 DB03     		lsls	r3, r3, #15
 140 0008 0DD4     		bmi	.L11
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 141              		.loc 1 299 0
 142 000a 0528     		cmp	r0, #5
 143 000c 0DD8     		bhi	.L12
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 144              		.loc 1 300 0 discriminator 1
 145 000e 4309     		lsrs	r3, r0, #5
 146 0010 0433     		adds	r3, r3, #4
 147 0012 9B00     		lsls	r3, r3, #2
 148 0014 094A     		ldr	r2, .L14
 149 0016 9B58     		ldr	r3, [r3, r2]
 150 0018 1F22     		movs	r2, #31
 151 001a 0240     		ands	r2, r0
 152 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 153              		.loc 1 299 0 discriminator 1
 154 001e DB07     		lsls	r3, r3, #31
 155 0020 05D4     		bmi	.L13
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 156              		.loc 1 307 0
 157 0022 0124     		movs	r4, #1
 158 0024 04E0     		b	.L9
 159              	.L11:
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 160              		.loc 1 292 0
 161 0026 1124     		movs	r4, #17
 162 0028 02E0     		b	.L9
 163              	.L12:
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 164              		.loc 1 307 0
 165 002a 0124     		movs	r4, #1
 166 002c 00E0     		b	.L9
 167              	.L13:
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 168              		.loc 1 303 0
 169 002e 0024     		movs	r4, #0
 170              	.L9:
 171              	.LVL7:
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 172              		.loc 1 314 0
 173 0030 002C     		cmp	r4, #0
 174 0032 01D1     		bne	.L10
 321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 175              		.loc 1 321 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 46


 176 0034 FFF7FEFF 		bl	CapSense_1_CSXSetupWidget
 177              	.LVL8:
 178              	.L10:
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 179              		.loc 1 343 0
 180 0038 2000     		movs	r0, r4
 181              		@ sp needed
 182              	.LVL9:
 183 003a 10BD     		pop	{r4, pc}
 184              	.L15:
 185              		.align	2
 186              	.L14:
 187 003c 00000000 		.word	CapSense_1_dsRam
 188              		.cfi_endproc
 189              	.LFE2:
 190              		.size	CapSense_1_SetupWidget, .-CapSense_1_SetupWidget
 191              		.section	.text.CapSense_1_Scan,"ax",%progbits
 192              		.align	2
 193              		.global	CapSense_1_Scan
 194              		.code	16
 195              		.thumb_func
 196              		.type	CapSense_1_Scan, %function
 197              	CapSense_1_Scan:
 198              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 199              		.loc 1 369 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 10B5     		push	{r4, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 4, -8
 206              		.cfi_offset 14, -4
 207              	.LVL10:
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 208              		.loc 1 372 0
 209 0002 084B     		ldr	r3, .L22
 210 0004 DB68     		ldr	r3, [r3, #12]
 211 0006 DB03     		lsls	r3, r3, #15
 212 0008 07D4     		bmi	.L19
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 213              		.loc 1 379 0
 214 000a 074B     		ldr	r3, .L22+4
 215 000c 1B78     		ldrb	r3, [r3]
 216 000e 022B     		cmp	r3, #2
 217 0010 05D1     		bne	.L21
 383:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 218              		.loc 1 383 0
 219 0012 FFF7FEFF 		bl	CapSense_1_CSXScan
 220              	.LVL11:
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 221              		.loc 1 370 0
 222 0016 0020     		movs	r0, #0
 384:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 223              		.loc 1 384 0
 224 0018 03E0     		b	.L17
 225              	.L19:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 47


 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 226              		.loc 1 375 0
 227 001a 1120     		movs	r0, #17
 228 001c 01E0     		b	.L17
 229              	.L21:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 230              		.loc 1 397 0
 231 001e 0120     		movs	r0, #1
 232 0020 4042     		rsbs	r0, r0, #0
 233              	.L17:
 234              	.LVL12:
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 235              		.loc 1 402 0
 236              		@ sp needed
 237 0022 10BD     		pop	{r4, pc}
 238              	.L23:
 239              		.align	2
 240              	.L22:
 241 0024 00000000 		.word	CapSense_1_dsRam
 242 0028 00000000 		.word	.LANCHOR0
 243              		.cfi_endproc
 244              	.LFE3:
 245              		.size	CapSense_1_Scan, .-CapSense_1_Scan
 246              		.section	.text.CapSense_1_ScanAllWidgets,"ax",%progbits
 247              		.align	2
 248              		.global	CapSense_1_ScanAllWidgets
 249              		.code	16
 250              		.thumb_func
 251              		.type	CapSense_1_ScanAllWidgets, %function
 252              	CapSense_1_ScanAllWidgets:
 253              	.LFB4:
 431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 254              		.loc 1 431 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 10B5     		push	{r4, lr}
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 4, -8
 261              		.cfi_offset 14, -4
 262              	.LVL13:
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 263              		.loc 1 436 0
 264 0002 0F4B     		ldr	r3, .L32
 265 0004 DB68     		ldr	r3, [r3, #12]
 266 0006 1B06     		lsls	r3, r3, #24
 267 0008 18D4     		bmi	.L31
 268 000a 0024     		movs	r4, #0
 269 000c 0120     		movs	r0, #1
 270 000e 4042     		rsbs	r0, r0, #0
 271 0010 11E0     		b	.L26
 272              	.LVL14:
 273              	.L30:
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 274              		.loc 1 452 0
 275 0012 2000     		movs	r0, r4
 276              	.LVL15:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 48


 277 0014 FFF7FEFF 		bl	CapSense_1_SetupWidget
 278              	.LVL16:
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 279              		.loc 1 454 0
 280 0018 0028     		cmp	r0, #0
 281 001a 0BD1     		bne	.L27
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 282              		.loc 1 458 0
 283 001c 042C     		cmp	r4, #4
 284 001e 03D8     		bhi	.L28
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 285              		.loc 1 461 0
 286 0020 0122     		movs	r2, #1
 287 0022 084B     		ldr	r3, .L32+4
 288 0024 5A70     		strb	r2, [r3, #1]
 289 0026 02E0     		b	.L29
 290              	.L28:
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 291              		.loc 1 466 0
 292 0028 0022     		movs	r2, #0
 293 002a 064B     		ldr	r3, .L32+4
 294 002c 5A70     		strb	r2, [r3, #1]
 295              	.L29:
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 296              		.loc 1 476 0
 297 002e FFF7FEFF 		bl	CapSense_1_Scan
 298              	.LVL17:
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 299              		.loc 1 478 0
 300 0032 04E0     		b	.L25
 301              	.L27:
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 302              		.loc 1 449 0
 303 0034 0134     		adds	r4, r4, #1
 304              	.LVL18:
 305              	.L26:
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 306              		.loc 1 447 0 discriminator 1
 307 0036 052C     		cmp	r4, #5
 308 0038 EBD9     		bls	.L30
 309 003a 00E0     		b	.L25
 310              	.LVL19:
 311              	.L31:
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 312              		.loc 1 439 0
 313 003c 1120     		movs	r0, #17
 314              	.LVL20:
 315              	.L25:
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 316              		.loc 1 484 0
 317              		@ sp needed
 318 003e 10BD     		pop	{r4, pc}
 319              	.L33:
 320              		.align	2
 321              	.L32:
 322 0040 00000000 		.word	CapSense_1_dsRam
 323 0044 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 49


 324              		.cfi_endproc
 325              	.LFE4:
 326              		.size	CapSense_1_ScanAllWidgets, .-CapSense_1_ScanAllWidgets
 327              		.section	.text.CapSense_1_SetPinState,"ax",%progbits
 328              		.align	2
 329              		.global	CapSense_1_SetPinState
 330              		.code	16
 331              		.thumb_func
 332              		.type	CapSense_1_SetPinState, %function
 333              	CapSense_1_SetPinState:
 334              	.LFB6:
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 335              		.loc 1 650 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              	.LVL21:
 340 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 341              		.cfi_def_cfa_offset 24
 342              		.cfi_offset 3, -24
 343              		.cfi_offset 4, -20
 344              		.cfi_offset 5, -16
 345              		.cfi_offset 6, -12
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 1600     		movs	r6, r2
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 349              		.loc 1 675 0
 350 0004 4001     		lsls	r0, r0, #5
 351              	.LVL22:
 352 0006 364B     		ldr	r3, .L42
 353 0008 C458     		ldr	r4, [r0, r3]
 354 000a CB00     		lsls	r3, r1, #3
 355 000c 591A     		subs	r1, r3, r1
 356              	.LVL23:
 357 000e 8B00     		lsls	r3, r1, #2
 358 0010 E418     		adds	r4, r4, r3
 359              	.LVL24:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 360              		.loc 1 680 0
 361 0012 0025     		movs	r5, #0
 362 0014 60E0     		b	.L35
 363              	.LVL25:
 364              	.L41:
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 365              		.loc 1 683 0
 366 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 367              	.LVL26:
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 368              		.loc 1 684 0
 369 001a 2168     		ldr	r1, [r4]
 370 001c 0B68     		ldr	r3, [r1]
 371 001e 277E     		ldrb	r7, [r4, #24]
 372 0020 0F22     		movs	r2, #15
 373 0022 BA40     		lsls	r2, r2, r7
 374 0024 9343     		bics	r3, r2
 375 0026 0B60     		str	r3, [r1]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 50


 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 376              		.loc 1 685 0
 377 0028 6168     		ldr	r1, [r4, #4]
 378 002a 0B68     		ldr	r3, [r1]
 379 002c A77E     		ldrb	r7, [r4, #26]
 380 002e 0722     		movs	r2, #7
 381 0030 BA40     		lsls	r2, r2, r7
 382 0032 9343     		bics	r3, r2
 383 0034 0B60     		str	r3, [r1]
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 384              		.loc 1 686 0
 385 0036 FFF7FEFF 		bl	CyExitCriticalSection
 386              	.LVL27:
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 387              		.loc 1 688 0
 388 003a 012E     		cmp	r6, #1
 389 003c 19D0     		beq	.L37
 390 003e 002E     		cmp	r6, #0
 391 0040 04D0     		beq	.L38
 392 0042 042E     		cmp	r6, #4
 393 0044 21D0     		beq	.L39
 394 0046 052E     		cmp	r6, #5
 395 0048 32D0     		beq	.L40
 396 004a 43E0     		b	.L36
 397              	.L38:
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 398              		.loc 1 692 0
 399 004c FFF7FEFF 		bl	CyEnterCriticalSection
 400              	.LVL28:
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 401              		.loc 1 693 0
 402 0050 6268     		ldr	r2, [r4, #4]
 403 0052 1168     		ldr	r1, [r2]
 404 0054 A77E     		ldrb	r7, [r4, #26]
 405 0056 0623     		movs	r3, #6
 406 0058 BB40     		lsls	r3, r3, r7
 407 005a 0B43     		orrs	r3, r1
 408 005c 1360     		str	r3, [r2]
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 409              		.loc 1 694 0
 410 005e A168     		ldr	r1, [r4, #8]
 411 0060 0B68     		ldr	r3, [r1]
 412 0062 677E     		ldrb	r7, [r4, #25]
 413 0064 0122     		movs	r2, #1
 414 0066 BA40     		lsls	r2, r2, r7
 415 0068 9343     		bics	r3, r2
 416 006a 0B60     		str	r3, [r1]
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 417              		.loc 1 695 0
 418 006c FFF7FEFF 		bl	CyExitCriticalSection
 419              	.LVL29:
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 420              		.loc 1 696 0
 421 0070 30E0     		b	.L36
 422              	.L37:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 423              		.loc 1 699 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 51


 424 0072 FFF7FEFF 		bl	CyEnterCriticalSection
 425              	.LVL30:
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 426              		.loc 1 700 0
 427 0076 A168     		ldr	r1, [r4, #8]
 428 0078 0B68     		ldr	r3, [r1]
 429 007a 677E     		ldrb	r7, [r4, #25]
 430 007c 0122     		movs	r2, #1
 431 007e BA40     		lsls	r2, r2, r7
 432 0080 9343     		bics	r3, r2
 433 0082 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 434              		.loc 1 701 0
 435 0084 FFF7FEFF 		bl	CyExitCriticalSection
 436              	.LVL31:
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 437              		.loc 1 702 0
 438 0088 24E0     		b	.L36
 439              	.L39:
 723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 440              		.loc 1 723 0
 441 008a FFF7FEFF 		bl	CyEnterCriticalSection
 442              	.LVL32:
 724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_GPIO_STRGDRV <<
 443              		.loc 1 724 0
 444 008e 2268     		ldr	r2, [r4]
 445 0090 1168     		ldr	r1, [r2]
 446 0092 277E     		ldrb	r7, [r4, #24]
 447 0094 0423     		movs	r3, #4
 448 0096 BB40     		lsls	r3, r3, r7
 449 0098 0B43     		orrs	r3, r1
 450 009a 1360     		str	r3, [r2]
 725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 451              		.loc 1 725 0
 452 009c 6268     		ldr	r2, [r4, #4]
 453 009e 1168     		ldr	r1, [r2]
 454 00a0 A77E     		ldrb	r7, [r4, #26]
 455 00a2 0623     		movs	r3, #6
 456 00a4 BB40     		lsls	r3, r3, r7
 457 00a6 0B43     		orrs	r3, r1
 458 00a8 1360     		str	r3, [r2]
 726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 459              		.loc 1 726 0
 460 00aa FFF7FEFF 		bl	CyExitCriticalSection
 461              	.LVL33:
 727:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 462              		.loc 1 727 0
 463 00ae 11E0     		b	.L36
 464              	.L40:
 730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 465              		.loc 1 730 0
 466 00b0 FFF7FEFF 		bl	CyEnterCriticalSection
 467              	.LVL34:
 731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK <
 468              		.loc 1 731 0
 469 00b4 2268     		ldr	r2, [r4]
 470 00b6 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 52


 471 00b8 277E     		ldrb	r7, [r4, #24]
 472 00ba 0623     		movs	r3, #6
 473 00bc BB40     		lsls	r3, r3, r7
 474 00be 0B43     		orrs	r3, r1
 475 00c0 1360     		str	r3, [r2]
 732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 476              		.loc 1 732 0
 477 00c2 6168     		ldr	r1, [r4, #4]
 478 00c4 0B68     		ldr	r3, [r1]
 479 00c6 A77E     		ldrb	r7, [r4, #26]
 480 00c8 0722     		movs	r2, #7
 481 00ca BA40     		lsls	r2, r2, r7
 482 00cc 9343     		bics	r3, r2
 483 00ce 0B60     		str	r3, [r1]
 733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 484              		.loc 1 733 0
 485 00d0 FFF7FEFF 		bl	CyExitCriticalSection
 486              	.LVL35:
 487              	.L36:
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 488              		.loc 1 742 0 discriminator 2
 489 00d4 1C34     		adds	r4, r4, #28
 490              	.LVL36:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 491              		.loc 1 680 0 discriminator 2
 492 00d6 0135     		adds	r5, r5, #1
 493              	.LVL37:
 494              	.L35:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 495              		.loc 1 680 0 is_stmt 0 discriminator 1
 496 00d8 002D     		cmp	r5, #0
 497 00da 9CD0     		beq	.L41
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 498              		.loc 1 744 0 is_stmt 1
 499              		@ sp needed
 500              	.LVL38:
 501              	.LVL39:
 502              	.LVL40:
 503 00dc F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 504              	.L43:
 505 00de C046     		.align	2
 506              	.L42:
 507 00e0 00000000 		.word	CapSense_1_dsFlash
 508              		.cfi_endproc
 509              	.LFE6:
 510              		.size	CapSense_1_SetPinState, .-CapSense_1_SetPinState
 511              		.section	.text.CapSense_1_SsSwitchSensingMode,"ax",%progbits
 512              		.align	2
 513              		.global	CapSense_1_SsSwitchSensingMode
 514              		.code	16
 515              		.thumb_func
 516              		.type	CapSense_1_SsSwitchSensingMode, %function
 517              	CapSense_1_SsSwitchSensingMode:
 518              	.LFB8:
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 519              		.loc 1 902 0
 520              		.cfi_startproc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 53


 521              		@ args = 0, pretend = 0, frame = 0
 522              		@ frame_needed = 0, uses_anonymous_args = 0
 523              	.LVL41:
 524 0000 10B5     		push	{r4, lr}
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 4, -8
 527              		.cfi_offset 14, -4
 528 0002 0400     		movs	r4, r0
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 529              		.loc 1 903 0
 530 0004 0D4B     		ldr	r3, .L48
 531 0006 1B78     		ldrb	r3, [r3]
 532 0008 8342     		cmp	r3, r0
 533 000a 16D0     		beq	.L44
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 534              		.loc 1 906 0
 535 000c 012B     		cmp	r3, #1
 536 000e 03D0     		beq	.L46
 912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 537              		.loc 1 912 0
 538 0010 022B     		cmp	r3, #2
 539 0012 01D1     		bne	.L46
 915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 540              		.loc 1 915 0
 541 0014 FFF7FEFF 		bl	CapSense_1_SsDisableCSXMode
 542              	.LVL42:
 543              	.L46:
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 544              		.loc 1 939 0
 545 0018 012C     		cmp	r4, #1
 546 001a 0ED0     		beq	.L44
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 547              		.loc 1 947 0
 548 001c 022C     		cmp	r4, #2
 549 001e 05D1     		bne	.L47
 951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSX_E;
 550              		.loc 1 951 0
 551 0020 FFF7FEFF 		bl	CapSense_1_CSXInitialize
 552              	.LVL43:
 952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 553              		.loc 1 952 0
 554 0024 0222     		movs	r2, #2
 555 0026 054B     		ldr	r3, .L48
 556 0028 1A70     		strb	r2, [r3]
 557 002a 06E0     		b	.L44
 558              	.L47:
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 559              		.loc 1 955 0
 560 002c 042C     		cmp	r4, #4
 561 002e 04D0     		beq	.L44
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 562              		.loc 1 963 0
 563 0030 032C     		cmp	r4, #3
 564 0032 02D0     		beq	.L44
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 565              		.loc 1 972 0
 566 0034 0022     		movs	r2, #0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 54


 567 0036 014B     		ldr	r3, .L48
 568 0038 1A70     		strb	r2, [r3]
 569              	.L44:
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 570              		.loc 1 975 0
 571              		@ sp needed
 572 003a 10BD     		pop	{r4, pc}
 573              	.L49:
 574              		.align	2
 575              	.L48:
 576 003c 00000000 		.word	.LANCHOR0
 577              		.cfi_endproc
 578              	.LFE8:
 579              		.size	CapSense_1_SsSwitchSensingMode, .-CapSense_1_SsSwitchSensingMode
 580              		.section	.text.CapSense_1_SsSetIOsInDefaultState,"ax",%progbits
 581              		.align	2
 582              		.global	CapSense_1_SsSetIOsInDefaultState
 583              		.code	16
 584              		.thumb_func
 585              		.type	CapSense_1_SsSetIOsInDefaultState, %function
 586              	CapSense_1_SsSetIOsInDefaultState:
 587              	.LFB9:
1001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
 588              		.loc 1 1001 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592 0000 30B5     		push	{r4, r5, lr}
 593              		.cfi_def_cfa_offset 12
 594              		.cfi_offset 4, -12
 595              		.cfi_offset 5, -8
 596              		.cfi_offset 14, -4
 597              	.LVL44:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 598              		.loc 1 1007 0
 599 0002 0020     		movs	r0, #0
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
 600              		.loc 1 1002 0
 601 0004 0D4B     		ldr	r3, .L53
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 602              		.loc 1 1007 0
 603 0006 16E0     		b	.L51
 604              	.LVL45:
 605              	.L52:
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 606              		.loc 1 1014 0 discriminator 3
 607 0008 1968     		ldr	r1, [r3]
 608 000a 0A68     		ldr	r2, [r1]
 609              	.LVL46:
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 610              		.loc 1 1015 0 discriminator 3
 611 000c 1C69     		ldr	r4, [r3, #16]
 612 000e A243     		bics	r2, r4
 613              	.LVL47:
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 614              		.loc 1 1016 0 discriminator 3
 615 0010 0A60     		str	r2, [r1]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 55


1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
 616              		.loc 1 1018 0 discriminator 3
 617 0012 5C68     		ldr	r4, [r3, #4]
 618 0014 2268     		ldr	r2, [r4]
 619              	.LVL48:
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
 620              		.loc 1 1019 0 discriminator 3
 621 0016 9D7E     		ldrb	r5, [r3, #26]
 622 0018 0721     		movs	r1, #7
 623 001a A940     		lsls	r1, r1, r5
 624 001c 8A43     		bics	r2, r1
 625              	.LVL49:
 626 001e 1100     		movs	r1, r2
 627              	.LVL50:
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 628              		.loc 1 1020 0 discriminator 3
 629 0020 0622     		movs	r2, #6
 630 0022 AA40     		lsls	r2, r2, r5
 631 0024 0A43     		orrs	r2, r1
 632              	.LVL51:
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 633              		.loc 1 1021 0 discriminator 3
 634 0026 2260     		str	r2, [r4]
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
 635              		.loc 1 1023 0 discriminator 3
 636 0028 9968     		ldr	r1, [r3, #8]
 637 002a 0A68     		ldr	r2, [r1]
 638              	.LVL52:
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 639              		.loc 1 1024 0 discriminator 3
 640 002c 5C69     		ldr	r4, [r3, #20]
 641 002e A243     		bics	r2, r4
 642              	.LVL53:
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 643              		.loc 1 1025 0 discriminator 3
 644 0030 0A60     		str	r2, [r1]
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 645              		.loc 1 1028 0 discriminator 3
 646 0032 1C33     		adds	r3, r3, #28
 647              	.LVL54:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 648              		.loc 1 1007 0 discriminator 3
 649 0034 0130     		adds	r0, r0, #1
 650              	.LVL55:
 651              	.L51:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 652              		.loc 1 1007 0 is_stmt 0 discriminator 1
 653 0036 0B28     		cmp	r0, #11
 654 0038 E6D9     		bls	.L52
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 655              		.loc 1 1038 0 is_stmt 1
 656              		@ sp needed
 657 003a 30BD     		pop	{r4, r5, pc}
 658              	.L54:
 659              		.align	2
 660              	.L53:
 661 003c 00000000 		.word	CapSense_1_ioList
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 56


 662              		.cfi_endproc
 663              	.LFE9:
 664              		.size	CapSense_1_SsSetIOsInDefaultState, .-CapSense_1_SsSetIOsInDefaultState
 665              		.section	.text.CapSense_1_SsPostAllWidgetsScan,"ax",%progbits
 666              		.align	2
 667              		.global	CapSense_1_SsPostAllWidgetsScan
 668              		.code	16
 669              		.thumb_func
 670              		.type	CapSense_1_SsPostAllWidgetsScan, %function
 671              	CapSense_1_SsPostAllWidgetsScan:
 672              	.LFB10:
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 673              		.loc 1 1123 0
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 0, uses_anonymous_args = 0
 677 0000 10B5     		push	{r4, lr}
 678              		.cfi_def_cfa_offset 8
 679              		.cfi_offset 4, -8
 680              		.cfi_offset 14, -4
 681              	.L60:
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 682              		.loc 1 1134 0
 683 0002 1B4A     		ldr	r2, .L61
 684 0004 9378     		ldrb	r3, [r2, #2]
 685 0006 0133     		adds	r3, r3, #1
 686 0008 DBB2     		uxtb	r3, r3
 687 000a 9370     		strb	r3, [r2, #2]
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 688              		.loc 1 1136 0
 689 000c 9078     		ldrb	r0, [r2, #2]
 690 000e C0B2     		uxtb	r0, r0
 691 0010 FFF7FEFF 		bl	CapSense_1_SetupWidget
 692              	.LVL56:
 693 0014 041E     		subs	r4, r0, #0
 694              	.LVL57:
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 695              		.loc 1 1138 0
 696 0016 09D1     		bne	.L56
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 697              		.loc 1 1140 0
 698 0018 154B     		ldr	r3, .L61
 699 001a 9B78     		ldrb	r3, [r3, #2]
 700 001c 052B     		cmp	r3, #5
 701 001e 02D1     		bne	.L57
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 702              		.loc 1 1143 0
 703 0020 0022     		movs	r2, #0
 704 0022 134B     		ldr	r3, .L61
 705 0024 5A70     		strb	r2, [r3, #1]
 706              	.L57:
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 707              		.loc 1 1145 0
 708 0026 FFF7FEFF 		bl	CapSense_1_Scan
 709              	.LVL58:
 710 002a 1EE0     		b	.L58
 711              	.LVL59:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 57


 712              	.L56:
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 713              		.loc 1 1147 0
 714 002c 104B     		ldr	r3, .L61
 715 002e 9B78     		ldrb	r3, [r3, #2]
 716 0030 052B     		cmp	r3, #5
 717 0032 11D1     		bne	.L59
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 718              		.loc 1 1161 0
 719 0034 0F4B     		ldr	r3, .L61+4
 720 0036 1A89     		ldrh	r2, [r3, #8]
 721 0038 0132     		adds	r2, r2, #1
 722 003a 1A81     		strh	r2, [r3, #8]
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 723              		.loc 1 1163 0
 724 003c DA68     		ldr	r2, [r3, #12]
 725 003e 8021     		movs	r1, #128
 726 0040 8A43     		bics	r2, r1
 727 0042 DA60     		str	r2, [r3, #12]
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
 728              		.loc 1 1166 0
 729 0044 DA68     		ldr	r2, [r3, #12]
 730 0046 1202     		lsls	r2, r2, #8
 731 0048 120A     		lsrs	r2, r2, #8
 732 004a DA60     		str	r2, [r3, #12]
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 733              		.loc 1 1167 0
 734 004c DA68     		ldr	r2, [r3, #12]
 735 004e 0406     		lsls	r4, r0, #24
 736 0050 1443     		orrs	r4, r2
 737 0052 DC60     		str	r4, [r3, #12]
 738              	.LVL60:
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 739              		.loc 1 1170 0
 740 0054 0024     		movs	r4, #0
 741 0056 08E0     		b	.L58
 742              	.LVL61:
 743              	.L59:
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
 744              		.loc 1 1175 0
 745 0058 064A     		ldr	r2, .L61+4
 746 005a D368     		ldr	r3, [r2, #12]
 747 005c 1B02     		lsls	r3, r3, #8
 748 005e 1B0A     		lsrs	r3, r3, #8
 749 0060 D360     		str	r3, [r2, #12]
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 750              		.loc 1 1176 0
 751 0062 D168     		ldr	r1, [r2, #12]
 752 0064 0306     		lsls	r3, r0, #24
 753 0066 0B43     		orrs	r3, r1
 754 0068 D360     		str	r3, [r2, #12]
 755              	.LVL62:
 756              	.L58:
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
 757              		.loc 1 1178 0
 758 006a 002C     		cmp	r4, #0
 759 006c C9D1     		bne	.L60
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 58


1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 760              		.loc 1 1180 0
 761              		@ sp needed
 762              	.LVL63:
 763 006e 10BD     		pop	{r4, pc}
 764              	.L62:
 765              		.align	2
 766              	.L61:
 767 0070 00000000 		.word	.LANCHOR0
 768 0074 00000000 		.word	CapSense_1_dsRam
 769              		.cfi_endproc
 770              	.LFE10:
 771              		.size	CapSense_1_SsPostAllWidgetsScan, .-CapSense_1_SsPostAllWidgetsScan
 772              		.section	.text.CapSense_1_SsIsrInitialize,"ax",%progbits
 773              		.align	2
 774              		.global	CapSense_1_SsIsrInitialize
 775              		.code	16
 776              		.thumb_func
 777              		.type	CapSense_1_SsIsrInitialize, %function
 778              	CapSense_1_SsIsrInitialize:
 779              	.LFB11:
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
 780              		.loc 1 1200 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              	.LVL64:
 785 0000 10B5     		push	{r4, lr}
 786              		.cfi_def_cfa_offset 8
 787              		.cfi_offset 4, -8
 788              		.cfi_offset 14, -4
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 789              		.loc 1 1201 0
 790 0002 FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 791              	.LVL65:
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 792              		.loc 1 1202 0
 793              		@ sp needed
 794 0006 10BD     		pop	{r4, pc}
 795              		.cfi_endproc
 796              	.LFE11:
 797              		.size	CapSense_1_SsIsrInitialize, .-CapSense_1_SsIsrInitialize
 798              		.section	.text.CapSense_1_SsSetModClkClockDivider,"ax",%progbits
 799              		.align	2
 800              		.global	CapSense_1_SsSetModClkClockDivider
 801              		.code	16
 802              		.thumb_func
 803              		.type	CapSense_1_SsSetModClkClockDivider, %function
 804              	CapSense_1_SsSetModClkClockDivider:
 805              	.LFB12:
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
 806              		.loc 1 1223 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811              	.LVL66:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 59


1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
 812              		.loc 1 1226 0
 813 0000 074A     		ldr	r2, .L66
 814 0002 084B     		ldr	r3, .L66+4
 815 0004 1A60     		str	r2, [r3]
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 816              		.loc 1 1236 0
 817 0006 0138     		subs	r0, r0, #1
 818              	.LVL67:
 819 0008 0002     		lsls	r0, r0, #8
 820              	.LVL68:
 821 000a 074B     		ldr	r3, .L66+8
 822 000c 1860     		str	r0, [r3]
 823              	.L65:
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 824              		.loc 1 1239 0 discriminator 1
 825 000e 054B     		ldr	r3, .L66+4
 826 0010 1B68     		ldr	r3, [r3]
 827 0012 002B     		cmp	r3, #0
 828 0014 FBDB     		blt	.L65
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
 829              		.loc 1 1245 0
 830 0016 054A     		ldr	r2, .L66+12
 831 0018 024B     		ldr	r3, .L66+4
 832 001a 1A60     		str	r2, [r3]
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 833              		.loc 1 1270 0
 834              		@ sp needed
 835 001c 7047     		bx	lr
 836              	.L67:
 837 001e C046     		.align	2
 838              	.L66:
 839 0020 40000040 		.word	1073741888
 840 0024 00000140 		.word	1073807360
 841 0028 00030140 		.word	1073808128
 842 002c 40FF0080 		.word	-2147418304
 843              		.cfi_endproc
 844              	.LFE12:
 845              		.size	CapSense_1_SsSetModClkClockDivider, .-CapSense_1_SsSetModClkClockDivider
 846              		.section	.text.CapSense_1_SsSetSnsClockDivider,"ax",%progbits
 847              		.align	2
 848              		.global	CapSense_1_SsSetSnsClockDivider
 849              		.code	16
 850              		.thumb_func
 851              		.type	CapSense_1_SsSetSnsClockDivider, %function
 852              	CapSense_1_SsSetSnsClockDivider:
 853              	.LFB13:
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 854              		.loc 1 1291 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859              	.LVL69:
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
 860              		.loc 1 1300 0
 861 0000 034A     		ldr	r2, .L69
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 60


 862 0002 1368     		ldr	r3, [r2]
 863              	.LVL70:
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
 864              		.loc 1 1301 0
 865 0004 1B0B     		lsrs	r3, r3, #12
 866              	.LVL71:
 867 0006 1B03     		lsls	r3, r3, #12
 868              	.LVL72:
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
 869              		.loc 1 1302 0
 870 0008 0138     		subs	r0, r0, #1
 871              	.LVL73:
 872 000a 1843     		orrs	r0, r3
 873              	.LVL74:
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 874              		.loc 1 1303 0
 875 000c 1060     		str	r0, [r2]
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 876              		.loc 1 1352 0
 877              		@ sp needed
 878 000e 7047     		bx	lr
 879              	.L70:
 880              		.align	2
 881              	.L69:
 882 0010 00020B40 		.word	1074463232
 883              		.cfi_endproc
 884              	.LFE13:
 885              		.size	CapSense_1_SsSetSnsClockDivider, .-CapSense_1_SsSetSnsClockDivider
 886              		.section	.text.CapSense_1_SsSetClockDividers,"ax",%progbits
 887              		.align	2
 888              		.global	CapSense_1_SsSetClockDividers
 889              		.code	16
 890              		.thumb_func
 891              		.type	CapSense_1_SsSetClockDividers, %function
 892              	CapSense_1_SsSetClockDividers:
 893              	.LFB14:
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
 894              		.loc 1 1375 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898              	.LVL75:
 899 0000 10B5     		push	{r4, lr}
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 4, -8
 902              		.cfi_offset 14, -4
 903 0002 0400     		movs	r4, r0
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 904              		.loc 1 1377 0
 905 0004 0800     		movs	r0, r1
 906              	.LVL76:
 907 0006 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 908              	.LVL77:
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 909              		.loc 1 1380 0
 910 000a 2000     		movs	r0, r4
 911 000c FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 61


 912              	.LVL78:
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 913              		.loc 1 1381 0
 914              		@ sp needed
 915              	.LVL79:
 916 0010 10BD     		pop	{r4, pc}
 917              		.cfi_endproc
 918              	.LFE14:
 919              		.size	CapSense_1_SsSetClockDividers, .-CapSense_1_SsSetClockDividers
 920 0012 C046     		.section	.text.CapSense_1_CalibrateWidget,"ax",%progbits
 921              		.align	2
 922              		.global	CapSense_1_CalibrateWidget
 923              		.code	16
 924              		.thumb_func
 925              		.type	CapSense_1_CalibrateWidget, %function
 926              	CapSense_1_CalibrateWidget:
 927              	.LFB15:
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 928              		.loc 1 1427 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              	.LVL80:
 933 0000 10B5     		push	{r4, lr}
 934              		.cfi_def_cfa_offset 8
 935              		.cfi_offset 4, -8
 936              		.cfi_offset 14, -4
 937              	.LVL81:
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 938              		.loc 1 1432 0
 939 0002 0528     		cmp	r0, #5
 940 0004 01D8     		bhi	.L75
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 941              		.loc 1 1428 0
 942 0006 0024     		movs	r4, #0
 943 0008 00E0     		b	.L73
 944              	.L75:
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 945              		.loc 1 1434 0
 946 000a 0124     		movs	r4, #1
 947              	.L73:
 948              	.LVL82:
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 949              		.loc 1 1452 0
 950 000c 002C     		cmp	r4, #0
 951 000e 02D1     		bne	.L74
1485:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 952              		.loc 1 1485 0
 953 0010 2821     		movs	r1, #40
 954 0012 FFF7FEFF 		bl	CapSense_1_CSXCalibrateWidget
 955              	.LVL83:
 956              	.L74:
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 957              		.loc 1 1503 0
 958 0016 2000     		movs	r0, r4
 959              		@ sp needed
 960              	.LVL84:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 62


 961 0018 10BD     		pop	{r4, pc}
 962              		.cfi_endproc
 963              	.LFE15:
 964              		.size	CapSense_1_CalibrateWidget, .-CapSense_1_CalibrateWidget
 965 001a C046     		.section	.text.CapSense_1_CalibrateAllWidgets,"ax",%progbits
 966              		.align	2
 967              		.global	CapSense_1_CalibrateAllWidgets
 968              		.code	16
 969              		.thumb_func
 970              		.type	CapSense_1_CalibrateAllWidgets, %function
 971              	CapSense_1_CalibrateAllWidgets:
 972              	.LFB16:
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 973              		.loc 1 1540 0
 974              		.cfi_startproc
 975              		@ args = 0, pretend = 0, frame = 0
 976              		@ frame_needed = 0, uses_anonymous_args = 0
 977 0000 70B5     		push	{r4, r5, r6, lr}
 978              		.cfi_def_cfa_offset 16
 979              		.cfi_offset 4, -16
 980              		.cfi_offset 5, -12
 981              		.cfi_offset 6, -8
 982              		.cfi_offset 14, -4
 983              	.LVL85:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 984              		.loc 1 1544 0
 985 0002 0024     		movs	r4, #0
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
 986              		.loc 1 1541 0
 987 0004 0025     		movs	r5, #0
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 988              		.loc 1 1544 0
 989 0006 04E0     		b	.L77
 990              	.LVL86:
 991              	.L78:
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 992              		.loc 1 1546 0 discriminator 3
 993 0008 2000     		movs	r0, r4
 994 000a FFF7FEFF 		bl	CapSense_1_CalibrateWidget
 995              	.LVL87:
 996 000e 0543     		orrs	r5, r0
 997              	.LVL88:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 998              		.loc 1 1544 0 discriminator 3
 999 0010 0134     		adds	r4, r4, #1
 1000              	.LVL89:
 1001              	.L77:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1002              		.loc 1 1544 0 is_stmt 0 discriminator 1
 1003 0012 052C     		cmp	r4, #5
 1004 0014 F8D9     		bls	.L78
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
 1005              		.loc 1 1550 0 is_stmt 1
 1006 0016 2800     		movs	r0, r5
 1007              		@ sp needed
 1008              	.LVL90:
 1009              	.LVL91:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 63


 1010 0018 70BD     		pop	{r4, r5, r6, pc}
 1011              		.cfi_endproc
 1012              	.LFE16:
 1013              		.size	CapSense_1_CalibrateAllWidgets, .-CapSense_1_CalibrateAllWidgets
 1014 001a C046     		.section	.text.CapSense_1_SsChangeImoFreq,"ax",%progbits
 1015              		.align	2
 1016              		.global	CapSense_1_SsChangeImoFreq
 1017              		.code	16
 1018              		.thumb_func
 1019              		.type	CapSense_1_SsChangeImoFreq, %function
 1020              	CapSense_1_SsChangeImoFreq:
 1021              	.LFB17:
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
 1022              		.loc 1 1974 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 1026              		@ link register save eliminated.
 1027              	.LVL92:
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1028              		.loc 1 1975 0
 1029 0000 024B     		ldr	r3, .L80
 1030 0002 1818     		adds	r0, r3, r0
 1031              	.LVL93:
 1032 0004 0279     		ldrb	r2, [r0, #4]
 1033 0006 024B     		ldr	r3, .L80+4
 1034 0008 1A60     		str	r2, [r3]
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1035              		.loc 1 1976 0
 1036              		@ sp needed
 1037 000a 7047     		bx	lr
 1038              	.L81:
 1039              		.align	2
 1040              	.L80:
 1041 000c 00000000 		.word	.LANCHOR0
 1042 0010 0C0F0340 		.word	1073942284
 1043              		.cfi_endproc
 1044              	.LFE17:
 1045              		.size	CapSense_1_SsChangeImoFreq, .-CapSense_1_SsChangeImoFreq
 1046              		.section	.text.CapSense_1_SsChangeClkFreq,"ax",%progbits
 1047              		.align	2
 1048              		.global	CapSense_1_SsChangeClkFreq
 1049              		.code	16
 1050              		.thumb_func
 1051              		.type	CapSense_1_SsChangeClkFreq, %function
 1052              	CapSense_1_SsChangeClkFreq:
 1053              	.LFB18:
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
 1054              		.loc 1 1995 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              	.LVL94:
 1059 0000 10B5     		push	{r4, lr}
 1060              		.cfi_def_cfa_offset 8
 1061              		.cfi_offset 4, -8
 1062              		.cfi_offset 14, -4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 64


 1063              	.LVL95:
2130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
 1064              		.loc 1 2130 0
 1065 0002 074B     		ldr	r3, .L86
 1066 0004 5B8C     		ldrh	r3, [r3, #34]
 1067              	.LVL96:
2138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1068              		.loc 1 2138 0
 1069 0006 0128     		cmp	r0, #1
 1070 0008 02D0     		beq	.L84
 1071 000a 0228     		cmp	r0, #2
 1072 000c 02D0     		beq	.L85
 1073 000e 02E0     		b	.L83
 1074              	.L84:
2142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
 1075              		.loc 1 2142 0
 1076 0010 0133     		adds	r3, r3, #1
 1077              	.LVL97:
2143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 1078              		.loc 1 2143 0
 1079 0012 00E0     		b	.L83
 1080              	.L85:
2147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
 1081              		.loc 1 2147 0
 1082 0014 0233     		adds	r3, r3, #2
 1083              	.LVL98:
 1084              	.L83:
2157:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1085              		.loc 1 2157 0
 1086 0016 1800     		movs	r0, r3
 1087              	.LVL99:
 1088 0018 FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 1089              	.LVL100:
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 1090              		.loc 1 2166 0
 1091              		@ sp needed
 1092 001c 10BD     		pop	{r4, pc}
 1093              	.L87:
 1094 001e C046     		.align	2
 1095              	.L86:
 1096 0020 00000000 		.word	CapSense_1_dsRam
 1097              		.cfi_endproc
 1098              	.LFE18:
 1099              		.size	CapSense_1_SsChangeClkFreq, .-CapSense_1_SsChangeClkFreq
 1100              		.section	.text.CapSense_1_SsInitializeSourceSenseClk,"ax",%progbits
 1101              		.align	2
 1102              		.global	CapSense_1_SsInitializeSourceSenseClk
 1103              		.code	16
 1104              		.thumb_func
 1105              		.type	CapSense_1_SsInitializeSourceSenseClk, %function
 1106              	CapSense_1_SsInitializeSourceSenseClk:
 1107              	.LFB19:
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 1108              		.loc 1 2186 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 0
 1111              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 65


 1112 0000 10B5     		push	{r4, lr}
 1113              		.cfi_def_cfa_offset 8
 1114              		.cfi_offset 4, -8
 1115              		.cfi_offset 14, -4
 1116              	.LVL101:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1117              		.loc 1 2190 0
 1118 0002 0024     		movs	r4, #0
 1119 0004 07E0     		b	.L89
 1120              	.LVL102:
 1121              	.L90:
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1122              		.loc 1 2192 0
 1123 0006 6301     		lsls	r3, r4, #5
 1124 0008 044A     		ldr	r2, .L91
 1125 000a D318     		adds	r3, r2, r3
 1126 000c 5968     		ldr	r1, [r3, #4]
 1127              	.LVL103:
2203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 1128              		.loc 1 2203 0
 1129 000e 2000     		movs	r0, r4
 1130 0010 FFF7FEFF 		bl	CapSense_1_SsSetWidgetTxClkSrc
 1131              	.LVL104:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1132              		.loc 1 2190 0
 1133 0014 0134     		adds	r4, r4, #1
 1134              	.LVL105:
 1135              	.L89:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1136              		.loc 1 2190 0 is_stmt 0 discriminator 1
 1137 0016 052C     		cmp	r4, #5
 1138 0018 F5D9     		bls	.L90
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
 1139              		.loc 1 2213 0 is_stmt 1
 1140              		@ sp needed
 1141              	.LVL106:
 1142 001a 10BD     		pop	{r4, pc}
 1143              	.L92:
 1144              		.align	2
 1145              	.L91:
 1146 001c 00000000 		.word	CapSense_1_dsFlash
 1147              		.cfi_endproc
 1148              	.LFE19:
 1149              		.size	CapSense_1_SsInitializeSourceSenseClk, .-CapSense_1_SsInitializeSourceSenseClk
 1150              		.section	.text.CapSense_1_SsInitialize,"ax",%progbits
 1151              		.align	2
 1152              		.global	CapSense_1_SsInitialize
 1153              		.code	16
 1154              		.thumb_func
 1155              		.type	CapSense_1_SsInitialize, %function
 1156              	CapSense_1_SsInitialize:
 1157              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 1158              		.loc 1 517 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 0
 1161              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 66


 1162 0000 10B5     		push	{r4, lr}
 1163              		.cfi_def_cfa_offset 8
 1164              		.cfi_offset 4, -8
 1165              		.cfi_offset 14, -4
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 1166              		.loc 1 524 0
 1167 0002 124B     		ldr	r3, .L97
 1168 0004 1B68     		ldr	r3, [r3]
 1169 0006 DBB2     		uxtb	r3, r3
 1170              	.LVL107:
 525:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1171              		.loc 1 525 0
 1172 0008 114A     		ldr	r2, .L97+4
 1173 000a 1371     		strb	r3, [r2, #4]
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1174              		.loc 1 527 0
 1175 000c 132B     		cmp	r3, #19
 1176 000e 05D8     		bhi	.L94
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 1177              		.loc 1 529 0
 1178 0010 1900     		movs	r1, r3
 1179 0012 1431     		adds	r1, r1, #20
 1180 0014 5171     		strb	r1, [r2, #5]
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 1181              		.loc 1 530 0
 1182 0016 2833     		adds	r3, r3, #40
 1183              	.LVL108:
 1184 0018 9371     		strb	r3, [r2, #6]
 1185 001a 0EE0     		b	.L95
 1186              	.LVL109:
 1187              	.L94:
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1188              		.loc 1 533 0
 1189 001c EB2B     		cmp	r3, #235
 1190 001e 06D9     		bls	.L96
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 1191              		.loc 1 535 0
 1192 0020 0B4A     		ldr	r2, .L97+4
 1193 0022 1900     		movs	r1, r3
 1194 0024 1439     		subs	r1, r1, #20
 1195 0026 5171     		strb	r1, [r2, #5]
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 1196              		.loc 1 536 0
 1197 0028 283B     		subs	r3, r3, #40
 1198              	.LVL110:
 1199 002a 9371     		strb	r3, [r2, #6]
 1200 002c 05E0     		b	.L95
 1201              	.LVL111:
 1202              	.L96:
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 1203              		.loc 1 541 0
 1204 002e 084A     		ldr	r2, .L97+4
 1205 0030 1900     		movs	r1, r3
 1206 0032 1439     		subs	r1, r1, #20
 1207 0034 5171     		strb	r1, [r2, #5]
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 1208              		.loc 1 542 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 67


 1209 0036 1433     		adds	r3, r3, #20
 1210              	.LVL112:
 1211 0038 9371     		strb	r3, [r2, #6]
 1212              	.L95:
 1213              	.LVL113:
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 1214              		.loc 1 556 0
 1215 003a FFF7FEFF 		bl	CapSense_1_SsInitializeSourceSenseClk
 1216              	.LVL114:
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1217              		.loc 1 561 0
 1218 003e FFF7FEFF 		bl	CapSense_1_SsSetIOsInDefaultState
 1219              	.LVL115:
 569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 1220              		.loc 1 569 0
 1221 0042 0220     		movs	r0, #2
 1222 0044 FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
 1223              	.LVL116:
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1224              		.loc 1 578 0
 1225 0048 0020     		movs	r0, #0
 1226              		@ sp needed
 1227 004a 10BD     		pop	{r4, pc}
 1228              	.L98:
 1229              		.align	2
 1230              	.L97:
 1231 004c 0C0F0340 		.word	1073942284
 1232 0050 00000000 		.word	.LANCHOR0
 1233              		.cfi_endproc
 1234              	.LFE5:
 1235              		.size	CapSense_1_SsInitialize, .-CapSense_1_SsInitialize
 1236              		.section	.text.CapSense_1_BistDischargeExtCapacitors,"ax",%progbits
 1237              		.align	2
 1238              		.global	CapSense_1_BistDischargeExtCapacitors
 1239              		.code	16
 1240              		.thumb_func
 1241              		.type	CapSense_1_BistDischargeExtCapacitors, %function
 1242              	CapSense_1_BistDischargeExtCapacitors:
 1243              	.LFB21:
2368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)) */
2369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
2378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2379:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrSize
2380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2385:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 68


2386:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2387:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  requirements:
2388:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2389:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2390:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2391:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2392:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2393:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2394:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2395:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  resolution The widget resolution.
2396:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2397:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2398:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2400:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2401:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 lfsrSize = 0u;
2403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Find LFSR value */
2405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((CapSense_1_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (CapSense_1_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC4_PERIOD)))
2408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC4;
2410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC3_PERIOD)))
2414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC3;
2416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC2_PERIOD)))
2420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC2;
2422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC1_PERIOD)))
2426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC1;
2428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2429:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (lfsrSize);
2435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2437:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2439:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrScale
2440:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2441:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2442:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 69


2443:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2444:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2445:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2446:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2447:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2448:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  period.
2449:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2450:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  range +/-10%.
2452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2454:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2455:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2456:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2458:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2459:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2460:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2461:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2462:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2463:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2464:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2465:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2466:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2467:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2468:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2470:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2471:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2472:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
2473:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2475:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrScale;
2479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrRange;
2480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrDither;
2481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2482:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     switch(lfsrSize)
2484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC1:
2486:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC1_RANGE;
2488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2490:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC2:
2491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC2_RANGE;
2493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2494:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC3:
2496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC3_RANGE;
2498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2499:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 70


2500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC4:
2501:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC4_RANGE;
2503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2504:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2505:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = 0u;
2508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
2515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((lfsrSize != CapSense_1_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2520:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(lfsrDither < CapSense_1_LFSR_DITHER_PERCENTAGE)
2522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale++;
2524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrDither <<=1uL;
2525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if(lfsrDither > CapSense_1_LFSR_DITHER_PERCENTAGE)
2528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale--;
2530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2536:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return ((uint8)lfsrScale);
2538:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2539:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2540:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****           ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))) */
2547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsClearCSDSensors
2552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 71


2557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  an inactive state.
2558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  connection is Ground or Hi-Z.
2564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsClearCSDSensors(void)
2567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
2569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsIndex;
2570:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 pinIndex;
2573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2574:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Declare ptr to sensor IO structure */
2577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2579:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_IO_STRUCT const *curSnsIOPtr;
2582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
2584:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
2586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2588:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
2589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                 CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlas
2590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Go through all the sensors in widget */
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_1_dsFlash.wdgtArray[wdgtIndex].total
2593:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Check ganged sns flag */
2596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[wdgtIndex].
2597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                  CapSense_1_GANGED_SNS_MASK))
2598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get sns pointer */
2600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
2601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                CapSense_1_dsFlash.wdgtArray[wdgtInd
2602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                snsIndex;
2603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             {
2606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinI
2608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Disconnect dedicated pin */
2610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 CapSense_1_CSDDisconnectSns(curDedicatedSnsIOPtr);
2611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             }
2612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 72


2614:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Disable sensor */
2616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable sensor */
2620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2621:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDGetColSnsClkDivider
2629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2630:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2633:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
2641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
2644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2645:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2648:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 CapSense_1_SsCSDGetColSnsClkDivider(uint32 widgetId)
2649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 retVal;
2651:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
2660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return (retVal);
2667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2668:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2669:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 73


2671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDSetColSnsClkDivider
2672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value for one-dimension widgets
2676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value based on the Component
2680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param
2684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widgetId Specifies the ID of the widget.
2685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return The Sense Clock Divider value for one-dimension widgets
2687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *        and the Column Sense Clock divider value for two-dimension widgets.
2688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsCSDSetColSnsClkDivider(uint32 widgetId, uint32 dividerVal)
2691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2695:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2697:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2698:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt->snsClk = (uint16)dividerVal;
2700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsRam.snsCsdClk = (uint16)dividerVal;
2702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2706:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDGetRowSnsClkDivider
2711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  two-dimension widgets.
2721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return
2726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 74


2728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 CapSense_1_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 retVal;
2733:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Get sense divider based on configuration */
2735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2736:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2737:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2740:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2747:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (retVal);
2749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2752:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2753:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDCalcPrsSize
2757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  requirements:
2765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  resolution The widget resolution.
2770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 CapSense_1_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 prsSize;
2777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 modClkDivider = 1u;
2778:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if ((CapSense_1_ENABLE != CapSense_1_CSDV2) && \
2780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK))
2781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     modClkDivider = (uint32)CapSense_1_dsRam.modCsdClk;
2782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((snsClkDivider * CapSense_1_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 75


2785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS12 mode */
2787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_12_CONFIG;
2788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if ((snsClkDivider * CapSense_1_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x0000000
2790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS8 mode */
2792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_8_CONFIG;
2793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
2795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set Direct clock mode */
2797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_CLK_SOURCE_DIRECT;
2798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (uint8)prsSize;
2801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2804:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2805:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_BistDischargeExtCapacitors
2809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors.
2813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors by connection them
2816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects 
2817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses 
2819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_BistDischargeExtCapacitors(void)
2823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1244              		.loc 1 2823 0
 1245              		.cfi_startproc
 1246              		@ args = 0, pretend = 0, frame = 0
 1247              		@ frame_needed = 0, uses_anonymous_args = 0
 1248 0000 70B5     		push	{r4, r5, r6, lr}
 1249              		.cfi_def_cfa_offset 16
 1250              		.cfi_offset 4, -16
 1251              		.cfi_offset 5, -12
 1252              		.cfi_offset 6, -8
 1253              		.cfi_offset 14, -4
2824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
2825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8  interruptState;
2826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         
2827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1254              		.loc 1 2828 0
 1255 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1256              	.LVL117:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 76


2829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR);
 1257              		.loc 1 2829 0
 1258 0006 134A     		ldr	r2, .L100
 1259 0008 1168     		ldr	r1, [r2]
 1260              	.LVL118:
2830:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_HSIOM_MASK);
 1261              		.loc 1 2830 0
 1262 000a 134B     		ldr	r3, .L100+4
 1263 000c 0B40     		ands	r3, r1
 1264              	.LVL119:
2831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR, newRegValue);
 1265              		.loc 1 2831 0
 1266 000e 1360     		str	r3, [r2]
2832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1267              		.loc 1 2832 0
 1268 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1269              	.LVL120:
2833:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2835:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1270              		.loc 1 2835 0
 1271 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1272              	.LVL121:
2836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_DR_PTR);
 1273              		.loc 1 2836 0
 1274 0018 104A     		ldr	r2, .L100+8
 1275 001a 1368     		ldr	r3, [r2]
 1276              	.LVL122:
2837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_DR_MASK);
 1277              		.loc 1 2837 0
 1278 001c 0C21     		movs	r1, #12
 1279 001e 8B43     		bics	r3, r1
 1280              	.LVL123:
2838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_DR_PTR, newRegValue);
 1281              		.loc 1 2838 0
 1282 0020 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1283              		.loc 1 2839 0
 1284 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1285              	.LVL124:
2840:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1286              		.loc 1 2842 0
 1287 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 1288              	.LVL125:
2843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1289              		.loc 1 2843 0
 1290 002a 0D4C     		ldr	r4, .L100+12
 1291 002c 2368     		ldr	r3, [r4]
 1292              	.LVL126:
2844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1293              		.loc 1 2844 0
 1294 002e 0D4D     		ldr	r5, .L100+16
 1295 0030 2B40     		ands	r3, r5
 1296              	.LVL127:
2845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (CapSense_1_EXT_CAP_PC_STRONG_CFG);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 77


 1297              		.loc 1 2845 0
 1298 0032 D822     		movs	r2, #216
 1299 0034 1201     		lsls	r2, r2, #4
 1300 0036 1343     		orrs	r3, r2
 1301              	.LVL128:
2846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1302              		.loc 1 2846 0
 1303 0038 2360     		str	r3, [r4]
2847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1304              		.loc 1 2847 0
 1305 003a FFF7FEFF 		bl	CyExitCriticalSection
 1306              	.LVL129:
2848:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Delay to discharge external capacitors */
2850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyDelayUs(CapSense_1_EXT_CAP_DISCHARGE_TIME);
 1307              		.loc 1 2850 0
 1308 003e 0120     		movs	r0, #1
 1309 0040 FFF7FEFF 		bl	CyDelayUs
 1310              	.LVL130:
2851:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1311              		.loc 1 2853 0
 1312 0044 FFF7FEFF 		bl	CyEnterCriticalSection
 1313              	.LVL131:
2854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1314              		.loc 1 2854 0
 1315 0048 2368     		ldr	r3, [r4]
 1316              	.LVL132:
2855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1317              		.loc 1 2855 0
 1318 004a 1D40     		ands	r5, r3
 1319              	.LVL133:
2856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1320              		.loc 1 2856 0
 1321 004c 2560     		str	r5, [r4]
2857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1322              		.loc 1 2857 0
 1323 004e FFF7FEFF 		bl	CyExitCriticalSection
 1324              	.LVL134:
2858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1325              		.loc 1 2858 0
 1326              		@ sp needed
 1327              	.LVL135:
 1328 0052 70BD     		pop	{r4, r5, r6, pc}
 1329              	.L101:
 1330              		.align	2
 1331              	.L100:
 1332 0054 00040240 		.word	1073873920
 1333 0058 FF00FFFF 		.word	-65281
 1334 005c 00040440 		.word	1074004992
 1335 0060 08040440 		.word	1074005000
 1336 0064 3FF0FFFF 		.word	-4033
 1337              		.cfi_endproc
 1338              	.LFE21:
 1339              		.size	CapSense_1_BistDischargeExtCapacitors, .-CapSense_1_BistDischargeExtCapacitors
 1340              		.comm	CapSense_1_curSnsIOPtr,4,4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 78


 1341              		.global	CapSense_1_curFlashWdgtPtr
 1342              		.comm	CapSense_1_curRamSnsPtr,4,4
 1343              		.global	CapSense_1_requestScanAllWidget
 1344              		.global	CapSense_1_sensorIndex
 1345              		.global	CapSense_1_widgetIndex
 1346              		.global	CapSense_1_immunity
 1347              		.global	CapSense_1_scanFreqIndex
 1348              		.global	CapSense_1_currentSenseMethod
 1349              		.bss
 1350              		.align	2
 1351              		.set	.LANCHOR0,. + 0
 1352              		.type	CapSense_1_currentSenseMethod, %object
 1353              		.size	CapSense_1_currentSenseMethod, 1
 1354              	CapSense_1_currentSenseMethod:
 1355 0000 00       		.space	1
 1356              		.type	CapSense_1_requestScanAllWidget, %object
 1357              		.size	CapSense_1_requestScanAllWidget, 1
 1358              	CapSense_1_requestScanAllWidget:
 1359 0001 00       		.space	1
 1360              		.type	CapSense_1_widgetIndex, %object
 1361              		.size	CapSense_1_widgetIndex, 1
 1362              	CapSense_1_widgetIndex:
 1363 0002 00       		.space	1
 1364 0003 00       		.space	1
 1365              		.type	CapSense_1_immunity, %object
 1366              		.size	CapSense_1_immunity, 3
 1367              	CapSense_1_immunity:
 1368 0004 000000   		.space	3
 1369 0007 00       		.space	1
 1370              		.type	CapSense_1_curFlashWdgtPtr, %object
 1371              		.size	CapSense_1_curFlashWdgtPtr, 4
 1372              	CapSense_1_curFlashWdgtPtr:
 1373 0008 00000000 		.space	4
 1374              		.type	CapSense_1_sensorIndex, %object
 1375              		.size	CapSense_1_sensorIndex, 1
 1376              	CapSense_1_sensorIndex:
 1377 000c 00       		.space	1
 1378              		.type	CapSense_1_scanFreqIndex, %object
 1379              		.size	CapSense_1_scanFreqIndex, 1
 1380              	CapSense_1_scanFreqIndex:
 1381 000d 00       		.space	1
 1382              		.text
 1383              	.Letext0:
 1384              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1385              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1386              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1387              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_SensingCSX_LL.h"
 1388              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 1389              		.file 7 "Generated_Source\\PSoC4\\CapSense_1_ISR.h"
 1390              		.section	.debug_info,"",%progbits
 1391              	.Ldebug_info0:
 1392 0000 A40D0000 		.4byte	0xda4
 1393 0004 0400     		.2byte	0x4
 1394 0006 00000000 		.4byte	.Ldebug_abbrev0
 1395 000a 04       		.byte	0x4
 1396 000b 01       		.uleb128 0x1
 1397 000c B6020000 		.4byte	.LASF164
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 79


 1398 0010 0C       		.byte	0xc
 1399 0011 D0060000 		.4byte	.LASF165
 1400 0015 6D020000 		.4byte	.LASF166
 1401 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1402 001d 00000000 		.4byte	0
 1403 0021 00000000 		.4byte	.Ldebug_line0
 1404 0025 02       		.uleb128 0x2
 1405 0026 01       		.byte	0x1
 1406 0027 06       		.byte	0x6
 1407 0028 380A0000 		.4byte	.LASF0
 1408 002c 02       		.uleb128 0x2
 1409 002d 01       		.byte	0x1
 1410 002e 08       		.byte	0x8
 1411 002f 90090000 		.4byte	.LASF1
 1412 0033 02       		.uleb128 0x2
 1413 0034 02       		.byte	0x2
 1414 0035 05       		.byte	0x5
 1415 0036 F2070000 		.4byte	.LASF2
 1416 003a 02       		.uleb128 0x2
 1417 003b 02       		.byte	0x2
 1418 003c 07       		.byte	0x7
 1419 003d 490A0000 		.4byte	.LASF3
 1420 0041 02       		.uleb128 0x2
 1421 0042 04       		.byte	0x4
 1422 0043 05       		.byte	0x5
 1423 0044 17080000 		.4byte	.LASF4
 1424 0048 02       		.uleb128 0x2
 1425 0049 04       		.byte	0x4
 1426 004a 07       		.byte	0x7
 1427 004b 28090000 		.4byte	.LASF5
 1428 004f 02       		.uleb128 0x2
 1429 0050 08       		.byte	0x8
 1430 0051 05       		.byte	0x5
 1431 0052 74050000 		.4byte	.LASF6
 1432 0056 02       		.uleb128 0x2
 1433 0057 08       		.byte	0x8
 1434 0058 07       		.byte	0x7
 1435 0059 71030000 		.4byte	.LASF7
 1436 005d 03       		.uleb128 0x3
 1437 005e 04       		.byte	0x4
 1438 005f 05       		.byte	0x5
 1439 0060 696E7400 		.ascii	"int\000"
 1440 0064 02       		.uleb128 0x2
 1441 0065 04       		.byte	0x4
 1442 0066 07       		.byte	0x7
 1443 0067 AC000000 		.4byte	.LASF8
 1444 006b 04       		.uleb128 0x4
 1445 006c 970A0000 		.4byte	.LASF9
 1446 0070 02       		.byte	0x2
 1447 0071 E401     		.2byte	0x1e4
 1448 0073 2C000000 		.4byte	0x2c
 1449 0077 04       		.uleb128 0x4
 1450 0078 36050000 		.4byte	.LASF10
 1451 007c 02       		.byte	0x2
 1452 007d E501     		.2byte	0x1e5
 1453 007f 3A000000 		.4byte	0x3a
 1454 0083 04       		.uleb128 0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 80


 1455 0084 73060000 		.4byte	.LASF11
 1456 0088 02       		.byte	0x2
 1457 0089 E601     		.2byte	0x1e6
 1458 008b 48000000 		.4byte	0x48
 1459 008f 02       		.uleb128 0x2
 1460 0090 04       		.byte	0x4
 1461 0091 04       		.byte	0x4
 1462 0092 61020000 		.4byte	.LASF12
 1463 0096 02       		.uleb128 0x2
 1464 0097 08       		.byte	0x8
 1465 0098 04       		.byte	0x4
 1466 0099 9D0A0000 		.4byte	.LASF13
 1467 009d 02       		.uleb128 0x2
 1468 009e 01       		.byte	0x1
 1469 009f 08       		.byte	0x8
 1470 00a0 F6040000 		.4byte	.LASF14
 1471 00a4 04       		.uleb128 0x4
 1472 00a5 87090000 		.4byte	.LASF15
 1473 00a9 02       		.byte	0x2
 1474 00aa 8602     		.2byte	0x286
 1475 00ac 48000000 		.4byte	0x48
 1476 00b0 05       		.uleb128 0x5
 1477 00b1 6B000000 		.4byte	0x6b
 1478 00b5 04       		.uleb128 0x4
 1479 00b6 7E070000 		.4byte	.LASF16
 1480 00ba 02       		.byte	0x2
 1481 00bb 9002     		.2byte	0x290
 1482 00bd C1000000 		.4byte	0xc1
 1483 00c1 05       		.uleb128 0x5
 1484 00c2 83000000 		.4byte	0x83
 1485 00c6 04       		.uleb128 0x4
 1486 00c7 27060000 		.4byte	.LASF17
 1487 00cb 02       		.byte	0x2
 1488 00cc A002     		.2byte	0x2a0
 1489 00ce D2000000 		.4byte	0xd2
 1490 00d2 06       		.uleb128 0x6
 1491 00d3 04       		.byte	0x4
 1492 00d4 D8000000 		.4byte	0xd8
 1493 00d8 07       		.uleb128 0x7
 1494 00d9 04       		.uleb128 0x4
 1495 00da 82050000 		.4byte	.LASF18
 1496 00de 03       		.byte	0x3
 1497 00df 5B01     		.2byte	0x15b
 1498 00e1 77000000 		.4byte	0x77
 1499 00e5 04       		.uleb128 0x4
 1500 00e6 C3030000 		.4byte	.LASF19
 1501 00ea 03       		.byte	0x3
 1502 00eb 5F01     		.2byte	0x15f
 1503 00ed 6B000000 		.4byte	0x6b
 1504 00f1 08       		.uleb128 0x8
 1505 00f2 01       		.byte	0x1
 1506 00f3 2C000000 		.4byte	0x2c
 1507 00f7 04       		.byte	0x4
 1508 00f8 70       		.byte	0x70
 1509 00f9 1C010000 		.4byte	0x11c
 1510 00fd 09       		.uleb128 0x9
 1511 00fe 95060000 		.4byte	.LASF20
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 81


 1512 0102 00       		.byte	0
 1513 0103 09       		.uleb128 0x9
 1514 0104 02090000 		.4byte	.LASF21
 1515 0108 01       		.byte	0x1
 1516 0109 09       		.uleb128 0x9
 1517 010a 70080000 		.4byte	.LASF22
 1518 010e 02       		.byte	0x2
 1519 010f 09       		.uleb128 0x9
 1520 0110 3B040000 		.4byte	.LASF23
 1521 0114 03       		.byte	0x3
 1522 0115 09       		.uleb128 0x9
 1523 0116 60070000 		.4byte	.LASF24
 1524 011a 04       		.byte	0x4
 1525 011b 00       		.byte	0
 1526 011c 0A       		.uleb128 0xa
 1527 011d E0030000 		.4byte	.LASF25
 1528 0121 04       		.byte	0x4
 1529 0122 76       		.byte	0x76
 1530 0123 F1000000 		.4byte	0xf1
 1531 0127 0B       		.uleb128 0xb
 1532 0128 0A       		.byte	0xa
 1533 0129 04       		.byte	0x4
 1534 012a 8E       		.byte	0x8e
 1535 012b 90010000 		.4byte	0x190
 1536 012f 0C       		.uleb128 0xc
 1537 0130 3D050000 		.4byte	.LASF26
 1538 0134 04       		.byte	0x4
 1539 0135 93       		.byte	0x93
 1540 0136 77000000 		.4byte	0x77
 1541 013a 00       		.byte	0
 1542 013b 0C       		.uleb128 0xc
 1543 013c 52090000 		.4byte	.LASF27
 1544 0140 04       		.byte	0x4
 1545 0141 98       		.byte	0x98
 1546 0142 D9000000 		.4byte	0xd9
 1547 0146 02       		.byte	0x2
 1548 0147 0C       		.uleb128 0xc
 1549 0148 EE040000 		.4byte	.LASF28
 1550 014c 04       		.byte	0x4
 1551 014d 9D       		.byte	0x9d
 1552 014e 6B000000 		.4byte	0x6b
 1553 0152 04       		.byte	0x4
 1554 0153 0C       		.uleb128 0xc
 1555 0154 09060000 		.4byte	.LASF29
 1556 0158 04       		.byte	0x4
 1557 0159 A2       		.byte	0xa2
 1558 015a 6B000000 		.4byte	0x6b
 1559 015e 05       		.byte	0x5
 1560 015f 0C       		.uleb128 0xc
 1561 0160 7A060000 		.4byte	.LASF30
 1562 0164 04       		.byte	0x4
 1563 0165 A8       		.byte	0xa8
 1564 0166 6B000000 		.4byte	0x6b
 1565 016a 06       		.byte	0x6
 1566 016b 0C       		.uleb128 0xc
 1567 016c 9C050000 		.4byte	.LASF31
 1568 0170 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 82


 1569 0171 AE       		.byte	0xae
 1570 0172 6B000000 		.4byte	0x6b
 1571 0176 07       		.byte	0x7
 1572 0177 0C       		.uleb128 0xc
 1573 0178 5A040000 		.4byte	.LASF32
 1574 017c 04       		.byte	0x4
 1575 017d B5       		.byte	0xb5
 1576 017e E5000000 		.4byte	0xe5
 1577 0182 08       		.byte	0x8
 1578 0183 0C       		.uleb128 0xc
 1579 0184 DC070000 		.4byte	.LASF33
 1580 0188 04       		.byte	0x4
 1581 0189 BA       		.byte	0xba
 1582 018a 6B000000 		.4byte	0x6b
 1583 018e 09       		.byte	0x9
 1584 018f 00       		.byte	0
 1585 0190 0A       		.uleb128 0xa
 1586 0191 4C060000 		.4byte	.LASF34
 1587 0195 04       		.byte	0x4
 1588 0196 BB       		.byte	0xbb
 1589 0197 27010000 		.4byte	0x127
 1590 019b 0B       		.uleb128 0xb
 1591 019c 0A       		.byte	0xa
 1592 019d 04       		.byte	0x4
 1593 019e C0       		.byte	0xc0
 1594 019f 04020000 		.4byte	0x204
 1595 01a3 0C       		.uleb128 0xc
 1596 01a4 3D050000 		.4byte	.LASF26
 1597 01a8 04       		.byte	0x4
 1598 01a9 C5       		.byte	0xc5
 1599 01aa 77000000 		.4byte	0x77
 1600 01ae 00       		.byte	0
 1601 01af 0C       		.uleb128 0xc
 1602 01b0 52090000 		.4byte	.LASF27
 1603 01b4 04       		.byte	0x4
 1604 01b5 CA       		.byte	0xca
 1605 01b6 D9000000 		.4byte	0xd9
 1606 01ba 02       		.byte	0x2
 1607 01bb 0C       		.uleb128 0xc
 1608 01bc EE040000 		.4byte	.LASF28
 1609 01c0 04       		.byte	0x4
 1610 01c1 CF       		.byte	0xcf
 1611 01c2 6B000000 		.4byte	0x6b
 1612 01c6 04       		.byte	0x4
 1613 01c7 0C       		.uleb128 0xc
 1614 01c8 09060000 		.4byte	.LASF29
 1615 01cc 04       		.byte	0x4
 1616 01cd D4       		.byte	0xd4
 1617 01ce 6B000000 		.4byte	0x6b
 1618 01d2 05       		.byte	0x5
 1619 01d3 0C       		.uleb128 0xc
 1620 01d4 7A060000 		.4byte	.LASF30
 1621 01d8 04       		.byte	0x4
 1622 01d9 DA       		.byte	0xda
 1623 01da 6B000000 		.4byte	0x6b
 1624 01de 06       		.byte	0x6
 1625 01df 0C       		.uleb128 0xc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 83


 1626 01e0 9C050000 		.4byte	.LASF31
 1627 01e4 04       		.byte	0x4
 1628 01e5 E0       		.byte	0xe0
 1629 01e6 6B000000 		.4byte	0x6b
 1630 01ea 07       		.byte	0x7
 1631 01eb 0C       		.uleb128 0xc
 1632 01ec 5A040000 		.4byte	.LASF32
 1633 01f0 04       		.byte	0x4
 1634 01f1 E7       		.byte	0xe7
 1635 01f2 E5000000 		.4byte	0xe5
 1636 01f6 08       		.byte	0x8
 1637 01f7 0C       		.uleb128 0xc
 1638 01f8 DC070000 		.4byte	.LASF33
 1639 01fc 04       		.byte	0x4
 1640 01fd EC       		.byte	0xec
 1641 01fe 6B000000 		.4byte	0x6b
 1642 0202 09       		.byte	0x9
 1643 0203 00       		.byte	0
 1644 0204 0A       		.uleb128 0xa
 1645 0205 F00A0000 		.4byte	.LASF35
 1646 0209 04       		.byte	0x4
 1647 020a ED       		.byte	0xed
 1648 020b 9B010000 		.4byte	0x19b
 1649 020f 0B       		.uleb128 0xb
 1650 0210 3C       		.byte	0x3c
 1651 0211 04       		.byte	0x4
 1652 0212 F3       		.byte	0xf3
 1653 0213 64020000 		.4byte	0x264
 1654 0217 0C       		.uleb128 0xc
 1655 0218 8E080000 		.4byte	.LASF36
 1656 021c 04       		.byte	0x4
 1657 021d F8       		.byte	0xf8
 1658 021e 04020000 		.4byte	0x204
 1659 0222 00       		.byte	0
 1660 0223 0C       		.uleb128 0xc
 1661 0224 96080000 		.4byte	.LASF37
 1662 0228 04       		.byte	0x4
 1663 0229 FD       		.byte	0xfd
 1664 022a 04020000 		.4byte	0x204
 1665 022e 0A       		.byte	0xa
 1666 022f 0D       		.uleb128 0xd
 1667 0230 9E080000 		.4byte	.LASF38
 1668 0234 04       		.byte	0x4
 1669 0235 0201     		.2byte	0x102
 1670 0237 04020000 		.4byte	0x204
 1671 023b 14       		.byte	0x14
 1672 023c 0D       		.uleb128 0xd
 1673 023d A6080000 		.4byte	.LASF39
 1674 0241 04       		.byte	0x4
 1675 0242 0701     		.2byte	0x107
 1676 0244 04020000 		.4byte	0x204
 1677 0248 1E       		.byte	0x1e
 1678 0249 0D       		.uleb128 0xd
 1679 024a AE080000 		.4byte	.LASF40
 1680 024e 04       		.byte	0x4
 1681 024f 0C01     		.2byte	0x10c
 1682 0251 04020000 		.4byte	0x204
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 84


 1683 0255 28       		.byte	0x28
 1684 0256 0D       		.uleb128 0xd
 1685 0257 B6080000 		.4byte	.LASF41
 1686 025b 04       		.byte	0x4
 1687 025c 1101     		.2byte	0x111
 1688 025e 04020000 		.4byte	0x204
 1689 0262 32       		.byte	0x32
 1690 0263 00       		.byte	0
 1691 0264 04       		.uleb128 0x4
 1692 0265 ED010000 		.4byte	.LASF42
 1693 0269 04       		.byte	0x4
 1694 026a 1201     		.2byte	0x112
 1695 026c 0F020000 		.4byte	0x20f
 1696 0270 0E       		.uleb128 0xe
 1697 0271 18       		.byte	0x18
 1698 0272 04       		.byte	0x4
 1699 0273 1801     		.2byte	0x118
 1700 0275 C8020000 		.4byte	0x2c8
 1701 0279 0F       		.uleb128 0xf
 1702 027a 72617700 		.ascii	"raw\000"
 1703 027e 04       		.byte	0x4
 1704 027f 1D01     		.2byte	0x11d
 1705 0281 C8020000 		.4byte	0x2c8
 1706 0285 00       		.byte	0
 1707 0286 0D       		.uleb128 0xd
 1708 0287 440A0000 		.4byte	.LASF43
 1709 028b 04       		.byte	0x4
 1710 028c 2201     		.2byte	0x122
 1711 028e C8020000 		.4byte	0x2c8
 1712 0292 06       		.byte	0x6
 1713 0293 0D       		.uleb128 0xd
 1714 0294 7A090000 		.4byte	.LASF44
 1715 0298 04       		.byte	0x4
 1716 0299 2801     		.2byte	0x128
 1717 029b DF020000 		.4byte	0x2df
 1718 029f 0C       		.byte	0xc
 1719 02a0 0D       		.uleb128 0xd
 1720 02a1 5C080000 		.4byte	.LASF45
 1721 02a5 04       		.byte	0x4
 1722 02a6 2D01     		.2byte	0x12d
 1723 02a8 D9000000 		.4byte	0xd9
 1724 02ac 10       		.byte	0x10
 1725 02ad 0D       		.uleb128 0xd
 1726 02ae A40A0000 		.4byte	.LASF46
 1727 02b2 04       		.byte	0x4
 1728 02b3 3201     		.2byte	0x132
 1729 02b5 EF020000 		.4byte	0x2ef
 1730 02b9 12       		.byte	0x12
 1731 02ba 0D       		.uleb128 0xd
 1732 02bb 65050000 		.4byte	.LASF47
 1733 02bf 04       		.byte	0x4
 1734 02c0 3701     		.2byte	0x137
 1735 02c2 DF020000 		.4byte	0x2df
 1736 02c6 15       		.byte	0x15
 1737 02c7 00       		.byte	0
 1738 02c8 10       		.uleb128 0x10
 1739 02c9 77000000 		.4byte	0x77
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 85


 1740 02cd D8020000 		.4byte	0x2d8
 1741 02d1 11       		.uleb128 0x11
 1742 02d2 D8020000 		.4byte	0x2d8
 1743 02d6 02       		.byte	0x2
 1744 02d7 00       		.byte	0
 1745 02d8 02       		.uleb128 0x2
 1746 02d9 04       		.byte	0x4
 1747 02da 07       		.byte	0x7
 1748 02db E9070000 		.4byte	.LASF48
 1749 02df 10       		.uleb128 0x10
 1750 02e0 6B000000 		.4byte	0x6b
 1751 02e4 EF020000 		.4byte	0x2ef
 1752 02e8 11       		.uleb128 0x11
 1753 02e9 D8020000 		.4byte	0x2d8
 1754 02ed 02       		.byte	0x2
 1755 02ee 00       		.byte	0
 1756 02ef 10       		.uleb128 0x10
 1757 02f0 E5000000 		.4byte	0xe5
 1758 02f4 FF020000 		.4byte	0x2ff
 1759 02f8 11       		.uleb128 0x11
 1760 02f9 D8020000 		.4byte	0x2d8
 1761 02fd 02       		.byte	0x2
 1762 02fe 00       		.byte	0
 1763 02ff 04       		.uleb128 0x4
 1764 0300 B20A0000 		.4byte	.LASF49
 1765 0304 04       		.byte	0x4
 1766 0305 3801     		.2byte	0x138
 1767 0307 70020000 		.4byte	0x270
 1768 030b 0E       		.uleb128 0xe
 1769 030c 90       		.byte	0x90
 1770 030d 04       		.byte	0x4
 1771 030e 3E01     		.2byte	0x13e
 1772 0310 63030000 		.4byte	0x363
 1773 0314 0D       		.uleb128 0xd
 1774 0315 8E080000 		.4byte	.LASF36
 1775 0319 04       		.byte	0x4
 1776 031a 4301     		.2byte	0x143
 1777 031c 63030000 		.4byte	0x363
 1778 0320 00       		.byte	0
 1779 0321 0D       		.uleb128 0xd
 1780 0322 96080000 		.4byte	.LASF37
 1781 0326 04       		.byte	0x4
 1782 0327 4801     		.2byte	0x148
 1783 0329 63030000 		.4byte	0x363
 1784 032d 18       		.byte	0x18
 1785 032e 0D       		.uleb128 0xd
 1786 032f 9E080000 		.4byte	.LASF38
 1787 0333 04       		.byte	0x4
 1788 0334 4D01     		.2byte	0x14d
 1789 0336 63030000 		.4byte	0x363
 1790 033a 30       		.byte	0x30
 1791 033b 0D       		.uleb128 0xd
 1792 033c A6080000 		.4byte	.LASF39
 1793 0340 04       		.byte	0x4
 1794 0341 5201     		.2byte	0x152
 1795 0343 63030000 		.4byte	0x363
 1796 0347 48       		.byte	0x48
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 86


 1797 0348 0D       		.uleb128 0xd
 1798 0349 AE080000 		.4byte	.LASF40
 1799 034d 04       		.byte	0x4
 1800 034e 5701     		.2byte	0x157
 1801 0350 63030000 		.4byte	0x363
 1802 0354 60       		.byte	0x60
 1803 0355 0D       		.uleb128 0xd
 1804 0356 B6080000 		.4byte	.LASF41
 1805 035a 04       		.byte	0x4
 1806 035b 5C01     		.2byte	0x15c
 1807 035d 63030000 		.4byte	0x363
 1808 0361 78       		.byte	0x78
 1809 0362 00       		.byte	0
 1810 0363 10       		.uleb128 0x10
 1811 0364 FF020000 		.4byte	0x2ff
 1812 0368 73030000 		.4byte	0x373
 1813 036c 11       		.uleb128 0x11
 1814 036d D8020000 		.4byte	0x2d8
 1815 0371 00       		.byte	0
 1816 0372 00       		.byte	0
 1817 0373 04       		.uleb128 0x4
 1818 0374 AC060000 		.4byte	.LASF50
 1819 0378 04       		.byte	0x4
 1820 0379 5D01     		.2byte	0x15d
 1821 037b 0B030000 		.4byte	0x30b
 1822 037f 0E       		.uleb128 0xe
 1823 0380 FC       		.byte	0xfc
 1824 0381 04       		.byte	0x4
 1825 0382 6301     		.2byte	0x163
 1826 0384 73040000 		.4byte	0x473
 1827 0388 0D       		.uleb128 0xd
 1828 0389 97070000 		.4byte	.LASF51
 1829 038d 04       		.byte	0x4
 1830 038e 6A01     		.2byte	0x16a
 1831 0390 77000000 		.4byte	0x77
 1832 0394 00       		.byte	0
 1833 0395 0D       		.uleb128 0xd
 1834 0396 DA0A0000 		.4byte	.LASF52
 1835 039a 04       		.byte	0x4
 1836 039b 6F01     		.2byte	0x16f
 1837 039d 77000000 		.4byte	0x77
 1838 03a1 02       		.byte	0x2
 1839 03a2 0D       		.uleb128 0xd
 1840 03a3 FF000000 		.4byte	.LASF53
 1841 03a7 04       		.byte	0x4
 1842 03a8 7401     		.2byte	0x174
 1843 03aa 77000000 		.4byte	0x77
 1844 03ae 04       		.byte	0x4
 1845 03af 0D       		.uleb128 0xd
 1846 03b0 61080000 		.4byte	.LASF54
 1847 03b4 04       		.byte	0x4
 1848 03b5 7A01     		.2byte	0x17a
 1849 03b7 77000000 		.4byte	0x77
 1850 03bb 06       		.byte	0x6
 1851 03bc 0D       		.uleb128 0xd
 1852 03bd F3000000 		.4byte	.LASF55
 1853 03c1 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 87


 1854 03c2 7F01     		.2byte	0x17f
 1855 03c4 77000000 		.4byte	0x77
 1856 03c8 08       		.byte	0x8
 1857 03c9 0D       		.uleb128 0xd
 1858 03ca 5E050000 		.4byte	.LASF56
 1859 03ce 04       		.byte	0x4
 1860 03cf 8401     		.2byte	0x184
 1861 03d1 C1000000 		.4byte	0xc1
 1862 03d5 0C       		.byte	0xc
 1863 03d6 0D       		.uleb128 0xd
 1864 03d7 20080000 		.4byte	.LASF57
 1865 03db 04       		.byte	0x4
 1866 03dc 8A01     		.2byte	0x18a
 1867 03de 73040000 		.4byte	0x473
 1868 03e2 10       		.byte	0x10
 1869 03e3 0D       		.uleb128 0xd
 1870 03e4 C6080000 		.4byte	.LASF58
 1871 03e8 04       		.byte	0x4
 1872 03e9 9101     		.2byte	0x191
 1873 03eb 73040000 		.4byte	0x473
 1874 03ef 14       		.byte	0x14
 1875 03f0 0D       		.uleb128 0xd
 1876 03f1 C3070000 		.4byte	.LASF59
 1877 03f5 04       		.byte	0x4
 1878 03f6 A101     		.2byte	0x1a1
 1879 03f8 83040000 		.4byte	0x483
 1880 03fc 18       		.byte	0x18
 1881 03fd 0D       		.uleb128 0xd
 1882 03fe 1C060000 		.4byte	.LASF60
 1883 0402 04       		.byte	0x4
 1884 0403 A701     		.2byte	0x1a7
 1885 0405 77000000 		.4byte	0x77
 1886 0409 1E       		.byte	0x1e
 1887 040a 0D       		.uleb128 0xd
 1888 040b AB090000 		.4byte	.LASF61
 1889 040f 04       		.byte	0x4
 1890 0410 AC01     		.2byte	0x1ac
 1891 0412 6B000000 		.4byte	0x6b
 1892 0416 20       		.byte	0x20
 1893 0417 0D       		.uleb128 0xd
 1894 0418 12060000 		.4byte	.LASF62
 1895 041c 04       		.byte	0x4
 1896 041d B101     		.2byte	0x1b1
 1897 041f 77000000 		.4byte	0x77
 1898 0423 22       		.byte	0x22
 1899 0424 0D       		.uleb128 0xd
 1900 0425 D7050000 		.4byte	.LASF63
 1901 0429 04       		.byte	0x4
 1902 042a B601     		.2byte	0x1b6
 1903 042c 64020000 		.4byte	0x264
 1904 0430 24       		.byte	0x24
 1905 0431 0D       		.uleb128 0xd
 1906 0432 69030000 		.4byte	.LASF64
 1907 0436 04       		.byte	0x4
 1908 0437 BB01     		.2byte	0x1bb
 1909 0439 73030000 		.4byte	0x373
 1910 043d 60       		.byte	0x60
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 88


 1911 043e 0D       		.uleb128 0xd
 1912 043f 72000000 		.4byte	.LASF65
 1913 0443 04       		.byte	0x4
 1914 0444 C001     		.2byte	0x1c0
 1915 0446 6B000000 		.4byte	0x6b
 1916 044a F0       		.byte	0xf0
 1917 044b 0D       		.uleb128 0xd
 1918 044c 88030000 		.4byte	.LASF66
 1919 0450 04       		.byte	0x4
 1920 0451 C501     		.2byte	0x1c5
 1921 0453 6B000000 		.4byte	0x6b
 1922 0457 F1       		.byte	0xf1
 1923 0458 0D       		.uleb128 0xd
 1924 0459 84070000 		.4byte	.LASF67
 1925 045d 04       		.byte	0x4
 1926 045e CA01     		.2byte	0x1ca
 1927 0460 77000000 		.4byte	0x77
 1928 0464 F2       		.byte	0xf2
 1929 0465 0D       		.uleb128 0xd
 1930 0466 ED050000 		.4byte	.LASF68
 1931 046a 04       		.byte	0x4
 1932 046b CF01     		.2byte	0x1cf
 1933 046d C8020000 		.4byte	0x2c8
 1934 0471 F4       		.byte	0xf4
 1935 0472 00       		.byte	0
 1936 0473 10       		.uleb128 0x10
 1937 0474 83000000 		.4byte	0x83
 1938 0478 83040000 		.4byte	0x483
 1939 047c 11       		.uleb128 0x11
 1940 047d D8020000 		.4byte	0x2d8
 1941 0481 00       		.byte	0
 1942 0482 00       		.byte	0
 1943 0483 10       		.uleb128 0x10
 1944 0484 6B000000 		.4byte	0x6b
 1945 0488 93040000 		.4byte	0x493
 1946 048c 11       		.uleb128 0x11
 1947 048d D8020000 		.4byte	0x2d8
 1948 0491 05       		.byte	0x5
 1949 0492 00       		.byte	0
 1950 0493 04       		.uleb128 0x4
 1951 0494 48050000 		.4byte	.LASF69
 1952 0498 04       		.byte	0x4
 1953 0499 D001     		.2byte	0x1d0
 1954 049b 7F030000 		.4byte	0x37f
 1955 049f 0E       		.uleb128 0xe
 1956 04a0 1C       		.byte	0x1c
 1957 04a1 04       		.byte	0x4
 1958 04a2 D601     		.2byte	0x1d6
 1959 04a4 1E050000 		.4byte	0x51e
 1960 04a8 0D       		.uleb128 0xd
 1961 04a9 6A060000 		.4byte	.LASF70
 1962 04ad 04       		.byte	0x4
 1963 04ae DB01     		.2byte	0x1db
 1964 04b0 1E050000 		.4byte	0x51e
 1965 04b4 00       		.byte	0
 1966 04b5 0D       		.uleb128 0xd
 1967 04b6 6E050000 		.4byte	.LASF71
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 89


 1968 04ba 04       		.byte	0x4
 1969 04bb E001     		.2byte	0x1e0
 1970 04bd 1E050000 		.4byte	0x51e
 1971 04c1 04       		.byte	0x4
 1972 04c2 0D       		.uleb128 0xd
 1973 04c3 1A040000 		.4byte	.LASF72
 1974 04c7 04       		.byte	0x4
 1975 04c8 E501     		.2byte	0x1e5
 1976 04ca 1E050000 		.4byte	0x51e
 1977 04ce 08       		.byte	0x8
 1978 04cf 0D       		.uleb128 0xd
 1979 04d0 6A080000 		.4byte	.LASF73
 1980 04d4 04       		.byte	0x4
 1981 04d5 EA01     		.2byte	0x1ea
 1982 04d7 1E050000 		.4byte	0x51e
 1983 04db 0C       		.byte	0xc
 1984 04dc 0D       		.uleb128 0xd
 1985 04dd F2090000 		.4byte	.LASF74
 1986 04e1 04       		.byte	0x4
 1987 04e2 EF01     		.2byte	0x1ef
 1988 04e4 83000000 		.4byte	0x83
 1989 04e8 10       		.byte	0x10
 1990 04e9 0D       		.uleb128 0xd
 1991 04ea CB060000 		.4byte	.LASF75
 1992 04ee 04       		.byte	0x4
 1993 04ef F401     		.2byte	0x1f4
 1994 04f1 83000000 		.4byte	0x83
 1995 04f5 14       		.byte	0x14
 1996 04f6 0D       		.uleb128 0xd
 1997 04f7 2B050000 		.4byte	.LASF76
 1998 04fb 04       		.byte	0x4
 1999 04fc F901     		.2byte	0x1f9
 2000 04fe 6B000000 		.4byte	0x6b
 2001 0502 18       		.byte	0x18
 2002 0503 0D       		.uleb128 0xd
 2003 0504 20090000 		.4byte	.LASF77
 2004 0508 04       		.byte	0x4
 2005 0509 FE01     		.2byte	0x1fe
 2006 050b 6B000000 		.4byte	0x6b
 2007 050f 19       		.byte	0x19
 2008 0510 0D       		.uleb128 0xd
 2009 0511 67020000 		.4byte	.LASF78
 2010 0515 04       		.byte	0x4
 2011 0516 0302     		.2byte	0x203
 2012 0518 6B000000 		.4byte	0x6b
 2013 051c 1A       		.byte	0x1a
 2014 051d 00       		.byte	0
 2015 051e 06       		.uleb128 0x6
 2016 051f 04       		.byte	0x4
 2017 0520 B5000000 		.4byte	0xb5
 2018 0524 04       		.uleb128 0x4
 2019 0525 5C0A0000 		.4byte	.LASF79
 2020 0529 04       		.byte	0x4
 2021 052a 0402     		.2byte	0x204
 2022 052c 9F040000 		.4byte	0x49f
 2023 0530 0E       		.uleb128 0xe
 2024 0531 20       		.byte	0x20
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 90


 2025 0532 04       		.byte	0x4
 2026 0533 3702     		.2byte	0x237
 2027 0535 BC050000 		.4byte	0x5bc
 2028 0539 0D       		.uleb128 0xd
 2029 053a E0050000 		.4byte	.LASF80
 2030 053e 04       		.byte	0x4
 2031 053f 4002     		.2byte	0x240
 2032 0541 BC050000 		.4byte	0x5bc
 2033 0545 00       		.byte	0
 2034 0546 0D       		.uleb128 0xd
 2035 0547 BB090000 		.4byte	.LASF81
 2036 054b 04       		.byte	0x4
 2037 054c 4702     		.2byte	0x247
 2038 054e C3050000 		.4byte	0x5c3
 2039 0552 04       		.byte	0x4
 2040 0553 0D       		.uleb128 0xd
 2041 0554 A0070000 		.4byte	.LASF82
 2042 0558 04       		.byte	0x4
 2043 0559 4D02     		.2byte	0x24d
 2044 055b C5050000 		.4byte	0x5c5
 2045 055f 08       		.byte	0x8
 2046 0560 0D       		.uleb128 0xd
 2047 0561 85060000 		.4byte	.LASF83
 2048 0565 04       		.byte	0x4
 2049 0566 5302     		.2byte	0x253
 2050 0568 C3050000 		.4byte	0x5c3
 2051 056c 0C       		.byte	0xc
 2052 056d 0D       		.uleb128 0xd
 2053 056e 42090000 		.4byte	.LASF84
 2054 0572 04       		.byte	0x4
 2055 0573 5A02     		.2byte	0x25a
 2056 0575 CB050000 		.4byte	0x5cb
 2057 0579 10       		.byte	0x10
 2058 057a 0D       		.uleb128 0xd
 2059 057b 9E090000 		.4byte	.LASF85
 2060 057f 04       		.byte	0x4
 2061 0580 5F02     		.2byte	0x25f
 2062 0582 83000000 		.4byte	0x83
 2063 0586 14       		.byte	0x14
 2064 0587 0D       		.uleb128 0xd
 2065 0588 BE040000 		.4byte	.LASF86
 2066 058c 04       		.byte	0x4
 2067 058d 6602     		.2byte	0x266
 2068 058f 77000000 		.4byte	0x77
 2069 0593 18       		.byte	0x18
 2070 0594 0D       		.uleb128 0xd
 2071 0595 98030000 		.4byte	.LASF87
 2072 0599 04       		.byte	0x4
 2073 059a 6D02     		.2byte	0x26d
 2074 059c 6B000000 		.4byte	0x6b
 2075 05a0 1A       		.byte	0x1a
 2076 05a1 0D       		.uleb128 0xd
 2077 05a2 BE080000 		.4byte	.LASF88
 2078 05a6 04       		.byte	0x4
 2079 05a7 7702     		.2byte	0x277
 2080 05a9 6B000000 		.4byte	0x6b
 2081 05ad 1B       		.byte	0x1b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 91


 2082 05ae 0D       		.uleb128 0xd
 2083 05af C7090000 		.4byte	.LASF89
 2084 05b3 04       		.byte	0x4
 2085 05b4 7F02     		.2byte	0x27f
 2086 05b6 6B000000 		.4byte	0x6b
 2087 05ba 1C       		.byte	0x1c
 2088 05bb 00       		.byte	0
 2089 05bc 06       		.uleb128 0x6
 2090 05bd 04       		.byte	0x4
 2091 05be C2050000 		.4byte	0x5c2
 2092 05c2 12       		.uleb128 0x12
 2093 05c3 13       		.uleb128 0x13
 2094 05c4 04       		.byte	0x4
 2095 05c5 06       		.uleb128 0x6
 2096 05c6 04       		.byte	0x4
 2097 05c7 FF020000 		.4byte	0x2ff
 2098 05cb 06       		.uleb128 0x6
 2099 05cc 04       		.byte	0x4
 2100 05cd 6B000000 		.4byte	0x6b
 2101 05d1 04       		.uleb128 0x4
 2102 05d2 34000000 		.4byte	.LASF90
 2103 05d6 04       		.byte	0x4
 2104 05d7 8002     		.2byte	0x280
 2105 05d9 30050000 		.4byte	0x530
 2106 05dd 0E       		.uleb128 0xe
 2107 05de C0       		.byte	0xc0
 2108 05df 04       		.byte	0x4
 2109 05e0 8602     		.2byte	0x286
 2110 05e2 F4050000 		.4byte	0x5f4
 2111 05e6 0D       		.uleb128 0xd
 2112 05e7 500B0000 		.4byte	.LASF91
 2113 05eb 04       		.byte	0x4
 2114 05ec 8B02     		.2byte	0x28b
 2115 05ee F4050000 		.4byte	0x5f4
 2116 05f2 00       		.byte	0
 2117 05f3 00       		.byte	0
 2118 05f4 10       		.uleb128 0x10
 2119 05f5 D1050000 		.4byte	0x5d1
 2120 05f9 04060000 		.4byte	0x604
 2121 05fd 11       		.uleb128 0x11
 2122 05fe D8020000 		.4byte	0x2d8
 2123 0602 05       		.byte	0x5
 2124 0603 00       		.byte	0
 2125 0604 04       		.uleb128 0x4
 2126 0605 AB070000 		.4byte	.LASF92
 2127 0609 04       		.byte	0x4
 2128 060a 8C02     		.2byte	0x28c
 2129 060c DD050000 		.4byte	0x5dd
 2130 0610 02       		.uleb128 0x2
 2131 0611 08       		.byte	0x8
 2132 0612 04       		.byte	0x4
 2133 0613 40060000 		.4byte	.LASF93
 2134 0617 14       		.uleb128 0x14
 2135 0618 6F010000 		.4byte	.LASF98
 2136 061c 01       		.byte	0x1
 2137 061d 2009     		.2byte	0x920
 2138 061f 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 92


 2139 0623 06000000 		.4byte	.LFE20-.LFB20
 2140 0627 01       		.uleb128 0x1
 2141 0628 9C       		.byte	0x9c
 2142 0629 64060000 		.4byte	0x664
 2143 062d 15       		.uleb128 0x15
 2144 062e 35070000 		.4byte	.LASF94
 2145 0632 01       		.byte	0x1
 2146 0633 2009     		.2byte	0x920
 2147 0635 83000000 		.4byte	0x83
 2148 0639 01       		.uleb128 0x1
 2149 063a 50       		.byte	0x50
 2150 063b 15       		.uleb128 0x15
 2151 063c 13020000 		.4byte	.LASF95
 2152 0640 01       		.byte	0x1
 2153 0641 2009     		.2byte	0x920
 2154 0643 64060000 		.4byte	0x664
 2155 0647 01       		.uleb128 0x1
 2156 0648 51       		.byte	0x51
 2157 0649 16       		.uleb128 0x16
 2158 064a A1030000 		.4byte	.LASF96
 2159 064e 01       		.byte	0x1
 2160 064f 2209     		.2byte	0x922
 2161 0651 6B000000 		.4byte	0x6b
 2162 0655 04       		.byte	0x4
 2163 0656 16       		.uleb128 0x16
 2164 0657 65010000 		.4byte	.LASF97
 2165 065b 01       		.byte	0x1
 2166 065c 2309     		.2byte	0x923
 2167 065e 6B000000 		.4byte	0x6b
 2168 0662 00       		.byte	0
 2169 0663 00       		.byte	0
 2170 0664 06       		.uleb128 0x6
 2171 0665 04       		.byte	0x4
 2172 0666 90010000 		.4byte	0x190
 2173 066a 14       		.uleb128 0x14
 2174 066b 45020000 		.4byte	.LASF99
 2175 066f 01       		.byte	0x1
 2176 0670 3103     		.2byte	0x331
 2177 0672 00000000 		.4byte	.LFB7
 2178 0676 28000000 		.4byte	.LFE7-.LFB7
 2179 067a 01       		.uleb128 0x1
 2180 067b 9C       		.byte	0x9c
 2181 067c 9A060000 		.4byte	0x69a
 2182 0680 17       		.uleb128 0x17
 2183 0681 8B0A0000 		.4byte	.LASF100
 2184 0685 01       		.byte	0x1
 2185 0686 3303     		.2byte	0x333
 2186 0688 83000000 		.4byte	0x83
 2187 068c 00000000 		.4byte	.LLST0
 2188 0690 18       		.uleb128 0x18
 2189 0691 18000000 		.4byte	.LVL5
 2190 0695 440D0000 		.4byte	0xd44
 2191 0699 00       		.byte	0
 2192 069a 19       		.uleb128 0x19
 2193 069b 53010000 		.4byte	.LASF167
 2194 069f 01       		.byte	0x1
 2195 06a0 E9       		.byte	0xe9
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 93


 2196 06a1 83000000 		.4byte	0x83
 2197 06a5 00000000 		.4byte	.LFB1
 2198 06a9 10000000 		.4byte	.LFE1-.LFB1
 2199 06ad 01       		.uleb128 0x1
 2200 06ae 9C       		.byte	0x9c
 2201 06af 1A       		.uleb128 0x1a
 2202 06b0 48030000 		.4byte	.LASF103
 2203 06b4 01       		.byte	0x1
 2204 06b5 1D01     		.2byte	0x11d
 2205 06b7 A4000000 		.4byte	0xa4
 2206 06bb 00000000 		.4byte	.LFB2
 2207 06bf 40000000 		.4byte	.LFE2-.LFB2
 2208 06c3 01       		.uleb128 0x1
 2209 06c4 9C       		.byte	0x9c
 2210 06c5 F3060000 		.4byte	0x6f3
 2211 06c9 1B       		.uleb128 0x1b
 2212 06ca 100B0000 		.4byte	.LASF101
 2213 06ce 01       		.byte	0x1
 2214 06cf 1D01     		.2byte	0x11d
 2215 06d1 83000000 		.4byte	0x83
 2216 06d5 34000000 		.4byte	.LLST1
 2217 06d9 17       		.uleb128 0x17
 2218 06da E30A0000 		.4byte	.LASF102
 2219 06de 01       		.byte	0x1
 2220 06df 1F01     		.2byte	0x11f
 2221 06e1 A4000000 		.4byte	0xa4
 2222 06e5 55000000 		.4byte	.LLST2
 2223 06e9 18       		.uleb128 0x18
 2224 06ea 38000000 		.4byte	.LVL8
 2225 06ee 4F0D0000 		.4byte	0xd4f
 2226 06f2 00       		.byte	0
 2227 06f3 1A       		.uleb128 0x1a
 2228 06f4 50070000 		.4byte	.LASF104
 2229 06f8 01       		.byte	0x1
 2230 06f9 7001     		.2byte	0x170
 2231 06fb A4000000 		.4byte	0xa4
 2232 06ff 00000000 		.4byte	.LFB3
 2233 0703 2C000000 		.4byte	.LFE3-.LFB3
 2234 0707 01       		.uleb128 0x1
 2235 0708 9C       		.byte	0x9c
 2236 0709 27070000 		.4byte	0x727
 2237 070d 17       		.uleb128 0x17
 2238 070e 4F000000 		.4byte	.LASF105
 2239 0712 01       		.byte	0x1
 2240 0713 7201     		.2byte	0x172
 2241 0715 A4000000 		.4byte	0xa4
 2242 0719 73000000 		.4byte	.LLST3
 2243 071d 18       		.uleb128 0x18
 2244 071e 16000000 		.4byte	.LVL11
 2245 0722 5A0D0000 		.4byte	0xd5a
 2246 0726 00       		.byte	0
 2247 0727 1A       		.uleb128 0x1a
 2248 0728 11050000 		.4byte	.LASF106
 2249 072c 01       		.byte	0x1
 2250 072d AE01     		.2byte	0x1ae
 2251 072f A4000000 		.4byte	0xa4
 2252 0733 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 94


 2253 0737 48000000 		.4byte	.LFE4-.LFB4
 2254 073b 01       		.uleb128 0x1
 2255 073c 9C       		.byte	0x9c
 2256 073d 7F070000 		.4byte	0x77f
 2257 0741 17       		.uleb128 0x17
 2258 0742 4F000000 		.4byte	.LASF105
 2259 0746 01       		.byte	0x1
 2260 0747 B001     		.2byte	0x1b0
 2261 0749 A4000000 		.4byte	0xa4
 2262 074d 92000000 		.4byte	.LLST4
 2263 0751 17       		.uleb128 0x17
 2264 0752 35070000 		.4byte	.LASF94
 2265 0756 01       		.byte	0x1
 2266 0757 B201     		.2byte	0x1b2
 2267 0759 83000000 		.4byte	0x83
 2268 075d E0000000 		.4byte	.LLST5
 2269 0761 1C       		.uleb128 0x1c
 2270 0762 18000000 		.4byte	.LVL16
 2271 0766 AF060000 		.4byte	0x6af
 2272 076a 75070000 		.4byte	0x775
 2273 076e 1D       		.uleb128 0x1d
 2274 076f 01       		.uleb128 0x1
 2275 0770 50       		.byte	0x50
 2276 0771 02       		.uleb128 0x2
 2277 0772 74       		.byte	0x74
 2278 0773 00       		.sleb128 0
 2279 0774 00       		.byte	0
 2280 0775 18       		.uleb128 0x18
 2281 0776 32000000 		.4byte	.LVL17
 2282 077a F3060000 		.4byte	0x6f3
 2283 077e 00       		.byte	0
 2284 077f 1E       		.uleb128 0x1e
 2285 0780 65040000 		.4byte	.LASF113
 2286 0784 01       		.byte	0x1
 2287 0785 8902     		.2byte	0x289
 2288 0787 00000000 		.4byte	.LFB6
 2289 078b E4000000 		.4byte	.LFE6-.LFB6
 2290 078f 01       		.uleb128 0x1
 2291 0790 9C       		.byte	0x9c
 2292 0791 5D080000 		.4byte	0x85d
 2293 0795 1B       		.uleb128 0x1b
 2294 0796 100B0000 		.4byte	.LASF101
 2295 079a 01       		.byte	0x1
 2296 079b 8902     		.2byte	0x289
 2297 079d 83000000 		.4byte	0x83
 2298 07a1 F3000000 		.4byte	.LLST6
 2299 07a5 1B       		.uleb128 0x1b
 2300 07a6 00000000 		.4byte	.LASF107
 2301 07aa 01       		.byte	0x1
 2302 07ab 8902     		.2byte	0x289
 2303 07ad 83000000 		.4byte	0x83
 2304 07b1 14010000 		.4byte	.LLST7
 2305 07b5 1B       		.uleb128 0x1b
 2306 07b6 CF090000 		.4byte	.LASF108
 2307 07ba 01       		.byte	0x1
 2308 07bb 8902     		.2byte	0x289
 2309 07bd 83000000 		.4byte	0x83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 95


 2310 07c1 35010000 		.4byte	.LLST8
 2311 07c5 16       		.uleb128 0x16
 2312 07c6 0B020000 		.4byte	.LASF109
 2313 07ca 01       		.byte	0x1
 2314 07cb 8B02     		.2byte	0x28b
 2315 07cd 83000000 		.4byte	0x83
 2316 07d1 01       		.byte	0x1
 2317 07d2 17       		.uleb128 0x17
 2318 07d3 E8090000 		.4byte	.LASF110
 2319 07d7 01       		.byte	0x1
 2320 07d8 8C02     		.2byte	0x28c
 2321 07da 83000000 		.4byte	0x83
 2322 07de 61010000 		.4byte	.LLST9
 2323 07e2 17       		.uleb128 0x17
 2324 07e3 44010000 		.4byte	.LASF111
 2325 07e7 01       		.byte	0x1
 2326 07e8 8D02     		.2byte	0x28d
 2327 07ea 6B000000 		.4byte	0x6b
 2328 07ee 80010000 		.4byte	.LLST10
 2329 07f2 17       		.uleb128 0x17
 2330 07f3 B5090000 		.4byte	.LASF112
 2331 07f7 01       		.byte	0x1
 2332 07f8 8E02     		.2byte	0x28e
 2333 07fa 5D080000 		.4byte	0x85d
 2334 07fe BF010000 		.4byte	.LLST11
 2335 0802 18       		.uleb128 0x18
 2336 0803 1A000000 		.4byte	.LVL26
 2337 0807 650D0000 		.4byte	0xd65
 2338 080b 18       		.uleb128 0x18
 2339 080c 3A000000 		.4byte	.LVL27
 2340 0810 700D0000 		.4byte	0xd70
 2341 0814 18       		.uleb128 0x18
 2342 0815 50000000 		.4byte	.LVL28
 2343 0819 650D0000 		.4byte	0xd65
 2344 081d 18       		.uleb128 0x18
 2345 081e 70000000 		.4byte	.LVL29
 2346 0822 700D0000 		.4byte	0xd70
 2347 0826 18       		.uleb128 0x18
 2348 0827 76000000 		.4byte	.LVL30
 2349 082b 650D0000 		.4byte	0xd65
 2350 082f 18       		.uleb128 0x18
 2351 0830 88000000 		.4byte	.LVL31
 2352 0834 700D0000 		.4byte	0xd70
 2353 0838 18       		.uleb128 0x18
 2354 0839 8E000000 		.4byte	.LVL32
 2355 083d 650D0000 		.4byte	0xd65
 2356 0841 18       		.uleb128 0x18
 2357 0842 AE000000 		.4byte	.LVL33
 2358 0846 700D0000 		.4byte	0xd70
 2359 084a 18       		.uleb128 0x18
 2360 084b B4000000 		.4byte	.LVL34
 2361 084f 650D0000 		.4byte	0xd65
 2362 0853 18       		.uleb128 0x18
 2363 0854 D4000000 		.4byte	.LVL35
 2364 0858 700D0000 		.4byte	0xd70
 2365 085c 00       		.byte	0
 2366 085d 06       		.uleb128 0x6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 96


 2367 085e 04       		.byte	0x4
 2368 085f 63080000 		.4byte	0x863
 2369 0863 1F       		.uleb128 0x1f
 2370 0864 24050000 		.4byte	0x524
 2371 0868 1E       		.uleb128 0x1e
 2372 0869 7C040000 		.4byte	.LASF114
 2373 086d 01       		.byte	0x1
 2374 086e 8503     		.2byte	0x385
 2375 0870 00000000 		.4byte	.LFB8
 2376 0874 40000000 		.4byte	.LFE8-.LFB8
 2377 0878 01       		.uleb128 0x1
 2378 0879 9C       		.byte	0x9c
 2379 087a A1080000 		.4byte	0x8a1
 2380 087e 1B       		.uleb128 0x1b
 2381 087f A9010000 		.4byte	.LASF115
 2382 0883 01       		.byte	0x1
 2383 0884 8503     		.2byte	0x385
 2384 0886 1C010000 		.4byte	0x11c
 2385 088a D2010000 		.4byte	.LLST12
 2386 088e 18       		.uleb128 0x18
 2387 088f 18000000 		.4byte	.LVL42
 2388 0893 6A060000 		.4byte	0x66a
 2389 0897 18       		.uleb128 0x18
 2390 0898 24000000 		.4byte	.LVL43
 2391 089c 7B0D0000 		.4byte	0xd7b
 2392 08a0 00       		.byte	0
 2393 08a1 1E       		.uleb128 0x1e
 2394 08a2 B9000000 		.4byte	.LASF116
 2395 08a6 01       		.byte	0x1
 2396 08a7 E803     		.2byte	0x3e8
 2397 08a9 00000000 		.4byte	.LFB9
 2398 08ad 40000000 		.4byte	.LFE9-.LFB9
 2399 08b1 01       		.uleb128 0x1
 2400 08b2 9C       		.byte	0x9c
 2401 08b3 E8080000 		.4byte	0x8e8
 2402 08b7 17       		.uleb128 0x17
 2403 08b8 B5090000 		.4byte	.LASF112
 2404 08bc 01       		.byte	0x1
 2405 08bd EA03     		.2byte	0x3ea
 2406 08bf 5D080000 		.4byte	0x85d
 2407 08c3 F3010000 		.4byte	.LLST13
 2408 08c7 17       		.uleb128 0x17
 2409 08c8 3B020000 		.4byte	.LASF117
 2410 08cc 01       		.byte	0x1
 2411 08cd EB03     		.2byte	0x3eb
 2412 08cf 83000000 		.4byte	0x83
 2413 08d3 06020000 		.4byte	.LLST14
 2414 08d7 17       		.uleb128 0x17
 2415 08d8 29010000 		.4byte	.LASF118
 2416 08dc 01       		.byte	0x1
 2417 08dd EC03     		.2byte	0x3ec
 2418 08df 83000000 		.4byte	0x83
 2419 08e3 25020000 		.4byte	.LLST15
 2420 08e7 00       		.byte	0
 2421 08e8 1E       		.uleb128 0x1e
 2422 08e9 190B0000 		.4byte	.LASF119
 2423 08ed 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 97


 2424 08ee 6204     		.2byte	0x462
 2425 08f0 00000000 		.4byte	.LFB10
 2426 08f4 78000000 		.4byte	.LFE10-.LFB10
 2427 08f8 01       		.uleb128 0x1
 2428 08f9 9C       		.byte	0x9c
 2429 08fa 21090000 		.4byte	0x921
 2430 08fe 17       		.uleb128 0x17
 2431 08ff CD070000 		.4byte	.LASF120
 2432 0903 01       		.byte	0x1
 2433 0904 6A04     		.2byte	0x46a
 2434 0906 A4000000 		.4byte	0xa4
 2435 090a 4E020000 		.4byte	.LLST16
 2436 090e 18       		.uleb128 0x18
 2437 090f 14000000 		.4byte	.LVL56
 2438 0913 AF060000 		.4byte	0x6af
 2439 0917 18       		.uleb128 0x18
 2440 0918 2A000000 		.4byte	.LVL58
 2441 091c F3060000 		.4byte	0x6f3
 2442 0920 00       		.byte	0
 2443 0921 1E       		.uleb128 0x1e
 2444 0922 20040000 		.4byte	.LASF121
 2445 0926 01       		.byte	0x1
 2446 0927 AF04     		.2byte	0x4af
 2447 0929 00000000 		.4byte	.LFB11
 2448 092d 08000000 		.4byte	.LFE11-.LFB11
 2449 0931 01       		.uleb128 0x1
 2450 0932 9C       		.byte	0x9c
 2451 0933 59090000 		.4byte	0x959
 2452 0937 1B       		.uleb128 0x1b
 2453 0938 3A090000 		.4byte	.LASF122
 2454 093c 01       		.byte	0x1
 2455 093d AF04     		.2byte	0x4af
 2456 093f C6000000 		.4byte	0xc6
 2457 0943 99020000 		.4byte	.LLST17
 2458 0947 20       		.uleb128 0x20
 2459 0948 06000000 		.4byte	.LVL65
 2460 094c 860D0000 		.4byte	0xd86
 2461 0950 1D       		.uleb128 0x1d
 2462 0951 01       		.uleb128 0x1
 2463 0952 50       		.byte	0x50
 2464 0953 03       		.uleb128 0x3
 2465 0954 F3       		.byte	0xf3
 2466 0955 01       		.uleb128 0x1
 2467 0956 50       		.byte	0x50
 2468 0957 00       		.byte	0
 2469 0958 00       		.byte	0
 2470 0959 1E       		.uleb128 0x1e
 2471 095a 9B040000 		.4byte	.LASF123
 2472 095e 01       		.byte	0x1
 2473 095f C604     		.2byte	0x4c6
 2474 0961 00000000 		.4byte	.LFB12
 2475 0965 30000000 		.4byte	.LFE12-.LFB12
 2476 0969 01       		.uleb128 0x1
 2477 096a 9C       		.byte	0x9c
 2478 096b 80090000 		.4byte	0x980
 2479 096f 1B       		.uleb128 0x1b
 2480 0970 E7040000 		.4byte	.LASF124
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 98


 2481 0974 01       		.byte	0x1
 2482 0975 C604     		.2byte	0x4c6
 2483 0977 83000000 		.4byte	0x83
 2484 097b BA020000 		.4byte	.LLST18
 2485 097f 00       		.byte	0
 2486 0980 1E       		.uleb128 0x1e
 2487 0981 A7050000 		.4byte	.LASF125
 2488 0985 01       		.byte	0x1
 2489 0986 0A05     		.2byte	0x50a
 2490 0988 00000000 		.4byte	.LFB13
 2491 098c 14000000 		.4byte	.LFE13-.LFB13
 2492 0990 01       		.uleb128 0x1
 2493 0991 9C       		.byte	0x9c
 2494 0992 B7090000 		.4byte	0x9b7
 2495 0996 1B       		.uleb128 0x1b
 2496 0997 1A0A0000 		.4byte	.LASF126
 2497 099b 01       		.byte	0x1
 2498 099c 0A05     		.2byte	0x50a
 2499 099e 83000000 		.4byte	0x83
 2500 09a2 E8020000 		.4byte	.LLST19
 2501 09a6 17       		.uleb128 0x17
 2502 09a7 8B0A0000 		.4byte	.LASF100
 2503 09ab 01       		.byte	0x1
 2504 09ac 0D05     		.2byte	0x50d
 2505 09ae 83000000 		.4byte	0x83
 2506 09b2 16030000 		.4byte	.LLST20
 2507 09b6 00       		.byte	0
 2508 09b7 1E       		.uleb128 0x1e
 2509 09b8 2B080000 		.4byte	.LASF127
 2510 09bc 01       		.byte	0x1
 2511 09bd 5E05     		.2byte	0x55e
 2512 09bf 00000000 		.4byte	.LFB14
 2513 09c3 12000000 		.4byte	.LFE14-.LFB14
 2514 09c7 01       		.uleb128 0x1
 2515 09c8 9C       		.byte	0x9c
 2516 09c9 130A0000 		.4byte	0xa13
 2517 09cd 1B       		.uleb128 0x1b
 2518 09ce 1A0A0000 		.4byte	.LASF126
 2519 09d2 01       		.byte	0x1
 2520 09d3 5E05     		.2byte	0x55e
 2521 09d5 83000000 		.4byte	0x83
 2522 09d9 3F030000 		.4byte	.LLST21
 2523 09dd 1B       		.uleb128 0x1b
 2524 09de E7040000 		.4byte	.LASF124
 2525 09e2 01       		.byte	0x1
 2526 09e3 5E05     		.2byte	0x55e
 2527 09e5 83000000 		.4byte	0x83
 2528 09e9 6B030000 		.4byte	.LLST22
 2529 09ed 1C       		.uleb128 0x1c
 2530 09ee 0A000000 		.4byte	.LVL77
 2531 09f2 59090000 		.4byte	0x959
 2532 09f6 020A0000 		.4byte	0xa02
 2533 09fa 1D       		.uleb128 0x1d
 2534 09fb 01       		.uleb128 0x1
 2535 09fc 50       		.byte	0x50
 2536 09fd 03       		.uleb128 0x3
 2537 09fe F3       		.byte	0xf3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 99


 2538 09ff 01       		.uleb128 0x1
 2539 0a00 51       		.byte	0x51
 2540 0a01 00       		.byte	0
 2541 0a02 20       		.uleb128 0x20
 2542 0a03 10000000 		.4byte	.LVL78
 2543 0a07 80090000 		.4byte	0x980
 2544 0a0b 1D       		.uleb128 0x1d
 2545 0a0c 01       		.uleb128 0x1
 2546 0a0d 50       		.byte	0x50
 2547 0a0e 02       		.uleb128 0x2
 2548 0a0f 74       		.byte	0x74
 2549 0a10 00       		.sleb128 0
 2550 0a11 00       		.byte	0
 2551 0a12 00       		.byte	0
 2552 0a13 1A       		.uleb128 0x1a
 2553 0a14 8E010000 		.4byte	.LASF128
 2554 0a18 01       		.byte	0x1
 2555 0a19 9205     		.2byte	0x592
 2556 0a1b A4000000 		.4byte	0xa4
 2557 0a1f 00000000 		.4byte	.LFB15
 2558 0a23 1A000000 		.4byte	.LFE15-.LFB15
 2559 0a27 01       		.uleb128 0x1
 2560 0a28 9C       		.byte	0x9c
 2561 0a29 5E0A0000 		.4byte	0xa5e
 2562 0a2d 1B       		.uleb128 0x1b
 2563 0a2e 100B0000 		.4byte	.LASF101
 2564 0a32 01       		.byte	0x1
 2565 0a33 9205     		.2byte	0x592
 2566 0a35 83000000 		.4byte	0x83
 2567 0a39 8C030000 		.4byte	.LLST23
 2568 0a3d 17       		.uleb128 0x17
 2569 0a3e C7050000 		.4byte	.LASF129
 2570 0a42 01       		.byte	0x1
 2571 0a43 9405     		.2byte	0x594
 2572 0a45 A4000000 		.4byte	0xa4
 2573 0a49 AD030000 		.4byte	.LLST24
 2574 0a4d 20       		.uleb128 0x20
 2575 0a4e 16000000 		.4byte	.LVL83
 2576 0a52 910D0000 		.4byte	0xd91
 2577 0a56 1D       		.uleb128 0x1d
 2578 0a57 01       		.uleb128 0x1
 2579 0a58 51       		.byte	0x51
 2580 0a59 02       		.uleb128 0x2
 2581 0a5a 08       		.byte	0x8
 2582 0a5b 28       		.byte	0x28
 2583 0a5c 00       		.byte	0
 2584 0a5d 00       		.byte	0
 2585 0a5e 1A       		.uleb128 0x1a
 2586 0a5f 5B090000 		.4byte	.LASF130
 2587 0a63 01       		.byte	0x1
 2588 0a64 0306     		.2byte	0x603
 2589 0a66 A4000000 		.4byte	0xa4
 2590 0a6a 00000000 		.4byte	.LFB16
 2591 0a6e 1A000000 		.4byte	.LFE16-.LFB16
 2592 0a72 01       		.uleb128 0x1
 2593 0a73 9C       		.byte	0x9c
 2594 0a74 A90A0000 		.4byte	0xaa9
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 100


 2595 0a78 17       		.uleb128 0x17
 2596 0a79 C7050000 		.4byte	.LASF129
 2597 0a7d 01       		.byte	0x1
 2598 0a7e 0506     		.2byte	0x605
 2599 0a80 A4000000 		.4byte	0xa4
 2600 0a84 D7030000 		.4byte	.LLST25
 2601 0a88 17       		.uleb128 0x17
 2602 0a89 35070000 		.4byte	.LASF94
 2603 0a8d 01       		.byte	0x1
 2604 0a8e 0606     		.2byte	0x606
 2605 0a90 83000000 		.4byte	0x83
 2606 0a94 01040000 		.4byte	.LLST26
 2607 0a98 20       		.uleb128 0x20
 2608 0a99 0E000000 		.4byte	.LVL87
 2609 0a9d 130A0000 		.4byte	0xa13
 2610 0aa1 1D       		.uleb128 0x1d
 2611 0aa2 01       		.uleb128 0x1
 2612 0aa3 50       		.byte	0x50
 2613 0aa4 02       		.uleb128 0x2
 2614 0aa5 74       		.byte	0x74
 2615 0aa6 00       		.sleb128 0
 2616 0aa7 00       		.byte	0
 2617 0aa8 00       		.byte	0
 2618 0aa9 1E       		.uleb128 0x1e
 2619 0aaa FC060000 		.4byte	.LASF131
 2620 0aae 01       		.byte	0x1
 2621 0aaf B507     		.2byte	0x7b5
 2622 0ab1 00000000 		.4byte	.LFB17
 2623 0ab5 14000000 		.4byte	.LFE17-.LFB17
 2624 0ab9 01       		.uleb128 0x1
 2625 0aba 9C       		.byte	0x9c
 2626 0abb D00A0000 		.4byte	0xad0
 2627 0abf 1B       		.uleb128 0x1b
 2628 0ac0 FD030000 		.4byte	.LASF132
 2629 0ac4 01       		.byte	0x1
 2630 0ac5 B507     		.2byte	0x7b5
 2631 0ac7 83000000 		.4byte	0x83
 2632 0acb 20040000 		.4byte	.LLST27
 2633 0acf 00       		.byte	0
 2634 0ad0 1E       		.uleb128 0x1e
 2635 0ad1 82000000 		.4byte	.LASF133
 2636 0ad5 01       		.byte	0x1
 2637 0ad6 CA07     		.2byte	0x7ca
 2638 0ad8 00000000 		.4byte	.LFB18
 2639 0adc 24000000 		.4byte	.LFE18-.LFB18
 2640 0ae0 01       		.uleb128 0x1
 2641 0ae1 9C       		.byte	0x9c
 2642 0ae2 300B0000 		.4byte	0xb30
 2643 0ae6 1B       		.uleb128 0x1b
 2644 0ae7 82090000 		.4byte	.LASF134
 2645 0aeb 01       		.byte	0x1
 2646 0aec CA07     		.2byte	0x7ca
 2647 0aee 83000000 		.4byte	0x83
 2648 0af2 41040000 		.4byte	.LLST28
 2649 0af6 17       		.uleb128 0x17
 2650 0af7 CC0A0000 		.4byte	.LASF135
 2651 0afb 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 101


 2652 0afc CC07     		.2byte	0x7cc
 2653 0afe 83000000 		.4byte	0x83
 2654 0b02 62040000 		.4byte	.LLST29
 2655 0b06 17       		.uleb128 0x17
 2656 0b07 FD050000 		.4byte	.LASF136
 2657 0b0b 01       		.byte	0x1
 2658 0b0c CD07     		.2byte	0x7cd
 2659 0b0e 83000000 		.4byte	0x83
 2660 0b12 75040000 		.4byte	.LLST30
 2661 0b16 17       		.uleb128 0x17
 2662 0b17 34060000 		.4byte	.LASF137
 2663 0b1b 01       		.byte	0x1
 2664 0b1c CE07     		.2byte	0x7ce
 2665 0b1e 83000000 		.4byte	0x83
 2666 0b22 95040000 		.4byte	.LLST31
 2667 0b26 18       		.uleb128 0x18
 2668 0b27 1C000000 		.4byte	.LVL100
 2669 0b2b 80090000 		.4byte	0x980
 2670 0b2f 00       		.byte	0
 2671 0b30 1E       		.uleb128 0x1e
 2672 0b31 AE010000 		.4byte	.LASF138
 2673 0b35 01       		.byte	0x1
 2674 0b36 8908     		.2byte	0x889
 2675 0b38 00000000 		.4byte	.LFB19
 2676 0b3c 20000000 		.4byte	.LFE19-.LFB19
 2677 0b40 01       		.uleb128 0x1
 2678 0b41 9C       		.byte	0x9c
 2679 0b42 770B0000 		.4byte	0xb77
 2680 0b46 17       		.uleb128 0x17
 2681 0b47 35070000 		.4byte	.LASF94
 2682 0b4b 01       		.byte	0x1
 2683 0b4c 8B08     		.2byte	0x88b
 2684 0b4e 83000000 		.4byte	0x83
 2685 0b52 B5040000 		.4byte	.LLST32
 2686 0b56 17       		.uleb128 0x17
 2687 0b57 13020000 		.4byte	.LASF95
 2688 0b5b 01       		.byte	0x1
 2689 0b5c 8C08     		.2byte	0x88c
 2690 0b5e 64060000 		.4byte	0x664
 2691 0b62 D4040000 		.4byte	.LLST33
 2692 0b66 20       		.uleb128 0x20
 2693 0b67 14000000 		.4byte	.LVL104
 2694 0b6b 17060000 		.4byte	0x617
 2695 0b6f 1D       		.uleb128 0x1d
 2696 0b70 01       		.uleb128 0x1
 2697 0b71 50       		.byte	0x50
 2698 0b72 02       		.uleb128 0x2
 2699 0b73 74       		.byte	0x74
 2700 0b74 00       		.sleb128 0
 2701 0b75 00       		.byte	0
 2702 0b76 00       		.byte	0
 2703 0b77 1A       		.uleb128 0x1a
 2704 0b78 DB000000 		.4byte	.LASF139
 2705 0b7c 01       		.byte	0x1
 2706 0b7d 0402     		.2byte	0x204
 2707 0b7f A4000000 		.4byte	0xa4
 2708 0b83 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 102


 2709 0b87 54000000 		.4byte	.LFE5-.LFB5
 2710 0b8b 01       		.uleb128 0x1
 2711 0b8c 9C       		.byte	0x9c
 2712 0b8d D00B0000 		.4byte	0xbd0
 2713 0b91 16       		.uleb128 0x16
 2714 0b92 1E010000 		.4byte	.LASF140
 2715 0b96 01       		.byte	0x1
 2716 0b97 0602     		.2byte	0x206
 2717 0b99 A4000000 		.4byte	0xa4
 2718 0b9d 00       		.byte	0
 2719 0b9e 17       		.uleb128 0x17
 2720 0b9f 9D000000 		.4byte	.LASF141
 2721 0ba3 01       		.byte	0x1
 2722 0ba4 0A02     		.2byte	0x20a
 2723 0ba6 6B000000 		.4byte	0x6b
 2724 0baa E7040000 		.4byte	.LLST34
 2725 0bae 18       		.uleb128 0x18
 2726 0baf 3E000000 		.4byte	.LVL114
 2727 0bb3 300B0000 		.4byte	0xb30
 2728 0bb7 18       		.uleb128 0x18
 2729 0bb8 42000000 		.4byte	.LVL115
 2730 0bbc A1080000 		.4byte	0x8a1
 2731 0bc0 20       		.uleb128 0x20
 2732 0bc1 48000000 		.4byte	.LVL116
 2733 0bc5 68080000 		.4byte	0x868
 2734 0bc9 1D       		.uleb128 0x1d
 2735 0bca 01       		.uleb128 0x1
 2736 0bcb 50       		.byte	0x50
 2737 0bcc 01       		.uleb128 0x1
 2738 0bcd 32       		.byte	0x32
 2739 0bce 00       		.byte	0
 2740 0bcf 00       		.byte	0
 2741 0bd0 1E       		.uleb128 0x1e
 2742 0bd1 0E000000 		.4byte	.LASF142
 2743 0bd5 01       		.byte	0x1
 2744 0bd6 060B     		.2byte	0xb06
 2745 0bd8 00000000 		.4byte	.LFB21
 2746 0bdc 68000000 		.4byte	.LFE21-.LFB21
 2747 0be0 01       		.uleb128 0x1
 2748 0be1 9C       		.byte	0x9c
 2749 0be2 620C0000 		.4byte	0xc62
 2750 0be6 17       		.uleb128 0x17
 2751 0be7 8B0A0000 		.4byte	.LASF100
 2752 0beb 01       		.byte	0x1
 2753 0bec 080B     		.2byte	0xb08
 2754 0bee 83000000 		.4byte	0x83
 2755 0bf2 3D050000 		.4byte	.LLST35
 2756 0bf6 17       		.uleb128 0x17
 2757 0bf7 44010000 		.4byte	.LASF111
 2758 0bfb 01       		.byte	0x1
 2759 0bfc 090B     		.2byte	0xb09
 2760 0bfe 6B000000 		.4byte	0x6b
 2761 0c02 87050000 		.4byte	.LLST36
 2762 0c06 18       		.uleb128 0x18
 2763 0c07 06000000 		.4byte	.LVL117
 2764 0c0b 650D0000 		.4byte	0xd65
 2765 0c0f 18       		.uleb128 0x18
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 103


 2766 0c10 14000000 		.4byte	.LVL120
 2767 0c14 700D0000 		.4byte	0xd70
 2768 0c18 18       		.uleb128 0x18
 2769 0c19 18000000 		.4byte	.LVL121
 2770 0c1d 650D0000 		.4byte	0xd65
 2771 0c21 18       		.uleb128 0x18
 2772 0c22 26000000 		.4byte	.LVL124
 2773 0c26 700D0000 		.4byte	0xd70
 2774 0c2a 18       		.uleb128 0x18
 2775 0c2b 2A000000 		.4byte	.LVL125
 2776 0c2f 650D0000 		.4byte	0xd65
 2777 0c33 18       		.uleb128 0x18
 2778 0c34 3E000000 		.4byte	.LVL129
 2779 0c38 700D0000 		.4byte	0xd70
 2780 0c3c 1C       		.uleb128 0x1c
 2781 0c3d 44000000 		.4byte	.LVL130
 2782 0c41 9C0D0000 		.4byte	0xd9c
 2783 0c45 4F0C0000 		.4byte	0xc4f
 2784 0c49 1D       		.uleb128 0x1d
 2785 0c4a 01       		.uleb128 0x1
 2786 0c4b 50       		.byte	0x50
 2787 0c4c 01       		.uleb128 0x1
 2788 0c4d 31       		.byte	0x31
 2789 0c4e 00       		.byte	0
 2790 0c4f 18       		.uleb128 0x18
 2791 0c50 48000000 		.4byte	.LVL131
 2792 0c54 650D0000 		.4byte	0xd65
 2793 0c58 18       		.uleb128 0x18
 2794 0c59 52000000 		.4byte	.LVL134
 2795 0c5d 700D0000 		.4byte	0xd70
 2796 0c61 00       		.byte	0
 2797 0c62 21       		.uleb128 0x21
 2798 0c63 3F070000 		.4byte	.LASF143
 2799 0c67 04       		.byte	0x4
 2800 0c68 2E04     		.2byte	0x42e
 2801 0c6a 93040000 		.4byte	0x493
 2802 0c6e 21       		.uleb128 0x21
 2803 0c6f 49080000 		.4byte	.LASF144
 2804 0c73 04       		.byte	0x4
 2805 0c74 2F04     		.2byte	0x42f
 2806 0c76 7A0C0000 		.4byte	0xc7a
 2807 0c7a 1F       		.uleb128 0x1f
 2808 0c7b 04060000 		.4byte	0x604
 2809 0c7f 10       		.uleb128 0x10
 2810 0c80 63080000 		.4byte	0x863
 2811 0c84 8F0C0000 		.4byte	0xc8f
 2812 0c88 11       		.uleb128 0x11
 2813 0c89 D8020000 		.4byte	0x2d8
 2814 0c8d 0B       		.byte	0xb
 2815 0c8e 00       		.byte	0
 2816 0c8f 21       		.uleb128 0x21
 2817 0c90 32010000 		.4byte	.LASF145
 2818 0c94 04       		.byte	0x4
 2819 0c95 3004     		.2byte	0x430
 2820 0c97 9B0C0000 		.4byte	0xc9b
 2821 0c9b 1F       		.uleb128 0x1f
 2822 0c9c 7F0C0000 		.4byte	0xc7f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 104


 2823 0ca0 22       		.uleb128 0x22
 2824 0ca1 390B0000 		.4byte	.LASF146
 2825 0ca5 01       		.byte	0x1
 2826 0ca6 BB       		.byte	0xbb
 2827 0ca7 B0000000 		.4byte	0xb0
 2828 0cab 05       		.uleb128 0x5
 2829 0cac 03       		.byte	0x3
 2830 0cad 00000000 		.4byte	CapSense_1_widgetIndex
 2831 0cb1 22       		.uleb128 0x22
 2832 0cb2 D1080000 		.4byte	.LASF147
 2833 0cb6 01       		.byte	0x1
 2834 0cb7 BC       		.byte	0xbc
 2835 0cb8 B0000000 		.4byte	0xb0
 2836 0cbc 05       		.uleb128 0x5
 2837 0cbd 03       		.byte	0x3
 2838 0cbe 00000000 		.4byte	CapSense_1_sensorIndex
 2839 0cc2 22       		.uleb128 0x22
 2840 0cc3 1B020000 		.4byte	.LASF148
 2841 0cc7 01       		.byte	0x1
 2842 0cc8 BD       		.byte	0xbd
 2843 0cc9 6B000000 		.4byte	0x6b
 2844 0ccd 05       		.uleb128 0x5
 2845 0cce 03       		.byte	0x3
 2846 0ccf 00000000 		.4byte	CapSense_1_requestScanAllWidget
 2847 0cd3 22       		.uleb128 0x22
 2848 0cd4 5A000000 		.4byte	.LASF149
 2849 0cd8 01       		.byte	0x1
 2850 0cd9 C0       		.byte	0xc0
 2851 0cda C5050000 		.4byte	0x5c5
 2852 0cde 05       		.uleb128 0x5
 2853 0cdf 03       		.byte	0x3
 2854 0ce0 00000000 		.4byte	CapSense_1_curRamSnsPtr
 2855 0ce4 22       		.uleb128 0x22
 2856 0ce5 FC090000 		.4byte	.LASF150
 2857 0ce9 01       		.byte	0x1
 2858 0cea AE       		.byte	0xae
 2859 0ceb 1C010000 		.4byte	0x11c
 2860 0cef 05       		.uleb128 0x5
 2861 0cf0 03       		.byte	0x3
 2862 0cf1 00000000 		.4byte	CapSense_1_currentSenseMethod
 2863 0cf5 22       		.uleb128 0x22
 2864 0cf6 D4010000 		.4byte	.LASF151
 2865 0cfa 01       		.byte	0x1
 2866 0cfb B2       		.byte	0xb2
 2867 0cfc 6B000000 		.4byte	0x6b
 2868 0d00 05       		.uleb128 0x5
 2869 0d01 03       		.byte	0x3
 2870 0d02 00000000 		.4byte	CapSense_1_scanFreqIndex
 2871 0d06 22       		.uleb128 0x22
 2872 0d07 770A0000 		.4byte	.LASF152
 2873 0d0b 01       		.byte	0x1
 2874 0d0c B4       		.byte	0xb4
 2875 0d0d DF020000 		.4byte	0x2df
 2876 0d11 05       		.uleb128 0x5
 2877 0d12 03       		.byte	0x3
 2878 0d13 00000000 		.4byte	CapSense_1_immunity
 2879 0d17 22       		.uleb128 0x22
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 105


 2880 0d18 FC070000 		.4byte	.LASF153
 2881 0d1c 01       		.byte	0x1
 2882 0d1d C6       		.byte	0xc6
 2883 0d1e 280D0000 		.4byte	0xd28
 2884 0d22 05       		.uleb128 0x5
 2885 0d23 03       		.byte	0x3
 2886 0d24 00000000 		.4byte	CapSense_1_curFlashWdgtPtr
 2887 0d28 06       		.uleb128 0x6
 2888 0d29 04       		.byte	0x4
 2889 0d2a 2E0D0000 		.4byte	0xd2e
 2890 0d2e 1F       		.uleb128 0x1f
 2891 0d2f D1050000 		.4byte	0x5d1
 2892 0d33 22       		.uleb128 0x22
 2893 0d34 07010000 		.4byte	.LASF154
 2894 0d38 01       		.byte	0x1
 2895 0d39 CF       		.byte	0xcf
 2896 0d3a 5D080000 		.4byte	0x85d
 2897 0d3e 05       		.uleb128 0x5
 2898 0d3f 03       		.byte	0x3
 2899 0d40 00000000 		.4byte	CapSense_1_curSnsIOPtr
 2900 0d44 23       		.uleb128 0x23
 2901 0d45 CA040000 		.4byte	.LASF155
 2902 0d49 CA040000 		.4byte	.LASF155
 2903 0d4d 05       		.byte	0x5
 2904 0d4e 54       		.byte	0x54
 2905 0d4f 23       		.uleb128 0x23
 2906 0d50 E8080000 		.4byte	.LASF156
 2907 0d54 E8080000 		.4byte	.LASF156
 2908 0d58 05       		.byte	0x5
 2909 0d59 39       		.byte	0x39
 2910 0d5a 23       		.uleb128 0x23
 2911 0d5b D5090000 		.4byte	.LASF157
 2912 0d5f D5090000 		.4byte	.LASF157
 2913 0d63 05       		.byte	0x5
 2914 0d64 3B       		.byte	0x3b
 2915 0d65 23       		.uleb128 0x23
 2916 0d66 210A0000 		.4byte	.LASF158
 2917 0d6a 210A0000 		.4byte	.LASF158
 2918 0d6e 06       		.byte	0x6
 2919 0d6f E5       		.byte	0xe5
 2920 0d70 23       		.uleb128 0x23
 2921 0d71 FB040000 		.4byte	.LASF159
 2922 0d75 FB040000 		.4byte	.LASF159
 2923 0d79 06       		.byte	0x6
 2924 0d7a E6       		.byte	0xe6
 2925 0d7b 23       		.uleb128 0x23
 2926 0d7c AA030000 		.4byte	.LASF160
 2927 0d80 AA030000 		.4byte	.LASF160
 2928 0d84 05       		.byte	0x5
 2929 0d85 53       		.byte	0x53
 2930 0d86 23       		.uleb128 0x23
 2931 0d87 03040000 		.4byte	.LASF161
 2932 0d8b 03040000 		.4byte	.LASF161
 2933 0d8f 07       		.byte	0x7
 2934 0d90 18       		.byte	0x18
 2935 0d91 23       		.uleb128 0x23
 2936 0d92 17070000 		.4byte	.LASF162
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 106


 2937 0d96 17070000 		.4byte	.LASF162
 2938 0d9a 05       		.byte	0x5
 2939 0d9b 3F       		.byte	0x3f
 2940 0d9c 23       		.uleb128 0x23
 2941 0d9d 5F030000 		.4byte	.LASF163
 2942 0da1 5F030000 		.4byte	.LASF163
 2943 0da5 06       		.byte	0x6
 2944 0da6 DA       		.byte	0xda
 2945 0da7 00       		.byte	0
 2946              		.section	.debug_abbrev,"",%progbits
 2947              	.Ldebug_abbrev0:
 2948 0000 01       		.uleb128 0x1
 2949 0001 11       		.uleb128 0x11
 2950 0002 01       		.byte	0x1
 2951 0003 25       		.uleb128 0x25
 2952 0004 0E       		.uleb128 0xe
 2953 0005 13       		.uleb128 0x13
 2954 0006 0B       		.uleb128 0xb
 2955 0007 03       		.uleb128 0x3
 2956 0008 0E       		.uleb128 0xe
 2957 0009 1B       		.uleb128 0x1b
 2958 000a 0E       		.uleb128 0xe
 2959 000b 55       		.uleb128 0x55
 2960 000c 17       		.uleb128 0x17
 2961 000d 11       		.uleb128 0x11
 2962 000e 01       		.uleb128 0x1
 2963 000f 10       		.uleb128 0x10
 2964 0010 17       		.uleb128 0x17
 2965 0011 00       		.byte	0
 2966 0012 00       		.byte	0
 2967 0013 02       		.uleb128 0x2
 2968 0014 24       		.uleb128 0x24
 2969 0015 00       		.byte	0
 2970 0016 0B       		.uleb128 0xb
 2971 0017 0B       		.uleb128 0xb
 2972 0018 3E       		.uleb128 0x3e
 2973 0019 0B       		.uleb128 0xb
 2974 001a 03       		.uleb128 0x3
 2975 001b 0E       		.uleb128 0xe
 2976 001c 00       		.byte	0
 2977 001d 00       		.byte	0
 2978 001e 03       		.uleb128 0x3
 2979 001f 24       		.uleb128 0x24
 2980 0020 00       		.byte	0
 2981 0021 0B       		.uleb128 0xb
 2982 0022 0B       		.uleb128 0xb
 2983 0023 3E       		.uleb128 0x3e
 2984 0024 0B       		.uleb128 0xb
 2985 0025 03       		.uleb128 0x3
 2986 0026 08       		.uleb128 0x8
 2987 0027 00       		.byte	0
 2988 0028 00       		.byte	0
 2989 0029 04       		.uleb128 0x4
 2990 002a 16       		.uleb128 0x16
 2991 002b 00       		.byte	0
 2992 002c 03       		.uleb128 0x3
 2993 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 107


 2994 002e 3A       		.uleb128 0x3a
 2995 002f 0B       		.uleb128 0xb
 2996 0030 3B       		.uleb128 0x3b
 2997 0031 05       		.uleb128 0x5
 2998 0032 49       		.uleb128 0x49
 2999 0033 13       		.uleb128 0x13
 3000 0034 00       		.byte	0
 3001 0035 00       		.byte	0
 3002 0036 05       		.uleb128 0x5
 3003 0037 35       		.uleb128 0x35
 3004 0038 00       		.byte	0
 3005 0039 49       		.uleb128 0x49
 3006 003a 13       		.uleb128 0x13
 3007 003b 00       		.byte	0
 3008 003c 00       		.byte	0
 3009 003d 06       		.uleb128 0x6
 3010 003e 0F       		.uleb128 0xf
 3011 003f 00       		.byte	0
 3012 0040 0B       		.uleb128 0xb
 3013 0041 0B       		.uleb128 0xb
 3014 0042 49       		.uleb128 0x49
 3015 0043 13       		.uleb128 0x13
 3016 0044 00       		.byte	0
 3017 0045 00       		.byte	0
 3018 0046 07       		.uleb128 0x7
 3019 0047 15       		.uleb128 0x15
 3020 0048 00       		.byte	0
 3021 0049 27       		.uleb128 0x27
 3022 004a 19       		.uleb128 0x19
 3023 004b 00       		.byte	0
 3024 004c 00       		.byte	0
 3025 004d 08       		.uleb128 0x8
 3026 004e 04       		.uleb128 0x4
 3027 004f 01       		.byte	0x1
 3028 0050 0B       		.uleb128 0xb
 3029 0051 0B       		.uleb128 0xb
 3030 0052 49       		.uleb128 0x49
 3031 0053 13       		.uleb128 0x13
 3032 0054 3A       		.uleb128 0x3a
 3033 0055 0B       		.uleb128 0xb
 3034 0056 3B       		.uleb128 0x3b
 3035 0057 0B       		.uleb128 0xb
 3036 0058 01       		.uleb128 0x1
 3037 0059 13       		.uleb128 0x13
 3038 005a 00       		.byte	0
 3039 005b 00       		.byte	0
 3040 005c 09       		.uleb128 0x9
 3041 005d 28       		.uleb128 0x28
 3042 005e 00       		.byte	0
 3043 005f 03       		.uleb128 0x3
 3044 0060 0E       		.uleb128 0xe
 3045 0061 1C       		.uleb128 0x1c
 3046 0062 0B       		.uleb128 0xb
 3047 0063 00       		.byte	0
 3048 0064 00       		.byte	0
 3049 0065 0A       		.uleb128 0xa
 3050 0066 16       		.uleb128 0x16
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 108


 3051 0067 00       		.byte	0
 3052 0068 03       		.uleb128 0x3
 3053 0069 0E       		.uleb128 0xe
 3054 006a 3A       		.uleb128 0x3a
 3055 006b 0B       		.uleb128 0xb
 3056 006c 3B       		.uleb128 0x3b
 3057 006d 0B       		.uleb128 0xb
 3058 006e 49       		.uleb128 0x49
 3059 006f 13       		.uleb128 0x13
 3060 0070 00       		.byte	0
 3061 0071 00       		.byte	0
 3062 0072 0B       		.uleb128 0xb
 3063 0073 13       		.uleb128 0x13
 3064 0074 01       		.byte	0x1
 3065 0075 0B       		.uleb128 0xb
 3066 0076 0B       		.uleb128 0xb
 3067 0077 3A       		.uleb128 0x3a
 3068 0078 0B       		.uleb128 0xb
 3069 0079 3B       		.uleb128 0x3b
 3070 007a 0B       		.uleb128 0xb
 3071 007b 01       		.uleb128 0x1
 3072 007c 13       		.uleb128 0x13
 3073 007d 00       		.byte	0
 3074 007e 00       		.byte	0
 3075 007f 0C       		.uleb128 0xc
 3076 0080 0D       		.uleb128 0xd
 3077 0081 00       		.byte	0
 3078 0082 03       		.uleb128 0x3
 3079 0083 0E       		.uleb128 0xe
 3080 0084 3A       		.uleb128 0x3a
 3081 0085 0B       		.uleb128 0xb
 3082 0086 3B       		.uleb128 0x3b
 3083 0087 0B       		.uleb128 0xb
 3084 0088 49       		.uleb128 0x49
 3085 0089 13       		.uleb128 0x13
 3086 008a 38       		.uleb128 0x38
 3087 008b 0B       		.uleb128 0xb
 3088 008c 00       		.byte	0
 3089 008d 00       		.byte	0
 3090 008e 0D       		.uleb128 0xd
 3091 008f 0D       		.uleb128 0xd
 3092 0090 00       		.byte	0
 3093 0091 03       		.uleb128 0x3
 3094 0092 0E       		.uleb128 0xe
 3095 0093 3A       		.uleb128 0x3a
 3096 0094 0B       		.uleb128 0xb
 3097 0095 3B       		.uleb128 0x3b
 3098 0096 05       		.uleb128 0x5
 3099 0097 49       		.uleb128 0x49
 3100 0098 13       		.uleb128 0x13
 3101 0099 38       		.uleb128 0x38
 3102 009a 0B       		.uleb128 0xb
 3103 009b 00       		.byte	0
 3104 009c 00       		.byte	0
 3105 009d 0E       		.uleb128 0xe
 3106 009e 13       		.uleb128 0x13
 3107 009f 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 109


 3108 00a0 0B       		.uleb128 0xb
 3109 00a1 0B       		.uleb128 0xb
 3110 00a2 3A       		.uleb128 0x3a
 3111 00a3 0B       		.uleb128 0xb
 3112 00a4 3B       		.uleb128 0x3b
 3113 00a5 05       		.uleb128 0x5
 3114 00a6 01       		.uleb128 0x1
 3115 00a7 13       		.uleb128 0x13
 3116 00a8 00       		.byte	0
 3117 00a9 00       		.byte	0
 3118 00aa 0F       		.uleb128 0xf
 3119 00ab 0D       		.uleb128 0xd
 3120 00ac 00       		.byte	0
 3121 00ad 03       		.uleb128 0x3
 3122 00ae 08       		.uleb128 0x8
 3123 00af 3A       		.uleb128 0x3a
 3124 00b0 0B       		.uleb128 0xb
 3125 00b1 3B       		.uleb128 0x3b
 3126 00b2 05       		.uleb128 0x5
 3127 00b3 49       		.uleb128 0x49
 3128 00b4 13       		.uleb128 0x13
 3129 00b5 38       		.uleb128 0x38
 3130 00b6 0B       		.uleb128 0xb
 3131 00b7 00       		.byte	0
 3132 00b8 00       		.byte	0
 3133 00b9 10       		.uleb128 0x10
 3134 00ba 01       		.uleb128 0x1
 3135 00bb 01       		.byte	0x1
 3136 00bc 49       		.uleb128 0x49
 3137 00bd 13       		.uleb128 0x13
 3138 00be 01       		.uleb128 0x1
 3139 00bf 13       		.uleb128 0x13
 3140 00c0 00       		.byte	0
 3141 00c1 00       		.byte	0
 3142 00c2 11       		.uleb128 0x11
 3143 00c3 21       		.uleb128 0x21
 3144 00c4 00       		.byte	0
 3145 00c5 49       		.uleb128 0x49
 3146 00c6 13       		.uleb128 0x13
 3147 00c7 2F       		.uleb128 0x2f
 3148 00c8 0B       		.uleb128 0xb
 3149 00c9 00       		.byte	0
 3150 00ca 00       		.byte	0
 3151 00cb 12       		.uleb128 0x12
 3152 00cc 26       		.uleb128 0x26
 3153 00cd 00       		.byte	0
 3154 00ce 00       		.byte	0
 3155 00cf 00       		.byte	0
 3156 00d0 13       		.uleb128 0x13
 3157 00d1 0F       		.uleb128 0xf
 3158 00d2 00       		.byte	0
 3159 00d3 0B       		.uleb128 0xb
 3160 00d4 0B       		.uleb128 0xb
 3161 00d5 00       		.byte	0
 3162 00d6 00       		.byte	0
 3163 00d7 14       		.uleb128 0x14
 3164 00d8 2E       		.uleb128 0x2e
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 110


 3165 00d9 01       		.byte	0x1
 3166 00da 03       		.uleb128 0x3
 3167 00db 0E       		.uleb128 0xe
 3168 00dc 3A       		.uleb128 0x3a
 3169 00dd 0B       		.uleb128 0xb
 3170 00de 3B       		.uleb128 0x3b
 3171 00df 05       		.uleb128 0x5
 3172 00e0 27       		.uleb128 0x27
 3173 00e1 19       		.uleb128 0x19
 3174 00e2 11       		.uleb128 0x11
 3175 00e3 01       		.uleb128 0x1
 3176 00e4 12       		.uleb128 0x12
 3177 00e5 06       		.uleb128 0x6
 3178 00e6 40       		.uleb128 0x40
 3179 00e7 18       		.uleb128 0x18
 3180 00e8 9742     		.uleb128 0x2117
 3181 00ea 19       		.uleb128 0x19
 3182 00eb 01       		.uleb128 0x1
 3183 00ec 13       		.uleb128 0x13
 3184 00ed 00       		.byte	0
 3185 00ee 00       		.byte	0
 3186 00ef 15       		.uleb128 0x15
 3187 00f0 05       		.uleb128 0x5
 3188 00f1 00       		.byte	0
 3189 00f2 03       		.uleb128 0x3
 3190 00f3 0E       		.uleb128 0xe
 3191 00f4 3A       		.uleb128 0x3a
 3192 00f5 0B       		.uleb128 0xb
 3193 00f6 3B       		.uleb128 0x3b
 3194 00f7 05       		.uleb128 0x5
 3195 00f8 49       		.uleb128 0x49
 3196 00f9 13       		.uleb128 0x13
 3197 00fa 02       		.uleb128 0x2
 3198 00fb 18       		.uleb128 0x18
 3199 00fc 00       		.byte	0
 3200 00fd 00       		.byte	0
 3201 00fe 16       		.uleb128 0x16
 3202 00ff 34       		.uleb128 0x34
 3203 0100 00       		.byte	0
 3204 0101 03       		.uleb128 0x3
 3205 0102 0E       		.uleb128 0xe
 3206 0103 3A       		.uleb128 0x3a
 3207 0104 0B       		.uleb128 0xb
 3208 0105 3B       		.uleb128 0x3b
 3209 0106 05       		.uleb128 0x5
 3210 0107 49       		.uleb128 0x49
 3211 0108 13       		.uleb128 0x13
 3212 0109 1C       		.uleb128 0x1c
 3213 010a 0B       		.uleb128 0xb
 3214 010b 00       		.byte	0
 3215 010c 00       		.byte	0
 3216 010d 17       		.uleb128 0x17
 3217 010e 34       		.uleb128 0x34
 3218 010f 00       		.byte	0
 3219 0110 03       		.uleb128 0x3
 3220 0111 0E       		.uleb128 0xe
 3221 0112 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 111


 3222 0113 0B       		.uleb128 0xb
 3223 0114 3B       		.uleb128 0x3b
 3224 0115 05       		.uleb128 0x5
 3225 0116 49       		.uleb128 0x49
 3226 0117 13       		.uleb128 0x13
 3227 0118 02       		.uleb128 0x2
 3228 0119 17       		.uleb128 0x17
 3229 011a 00       		.byte	0
 3230 011b 00       		.byte	0
 3231 011c 18       		.uleb128 0x18
 3232 011d 898201   		.uleb128 0x4109
 3233 0120 00       		.byte	0
 3234 0121 11       		.uleb128 0x11
 3235 0122 01       		.uleb128 0x1
 3236 0123 31       		.uleb128 0x31
 3237 0124 13       		.uleb128 0x13
 3238 0125 00       		.byte	0
 3239 0126 00       		.byte	0
 3240 0127 19       		.uleb128 0x19
 3241 0128 2E       		.uleb128 0x2e
 3242 0129 00       		.byte	0
 3243 012a 3F       		.uleb128 0x3f
 3244 012b 19       		.uleb128 0x19
 3245 012c 03       		.uleb128 0x3
 3246 012d 0E       		.uleb128 0xe
 3247 012e 3A       		.uleb128 0x3a
 3248 012f 0B       		.uleb128 0xb
 3249 0130 3B       		.uleb128 0x3b
 3250 0131 0B       		.uleb128 0xb
 3251 0132 27       		.uleb128 0x27
 3252 0133 19       		.uleb128 0x19
 3253 0134 49       		.uleb128 0x49
 3254 0135 13       		.uleb128 0x13
 3255 0136 11       		.uleb128 0x11
 3256 0137 01       		.uleb128 0x1
 3257 0138 12       		.uleb128 0x12
 3258 0139 06       		.uleb128 0x6
 3259 013a 40       		.uleb128 0x40
 3260 013b 18       		.uleb128 0x18
 3261 013c 9742     		.uleb128 0x2117
 3262 013e 19       		.uleb128 0x19
 3263 013f 00       		.byte	0
 3264 0140 00       		.byte	0
 3265 0141 1A       		.uleb128 0x1a
 3266 0142 2E       		.uleb128 0x2e
 3267 0143 01       		.byte	0x1
 3268 0144 3F       		.uleb128 0x3f
 3269 0145 19       		.uleb128 0x19
 3270 0146 03       		.uleb128 0x3
 3271 0147 0E       		.uleb128 0xe
 3272 0148 3A       		.uleb128 0x3a
 3273 0149 0B       		.uleb128 0xb
 3274 014a 3B       		.uleb128 0x3b
 3275 014b 05       		.uleb128 0x5
 3276 014c 27       		.uleb128 0x27
 3277 014d 19       		.uleb128 0x19
 3278 014e 49       		.uleb128 0x49
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 112


 3279 014f 13       		.uleb128 0x13
 3280 0150 11       		.uleb128 0x11
 3281 0151 01       		.uleb128 0x1
 3282 0152 12       		.uleb128 0x12
 3283 0153 06       		.uleb128 0x6
 3284 0154 40       		.uleb128 0x40
 3285 0155 18       		.uleb128 0x18
 3286 0156 9742     		.uleb128 0x2117
 3287 0158 19       		.uleb128 0x19
 3288 0159 01       		.uleb128 0x1
 3289 015a 13       		.uleb128 0x13
 3290 015b 00       		.byte	0
 3291 015c 00       		.byte	0
 3292 015d 1B       		.uleb128 0x1b
 3293 015e 05       		.uleb128 0x5
 3294 015f 00       		.byte	0
 3295 0160 03       		.uleb128 0x3
 3296 0161 0E       		.uleb128 0xe
 3297 0162 3A       		.uleb128 0x3a
 3298 0163 0B       		.uleb128 0xb
 3299 0164 3B       		.uleb128 0x3b
 3300 0165 05       		.uleb128 0x5
 3301 0166 49       		.uleb128 0x49
 3302 0167 13       		.uleb128 0x13
 3303 0168 02       		.uleb128 0x2
 3304 0169 17       		.uleb128 0x17
 3305 016a 00       		.byte	0
 3306 016b 00       		.byte	0
 3307 016c 1C       		.uleb128 0x1c
 3308 016d 898201   		.uleb128 0x4109
 3309 0170 01       		.byte	0x1
 3310 0171 11       		.uleb128 0x11
 3311 0172 01       		.uleb128 0x1
 3312 0173 31       		.uleb128 0x31
 3313 0174 13       		.uleb128 0x13
 3314 0175 01       		.uleb128 0x1
 3315 0176 13       		.uleb128 0x13
 3316 0177 00       		.byte	0
 3317 0178 00       		.byte	0
 3318 0179 1D       		.uleb128 0x1d
 3319 017a 8A8201   		.uleb128 0x410a
 3320 017d 00       		.byte	0
 3321 017e 02       		.uleb128 0x2
 3322 017f 18       		.uleb128 0x18
 3323 0180 9142     		.uleb128 0x2111
 3324 0182 18       		.uleb128 0x18
 3325 0183 00       		.byte	0
 3326 0184 00       		.byte	0
 3327 0185 1E       		.uleb128 0x1e
 3328 0186 2E       		.uleb128 0x2e
 3329 0187 01       		.byte	0x1
 3330 0188 3F       		.uleb128 0x3f
 3331 0189 19       		.uleb128 0x19
 3332 018a 03       		.uleb128 0x3
 3333 018b 0E       		.uleb128 0xe
 3334 018c 3A       		.uleb128 0x3a
 3335 018d 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 113


 3336 018e 3B       		.uleb128 0x3b
 3337 018f 05       		.uleb128 0x5
 3338 0190 27       		.uleb128 0x27
 3339 0191 19       		.uleb128 0x19
 3340 0192 11       		.uleb128 0x11
 3341 0193 01       		.uleb128 0x1
 3342 0194 12       		.uleb128 0x12
 3343 0195 06       		.uleb128 0x6
 3344 0196 40       		.uleb128 0x40
 3345 0197 18       		.uleb128 0x18
 3346 0198 9742     		.uleb128 0x2117
 3347 019a 19       		.uleb128 0x19
 3348 019b 01       		.uleb128 0x1
 3349 019c 13       		.uleb128 0x13
 3350 019d 00       		.byte	0
 3351 019e 00       		.byte	0
 3352 019f 1F       		.uleb128 0x1f
 3353 01a0 26       		.uleb128 0x26
 3354 01a1 00       		.byte	0
 3355 01a2 49       		.uleb128 0x49
 3356 01a3 13       		.uleb128 0x13
 3357 01a4 00       		.byte	0
 3358 01a5 00       		.byte	0
 3359 01a6 20       		.uleb128 0x20
 3360 01a7 898201   		.uleb128 0x4109
 3361 01aa 01       		.byte	0x1
 3362 01ab 11       		.uleb128 0x11
 3363 01ac 01       		.uleb128 0x1
 3364 01ad 31       		.uleb128 0x31
 3365 01ae 13       		.uleb128 0x13
 3366 01af 00       		.byte	0
 3367 01b0 00       		.byte	0
 3368 01b1 21       		.uleb128 0x21
 3369 01b2 34       		.uleb128 0x34
 3370 01b3 00       		.byte	0
 3371 01b4 03       		.uleb128 0x3
 3372 01b5 0E       		.uleb128 0xe
 3373 01b6 3A       		.uleb128 0x3a
 3374 01b7 0B       		.uleb128 0xb
 3375 01b8 3B       		.uleb128 0x3b
 3376 01b9 05       		.uleb128 0x5
 3377 01ba 49       		.uleb128 0x49
 3378 01bb 13       		.uleb128 0x13
 3379 01bc 3F       		.uleb128 0x3f
 3380 01bd 19       		.uleb128 0x19
 3381 01be 3C       		.uleb128 0x3c
 3382 01bf 19       		.uleb128 0x19
 3383 01c0 00       		.byte	0
 3384 01c1 00       		.byte	0
 3385 01c2 22       		.uleb128 0x22
 3386 01c3 34       		.uleb128 0x34
 3387 01c4 00       		.byte	0
 3388 01c5 03       		.uleb128 0x3
 3389 01c6 0E       		.uleb128 0xe
 3390 01c7 3A       		.uleb128 0x3a
 3391 01c8 0B       		.uleb128 0xb
 3392 01c9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 114


 3393 01ca 0B       		.uleb128 0xb
 3394 01cb 49       		.uleb128 0x49
 3395 01cc 13       		.uleb128 0x13
 3396 01cd 3F       		.uleb128 0x3f
 3397 01ce 19       		.uleb128 0x19
 3398 01cf 02       		.uleb128 0x2
 3399 01d0 18       		.uleb128 0x18
 3400 01d1 00       		.byte	0
 3401 01d2 00       		.byte	0
 3402 01d3 23       		.uleb128 0x23
 3403 01d4 2E       		.uleb128 0x2e
 3404 01d5 00       		.byte	0
 3405 01d6 3F       		.uleb128 0x3f
 3406 01d7 19       		.uleb128 0x19
 3407 01d8 3C       		.uleb128 0x3c
 3408 01d9 19       		.uleb128 0x19
 3409 01da 6E       		.uleb128 0x6e
 3410 01db 0E       		.uleb128 0xe
 3411 01dc 03       		.uleb128 0x3
 3412 01dd 0E       		.uleb128 0xe
 3413 01de 3A       		.uleb128 0x3a
 3414 01df 0B       		.uleb128 0xb
 3415 01e0 3B       		.uleb128 0x3b
 3416 01e1 0B       		.uleb128 0xb
 3417 01e2 00       		.byte	0
 3418 01e3 00       		.byte	0
 3419 01e4 00       		.byte	0
 3420              		.section	.debug_loc,"",%progbits
 3421              	.Ldebug_loc0:
 3422              	.LLST0:
 3423 0000 06000000 		.4byte	.LVL1
 3424 0004 0A000000 		.4byte	.LVL2
 3425 0008 0100     		.2byte	0x1
 3426 000a 51       		.byte	0x51
 3427 000b 0A000000 		.4byte	.LVL2
 3428 000f 0E000000 		.4byte	.LVL3
 3429 0013 0100     		.2byte	0x1
 3430 0015 52       		.byte	0x52
 3431 0016 0E000000 		.4byte	.LVL3
 3432 001a 12000000 		.4byte	.LVL4
 3433 001e 0100     		.2byte	0x1
 3434 0020 51       		.byte	0x51
 3435 0021 12000000 		.4byte	.LVL4
 3436 0025 17000000 		.4byte	.LVL5-1
 3437 0029 0100     		.2byte	0x1
 3438 002b 52       		.byte	0x52
 3439 002c 00000000 		.4byte	0
 3440 0030 00000000 		.4byte	0
 3441              	.LLST1:
 3442 0034 00000000 		.4byte	.LVL6
 3443 0038 37000000 		.4byte	.LVL8-1
 3444 003c 0100     		.2byte	0x1
 3445 003e 50       		.byte	0x50
 3446 003f 37000000 		.4byte	.LVL8-1
 3447 0043 40000000 		.4byte	.LFE2
 3448 0047 0400     		.2byte	0x4
 3449 0049 F3       		.byte	0xf3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 115


 3450 004a 01       		.uleb128 0x1
 3451 004b 50       		.byte	0x50
 3452 004c 9F       		.byte	0x9f
 3453 004d 00000000 		.4byte	0
 3454 0051 00000000 		.4byte	0
 3455              	.LLST2:
 3456 0055 30000000 		.4byte	.LVL7
 3457 0059 3A000000 		.4byte	.LVL9
 3458 005d 0100     		.2byte	0x1
 3459 005f 54       		.byte	0x54
 3460 0060 3A000000 		.4byte	.LVL9
 3461 0064 40000000 		.4byte	.LFE2
 3462 0068 0100     		.2byte	0x1
 3463 006a 50       		.byte	0x50
 3464 006b 00000000 		.4byte	0
 3465 006f 00000000 		.4byte	0
 3466              	.LLST3:
 3467 0073 02000000 		.4byte	.LVL10
 3468 0077 22000000 		.4byte	.LVL12
 3469 007b 0200     		.2byte	0x2
 3470 007d 30       		.byte	0x30
 3471 007e 9F       		.byte	0x9f
 3472 007f 22000000 		.4byte	.LVL12
 3473 0083 2C000000 		.4byte	.LFE3
 3474 0087 0100     		.2byte	0x1
 3475 0089 50       		.byte	0x50
 3476 008a 00000000 		.4byte	0
 3477 008e 00000000 		.4byte	0
 3478              	.LLST4:
 3479 0092 02000000 		.4byte	.LVL13
 3480 0096 12000000 		.4byte	.LVL14
 3481 009a 0300     		.2byte	0x3
 3482 009c 09       		.byte	0x9
 3483 009d FF       		.byte	0xff
 3484 009e 9F       		.byte	0x9f
 3485 009f 12000000 		.4byte	.LVL14
 3486 00a3 14000000 		.4byte	.LVL15
 3487 00a7 0100     		.2byte	0x1
 3488 00a9 50       		.byte	0x50
 3489 00aa 18000000 		.4byte	.LVL16
 3490 00ae 31000000 		.4byte	.LVL17-1
 3491 00b2 0100     		.2byte	0x1
 3492 00b4 50       		.byte	0x50
 3493 00b5 32000000 		.4byte	.LVL17
 3494 00b9 3C000000 		.4byte	.LVL19
 3495 00bd 0100     		.2byte	0x1
 3496 00bf 50       		.byte	0x50
 3497 00c0 3C000000 		.4byte	.LVL19
 3498 00c4 3E000000 		.4byte	.LVL20
 3499 00c8 0300     		.2byte	0x3
 3500 00ca 09       		.byte	0x9
 3501 00cb FF       		.byte	0xff
 3502 00cc 9F       		.byte	0x9f
 3503 00cd 3E000000 		.4byte	.LVL20
 3504 00d1 48000000 		.4byte	.LFE4
 3505 00d5 0100     		.2byte	0x1
 3506 00d7 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 116


 3507 00d8 00000000 		.4byte	0
 3508 00dc 00000000 		.4byte	0
 3509              	.LLST5:
 3510 00e0 12000000 		.4byte	.LVL14
 3511 00e4 3C000000 		.4byte	.LVL19
 3512 00e8 0100     		.2byte	0x1
 3513 00ea 54       		.byte	0x54
 3514 00eb 00000000 		.4byte	0
 3515 00ef 00000000 		.4byte	0
 3516              	.LLST6:
 3517 00f3 00000000 		.4byte	.LVL21
 3518 00f7 06000000 		.4byte	.LVL22
 3519 00fb 0100     		.2byte	0x1
 3520 00fd 50       		.byte	0x50
 3521 00fe 06000000 		.4byte	.LVL22
 3522 0102 E4000000 		.4byte	.LFE6
 3523 0106 0400     		.2byte	0x4
 3524 0108 F3       		.byte	0xf3
 3525 0109 01       		.uleb128 0x1
 3526 010a 50       		.byte	0x50
 3527 010b 9F       		.byte	0x9f
 3528 010c 00000000 		.4byte	0
 3529 0110 00000000 		.4byte	0
 3530              	.LLST7:
 3531 0114 00000000 		.4byte	.LVL21
 3532 0118 0E000000 		.4byte	.LVL23
 3533 011c 0100     		.2byte	0x1
 3534 011e 51       		.byte	0x51
 3535 011f 0E000000 		.4byte	.LVL23
 3536 0123 E4000000 		.4byte	.LFE6
 3537 0127 0400     		.2byte	0x4
 3538 0129 F3       		.byte	0xf3
 3539 012a 01       		.uleb128 0x1
 3540 012b 51       		.byte	0x51
 3541 012c 9F       		.byte	0x9f
 3542 012d 00000000 		.4byte	0
 3543 0131 00000000 		.4byte	0
 3544              	.LLST8:
 3545 0135 00000000 		.4byte	.LVL21
 3546 0139 16000000 		.4byte	.LVL25
 3547 013d 0100     		.2byte	0x1
 3548 013f 52       		.byte	0x52
 3549 0140 16000000 		.4byte	.LVL25
 3550 0144 DC000000 		.4byte	.LVL40
 3551 0148 0100     		.2byte	0x1
 3552 014a 56       		.byte	0x56
 3553 014b DC000000 		.4byte	.LVL40
 3554 014f E4000000 		.4byte	.LFE6
 3555 0153 0400     		.2byte	0x4
 3556 0155 F3       		.byte	0xf3
 3557 0156 01       		.uleb128 0x1
 3558 0157 52       		.byte	0x52
 3559 0158 9F       		.byte	0x9f
 3560 0159 00000000 		.4byte	0
 3561 015d 00000000 		.4byte	0
 3562              	.LLST9:
 3563 0161 12000000 		.4byte	.LVL24
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 117


 3564 0165 16000000 		.4byte	.LVL25
 3565 0169 0200     		.2byte	0x2
 3566 016b 30       		.byte	0x30
 3567 016c 9F       		.byte	0x9f
 3568 016d 16000000 		.4byte	.LVL25
 3569 0171 DC000000 		.4byte	.LVL39
 3570 0175 0100     		.2byte	0x1
 3571 0177 55       		.byte	0x55
 3572 0178 00000000 		.4byte	0
 3573 017c 00000000 		.4byte	0
 3574              	.LLST10:
 3575 0180 1A000000 		.4byte	.LVL26
 3576 0184 39000000 		.4byte	.LVL27-1
 3577 0188 0100     		.2byte	0x1
 3578 018a 50       		.byte	0x50
 3579 018b 50000000 		.4byte	.LVL28
 3580 018f 6F000000 		.4byte	.LVL29-1
 3581 0193 0100     		.2byte	0x1
 3582 0195 50       		.byte	0x50
 3583 0196 76000000 		.4byte	.LVL30
 3584 019a 87000000 		.4byte	.LVL31-1
 3585 019e 0100     		.2byte	0x1
 3586 01a0 50       		.byte	0x50
 3587 01a1 8E000000 		.4byte	.LVL32
 3588 01a5 AD000000 		.4byte	.LVL33-1
 3589 01a9 0100     		.2byte	0x1
 3590 01ab 50       		.byte	0x50
 3591 01ac B4000000 		.4byte	.LVL34
 3592 01b0 D3000000 		.4byte	.LVL35-1
 3593 01b4 0100     		.2byte	0x1
 3594 01b6 50       		.byte	0x50
 3595 01b7 00000000 		.4byte	0
 3596 01bb 00000000 		.4byte	0
 3597              	.LLST11:
 3598 01bf 12000000 		.4byte	.LVL24
 3599 01c3 DC000000 		.4byte	.LVL38
 3600 01c7 0100     		.2byte	0x1
 3601 01c9 54       		.byte	0x54
 3602 01ca 00000000 		.4byte	0
 3603 01ce 00000000 		.4byte	0
 3604              	.LLST12:
 3605 01d2 00000000 		.4byte	.LVL41
 3606 01d6 17000000 		.4byte	.LVL42-1
 3607 01da 0100     		.2byte	0x1
 3608 01dc 50       		.byte	0x50
 3609 01dd 17000000 		.4byte	.LVL42-1
 3610 01e1 40000000 		.4byte	.LFE8
 3611 01e5 0400     		.2byte	0x4
 3612 01e7 F3       		.byte	0xf3
 3613 01e8 01       		.uleb128 0x1
 3614 01e9 50       		.byte	0x50
 3615 01ea 9F       		.byte	0x9f
 3616 01eb 00000000 		.4byte	0
 3617 01ef 00000000 		.4byte	0
 3618              	.LLST13:
 3619 01f3 08000000 		.4byte	.LVL45
 3620 01f7 40000000 		.4byte	.LFE9
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 118


 3621 01fb 0100     		.2byte	0x1
 3622 01fd 53       		.byte	0x53
 3623 01fe 00000000 		.4byte	0
 3624 0202 00000000 		.4byte	0
 3625              	.LLST14:
 3626 0206 02000000 		.4byte	.LVL44
 3627 020a 08000000 		.4byte	.LVL45
 3628 020e 0200     		.2byte	0x2
 3629 0210 30       		.byte	0x30
 3630 0211 9F       		.byte	0x9f
 3631 0212 08000000 		.4byte	.LVL45
 3632 0216 40000000 		.4byte	.LFE9
 3633 021a 0100     		.2byte	0x1
 3634 021c 50       		.byte	0x50
 3635 021d 00000000 		.4byte	0
 3636 0221 00000000 		.4byte	0
 3637              	.LLST15:
 3638 0225 0C000000 		.4byte	.LVL46
 3639 0229 1E000000 		.4byte	.LVL49
 3640 022d 0100     		.2byte	0x1
 3641 022f 52       		.byte	0x52
 3642 0230 20000000 		.4byte	.LVL50
 3643 0234 26000000 		.4byte	.LVL51
 3644 0238 0100     		.2byte	0x1
 3645 023a 51       		.byte	0x51
 3646 023b 26000000 		.4byte	.LVL51
 3647 023f 36000000 		.4byte	.LVL55
 3648 0243 0100     		.2byte	0x1
 3649 0245 52       		.byte	0x52
 3650 0246 00000000 		.4byte	0
 3651 024a 00000000 		.4byte	0
 3652              	.LLST16:
 3653 024e 16000000 		.4byte	.LVL57
 3654 0252 29000000 		.4byte	.LVL58-1
 3655 0256 0100     		.2byte	0x1
 3656 0258 50       		.byte	0x50
 3657 0259 29000000 		.4byte	.LVL58-1
 3658 025d 2C000000 		.4byte	.LVL59
 3659 0261 0100     		.2byte	0x1
 3660 0263 54       		.byte	0x54
 3661 0264 2C000000 		.4byte	.LVL59
 3662 0268 54000000 		.4byte	.LVL60
 3663 026c 0100     		.2byte	0x1
 3664 026e 50       		.byte	0x50
 3665 026f 54000000 		.4byte	.LVL60
 3666 0273 58000000 		.4byte	.LVL61
 3667 0277 0200     		.2byte	0x2
 3668 0279 30       		.byte	0x30
 3669 027a 9F       		.byte	0x9f
 3670 027b 58000000 		.4byte	.LVL61
 3671 027f 6A000000 		.4byte	.LVL62
 3672 0283 0100     		.2byte	0x1
 3673 0285 50       		.byte	0x50
 3674 0286 6A000000 		.4byte	.LVL62
 3675 028a 6E000000 		.4byte	.LVL63
 3676 028e 0100     		.2byte	0x1
 3677 0290 54       		.byte	0x54
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 119


 3678 0291 00000000 		.4byte	0
 3679 0295 00000000 		.4byte	0
 3680              	.LLST17:
 3681 0299 00000000 		.4byte	.LVL64
 3682 029d 05000000 		.4byte	.LVL65-1
 3683 02a1 0100     		.2byte	0x1
 3684 02a3 50       		.byte	0x50
 3685 02a4 05000000 		.4byte	.LVL65-1
 3686 02a8 08000000 		.4byte	.LFE11
 3687 02ac 0400     		.2byte	0x4
 3688 02ae F3       		.byte	0xf3
 3689 02af 01       		.uleb128 0x1
 3690 02b0 50       		.byte	0x50
 3691 02b1 9F       		.byte	0x9f
 3692 02b2 00000000 		.4byte	0
 3693 02b6 00000000 		.4byte	0
 3694              	.LLST18:
 3695 02ba 00000000 		.4byte	.LVL66
 3696 02be 08000000 		.4byte	.LVL67
 3697 02c2 0100     		.2byte	0x1
 3698 02c4 50       		.byte	0x50
 3699 02c5 08000000 		.4byte	.LVL67
 3700 02c9 0A000000 		.4byte	.LVL68
 3701 02cd 0300     		.2byte	0x3
 3702 02cf 70       		.byte	0x70
 3703 02d0 01       		.sleb128 1
 3704 02d1 9F       		.byte	0x9f
 3705 02d2 0A000000 		.4byte	.LVL68
 3706 02d6 30000000 		.4byte	.LFE12
 3707 02da 0400     		.2byte	0x4
 3708 02dc F3       		.byte	0xf3
 3709 02dd 01       		.uleb128 0x1
 3710 02de 50       		.byte	0x50
 3711 02df 9F       		.byte	0x9f
 3712 02e0 00000000 		.4byte	0
 3713 02e4 00000000 		.4byte	0
 3714              	.LLST19:
 3715 02e8 00000000 		.4byte	.LVL69
 3716 02ec 0A000000 		.4byte	.LVL73
 3717 02f0 0100     		.2byte	0x1
 3718 02f2 50       		.byte	0x50
 3719 02f3 0A000000 		.4byte	.LVL73
 3720 02f7 0C000000 		.4byte	.LVL74
 3721 02fb 0300     		.2byte	0x3
 3722 02fd 70       		.byte	0x70
 3723 02fe 01       		.sleb128 1
 3724 02ff 9F       		.byte	0x9f
 3725 0300 0C000000 		.4byte	.LVL74
 3726 0304 14000000 		.4byte	.LFE13
 3727 0308 0400     		.2byte	0x4
 3728 030a F3       		.byte	0xf3
 3729 030b 01       		.uleb128 0x1
 3730 030c 50       		.byte	0x50
 3731 030d 9F       		.byte	0x9f
 3732 030e 00000000 		.4byte	0
 3733 0312 00000000 		.4byte	0
 3734              	.LLST20:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 120


 3735 0316 04000000 		.4byte	.LVL70
 3736 031a 06000000 		.4byte	.LVL71
 3737 031e 0100     		.2byte	0x1
 3738 0320 53       		.byte	0x53
 3739 0321 08000000 		.4byte	.LVL72
 3740 0325 0C000000 		.4byte	.LVL74
 3741 0329 0100     		.2byte	0x1
 3742 032b 53       		.byte	0x53
 3743 032c 0C000000 		.4byte	.LVL74
 3744 0330 14000000 		.4byte	.LFE13
 3745 0334 0100     		.2byte	0x1
 3746 0336 50       		.byte	0x50
 3747 0337 00000000 		.4byte	0
 3748 033b 00000000 		.4byte	0
 3749              	.LLST21:
 3750 033f 00000000 		.4byte	.LVL75
 3751 0343 06000000 		.4byte	.LVL76
 3752 0347 0100     		.2byte	0x1
 3753 0349 50       		.byte	0x50
 3754 034a 06000000 		.4byte	.LVL76
 3755 034e 10000000 		.4byte	.LVL79
 3756 0352 0100     		.2byte	0x1
 3757 0354 54       		.byte	0x54
 3758 0355 10000000 		.4byte	.LVL79
 3759 0359 12000000 		.4byte	.LFE14
 3760 035d 0400     		.2byte	0x4
 3761 035f F3       		.byte	0xf3
 3762 0360 01       		.uleb128 0x1
 3763 0361 50       		.byte	0x50
 3764 0362 9F       		.byte	0x9f
 3765 0363 00000000 		.4byte	0
 3766 0367 00000000 		.4byte	0
 3767              	.LLST22:
 3768 036b 00000000 		.4byte	.LVL75
 3769 036f 09000000 		.4byte	.LVL77-1
 3770 0373 0100     		.2byte	0x1
 3771 0375 51       		.byte	0x51
 3772 0376 09000000 		.4byte	.LVL77-1
 3773 037a 12000000 		.4byte	.LFE14
 3774 037e 0400     		.2byte	0x4
 3775 0380 F3       		.byte	0xf3
 3776 0381 01       		.uleb128 0x1
 3777 0382 51       		.byte	0x51
 3778 0383 9F       		.byte	0x9f
 3779 0384 00000000 		.4byte	0
 3780 0388 00000000 		.4byte	0
 3781              	.LLST23:
 3782 038c 00000000 		.4byte	.LVL80
 3783 0390 15000000 		.4byte	.LVL83-1
 3784 0394 0100     		.2byte	0x1
 3785 0396 50       		.byte	0x50
 3786 0397 15000000 		.4byte	.LVL83-1
 3787 039b 1A000000 		.4byte	.LFE15
 3788 039f 0400     		.2byte	0x4
 3789 03a1 F3       		.byte	0xf3
 3790 03a2 01       		.uleb128 0x1
 3791 03a3 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 121


 3792 03a4 9F       		.byte	0x9f
 3793 03a5 00000000 		.4byte	0
 3794 03a9 00000000 		.4byte	0
 3795              	.LLST24:
 3796 03ad 02000000 		.4byte	.LVL81
 3797 03b1 0C000000 		.4byte	.LVL82
 3798 03b5 0200     		.2byte	0x2
 3799 03b7 30       		.byte	0x30
 3800 03b8 9F       		.byte	0x9f
 3801 03b9 0C000000 		.4byte	.LVL82
 3802 03bd 18000000 		.4byte	.LVL84
 3803 03c1 0100     		.2byte	0x1
 3804 03c3 54       		.byte	0x54
 3805 03c4 18000000 		.4byte	.LVL84
 3806 03c8 1A000000 		.4byte	.LFE15
 3807 03cc 0100     		.2byte	0x1
 3808 03ce 50       		.byte	0x50
 3809 03cf 00000000 		.4byte	0
 3810 03d3 00000000 		.4byte	0
 3811              	.LLST25:
 3812 03d7 02000000 		.4byte	.LVL85
 3813 03db 08000000 		.4byte	.LVL86
 3814 03df 0200     		.2byte	0x2
 3815 03e1 30       		.byte	0x30
 3816 03e2 9F       		.byte	0x9f
 3817 03e3 08000000 		.4byte	.LVL86
 3818 03e7 18000000 		.4byte	.LVL91
 3819 03eb 0100     		.2byte	0x1
 3820 03ed 55       		.byte	0x55
 3821 03ee 18000000 		.4byte	.LVL91
 3822 03f2 1A000000 		.4byte	.LFE16
 3823 03f6 0100     		.2byte	0x1
 3824 03f8 50       		.byte	0x50
 3825 03f9 00000000 		.4byte	0
 3826 03fd 00000000 		.4byte	0
 3827              	.LLST26:
 3828 0401 02000000 		.4byte	.LVL85
 3829 0405 08000000 		.4byte	.LVL86
 3830 0409 0200     		.2byte	0x2
 3831 040b 30       		.byte	0x30
 3832 040c 9F       		.byte	0x9f
 3833 040d 08000000 		.4byte	.LVL86
 3834 0411 18000000 		.4byte	.LVL90
 3835 0415 0100     		.2byte	0x1
 3836 0417 54       		.byte	0x54
 3837 0418 00000000 		.4byte	0
 3838 041c 00000000 		.4byte	0
 3839              	.LLST27:
 3840 0420 00000000 		.4byte	.LVL92
 3841 0424 04000000 		.4byte	.LVL93
 3842 0428 0100     		.2byte	0x1
 3843 042a 50       		.byte	0x50
 3844 042b 04000000 		.4byte	.LVL93
 3845 042f 14000000 		.4byte	.LFE17
 3846 0433 0400     		.2byte	0x4
 3847 0435 F3       		.byte	0xf3
 3848 0436 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 122


 3849 0437 50       		.byte	0x50
 3850 0438 9F       		.byte	0x9f
 3851 0439 00000000 		.4byte	0
 3852 043d 00000000 		.4byte	0
 3853              	.LLST28:
 3854 0441 00000000 		.4byte	.LVL94
 3855 0445 18000000 		.4byte	.LVL99
 3856 0449 0100     		.2byte	0x1
 3857 044b 50       		.byte	0x50
 3858 044c 18000000 		.4byte	.LVL99
 3859 0450 24000000 		.4byte	.LFE18
 3860 0454 0400     		.2byte	0x4
 3861 0456 F3       		.byte	0xf3
 3862 0457 01       		.uleb128 0x1
 3863 0458 50       		.byte	0x50
 3864 0459 9F       		.byte	0x9f
 3865 045a 00000000 		.4byte	0
 3866 045e 00000000 		.4byte	0
 3867              	.LLST29:
 3868 0462 06000000 		.4byte	.LVL96
 3869 0466 1B000000 		.4byte	.LVL100-1
 3870 046a 0100     		.2byte	0x1
 3871 046c 53       		.byte	0x53
 3872 046d 00000000 		.4byte	0
 3873 0471 00000000 		.4byte	0
 3874              	.LLST30:
 3875 0475 02000000 		.4byte	.LVL95
 3876 0479 06000000 		.4byte	.LVL96
 3877 047d 0200     		.2byte	0x2
 3878 047f 30       		.byte	0x30
 3879 0480 9F       		.byte	0x9f
 3880 0481 06000000 		.4byte	.LVL96
 3881 0485 24000000 		.4byte	.LFE18
 3882 0489 0200     		.2byte	0x2
 3883 048b 31       		.byte	0x31
 3884 048c 9F       		.byte	0x9f
 3885 048d 00000000 		.4byte	0
 3886 0491 00000000 		.4byte	0
 3887              	.LLST31:
 3888 0495 02000000 		.4byte	.LVL95
 3889 0499 06000000 		.4byte	.LVL96
 3890 049d 0200     		.2byte	0x2
 3891 049f 30       		.byte	0x30
 3892 04a0 9F       		.byte	0x9f
 3893 04a1 06000000 		.4byte	.LVL96
 3894 04a5 24000000 		.4byte	.LFE18
 3895 04a9 0200     		.2byte	0x2
 3896 04ab 32       		.byte	0x32
 3897 04ac 9F       		.byte	0x9f
 3898 04ad 00000000 		.4byte	0
 3899 04b1 00000000 		.4byte	0
 3900              	.LLST32:
 3901 04b5 02000000 		.4byte	.LVL101
 3902 04b9 06000000 		.4byte	.LVL102
 3903 04bd 0200     		.2byte	0x2
 3904 04bf 30       		.byte	0x30
 3905 04c0 9F       		.byte	0x9f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 123


 3906 04c1 06000000 		.4byte	.LVL102
 3907 04c5 1A000000 		.4byte	.LVL106
 3908 04c9 0100     		.2byte	0x1
 3909 04cb 54       		.byte	0x54
 3910 04cc 00000000 		.4byte	0
 3911 04d0 00000000 		.4byte	0
 3912              	.LLST33:
 3913 04d4 0E000000 		.4byte	.LVL103
 3914 04d8 13000000 		.4byte	.LVL104-1
 3915 04dc 0100     		.2byte	0x1
 3916 04de 51       		.byte	0x51
 3917 04df 00000000 		.4byte	0
 3918 04e3 00000000 		.4byte	0
 3919              	.LLST34:
 3920 04e7 08000000 		.4byte	.LVL107
 3921 04eb 18000000 		.4byte	.LVL108
 3922 04ef 0100     		.2byte	0x1
 3923 04f1 53       		.byte	0x53
 3924 04f2 18000000 		.4byte	.LVL108
 3925 04f6 1C000000 		.4byte	.LVL109
 3926 04fa 0500     		.2byte	0x5
 3927 04fc 03       		.byte	0x3
 3928 04fd 00000000 		.4byte	CapSense_1_immunity
 3929 0501 1C000000 		.4byte	.LVL109
 3930 0505 2A000000 		.4byte	.LVL110
 3931 0509 0100     		.2byte	0x1
 3932 050b 53       		.byte	0x53
 3933 050c 2A000000 		.4byte	.LVL110
 3934 0510 2E000000 		.4byte	.LVL111
 3935 0514 0500     		.2byte	0x5
 3936 0516 03       		.byte	0x3
 3937 0517 00000000 		.4byte	CapSense_1_immunity
 3938 051b 2E000000 		.4byte	.LVL111
 3939 051f 38000000 		.4byte	.LVL112
 3940 0523 0100     		.2byte	0x1
 3941 0525 53       		.byte	0x53
 3942 0526 38000000 		.4byte	.LVL112
 3943 052a 3D000000 		.4byte	.LVL114-1
 3944 052e 0500     		.2byte	0x5
 3945 0530 03       		.byte	0x3
 3946 0531 00000000 		.4byte	CapSense_1_immunity
 3947 0535 00000000 		.4byte	0
 3948 0539 00000000 		.4byte	0
 3949              	.LLST35:
 3950 053d 0A000000 		.4byte	.LVL118
 3951 0541 0E000000 		.4byte	.LVL119
 3952 0545 0100     		.2byte	0x1
 3953 0547 51       		.byte	0x51
 3954 0548 0E000000 		.4byte	.LVL119
 3955 054c 13000000 		.4byte	.LVL120-1
 3956 0550 0100     		.2byte	0x1
 3957 0552 53       		.byte	0x53
 3958 0553 1C000000 		.4byte	.LVL122
 3959 0557 25000000 		.4byte	.LVL124-1
 3960 055b 0100     		.2byte	0x1
 3961 055d 53       		.byte	0x53
 3962 055e 2E000000 		.4byte	.LVL126
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 124


 3963 0562 3D000000 		.4byte	.LVL129-1
 3964 0566 0100     		.2byte	0x1
 3965 0568 53       		.byte	0x53
 3966 0569 4A000000 		.4byte	.LVL132
 3967 056d 4C000000 		.4byte	.LVL133
 3968 0571 0100     		.2byte	0x1
 3969 0573 53       		.byte	0x53
 3970 0574 4C000000 		.4byte	.LVL133
 3971 0578 52000000 		.4byte	.LVL135
 3972 057c 0100     		.2byte	0x1
 3973 057e 55       		.byte	0x55
 3974 057f 00000000 		.4byte	0
 3975 0583 00000000 		.4byte	0
 3976              	.LLST36:
 3977 0587 06000000 		.4byte	.LVL117
 3978 058b 13000000 		.4byte	.LVL120-1
 3979 058f 0100     		.2byte	0x1
 3980 0591 50       		.byte	0x50
 3981 0592 18000000 		.4byte	.LVL121
 3982 0596 25000000 		.4byte	.LVL124-1
 3983 059a 0100     		.2byte	0x1
 3984 059c 50       		.byte	0x50
 3985 059d 2A000000 		.4byte	.LVL125
 3986 05a1 3D000000 		.4byte	.LVL129-1
 3987 05a5 0100     		.2byte	0x1
 3988 05a7 50       		.byte	0x50
 3989 05a8 48000000 		.4byte	.LVL131
 3990 05ac 51000000 		.4byte	.LVL134-1
 3991 05b0 0100     		.2byte	0x1
 3992 05b2 50       		.byte	0x50
 3993 05b3 00000000 		.4byte	0
 3994 05b7 00000000 		.4byte	0
 3995              		.section	.debug_aranges,"",%progbits
 3996 0000 BC000000 		.4byte	0xbc
 3997 0004 0200     		.2byte	0x2
 3998 0006 00000000 		.4byte	.Ldebug_info0
 3999 000a 04       		.byte	0x4
 4000 000b 00       		.byte	0
 4001 000c 0000     		.2byte	0
 4002 000e 0000     		.2byte	0
 4003 0010 00000000 		.4byte	.LFB20
 4004 0014 06000000 		.4byte	.LFE20-.LFB20
 4005 0018 00000000 		.4byte	.LFB7
 4006 001c 28000000 		.4byte	.LFE7-.LFB7
 4007 0020 00000000 		.4byte	.LFB1
 4008 0024 10000000 		.4byte	.LFE1-.LFB1
 4009 0028 00000000 		.4byte	.LFB2
 4010 002c 40000000 		.4byte	.LFE2-.LFB2
 4011 0030 00000000 		.4byte	.LFB3
 4012 0034 2C000000 		.4byte	.LFE3-.LFB3
 4013 0038 00000000 		.4byte	.LFB4
 4014 003c 48000000 		.4byte	.LFE4-.LFB4
 4015 0040 00000000 		.4byte	.LFB6
 4016 0044 E4000000 		.4byte	.LFE6-.LFB6
 4017 0048 00000000 		.4byte	.LFB8
 4018 004c 40000000 		.4byte	.LFE8-.LFB8
 4019 0050 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 125


 4020 0054 40000000 		.4byte	.LFE9-.LFB9
 4021 0058 00000000 		.4byte	.LFB10
 4022 005c 78000000 		.4byte	.LFE10-.LFB10
 4023 0060 00000000 		.4byte	.LFB11
 4024 0064 08000000 		.4byte	.LFE11-.LFB11
 4025 0068 00000000 		.4byte	.LFB12
 4026 006c 30000000 		.4byte	.LFE12-.LFB12
 4027 0070 00000000 		.4byte	.LFB13
 4028 0074 14000000 		.4byte	.LFE13-.LFB13
 4029 0078 00000000 		.4byte	.LFB14
 4030 007c 12000000 		.4byte	.LFE14-.LFB14
 4031 0080 00000000 		.4byte	.LFB15
 4032 0084 1A000000 		.4byte	.LFE15-.LFB15
 4033 0088 00000000 		.4byte	.LFB16
 4034 008c 1A000000 		.4byte	.LFE16-.LFB16
 4035 0090 00000000 		.4byte	.LFB17
 4036 0094 14000000 		.4byte	.LFE17-.LFB17
 4037 0098 00000000 		.4byte	.LFB18
 4038 009c 24000000 		.4byte	.LFE18-.LFB18
 4039 00a0 00000000 		.4byte	.LFB19
 4040 00a4 20000000 		.4byte	.LFE19-.LFB19
 4041 00a8 00000000 		.4byte	.LFB5
 4042 00ac 54000000 		.4byte	.LFE5-.LFB5
 4043 00b0 00000000 		.4byte	.LFB21
 4044 00b4 68000000 		.4byte	.LFE21-.LFB21
 4045 00b8 00000000 		.4byte	0
 4046 00bc 00000000 		.4byte	0
 4047              		.section	.debug_ranges,"",%progbits
 4048              	.Ldebug_ranges0:
 4049 0000 00000000 		.4byte	.LFB20
 4050 0004 06000000 		.4byte	.LFE20
 4051 0008 00000000 		.4byte	.LFB7
 4052 000c 28000000 		.4byte	.LFE7
 4053 0010 00000000 		.4byte	.LFB1
 4054 0014 10000000 		.4byte	.LFE1
 4055 0018 00000000 		.4byte	.LFB2
 4056 001c 40000000 		.4byte	.LFE2
 4057 0020 00000000 		.4byte	.LFB3
 4058 0024 2C000000 		.4byte	.LFE3
 4059 0028 00000000 		.4byte	.LFB4
 4060 002c 48000000 		.4byte	.LFE4
 4061 0030 00000000 		.4byte	.LFB6
 4062 0034 E4000000 		.4byte	.LFE6
 4063 0038 00000000 		.4byte	.LFB8
 4064 003c 40000000 		.4byte	.LFE8
 4065 0040 00000000 		.4byte	.LFB9
 4066 0044 40000000 		.4byte	.LFE9
 4067 0048 00000000 		.4byte	.LFB10
 4068 004c 78000000 		.4byte	.LFE10
 4069 0050 00000000 		.4byte	.LFB11
 4070 0054 08000000 		.4byte	.LFE11
 4071 0058 00000000 		.4byte	.LFB12
 4072 005c 30000000 		.4byte	.LFE12
 4073 0060 00000000 		.4byte	.LFB13
 4074 0064 14000000 		.4byte	.LFE13
 4075 0068 00000000 		.4byte	.LFB14
 4076 006c 12000000 		.4byte	.LFE14
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 126


 4077 0070 00000000 		.4byte	.LFB15
 4078 0074 1A000000 		.4byte	.LFE15
 4079 0078 00000000 		.4byte	.LFB16
 4080 007c 1A000000 		.4byte	.LFE16
 4081 0080 00000000 		.4byte	.LFB17
 4082 0084 14000000 		.4byte	.LFE17
 4083 0088 00000000 		.4byte	.LFB18
 4084 008c 24000000 		.4byte	.LFE18
 4085 0090 00000000 		.4byte	.LFB19
 4086 0094 20000000 		.4byte	.LFE19
 4087 0098 00000000 		.4byte	.LFB5
 4088 009c 54000000 		.4byte	.LFE5
 4089 00a0 00000000 		.4byte	.LFB21
 4090 00a4 68000000 		.4byte	.LFE21
 4091 00a8 00000000 		.4byte	0
 4092 00ac 00000000 		.4byte	0
 4093              		.section	.debug_line,"",%progbits
 4094              	.Ldebug_line0:
 4095 0000 9B030000 		.section	.debug_str,"MS",%progbits,1
 4095      0200C400 
 4095      00000201 
 4095      FB0E0D00 
 4095      01010101 
 4096              	.LASF107:
 4097 0000 73656E73 		.ascii	"sensorElement\000"
 4097      6F72456C 
 4097      656D656E 
 4097      7400
 4098              	.LASF142:
 4099 000e 43617053 		.ascii	"CapSense_1_BistDischargeExtCapacitors\000"
 4099      656E7365 
 4099      5F315F42 
 4099      69737444 
 4099      69736368 
 4100              	.LASF90:
 4101 0034 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 4101      656E7365 
 4101      5F315F46 
 4101      4C415348 
 4101      5F57445F 
 4102              	.LASF105:
 4103 004f 7363616E 		.ascii	"scanStatus\000"
 4103      53746174 
 4103      757300
 4104              	.LASF149:
 4105 005a 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 4105      656E7365 
 4105      5F315F63 
 4105      75725261 
 4105      6D536E73 
 4106              	.LASF65:
 4107 0072 736E7254 		.ascii	"snrTestWidgetId\000"
 4107      65737457 
 4107      69646765 
 4107      74496400 
 4108              	.LASF133:
 4109 0082 43617053 		.ascii	"CapSense_1_SsChangeClkFreq\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 127


 4109      656E7365 
 4109      5F315F53 
 4109      73436861 
 4109      6E676543 
 4110              	.LASF141:
 4111 009d 63656E74 		.ascii	"centerFreqTrim\000"
 4111      65724672 
 4111      65715472 
 4111      696D00
 4112              	.LASF8:
 4113 00ac 756E7369 		.ascii	"unsigned int\000"
 4113      676E6564 
 4113      20696E74 
 4113      00
 4114              	.LASF116:
 4115 00b9 43617053 		.ascii	"CapSense_1_SsSetIOsInDefaultState\000"
 4115      656E7365 
 4115      5F315F53 
 4115      73536574 
 4115      494F7349 
 4116              	.LASF139:
 4117 00db 43617053 		.ascii	"CapSense_1_SsInitialize\000"
 4117      656E7365 
 4117      5F315F53 
 4117      73496E69 
 4117      7469616C 
 4118              	.LASF55:
 4119 00f3 7363616E 		.ascii	"scanCounter\000"
 4119      436F756E 
 4119      74657200 
 4120              	.LASF53:
 4121 00ff 6877436C 		.ascii	"hwClock\000"
 4121      6F636B00 
 4122              	.LASF154:
 4123 0107 43617053 		.ascii	"CapSense_1_curSnsIOPtr\000"
 4123      656E7365 
 4123      5F315F63 
 4123      7572536E 
 4123      73494F50 
 4124              	.LASF140:
 4125 011e 696E6974 		.ascii	"initStatus\000"
 4125      53746174 
 4125      757300
 4126              	.LASF118:
 4127 0129 72656756 		.ascii	"regValue\000"
 4127      616C7565 
 4127      00
 4128              	.LASF145:
 4129 0132 43617053 		.ascii	"CapSense_1_ioList\000"
 4129      656E7365 
 4129      5F315F69 
 4129      6F4C6973 
 4129      7400
 4130              	.LASF111:
 4131 0144 696E7465 		.ascii	"interruptState\000"
 4131      72727570 
 4131      74537461 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 128


 4131      746500
 4132              	.LASF167:
 4133 0153 43617053 		.ascii	"CapSense_1_IsBusy\000"
 4133      656E7365 
 4133      5F315F49 
 4133      73427573 
 4133      7900
 4134              	.LASF97:
 4135 0165 6C667372 		.ascii	"lfsrScale\000"
 4135      5363616C 
 4135      6500
 4136              	.LASF98:
 4137 016f 43617053 		.ascii	"CapSense_1_SsSetWidgetTxClkSrc\000"
 4137      656E7365 
 4137      5F315F53 
 4137      73536574 
 4137      57696467 
 4138              	.LASF128:
 4139 018e 43617053 		.ascii	"CapSense_1_CalibrateWidget\000"
 4139      656E7365 
 4139      5F315F43 
 4139      616C6962 
 4139      72617465 
 4140              	.LASF115:
 4141 01a9 6D6F6465 		.ascii	"mode\000"
 4141      00
 4142              	.LASF138:
 4143 01ae 43617053 		.ascii	"CapSense_1_SsInitializeSourceSenseClk\000"
 4143      656E7365 
 4143      5F315F53 
 4143      73496E69 
 4143      7469616C 
 4144              	.LASF151:
 4145 01d4 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 4145      656E7365 
 4145      5F315F73 
 4145      63616E46 
 4145      72657149 
 4146              	.LASF42:
 4147 01ed 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 4147      656E7365 
 4147      5F315F52 
 4147      414D5F57 
 4147      445F4C49 
 4148              	.LASF109:
 4149 020b 656C7464 		.ascii	"eltdNum\000"
 4149      4E756D00 
 4150              	.LASF95:
 4151 0213 70747257 		.ascii	"ptrWdgt\000"
 4151      64677400 
 4152              	.LASF148:
 4153 021b 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
 4153      656E7365 
 4153      5F315F72 
 4153      65717565 
 4153      73745363 
 4154              	.LASF117:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 129


 4155 023b 6C6F6F70 		.ascii	"loopIndex\000"
 4155      496E6465 
 4155      7800
 4156              	.LASF99:
 4157 0245 43617053 		.ascii	"CapSense_1_SsDisableCSXMode\000"
 4157      656E7365 
 4157      5F315F53 
 4157      73446973 
 4157      61626C65 
 4158              	.LASF12:
 4159 0261 666C6F61 		.ascii	"float\000"
 4159      7400
 4160              	.LASF78:
 4161 0267 73686966 		.ascii	"shift\000"
 4161      7400
 4162              	.LASF166:
 4163 026d 433A5C55 		.ascii	"C:\\Users\\michael.machate\\Desktop\\Cypress_Firstt"
 4163      73657273 
 4163      5C6D6963 
 4163      6861656C 
 4163      2E6D6163 
 4164 029c 65737473 		.ascii	"ests\\FirstTestMutal.cydsn\000"
 4164      5C466972 
 4164      73745465 
 4164      73744D75 
 4164      74616C2E 
 4165              	.LASF164:
 4166 02b6 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4166      43313120 
 4166      352E342E 
 4166      31203230 
 4166      31363036 
 4167 02e9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4167      20726576 
 4167      6973696F 
 4167      6E203233 
 4167      37373135 
 4168 031c 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4168      67202D66 
 4168      66756E63 
 4168      74696F6E 
 4168      2D736563 
 4169              	.LASF103:
 4170 0348 43617053 		.ascii	"CapSense_1_SetupWidget\000"
 4170      656E7365 
 4170      5F315F53 
 4170      65747570 
 4170      57696467 
 4171              	.LASF163:
 4172 035f 43794465 		.ascii	"CyDelayUs\000"
 4172      6C617955 
 4172      7300
 4173              	.LASF64:
 4174 0369 736E734C 		.ascii	"snsList\000"
 4174      69737400 
 4175              	.LASF7:
 4176 0371 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 130


 4176      206C6F6E 
 4176      6720756E 
 4176      7369676E 
 4176      65642069 
 4177              	.LASF66:
 4178 0388 736E7254 		.ascii	"snrTestSensorId\000"
 4178      65737453 
 4178      656E736F 
 4178      72496400 
 4179              	.LASF87:
 4180 0398 77646774 		.ascii	"wdgtType\000"
 4180      54797065 
 4180      00
 4181              	.LASF96:
 4182 03a1 6C667372 		.ascii	"lfsrSize\000"
 4182      53697A65 
 4182      00
 4183              	.LASF160:
 4184 03aa 43617053 		.ascii	"CapSense_1_CSXInitialize\000"
 4184      656E7365 
 4184      5F315F43 
 4184      5358496E 
 4184      69746961 
 4185              	.LASF19:
 4186 03c3 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 4186      656E7365 
 4186      5F315F4C 
 4186      4F575F42 
 4186      534C4E5F 
 4187              	.LASF25:
 4188 03e0 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ENUM\000"
 4188      656E7365 
 4188      5F315F53 
 4188      454E5345 
 4188      5F4D4554 
 4189              	.LASF132:
 4190 03fd 76616C75 		.ascii	"value\000"
 4190      6500
 4191              	.LASF161:
 4192 0403 43617053 		.ascii	"CapSense_1_ISR_StartEx\000"
 4192      656E7365 
 4192      5F315F49 
 4192      53525F53 
 4192      74617274 
 4193              	.LASF72:
 4194 041a 64725074 		.ascii	"drPtr\000"
 4194      7200
 4195              	.LASF121:
 4196 0420 43617053 		.ascii	"CapSense_1_SsIsrInitialize\000"
 4196      656E7365 
 4196      5F315F53 
 4196      73497372 
 4196      496E6974 
 4197              	.LASF23:
 4198 043b 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 4198      656E7365 
 4198      5F315F53 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 131


 4198      454E5345 
 4198      5F4D4554 
 4199              	.LASF32:
 4200 045a 6C6F7742 		.ascii	"lowBslnRst\000"
 4200      736C6E52 
 4200      737400
 4201              	.LASF113:
 4202 0465 43617053 		.ascii	"CapSense_1_SetPinState\000"
 4202      656E7365 
 4202      5F315F53 
 4202      65745069 
 4202      6E537461 
 4203              	.LASF114:
 4204 047c 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 4204      656E7365 
 4204      5F315F53 
 4204      73537769 
 4204      74636853 
 4205              	.LASF123:
 4206 049b 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 4206      656E7365 
 4206      5F315F53 
 4206      73536574 
 4206      4D6F6443 
 4207              	.LASF86:
 4208 04be 746F7461 		.ascii	"totalNumSns\000"
 4208      6C4E756D 
 4208      536E7300 
 4209              	.LASF155:
 4210 04ca 43617053 		.ascii	"CapSense_1_CSXElectrodeCheck\000"
 4210      656E7365 
 4210      5F315F43 
 4210      5358456C 
 4210      65637472 
 4211              	.LASF124:
 4212 04e7 6D6F6443 		.ascii	"modClk\000"
 4212      6C6B00
 4213              	.LASF28:
 4214 04ee 6E6F6973 		.ascii	"noiseTh\000"
 4214      65546800 
 4215              	.LASF14:
 4216 04f6 63686172 		.ascii	"char\000"
 4216      00
 4217              	.LASF159:
 4218 04fb 43794578 		.ascii	"CyExitCriticalSection\000"
 4218      69744372 
 4218      69746963 
 4218      616C5365 
 4218      6374696F 
 4219              	.LASF106:
 4220 0511 43617053 		.ascii	"CapSense_1_ScanAllWidgets\000"
 4220      656E7365 
 4220      5F315F53 
 4220      63616E41 
 4220      6C6C5769 
 4221              	.LASF76:
 4222 052b 6873696F 		.ascii	"hsiomShift\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 132


 4222      6D536869 
 4222      667400
 4223              	.LASF10:
 4224 0536 75696E74 		.ascii	"uint16\000"
 4224      313600
 4225              	.LASF26:
 4226 053d 7265736F 		.ascii	"resolution\000"
 4226      6C757469 
 4226      6F6E00
 4227              	.LASF69:
 4228 0548 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 4228      656E7365 
 4228      5F315F52 
 4228      414D5F53 
 4228      54525543 
 4229              	.LASF56:
 4230 055e 73746174 		.ascii	"status\000"
 4230      757300
 4231              	.LASF47:
 4232 0565 69646163 		.ascii	"idacComp\000"
 4232      436F6D70 
 4232      00
 4233              	.LASF71:
 4234 056e 70635074 		.ascii	"pcPtr\000"
 4234      7200
 4235              	.LASF6:
 4236 0574 6C6F6E67 		.ascii	"long long int\000"
 4236      206C6F6E 
 4236      6720696E 
 4236      7400
 4237              	.LASF18:
 4238 0582 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 4238      656E7365 
 4238      5F315F54 
 4238      48524553 
 4238      484F4C44 
 4239              	.LASF31:
 4240 059c 6F6E4465 		.ascii	"onDebounce\000"
 4240      626F756E 
 4240      636500
 4241              	.LASF125:
 4242 05a7 43617053 		.ascii	"CapSense_1_SsSetSnsClockDivider\000"
 4242      656E7365 
 4242      5F315F53 
 4242      73536574 
 4242      536E7343 
 4243              	.LASF129:
 4244 05c7 63616C69 		.ascii	"calibrateStatus\000"
 4244      62726174 
 4244      65537461 
 4244      74757300 
 4245              	.LASF63:
 4246 05d7 77646774 		.ascii	"wdgtList\000"
 4246      4C697374 
 4246      00
 4247              	.LASF80:
 4248 05e0 70747232 		.ascii	"ptr2SnsFlash\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 133


 4248      536E7346 
 4248      6C617368 
 4248      00
 4249              	.LASF68:
 4250 05ed 736E7254 		.ascii	"snrTestRawCount\000"
 4250      65737452 
 4250      6177436F 
 4250      756E7400 
 4251              	.LASF136:
 4252 05fd 66726571 		.ascii	"freqOffset1\000"
 4252      4F666673 
 4252      65743100 
 4253              	.LASF29:
 4254 0609 6E4E6F69 		.ascii	"nNoiseTh\000"
 4254      73655468 
 4254      00
 4255              	.LASF62:
 4256 0612 736E7343 		.ascii	"snsCsxClk\000"
 4256      7378436C 
 4256      6B00
 4257              	.LASF60:
 4258 061c 63736430 		.ascii	"csd0Config\000"
 4258      436F6E66 
 4258      696700
 4259              	.LASF17:
 4260 0627 63796973 		.ascii	"cyisraddress\000"
 4260      72616464 
 4260      72657373 
 4260      00
 4261              	.LASF137:
 4262 0634 66726571 		.ascii	"freqOffset2\000"
 4262      4F666673 
 4262      65743200 
 4263              	.LASF93:
 4264 0640 6C6F6E67 		.ascii	"long double\000"
 4264      20646F75 
 4264      626C6500 
 4265              	.LASF34:
 4266 064c 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 4266      656E7365 
 4266      5F315F52 
 4266      414D5F57 
 4266      445F4241 
 4267              	.LASF70:
 4268 066a 6873696F 		.ascii	"hsiomPtr\000"
 4268      6D507472 
 4268      00
 4269              	.LASF11:
 4270 0673 75696E74 		.ascii	"uint32\000"
 4270      333200
 4271              	.LASF30:
 4272 067a 68797374 		.ascii	"hysteresis\000"
 4272      65726573 
 4272      697300
 4273              	.LASF83:
 4274 0685 70747232 		.ascii	"ptr2FltrHistory\000"
 4274      466C7472 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 134


 4274      48697374 
 4274      6F727900 
 4275              	.LASF20:
 4276 0695 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 4276      656E7365 
 4276      5F315F55 
 4276      4E444546 
 4276      494E4544 
 4277              	.LASF50:
 4278 06ac 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 4278      656E7365 
 4278      5F315F52 
 4278      414D5F53 
 4278      4E535F4C 
 4279              	.LASF75:
 4280 06cb 6D61736B 		.ascii	"mask\000"
 4280      00
 4281              	.LASF165:
 4282 06d0 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_Sensing.c\000"
 4282      72617465 
 4282      645F536F 
 4282      75726365 
 4282      5C50536F 
 4283              	.LASF131:
 4284 06fc 43617053 		.ascii	"CapSense_1_SsChangeImoFreq\000"
 4284      656E7365 
 4284      5F315F53 
 4284      73436861 
 4284      6E676549 
 4285              	.LASF162:
 4286 0717 43617053 		.ascii	"CapSense_1_CSXCalibrateWidget\000"
 4286      656E7365 
 4286      5F315F43 
 4286      53584361 
 4286      6C696272 
 4287              	.LASF94:
 4288 0735 77646774 		.ascii	"wdgtIndex\000"
 4288      496E6465 
 4288      7800
 4289              	.LASF143:
 4290 073f 43617053 		.ascii	"CapSense_1_dsRam\000"
 4290      656E7365 
 4290      5F315F64 
 4290      7352616D 
 4290      00
 4291              	.LASF104:
 4292 0750 43617053 		.ascii	"CapSense_1_Scan\000"
 4292      656E7365 
 4292      5F315F53 
 4292      63616E00 
 4293              	.LASF24:
 4294 0760 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 4294      656E7365 
 4294      5F315F53 
 4294      454E5345 
 4294      5F4D4554 
 4295              	.LASF16:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 135


 4296 077e 72656733 		.ascii	"reg32\000"
 4296      3200
 4297              	.LASF67:
 4298 0784 736E7254 		.ascii	"snrTestScanCounter\000"
 4298      65737453 
 4298      63616E43 
 4298      6F756E74 
 4298      657200
 4299              	.LASF51:
 4300 0797 636F6E66 		.ascii	"configId\000"
 4300      69674964 
 4300      00
 4301              	.LASF82:
 4302 07a0 70747232 		.ascii	"ptr2SnsRam\000"
 4302      536E7352 
 4302      616D00
 4303              	.LASF92:
 4304 07ab 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 4304      656E7365 
 4304      5F315F46 
 4304      4C415348 
 4304      5F535452 
 4305              	.LASF59:
 4306 07c3 736E7353 		.ascii	"snsStatus\000"
 4306      74617475 
 4306      7300
 4307              	.LASF120:
 4308 07cd 706F7374 		.ascii	"postScanStatus\000"
 4308      5363616E 
 4308      53746174 
 4308      757300
 4309              	.LASF33:
 4310 07dc 736E7343 		.ascii	"snsClkSource\000"
 4310      6C6B536F 
 4310      75726365 
 4310      00
 4311              	.LASF48:
 4312 07e9 73697A65 		.ascii	"sizetype\000"
 4312      74797065 
 4312      00
 4313              	.LASF2:
 4314 07f2 73686F72 		.ascii	"short int\000"
 4314      7420696E 
 4314      7400
 4315              	.LASF153:
 4316 07fc 43617053 		.ascii	"CapSense_1_curFlashWdgtPtr\000"
 4316      656E7365 
 4316      5F315F63 
 4316      7572466C 
 4316      61736857 
 4317              	.LASF4:
 4318 0817 6C6F6E67 		.ascii	"long int\000"
 4318      20696E74 
 4318      00
 4319              	.LASF57:
 4320 0820 77646774 		.ascii	"wdgtEnable\000"
 4320      456E6162 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 136


 4320      6C6500
 4321              	.LASF127:
 4322 082b 43617053 		.ascii	"CapSense_1_SsSetClockDividers\000"
 4322      656E7365 
 4322      5F315F53 
 4322      73536574 
 4322      436C6F63 
 4323              	.LASF144:
 4324 0849 43617053 		.ascii	"CapSense_1_dsFlash\000"
 4324      656E7365 
 4324      5F315F64 
 4324      73466C61 
 4324      736800
 4325              	.LASF45:
 4326 085c 64696666 		.ascii	"diff\000"
 4326      00
 4327              	.LASF54:
 4328 0861 74756E65 		.ascii	"tunerCmd\000"
 4328      72436D64 
 4328      00
 4329              	.LASF73:
 4330 086a 70735074 		.ascii	"psPtr\000"
 4330      7200
 4331              	.LASF22:
 4332 0870 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 4332      656E7365 
 4332      5F315F53 
 4332      454E5345 
 4332      5F4D4554 
 4333              	.LASF36:
 4334 088e 62757474 		.ascii	"button0\000"
 4334      6F6E3000 
 4335              	.LASF37:
 4336 0896 62757474 		.ascii	"button1\000"
 4336      6F6E3100 
 4337              	.LASF38:
 4338 089e 62757474 		.ascii	"button2\000"
 4338      6F6E3200 
 4339              	.LASF39:
 4340 08a6 62757474 		.ascii	"button3\000"
 4340      6F6E3300 
 4341              	.LASF40:
 4342 08ae 62757474 		.ascii	"button4\000"
 4342      6F6E3400 
 4343              	.LASF41:
 4344 08b6 62757474 		.ascii	"button5\000"
 4344      6F6E3500 
 4345              	.LASF88:
 4346 08be 6E756D43 		.ascii	"numCols\000"
 4346      6F6C7300 
 4347              	.LASF58:
 4348 08c6 77646774 		.ascii	"wdgtStatus\000"
 4348      53746174 
 4348      757300
 4349              	.LASF147:
 4350 08d1 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 4350      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 137


 4350      5F315F73 
 4350      656E736F 
 4350      72496E64 
 4351              	.LASF156:
 4352 08e8 43617053 		.ascii	"CapSense_1_CSXSetupWidget\000"
 4352      656E7365 
 4352      5F315F43 
 4352      53585365 
 4352      74757057 
 4353              	.LASF21:
 4354 0902 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 4354      656E7365 
 4354      5F315F53 
 4354      454E5345 
 4354      5F4D4554 
 4355              	.LASF77:
 4356 0920 64725368 		.ascii	"drShift\000"
 4356      69667400 
 4357              	.LASF5:
 4358 0928 6C6F6E67 		.ascii	"long unsigned int\000"
 4358      20756E73 
 4358      69676E65 
 4358      6420696E 
 4358      7400
 4359              	.LASF122:
 4360 093a 61646472 		.ascii	"address\000"
 4360      65737300 
 4361              	.LASF84:
 4362 0942 70747232 		.ascii	"ptr2DebounceArr\000"
 4362      4465626F 
 4362      756E6365 
 4362      41727200 
 4363              	.LASF27:
 4364 0952 66696E67 		.ascii	"fingerTh\000"
 4364      65725468 
 4364      00
 4365              	.LASF130:
 4366 095b 43617053 		.ascii	"CapSense_1_CalibrateAllWidgets\000"
 4366      656E7365 
 4366      5F315F43 
 4366      616C6962 
 4366      72617465 
 4367              	.LASF44:
 4368 097a 62736C6E 		.ascii	"bslnExt\000"
 4368      45787400 
 4369              	.LASF134:
 4370 0982 63684964 		.ascii	"chId\000"
 4370      00
 4371              	.LASF15:
 4372 0987 63797374 		.ascii	"cystatus\000"
 4372      61747573 
 4372      00
 4373              	.LASF1:
 4374 0990 756E7369 		.ascii	"unsigned char\000"
 4374      676E6564 
 4374      20636861 
 4374      7200
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 138


 4375              	.LASF85:
 4376 099e 73746174 		.ascii	"staticConfig\000"
 4376      6963436F 
 4376      6E666967 
 4376      00
 4377              	.LASF61:
 4378 09ab 6D6F6443 		.ascii	"modCsxClk\000"
 4378      7378436C 
 4378      6B00
 4379              	.LASF112:
 4380 09b5 696F5074 		.ascii	"ioPtr\000"
 4380      7200
 4381              	.LASF81:
 4382 09bb 70747232 		.ascii	"ptr2WdgtRam\000"
 4382      57646774 
 4382      52616D00 
 4383              	.LASF89:
 4384 09c7 6E756D52 		.ascii	"numRows\000"
 4384      6F777300 
 4385              	.LASF108:
 4386 09cf 73746174 		.ascii	"state\000"
 4386      6500
 4387              	.LASF157:
 4388 09d5 43617053 		.ascii	"CapSense_1_CSXScan\000"
 4388      656E7365 
 4388      5F315F43 
 4388      53585363 
 4388      616E00
 4389              	.LASF110:
 4390 09e8 656C7464 		.ascii	"eltdIndex\000"
 4390      496E6465 
 4390      7800
 4391              	.LASF74:
 4392 09f2 6873696F 		.ascii	"hsiomMask\000"
 4392      6D4D6173 
 4392      6B00
 4393              	.LASF150:
 4394 09fc 43617053 		.ascii	"CapSense_1_currentSenseMethod\000"
 4394      656E7365 
 4394      5F315F63 
 4394      75727265 
 4394      6E745365 
 4395              	.LASF126:
 4396 0a1a 736E7343 		.ascii	"snsClk\000"
 4396      6C6B00
 4397              	.LASF158:
 4398 0a21 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4398      74657243 
 4398      72697469 
 4398      63616C53 
 4398      65637469 
 4399              	.LASF0:
 4400 0a38 7369676E 		.ascii	"signed char\000"
 4400      65642063 
 4400      68617200 
 4401              	.LASF43:
 4402 0a44 62736C6E 		.ascii	"bsln\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 139


 4402      00
 4403              	.LASF3:
 4404 0a49 73686F72 		.ascii	"short unsigned int\000"
 4404      7420756E 
 4404      7369676E 
 4404      65642069 
 4404      6E7400
 4405              	.LASF79:
 4406 0a5c 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 4406      656E7365 
 4406      5F315F46 
 4406      4C415348 
 4406      5F494F5F 
 4407              	.LASF152:
 4408 0a77 43617053 		.ascii	"CapSense_1_immunity\000"
 4408      656E7365 
 4408      5F315F69 
 4408      6D6D756E 
 4408      69747900 
 4409              	.LASF100:
 4410 0a8b 6E657752 		.ascii	"newRegValue\000"
 4410      65675661 
 4410      6C756500 
 4411              	.LASF9:
 4412 0a97 75696E74 		.ascii	"uint8\000"
 4412      3800
 4413              	.LASF13:
 4414 0a9d 646F7562 		.ascii	"double\000"
 4414      6C6500
 4415              	.LASF46:
 4416 0aa4 6E656742 		.ascii	"negBslnRstCnt\000"
 4416      736C6E52 
 4416      7374436E 
 4416      7400
 4417              	.LASF49:
 4418 0ab2 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 4418      656E7365 
 4418      5F315F52 
 4418      414D5F53 
 4418      4E535F53 
 4419              	.LASF135:
 4420 0acc 736E7343 		.ascii	"snsClkDivider\000"
 4420      6C6B4469 
 4420      76696465 
 4420      7200
 4421              	.LASF52:
 4422 0ada 64657669 		.ascii	"deviceId\000"
 4422      63654964 
 4422      00
 4423              	.LASF102:
 4424 0ae3 77696467 		.ascii	"widgetStatus\000"
 4424      65745374 
 4424      61747573 
 4424      00
 4425              	.LASF35:
 4426 0af0 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 4426      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVCOyXG.s 			page 140


 4426      5F315F52 
 4426      414D5F57 
 4426      445F4255 
 4427              	.LASF101:
 4428 0b10 77696467 		.ascii	"widgetId\000"
 4428      65744964 
 4428      00
 4429              	.LASF119:
 4430 0b19 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 4430      656E7365 
 4430      5F315F53 
 4430      73506F73 
 4430      74416C6C 
 4431              	.LASF146:
 4432 0b39 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 4432      656E7365 
 4432      5F315F77 
 4432      69646765 
 4432      74496E64 
 4433              	.LASF91:
 4434 0b50 77646774 		.ascii	"wdgtArray\000"
 4434      41727261 
 4434      7900
 4435              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
