ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsCSDPostScan,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsCSDPostScan, %function
  24              	CapSense_1_SsCSDPostScan:
  25              	.LFB3:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_INT.c"
   1:Generated_Source\PSoC4/CapSense_1_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_INT.c **** * \file CapSense_1_INT.c
   3:Generated_Source\PSoC4/CapSense_1_INT.c **** * \version 5.20
   4:Generated_Source\PSoC4/CapSense_1_INT.c **** *
   5:Generated_Source\PSoC4/CapSense_1_INT.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_INT.c **** *   This file contains the source code for implementation of the Component's
   7:Generated_Source\PSoC4/CapSense_1_INT.c **** *   Interrupt Service Routine (ISR).
   8:Generated_Source\PSoC4/CapSense_1_INT.c **** *
   9:Generated_Source\PSoC4/CapSense_1_INT.c **** * \see CapSense_1 v5.20 Datasheet
  10:Generated_Source\PSoC4/CapSense_1_INT.c **** *
  11:Generated_Source\PSoC4/CapSense_1_INT.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_1_INT.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_1_INT.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_INT.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_1_INT.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_1_INT.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_1_INT.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_1_INT.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_1_INT.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_1_INT.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_1_INT.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_1_INT.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_1_INT.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_1_INT.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_1_INT.c **** *
  26:Generated_Source\PSoC4/CapSense_1_INT.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_1_INT.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_1_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_1_INT.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_1_INT.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_1_INT.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_INT.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_1_INT.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_1_INT.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_1_INT.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_1_INT.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_1_INT.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_1_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_1_INT.c **** #include "cytypes.h"
  40:Generated_Source\PSoC4/CapSense_1_INT.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_1_INT.c **** #include "CapSense_1_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_1_INT.c **** #include "CapSense_1_Structure.h"
  43:Generated_Source\PSoC4/CapSense_1_INT.c **** #include "CapSense_1_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_1_INT.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  45:Generated_Source\PSoC4/CapSense_1_INT.c ****     #include "CapSense_1_SensingCSD_LL.h"
  46:Generated_Source\PSoC4/CapSense_1_INT.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  47:Generated_Source\PSoC4/CapSense_1_INT.c **** #include "cyapicallbacks.h"
  48:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  49:Generated_Source\PSoC4/CapSense_1_INT.c **** /*******************************************************************************
  50:Generated_Source\PSoC4/CapSense_1_INT.c **** * Static Function Prototypes
  51:Generated_Source\PSoC4/CapSense_1_INT.c **** *******************************************************************************/
  52:Generated_Source\PSoC4/CapSense_1_INT.c **** /**
  53:Generated_Source\PSoC4/CapSense_1_INT.c **** * \cond SECTION_C_INTERNAL
  54:Generated_Source\PSoC4/CapSense_1_INT.c **** * \addtogroup group_c_internal
  55:Generated_Source\PSoC4/CapSense_1_INT.c **** * \{
  56:Generated_Source\PSoC4/CapSense_1_INT.c **** */
  57:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  58:Generated_Source\PSoC4/CapSense_1_INT.c **** #if (((CapSense_1_ENABLE == CapSense_1_CSD_EN) || (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)) && 
  59:Generated_Source\PSoC4/CapSense_1_INT.c ****      (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN))
  60:Generated_Source\PSoC4/CapSense_1_INT.c ****     static void CapSense_1_SsNextFrequencyScan(void);
  61:Generated_Source\PSoC4/CapSense_1_INT.c **** #endif /* (((CapSense_1_ENABLE == CapSense_1_CSD_EN) || (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN
  62:Generated_Source\PSoC4/CapSense_1_INT.c ****             (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)) */
  63:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  64:Generated_Source\PSoC4/CapSense_1_INT.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN))
  65:Generated_Source\PSoC4/CapSense_1_INT.c ****     static void CapSense_1_SsCSDPostScan(void);
  66:Generated_Source\PSoC4/CapSense_1_INT.c ****     static void CapSense_1_SsCSDInitNextScan(void);
  67:Generated_Source\PSoC4/CapSense_1_INT.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
  68:Generated_Source\PSoC4/CapSense_1_INT.c **** /** \}
  69:Generated_Source\PSoC4/CapSense_1_INT.c **** * \endcond */
  70:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  71:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  72:Generated_Source\PSoC4/CapSense_1_INT.c **** /**
  73:Generated_Source\PSoC4/CapSense_1_INT.c **** * \cond SECTION_C_INTERRUPT
  74:Generated_Source\PSoC4/CapSense_1_INT.c **** * \addtogroup group_c_interrupt
  75:Generated_Source\PSoC4/CapSense_1_INT.c **** * \{
  76:Generated_Source\PSoC4/CapSense_1_INT.c **** */
  77:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  78:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  79:Generated_Source\PSoC4/CapSense_1_INT.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN))
  80:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  81:Generated_Source\PSoC4/CapSense_1_INT.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  82:Generated_Source\PSoC4/CapSense_1_INT.c ****     /* Fourth-generation HW block part */
  83:Generated_Source\PSoC4/CapSense_1_INT.c **** 
  84:Generated_Source\PSoC4/CapSense_1_INT.c ****     /*******************************************************************************
  85:Generated_Source\PSoC4/CapSense_1_INT.c ****     * Function Name: CapSense_1_CSDPostSingleScan
  86:Generated_Source\PSoC4/CapSense_1_INT.c ****     ****************************************************************************//**
  87:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
  88:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This is an internal ISR function for the single-sensor scanning implementation.
  90:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
  91:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \details
  92:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This ISR handler is triggered when the user calls the
  93:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_CSDScanExt() function.
  94:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
  95:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed for Third-generation HW block:
  96:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Disable the CSD interrupt.
  97:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
  98:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
  99:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Update the Scan Counter.
 100:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Reset the BUSY flag.
 101:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Enable the CSD interrupt.
 102:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 103:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed for Fourth-generation HW block:
 104:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Check if the raw data is not noisy.
 105:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 106:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 107:Generated_Source\PSoC4/CapSense_1_INT.c ****     *      multi-frequency is enabled.
 108:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Update the Scan Counter.
 109:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Reset the BUSY flag.
 110:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Enable the CSD interrupt.
 111:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 112:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next frequency
 113:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  channels when multi-frequency scanning is enabled.
 114:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 115:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This function has two Macro Callbacks that allow calling the user code
 116:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  from macros specified in Component's generated code. Refer to the
 117:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 118:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  for details.
 119:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 120:Generated_Source\PSoC4/CapSense_1_INT.c ****     *******************************************************************************/
 121:Generated_Source\PSoC4/CapSense_1_INT.c ****     CY_ISR(CapSense_1_CSDPostSingleScan)
 122:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 123:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_ENTRY_CALLBACK
 124:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_EntryCallback();
 125:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_ENTRY_CALLBACK */
 126:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 127:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Clear pending interrupt */
 128:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
 129:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 130:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN)
 131:Generated_Source\PSoC4/CapSense_1_INT.c ****             if ((CapSense_1_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_1_RESULT_VAL1_PTR) &
 132:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                         CapSense_1_RESULT_VAL1_BAD_CONVS_MASK) >>
 133:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                         CapSense_1_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 134:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                         (0u < CapSense_1_badConversionsNum))
 135:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 136:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Decrement bad conversions number */
 137:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_badConversionsNum--;
 138:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 139:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Start the re-scan */
 140:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_AZ0_SKIP_MASK |
 141:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                              CapSense_1_SEQ_START_AZ1_SKIP_MASK |
 142:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                              CapSense_1_SEQ_START_START_MASK);
 143:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 144:Generated_Source\PSoC4/CapSense_1_INT.c ****             else
 145:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN) */
 147:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 148:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsCSDPostScan();
 149:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 150:Generated_Source\PSoC4/CapSense_1_INT.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 151:Generated_Source\PSoC4/CapSense_1_INT.c ****                 if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 152:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 153:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Scan the next channel */
 154:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsNextFrequencyScan();
 155:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 156:Generated_Source\PSoC4/CapSense_1_INT.c ****                 else
 157:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 158:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 159:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 160:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 161:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 162:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
 163:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #else
 164:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
 165:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 166:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 167:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 168:Generated_Source\PSoC4/CapSense_1_INT.c ****                         /* Disable Fourth-generation HW block */
 169:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
 170:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 171:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 172:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Update Scan Counter */
 173:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_dsRam.scanCounter++;
 174:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 175:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 176:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_dsRam.status &= ~(CapSense_1_SW_STS_BUSY | CapSense_1_WDGT_SW_STS_BU
 177:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 178:Generated_Source\PSoC4/CapSense_1_INT.c ****             #else
 179:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 180:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 181:Generated_Source\PSoC4/CapSense_1_INT.c ****                         /* Disable Fourth-generation HW block */
 182:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
 183:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 184:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 185:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Update Scan Counter */
 186:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_dsRam.scanCounter++;
 187:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 188:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Sensor is totally scanned. Reset BUSY flag */
 189:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_dsRam.status &= ~(CapSense_1_SW_STS_BUSY | CapSense_1_WDGT_SW_STS_BU
 190:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 191:Generated_Source\PSoC4/CapSense_1_INT.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 192:Generated_Source\PSoC4/CapSense_1_INT.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN)
 193:Generated_Source\PSoC4/CapSense_1_INT.c ****         }
 194:Generated_Source\PSoC4/CapSense_1_INT.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN) */
 195:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 196:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_EXIT_CALLBACK
 197:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_ExitCallback();
 198:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_EXIT_CALLBACK */
 199:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 200:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 201:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 202:Generated_Source\PSoC4/CapSense_1_INT.c ****     /*******************************************************************************
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_INT.c ****     * Function Name: CapSense_1_CSDPostMultiScan
 204:Generated_Source\PSoC4/CapSense_1_INT.c ****     ****************************************************************************//**
 205:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 206:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \brief
 207:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 208:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  implementation.
 209:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 210:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \details
 211:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This ISR handler is triggered when the user calls the
 212:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_Scan() or CapSense_1_ScanAllWidgets() APIs.
 213:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 214:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed:
 215:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Disable the CSD interrupt.
 216:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 217:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 218:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 219:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Update the Scan Counter.
 220:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Reset the BUSY flag.
 221:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    7. Enable the CSD interrupt.
 222:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 223:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 224:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  widget has more than one sensor.
 225:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 226:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_ScanAllWidgets() APIs are called and the project has
 227:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  more than one widget.
 228:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 229:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 230:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 231:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 232:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 233:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 234:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  for details.
 235:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 236:Generated_Source\PSoC4/CapSense_1_INT.c ****     *******************************************************************************/
 237:Generated_Source\PSoC4/CapSense_1_INT.c ****     CY_ISR(CapSense_1_CSDPostMultiScan)
 238:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 239:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address */
 240:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
 241:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                           CapSense_1_dsFlash.wdgtArray[CapSense_1_w
 242:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                           + CapSense_1_sensorIndex;
 243:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 244:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_ENTRY_CALLBACK
 245:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_EntryCallback();
 246:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_ENTRY_CALLBACK */
 247:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 248:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Clear pending interrupt */
 249:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
 250:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 251:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN)
 252:Generated_Source\PSoC4/CapSense_1_INT.c ****             if ((CapSense_1_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_1_RESULT_VAL1_PTR) &
 253:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                       CapSense_1_RESULT_VAL1_BAD_CONVS_MASK) >>
 254:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                       CapSense_1_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 255:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                       (0u < CapSense_1_badConversionsNum))
 256:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 257:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Decrement bad conversions number */
 258:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_badConversionsNum--;
 259:Generated_Source\PSoC4/CapSense_1_INT.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Start the re-scan */
 261:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_AZ0_SKIP_MASK |
 262:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                              CapSense_1_SEQ_START_AZ1_SKIP_MASK |
 263:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                              CapSense_1_SEQ_START_START_MASK);
 264:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 265:Generated_Source\PSoC4/CapSense_1_INT.c ****             else
 266:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 267:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN) */
 268:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 269:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsCSDPostScan();
 270:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 271:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 272:Generated_Source\PSoC4/CapSense_1_INT.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 273:Generated_Source\PSoC4/CapSense_1_INT.c ****                 if (CapSense_1_FREQ_CHANNEL_2 == CapSense_1_scanFreqIndex)
 274:Generated_Source\PSoC4/CapSense_1_INT.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 275:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 276:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Disable sensor */
 277:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_CSDDisconnectSns(curSnsIOPtr);
 278:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 279:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 280:Generated_Source\PSoC4/CapSense_1_INT.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 281:Generated_Source\PSoC4/CapSense_1_INT.c ****                 if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 282:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 283:Generated_Source\PSoC4/CapSense_1_INT.c ****                      /* Scan the next channel */
 284:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsNextFrequencyScan();
 285:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 286:Generated_Source\PSoC4/CapSense_1_INT.c ****                 else
 287:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 288:Generated_Source\PSoC4/CapSense_1_INT.c ****                      /* All channels are scanned. Set IMO to zero channel */
 289:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 290:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 291:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 292:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
 293:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #else
 294:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
 295:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 296:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 297:Generated_Source\PSoC4/CapSense_1_INT.c ****                      /* Scan the next sensor */
 298:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsCSDInitNextScan();
 299:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 300:Generated_Source\PSoC4/CapSense_1_INT.c ****             #else
 301:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Scan the next sensor */
 302:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsCSDInitNextScan();
 303:Generated_Source\PSoC4/CapSense_1_INT.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 304:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN)
 305:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 306:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN) */
 307:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 308:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_EXIT_CALLBACK
 309:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_ExitCallback();
 310:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_EXIT_CALLBACK */
 311:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 312:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 313:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 314:Generated_Source\PSoC4/CapSense_1_INT.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 315:Generated_Source\PSoC4/CapSense_1_INT.c ****     /*******************************************************************************
 316:Generated_Source\PSoC4/CapSense_1_INT.c ****     * Function Name: CapSense_1_CSDPostMultiScanGanged
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_INT.c ****     ****************************************************************************//**
 318:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 319:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \brief
 320:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 321:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  implementation for ganged sensors.
 322:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 323:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \details
 324:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This ISR handler is triggered when the user calls the
 325:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_Scan() API for a ganged sensor or the
 326:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_ScanAllWidgets() API in the project with ganged sensors.
 327:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 328:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed:
 329:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Disable the CSD interrupt.
 330:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 331:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 332:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 333:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Update the Scan Counter.
 334:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Reset the BUSY flag.
 335:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    7. Enable the CSD interrupt.
 336:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 337:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 338:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  widget has more than one sensor.
 339:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 340:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_ScanAllWidgets() APIs are called and the project has
 341:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  more than one widget.
 342:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 343:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 344:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 345:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 346:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 347:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 348:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  for details.
 349:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 350:Generated_Source\PSoC4/CapSense_1_INT.c ****     *******************************************************************************/
 351:Generated_Source\PSoC4/CapSense_1_INT.c ****     CY_ISR(CapSense_1_CSDPostMultiScanGanged)
 352:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 353:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_ENTRY_CALLBACK
 354:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_EntryCallback();
 355:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_ENTRY_CALLBACK */
 356:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 357:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Clear pending interrupt */
 358:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
 359:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 360:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN)
 361:Generated_Source\PSoC4/CapSense_1_INT.c ****             if ((CapSense_1_CSD_NOISE_METRIC_TH < ((CY_GET_REG32(CapSense_1_RESULT_VAL1_PTR) &
 362:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                       CapSense_1_RESULT_VAL1_BAD_CONVS_MASK) >>
 363:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                       CapSense_1_RESULT_VAL1_BAD_CONVS_SHIFT)) &&
 364:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                       (0u < CapSense_1_badConversionsNum))
 365:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 366:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Decrement bad conversions number */
 367:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_badConversionsNum--;
 368:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 369:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Start the re-scan */
 370:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_AZ0_SKIP_MASK |
 371:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                              CapSense_1_SEQ_START_AZ1_SKIP_MASK |
 372:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                              CapSense_1_SEQ_START_START_MASK);
 373:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_INT.c ****             else
 375:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 376:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN) */
 377:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 378:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsCSDPostScan();
 379:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 380:Generated_Source\PSoC4/CapSense_1_INT.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 381:Generated_Source\PSoC4/CapSense_1_INT.c ****                 if (CapSense_1_FREQ_CHANNEL_2 == CapSense_1_scanFreqIndex)
 382:Generated_Source\PSoC4/CapSense_1_INT.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 383:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 384:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsCSDDisconnectSnsExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1
 385:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 386:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 387:Generated_Source\PSoC4/CapSense_1_INT.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 388:Generated_Source\PSoC4/CapSense_1_INT.c ****                 if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 389:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 390:Generated_Source\PSoC4/CapSense_1_INT.c ****                      /* Scan the next channel */
 391:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsNextFrequencyScan();
 392:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 393:Generated_Source\PSoC4/CapSense_1_INT.c ****                 else
 394:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 395:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* All channels are scanned. Set IMO to zero channel */
 396:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 397:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 398:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 399:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
 400:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #else
 401:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
 402:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 403:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 404:Generated_Source\PSoC4/CapSense_1_INT.c ****                      /* Scan the next sensor */
 405:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsCSDInitNextScan();
 406:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 407:Generated_Source\PSoC4/CapSense_1_INT.c ****             #else
 408:Generated_Source\PSoC4/CapSense_1_INT.c ****                  /* Scan the next sensor */
 409:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsCSDInitNextScan();
 410:Generated_Source\PSoC4/CapSense_1_INT.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 411:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN)
 412:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 413:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN) */
 414:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 415:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_EXIT_CALLBACK
 416:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_ExitCallback();
 417:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_EXIT_CALLBACK */
 418:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 419:Generated_Source\PSoC4/CapSense_1_INT.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 420:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 421:Generated_Source\PSoC4/CapSense_1_INT.c **** #else
 422:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 423:Generated_Source\PSoC4/CapSense_1_INT.c ****     /* Third-generation HW block part */
 424:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 425:Generated_Source\PSoC4/CapSense_1_INT.c ****     /*******************************************************************************
 426:Generated_Source\PSoC4/CapSense_1_INT.c ****     * Function Name: CapSense_1_CSDPostSingleScan
 427:Generated_Source\PSoC4/CapSense_1_INT.c ****     ****************************************************************************//**
 428:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 429:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \brief
 430:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This is an internal ISR function for the single-sensor scanning implementation.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 9


 431:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 432:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \details
 433:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This ISR handler is triggered when the user calls the
 434:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_CSDScanExt() function.
 435:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 436:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed for Third-generation HW block:
 437:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Disable the CSD interrupt.
 438:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 439:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 440:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Update the Scan Counter.
 441:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Reset the BUSY flag.
 442:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Enable the CSD interrupt.
 443:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 444:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed for Fourth-generation HW block:
 445:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Check if the raw data is not noisy.
 446:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 447:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Configure and start the scan for the next frequency if the
 448:Generated_Source\PSoC4/CapSense_1_INT.c ****     *      multi-frequency is enabled.
 449:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Update the Scan Counter.
 450:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Reset the BUSY flag.
 451:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Enable the CSD interrupt.
 452:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 453:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next frequency
 454:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  channels when multi-frequency scanning is enabled.
 455:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 456:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This function has two Macro Callbacks that allow calling the user code
 457:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  from macros specified in Component's generated code. Refer to the
 458:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 459:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  for details.
 460:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 461:Generated_Source\PSoC4/CapSense_1_INT.c ****     *******************************************************************************/
 462:Generated_Source\PSoC4/CapSense_1_INT.c ****     CY_ISR(CapSense_1_CSDPostSingleScan)
 463:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 464:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_ENTRY_CALLBACK
 465:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_EntryCallback();
 466:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_ENTRY_CALLBACK */
 467:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 468:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Clear pending interrupt */
 469:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
 470:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 471:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Read Rawdata */
 472:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_SsCSDPostScan();
 473:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 474:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 475:Generated_Source\PSoC4/CapSense_1_INT.c ****             if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 476:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 477:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 478:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHAR
 479:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 480:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsNextFrequencyScan();
 481:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 482:Generated_Source\PSoC4/CapSense_1_INT.c ****             else
 483:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 484:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 485:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 486:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 487:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 10


 488:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #else
 489:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
 490:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 491:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 492:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 493:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Disable Third-generation HW block. Connect Vref Buffer to AMUX bus */
 494:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 495:Generated_Source\PSoC4/CapSense_1_INT.c ****                          (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 496:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CMOD_
 497:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #else
 498:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK
 499:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC
 500:Generated_Source\PSoC4/CapSense_1_INT.c ****                                (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 501:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #else
 502:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 503:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRE
 504:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 505:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 506:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Update Scan Counter */
 507:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_dsRam.scanCounter++;
 508:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 509:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 510:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_dsRam.status &= ~(CapSense_1_SW_STS_BUSY | CapSense_1_WDGT_SW_STS_BUSY);
 511:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 512:Generated_Source\PSoC4/CapSense_1_INT.c ****         #else
 513:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 514:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 515:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Disable Third-generation HW block. Connect Vref Buffer to AMUX bus */
 516:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 517:Generated_Source\PSoC4/CapSense_1_INT.c ****                          (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 518:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CMOD_
 519:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #else
 520:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK
 521:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC
 522:Generated_Source\PSoC4/CapSense_1_INT.c ****                                (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 523:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #else
 524:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Connect Vref Buffer to AMUX bus. Third-generation HW block is enabled */
 525:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRE
 526:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 527:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 528:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Update Scan Counter */
 529:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_dsRam.scanCounter++;
 530:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 531:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Sensor is totally scanned. Reset BUSY flag */
 532:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_dsRam.status &= ~(CapSense_1_SW_STS_BUSY | CapSense_1_WDGT_SW_STS_BUSY);
 533:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 534:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 535:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 536:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_EXIT_CALLBACK
 537:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_ExitCallback();
 538:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_EXIT_CALLBACK */
 539:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 540:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 541:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 542:Generated_Source\PSoC4/CapSense_1_INT.c ****     /*******************************************************************************
 543:Generated_Source\PSoC4/CapSense_1_INT.c ****     * Function Name: CapSense_1_CSDPostMultiScan
 544:Generated_Source\PSoC4/CapSense_1_INT.c ****     ****************************************************************************//**
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 11


 545:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 546:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \brief
 547:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 548:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  implementation.
 549:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 550:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \details
 551:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This ISR handler is triggered when the user calls the
 552:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_Scan() or CapSense_1_ScanAllWidgets() APIs.
 553:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 554:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed:
 555:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Disable the CSD interrupt.
 556:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 557:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 558:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
 559:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Update the Scan Counter.
 560:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Reset the BUSY flag.
 561:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    7. Enable the CSD interrupt.
 562:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 563:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 564:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  widget has more than one sensor.
 565:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 566:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_ScanAllWidgets() APIs are called and the project has
 567:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  more than one widget.
 568:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 569:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 570:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 571:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 572:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 573:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 574:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  for details.
 575:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 576:Generated_Source\PSoC4/CapSense_1_INT.c ****     *******************************************************************************/
 577:Generated_Source\PSoC4/CapSense_1_INT.c ****     CY_ISR(CapSense_1_CSDPostMultiScan)
 578:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 579:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address        */
 580:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_FLASH_IO_STRUCT const *curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
 581:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                           CapSense_1_dsFlash.wdgtArray[CapSense_1_w
 582:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                           + CapSense_1_sensorIndex;
 583:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 584:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_ENTRY_CALLBACK
 585:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_EntryCallback();
 586:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_ENTRY_CALLBACK */
 587:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 588:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Clear pending interrupt */
 589:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
 590:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 591:Generated_Source\PSoC4/CapSense_1_INT.c ****          /* Read Rawdata */
 592:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_SsCSDPostScan();
 593:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 594:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Connect Vref Buffer to AMUX bus */
 595:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_CONFI
 596:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 597:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 598:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Disable sensor when all frequency channels are scanned */
 599:Generated_Source\PSoC4/CapSense_1_INT.c ****             if (CapSense_1_FREQ_CHANNEL_2 == CapSense_1_scanFreqIndex)
 600:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 601:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* Disable sensor */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 12


 602:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_CSDDisconnectSns(curSnsIOPtr);
 603:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 604:Generated_Source\PSoC4/CapSense_1_INT.c ****         #else
 605:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Disable sensor */
 606:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_CSDDisconnectSns(curSnsIOPtr);
 607:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 608:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 609:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 610:Generated_Source\PSoC4/CapSense_1_INT.c ****             if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 611:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 612:Generated_Source\PSoC4/CapSense_1_INT.c ****                  /* Scan the next channel */
 613:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsNextFrequencyScan();
 614:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 615:Generated_Source\PSoC4/CapSense_1_INT.c ****             else
 616:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 617:Generated_Source\PSoC4/CapSense_1_INT.c ****                  /* All channels are scanned. Set IMO to zero channel */
 618:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 619:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 620:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 621:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
 622:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #else
 623:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
 624:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 625:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 626:Generated_Source\PSoC4/CapSense_1_INT.c ****                  /* Scan the next sensor */
 627:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsCSDInitNextScan();
 628:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 629:Generated_Source\PSoC4/CapSense_1_INT.c ****         #else
 630:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Scan the next sensor */
 631:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsCSDInitNextScan();
 632:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 633:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 634:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_EXIT_CALLBACK
 635:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_ExitCallback();
 636:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_EXIT_CALLBACK */
 637:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 638:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 639:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 640:Generated_Source\PSoC4/CapSense_1_INT.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 641:Generated_Source\PSoC4/CapSense_1_INT.c ****     /*******************************************************************************
 642:Generated_Source\PSoC4/CapSense_1_INT.c ****     * Function Name: CapSense_1_CSDPostMultiScanGanged
 643:Generated_Source\PSoC4/CapSense_1_INT.c ****     ****************************************************************************//**
 644:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 645:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \brief
 646:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This is an internal ISR function for the multiple-sensor scanning
 647:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  implementation for ganged sensors.
 648:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 649:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \details
 650:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This ISR handler is triggered when the user calls the
 651:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_Scan() API for a ganged sensor or the
 652:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_ScanAllWidgets() API in the project with ganged sensors.
 653:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 654:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The following tasks are performed:
 655:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    1. Disable the CSD interrupt.
 656:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    2. Read the Counter register and update the data structure with raw data.
 657:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    3. Connect the Vref buffer to the AMUX bus.
 658:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    4. Disable the CSD block (after the widget has been scanned).
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 13


 659:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    5. Update the Scan Counter.
 660:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    6. Reset the BUSY flag.
 661:Generated_Source\PSoC4/CapSense_1_INT.c ****     *    7. Enable the CSD interrupt.
 662:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 663:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the previous sensor when the
 664:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  widget has more than one sensor.
 665:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler initializes scanning for the next widget when the
 666:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  CapSense_1_ScanAllWidgets() APIs are called and the project has
 667:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  more than one widget.
 668:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  The ISR handler changes the IMO and initializes scanning for the next
 669:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  frequency channels when multi-frequency scanning is enabled.
 670:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 671:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  This function has two Macro Callbacks that allow calling the user
 672:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  code from macros specified in Component's generated code. Refer to the
 673:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  \ref group_c_macrocallbacks section of the PSoC Creator User Guide
 674:Generated_Source\PSoC4/CapSense_1_INT.c ****     *  for details.
 675:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 676:Generated_Source\PSoC4/CapSense_1_INT.c ****     *******************************************************************************/
 677:Generated_Source\PSoC4/CapSense_1_INT.c ****     CY_ISR(CapSense_1_CSDPostMultiScanGanged)
 678:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 679:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_ENTRY_CALLBACK
 680:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_EntryCallback();
 681:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_ENTRY_CALLBACK */
 682:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 683:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Clear pending interrupt */
 684:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
 685:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 686:Generated_Source\PSoC4/CapSense_1_INT.c ****          /* Read Rawdata */
 687:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_SsCSDPostScan();
 688:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 689:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Connect Vref Buffer to AMUX bus */
 690:Generated_Source\PSoC4/CapSense_1_INT.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_CONFI
 691:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 692:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 693:Generated_Source\PSoC4/CapSense_1_INT.c ****             if (CapSense_1_FREQ_CHANNEL_2 == CapSense_1_scanFreqIndex)
 694:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 695:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsCSDDisconnectSnsExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1
 696:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 697:Generated_Source\PSoC4/CapSense_1_INT.c ****         #else
 698:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsCSDDisconnectSnsExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sen
 699:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 700:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 701:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 702:Generated_Source\PSoC4/CapSense_1_INT.c ****             if (CapSense_1_FREQ_CHANNEL_2 > CapSense_1_scanFreqIndex)
 703:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 704:Generated_Source\PSoC4/CapSense_1_INT.c ****                  /* Scan the next channel */
 705:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsNextFrequencyScan();
 706:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 707:Generated_Source\PSoC4/CapSense_1_INT.c ****             else
 708:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 709:Generated_Source\PSoC4/CapSense_1_INT.c ****                 /* All channels are scanned. Set IMO to zero channel */
 710:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
 711:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 712:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 713:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsChangeImoFreq(CapSense_1_FREQ_CHANNEL_0);
 714:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #else
 715:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsChangeClkFreq(CapSense_1_FREQ_CHANNEL_0);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 14


 716:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 717:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 718:Generated_Source\PSoC4/CapSense_1_INT.c ****                  /* Scan the next sensor */
 719:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsCSDInitNextScan();
 720:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 721:Generated_Source\PSoC4/CapSense_1_INT.c ****         #else
 722:Generated_Source\PSoC4/CapSense_1_INT.c ****              /* Scan the next sensor */
 723:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsCSDInitNextScan();
 724:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 725:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 726:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_EXIT_CALLBACK
 727:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_ExitCallback();
 728:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* CapSense_1_EXIT_CALLBACK */
 729:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 730:Generated_Source\PSoC4/CapSense_1_INT.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 731:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 732:Generated_Source\PSoC4/CapSense_1_INT.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 733:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 734:Generated_Source\PSoC4/CapSense_1_INT.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
 735:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 736:Generated_Source\PSoC4/CapSense_1_INT.c **** /** \}
 737:Generated_Source\PSoC4/CapSense_1_INT.c ****  * \endcond */
 738:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 739:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 740:Generated_Source\PSoC4/CapSense_1_INT.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN))
 741:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 742:Generated_Source\PSoC4/CapSense_1_INT.c **** /*******************************************************************************
 743:Generated_Source\PSoC4/CapSense_1_INT.c **** * Function Name: CapSense_1_SsCSDPostScan
 744:Generated_Source\PSoC4/CapSense_1_INT.c **** ****************************************************************************//**
 745:Generated_Source\PSoC4/CapSense_1_INT.c **** *
 746:Generated_Source\PSoC4/CapSense_1_INT.c **** * \brief
 747:Generated_Source\PSoC4/CapSense_1_INT.c **** *   This function reads rawdata and releases required HW resources after scan.
 748:Generated_Source\PSoC4/CapSense_1_INT.c **** *
 749:Generated_Source\PSoC4/CapSense_1_INT.c **** * \details
 750:Generated_Source\PSoC4/CapSense_1_INT.c **** *   This function performs following tasks after scan:
 751:Generated_Source\PSoC4/CapSense_1_INT.c **** *   - Reads SlotResult from Raw Counter;
 752:Generated_Source\PSoC4/CapSense_1_INT.c **** *   - Inits bad Conversions number;
 753:Generated_Source\PSoC4/CapSense_1_INT.c **** *   - Disconnects Vrefhi from AMUBUF positive input;
 754:Generated_Source\PSoC4/CapSense_1_INT.c **** *   - Disconnects AMUBUF output from CSDBUSB with sych PHI2+HSCMP;
 755:Generated_Source\PSoC4/CapSense_1_INT.c **** *   - Opens HCBV and HCBG switches.
 756:Generated_Source\PSoC4/CapSense_1_INT.c **** *
 757:Generated_Source\PSoC4/CapSense_1_INT.c **** *******************************************************************************/
 758:Generated_Source\PSoC4/CapSense_1_INT.c **** static void CapSense_1_SsCSDPostScan(void)
 759:Generated_Source\PSoC4/CapSense_1_INT.c **** {
  27              		.loc 1 759 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 760:Generated_Source\PSoC4/CapSense_1_INT.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 761:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 762:Generated_Source\PSoC4/CapSense_1_INT.c ****         uint32 tmpRawData;
 763:Generated_Source\PSoC4/CapSense_1_INT.c ****         uint32 tmpMaxCount;
 764:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 765:Generated_Source\PSoC4/CapSense_1_INT.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
  32              		.loc 1 765 0
  33 0000 104B     		ldr	r3, .L4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 15


  34 0002 1A78     		ldrb	r2, [r3]
  35 0004 D2B2     		uxtb	r2, r2
 764:Generated_Source\PSoC4/CapSense_1_INT.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
  36              		.loc 1 764 0
  37 0006 D300     		lsls	r3, r2, #3
  38 0008 9A1A     		subs	r2, r3, r2
  39 000a 9300     		lsls	r3, r2, #2
  40 000c 0E4A     		ldr	r2, .L4+4
  41 000e D318     		adds	r3, r2, r3
  42 0010 5B68     		ldr	r3, [r3, #4]
  43              	.LVL0:
 766:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 767:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Read SlotResult from Raw Counter */
 768:Generated_Source\PSoC4/CapSense_1_INT.c ****         tmpRawData = CapSense_1_RESULT_VAL1_VALUE_MASK & CY_GET_REG32(CapSense_1_COUNTER_PTR);
  44              		.loc 1 768 0
  45 0012 0E4A     		ldr	r2, .L4+8
  46 0014 1168     		ldr	r1, [r2]
  47 0016 0A04     		lsls	r2, r1, #16
  48 0018 120C     		lsrs	r2, r2, #16
  49              	.LVL1:
 769:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 770:Generated_Source\PSoC4/CapSense_1_INT.c ****         tmpMaxCount = ((1uL << ptrWdgt->resolution) - 1uL);
  50              		.loc 1 770 0
  51 001a 1888     		ldrh	r0, [r3]
  52 001c 0123     		movs	r3, #1
  53              	.LVL2:
  54 001e 8340     		lsls	r3, r3, r0
  55 0020 013B     		subs	r3, r3, #1
  56              	.LVL3:
 771:Generated_Source\PSoC4/CapSense_1_INT.c ****         if(tmpRawData < tmpMaxCount)
  57              		.loc 1 771 0
  58 0022 9A42     		cmp	r2, r3
  59 0024 06D2     		bcs	.L2
 772:Generated_Source\PSoC4/CapSense_1_INT.c ****         {
 773:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] = LO16(tmpRawData);
  60              		.loc 1 773 0
  61 0026 0A4B     		ldr	r3, .L4+12
  62              	.LVL4:
  63 0028 1A68     		ldr	r2, [r3]
  64              	.LVL5:
  65 002a 0A4B     		ldr	r3, .L4+16
  66 002c 1B78     		ldrb	r3, [r3]
  67 002e 5B00     		lsls	r3, r3, #1
  68 0030 D152     		strh	r1, [r2, r3]
  69 0032 05E0     		b	.L1
  70              	.LVL6:
  71              	.L2:
 774:Generated_Source\PSoC4/CapSense_1_INT.c ****         }
 775:Generated_Source\PSoC4/CapSense_1_INT.c ****         else
 776:Generated_Source\PSoC4/CapSense_1_INT.c ****         {
 777:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] = LO16(tmpMaxCount);
  72              		.loc 1 777 0
  73 0034 064A     		ldr	r2, .L4+12
  74              	.LVL7:
  75 0036 1168     		ldr	r1, [r2]
  76              	.LVL8:
  77 0038 064A     		ldr	r2, .L4+16
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 16


  78 003a 1278     		ldrb	r2, [r2]
  79 003c 5200     		lsls	r2, r2, #1
  80 003e 8B52     		strh	r3, [r1, r2]
  81              	.LVL9:
  82              	.L1:
 778:Generated_Source\PSoC4/CapSense_1_INT.c ****         }
 779:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 780:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN)
 781:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Init bad Conversions number */
 782:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_badConversionsNum = CapSense_1_BAD_CONVERSIONS_NUM;
 783:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_EN) */
 784:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 785:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 786:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Open HCBV and HCBG switches */
 787:Generated_Source\PSoC4/CapSense_1_INT.c ****             CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR, CapSense_1_SW_SHIELD_SEL_SW_HCBV_STATIC_OPEN
 788:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                              CapSense_1_SW_SHIELD_SEL_SW_HCBG_STATI
 789:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 790:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 791:Generated_Source\PSoC4/CapSense_1_INT.c ****     #else
 792:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 793:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Read SlotResult from Raw Counter */
 794:Generated_Source\PSoC4/CapSense_1_INT.c ****        CapSense_1_curRamSnsPtr->raw[CapSense_1_scanFreqIndex] = (uint16)CY_GET_REG32(CapSense_1_COU
 795:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 796:Generated_Source\PSoC4/CapSense_1_INT.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 797:Generated_Source\PSoC4/CapSense_1_INT.c **** }
  83              		.loc 1 797 0
  84              		@ sp needed
  85 0040 7047     		bx	lr
  86              	.L5:
  87 0042 C046     		.align	2
  88              	.L4:
  89 0044 00000000 		.word	CapSense_1_widgetIndex
  90 0048 00000000 		.word	CapSense_1_dsFlash
  91 004c D0000B40 		.word	1074462928
  92 0050 00000000 		.word	CapSense_1_curRamSnsPtr
  93 0054 00000000 		.word	CapSense_1_scanFreqIndex
  94              		.cfi_endproc
  95              	.LFE3:
  96              		.size	CapSense_1_SsCSDPostScan, .-CapSense_1_SsCSDPostScan
  97              		.section	.text.CapSense_1_SsNextFrequencyScan,"ax",%progbits
  98              		.align	2
  99              		.code	16
 100              		.thumb_func
 101              		.type	CapSense_1_SsNextFrequencyScan, %function
 102              	CapSense_1_SsNextFrequencyScan:
 103              	.LFB5:
 798:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 799:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 800:Generated_Source\PSoC4/CapSense_1_INT.c **** /*******************************************************************************
 801:Generated_Source\PSoC4/CapSense_1_INT.c **** * Function Name: CapSense_1_SsCSDInitNextScan
 802:Generated_Source\PSoC4/CapSense_1_INT.c **** ****************************************************************************//**
 803:Generated_Source\PSoC4/CapSense_1_INT.c **** *
 804:Generated_Source\PSoC4/CapSense_1_INT.c **** * \brief
 805:Generated_Source\PSoC4/CapSense_1_INT.c **** *   This function initializes the next sensor scan.
 806:Generated_Source\PSoC4/CapSense_1_INT.c **** *
 807:Generated_Source\PSoC4/CapSense_1_INT.c **** * \details
 808:Generated_Source\PSoC4/CapSense_1_INT.c **** *   The function increments the sensor index, updates sense clock for matrix
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 17


 809:Generated_Source\PSoC4/CapSense_1_INT.c **** *   or touchpad widgets only, sets up Compensation IDAC, enables the sensor and
 810:Generated_Source\PSoC4/CapSense_1_INT.c **** *   scans it. When all the sensors are scanned it continues to set up the next widget
 811:Generated_Source\PSoC4/CapSense_1_INT.c **** *   until all the widgets are scanned. The CSD block is disabled when all the widgets are
 812:Generated_Source\PSoC4/CapSense_1_INT.c **** *   scanned.
 813:Generated_Source\PSoC4/CapSense_1_INT.c **** *
 814:Generated_Source\PSoC4/CapSense_1_INT.c **** *******************************************************************************/
 815:Generated_Source\PSoC4/CapSense_1_INT.c **** static void CapSense_1_SsCSDInitNextScan(void)
 816:Generated_Source\PSoC4/CapSense_1_INT.c **** {
 817:Generated_Source\PSoC4/CapSense_1_INT.c ****     /* Declare and initialize ptr to widget and sensor structures to appropriate address */
 818:Generated_Source\PSoC4/CapSense_1_INT.c ****     #if (((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) || \
 819:Generated_Source\PSoC4/CapSense_1_INT.c ****           (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)) || \
 820:Generated_Source\PSoC4/CapSense_1_INT.c ****           (((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) && \
 821:Generated_Source\PSoC4/CapSense_1_INT.c ****           (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 822:Generated_Source\PSoC4/CapSense_1_INT.c ****           (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN))))
 823:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 824:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_wid
 825:Generated_Source\PSoC4/CapSense_1_INT.c ****     #endif
 826:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 827:Generated_Source\PSoC4/CapSense_1_INT.c ****     /* Check if all the sensors are scanned in widget */
 828:Generated_Source\PSoC4/CapSense_1_INT.c ****     if (((uint8)CapSense_1_dsFlash.wdgtArray[(CapSense_1_widgetIndex)].totalNumSns - 1u) > CapSense
 829:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 830:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Increment sensor index to configure next sensor in widget */
 831:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_sensorIndex++;
 832:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 833:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Update global pointer to CapSense_1_RAM_SNS_STRUCT to current sensor  */
 834:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
 835:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                   CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetInd
 836:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                   + CapSense_1_sensorIndex;
 837:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 838:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Configure clock divider to row or column */
 839:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) && \
 840:Generated_Source\PSoC4/CapSense_1_INT.c ****              (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN))
 841:Generated_Source\PSoC4/CapSense_1_INT.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
 842:Generated_Source\PSoC4/CapSense_1_INT.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
 843:Generated_Source\PSoC4/CapSense_1_INT.c ****             {
 844:Generated_Source\PSoC4/CapSense_1_INT.c ****                 CapSense_1_SsCSDConfigClock();
 845:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 846:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 847:Generated_Source\PSoC4/CapSense_1_INT.c ****                      /* Set up scanning resolution */
 848:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CapSense_1_SsCSDCalculateScanDuration(ptrWdgt);
 849:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 850:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 851:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) && \
 852:Generated_Source\PSoC4/CapSense_1_INT.c ****                    (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN))) */
 853:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 854:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Setup Compensation IDAC for next sensor in widget */
 855:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) || \
 856:Generated_Source\PSoC4/CapSense_1_INT.c ****              (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN))
 857:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
 858:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) || \
 859:Generated_Source\PSoC4/CapSense_1_INT.c ****                    (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)) */
 860:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 861:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Enable sensor */
 862:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_SsCSDConnectSensorExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sensorI
 863:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 864:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Proceed scanning */
 865:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_SsCSDStartSample();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 18


 866:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 867:Generated_Source\PSoC4/CapSense_1_INT.c ****     /* Call scan next widget API if requested, if not, complete the scan  */
 868:Generated_Source\PSoC4/CapSense_1_INT.c ****     else
 869:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 870:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_sensorIndex = 0u;
 871:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 872:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Current widget is totally scanned. Reset WIDGET BUSY flag */
 873:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_dsRam.status &= ~CapSense_1_WDGT_SW_STS_BUSY;
 874:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 875:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Check if all the widgets have been scanned */
 876:Generated_Source\PSoC4/CapSense_1_INT.c ****         if (CapSense_1_ENABLE == CapSense_1_requestScanAllWidget)
 877:Generated_Source\PSoC4/CapSense_1_INT.c ****         {
 878:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Configure and begin scanning next widget */
 879:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsPostAllWidgetsScan();
 880:Generated_Source\PSoC4/CapSense_1_INT.c ****         }
 881:Generated_Source\PSoC4/CapSense_1_INT.c ****         else
 882:Generated_Source\PSoC4/CapSense_1_INT.c ****         {
 883:Generated_Source\PSoC4/CapSense_1_INT.c ****             #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 884:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 885:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Disable the CSD block */
 886:Generated_Source\PSoC4/CapSense_1_INT.c ****                     CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
 887:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #else
 888:Generated_Source\PSoC4/CapSense_1_INT.c ****                     /* Disable the CSD block. Connect Vref Buffer to AMUX bus */
 889:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #if ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 890:Generated_Source\PSoC4/CapSense_1_INT.c ****                          (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 891:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CMOD_
 892:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #else
 893:Generated_Source\PSoC4/CapSense_1_INT.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK
 894:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC
 895:Generated_Source\PSoC4/CapSense_1_INT.c ****                                (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 896:Generated_Source\PSoC4/CapSense_1_INT.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 897:Generated_Source\PSoC4/CapSense_1_INT.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 898:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 899:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* All widgets are totally scanned. Reset BUSY flag */
 900:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
 901:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 902:Generated_Source\PSoC4/CapSense_1_INT.c ****             /* Update scan Counter */
 903:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_dsRam.scanCounter++;
 904:Generated_Source\PSoC4/CapSense_1_INT.c ****         }
 905:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 906:Generated_Source\PSoC4/CapSense_1_INT.c **** }
 907:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 908:Generated_Source\PSoC4/CapSense_1_INT.c **** #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 909:Generated_Source\PSoC4/CapSense_1_INT.c ****     /*******************************************************************************
 910:Generated_Source\PSoC4/CapSense_1_INT.c ****     * Function Name: CapSense_1_SsNextFrequencyScan
 911:Generated_Source\PSoC4/CapSense_1_INT.c ****     ****************************************************************************//**
 912:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 913:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \brief
 914:Generated_Source\PSoC4/CapSense_1_INT.c ****     *   This function scans the sensor on the next frequency channel.
 915:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 916:Generated_Source\PSoC4/CapSense_1_INT.c ****     * \details
 917:Generated_Source\PSoC4/CapSense_1_INT.c ****     *   The function increments the frequency channel, changes IMO and initializes
 918:Generated_Source\PSoC4/CapSense_1_INT.c ****     *   the scanning process of the same sensor.
 919:Generated_Source\PSoC4/CapSense_1_INT.c ****     *
 920:Generated_Source\PSoC4/CapSense_1_INT.c ****     *******************************************************************************/
 921:Generated_Source\PSoC4/CapSense_1_INT.c ****     static void CapSense_1_SsNextFrequencyScan(void)
 922:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 19


 104              		.loc 1 922 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 10B5     		push	{r4, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 4, -8
 111              		.cfi_offset 14, -4
 923:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 924:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_wid
 112              		.loc 1 924 0
 113 0002 0B4B     		ldr	r3, .L7
 114 0004 1A78     		ldrb	r2, [r3]
 115 0006 D2B2     		uxtb	r2, r2
 923:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 116              		.loc 1 923 0
 117 0008 D300     		lsls	r3, r2, #3
 118 000a 9A1A     		subs	r2, r3, r2
 119 000c 9300     		lsls	r3, r2, #2
 120 000e 094A     		ldr	r2, .L7+4
 121 0010 D318     		adds	r3, r2, r3
 122 0012 5C68     		ldr	r4, [r3, #4]
 123              	.LVL10:
 925:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 926:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_scanFreqIndex++;
 124              		.loc 1 926 0
 125 0014 084B     		ldr	r3, .L7+8
 126 0016 1878     		ldrb	r0, [r3]
 127 0018 0130     		adds	r0, r0, #1
 128 001a C0B2     		uxtb	r0, r0
 129 001c 1870     		strb	r0, [r3]
 927:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 928:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Set Immunity */
 929:Generated_Source\PSoC4/CapSense_1_INT.c ****         #if (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)
 930:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsChangeImoFreq((uint32)CapSense_1_scanFreqIndex);
 130              		.loc 1 930 0
 131 001e FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 132              	.LVL11:
 931:Generated_Source\PSoC4/CapSense_1_INT.c ****         #else
 932:Generated_Source\PSoC4/CapSense_1_INT.c ****             CapSense_1_SsChangeClkFreq((uint32)CapSense_1_scanFreqIndex);
 933:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD) */
 934:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 935:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Update IDAC registers */
 936:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
 133              		.loc 1 936 0
 134 0022 2000     		movs	r0, r4
 135 0024 FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 136              	.LVL12:
 937:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 938:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Proceed scanning */
 939:Generated_Source\PSoC4/CapSense_1_INT.c ****         CapSense_1_SsCSDStartSample();
 137              		.loc 1 939 0
 138 0028 FFF7FEFF 		bl	CapSense_1_SsCSDStartSample
 139              	.LVL13:
 940:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 140              		.loc 1 940 0
 141              		@ sp needed
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 20


 142              	.LVL14:
 143 002c 10BD     		pop	{r4, pc}
 144              	.L8:
 145 002e C046     		.align	2
 146              	.L7:
 147 0030 00000000 		.word	CapSense_1_widgetIndex
 148 0034 00000000 		.word	CapSense_1_dsFlash
 149 0038 00000000 		.word	CapSense_1_scanFreqIndex
 150              		.cfi_endproc
 151              	.LFE5:
 152              		.size	CapSense_1_SsNextFrequencyScan, .-CapSense_1_SsNextFrequencyScan
 153              		.section	.text.CapSense_1_SsCSDInitNextScan,"ax",%progbits
 154              		.align	2
 155              		.code	16
 156              		.thumb_func
 157              		.type	CapSense_1_SsCSDInitNextScan, %function
 158              	CapSense_1_SsCSDInitNextScan:
 159              	.LFB4:
 816:Generated_Source\PSoC4/CapSense_1_INT.c ****     /* Declare and initialize ptr to widget and sensor structures to appropriate address */
 160              		.loc 1 816 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164 0000 70B5     		push	{r4, r5, r6, lr}
 165              		.cfi_def_cfa_offset 16
 166              		.cfi_offset 4, -16
 167              		.cfi_offset 5, -12
 168              		.cfi_offset 6, -8
 169              		.cfi_offset 14, -4
 824:Generated_Source\PSoC4/CapSense_1_INT.c ****     #endif
 170              		.loc 1 824 0
 171 0002 274B     		ldr	r3, .L13
 172 0004 1978     		ldrb	r1, [r3]
 173 0006 C9B2     		uxtb	r1, r1
 823:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_wid
 174              		.loc 1 823 0
 175 0008 264C     		ldr	r4, .L13+4
 176 000a CA00     		lsls	r2, r1, #3
 177 000c 511A     		subs	r1, r2, r1
 178 000e 8A00     		lsls	r2, r1, #2
 179 0010 A218     		adds	r2, r4, r2
 180 0012 5068     		ldr	r0, [r2, #4]
 181              	.LVL15:
 828:Generated_Source\PSoC4/CapSense_1_INT.c ****     {
 182              		.loc 1 828 0
 183 0014 1A78     		ldrb	r2, [r3]
 184 0016 D2B2     		uxtb	r2, r2
 185 0018 D100     		lsls	r1, r2, #3
 186 001a 8A1A     		subs	r2, r1, r2
 187 001c 9300     		lsls	r3, r2, #2
 188 001e E318     		adds	r3, r4, r3
 189 0020 1A7E     		ldrb	r2, [r3, #24]
 190 0022 013A     		subs	r2, r2, #1
 191 0024 204B     		ldr	r3, .L13+8
 192 0026 1B78     		ldrb	r3, [r3]
 193 0028 DBB2     		uxtb	r3, r3
 194 002a 9A42     		cmp	r2, r3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 21


 195 002c 20D9     		bls	.L10
 831:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 196              		.loc 1 831 0
 197 002e 1E4C     		ldr	r4, .L13+8
 198 0030 2378     		ldrb	r3, [r4]
 199 0032 0133     		adds	r3, r3, #1
 200 0034 DBB2     		uxtb	r3, r3
 201 0036 2370     		strb	r3, [r4]
 834:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                   CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetInd
 202              		.loc 1 834 0
 203 0038 194D     		ldr	r5, .L13
 204 003a 2A78     		ldrb	r2, [r5]
 205 003c D2B2     		uxtb	r2, r2
 835:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                   + CapSense_1_sensorIndex;
 206              		.loc 1 835 0
 207 003e D300     		lsls	r3, r2, #3
 208 0040 9A1A     		subs	r2, r3, r2
 209 0042 9300     		lsls	r3, r2, #2
 210 0044 174A     		ldr	r2, .L13+4
 211 0046 D318     		adds	r3, r2, r3
 212 0048 9968     		ldr	r1, [r3, #8]
 836:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 213              		.loc 1 836 0
 214 004a 2378     		ldrb	r3, [r4]
 215 004c DBB2     		uxtb	r3, r3
 216 004e 5A00     		lsls	r2, r3, #1
 217 0050 D318     		adds	r3, r2, r3
 218 0052 DA00     		lsls	r2, r3, #3
 219 0054 8A18     		adds	r2, r1, r2
 834:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                   CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetInd
 220              		.loc 1 834 0
 221 0056 154B     		ldr	r3, .L13+12
 222 0058 1A60     		str	r2, [r3]
 857:Generated_Source\PSoC4/CapSense_1_INT.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) || \
 223              		.loc 1 857 0
 224 005a FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 225              	.LVL16:
 862:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 226              		.loc 1 862 0
 227 005e 2878     		ldrb	r0, [r5]
 228 0060 C0B2     		uxtb	r0, r0
 229 0062 2178     		ldrb	r1, [r4]
 230 0064 C9B2     		uxtb	r1, r1
 231 0066 FFF7FEFF 		bl	CapSense_1_SsCSDConnectSensorExt
 232              	.LVL17:
 865:Generated_Source\PSoC4/CapSense_1_INT.c ****     }
 233              		.loc 1 865 0
 234 006a FFF7FEFF 		bl	CapSense_1_SsCSDStartSample
 235              	.LVL18:
 236 006e 16E0     		b	.L9
 237              	.LVL19:
 238              	.L10:
 870:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 239              		.loc 1 870 0
 240 0070 0022     		movs	r2, #0
 241 0072 0D4B     		ldr	r3, .L13+8
 242 0074 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 22


 873:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 243              		.loc 1 873 0
 244 0076 0E4A     		ldr	r2, .L13+16
 245 0078 D168     		ldr	r1, [r2, #12]
 246 007a 0E4B     		ldr	r3, .L13+20
 247 007c 0B40     		ands	r3, r1
 248 007e D360     		str	r3, [r2, #12]
 876:Generated_Source\PSoC4/CapSense_1_INT.c ****         {
 249              		.loc 1 876 0
 250 0080 0D4B     		ldr	r3, .L13+24
 251 0082 1B78     		ldrb	r3, [r3]
 252 0084 012B     		cmp	r3, #1
 253 0086 02D1     		bne	.L12
 879:Generated_Source\PSoC4/CapSense_1_INT.c ****         }
 254              		.loc 1 879 0
 255 0088 FFF7FEFF 		bl	CapSense_1_SsPostAllWidgetsScan
 256              	.LVL20:
 257 008c 07E0     		b	.L9
 258              	.LVL21:
 259              	.L12:
 900:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 260              		.loc 1 900 0
 261 008e 084B     		ldr	r3, .L13+16
 262 0090 DA68     		ldr	r2, [r3, #12]
 263 0092 8021     		movs	r1, #128
 264 0094 8A43     		bics	r2, r1
 265 0096 DA60     		str	r2, [r3, #12]
 903:Generated_Source\PSoC4/CapSense_1_INT.c ****         }
 266              		.loc 1 903 0
 267 0098 1A89     		ldrh	r2, [r3, #8]
 268 009a 0132     		adds	r2, r2, #1
 269 009c 1A81     		strh	r2, [r3, #8]
 270              	.LVL22:
 271              	.L9:
 906:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 272              		.loc 1 906 0
 273              		@ sp needed
 274 009e 70BD     		pop	{r4, r5, r6, pc}
 275              	.L14:
 276              		.align	2
 277              	.L13:
 278 00a0 00000000 		.word	CapSense_1_widgetIndex
 279 00a4 00000000 		.word	CapSense_1_dsFlash
 280 00a8 00000000 		.word	CapSense_1_sensorIndex
 281 00ac 00000000 		.word	CapSense_1_curRamSnsPtr
 282 00b0 00000000 		.word	CapSense_1_dsRam
 283 00b4 FFFFFEFF 		.word	-65537
 284 00b8 00000000 		.word	CapSense_1_requestScanAllWidget
 285              		.cfi_endproc
 286              	.LFE4:
 287              		.size	CapSense_1_SsCSDInitNextScan, .-CapSense_1_SsCSDInitNextScan
 288              		.section	.text.CapSense_1_CSDPostSingleScan,"ax",%progbits
 289              		.align	2
 290              		.global	CapSense_1_CSDPostSingleScan
 291              		.code	16
 292              		.thumb_func
 293              		.type	CapSense_1_CSDPostSingleScan, %function
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 23


 294              	CapSense_1_CSDPostSingleScan:
 295              	.LFB1:
 122:Generated_Source\PSoC4/CapSense_1_INT.c ****         #ifdef CapSense_1_ENTRY_CALLBACK
 296              		.loc 1 122 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 0, uses_anonymous_args = 0
 300 0000 10B5     		push	{r4, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 4, -8
 303              		.cfi_offset 14, -4
 128:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 304              		.loc 1 128 0
 305 0002 8322     		movs	r2, #131
 306 0004 5200     		lsls	r2, r2, #1
 307 0006 0D4B     		ldr	r3, .L18
 308 0008 1A60     		str	r2, [r3]
 148:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 309              		.loc 1 148 0
 310 000a FFF7FEFF 		bl	CapSense_1_SsCSDPostScan
 311              	.LVL23:
 151:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 312              		.loc 1 151 0
 313 000e 0C4B     		ldr	r3, .L18+4
 314 0010 1B78     		ldrb	r3, [r3]
 315 0012 012B     		cmp	r3, #1
 316 0014 02D8     		bhi	.L16
 154:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 317              		.loc 1 154 0
 318 0016 FFF7FEFF 		bl	CapSense_1_SsNextFrequencyScan
 319              	.LVL24:
 320 001a 0DE0     		b	.L15
 321              	.L16:
 159:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 322              		.loc 1 159 0
 323 001c 0022     		movs	r2, #0
 324 001e 084B     		ldr	r3, .L18+4
 325 0020 1A70     		strb	r2, [r3]
 162:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #else
 326              		.loc 1 162 0
 327 0022 0020     		movs	r0, #0
 328 0024 FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 329              	.LVL25:
 173:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 330              		.loc 1 173 0
 331 0028 064B     		ldr	r3, .L18+8
 332 002a 1A89     		ldrh	r2, [r3, #8]
 333 002c 0132     		adds	r2, r2, #1
 334 002e 1A81     		strh	r2, [r3, #8]
 176:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 335              		.loc 1 176 0
 336 0030 D968     		ldr	r1, [r3, #12]
 337 0032 054A     		ldr	r2, .L18+12
 338 0034 0A40     		ands	r2, r1
 339 0036 DA60     		str	r2, [r3, #12]
 340              	.L15:
 199:Generated_Source\PSoC4/CapSense_1_INT.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 24


 341              		.loc 1 199 0
 342              		@ sp needed
 343 0038 10BD     		pop	{r4, pc}
 344              	.L19:
 345 003a C046     		.align	2
 346              	.L18:
 347 003c F0000B40 		.word	1074462960
 348 0040 00000000 		.word	CapSense_1_scanFreqIndex
 349 0044 00000000 		.word	CapSense_1_dsRam
 350 0048 7FFFFEFF 		.word	-65665
 351              		.cfi_endproc
 352              	.LFE1:
 353              		.size	CapSense_1_CSDPostSingleScan, .-CapSense_1_CSDPostSingleScan
 354              		.section	.text.CapSense_1_CSDPostMultiScan,"ax",%progbits
 355              		.align	2
 356              		.global	CapSense_1_CSDPostMultiScan
 357              		.code	16
 358              		.thumb_func
 359              		.type	CapSense_1_CSDPostMultiScan, %function
 360              	CapSense_1_CSDPostMultiScan:
 361              	.LFB2:
 238:Generated_Source\PSoC4/CapSense_1_INT.c ****         /* Declare and initialize ptr to sensor IO structure to appropriate address */
 362              		.loc 1 238 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366 0000 10B5     		push	{r4, lr}
 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 4, -8
 369              		.cfi_offset 14, -4
 240:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                           CapSense_1_dsFlash.wdgtArray[CapSense_1_w
 370              		.loc 1 240 0
 371 0002 164B     		ldr	r3, .L24
 372 0004 1B78     		ldrb	r3, [r3]
 373 0006 DBB2     		uxtb	r3, r3
 241:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                           + CapSense_1_sensorIndex;
 374              		.loc 1 241 0
 375 0008 DA00     		lsls	r2, r3, #3
 376 000a D31A     		subs	r3, r2, r3
 377 000c 9A00     		lsls	r2, r3, #2
 378 000e 144B     		ldr	r3, .L24+4
 379 0010 D458     		ldr	r4, [r2, r3]
 242:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 380              		.loc 1 242 0
 381 0012 144B     		ldr	r3, .L24+8
 382 0014 1B78     		ldrb	r3, [r3]
 383 0016 DBB2     		uxtb	r3, r3
 384 0018 DA00     		lsls	r2, r3, #3
 385 001a D31A     		subs	r3, r2, r3
 386 001c 9A00     		lsls	r2, r3, #2
 240:Generated_Source\PSoC4/CapSense_1_INT.c ****                                                           CapSense_1_dsFlash.wdgtArray[CapSense_1_w
 387              		.loc 1 240 0
 388 001e A418     		adds	r4, r4, r2
 389              	.LVL26:
 249:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 390              		.loc 1 249 0
 391 0020 8322     		movs	r2, #131
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 25


 392 0022 5200     		lsls	r2, r2, #1
 393 0024 104B     		ldr	r3, .L24+12
 394 0026 1A60     		str	r2, [r3]
 269:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 395              		.loc 1 269 0
 396 0028 FFF7FEFF 		bl	CapSense_1_SsCSDPostScan
 397              	.LVL27:
 273:Generated_Source\PSoC4/CapSense_1_INT.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 398              		.loc 1 273 0
 399 002c 0F4B     		ldr	r3, .L24+16
 400 002e 1B78     		ldrb	r3, [r3]
 401 0030 022B     		cmp	r3, #2
 402 0032 02D1     		bne	.L21
 277:Generated_Source\PSoC4/CapSense_1_INT.c ****             }
 403              		.loc 1 277 0
 404 0034 2000     		movs	r0, r4
 405 0036 FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 406              	.LVL28:
 407              	.L21:
 281:Generated_Source\PSoC4/CapSense_1_INT.c ****                 {
 408              		.loc 1 281 0
 409 003a 0C4B     		ldr	r3, .L24+16
 410 003c 1B78     		ldrb	r3, [r3]
 411 003e 012B     		cmp	r3, #1
 412 0040 02D8     		bhi	.L22
 284:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 413              		.loc 1 284 0
 414 0042 FFF7FEFF 		bl	CapSense_1_SsNextFrequencyScan
 415              	.LVL29:
 416 0046 07E0     		b	.L20
 417              	.L22:
 289:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 418              		.loc 1 289 0
 419 0048 0022     		movs	r2, #0
 420 004a 084B     		ldr	r3, .L24+16
 421 004c 1A70     		strb	r2, [r3]
 292:Generated_Source\PSoC4/CapSense_1_INT.c ****                     #else
 422              		.loc 1 292 0
 423 004e 0020     		movs	r0, #0
 424 0050 FFF7FEFF 		bl	CapSense_1_SsChangeImoFreq
 425              	.LVL30:
 298:Generated_Source\PSoC4/CapSense_1_INT.c ****                 }
 426              		.loc 1 298 0
 427 0054 FFF7FEFF 		bl	CapSense_1_SsCSDInitNextScan
 428              	.LVL31:
 429              	.L20:
 311:Generated_Source\PSoC4/CapSense_1_INT.c **** 
 430              		.loc 1 311 0
 431              		@ sp needed
 432              	.LVL32:
 433 0058 10BD     		pop	{r4, pc}
 434              	.L25:
 435 005a C046     		.align	2
 436              	.L24:
 437 005c 00000000 		.word	CapSense_1_widgetIndex
 438 0060 00000000 		.word	CapSense_1_dsFlash
 439 0064 00000000 		.word	CapSense_1_sensorIndex
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 26


 440 0068 F0000B40 		.word	1074462960
 441 006c 00000000 		.word	CapSense_1_scanFreqIndex
 442              		.cfi_endproc
 443              	.LFE2:
 444              		.size	CapSense_1_CSDPostMultiScan, .-CapSense_1_CSDPostMultiScan
 445              		.text
 446              	.Letext0:
 447              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 448              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 449              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 450              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_Sensing.h"
 451              		.file 6 "Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.h"
 452              		.section	.debug_info,"",%progbits
 453              	.Ldebug_info0:
 454 0000 E6070000 		.4byte	0x7e6
 455 0004 0400     		.2byte	0x4
 456 0006 00000000 		.4byte	.Ldebug_abbrev0
 457 000a 04       		.byte	0x4
 458 000b 01       		.uleb128 0x1
 459 000c 2C050000 		.4byte	.LASF107
 460 0010 0C       		.byte	0xc
 461 0011 F0040000 		.4byte	.LASF108
 462 0015 57060000 		.4byte	.LASF109
 463 0019 00000000 		.4byte	.Ldebug_ranges0+0
 464 001d 00000000 		.4byte	0
 465 0021 00000000 		.4byte	.Ldebug_line0
 466 0025 02       		.uleb128 0x2
 467 0026 01       		.byte	0x1
 468 0027 06       		.byte	0x6
 469 0028 80000000 		.4byte	.LASF0
 470 002c 02       		.uleb128 0x2
 471 002d 01       		.byte	0x1
 472 002e 08       		.byte	0x8
 473 002f 70040000 		.4byte	.LASF1
 474 0033 02       		.uleb128 0x2
 475 0034 02       		.byte	0x2
 476 0035 05       		.byte	0x5
 477 0036 91040000 		.4byte	.LASF2
 478 003a 02       		.uleb128 0x2
 479 003b 02       		.byte	0x2
 480 003c 07       		.byte	0x7
 481 003d 67020000 		.4byte	.LASF3
 482 0041 02       		.uleb128 0x2
 483 0042 04       		.byte	0x4
 484 0043 05       		.byte	0x5
 485 0044 1B010000 		.4byte	.LASF4
 486 0048 02       		.uleb128 0x2
 487 0049 04       		.byte	0x4
 488 004a 07       		.byte	0x7
 489 004b 2C020000 		.4byte	.LASF5
 490 004f 02       		.uleb128 0x2
 491 0050 08       		.byte	0x8
 492 0051 05       		.byte	0x5
 493 0052 72000000 		.4byte	.LASF6
 494 0056 02       		.uleb128 0x2
 495 0057 08       		.byte	0x8
 496 0058 07       		.byte	0x7
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 27


 497 0059 30000000 		.4byte	.LASF7
 498 005d 03       		.uleb128 0x3
 499 005e 04       		.byte	0x4
 500 005f 05       		.byte	0x5
 501 0060 696E7400 		.ascii	"int\000"
 502 0064 02       		.uleb128 0x2
 503 0065 04       		.byte	0x4
 504 0066 07       		.byte	0x7
 505 0067 C0010000 		.4byte	.LASF8
 506 006b 04       		.uleb128 0x4
 507 006c 3F010000 		.4byte	.LASF9
 508 0070 02       		.byte	0x2
 509 0071 E401     		.2byte	0x1e4
 510 0073 2C000000 		.4byte	0x2c
 511 0077 04       		.uleb128 0x4
 512 0078 00000000 		.4byte	.LASF10
 513 007c 02       		.byte	0x2
 514 007d E501     		.2byte	0x1e5
 515 007f 3A000000 		.4byte	0x3a
 516 0083 04       		.uleb128 0x4
 517 0084 6A010000 		.4byte	.LASF11
 518 0088 02       		.byte	0x2
 519 0089 E601     		.2byte	0x1e6
 520 008b 48000000 		.4byte	0x48
 521 008f 02       		.uleb128 0x2
 522 0090 04       		.byte	0x4
 523 0091 04       		.byte	0x4
 524 0092 F9030000 		.4byte	.LASF12
 525 0096 02       		.uleb128 0x2
 526 0097 08       		.byte	0x8
 527 0098 04       		.byte	0x4
 528 0099 45010000 		.4byte	.LASF13
 529 009d 02       		.uleb128 0x2
 530 009e 01       		.byte	0x1
 531 009f 08       		.byte	0x8
 532 00a0 BE050000 		.4byte	.LASF14
 533 00a4 05       		.uleb128 0x5
 534 00a5 6B000000 		.4byte	0x6b
 535 00a9 04       		.uleb128 0x4
 536 00aa 41030000 		.4byte	.LASF15
 537 00ae 02       		.byte	0x2
 538 00af 9002     		.2byte	0x290
 539 00b1 B5000000 		.4byte	0xb5
 540 00b5 05       		.uleb128 0x5
 541 00b6 83000000 		.4byte	0x83
 542 00ba 04       		.uleb128 0x4
 543 00bb C5000000 		.4byte	.LASF16
 544 00bf 03       		.byte	0x3
 545 00c0 2D01     		.2byte	0x12d
 546 00c2 77000000 		.4byte	0x77
 547 00c6 04       		.uleb128 0x4
 548 00c7 D1060000 		.4byte	.LASF17
 549 00cb 03       		.byte	0x3
 550 00cc 3101     		.2byte	0x131
 551 00ce 6B000000 		.4byte	0x6b
 552 00d2 06       		.uleb128 0x6
 553 00d3 0E       		.byte	0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 28


 554 00d4 04       		.byte	0x4
 555 00d5 8E       		.byte	0x8e
 556 00d6 47010000 		.4byte	0x147
 557 00da 07       		.uleb128 0x7
 558 00db 18050000 		.4byte	.LASF18
 559 00df 04       		.byte	0x4
 560 00e0 93       		.byte	0x93
 561 00e1 77000000 		.4byte	0x77
 562 00e5 00       		.byte	0
 563 00e6 07       		.uleb128 0x7
 564 00e7 EE060000 		.4byte	.LASF19
 565 00eb 04       		.byte	0x4
 566 00ec 98       		.byte	0x98
 567 00ed BA000000 		.4byte	0xba
 568 00f1 02       		.byte	0x2
 569 00f2 07       		.uleb128 0x7
 570 00f3 26070000 		.4byte	.LASF20
 571 00f7 04       		.byte	0x4
 572 00f8 9D       		.byte	0x9d
 573 00f9 6B000000 		.4byte	0x6b
 574 00fd 04       		.byte	0x4
 575 00fe 07       		.uleb128 0x7
 576 00ff 99030000 		.4byte	.LASF21
 577 0103 04       		.byte	0x4
 578 0104 A2       		.byte	0xa2
 579 0105 6B000000 		.4byte	0x6b
 580 0109 05       		.byte	0x5
 581 010a 07       		.uleb128 0x7
 582 010b 71010000 		.4byte	.LASF22
 583 010f 04       		.byte	0x4
 584 0110 A8       		.byte	0xa8
 585 0111 6B000000 		.4byte	0x6b
 586 0115 06       		.byte	0x6
 587 0116 07       		.uleb128 0x7
 588 0117 FB050000 		.4byte	.LASF23
 589 011b 04       		.byte	0x4
 590 011c AE       		.byte	0xae
 591 011d 6B000000 		.4byte	0x6b
 592 0121 07       		.byte	0x7
 593 0122 07       		.uleb128 0x7
 594 0123 54020000 		.4byte	.LASF24
 595 0127 04       		.byte	0x4
 596 0128 B5       		.byte	0xb5
 597 0129 C6000000 		.4byte	0xc6
 598 012d 08       		.byte	0x8
 599 012e 07       		.uleb128 0x7
 600 012f 47030000 		.4byte	.LASF25
 601 0133 04       		.byte	0x4
 602 0134 BC       		.byte	0xbc
 603 0135 47010000 		.4byte	0x147
 604 0139 09       		.byte	0x9
 605 013a 07       		.uleb128 0x7
 606 013b A7060000 		.4byte	.LASF26
 607 013f 04       		.byte	0x4
 608 0140 C1       		.byte	0xc1
 609 0141 6B000000 		.4byte	0x6b
 610 0145 0C       		.byte	0xc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 29


 611 0146 00       		.byte	0
 612 0147 08       		.uleb128 0x8
 613 0148 6B000000 		.4byte	0x6b
 614 014c 57010000 		.4byte	0x157
 615 0150 09       		.uleb128 0x9
 616 0151 57010000 		.4byte	0x157
 617 0155 02       		.byte	0x2
 618 0156 00       		.byte	0
 619 0157 02       		.uleb128 0x2
 620 0158 04       		.byte	0x4
 621 0159 07       		.byte	0x7
 622 015a 77030000 		.4byte	.LASF27
 623 015e 0A       		.uleb128 0xa
 624 015f 3A040000 		.4byte	.LASF28
 625 0163 04       		.byte	0x4
 626 0164 C2       		.byte	0xc2
 627 0165 D2000000 		.4byte	0xd2
 628 0169 06       		.uleb128 0x6
 629 016a 0E       		.byte	0xe
 630 016b 04       		.byte	0x4
 631 016c C7       		.byte	0xc7
 632 016d DE010000 		.4byte	0x1de
 633 0171 07       		.uleb128 0x7
 634 0172 18050000 		.4byte	.LASF18
 635 0176 04       		.byte	0x4
 636 0177 CC       		.byte	0xcc
 637 0178 77000000 		.4byte	0x77
 638 017c 00       		.byte	0
 639 017d 07       		.uleb128 0x7
 640 017e EE060000 		.4byte	.LASF19
 641 0182 04       		.byte	0x4
 642 0183 D1       		.byte	0xd1
 643 0184 BA000000 		.4byte	0xba
 644 0188 02       		.byte	0x2
 645 0189 07       		.uleb128 0x7
 646 018a 26070000 		.4byte	.LASF20
 647 018e 04       		.byte	0x4
 648 018f D6       		.byte	0xd6
 649 0190 6B000000 		.4byte	0x6b
 650 0194 04       		.byte	0x4
 651 0195 07       		.uleb128 0x7
 652 0196 99030000 		.4byte	.LASF21
 653 019a 04       		.byte	0x4
 654 019b DB       		.byte	0xdb
 655 019c 6B000000 		.4byte	0x6b
 656 01a0 05       		.byte	0x5
 657 01a1 07       		.uleb128 0x7
 658 01a2 71010000 		.4byte	.LASF22
 659 01a6 04       		.byte	0x4
 660 01a7 E1       		.byte	0xe1
 661 01a8 6B000000 		.4byte	0x6b
 662 01ac 06       		.byte	0x6
 663 01ad 07       		.uleb128 0x7
 664 01ae FB050000 		.4byte	.LASF23
 665 01b2 04       		.byte	0x4
 666 01b3 E7       		.byte	0xe7
 667 01b4 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 30


 668 01b8 07       		.byte	0x7
 669 01b9 07       		.uleb128 0x7
 670 01ba 54020000 		.4byte	.LASF24
 671 01be 04       		.byte	0x4
 672 01bf EE       		.byte	0xee
 673 01c0 C6000000 		.4byte	0xc6
 674 01c4 08       		.byte	0x8
 675 01c5 07       		.uleb128 0x7
 676 01c6 47030000 		.4byte	.LASF25
 677 01ca 04       		.byte	0x4
 678 01cb F5       		.byte	0xf5
 679 01cc 47010000 		.4byte	0x147
 680 01d0 09       		.byte	0x9
 681 01d1 07       		.uleb128 0x7
 682 01d2 A7060000 		.4byte	.LASF26
 683 01d6 04       		.byte	0x4
 684 01d7 FA       		.byte	0xfa
 685 01d8 6B000000 		.4byte	0x6b
 686 01dc 0C       		.byte	0xc
 687 01dd 00       		.byte	0
 688 01de 0A       		.uleb128 0xa
 689 01df 7A020000 		.4byte	.LASF29
 690 01e3 04       		.byte	0x4
 691 01e4 FB       		.byte	0xfb
 692 01e5 69010000 		.4byte	0x169
 693 01e9 0B       		.uleb128 0xb
 694 01ea 46       		.byte	0x46
 695 01eb 04       		.byte	0x4
 696 01ec 0101     		.2byte	0x101
 697 01ee 34020000 		.4byte	0x234
 698 01f2 0C       		.uleb128 0xc
 699 01f3 9D000000 		.4byte	.LASF30
 700 01f7 04       		.byte	0x4
 701 01f8 0601     		.2byte	0x106
 702 01fa DE010000 		.4byte	0x1de
 703 01fe 00       		.byte	0
 704 01ff 0C       		.uleb128 0xc
 705 0200 A5000000 		.4byte	.LASF31
 706 0204 04       		.byte	0x4
 707 0205 0B01     		.2byte	0x10b
 708 0207 DE010000 		.4byte	0x1de
 709 020b 0E       		.byte	0xe
 710 020c 0C       		.uleb128 0xc
 711 020d AD000000 		.4byte	.LASF32
 712 0211 04       		.byte	0x4
 713 0212 1001     		.2byte	0x110
 714 0214 DE010000 		.4byte	0x1de
 715 0218 1C       		.byte	0x1c
 716 0219 0C       		.uleb128 0xc
 717 021a B5000000 		.4byte	.LASF33
 718 021e 04       		.byte	0x4
 719 021f 1501     		.2byte	0x115
 720 0221 DE010000 		.4byte	0x1de
 721 0225 2A       		.byte	0x2a
 722 0226 0C       		.uleb128 0xc
 723 0227 BD000000 		.4byte	.LASF34
 724 022b 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 31


 725 022c 1A01     		.2byte	0x11a
 726 022e DE010000 		.4byte	0x1de
 727 0232 38       		.byte	0x38
 728 0233 00       		.byte	0
 729 0234 04       		.uleb128 0x4
 730 0235 9B040000 		.4byte	.LASF35
 731 0239 04       		.byte	0x4
 732 023a 1B01     		.2byte	0x11b
 733 023c E9010000 		.4byte	0x1e9
 734 0240 0B       		.uleb128 0xb
 735 0241 18       		.byte	0x18
 736 0242 04       		.byte	0x4
 737 0243 2101     		.2byte	0x121
 738 0245 98020000 		.4byte	0x298
 739 0249 0D       		.uleb128 0xd
 740 024a 72617700 		.ascii	"raw\000"
 741 024e 04       		.byte	0x4
 742 024f 2601     		.2byte	0x126
 743 0251 98020000 		.4byte	0x298
 744 0255 00       		.byte	0
 745 0256 0C       		.uleb128 0xc
 746 0257 BB010000 		.4byte	.LASF36
 747 025b 04       		.byte	0x4
 748 025c 2B01     		.2byte	0x12b
 749 025e 98020000 		.4byte	0x298
 750 0262 06       		.byte	0x6
 751 0263 0C       		.uleb128 0xc
 752 0264 81010000 		.4byte	.LASF37
 753 0268 04       		.byte	0x4
 754 0269 3101     		.2byte	0x131
 755 026b 47010000 		.4byte	0x147
 756 026f 0C       		.byte	0xc
 757 0270 0C       		.uleb128 0xc
 758 0271 54000000 		.4byte	.LASF38
 759 0275 04       		.byte	0x4
 760 0276 3601     		.2byte	0x136
 761 0278 BA000000 		.4byte	0xba
 762 027c 10       		.byte	0x10
 763 027d 0C       		.uleb128 0xc
 764 027e 26060000 		.4byte	.LASF39
 765 0282 04       		.byte	0x4
 766 0283 3B01     		.2byte	0x13b
 767 0285 A8020000 		.4byte	0x2a8
 768 0289 12       		.byte	0x12
 769 028a 0C       		.uleb128 0xc
 770 028b 1D060000 		.4byte	.LASF40
 771 028f 04       		.byte	0x4
 772 0290 4001     		.2byte	0x140
 773 0292 47010000 		.4byte	0x147
 774 0296 15       		.byte	0x15
 775 0297 00       		.byte	0
 776 0298 08       		.uleb128 0x8
 777 0299 77000000 		.4byte	0x77
 778 029d A8020000 		.4byte	0x2a8
 779 02a1 09       		.uleb128 0x9
 780 02a2 57010000 		.4byte	0x157
 781 02a6 02       		.byte	0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 32


 782 02a7 00       		.byte	0
 783 02a8 08       		.uleb128 0x8
 784 02a9 C6000000 		.4byte	0xc6
 785 02ad B8020000 		.4byte	0x2b8
 786 02b1 09       		.uleb128 0x9
 787 02b2 57010000 		.4byte	0x157
 788 02b6 02       		.byte	0x2
 789 02b7 00       		.byte	0
 790 02b8 04       		.uleb128 0x4
 791 02b9 FF030000 		.4byte	.LASF41
 792 02bd 04       		.byte	0x4
 793 02be 4101     		.2byte	0x141
 794 02c0 40020000 		.4byte	0x240
 795 02c4 0B       		.uleb128 0xb
 796 02c5 78       		.byte	0x78
 797 02c6 04       		.byte	0x4
 798 02c7 4701     		.2byte	0x147
 799 02c9 0F030000 		.4byte	0x30f
 800 02cd 0C       		.uleb128 0xc
 801 02ce 9D000000 		.4byte	.LASF30
 802 02d2 04       		.byte	0x4
 803 02d3 4C01     		.2byte	0x14c
 804 02d5 0F030000 		.4byte	0x30f
 805 02d9 00       		.byte	0
 806 02da 0C       		.uleb128 0xc
 807 02db A5000000 		.4byte	.LASF31
 808 02df 04       		.byte	0x4
 809 02e0 5101     		.2byte	0x151
 810 02e2 0F030000 		.4byte	0x30f
 811 02e6 18       		.byte	0x18
 812 02e7 0C       		.uleb128 0xc
 813 02e8 AD000000 		.4byte	.LASF32
 814 02ec 04       		.byte	0x4
 815 02ed 5601     		.2byte	0x156
 816 02ef 0F030000 		.4byte	0x30f
 817 02f3 30       		.byte	0x30
 818 02f4 0C       		.uleb128 0xc
 819 02f5 B5000000 		.4byte	.LASF33
 820 02f9 04       		.byte	0x4
 821 02fa 5B01     		.2byte	0x15b
 822 02fc 0F030000 		.4byte	0x30f
 823 0300 48       		.byte	0x48
 824 0301 0C       		.uleb128 0xc
 825 0302 BD000000 		.4byte	.LASF34
 826 0306 04       		.byte	0x4
 827 0307 6001     		.2byte	0x160
 828 0309 0F030000 		.4byte	0x30f
 829 030d 60       		.byte	0x60
 830 030e 00       		.byte	0
 831 030f 08       		.uleb128 0x8
 832 0310 B8020000 		.4byte	0x2b8
 833 0314 1F030000 		.4byte	0x31f
 834 0318 09       		.uleb128 0x9
 835 0319 57010000 		.4byte	0x157
 836 031d 00       		.byte	0
 837 031e 00       		.byte	0
 838 031f 04       		.uleb128 0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 33


 839 0320 DC020000 		.4byte	.LASF42
 840 0324 04       		.byte	0x4
 841 0325 6101     		.2byte	0x161
 842 0327 C4020000 		.4byte	0x2c4
 843 032b 0B       		.uleb128 0xb
 844 032c EC       		.byte	0xec
 845 032d 04       		.byte	0x4
 846 032e 6701     		.2byte	0x167
 847 0330 1F040000 		.4byte	0x41f
 848 0334 0C       		.uleb128 0xc
 849 0335 07000000 		.4byte	.LASF43
 850 0339 04       		.byte	0x4
 851 033a 6E01     		.2byte	0x16e
 852 033c 77000000 		.4byte	0x77
 853 0340 00       		.byte	0
 854 0341 0C       		.uleb128 0xc
 855 0342 1C030000 		.4byte	.LASF44
 856 0346 04       		.byte	0x4
 857 0347 7301     		.2byte	0x173
 858 0349 77000000 		.4byte	0x77
 859 034d 02       		.byte	0x2
 860 034e 0C       		.uleb128 0xc
 861 034f A2030000 		.4byte	.LASF45
 862 0353 04       		.byte	0x4
 863 0354 7801     		.2byte	0x178
 864 0356 77000000 		.4byte	0x77
 865 035a 04       		.byte	0x4
 866 035b 0C       		.uleb128 0xc
 867 035c F0030000 		.4byte	.LASF46
 868 0360 04       		.byte	0x4
 869 0361 7E01     		.2byte	0x17e
 870 0363 77000000 		.4byte	0x77
 871 0367 06       		.byte	0x6
 872 0368 0C       		.uleb128 0xc
 873 0369 B3030000 		.4byte	.LASF47
 874 036d 04       		.byte	0x4
 875 036e 8301     		.2byte	0x183
 876 0370 77000000 		.4byte	0x77
 877 0374 08       		.byte	0x8
 878 0375 0C       		.uleb128 0xc
 879 0376 50060000 		.4byte	.LASF48
 880 037a 04       		.byte	0x4
 881 037b 8801     		.2byte	0x188
 882 037d B5000000 		.4byte	0xb5
 883 0381 0C       		.byte	0xc
 884 0382 0C       		.uleb128 0xc
 885 0383 3E020000 		.4byte	.LASF49
 886 0387 04       		.byte	0x4
 887 0388 8E01     		.2byte	0x18e
 888 038a 1F040000 		.4byte	0x41f
 889 038e 10       		.byte	0x10
 890 038f 0C       		.uleb128 0xc
 891 0390 89010000 		.4byte	.LASF50
 892 0394 04       		.byte	0x4
 893 0395 9501     		.2byte	0x195
 894 0397 1F040000 		.4byte	0x41f
 895 039b 14       		.byte	0x14
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 34


 896 039c 0C       		.uleb128 0xc
 897 039d 11010000 		.4byte	.LASF51
 898 03a1 04       		.byte	0x4
 899 03a2 A501     		.2byte	0x1a5
 900 03a4 2F040000 		.4byte	0x42f
 901 03a8 18       		.byte	0x18
 902 03a9 0C       		.uleb128 0xc
 903 03aa 05030000 		.4byte	.LASF52
 904 03ae 04       		.byte	0x4
 905 03af AB01     		.2byte	0x1ab
 906 03b1 77000000 		.4byte	0x77
 907 03b5 1E       		.byte	0x1e
 908 03b6 0C       		.uleb128 0xc
 909 03b7 24010000 		.4byte	.LASF53
 910 03bb 04       		.byte	0x4
 911 03bc B001     		.2byte	0x1b0
 912 03be 6B000000 		.4byte	0x6b
 913 03c2 20       		.byte	0x20
 914 03c3 0C       		.uleb128 0xc
 915 03c4 FB020000 		.4byte	.LASF54
 916 03c8 04       		.byte	0x4
 917 03c9 B501     		.2byte	0x1b5
 918 03cb 77000000 		.4byte	0x77
 919 03cf 22       		.byte	0x22
 920 03d0 0C       		.uleb128 0xc
 921 03d1 23050000 		.4byte	.LASF55
 922 03d5 04       		.byte	0x4
 923 03d6 BA01     		.2byte	0x1ba
 924 03d8 34020000 		.4byte	0x234
 925 03dc 24       		.byte	0x24
 926 03dd 0C       		.uleb128 0xc
 927 03de D4020000 		.4byte	.LASF56
 928 03e2 04       		.byte	0x4
 929 03e3 BF01     		.2byte	0x1bf
 930 03e5 1F030000 		.4byte	0x31f
 931 03e9 6A       		.byte	0x6a
 932 03ea 0C       		.uleb128 0xc
 933 03eb 1C020000 		.4byte	.LASF57
 934 03ef 04       		.byte	0x4
 935 03f0 C401     		.2byte	0x1c4
 936 03f2 6B000000 		.4byte	0x6b
 937 03f6 E2       		.byte	0xe2
 938 03f7 0C       		.uleb128 0xc
 939 03f8 62000000 		.4byte	.LASF58
 940 03fc 04       		.byte	0x4
 941 03fd C901     		.2byte	0x1c9
 942 03ff 6B000000 		.4byte	0x6b
 943 0403 E3       		.byte	0xe3
 944 0404 0C       		.uleb128 0xc
 945 0405 09070000 		.4byte	.LASF59
 946 0409 04       		.byte	0x4
 947 040a CE01     		.2byte	0x1ce
 948 040c 77000000 		.4byte	0x77
 949 0410 E4       		.byte	0xe4
 950 0411 0C       		.uleb128 0xc
 951 0412 4C010000 		.4byte	.LASF60
 952 0416 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 35


 953 0417 D301     		.2byte	0x1d3
 954 0419 98020000 		.4byte	0x298
 955 041d E6       		.byte	0xe6
 956 041e 00       		.byte	0
 957 041f 08       		.uleb128 0x8
 958 0420 83000000 		.4byte	0x83
 959 0424 2F040000 		.4byte	0x42f
 960 0428 09       		.uleb128 0x9
 961 0429 57010000 		.4byte	0x157
 962 042d 00       		.byte	0
 963 042e 00       		.byte	0
 964 042f 08       		.uleb128 0x8
 965 0430 6B000000 		.4byte	0x6b
 966 0434 3F040000 		.4byte	0x43f
 967 0438 09       		.uleb128 0x9
 968 0439 57010000 		.4byte	0x157
 969 043d 04       		.byte	0x4
 970 043e 00       		.byte	0
 971 043f 04       		.uleb128 0x4
 972 0440 BF030000 		.4byte	.LASF61
 973 0444 04       		.byte	0x4
 974 0445 D401     		.2byte	0x1d4
 975 0447 2B030000 		.4byte	0x32b
 976 044b 0B       		.uleb128 0xb
 977 044c 1C       		.byte	0x1c
 978 044d 04       		.byte	0x4
 979 044e DA01     		.2byte	0x1da
 980 0450 CA040000 		.4byte	0x4ca
 981 0454 0C       		.uleb128 0xc
 982 0455 59000000 		.4byte	.LASF62
 983 0459 04       		.byte	0x4
 984 045a DF01     		.2byte	0x1df
 985 045c CA040000 		.4byte	0x4ca
 986 0460 00       		.byte	0
 987 0461 0C       		.uleb128 0xc
 988 0462 03070000 		.4byte	.LASF63
 989 0466 04       		.byte	0x4
 990 0467 E401     		.2byte	0x1e4
 991 0469 CA040000 		.4byte	0x4ca
 992 046d 04       		.byte	0x4
 993 046e 0C       		.uleb128 0xc
 994 046f DA050000 		.4byte	.LASF64
 995 0473 04       		.byte	0x4
 996 0474 E901     		.2byte	0x1e9
 997 0476 CA040000 		.4byte	0x4ca
 998 047a 08       		.byte	0x8
 999 047b 0C       		.uleb128 0xc
 1000 047c 39010000 		.4byte	.LASF65
 1001 0480 04       		.byte	0x4
 1002 0481 EE01     		.2byte	0x1ee
 1003 0483 CA040000 		.4byte	0x4ca
 1004 0487 0C       		.byte	0xc
 1005 0488 0C       		.uleb128 0xc
 1006 0489 1C070000 		.4byte	.LASF66
 1007 048d 04       		.byte	0x4
 1008 048e F301     		.2byte	0x1f3
 1009 0490 83000000 		.4byte	0x83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 36


 1010 0494 10       		.byte	0x10
 1011 0495 0C       		.uleb128 0xc
 1012 0496 7C010000 		.4byte	.LASF67
 1013 049a 04       		.byte	0x4
 1014 049b F801     		.2byte	0x1f8
 1015 049d 83000000 		.4byte	0x83
 1016 04a1 14       		.byte	0x14
 1017 04a2 0C       		.uleb128 0xc
 1018 04a3 C9040000 		.4byte	.LASF68
 1019 04a7 04       		.byte	0x4
 1020 04a8 FD01     		.2byte	0x1fd
 1021 04aa 6B000000 		.4byte	0x6b
 1022 04ae 18       		.byte	0x18
 1023 04af 0C       		.uleb128 0xc
 1024 04b0 62010000 		.4byte	.LASF69
 1025 04b4 04       		.byte	0x4
 1026 04b5 0202     		.2byte	0x202
 1027 04b7 6B000000 		.4byte	0x6b
 1028 04bb 19       		.byte	0x19
 1029 04bc 0C       		.uleb128 0xc
 1030 04bd 5C010000 		.4byte	.LASF70
 1031 04c1 04       		.byte	0x4
 1032 04c2 0702     		.2byte	0x207
 1033 04c4 6B000000 		.4byte	0x6b
 1034 04c8 1A       		.byte	0x1a
 1035 04c9 00       		.byte	0
 1036 04ca 0E       		.uleb128 0xe
 1037 04cb 04       		.byte	0x4
 1038 04cc A9000000 		.4byte	0xa9
 1039 04d0 04       		.uleb128 0x4
 1040 04d1 D5030000 		.4byte	.LASF71
 1041 04d5 04       		.byte	0x4
 1042 04d6 0802     		.2byte	0x208
 1043 04d8 4B040000 		.4byte	0x44b
 1044 04dc 0B       		.uleb128 0xb
 1045 04dd 1C       		.byte	0x1c
 1046 04de 04       		.byte	0x4
 1047 04df 3B02     		.2byte	0x23b
 1048 04e1 5B050000 		.4byte	0x55b
 1049 04e5 0C       		.uleb128 0xc
 1050 04e6 47000000 		.4byte	.LASF72
 1051 04ea 04       		.byte	0x4
 1052 04eb 4402     		.2byte	0x244
 1053 04ed 5B050000 		.4byte	0x55b
 1054 04f1 00       		.byte	0
 1055 04f2 0C       		.uleb128 0xc
 1056 04f3 10030000 		.4byte	.LASF73
 1057 04f7 04       		.byte	0x4
 1058 04f8 4B02     		.2byte	0x24b
 1059 04fa 62050000 		.4byte	0x562
 1060 04fe 04       		.byte	0x4
 1061 04ff 0C       		.uleb128 0xc
 1062 0500 2E010000 		.4byte	.LASF74
 1063 0504 04       		.byte	0x4
 1064 0505 5102     		.2byte	0x251
 1065 0507 64050000 		.4byte	0x564
 1066 050b 08       		.byte	0x8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 37


 1067 050c 0C       		.uleb128 0xc
 1068 050d B9040000 		.4byte	.LASF75
 1069 0511 04       		.byte	0x4
 1070 0512 5702     		.2byte	0x257
 1071 0514 62050000 		.4byte	0x562
 1072 0518 0C       		.byte	0xc
 1073 0519 0C       		.uleb128 0xc
 1074 051a 40060000 		.4byte	.LASF76
 1075 051e 04       		.byte	0x4
 1076 051f 5E02     		.2byte	0x25e
 1077 0521 6A050000 		.4byte	0x56a
 1078 0525 10       		.byte	0x10
 1079 0526 0C       		.uleb128 0xc
 1080 0527 8C030000 		.4byte	.LASF77
 1081 052b 04       		.byte	0x4
 1082 052c 6302     		.2byte	0x263
 1083 052e 83000000 		.4byte	0x83
 1084 0532 14       		.byte	0x14
 1085 0533 0C       		.uleb128 0xc
 1086 0534 34060000 		.4byte	.LASF78
 1087 0538 04       		.byte	0x4
 1088 0539 6A02     		.2byte	0x26a
 1089 053b 77000000 		.4byte	0x77
 1090 053f 18       		.byte	0x18
 1091 0540 0C       		.uleb128 0xc
 1092 0541 AA030000 		.4byte	.LASF79
 1093 0545 04       		.byte	0x4
 1094 0546 7102     		.2byte	0x271
 1095 0548 6B000000 		.4byte	0x6b
 1096 054c 1A       		.byte	0x1a
 1097 054d 0C       		.uleb128 0xc
 1098 054e 6F030000 		.4byte	.LASF80
 1099 0552 04       		.byte	0x4
 1100 0553 7B02     		.2byte	0x27b
 1101 0555 6B000000 		.4byte	0x6b
 1102 0559 1B       		.byte	0x1b
 1103 055a 00       		.byte	0
 1104 055b 0E       		.uleb128 0xe
 1105 055c 04       		.byte	0x4
 1106 055d 61050000 		.4byte	0x561
 1107 0561 0F       		.uleb128 0xf
 1108 0562 10       		.uleb128 0x10
 1109 0563 04       		.byte	0x4
 1110 0564 0E       		.uleb128 0xe
 1111 0565 04       		.byte	0x4
 1112 0566 B8020000 		.4byte	0x2b8
 1113 056a 0E       		.uleb128 0xe
 1114 056b 04       		.byte	0x4
 1115 056c 6B000000 		.4byte	0x6b
 1116 0570 04       		.uleb128 0x4
 1117 0571 B9020000 		.4byte	.LASF81
 1118 0575 04       		.byte	0x4
 1119 0576 7C02     		.2byte	0x27c
 1120 0578 DC040000 		.4byte	0x4dc
 1121 057c 0B       		.uleb128 0xb
 1122 057d 8C       		.byte	0x8c
 1123 057e 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 38


 1124 057f 8202     		.2byte	0x282
 1125 0581 93050000 		.4byte	0x593
 1126 0585 0C       		.uleb128 0xc
 1127 0586 B1010000 		.4byte	.LASF82
 1128 058a 04       		.byte	0x4
 1129 058b 8702     		.2byte	0x287
 1130 058d 93050000 		.4byte	0x593
 1131 0591 00       		.byte	0
 1132 0592 00       		.byte	0
 1133 0593 08       		.uleb128 0x8
 1134 0594 70050000 		.4byte	0x570
 1135 0598 A3050000 		.4byte	0x5a3
 1136 059c 09       		.uleb128 0x9
 1137 059d 57010000 		.4byte	0x157
 1138 05a1 04       		.byte	0x4
 1139 05a2 00       		.byte	0
 1140 05a3 04       		.uleb128 0x4
 1141 05a4 58040000 		.4byte	.LASF83
 1142 05a8 04       		.byte	0x4
 1143 05a9 8802     		.2byte	0x288
 1144 05ab 7C050000 		.4byte	0x57c
 1145 05af 02       		.uleb128 0x2
 1146 05b0 08       		.byte	0x8
 1147 05b1 04       		.byte	0x4
 1148 05b2 80030000 		.4byte	.LASF84
 1149 05b6 11       		.uleb128 0x11
 1150 05b7 F8000000 		.4byte	.LASF88
 1151 05bb 01       		.byte	0x1
 1152 05bc F602     		.2byte	0x2f6
 1153 05be 00000000 		.4byte	.LFB3
 1154 05c2 58000000 		.4byte	.LFE3-.LFB3
 1155 05c6 01       		.uleb128 0x1
 1156 05c7 9C       		.byte	0x9c
 1157 05c8 FD050000 		.4byte	0x5fd
 1158 05cc 12       		.uleb128 0x12
 1159 05cd 49020000 		.4byte	.LASF85
 1160 05d1 01       		.byte	0x1
 1161 05d2 FA02     		.2byte	0x2fa
 1162 05d4 83000000 		.4byte	0x83
 1163 05d8 00000000 		.4byte	.LLST0
 1164 05dc 12       		.uleb128 0x12
 1165 05dd F7060000 		.4byte	.LASF86
 1166 05e1 01       		.byte	0x1
 1167 05e2 FB02     		.2byte	0x2fb
 1168 05e4 83000000 		.4byte	0x83
 1169 05e8 40000000 		.4byte	.LLST1
 1170 05ec 12       		.uleb128 0x12
 1171 05ed 5F020000 		.4byte	.LASF87
 1172 05f1 01       		.byte	0x1
 1173 05f2 FC02     		.2byte	0x2fc
 1174 05f4 FD050000 		.4byte	0x5fd
 1175 05f8 80000000 		.4byte	.LLST2
 1176 05fc 00       		.byte	0
 1177 05fd 0E       		.uleb128 0xe
 1178 05fe 04       		.byte	0x4
 1179 05ff 03060000 		.4byte	0x603
 1180 0603 13       		.uleb128 0x13
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 39


 1181 0604 5E010000 		.4byte	0x15e
 1182 0608 11       		.uleb128 0x11
 1183 0609 9A020000 		.4byte	.LASF89
 1184 060d 01       		.byte	0x1
 1185 060e 9903     		.2byte	0x399
 1186 0610 00000000 		.4byte	.LFB5
 1187 0614 3C000000 		.4byte	.LFE5-.LFB5
 1188 0618 01       		.uleb128 0x1
 1189 0619 9C       		.byte	0x9c
 1190 061a 55060000 		.4byte	0x655
 1191 061e 12       		.uleb128 0x12
 1192 061f 5F020000 		.4byte	.LASF87
 1193 0623 01       		.byte	0x1
 1194 0624 9B03     		.2byte	0x39b
 1195 0626 FD050000 		.4byte	0x5fd
 1196 062a 93000000 		.4byte	.LLST3
 1197 062e 14       		.uleb128 0x14
 1198 062f 22000000 		.4byte	.LVL11
 1199 0633 A3070000 		.4byte	0x7a3
 1200 0637 15       		.uleb128 0x15
 1201 0638 28000000 		.4byte	.LVL12
 1202 063c AE070000 		.4byte	0x7ae
 1203 0640 4B060000 		.4byte	0x64b
 1204 0644 16       		.uleb128 0x16
 1205 0645 01       		.uleb128 0x1
 1206 0646 50       		.byte	0x50
 1207 0647 02       		.uleb128 0x2
 1208 0648 74       		.byte	0x74
 1209 0649 00       		.sleb128 0
 1210 064a 00       		.byte	0
 1211 064b 14       		.uleb128 0x14
 1212 064c 2C000000 		.4byte	.LVL13
 1213 0650 BA070000 		.4byte	0x7ba
 1214 0654 00       		.byte	0
 1215 0655 11       		.uleb128 0x11
 1216 0656 B4060000 		.4byte	.LASF90
 1217 065a 01       		.byte	0x1
 1218 065b 2F03     		.2byte	0x32f
 1219 065d 00000000 		.4byte	.LFB4
 1220 0661 BC000000 		.4byte	.LFE4-.LFB4
 1221 0665 01       		.uleb128 0x1
 1222 0666 9C       		.byte	0x9c
 1223 0667 A0060000 		.4byte	0x6a0
 1224 066b 12       		.uleb128 0x12
 1225 066c 5F020000 		.4byte	.LASF87
 1226 0670 01       		.byte	0x1
 1227 0671 3703     		.2byte	0x337
 1228 0673 A0060000 		.4byte	0x6a0
 1229 0677 A6000000 		.4byte	.LLST4
 1230 067b 14       		.uleb128 0x14
 1231 067c 5E000000 		.4byte	.LVL16
 1232 0680 AE070000 		.4byte	0x7ae
 1233 0684 14       		.uleb128 0x14
 1234 0685 6A000000 		.4byte	.LVL17
 1235 0689 C6070000 		.4byte	0x7c6
 1236 068d 14       		.uleb128 0x14
 1237 068e 6E000000 		.4byte	.LVL18
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 40


 1238 0692 BA070000 		.4byte	0x7ba
 1239 0696 14       		.uleb128 0x14
 1240 0697 8C000000 		.4byte	.LVL20
 1241 069b D2070000 		.4byte	0x7d2
 1242 069f 00       		.byte	0
 1243 06a0 0E       		.uleb128 0xe
 1244 06a1 04       		.byte	0x4
 1245 06a2 5E010000 		.4byte	0x15e
 1246 06a6 17       		.uleb128 0x17
 1247 06a7 94010000 		.4byte	.LASF91
 1248 06ab 01       		.byte	0x1
 1249 06ac 79       		.byte	0x79
 1250 06ad 00000000 		.4byte	.LFB1
 1251 06b1 4C000000 		.4byte	.LFE1-.LFB1
 1252 06b5 01       		.uleb128 0x1
 1253 06b6 9C       		.byte	0x9c
 1254 06b7 DD060000 		.4byte	0x6dd
 1255 06bb 14       		.uleb128 0x14
 1256 06bc 0E000000 		.4byte	.LVL23
 1257 06c0 B6050000 		.4byte	0x5b6
 1258 06c4 14       		.uleb128 0x14
 1259 06c5 1A000000 		.4byte	.LVL24
 1260 06c9 08060000 		.4byte	0x608
 1261 06cd 18       		.uleb128 0x18
 1262 06ce 28000000 		.4byte	.LVL25
 1263 06d2 A3070000 		.4byte	0x7a3
 1264 06d6 16       		.uleb128 0x16
 1265 06d7 01       		.uleb128 0x1
 1266 06d8 50       		.byte	0x50
 1267 06d9 01       		.uleb128 0x1
 1268 06da 30       		.byte	0x30
 1269 06db 00       		.byte	0
 1270 06dc 00       		.byte	0
 1271 06dd 17       		.uleb128 0x17
 1272 06de CD010000 		.4byte	.LASF92
 1273 06e2 01       		.byte	0x1
 1274 06e3 ED       		.byte	0xed
 1275 06e4 00000000 		.4byte	.LFB2
 1276 06e8 70000000 		.4byte	.LFE2-.LFB2
 1277 06ec 01       		.uleb128 0x1
 1278 06ed 9C       		.byte	0x9c
 1279 06ee 44070000 		.4byte	0x744
 1280 06f2 19       		.uleb128 0x19
 1281 06f3 9B060000 		.4byte	.LASF93
 1282 06f7 01       		.byte	0x1
 1283 06f8 F0       		.byte	0xf0
 1284 06f9 44070000 		.4byte	0x744
 1285 06fd CF000000 		.4byte	.LLST5
 1286 0701 14       		.uleb128 0x14
 1287 0702 2C000000 		.4byte	.LVL27
 1288 0706 B6050000 		.4byte	0x5b6
 1289 070a 15       		.uleb128 0x15
 1290 070b 3A000000 		.4byte	.LVL28
 1291 070f DD070000 		.4byte	0x7dd
 1292 0713 1E070000 		.4byte	0x71e
 1293 0717 16       		.uleb128 0x16
 1294 0718 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 41


 1295 0719 50       		.byte	0x50
 1296 071a 02       		.uleb128 0x2
 1297 071b 74       		.byte	0x74
 1298 071c 00       		.sleb128 0
 1299 071d 00       		.byte	0
 1300 071e 14       		.uleb128 0x14
 1301 071f 46000000 		.4byte	.LVL29
 1302 0723 08060000 		.4byte	0x608
 1303 0727 15       		.uleb128 0x15
 1304 0728 54000000 		.4byte	.LVL30
 1305 072c A3070000 		.4byte	0x7a3
 1306 0730 3A070000 		.4byte	0x73a
 1307 0734 16       		.uleb128 0x16
 1308 0735 01       		.uleb128 0x1
 1309 0736 50       		.byte	0x50
 1310 0737 01       		.uleb128 0x1
 1311 0738 30       		.byte	0x30
 1312 0739 00       		.byte	0
 1313 073a 14       		.uleb128 0x14
 1314 073b 58000000 		.4byte	.LVL31
 1315 073f 55060000 		.4byte	0x655
 1316 0743 00       		.byte	0
 1317 0744 0E       		.uleb128 0xe
 1318 0745 04       		.byte	0x4
 1319 0746 4A070000 		.4byte	0x74a
 1320 074a 13       		.uleb128 0x13
 1321 074b D0040000 		.4byte	0x4d0
 1322 074f 1A       		.uleb128 0x1a
 1323 0750 8C000000 		.4byte	.LASF94
 1324 0754 04       		.byte	0x4
 1325 0755 2A04     		.2byte	0x42a
 1326 0757 3F040000 		.4byte	0x43f
 1327 075b 1A       		.uleb128 0x1a
 1328 075c 7E040000 		.4byte	.LASF95
 1329 0760 04       		.byte	0x4
 1330 0761 2B04     		.2byte	0x42b
 1331 0763 67070000 		.4byte	0x767
 1332 0767 13       		.uleb128 0x13
 1333 0768 A3050000 		.4byte	0x5a3
 1334 076c 1B       		.uleb128 0x1b
 1335 076d 06060000 		.4byte	.LASF96
 1336 0771 05       		.byte	0x5
 1337 0772 9D       		.byte	0x9d
 1338 0773 A4000000 		.4byte	0xa4
 1339 0777 1B       		.uleb128 0x1b
 1340 0778 C3050000 		.4byte	.LASF97
 1341 077c 05       		.byte	0x5
 1342 077d 9E       		.byte	0x9e
 1343 077e A4000000 		.4byte	0xa4
 1344 0782 1B       		.uleb128 0x1b
 1345 0783 4F030000 		.4byte	.LASF98
 1346 0787 05       		.byte	0x5
 1347 0788 9F       		.byte	0x9f
 1348 0789 6B000000 		.4byte	0x6b
 1349 078d 1B       		.uleb128 0x1b
 1350 078e E9010000 		.4byte	.LASF99
 1351 0792 05       		.byte	0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 42


 1352 0793 A1       		.byte	0xa1
 1353 0794 64050000 		.4byte	0x564
 1354 0798 1B       		.uleb128 0x1b
 1355 0799 DF000000 		.4byte	.LASF100
 1356 079d 05       		.byte	0x5
 1357 079e A5       		.byte	0xa5
 1358 079f 6B000000 		.4byte	0x6b
 1359 07a3 1C       		.uleb128 0x1c
 1360 07a4 E0050000 		.4byte	.LASF101
 1361 07a8 E0050000 		.4byte	.LASF101
 1362 07ac 05       		.byte	0x5
 1363 07ad 75       		.byte	0x75
 1364 07ae 1D       		.uleb128 0x1d
 1365 07af 01020000 		.4byte	.LASF102
 1366 07b3 01020000 		.4byte	.LASF102
 1367 07b7 06       		.byte	0x6
 1368 07b8 D201     		.2byte	0x1d2
 1369 07ba 1D       		.uleb128 0x1d
 1370 07bb D4040000 		.4byte	.LASF103
 1371 07bf D4040000 		.4byte	.LASF103
 1372 07c3 06       		.byte	0x6
 1373 07c4 D101     		.2byte	0x1d1
 1374 07c6 1D       		.uleb128 0x1d
 1375 07c7 19040000 		.4byte	.LASF104
 1376 07cb 19040000 		.4byte	.LASF104
 1377 07cf 06       		.byte	0x6
 1378 07d0 DE01     		.2byte	0x1de
 1379 07d2 1C       		.uleb128 0x1c
 1380 07d3 10000000 		.4byte	.LASF105
 1381 07d7 10000000 		.4byte	.LASF105
 1382 07db 05       		.byte	0x5
 1383 07dc 6C       		.byte	0x6c
 1384 07dd 1D       		.uleb128 0x1d
 1385 07de 25030000 		.4byte	.LASF106
 1386 07e2 25030000 		.4byte	.LASF106
 1387 07e6 06       		.byte	0x6
 1388 07e7 C101     		.2byte	0x1c1
 1389 07e9 00       		.byte	0
 1390              		.section	.debug_abbrev,"",%progbits
 1391              	.Ldebug_abbrev0:
 1392 0000 01       		.uleb128 0x1
 1393 0001 11       		.uleb128 0x11
 1394 0002 01       		.byte	0x1
 1395 0003 25       		.uleb128 0x25
 1396 0004 0E       		.uleb128 0xe
 1397 0005 13       		.uleb128 0x13
 1398 0006 0B       		.uleb128 0xb
 1399 0007 03       		.uleb128 0x3
 1400 0008 0E       		.uleb128 0xe
 1401 0009 1B       		.uleb128 0x1b
 1402 000a 0E       		.uleb128 0xe
 1403 000b 55       		.uleb128 0x55
 1404 000c 17       		.uleb128 0x17
 1405 000d 11       		.uleb128 0x11
 1406 000e 01       		.uleb128 0x1
 1407 000f 10       		.uleb128 0x10
 1408 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 43


 1409 0011 00       		.byte	0
 1410 0012 00       		.byte	0
 1411 0013 02       		.uleb128 0x2
 1412 0014 24       		.uleb128 0x24
 1413 0015 00       		.byte	0
 1414 0016 0B       		.uleb128 0xb
 1415 0017 0B       		.uleb128 0xb
 1416 0018 3E       		.uleb128 0x3e
 1417 0019 0B       		.uleb128 0xb
 1418 001a 03       		.uleb128 0x3
 1419 001b 0E       		.uleb128 0xe
 1420 001c 00       		.byte	0
 1421 001d 00       		.byte	0
 1422 001e 03       		.uleb128 0x3
 1423 001f 24       		.uleb128 0x24
 1424 0020 00       		.byte	0
 1425 0021 0B       		.uleb128 0xb
 1426 0022 0B       		.uleb128 0xb
 1427 0023 3E       		.uleb128 0x3e
 1428 0024 0B       		.uleb128 0xb
 1429 0025 03       		.uleb128 0x3
 1430 0026 08       		.uleb128 0x8
 1431 0027 00       		.byte	0
 1432 0028 00       		.byte	0
 1433 0029 04       		.uleb128 0x4
 1434 002a 16       		.uleb128 0x16
 1435 002b 00       		.byte	0
 1436 002c 03       		.uleb128 0x3
 1437 002d 0E       		.uleb128 0xe
 1438 002e 3A       		.uleb128 0x3a
 1439 002f 0B       		.uleb128 0xb
 1440 0030 3B       		.uleb128 0x3b
 1441 0031 05       		.uleb128 0x5
 1442 0032 49       		.uleb128 0x49
 1443 0033 13       		.uleb128 0x13
 1444 0034 00       		.byte	0
 1445 0035 00       		.byte	0
 1446 0036 05       		.uleb128 0x5
 1447 0037 35       		.uleb128 0x35
 1448 0038 00       		.byte	0
 1449 0039 49       		.uleb128 0x49
 1450 003a 13       		.uleb128 0x13
 1451 003b 00       		.byte	0
 1452 003c 00       		.byte	0
 1453 003d 06       		.uleb128 0x6
 1454 003e 13       		.uleb128 0x13
 1455 003f 01       		.byte	0x1
 1456 0040 0B       		.uleb128 0xb
 1457 0041 0B       		.uleb128 0xb
 1458 0042 3A       		.uleb128 0x3a
 1459 0043 0B       		.uleb128 0xb
 1460 0044 3B       		.uleb128 0x3b
 1461 0045 0B       		.uleb128 0xb
 1462 0046 01       		.uleb128 0x1
 1463 0047 13       		.uleb128 0x13
 1464 0048 00       		.byte	0
 1465 0049 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 44


 1466 004a 07       		.uleb128 0x7
 1467 004b 0D       		.uleb128 0xd
 1468 004c 00       		.byte	0
 1469 004d 03       		.uleb128 0x3
 1470 004e 0E       		.uleb128 0xe
 1471 004f 3A       		.uleb128 0x3a
 1472 0050 0B       		.uleb128 0xb
 1473 0051 3B       		.uleb128 0x3b
 1474 0052 0B       		.uleb128 0xb
 1475 0053 49       		.uleb128 0x49
 1476 0054 13       		.uleb128 0x13
 1477 0055 38       		.uleb128 0x38
 1478 0056 0B       		.uleb128 0xb
 1479 0057 00       		.byte	0
 1480 0058 00       		.byte	0
 1481 0059 08       		.uleb128 0x8
 1482 005a 01       		.uleb128 0x1
 1483 005b 01       		.byte	0x1
 1484 005c 49       		.uleb128 0x49
 1485 005d 13       		.uleb128 0x13
 1486 005e 01       		.uleb128 0x1
 1487 005f 13       		.uleb128 0x13
 1488 0060 00       		.byte	0
 1489 0061 00       		.byte	0
 1490 0062 09       		.uleb128 0x9
 1491 0063 21       		.uleb128 0x21
 1492 0064 00       		.byte	0
 1493 0065 49       		.uleb128 0x49
 1494 0066 13       		.uleb128 0x13
 1495 0067 2F       		.uleb128 0x2f
 1496 0068 0B       		.uleb128 0xb
 1497 0069 00       		.byte	0
 1498 006a 00       		.byte	0
 1499 006b 0A       		.uleb128 0xa
 1500 006c 16       		.uleb128 0x16
 1501 006d 00       		.byte	0
 1502 006e 03       		.uleb128 0x3
 1503 006f 0E       		.uleb128 0xe
 1504 0070 3A       		.uleb128 0x3a
 1505 0071 0B       		.uleb128 0xb
 1506 0072 3B       		.uleb128 0x3b
 1507 0073 0B       		.uleb128 0xb
 1508 0074 49       		.uleb128 0x49
 1509 0075 13       		.uleb128 0x13
 1510 0076 00       		.byte	0
 1511 0077 00       		.byte	0
 1512 0078 0B       		.uleb128 0xb
 1513 0079 13       		.uleb128 0x13
 1514 007a 01       		.byte	0x1
 1515 007b 0B       		.uleb128 0xb
 1516 007c 0B       		.uleb128 0xb
 1517 007d 3A       		.uleb128 0x3a
 1518 007e 0B       		.uleb128 0xb
 1519 007f 3B       		.uleb128 0x3b
 1520 0080 05       		.uleb128 0x5
 1521 0081 01       		.uleb128 0x1
 1522 0082 13       		.uleb128 0x13
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 45


 1523 0083 00       		.byte	0
 1524 0084 00       		.byte	0
 1525 0085 0C       		.uleb128 0xc
 1526 0086 0D       		.uleb128 0xd
 1527 0087 00       		.byte	0
 1528 0088 03       		.uleb128 0x3
 1529 0089 0E       		.uleb128 0xe
 1530 008a 3A       		.uleb128 0x3a
 1531 008b 0B       		.uleb128 0xb
 1532 008c 3B       		.uleb128 0x3b
 1533 008d 05       		.uleb128 0x5
 1534 008e 49       		.uleb128 0x49
 1535 008f 13       		.uleb128 0x13
 1536 0090 38       		.uleb128 0x38
 1537 0091 0B       		.uleb128 0xb
 1538 0092 00       		.byte	0
 1539 0093 00       		.byte	0
 1540 0094 0D       		.uleb128 0xd
 1541 0095 0D       		.uleb128 0xd
 1542 0096 00       		.byte	0
 1543 0097 03       		.uleb128 0x3
 1544 0098 08       		.uleb128 0x8
 1545 0099 3A       		.uleb128 0x3a
 1546 009a 0B       		.uleb128 0xb
 1547 009b 3B       		.uleb128 0x3b
 1548 009c 05       		.uleb128 0x5
 1549 009d 49       		.uleb128 0x49
 1550 009e 13       		.uleb128 0x13
 1551 009f 38       		.uleb128 0x38
 1552 00a0 0B       		.uleb128 0xb
 1553 00a1 00       		.byte	0
 1554 00a2 00       		.byte	0
 1555 00a3 0E       		.uleb128 0xe
 1556 00a4 0F       		.uleb128 0xf
 1557 00a5 00       		.byte	0
 1558 00a6 0B       		.uleb128 0xb
 1559 00a7 0B       		.uleb128 0xb
 1560 00a8 49       		.uleb128 0x49
 1561 00a9 13       		.uleb128 0x13
 1562 00aa 00       		.byte	0
 1563 00ab 00       		.byte	0
 1564 00ac 0F       		.uleb128 0xf
 1565 00ad 26       		.uleb128 0x26
 1566 00ae 00       		.byte	0
 1567 00af 00       		.byte	0
 1568 00b0 00       		.byte	0
 1569 00b1 10       		.uleb128 0x10
 1570 00b2 0F       		.uleb128 0xf
 1571 00b3 00       		.byte	0
 1572 00b4 0B       		.uleb128 0xb
 1573 00b5 0B       		.uleb128 0xb
 1574 00b6 00       		.byte	0
 1575 00b7 00       		.byte	0
 1576 00b8 11       		.uleb128 0x11
 1577 00b9 2E       		.uleb128 0x2e
 1578 00ba 01       		.byte	0x1
 1579 00bb 03       		.uleb128 0x3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 46


 1580 00bc 0E       		.uleb128 0xe
 1581 00bd 3A       		.uleb128 0x3a
 1582 00be 0B       		.uleb128 0xb
 1583 00bf 3B       		.uleb128 0x3b
 1584 00c0 05       		.uleb128 0x5
 1585 00c1 27       		.uleb128 0x27
 1586 00c2 19       		.uleb128 0x19
 1587 00c3 11       		.uleb128 0x11
 1588 00c4 01       		.uleb128 0x1
 1589 00c5 12       		.uleb128 0x12
 1590 00c6 06       		.uleb128 0x6
 1591 00c7 40       		.uleb128 0x40
 1592 00c8 18       		.uleb128 0x18
 1593 00c9 9742     		.uleb128 0x2117
 1594 00cb 19       		.uleb128 0x19
 1595 00cc 01       		.uleb128 0x1
 1596 00cd 13       		.uleb128 0x13
 1597 00ce 00       		.byte	0
 1598 00cf 00       		.byte	0
 1599 00d0 12       		.uleb128 0x12
 1600 00d1 34       		.uleb128 0x34
 1601 00d2 00       		.byte	0
 1602 00d3 03       		.uleb128 0x3
 1603 00d4 0E       		.uleb128 0xe
 1604 00d5 3A       		.uleb128 0x3a
 1605 00d6 0B       		.uleb128 0xb
 1606 00d7 3B       		.uleb128 0x3b
 1607 00d8 05       		.uleb128 0x5
 1608 00d9 49       		.uleb128 0x49
 1609 00da 13       		.uleb128 0x13
 1610 00db 02       		.uleb128 0x2
 1611 00dc 17       		.uleb128 0x17
 1612 00dd 00       		.byte	0
 1613 00de 00       		.byte	0
 1614 00df 13       		.uleb128 0x13
 1615 00e0 26       		.uleb128 0x26
 1616 00e1 00       		.byte	0
 1617 00e2 49       		.uleb128 0x49
 1618 00e3 13       		.uleb128 0x13
 1619 00e4 00       		.byte	0
 1620 00e5 00       		.byte	0
 1621 00e6 14       		.uleb128 0x14
 1622 00e7 898201   		.uleb128 0x4109
 1623 00ea 00       		.byte	0
 1624 00eb 11       		.uleb128 0x11
 1625 00ec 01       		.uleb128 0x1
 1626 00ed 31       		.uleb128 0x31
 1627 00ee 13       		.uleb128 0x13
 1628 00ef 00       		.byte	0
 1629 00f0 00       		.byte	0
 1630 00f1 15       		.uleb128 0x15
 1631 00f2 898201   		.uleb128 0x4109
 1632 00f5 01       		.byte	0x1
 1633 00f6 11       		.uleb128 0x11
 1634 00f7 01       		.uleb128 0x1
 1635 00f8 31       		.uleb128 0x31
 1636 00f9 13       		.uleb128 0x13
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 47


 1637 00fa 01       		.uleb128 0x1
 1638 00fb 13       		.uleb128 0x13
 1639 00fc 00       		.byte	0
 1640 00fd 00       		.byte	0
 1641 00fe 16       		.uleb128 0x16
 1642 00ff 8A8201   		.uleb128 0x410a
 1643 0102 00       		.byte	0
 1644 0103 02       		.uleb128 0x2
 1645 0104 18       		.uleb128 0x18
 1646 0105 9142     		.uleb128 0x2111
 1647 0107 18       		.uleb128 0x18
 1648 0108 00       		.byte	0
 1649 0109 00       		.byte	0
 1650 010a 17       		.uleb128 0x17
 1651 010b 2E       		.uleb128 0x2e
 1652 010c 01       		.byte	0x1
 1653 010d 3F       		.uleb128 0x3f
 1654 010e 19       		.uleb128 0x19
 1655 010f 03       		.uleb128 0x3
 1656 0110 0E       		.uleb128 0xe
 1657 0111 3A       		.uleb128 0x3a
 1658 0112 0B       		.uleb128 0xb
 1659 0113 3B       		.uleb128 0x3b
 1660 0114 0B       		.uleb128 0xb
 1661 0115 27       		.uleb128 0x27
 1662 0116 19       		.uleb128 0x19
 1663 0117 11       		.uleb128 0x11
 1664 0118 01       		.uleb128 0x1
 1665 0119 12       		.uleb128 0x12
 1666 011a 06       		.uleb128 0x6
 1667 011b 40       		.uleb128 0x40
 1668 011c 18       		.uleb128 0x18
 1669 011d 9742     		.uleb128 0x2117
 1670 011f 19       		.uleb128 0x19
 1671 0120 01       		.uleb128 0x1
 1672 0121 13       		.uleb128 0x13
 1673 0122 00       		.byte	0
 1674 0123 00       		.byte	0
 1675 0124 18       		.uleb128 0x18
 1676 0125 898201   		.uleb128 0x4109
 1677 0128 01       		.byte	0x1
 1678 0129 11       		.uleb128 0x11
 1679 012a 01       		.uleb128 0x1
 1680 012b 31       		.uleb128 0x31
 1681 012c 13       		.uleb128 0x13
 1682 012d 00       		.byte	0
 1683 012e 00       		.byte	0
 1684 012f 19       		.uleb128 0x19
 1685 0130 34       		.uleb128 0x34
 1686 0131 00       		.byte	0
 1687 0132 03       		.uleb128 0x3
 1688 0133 0E       		.uleb128 0xe
 1689 0134 3A       		.uleb128 0x3a
 1690 0135 0B       		.uleb128 0xb
 1691 0136 3B       		.uleb128 0x3b
 1692 0137 0B       		.uleb128 0xb
 1693 0138 49       		.uleb128 0x49
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 48


 1694 0139 13       		.uleb128 0x13
 1695 013a 02       		.uleb128 0x2
 1696 013b 17       		.uleb128 0x17
 1697 013c 00       		.byte	0
 1698 013d 00       		.byte	0
 1699 013e 1A       		.uleb128 0x1a
 1700 013f 34       		.uleb128 0x34
 1701 0140 00       		.byte	0
 1702 0141 03       		.uleb128 0x3
 1703 0142 0E       		.uleb128 0xe
 1704 0143 3A       		.uleb128 0x3a
 1705 0144 0B       		.uleb128 0xb
 1706 0145 3B       		.uleb128 0x3b
 1707 0146 05       		.uleb128 0x5
 1708 0147 49       		.uleb128 0x49
 1709 0148 13       		.uleb128 0x13
 1710 0149 3F       		.uleb128 0x3f
 1711 014a 19       		.uleb128 0x19
 1712 014b 3C       		.uleb128 0x3c
 1713 014c 19       		.uleb128 0x19
 1714 014d 00       		.byte	0
 1715 014e 00       		.byte	0
 1716 014f 1B       		.uleb128 0x1b
 1717 0150 34       		.uleb128 0x34
 1718 0151 00       		.byte	0
 1719 0152 03       		.uleb128 0x3
 1720 0153 0E       		.uleb128 0xe
 1721 0154 3A       		.uleb128 0x3a
 1722 0155 0B       		.uleb128 0xb
 1723 0156 3B       		.uleb128 0x3b
 1724 0157 0B       		.uleb128 0xb
 1725 0158 49       		.uleb128 0x49
 1726 0159 13       		.uleb128 0x13
 1727 015a 3F       		.uleb128 0x3f
 1728 015b 19       		.uleb128 0x19
 1729 015c 3C       		.uleb128 0x3c
 1730 015d 19       		.uleb128 0x19
 1731 015e 00       		.byte	0
 1732 015f 00       		.byte	0
 1733 0160 1C       		.uleb128 0x1c
 1734 0161 2E       		.uleb128 0x2e
 1735 0162 00       		.byte	0
 1736 0163 3F       		.uleb128 0x3f
 1737 0164 19       		.uleb128 0x19
 1738 0165 3C       		.uleb128 0x3c
 1739 0166 19       		.uleb128 0x19
 1740 0167 6E       		.uleb128 0x6e
 1741 0168 0E       		.uleb128 0xe
 1742 0169 03       		.uleb128 0x3
 1743 016a 0E       		.uleb128 0xe
 1744 016b 3A       		.uleb128 0x3a
 1745 016c 0B       		.uleb128 0xb
 1746 016d 3B       		.uleb128 0x3b
 1747 016e 0B       		.uleb128 0xb
 1748 016f 00       		.byte	0
 1749 0170 00       		.byte	0
 1750 0171 1D       		.uleb128 0x1d
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 49


 1751 0172 2E       		.uleb128 0x2e
 1752 0173 00       		.byte	0
 1753 0174 3F       		.uleb128 0x3f
 1754 0175 19       		.uleb128 0x19
 1755 0176 3C       		.uleb128 0x3c
 1756 0177 19       		.uleb128 0x19
 1757 0178 6E       		.uleb128 0x6e
 1758 0179 0E       		.uleb128 0xe
 1759 017a 03       		.uleb128 0x3
 1760 017b 0E       		.uleb128 0xe
 1761 017c 3A       		.uleb128 0x3a
 1762 017d 0B       		.uleb128 0xb
 1763 017e 3B       		.uleb128 0x3b
 1764 017f 05       		.uleb128 0x5
 1765 0180 00       		.byte	0
 1766 0181 00       		.byte	0
 1767 0182 00       		.byte	0
 1768              		.section	.debug_loc,"",%progbits
 1769              	.Ldebug_loc0:
 1770              	.LLST0:
 1771 0000 1A000000 		.4byte	.LVL1
 1772 0004 2A000000 		.4byte	.LVL5
 1773 0008 0100     		.2byte	0x1
 1774 000a 52       		.byte	0x52
 1775 000b 2A000000 		.4byte	.LVL5
 1776 000f 34000000 		.4byte	.LVL6
 1777 0013 0700     		.2byte	0x7
 1778 0015 71       		.byte	0x71
 1779 0016 00       		.sleb128 0
 1780 0017 40       		.byte	0x40
 1781 0018 24       		.byte	0x24
 1782 0019 40       		.byte	0x40
 1783 001a 25       		.byte	0x25
 1784 001b 9F       		.byte	0x9f
 1785 001c 34000000 		.4byte	.LVL6
 1786 0020 36000000 		.4byte	.LVL7
 1787 0024 0100     		.2byte	0x1
 1788 0026 52       		.byte	0x52
 1789 0027 36000000 		.4byte	.LVL7
 1790 002b 38000000 		.4byte	.LVL8
 1791 002f 0700     		.2byte	0x7
 1792 0031 71       		.byte	0x71
 1793 0032 00       		.sleb128 0
 1794 0033 40       		.byte	0x40
 1795 0034 24       		.byte	0x24
 1796 0035 40       		.byte	0x40
 1797 0036 25       		.byte	0x25
 1798 0037 9F       		.byte	0x9f
 1799 0038 00000000 		.4byte	0
 1800 003c 00000000 		.4byte	0
 1801              	.LLST1:
 1802 0040 22000000 		.4byte	.LVL3
 1803 0044 28000000 		.4byte	.LVL4
 1804 0048 0100     		.2byte	0x1
 1805 004a 53       		.byte	0x53
 1806 004b 28000000 		.4byte	.LVL4
 1807 004f 34000000 		.4byte	.LVL6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 50


 1808 0053 0700     		.2byte	0x7
 1809 0055 31       		.byte	0x31
 1810 0056 70       		.byte	0x70
 1811 0057 00       		.sleb128 0
 1812 0058 24       		.byte	0x24
 1813 0059 31       		.byte	0x31
 1814 005a 1C       		.byte	0x1c
 1815 005b 9F       		.byte	0x9f
 1816 005c 34000000 		.4byte	.LVL6
 1817 0060 40000000 		.4byte	.LVL9
 1818 0064 0100     		.2byte	0x1
 1819 0066 53       		.byte	0x53
 1820 0067 40000000 		.4byte	.LVL9
 1821 006b 58000000 		.4byte	.LFE3
 1822 006f 0700     		.2byte	0x7
 1823 0071 31       		.byte	0x31
 1824 0072 70       		.byte	0x70
 1825 0073 00       		.sleb128 0
 1826 0074 24       		.byte	0x24
 1827 0075 31       		.byte	0x31
 1828 0076 1C       		.byte	0x1c
 1829 0077 9F       		.byte	0x9f
 1830 0078 00000000 		.4byte	0
 1831 007c 00000000 		.4byte	0
 1832              	.LLST2:
 1833 0080 12000000 		.4byte	.LVL0
 1834 0084 1E000000 		.4byte	.LVL2
 1835 0088 0100     		.2byte	0x1
 1836 008a 53       		.byte	0x53
 1837 008b 00000000 		.4byte	0
 1838 008f 00000000 		.4byte	0
 1839              	.LLST3:
 1840 0093 14000000 		.4byte	.LVL10
 1841 0097 2C000000 		.4byte	.LVL14
 1842 009b 0100     		.2byte	0x1
 1843 009d 54       		.byte	0x54
 1844 009e 00000000 		.4byte	0
 1845 00a2 00000000 		.4byte	0
 1846              	.LLST4:
 1847 00a6 14000000 		.4byte	.LVL15
 1848 00aa 5D000000 		.4byte	.LVL16-1
 1849 00ae 0100     		.2byte	0x1
 1850 00b0 50       		.byte	0x50
 1851 00b1 70000000 		.4byte	.LVL19
 1852 00b5 8B000000 		.4byte	.LVL20-1
 1853 00b9 0100     		.2byte	0x1
 1854 00bb 50       		.byte	0x50
 1855 00bc 8E000000 		.4byte	.LVL21
 1856 00c0 9E000000 		.4byte	.LVL22
 1857 00c4 0100     		.2byte	0x1
 1858 00c6 50       		.byte	0x50
 1859 00c7 00000000 		.4byte	0
 1860 00cb 00000000 		.4byte	0
 1861              	.LLST5:
 1862 00cf 20000000 		.4byte	.LVL26
 1863 00d3 58000000 		.4byte	.LVL32
 1864 00d7 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 51


 1865 00d9 54       		.byte	0x54
 1866 00da 00000000 		.4byte	0
 1867 00de 00000000 		.4byte	0
 1868              		.section	.debug_aranges,"",%progbits
 1869 0000 3C000000 		.4byte	0x3c
 1870 0004 0200     		.2byte	0x2
 1871 0006 00000000 		.4byte	.Ldebug_info0
 1872 000a 04       		.byte	0x4
 1873 000b 00       		.byte	0
 1874 000c 0000     		.2byte	0
 1875 000e 0000     		.2byte	0
 1876 0010 00000000 		.4byte	.LFB3
 1877 0014 58000000 		.4byte	.LFE3-.LFB3
 1878 0018 00000000 		.4byte	.LFB5
 1879 001c 3C000000 		.4byte	.LFE5-.LFB5
 1880 0020 00000000 		.4byte	.LFB4
 1881 0024 BC000000 		.4byte	.LFE4-.LFB4
 1882 0028 00000000 		.4byte	.LFB1
 1883 002c 4C000000 		.4byte	.LFE1-.LFB1
 1884 0030 00000000 		.4byte	.LFB2
 1885 0034 70000000 		.4byte	.LFE2-.LFB2
 1886 0038 00000000 		.4byte	0
 1887 003c 00000000 		.4byte	0
 1888              		.section	.debug_ranges,"",%progbits
 1889              	.Ldebug_ranges0:
 1890 0000 00000000 		.4byte	.LFB3
 1891 0004 58000000 		.4byte	.LFE3
 1892 0008 00000000 		.4byte	.LFB5
 1893 000c 3C000000 		.4byte	.LFE5
 1894 0010 00000000 		.4byte	.LFB4
 1895 0014 BC000000 		.4byte	.LFE4
 1896 0018 00000000 		.4byte	.LFB1
 1897 001c 4C000000 		.4byte	.LFE1
 1898 0020 00000000 		.4byte	.LFB2
 1899 0024 70000000 		.4byte	.LFE2
 1900 0028 00000000 		.4byte	0
 1901 002c 00000000 		.4byte	0
 1902              		.section	.debug_line,"",%progbits
 1903              	.Ldebug_line0:
 1904 0000 59010000 		.section	.debug_str,"MS",%progbits,1
 1904      0200B900 
 1904      00000201 
 1904      FB0E0D00 
 1904      01010101 
 1905              	.LASF10:
 1906 0000 75696E74 		.ascii	"uint16\000"
 1906      313600
 1907              	.LASF43:
 1908 0007 636F6E66 		.ascii	"configId\000"
 1908      69674964 
 1908      00
 1909              	.LASF105:
 1910 0010 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 1910      656E7365 
 1910      5F315F53 
 1910      73506F73 
 1910      74416C6C 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 52


 1911              	.LASF7:
 1912 0030 6C6F6E67 		.ascii	"long long unsigned int\000"
 1912      206C6F6E 
 1912      6720756E 
 1912      7369676E 
 1912      65642069 
 1913              	.LASF72:
 1914 0047 70747232 		.ascii	"ptr2SnsFlash\000"
 1914      536E7346 
 1914      6C617368 
 1914      00
 1915              	.LASF38:
 1916 0054 64696666 		.ascii	"diff\000"
 1916      00
 1917              	.LASF62:
 1918 0059 6873696F 		.ascii	"hsiomPtr\000"
 1918      6D507472 
 1918      00
 1919              	.LASF58:
 1920 0062 736E7254 		.ascii	"snrTestSensorId\000"
 1920      65737453 
 1920      656E736F 
 1920      72496400 
 1921              	.LASF6:
 1922 0072 6C6F6E67 		.ascii	"long long int\000"
 1922      206C6F6E 
 1922      6720696E 
 1922      7400
 1923              	.LASF0:
 1924 0080 7369676E 		.ascii	"signed char\000"
 1924      65642063 
 1924      68617200 
 1925              	.LASF94:
 1926 008c 43617053 		.ascii	"CapSense_1_dsRam\000"
 1926      656E7365 
 1926      5F315F64 
 1926      7352616D 
 1926      00
 1927              	.LASF30:
 1928 009d 62757474 		.ascii	"button0\000"
 1928      6F6E3000 
 1929              	.LASF31:
 1930 00a5 62757474 		.ascii	"button1\000"
 1930      6F6E3100 
 1931              	.LASF32:
 1932 00ad 62757474 		.ascii	"button2\000"
 1932      6F6E3200 
 1933              	.LASF33:
 1934 00b5 62757474 		.ascii	"button3\000"
 1934      6F6E3300 
 1935              	.LASF34:
 1936 00bd 62757474 		.ascii	"button4\000"
 1936      6F6E3400 
 1937              	.LASF16:
 1938 00c5 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 1938      656E7365 
 1938      5F315F54 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 53


 1938      48524553 
 1938      484F4C44 
 1939              	.LASF100:
 1940 00df 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 1940      656E7365 
 1940      5F315F73 
 1940      63616E46 
 1940      72657149 
 1941              	.LASF88:
 1942 00f8 43617053 		.ascii	"CapSense_1_SsCSDPostScan\000"
 1942      656E7365 
 1942      5F315F53 
 1942      73435344 
 1942      506F7374 
 1943              	.LASF51:
 1944 0111 736E7353 		.ascii	"snsStatus\000"
 1944      74617475 
 1944      7300
 1945              	.LASF4:
 1946 011b 6C6F6E67 		.ascii	"long int\000"
 1946      20696E74 
 1946      00
 1947              	.LASF53:
 1948 0124 6D6F6443 		.ascii	"modCsdClk\000"
 1948      7364436C 
 1948      6B00
 1949              	.LASF74:
 1950 012e 70747232 		.ascii	"ptr2SnsRam\000"
 1950      536E7352 
 1950      616D00
 1951              	.LASF65:
 1952 0139 70735074 		.ascii	"psPtr\000"
 1952      7200
 1953              	.LASF9:
 1954 013f 75696E74 		.ascii	"uint8\000"
 1954      3800
 1955              	.LASF13:
 1956 0145 646F7562 		.ascii	"double\000"
 1956      6C6500
 1957              	.LASF60:
 1958 014c 736E7254 		.ascii	"snrTestRawCount\000"
 1958      65737452 
 1958      6177436F 
 1958      756E7400 
 1959              	.LASF70:
 1960 015c 73686966 		.ascii	"shift\000"
 1960      7400
 1961              	.LASF69:
 1962 0162 64725368 		.ascii	"drShift\000"
 1962      69667400 
 1963              	.LASF11:
 1964 016a 75696E74 		.ascii	"uint32\000"
 1964      333200
 1965              	.LASF22:
 1966 0171 68797374 		.ascii	"hysteresis\000"
 1966      65726573 
 1966      697300
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 54


 1967              	.LASF67:
 1968 017c 6D61736B 		.ascii	"mask\000"
 1968      00
 1969              	.LASF37:
 1970 0181 62736C6E 		.ascii	"bslnExt\000"
 1970      45787400 
 1971              	.LASF50:
 1972 0189 77646774 		.ascii	"wdgtStatus\000"
 1972      53746174 
 1972      757300
 1973              	.LASF91:
 1974 0194 43617053 		.ascii	"CapSense_1_CSDPostSingleScan\000"
 1974      656E7365 
 1974      5F315F43 
 1974      5344506F 
 1974      73745369 
 1975              	.LASF82:
 1976 01b1 77646774 		.ascii	"wdgtArray\000"
 1976      41727261 
 1976      7900
 1977              	.LASF36:
 1978 01bb 62736C6E 		.ascii	"bsln\000"
 1978      00
 1979              	.LASF8:
 1980 01c0 756E7369 		.ascii	"unsigned int\000"
 1980      676E6564 
 1980      20696E74 
 1980      00
 1981              	.LASF92:
 1982 01cd 43617053 		.ascii	"CapSense_1_CSDPostMultiScan\000"
 1982      656E7365 
 1982      5F315F43 
 1982      5344506F 
 1982      73744D75 
 1983              	.LASF99:
 1984 01e9 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 1984      656E7365 
 1984      5F315F63 
 1984      75725261 
 1984      6D536E73 
 1985              	.LASF102:
 1986 0201 43617053 		.ascii	"CapSense_1_SsCSDSetUpIdacs\000"
 1986      656E7365 
 1986      5F315F53 
 1986      73435344 
 1986      53657455 
 1987              	.LASF57:
 1988 021c 736E7254 		.ascii	"snrTestWidgetId\000"
 1988      65737457 
 1988      69646765 
 1988      74496400 
 1989              	.LASF5:
 1990 022c 6C6F6E67 		.ascii	"long unsigned int\000"
 1990      20756E73 
 1990      69676E65 
 1990      6420696E 
 1990      7400
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 55


 1991              	.LASF49:
 1992 023e 77646774 		.ascii	"wdgtEnable\000"
 1992      456E6162 
 1992      6C6500
 1993              	.LASF85:
 1994 0249 746D7052 		.ascii	"tmpRawData\000"
 1994      61774461 
 1994      746100
 1995              	.LASF24:
 1996 0254 6C6F7742 		.ascii	"lowBslnRst\000"
 1996      736C6E52 
 1996      737400
 1997              	.LASF87:
 1998 025f 70747257 		.ascii	"ptrWdgt\000"
 1998      64677400 
 1999              	.LASF3:
 2000 0267 73686F72 		.ascii	"short unsigned int\000"
 2000      7420756E 
 2000      7369676E 
 2000      65642069 
 2000      6E7400
 2001              	.LASF29:
 2002 027a 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 2002      656E7365 
 2002      5F315F52 
 2002      414D5F57 
 2002      445F4255 
 2003              	.LASF89:
 2004 029a 43617053 		.ascii	"CapSense_1_SsNextFrequencyScan\000"
 2004      656E7365 
 2004      5F315F53 
 2004      734E6578 
 2004      74467265 
 2005              	.LASF81:
 2006 02b9 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 2006      656E7365 
 2006      5F315F46 
 2006      4C415348 
 2006      5F57445F 
 2007              	.LASF56:
 2008 02d4 736E734C 		.ascii	"snsList\000"
 2008      69737400 
 2009              	.LASF42:
 2010 02dc 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 2010      656E7365 
 2010      5F315F52 
 2010      414D5F53 
 2010      4E535F4C 
 2011              	.LASF54:
 2012 02fb 736E7343 		.ascii	"snsCsdClk\000"
 2012      7364436C 
 2012      6B00
 2013              	.LASF52:
 2014 0305 63736430 		.ascii	"csd0Config\000"
 2014      436F6E66 
 2014      696700
 2015              	.LASF73:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 56


 2016 0310 70747232 		.ascii	"ptr2WdgtRam\000"
 2016      57646774 
 2016      52616D00 
 2017              	.LASF44:
 2018 031c 64657669 		.ascii	"deviceId\000"
 2018      63654964 
 2018      00
 2019              	.LASF106:
 2020 0325 43617053 		.ascii	"CapSense_1_CSDDisconnectSns\000"
 2020      656E7365 
 2020      5F315F43 
 2020      53444469 
 2020      73636F6E 
 2021              	.LASF15:
 2022 0341 72656733 		.ascii	"reg32\000"
 2022      3200
 2023              	.LASF25:
 2024 0347 69646163 		.ascii	"idacMod\000"
 2024      4D6F6400 
 2025              	.LASF98:
 2026 034f 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
 2026      656E7365 
 2026      5F315F72 
 2026      65717565 
 2026      73745363 
 2027              	.LASF80:
 2028 036f 6E756D43 		.ascii	"numCols\000"
 2028      6F6C7300 
 2029              	.LASF27:
 2030 0377 73697A65 		.ascii	"sizetype\000"
 2030      74797065 
 2030      00
 2031              	.LASF84:
 2032 0380 6C6F6E67 		.ascii	"long double\000"
 2032      20646F75 
 2032      626C6500 
 2033              	.LASF77:
 2034 038c 73746174 		.ascii	"staticConfig\000"
 2034      6963436F 
 2034      6E666967 
 2034      00
 2035              	.LASF21:
 2036 0399 6E4E6F69 		.ascii	"nNoiseTh\000"
 2036      73655468 
 2036      00
 2037              	.LASF45:
 2038 03a2 6877436C 		.ascii	"hwClock\000"
 2038      6F636B00 
 2039              	.LASF79:
 2040 03aa 77646774 		.ascii	"wdgtType\000"
 2040      54797065 
 2040      00
 2041              	.LASF47:
 2042 03b3 7363616E 		.ascii	"scanCounter\000"
 2042      436F756E 
 2042      74657200 
 2043              	.LASF61:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 57


 2044 03bf 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 2044      656E7365 
 2044      5F315F52 
 2044      414D5F53 
 2044      54525543 
 2045              	.LASF71:
 2046 03d5 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 2046      656E7365 
 2046      5F315F46 
 2046      4C415348 
 2046      5F494F5F 
 2047              	.LASF46:
 2048 03f0 74756E65 		.ascii	"tunerCmd\000"
 2048      72436D64 
 2048      00
 2049              	.LASF12:
 2050 03f9 666C6F61 		.ascii	"float\000"
 2050      7400
 2051              	.LASF41:
 2052 03ff 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 2052      656E7365 
 2052      5F315F52 
 2052      414D5F53 
 2052      4E535F53 
 2053              	.LASF104:
 2054 0419 43617053 		.ascii	"CapSense_1_SsCSDConnectSensorExt\000"
 2054      656E7365 
 2054      5F315F53 
 2054      73435344 
 2054      436F6E6E 
 2055              	.LASF28:
 2056 043a 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 2056      656E7365 
 2056      5F315F52 
 2056      414D5F57 
 2056      445F4241 
 2057              	.LASF83:
 2058 0458 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 2058      656E7365 
 2058      5F315F46 
 2058      4C415348 
 2058      5F535452 
 2059              	.LASF1:
 2060 0470 756E7369 		.ascii	"unsigned char\000"
 2060      676E6564 
 2060      20636861 
 2060      7200
 2061              	.LASF95:
 2062 047e 43617053 		.ascii	"CapSense_1_dsFlash\000"
 2062      656E7365 
 2062      5F315F64 
 2062      73466C61 
 2062      736800
 2063              	.LASF2:
 2064 0491 73686F72 		.ascii	"short int\000"
 2064      7420696E 
 2064      7400
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 58


 2065              	.LASF35:
 2066 049b 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 2066      656E7365 
 2066      5F315F52 
 2066      414D5F57 
 2066      445F4C49 
 2067              	.LASF75:
 2068 04b9 70747232 		.ascii	"ptr2FltrHistory\000"
 2068      466C7472 
 2068      48697374 
 2068      6F727900 
 2069              	.LASF68:
 2070 04c9 6873696F 		.ascii	"hsiomShift\000"
 2070      6D536869 
 2070      667400
 2071              	.LASF103:
 2072 04d4 43617053 		.ascii	"CapSense_1_SsCSDStartSample\000"
 2072      656E7365 
 2072      5F315F53 
 2072      73435344 
 2072      53746172 
 2073              	.LASF108:
 2074 04f0 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_INT.c\000"
 2074      72617465 
 2074      645F536F 
 2074      75726365 
 2074      5C50536F 
 2075              	.LASF18:
 2076 0518 7265736F 		.ascii	"resolution\000"
 2076      6C757469 
 2076      6F6E00
 2077              	.LASF55:
 2078 0523 77646774 		.ascii	"wdgtList\000"
 2078      4C697374 
 2078      00
 2079              	.LASF107:
 2080 052c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2080      43313120 
 2080      352E342E 
 2080      31203230 
 2080      31363036 
 2081 055f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2081      20726576 
 2081      6973696F 
 2081      6E203233 
 2081      37373135 
 2082 0592 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 2082      67202D66 
 2082      66756E63 
 2082      74696F6E 
 2082      2D736563 
 2083              	.LASF14:
 2084 05be 63686172 		.ascii	"char\000"
 2084      00
 2085              	.LASF97:
 2086 05c3 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 2086      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 59


 2086      5F315F73 
 2086      656E736F 
 2086      72496E64 
 2087              	.LASF64:
 2088 05da 64725074 		.ascii	"drPtr\000"
 2088      7200
 2089              	.LASF101:
 2090 05e0 43617053 		.ascii	"CapSense_1_SsChangeImoFreq\000"
 2090      656E7365 
 2090      5F315F53 
 2090      73436861 
 2090      6E676549 
 2091              	.LASF23:
 2092 05fb 6F6E4465 		.ascii	"onDebounce\000"
 2092      626F756E 
 2092      636500
 2093              	.LASF96:
 2094 0606 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 2094      656E7365 
 2094      5F315F77 
 2094      69646765 
 2094      74496E64 
 2095              	.LASF40:
 2096 061d 69646163 		.ascii	"idacComp\000"
 2096      436F6D70 
 2096      00
 2097              	.LASF39:
 2098 0626 6E656742 		.ascii	"negBslnRstCnt\000"
 2098      736C6E52 
 2098      7374436E 
 2098      7400
 2099              	.LASF78:
 2100 0634 746F7461 		.ascii	"totalNumSns\000"
 2100      6C4E756D 
 2100      536E7300 
 2101              	.LASF76:
 2102 0640 70747232 		.ascii	"ptr2DebounceArr\000"
 2102      4465626F 
 2102      756E6365 
 2102      41727200 
 2103              	.LASF48:
 2104 0650 73746174 		.ascii	"status\000"
 2104      757300
 2105              	.LASF109:
 2106 0657 433A5C55 		.ascii	"C:\\Users\\michael.machate\\Desktop\\Cypress_Firstt"
 2106      73657273 
 2106      5C6D6963 
 2106      6861656C 
 2106      2E6D6163 
 2107 0686 65737473 		.ascii	"ests\\FirstTest.cydsn\000"
 2107      5C466972 
 2107      73745465 
 2107      73742E63 
 2107      7964736E 
 2108              	.LASF93:
 2109 069b 63757253 		.ascii	"curSnsIOPtr\000"
 2109      6E73494F 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccVbpPvt.s 			page 60


 2109      50747200 
 2110              	.LASF26:
 2111 06a7 736E7343 		.ascii	"snsClkSource\000"
 2111      6C6B536F 
 2111      75726365 
 2111      00
 2112              	.LASF90:
 2113 06b4 43617053 		.ascii	"CapSense_1_SsCSDInitNextScan\000"
 2113      656E7365 
 2113      5F315F53 
 2113      73435344 
 2113      496E6974 
 2114              	.LASF17:
 2115 06d1 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 2115      656E7365 
 2115      5F315F4C 
 2115      4F575F42 
 2115      534C4E5F 
 2116              	.LASF19:
 2117 06ee 66696E67 		.ascii	"fingerTh\000"
 2117      65725468 
 2117      00
 2118              	.LASF86:
 2119 06f7 746D704D 		.ascii	"tmpMaxCount\000"
 2119      6178436F 
 2119      756E7400 
 2120              	.LASF63:
 2121 0703 70635074 		.ascii	"pcPtr\000"
 2121      7200
 2122              	.LASF59:
 2123 0709 736E7254 		.ascii	"snrTestScanCounter\000"
 2123      65737453 
 2123      63616E43 
 2123      6F756E74 
 2123      657200
 2124              	.LASF66:
 2125 071c 6873696F 		.ascii	"hsiomMask\000"
 2125      6D4D6173 
 2125      6B00
 2126              	.LASF20:
 2127 0726 6E6F6973 		.ascii	"noiseTh\000"
 2127      65546800 
 2128              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
