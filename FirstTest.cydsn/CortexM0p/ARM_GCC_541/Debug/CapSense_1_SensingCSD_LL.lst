ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_SensingCSD_LL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsCSDSetModeSnsClockDivider,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsCSDSetModeSnsClockDivider, %function
  24              	CapSense_1_SsCSDSetModeSnsClockDivider:
  25              	.LFB1:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.c"
   1:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \file CapSense_1_SensingCSD_LL.c
   3:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \version 5.20
   4:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
   5:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This file defines the data structure global variables and provides
   7:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   implementation for the low-level APIs of the CSD part of
   8:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   the Sensing module. The file contains the APIs used for the CSD block
   9:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   initialization, calibration, and scanning.
  10:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
  11:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \see CapSense_1 v5.20 Datasheet
  12:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
  13:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *//*****************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  15:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ********************************************************************************
  16:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  17:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * protected by and subject to worldwide patent protection (United States and
  18:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * foreign), United States copyright laws and international treaty provisions.
  19:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  20:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * license to copy, use, modify, create derivative works of, and compile the
  21:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  22:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * custom software in support of licensee product to be used only in conjunction
  23:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  24:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Any reproduction, modification, translation, compilation, or representation of
  25:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * this software except as specified above is prohibited without the express
  26:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * written permission of Cypress.
  27:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
  28:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  29:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  30:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  31:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Cypress reserves the right to make changes without further notice to the
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * materials described herein. Cypress does not assume any liability arising out
  33:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * of the application or use of any product or circuit described herein. Cypress
  34:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * does not authorize its products for use as critical components in life-support
  35:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * systems where a malfunction or failure may reasonably be expected to result in
  36:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  37:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * support systems application implies that the manufacturer assumes all risk of
  38:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  39:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * limited by and subject to the applicable Cypress software license agreement.
  40:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
  41:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "CapSense_1_Structure.h"
  42:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "CapSense_1_Configuration.h"
  43:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "CapSense_1_SensingCSD_LL.h"
  44:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #include "cyapicallbacks.h"
  45:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  46:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  47:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  48:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /***************************************
  49:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * API Constants
  50:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ***************************************/
  51:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  52:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  53:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  54:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_AUTO_ZERO_EN)
  55:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_CSD_AZ_ENABLE_CFG                  (CapSense_1_CSD_AZ_EN_MASK)
  56:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
  57:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_CSD_AZ_ENABLE_CFG                  (0uL)
  58:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_AUTO_ZERO_EN) */
  59:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  60:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
  61:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_HSCMP_SCAN_MASK                    (CapSense_1_HSCMP_EN_MASK | CapSense_1_CS
  62:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_HSCMP_INVERT_MASK)
  63:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
  64:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #define CapSense_1_HSCMP_SCAN_MASK                    (CapSense_1_HSCMP_EN_MASK | CapSense_1_CS
  65:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
  66:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  67:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_HSCMP_INIT_MASK                        (CapSense_1_HSCMP_EN_MASK | CapSense_1_CS
  68:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  69:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_SW_SHIELD_SEL                  (0x00000000uL)
  70:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_SW_DSI_SEL                 (CapSense_1_SW_DSI_SEL_CMODPAD | CapSense
  71:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_INTR_SET                   (0x00000000uL)
  72:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_SW_HS_P_SEL                    (0x00000000uL)
  73:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_SW_HS_N_SEL                    (0x00000000uL)
  74:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL             (0x00000000uL)
  75:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_CSD_ADC_CTL                    (0x00000000uL)
  76:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #define CapSense_1_DEFAULT_HSCMP_CFG                      (0x00000000uL)
  77:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  78:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
  79:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
  80:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set IDAC ranges */
  81:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_IDAC_GAIN_8X == CapSense_1_CSD_IDAC_GAIN)
  82:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_MOD_RANGE         (CapSense_1_IDAC_MOD_RANGE_MASK)
  83:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_COMP_RANGE        (CapSense_1_IDAC_COMP_RANGE_MASK)
  84:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
  85:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_MOD_RANGE         (0u)
  86:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_IDAC_COMP_RANGE        (0u)
  87:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_IDAC_GAIN_8X == CapSense_1_CSD_IDAC_GAIN) */
  88:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Defining default IDACs configuration according to settings in customizer. */
  90:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
  91:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_CSD_IDAC_CONFIG        (CapSense_1_IDAC_MOD_MODE_VARIABLE |\
  92:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_IDAC_COMP_MODE_FIXED |\
  93:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_IDAC_MOD_RANGE 
  94:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_IDAC_COMP_RANGE
  95:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
  96:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #define CapSense_1_DEFAULT_CSD_IDAC_CONFIG        (CapSense_1_IDAC_MOD_MODE_VARIABLE |\
  97:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_IDAC_MOD_RANGE)
  98:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
  99:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 100:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 101:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 102:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /***************************************
 103:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Variables
 104:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ***************************************/
 105:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 106:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 107:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 CapSense_1_configCsd = CapSense_1_DEFAULT_CSD_CONFIG;
 108:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
 109:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 CapSense_1_configCsd = CapSense_1_DEFAULT_CSD_CONFIG | CapSense_1_DEFAULT_MODULATION_MOD
 110:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static uint32 CapSense_1_counterResolution = CapSense_1_CNT_RESOLUTION_12_BITS;
 111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 112:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /* Flag to indicate electrodes that were connected previously */
 114:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static uint8 CapSense_1_eleCsdDisconnectFlag = 0u;
 115:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSDV2) && (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_METRIC_E
 116:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Number of re-samplings when the bad conversion occurs */
 117:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 CapSense_1_badConversionsNum = CapSense_1_BAD_CONVERSIONS_NUM;
 118:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && (CapSense_1_ENABLE == CapSense_1_CSD_NOISE_ME
 119:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 120:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
 121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Stores IDAC and raw count that corresponds to a sensor with maximum Cp within a widget */
 122:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 CapSense_1_calibratedIdac = 1u;
 123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint16 CapSense_1_calibratedRawcount = 1u;
 124:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 125:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8 CapSense_1_calibratedIdacRow = 1u;
 126:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint16 CapSense_1_calibratedRawcountRow = 1u;
 127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /*(CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 128:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
 129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 130:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 131:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 132:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Static Function Prototypes
 133:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 134:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /**
 136:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \cond SECTION_C_INTERNAL
 137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \addtogroup group_c_internal
 138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \{
 139:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** */
 140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 142:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsSetShieldDelay(uint32 delay);
 143:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)
 144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldTank(void);
 145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)
 147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldElectrodes(void);
 148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT) */
 149:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
 152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))
 153:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateCheck(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt, ui
 154:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDSetSingleIdacMode(void);
 156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDRestoreIdacMode(void);
 157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 158:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateOneSensor(uint32 rawLevel,
 159:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                              uint8 *ptrIdac,
 160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                              uint8 *iDAC8Max);
 161:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
 162:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****            (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))  */
 163:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 164:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsCSDSetFilterDelay(void);
 165:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
 166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_INLINE static void CapSense_1_SsCSDClockRestart(void);
 167:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 168:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDCmodPrecharge(void);
 169:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDTriggerScan(void);
 170:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDConfigIDACs(void);
 171:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider);
 172:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /** \}
 174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \endcond */
 175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 176:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
 179:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsSetShieldDelay
 180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
 181:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
 183:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   This is an internal function that sets a shield delay.
 184:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
 186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The function updates the CSD configuration register bits that define the shield
 187:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   signal delay relatively to the sense signal.
 188:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 189:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param delay
 190:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   Specifies the shield delay value:
 191:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    PSoC 4100/4200 value interpretation:
 192:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         0 - no delay
 193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         1 - 1 cycle of HFCLK
 194:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         2 - 2 cycles of HFCLK
 195:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    Third-generation HW block (except 4100/4200 devices):
 196:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         0 - no delay
 197:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         3 - 10ns delay
 198:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         2 - 50ns delay
 199:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    Fourth-generation HW block:
 200:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         0 - no delay
 201:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         1 - 5ns delay
 202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         2 - 10ns delay
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *         3 - 20ns delay
 204:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 205:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
 206:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsSetShieldDelay(uint32 delay)
 207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 208:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update CSD config register shield delay bits with shield delay value */
 209:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd &= (uint32)(~CapSense_1_CONFIG_SHIELD_DELAY_MASK);
 210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd |= (delay << CapSense_1_SHIELD_DELAY_SHIFT);
 211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 213:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)
 214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
 215:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDEnableShieldTank
 216:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
 217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 218:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
 219:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   This function configures Csh pin
 220:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 221:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
 222:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function updates the CSH_HSIOM register to connect Csh to AMUXBUS-B.
 223:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   For Third-generation HW block it additionally sets Strong drive mode for Csh
 224:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   and applies High level to Csh pin when precharge is set to IO buffer.
 225:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 226:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
 227:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldTank(void)
 228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
 230:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 231:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Update the CSH_HSIOM register to connect Csh to AMUXBUS-B */
 232:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
 233:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue &= (uint32)(~(uint32)CapSense_1_CSH_HSIOM_MASK);
 234:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= (CapSense_1_CSH_TO_AMUXBUS_B_MASK << CapSense_1_CSH_HSIOM_SHIFT);
 235:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, newRegValue);
 236:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 237:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 238:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  (CapSense_1_DISABLE == CapSense_1_CSDV2))
 239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set Strong drive mode for Csh */
 240:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_CSH_PC_PTR);
 241:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= (uint32)(~(CapSense_1_CSH_PC_MASK << CapSense_1_CSH_PC_SHIFT));
 242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (CapSense_1_CSH_PC_STRONG_MODE << CapSense_1_CSH_PC_SHIFT);
 243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_CSH_PC_PTR, newRegValue);
 244:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 245:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Appliy High level to Csh pin for Csh */
 246:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_CSH_DR_PTR);
 247:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= (uint32)(~(CapSense_1_DR_MASK << CapSense_1_CSH_SHIFT));
 248:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (uint32)CapSense_1_CSH_DR_CONFIG;
 249:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_CSH_DR_PTR, newRegValue);
 250:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
 251:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
 252:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 253:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN) */
 254:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 255:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)
 256:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
 257:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDEnableShieldElectrodes
 258:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
 259:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
 261:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   This internal function initializes Shield Electrodes.
 262:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 263:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
 264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function sets the bit in the HSIOM register which enables the shield electrode
 265:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   functionality on the pin. The port and pin configurations are stored in
 266:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   the CapSense_1_shieldIoList structure.
 267:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 268:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
 269:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDEnableShieldElectrodes(void)
 270:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 271:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
 272:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 shieldIndex;
 273:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 274:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             for (shieldIndex = 0u; shieldIndex < CapSense_1_CSD_TOTAL_SHIELD_COUNT; shieldIndex++)
 275:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 276:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set drive mode to Analog */
 277:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].pcPtr, CY_GET_REG32(CapSense_1_sh
 278:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                            ~(CapSense_1_GPIO_PC_MASK <<(CapSense_1_shieldIoList[shieldIndex].shift)
 279:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 280:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set HSIOM register mode to CSD_SHIELD or AMUXBUS B connection */
 281:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_shieldIoList[shieldIndex].hsiomPtr);
 282:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= ~(CapSense_1_HSIOM_SEL_MASK << (CapSense_1_shieldIoList[shieldIndex]
 283:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 284:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set HSIOM register mode to CSD_SHIELD */
 285:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (CapSense_1_HSIOM_SEL_CSD_SHIELD << (CapSense_1_shieldIoList[shieldI
 286:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 287:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].hsiomPtr, newRegValue);
 288:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 289:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 290:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 291:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 292:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
 293:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDDisableShieldElectrodes
 294:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
 295:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 296:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
 297:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   This internal function disables Shield Electrodes.
 298:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
 300:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function resets the bit in the HSIOM register which disables the shield
 301:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   electrode functionality on the pin. The port and pin configurations are
 302:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   stored in  the CapSense_1_shieldIoList structure.
 303:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
 304:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
 305:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         void CapSense_1_SsCSDDisableShieldElectrodes(void)
 306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 307:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
 308:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 shieldIndex;
 309:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 310:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             for (shieldIndex = 0u; shieldIndex < CapSense_1_CSD_TOTAL_SHIELD_COUNT; shieldIndex++)
 311:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 312:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Reset HSIOM register (to GPIO state) */
 313:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].hsiomPtr, CY_GET_REG32(CapSense_1
 314:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                              (uint32)~(uint32)(CapSense_1_HSIOM_SEL_MASK << CapSense_1_shieldIoList
 315:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 316:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Update port configuration register (drive mode to ground)  */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_shieldIoList[shieldIndex].pcPtr);
 318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue &= ~(CapSense_1_GPIO_PC_MASK << CapSense_1_shieldIoList[shieldIndex].sh
 319:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= (CapSense_1_SNS_GROUND_CONNECT << CapSense_1_shieldIoList[shieldInde
 320:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].pcPtr, newRegValue);
 321:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 322:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Set logic 0 to port data register */
 323:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_shieldIoList[shieldIndex].drPtr, CY_GET_REG32(CapSense_1_sh
 324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                            (uint32)~(uint32)((uint32)1u << CapSense_1_shieldIoList[shieldIndex].drS
 325:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 327:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT) */
 328:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 329:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 330:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 331:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 332:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDSetModeSnsClockDivider
 333:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 334:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 335:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 336:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Sets sense source and Sense Clock Divider
 337:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 338:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 339:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Fourth-generation HW block: Updates CapSense_1_SENSE_PERIOD register with
 340:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   sense source and Sense Clock Divider.
 341:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Third-generation HW block: Updates CapSense_1_configCsd variable with
 342:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   sense source and sets sense clock divider.
 343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 344:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param
 345:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   snsClkSource The sense source for the sense clock.
 346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param
 347:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   snsClkDivider The divider value for the sense clock.
 348:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 349:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 350:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDSetModeSnsClockDivider(uint32 snsClkSource, uint32 snsClkDivider)
 351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
  27              		.loc 1 351 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 352:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 353:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update reg value with divider and configuration */
 354:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, snsClkSource | (snsClkDivider - 1u));
  33              		.loc 1 354 0
  34 0000 0139     		subs	r1, r1, #1
  35              	.LVL1:
  36 0002 0843     		orrs	r0, r1
  37              	.LVL2:
  38 0004 014B     		ldr	r3, .L2
  39 0006 1860     		str	r0, [r3]
 355:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 356:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set configuration */
 357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd &= ~(CapSense_1_CONFIG_PRS_SELECT_MASK | CapSense_1_CSD_PRS_12_BIT);
 358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd |= snsClkSource;
 359:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 360:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set sense clock divider */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 8


 361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetSnsClockDivider(snsClkDivider);
 362:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
  40              		.loc 1 363 0
  41              		@ sp needed
  42 0008 7047     		bx	lr
  43              	.L3:
  44 000a C046     		.align	2
  45              	.L2:
  46 000c 00020B40 		.word	1074463232
  47              		.cfi_endproc
  48              	.LFE1:
  49              		.size	CapSense_1_SsCSDSetModeSnsClockDivider, .-CapSense_1_SsCSDSetModeSnsClockDivider
  50              		.global	__aeabi_uidiv
  51              		.section	.text.CapSense_1_SsCSDSetFilterDelay,"ax",%progbits
  52              		.align	2
  53              		.code	16
  54              		.thumb_func
  55              		.type	CapSense_1_SsCSDSetFilterDelay, %function
  56              	CapSense_1_SsCSDSetFilterDelay:
  57              	.LFB2:
 364:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 365:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 366:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 367:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
 368:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDSetFilterDelay
 369:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
 370:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
 372:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   Sets the filter delay for Fourth-generation HW block.
 373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 374:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
 375:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   This function updates Fourth-generation HW block configuration
 376:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   variable CapSense_1_configCsd
 377:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   with the filter delay which depends on the sample clock frequency.
 378:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   This variable is written into register during enabling
 379:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   Fourth-generation HW block .
 380:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 381:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
 382:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static void CapSense_1_SsCSDSetFilterDelay(void)
 383:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
  58              		.loc 1 383 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62 0000 10B5     		push	{r4, lr}
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 4, -8
  65              		.cfi_offset 14, -4
 384:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 385:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 386:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 387:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_configCsd &= ~CapSense_1_CONFIG_FILTER_DELAY_MASK;
  66              		.loc 1 388 0
  67 0002 104B     		ldr	r3, .L8
  68 0004 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 9


  69 0006 7022     		movs	r2, #112
  70 0008 9343     		bics	r3, r2
  71 000a 1C00     		movs	r4, r3
 389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 390:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 391:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_1_dsRam.modCsdClk;
  72              		.loc 1 391 0
  73 000c 2023     		movs	r3, #32
  74 000e 0E4A     		ldr	r2, .L8+4
  75 0010 D15C     		ldrb	r1, [r2, r3]
  76 0012 0E48     		ldr	r0, .L8+8
  77 0014 FFF7FEFF 		bl	__aeabi_uidiv
  78              	.LVL3:
 392:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if(sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_12MHZ)
  79              		.loc 1 392 0
  80 0018 0D4B     		ldr	r3, .L8+12
  81 001a 9842     		cmp	r0, r3
  82 001c 04D8     		bhi	.L5
 393:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 394:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_12MHZ;
  83              		.loc 1 394 0
  84 001e 2023     		movs	r3, #32
  85 0020 2343     		orrs	r3, r4
  86 0022 084A     		ldr	r2, .L8
  87 0024 1360     		str	r3, [r2]
  88 0026 0BE0     		b	.L4
  89              	.L5:
 395:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 396:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else if(sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_24MHZ)
  90              		.loc 1 396 0
  91 0028 0A4B     		ldr	r3, .L8+16
  92 002a 9842     		cmp	r0, r3
  93 002c 04D8     		bhi	.L7
 397:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 398:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_24MHZ;
  94              		.loc 1 398 0
  95 002e 3023     		movs	r3, #48
  96 0030 2343     		orrs	r3, r4
  97 0032 044A     		ldr	r2, .L8
  98 0034 1360     		str	r3, [r2]
  99 0036 03E0     		b	.L4
 100              	.L7:
 399:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 400:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
 401:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 402:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_48MHZ;
 101              		.loc 1 402 0
 102 0038 4023     		movs	r3, #64
 103 003a 2343     		orrs	r3, r4
 104 003c 014A     		ldr	r2, .L8
 105 003e 1360     		str	r3, [r2]
 106              	.L4:
 403:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 404:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 405:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_configCsd |= CapSense_1_CONFIG_FILTER_DELAY_12MHZ;
 406:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 407:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 10


 107              		.loc 1 407 0
 108              		@ sp needed
 109 0040 10BD     		pop	{r4, pc}
 110              	.L9:
 111 0042 C046     		.align	2
 112              	.L8:
 113 0044 00000000 		.word	.LANCHOR0
 114 0048 00000000 		.word	CapSense_1_dsRam
 115 004c 006CDC02 		.word	48000000
 116 0050 001BB700 		.word	12000000
 117 0054 00366E01 		.word	24000000
 118              		.cfi_endproc
 119              	.LFE2:
 120              		.size	CapSense_1_SsCSDSetFilterDelay, .-CapSense_1_SsCSDSetFilterDelay
 121              		.section	.text.CapSense_1_SsCSDConfigIDACs,"ax",%progbits
 122              		.align	2
 123              		.code	16
 124              		.thumb_func
 125              		.type	CapSense_1_SsCSDConfigIDACs, %function
 126              	CapSense_1_SsCSDConfigIDACs:
 127              	.LFB3:
 408:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 409:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 410:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 411:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 412:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDConfigIDACs
 413:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 414:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 415:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 416:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Configures the mode for IDAC registers
 417:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 418:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 419:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This function configures the IDAC modes depend on Compensation IDAC
 420:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   enabled or disabled.
 421:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 422:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** static void CapSense_1_SsCSDConfigIDACs(void)
 424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 128              		.loc 1 424 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 426:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, CapSense_1_IDAC_MOD_DEFAULT_CFG);
 133              		.loc 1 426 0
 134 0000 034A     		ldr	r2, .L11
 135 0002 044B     		ldr	r3, .L11+4
 136 0004 1A60     		str	r2, [r3]
 427:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 428:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))
 429:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDACB_PTR, CapSense_1_IDAC_COMP_DEFAULT_CFG);
 137              		.loc 1 429 0
 138 0006 C122     		movs	r2, #193
 139 0008 5204     		lsls	r2, r2, #17
 140 000a 034B     		ldr	r3, .L11+8
 141 000c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 11


 430:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)) */
 432:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 433:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, CapSense_1_DEFAULT_CSD_IDAC_CONFIG);
 435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) &
 437:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                 ~(CapSense_1_IDAC_MOD_MODE_MASK |
 438:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                   CapSense_1_IDAC_MOD_MASK));
 439:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) |
 440:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                  CapSense_1_DEFAULT_CSD_IDAC_CONFIG
 441:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 442:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 443:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 142              		.loc 1 443 0
 143              		@ sp needed
 144 000e 7047     		bx	lr
 145              	.L12:
 146              		.align	2
 147              	.L11:
 148 0010 00008301 		.word	25362432
 149 0014 C0010B40 		.word	1074463168
 150 0018 C4010B40 		.word	1074463172
 151              		.cfi_endproc
 152              	.LFE3:
 153              		.size	CapSense_1_SsCSDConfigIDACs, .-CapSense_1_SsCSDConfigIDACs
 154              		.section	.text.CapSense_1_SsCSDSetSingleIdacMode,"ax",%progbits
 155              		.align	2
 156              		.code	16
 157              		.thumb_func
 158              		.type	CapSense_1_SsCSDSetSingleIdacMode, %function
 159              	CapSense_1_SsCSDSetSingleIdacMode:
 160              	.LFB19:
 444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 445:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 446:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDInitialize
 448:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 449:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 450:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 451:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This API initializes the CSD module.
 452:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 453:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 454:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function performs the following steps for Fourth-generation HW block:
 455:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   1) Sets GPIO output to "0" for all sensor pins;
 456:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2) Connects CMOD to AMUXBUS-A and to CSDBUS-A;
 457:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   3) Connects CMOD to (sense path) to CSDCOMP;
 458:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   4) Connects Csh_tank to AMUXBUS-B and to CSDBUS-B;
 459:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   5) Connects VREF to REFGEN;
 460:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   6) Configures REFGEN and sets the reference voltage;
 461:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   7) Connects VREF to CSDCOMP and HSCOMP;
 462:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   8) Configures IDAC and connect to CSDBUS-A (to drive CMOD);
 463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   9) Configures ModClk;
 464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   10) Configure SnsClk source;
 465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   11) Sets other CSD configurations (Csd Auto Zero time,
 466:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *       Sample Init period, interrupts,
 467:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *       CMOD and Csh_tank/shield initialization switch resistance).
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 12


 468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 469:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function performs the following steps for Third-generation HW block:
 470:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   1) Sets all the sensors to the inactive state;
 471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2) Enables Shield Electrodes;
 472:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   3) Configures the CSD block and IDACs;
 473:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   4) Connects Cmod to AMUXBUS-A;
 474:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   5) Enables the clocks;
 475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   6) Sets the shield delay;
 476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   7) Enables the CSD block; connects Vref Buffer to the AMUX bus.
 477:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 478:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 479:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDInitialize(void)
 480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 481:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 482:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 483:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set all the sensors to inactive state */
 484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsClearCSDSensors();
 485:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 486:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 487:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_BistDischargeExtCapacitors();
 488:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 489:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     
 490:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 491:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect shields to AMUX-B bus (config HSIOM regs) */
 492:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)
 493:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDEnableShieldElectrodes();
 494:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT) */
 495:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 496:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)
 497:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Configure Csh */
 498:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDEnableShieldTank();
 499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN) */
 500:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 501:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 502:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 503:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 504:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Initialize the unused CSD registers to defaut state */
 505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SENSE_DUTY_PTR,       CapSense_1_DEFAULT_SENSE_DUTY_SEL);
 506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure VREF */
 508:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 509:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= CapSense_1_DEFAULT_SW_REFGEN_SEL;
 510:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 511:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 512:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_SET_PTR,         CapSense_1_DEFAULT_CSD_INTR_SET);
 513:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL);
 514:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR,       CapSense_1_DEFAULT_CSD_SW_DSI_SEL);
 515:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_ADC_CTL_PTR,          CapSense_1_DEFAULT_CSD_ADC_CTL);
 516:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_AMBUF_PTR,            CapSense_1_AMBUF_PWR_MODE_OFF);
 517:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,    CapSense_1_DEFAULT_SW_SHIELD_SEL);
 518:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR,      CapSense_1_DEFAULT_SW_HS_P_SEL);
 519:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR,      CapSense_1_DEFAULT_SW_HS_N_SEL);
 520:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR,            CapSense_1_DEFAULT_HSCMP_CFG);
 521:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 522:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect CMOD to AMUXBUS-A */
 523:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 524:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 13


 525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CMOD_HSIOM_SHIFT);
 526:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 527:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 528:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect AMUXBUS-A to CSDBUS-A */
 529:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_SW_BYP_SEL_PTR);
 530:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= CapSense_1_SW_BYP_SEL_SW_BYA_MASK;
 531:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR, newRegValue);
 532:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 533:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect CMOD to (sense path) to CSDCOMP */
 534:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD__CMOD_PAD == CapSense_1_CMOD_CONNECTION)
 535:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR, CapSense_1_SW_CMP_P_SEL_SW_SFPM_STATIC_CLOSE)
 536:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #elif (CapSense_1_CSD__CSHIELD_PAD == CapSense_1_CMOD_CONNECTION)
 537:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR, CapSense_1_SW_CMP_P_SEL_SW_SFPS_STATIC_CLOSE)
 538:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 539:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_CMP_P_SEL_PTR, CapSense_1_SW_CMP_P_SEL_SW_SFPT_STATIC_CLOSE)
 540:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD__CMOD_PAD == CapSense_1_CMOD_CONNECTION) */
 541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 542:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure shield driving path */
 543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 544:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect AMUXBUS-B to CSDBUS-B (and AMUXBUS-A to CSDBUS-A ) */
 545:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR, CapSense_1_SW_BYP_SEL_SW_BYA_MASK | CapSense_1_
 546:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 547:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect AMUXBUS-B to HSCMP positive input */
 548:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, 0x00000000uL);
 549:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 550:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 551:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure VREF */
 552:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && (CapSense_1_ENABLE == CapSense_1_
 553:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect VREF to REFGEN. Connect IDACB to CSDBUSA */
 554:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 555:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= CapSense_1_SW_REFGEN_SEL_SW_SGR_MASK | CapSense_1_SW_REFGEN_SEL_SW_IAIB_
 556:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 557:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 558:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect VREF to REFGEN (IAIB switch is open) */
 559:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 560:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= CapSense_1_SW_REFGEN_SEL_SW_SGR_MASK;
 561:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 562:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && (CapSense_1_ENABLE == CapSe
 563:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 564:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_2000_MV > CapSense_1_CYDEV_VDDA_MV)
 565:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 566:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFLOW (from AMBUF and RefGen is in bypass mode) to CSDCOMP when Vdda < 2 V */
 567:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_N_SEL_PTR, CapSense_1_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 568:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure REFGEN. Set reference voltage when Vdda < 2 V */
 570:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_REFGEN_PTR, CapSense_1_REFGEN_LV);
 571:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 572:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect Vrefhi to AMUBUF positive input when Vdaa < 2V
 573:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          *  Connect AMUBUF to SCDCMP negative input when Vdaa < 2V
 574:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          */
 575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
 577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_IRH_STATIC
 578:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                       CapSense_1_SW_AMUXBUF_SEL_SW_
 579:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
 580:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_DEFAULT);
 581:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 14


 582:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_AMBUF_PTR, CapSense_1_AMBUF_PWR_MODE_NORM);
 583:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 584:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_AMBUF_PTR, CapSense_1_AMBUF_PWR_MODE_OFF);
 585:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 586:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 587:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFHI to HSCOMP */
 588:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR, CapSense_1_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 589:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 590:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 591:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFHI (from RefGen) to CSDCOMP when Vdda >= 2 V */
 592:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_CMP_N_SEL_PTR, CapSense_1_SW_CMP_N_SEL_SW_SCRH_STATIC_CLOSE);
 593:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 594:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure REFGEN. Set reference voltage when Vdda >= 2 V */
 595:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_REFGEN_PTR, CapSense_1_REFGEN_HV);
 596:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 597:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 598:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Turn on CSD_AMBUF high power level when Vdaa >= 2V */
 599:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_AMBUF_PTR, CapSense_1_AMBUF_PWR_MODE_HI);
 600:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 601:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_IDAC_SINKING != CapSense_1_CSD_IDAC_CONFIG)
 602:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_IRH_STATIC
 603:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                       CapSense_1_SW_AMUXBUF_SEL_SW_
 604:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
 605:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_DEFAULT);
 606:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
 607:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 608:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_AMUXBUF_SEL_PTR, CapSense_1_SW_AMUXBUF_SEL_SW_DEFAULT);
 609:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 611:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect VREFHI to HSCOMP */
 612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR, CapSense_1_SW_HS_N_SEL_SW_HCRH_STATIC_CLOSE);
 613:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_2000_MV > CapSense_1_CYDEV_VDDA_MV) */
 614:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 615:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Configure IDACs mode */
 616:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDConfigIDACs();
 617:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 618:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure ModClk */
 619:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsdClk);
 620:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 621:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set other CSD configurations */
 622:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 623:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetShieldDelay(CapSense_1_CSD_SHIELD_DELAY);
 624:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 625:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 626:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Configure HW block filter delay */
 627:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDSetFilterDelay();
 628:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 629:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_DISABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 630:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
 631:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd |
 632:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                   CapSense_1_CONFIG_SENSE_EN_MASK |
 633:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                   CapSense_1_CONFIG_ENABLE_MASK);
 634:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 635:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 636:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set Csd Auto Zero time (set AZ_TIME bitmask) */
 637:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_TIME_PTR, CapSense_1_CSD_AUTO_ZERO_TIME);
 638:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 15


 639:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Select CMOD and Csh_tank/shield initialization switch resistance */
 640:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR, 0x00000000);
 641:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 642:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set the number of dummy fine initialization cycles */
 643:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_INIT_CNT_PTR, CapSense_1_CSD_FINE_INIT_TIME);
 644:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 645:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 646:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 647:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 648:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configure IDACs mode */
 649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConfigIDACs();
 650:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 651:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect Cmod to AMUXBUS-A using HSIOM registers */
 652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 653:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 654:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CMOD_HSIOM_SHIFT);
 655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 656:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 657:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 658:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsSetShieldDelay(CapSense_1_CSD_SHIELD_DELAY);
 659:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 660:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 661:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable CSD block. Connect Vref Buffer to AMUX bus to make sure that Cmod is charged befo
 662:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
 663:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
 664:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_C
 666:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
 667:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
 668:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 669:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) &&\
 670:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE))
 671:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          /* Set clock dividers and clock source mode */
 672:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConfigClock();
 673:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) &&\
 674:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE)) */
 675:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 676:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 677:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 678:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDElectrodeCheck
 680:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 682:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Checks if electrodes were previously connected using
 684:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****  * CapSense_1_CSDSetupWidgetExt() API and if yes disconnects them.
 685:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 686:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 687:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This function checks if CapSense_1_eleCsdDisconnectFlag is set.
 688:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   If it set, the function disconnects the previously connected electrode.
 689:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The previous IO is contained in CapSense_1_curSnsIOPtr and
 690:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   CapSense_1_curFlashSnsPtr contains the previous data for Ganged
 691:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   sensors.
 692:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 693:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 694:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDElectrodeCheck(void)
 695:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 16


 696:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 697:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tempVal;
 698:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 699:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 700:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     if (CapSense_1_ENABLE == CapSense_1_eleCsdDisconnectFlag)
 701:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 702:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Disconnect if electrodes were previous connected by CSDSetupWidgetExt() API */
 703:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 704:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Check ganged sns flag  */
 705:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_curFlashWdgtPtr->staticConfig & CapSense_
 706:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 707:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Get number of ganged pins */
 708:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tempVal = CapSense_1_curFlashSnsPtr->numPins;
 709:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 710:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Get IO pointer  */
 711:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curSnsIOPtr = &CapSense_1_ioList[CapSense_1_curFlashSnsPtr->firstPinId];
 712:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 713:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Disconnect all ganged sensors */
 714:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 do
 715:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
 716:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
 717:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_curSnsIOPtr++;
 718:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     tempVal--;
 719:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 } while (0u != tempVal);
 720:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 721:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
 722:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 723:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Disconnect ganged sensor */
 724:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
 725:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 726:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 727:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disable sensor */
 728:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
 729:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 730:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 731:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_eleCsdDisconnectFlag = 0u;
 732:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 733:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 734:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 735:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 736:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 737:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDSetUpIdacs
 738:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 739:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 740:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 741:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This internal function changes the IDACs values.
 742:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 743:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 744:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  If Compensation IDAC is enabled, it updates two IDACs.
 745:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The Modulator IDAC is common for all the sensors of the widget.
 746:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The Compensation IDAC is updated for the sensor of the widget which
 747:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  is available in the RAM_SNS_STRUCT structure.
 748:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  If the Compensation IDAC is disabled, the function updates the Modulator IDAC
 749:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  value only in the RAM_WD_BASE_STRUCT structure.
 750:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 751:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param
 752:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 17


 753:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 754:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 755:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDSetUpIdacs(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt)
 756:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 757:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 758:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 interruptState;
 759:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 760:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 761:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 idacARegValue;
 762:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 763:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))
 764:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 idacBRegValue;
 765:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 766:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)) */
 767:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 768:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
 769:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 770:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get IDACA Value */
 771:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     idacARegValue = CY_GET_REG32(CapSense_1_IDAC_MOD_PTR);
 772:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 773:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set IDACA Value mask */
 774:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     idacARegValue &= ~(CapSense_1_IDAC_MOD_VAL_MASK);
 775:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 776:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set IDACA value */
 777:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 778:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_dsFlash.wdgtArray[(CapSense_1_widgetIndex)].numCols <= CapSense_1_sensorInde
 779:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 780:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->rowIdacMod[CapSense_1_scanFreqIndex];
 781:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 782:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
 783:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 784:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_1_scanFreqIndex];
 785:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 786:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 787:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacARegValue |= (uint32)ptrWdgt->idacMod[CapSense_1_scanFreqIndex];
 788:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN | CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 789:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 790:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update IDACA register with new value */
 791:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, idacARegValue);
 792:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
 793:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 794:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 795:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))
 796:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
 797:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Get IDACB Value */
 798:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacBRegValue = CY_GET_REG32(CapSense_1_IDAC_COMP_PTR);
 799:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 800:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set IDACB Value mask */
 801:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacBRegValue &= ~(CapSense_1_IDAC_COMP_VAL_MASK);
 802:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 803:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set IDACB value */
 804:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         idacBRegValue |= (uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex];
 805:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 806:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update IDACA register with new value */
 807:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_COMP_PTR, idacBRegValue);
 808:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 809:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 18


 810:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)) */
 811:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 812:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #else
 813:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 814:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 815:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8 const *ptrIdacMod = ptrWdgt->idacMod;
 816:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 817:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN  | CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 818:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_dsFlash.wdgtArray[(CapSense_1_widgetIndex)].numCols <= CapSense_1_sensorInde
 819:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 820:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdacMod = &ptrWdgt->rowIdacMod[0u];
 821:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 822:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN  | CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 823:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 824:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
 825:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 826:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get Idac Value */
 827:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegValue = CY_GET_REG32(CapSense_1_IDAC_PTR);
 828:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 829:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Idac Value mask */
 830:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 831:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= ~(CapSense_1_IDAC_MOD_MASK | CapSense_1_IDAC_COMP_MASK);
 832:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 833:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= ~(CapSense_1_IDAC_MOD_MASK);
 834:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 835:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 836:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Idac value */
 837:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
 838:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (ptrIdacMod[CapSense_1_scanFreqIndex] |
 839:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        (uint32)((uint32)CapSense_1_curRamSnsPtr->idacComp[CapSense_1_scanFreqIndex]
 840:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        CapSense_1_IDAC_COMP_DATA_OFFSET));
 841:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 842:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= ptrIdacMod[CapSense_1_scanFreqIndex];
 843:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 844:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(CapSense_1_IDAC_PTR, newRegValue);
 845:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
 847:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 848:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 849:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 850:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 851:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 852:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 853:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
 854:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDGetNumberOfConversions
 855:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
 856:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 857:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
 858:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function gets Number of conversions.
 859:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 860:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
 861:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function gets Number of conversions using foll.owing equation:
 862:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   conversionsNum = (2^resolution - 1) / snsClkDivider.
 863:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 864:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param
 865:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  snsClkDivider The divider value for the sense clock.
 866:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  resolution The widget resolution.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 19


 867:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  snsClkSrc The current Sense Clock Source.
 868:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 869:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return Returns the Number of conversions.
 870:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
 871:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
 872:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 CapSense_1_SsCSDGetNumberOfConversions(uint32 snsClkDivider, uint32 resolution, uint32 s
 873:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 874:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 conversionsNum;
 875:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if ((CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_1_ENABLE != CapSen
 876:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 sampleClkFreqHz;
 877:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) && (CapSense_1_ENABLE != 
 878:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 879:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calculate scanning resolution value in register */
 880:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         conversionsNum = (uint32)((1uL << resolution) - 1uL);
 881:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 882:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if(CapSense_1_ENABLE != CapSense_1_CSDV2_REF9P6UA_EN)
 883:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Apply correction to oveflow for 16 bit resolution */
 884:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_RES16BIT == resolution)
 885:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 886:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 conversionsNum -= ((snsClkDivider + 1u) >> 1u);
 887:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 888:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ)
 889:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     sampleClkFreqHz = CYDEV_BCLK__HFCLK__HZ / (uint32)CapSense_1_dsRam.modCsdClk;
 890:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 891:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     if (sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_12MHZ)
 892:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
 893:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_2_CYCLES;
 894:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
 895:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else if (sampleClkFreqHz <= CapSense_1_MOD_CSD_CLK_24MHZ)
 896:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
 897:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_3_CYCLES;
 898:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
 899:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else
 900:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
 901:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_4_CYCLES;
 902:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
 903:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #else
 904:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     conversionsNum -= CapSense_1_CONFIG_FILTER_DELAY_2_CYCLES;
 905:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (INSTANCE_NAME`_MOD_CSD_CLK_12MHZ < CYDEV_BCLK__HFCLK__HZ) */
 906:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 907:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2_REF9P6UA_EN) */
 908:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 909:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (0u < snsClkDivider)
 910:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 911:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             conversionsNum /= snsClkDivider;
 912:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 913:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 914:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 915:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 916:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
 917:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         switch (snsClkSrc)
 918:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 919:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             case CapSense_1_CLK_SOURCE_PRS8:
 920:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             case CapSense_1_CLK_SOURCE_PRS12:
 921:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Divide by 2 for PRS8/PRS12 mode */
 922:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 conversionsNum >>= 1u;
 923:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 break;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 20


 924:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 925:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             default:
 926:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 break;
 927:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 928:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 929:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
 930:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)) */
 931:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 932:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     return((conversionsNum > 0uL) ? (conversionsNum) : 1uL);
 933:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 934:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 935:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 936:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 937:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
 938:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDConfigClock
 939:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
 940:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 941:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
 942:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function configure sense clock for different modes.
 943:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 944:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
 945:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Function sets the clock divider and configures the mode based on configuration.
 946:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
 947:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
 948:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDConfigClock(void)
 949:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
 950:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 snsClkDivider;
 951:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 snsClkSrc;
 952:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 953:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 954:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 955:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2WdgtRam;
 956:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 957:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get sense divider based on configuration */
 958:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
 959:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         snsClkDivider = (uint32)CapSense_1_dsRam.snsCsdClk;
 960:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 961:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 962:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
 963:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSense_1_sensorIn
 964:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 965:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
 966:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 967:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
 968:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 969:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
 970:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 971:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 972:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
 973:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 974:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
 975:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 976:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get sense clk source calculated in CapSense_1_SsCSDInitialize() before */
 977:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 978:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Get SnsClc Source for rows or columns */
 979:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSense_1_sensorIndex)
 980:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 21


 981:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
 982:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 983:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
 984:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
 986:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 987:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 988:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
 989:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 990:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 991:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 992:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = (snsClkSrc << CYFLD_CSD_LFSR_SIZE__OFFSET);
 993:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 994:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Configuring PRS SEL_BIT */
 995:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((CapSense_1_CLK_SOURCE_PRS8 == snsClkSrc) ||
 996:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             (CapSense_1_CLK_SOURCE_PRS12 == snsClkSrc))
 997:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 998:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= CapSense_1_SENSE_PERIOD_SEL_LFSR_MSB_MASK;
 999:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1000:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1001:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = snsClkSrc;
1002:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1003:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1004:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1006:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
1007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         switch (snsClkSrc)
1008:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1009:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         case CapSense_1_CLK_SOURCE_PRS8:
1010:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         case CapSense_1_CLK_SOURCE_PRS12:
1011:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Divide by 2 for PRS8/PRS12 mode */
1012:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkDivider >>= 1;
1013:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (snsClkDivider == 0u)
1014:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1015:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = 1u;
1016:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1017:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             break;
1018:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1019:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         default:
1020:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             break;
1021:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1022:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1023:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
1024:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)) */
1025:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDSetModeSnsClockDivider(newRegValue, snsClkDivider);
1026:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1027:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1028:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1029:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1030:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDCalculateScanDuration
1031:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1032:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1033:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1034:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Calculates Scan Duration which is defined by scan resolution
1035:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1036:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1037:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Fourth-generation HW block: The function calculates the number of conversions and updates
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 22


1038:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   SEQ_NORM_CNT register. The number of conversions depends on resolution and
1039:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   snsClk divider.
1040:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Third-generation HW block: The function recalculate the resolution using following equation
1041:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2^resolution - 1. The calculated value is contained in
1042:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   CapSense_1_counterResolution global variable and used in
1043:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   CapSense_1_SsCSDStartSample() function to trigger the scan process.
1044:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1045:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param wdgtIndex
1046:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  ptrWdgt The pointer to the RAM_WD_BASE_STRUCT structure.
1047:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1048:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1049:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDCalculateScanDuration(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt)
1050:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1051:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1052:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 conversionsNum;
1053:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 snsClkDivider;
1054:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1055:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get Number Of Conversions */
1056:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
1057:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         snsClkDivider = CapSense_1_dsRam.snsCsdClk;
1058:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1059:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1060:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get SnsClck divider for rows or columns */
1061:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSense_1_sensorIn
1062:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1063:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->rowSnsClk);
1064:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1065:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             else
1066:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1067:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 snsClkDivider = (uint32)(ptrWdgt->snsClk);
1068:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1069:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
1070:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             snsClkDivider = (uint32)(ptrWdgt->snsClk);
1071:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1072:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
1073:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1074:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdgt->resolut
1075:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1076:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set Number Of Conversions based on scanning resolution */
1077:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM_CNT_CONV_CN
1078:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1079:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set up scanning resolution  */
1080:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_counterResolution = (uint32)((0x00000001Lu << ptrWdgt->resolution) - 1u) << CapS
1081:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1082:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1083:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1084:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1085:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1086:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDSetupWidget
1087:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1088:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1089:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1090:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Performs hardware and firmware initialization required for scanning sensors
1091:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  in a specific widget using the CSD sensing method. This function requires using
1092:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the CapSense_1_CSDScan() function to start scanning.
1093:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1094:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 23


1095:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function initializes the specific widget common parameters to perform
1096:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the CSD scanning. The initialization includes setting up a Modulator and
1097:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Sense clock frequency and scanning resolution.
1098:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1099:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function does not connect any specific sensors to the scanning hardware,
1100:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  neither does it start a scanning process. The CapSense_1_CSDScan()
1101:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  API must be called after initializing the widget to start scanning.
1102:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1103:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1104:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
1105:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1106:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called by the CapSense_1_SetupWidget() API if the
1107:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  given widget uses the CSD sensing method.
1108:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1109:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1110:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1112:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param  widgetId
1114:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1115:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  initialization required for scanning sensors in the specific widget.
1116:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration header
1117:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  file defined as CapSense_1_<WidgetName>_WDGT_ID.
1118:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1119:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1120:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDSetupWidget(uint32 widgetId)
1121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1122:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1124:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
1125:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1126:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Save widget Id to have assess to it after scanning  */
1127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_widgetIndex = (uint8)widgetId;
1128:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
1130:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1131:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1132:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1133:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1134:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1136:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Disconnect previous electrode if it has been connected */
1137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDElectrodeCheck();
1138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1139:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Initialize IO Sns electrode structure pointer to current widget */
1140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2SnsFla
1142:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1143:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update status register in Data structure */
1144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status &= ~CapSense_1_STATUS_WDGT0_MASK;
1145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status |= CapSense_1_widgetIndex;
1146:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set up scanning resolution (Number ofconversion for CSDv2) */
1148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDCalculateScanDuration(ptrWdgt);
1149:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) ||\
1151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 24


1152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConfigClock();
1153:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) ||\
1154:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE)) */
1155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1158:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1159:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDSetupWidgetExt
1160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1161:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1162:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1163:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Performs extended initialization for the CSD widget and also performs
1164:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  initialization required for a specific sensor in the widget. This function
1165:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  requires using the CapSense_1_CSDScanExt() function to initiate a scan.
1166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1167:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1168:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function does the same as CapSense_1_CSDSetupWidget() and also
1169:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  does the following tasks:
1170:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1171:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1172:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    3. Initializes an interrupt callback function to initialize a scan of the
1173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  next sensors in a widget.
1174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Once this function is called to initialize a widget and a sensor, the
1176:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt() function is called to scan the sensor.
1177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1179:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
1180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1181:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1183:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1184:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param widgetId
1186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the ID number of the widget to perform hardware and firmware
1187:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  initialization required for scanning the specific sensor in the specific
1188:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget.
1189:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration header
1190:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  file defined as CapSense_1_<WidgetName>_WDGT_ID.
1191:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1192:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param sensorId
1193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
1194:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and firmware initialization required for scanning a specific sensor in a
1195:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  specific widget.
1196:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  A macro for the sensor ID within a specified widget can be found in the
1197:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1 Configuration header file defined as
1198:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_<WidgetName>_SNS<SensorNumber>_ID
1199:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1200:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1201:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDSetupWidgetExt(uint32 widgetId, uint32 sensorId)
1202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1204:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
1205:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1206:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Save widget and sensor Ids to have access to it after scanning  */
1207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_sensorIndex = (uint8)sensorId;
1208:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 25


1209:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update global pointer to CapSense_1_RAM_SNS_STRUCT to current sensor  */
1210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
1211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam
1212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
1213:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_CSDSetupWidget(widgetId);
1215:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1216:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      /* Setup Idac Value */
1217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
1218:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1219:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1220:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* initialize access pointers for current pointer to widget configuration in Flash */
1221:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curFlashWdgtPtr = &CapSense_1_dsFlash.wdgtArray[widgetId];
1222:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
1223:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1224:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1225:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConnectSensorExt(widgetId, sensorId);
1226:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1227:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable sensor */
1228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curSnsIOPtr += CapSense_1_sensorIndex;
1229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1230:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
1231:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1232:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1233:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Save sns pointer */
1234:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
1235:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr
1236:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            CapSense_1_sensorIndex;
1237:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1238:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_eleCsdDisconnectFlag = CapSense_1_DISCONNECT_IO_FLAG;
1240:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1241:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Setup ISR handler to single-sensor scan function */
1242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_ISR_StartEx(&CapSense_1_CSDPostSingleScan);
1243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1244:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1245:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1246:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDStartSample
1247:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1248:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1249:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1250:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   Starts the CSD conversion.
1251:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1252:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1253:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   This function assumes that the CSD block is already set up using
1254:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   the CapSense_1_CSDSetupWidget API and the sensor port-pin is connected to the CSD
1255:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   block using CapSense_1_CSDConnectSns.
1256:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   For Third-generation HW block the function performs the following tasks:
1257:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   1. Disconnects the Vref buffer from AMUX;
1258:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   2. Precharges Cmod;
1259:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   3. Makes the PreSettling delay to have a stable Vref voltage;
1260:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   4. Sets the resolution to the Counter register to start scanning.
1261:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1262:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1263:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDStartSample(void)
1264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1265:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 26


1266:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8 interruptState;
1267:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif
1268:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1269:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #ifdef CapSense_1_START_SAMPLE_CALLBACK
1270:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_StartSampleCallback(CapSense_1_widgetIndex, CapSense_1_sensorIndex);
1271:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* CapSense_1_START_SAMPLE_CALLBACK */
1272:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1273:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1274:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
1275:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1276:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Disable CSD interrupt to prevent it during coarse initialization */
1277:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntDisable(CapSense_1_ISR_NUMBER);
1278:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1279:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable power to sub-blocks */
1280:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR, CapSense_1_HSCMP_INIT_MASK);
1281:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1282:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN)
1283:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd |
1284:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_CONFIG_SENSE_EN_MASK |
1285:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_CONFIG_ENABLE_MASK);
1286:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1287:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CyDelayUs(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US);
1288:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1289:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) */
1290:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1291:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Precharging Cmod and Csh */
1292:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDCmodPrecharge();
1293:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1294:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Trigger Scan */
1295:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDTriggerScan();
1296:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1297:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1298:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Third-generation HW block section */
1299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
1300:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1301:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable CSD block. Disconnect Vref Buffer from AMUX */
1302:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
1303:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
1304:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CMOD_PRECHARGE_CO
1305:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
1306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_C
1307:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_CSH_PRECHARGE_IO_BUF == CapSense_1_CSD_CSH_PRECHARGE_SRC) &&\
1308:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
1309:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1310:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Restart the clocks. Scan one cycle to reset the flip-flop for Direct clock mode */
1311:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDClockRestart();
1312:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1313:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Precharging Cmod to Vref */
1314:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDCmodPrecharge();
1315:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1316:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE)
1317:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set PreSettling delay to skip IDAC glitch before scanning */
1318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyDelayCycles(CapSense_1_GLITCH_ELIMINATION_CYCLES);
1319:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SNS_CLK_SOURCE != CapSense_1_CLK_SOURCE_DIRECT) */
1320:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1321:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Trigger Scan */
1322:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDTriggerScan();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 27


1323:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
1325:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1327:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1328:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1329:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1330:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDScanExt
1331:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1332:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1333:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1334:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Starts the CSD conversion on the preconfigured sensor. This function requires
1335:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  using the CapSense_1_CSDSetupWidgetExt() function to set up the a
1336:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget.
1337:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1338:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1339:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function performs single scanning of one sensor in the widget configured
1340:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  by the CapSense_1_CSDSetupWidgetExt() function. It does the following
1341:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  tasks:
1342:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    1. Sets the busy flag in the CapSense_1_dsRam structure.
1343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    2. Performs the clock-phase alignment of the sense and modulator clocks.
1344:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    3. Performs the Cmod pre-charging.
1345:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    4. Starts single scanning.
1346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1347:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1348:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1349:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1350:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status.
1352:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1353:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The sensor must be preconfigured by using the
1354:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDSetupWidgetExt() API prior to calling this function.
1355:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
1356:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  by using the CapSense_1_CSDScanExt() function. In this case, calling
1357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDSetupWidgetExt() is not required every time before the
1358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt() function. If a previous scan was triggered in
1359:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  any other way - CapSense_1_Scan(), CapSense_1_ScanAllWidgets() or
1360:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_RunTuner() - (see the CapSense_1_RunTuner() function
1361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  description for more details), the sensor must be preconfigured again by
1362:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  using the CapSense_1_CSDSetupWidgetExt() API prior to calling the
1363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt() function.
1364:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1365:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  If disconnection of the sensors is required after calling
1366:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDScanExt(), the CapSense_1_CSDDisconnectSns()
1367:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  function can be used.
1368:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1369:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1370:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDScanExt(void)
1371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1372:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
1373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status |= (CapSense_1_SW_STS_BUSY | CapSense_1_WDGT_SW_STS_BUSY);
1374:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1375:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1376:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1377:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1378:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1379:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 28


1380:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
1381:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_ENABLE == CapSense_1_CSDV2)
1382:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL)
1383:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyDelayUs(CapSense_1_CSD_ANALOG_STARTUP_DELAY_US);
1384:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
1385:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE != CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) &&\
1386:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****               (CapSense_1_ENABLE == CapSense_1_CSDV2)*/
1387:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_SsCSDStartSample();
1389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1390:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1391:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1392:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1393:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDScan
1394:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1395:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1396:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1397:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function initiates a scan for the sensors of the widget initialized by the
1398:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDSetupWidget() function.
1399:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1400:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1401:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function performs scanning of all the sensors in the widget configured by
1402:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the CapSense_1_CSDSetupWidget() function. It does the following tasks:
1403:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    1. Connects the first sensor of the widget.
1404:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    2. Configures the IDAC value.
1405:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    3. Initializes the interrupt callback function to initialize a scan of
1406:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *       the next sensors in a widget.
1407:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *    4. Starts scanning for the first sensor in the widget.
1408:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1409:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called by the CapSense_1_Scan() API if the given
1410:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget uses the CSD sensing method.
1411:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1412:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1413:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1414:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases (for faster execution time or pipeline scanning for example).
1415:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1416:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function is called when no scanning is in progress. I.e.
1417:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_IsBusy() returns a non-busy status. The widget must be
1418:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  preconfigured by the CapSense_1_CSDSetupWidget() function if any other
1419:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  widget was previously scanned or any other type of the scan functions was used.
1420:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1421:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1422:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDScan(void)
1423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetI
1426:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1427:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      /*
1428:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****       * Update CapSense_1_sensorIndex with the first sensor in
1429:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****       * widget to use it in ISR handler to configure the next sensor
1430:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****       */
1431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_sensorIndex = 0u;
1432:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1433:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update global pointer to CapSense_1_RAM_SNS_STRUCT to current sensor  */
1434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
1435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].
1436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 29


1437:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1438:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1439:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Reset the frequency scan channel if enabled */
1440:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_scanFreqIndex = CapSense_1_FREQ_CHANNEL_0;
1441:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1442:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1443:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Setup Idac Value */
1444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****    CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
1445:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1446:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1447:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1448:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].sta
1449:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_GANGED_SNS_MASK))
1450:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1451:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Setup ISR handler to multiple-sensor scan function with ganged sensors */
1452:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_ISR_StartEx(&CapSense_1_CSDPostMultiScanGanged);
1453:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1454:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1455:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1456:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set up ISR handler to multiple-sensor scan function without ganged sensors */
1457:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_ISR_StartEx(&CapSense_1_CSDPostMultiScan);
1458:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1459:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1460:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsCSDConnectSensorExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sensorI
1461:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1462:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* initialize ptr to sensor IO structure to appropriate address */
1463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2Sn
1465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         + CapSense_1_sensorIndex;
1466:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1467:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable sensor */
1468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1469:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1470:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set-up ISR handler to multiple-sensor scan function without ganged sensors */
1471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_ISR_StartEx(&CapSense_1_CSDPostMultiScan);
1472:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
1473:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1474:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Start scanning */
1475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_CSDScanExt();
1476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1477:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1478:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1479:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDConnectSensorExt
1481:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1482:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1483:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Connects a ganged sensor port-pin to the sensing HW block via the AMUX bus.
1485:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1486:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1487:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1488:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data, it updates the HSIOM and
1489:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   PC registers.
1490:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1491:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param widgetId
1492:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the widget.
1493:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 30


1494:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param sensorId
1495:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1496:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1497:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1498:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDConnectSensorExt(uint32 widgetId, uint32 sensorId)
1499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1500:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1501:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tempVal;
1502:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1503:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1504:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address */
1505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
1507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
1508:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1509:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1510:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1511:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (CapSense_1_GANGED_SNS_MASK ==
1512:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****            (CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig &
1513:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_GANGED_SNS_MASK))
1514:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1515:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get sns pointer */
1516:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
1517:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash 
1518:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                sensorId;
1519:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1520:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get number of ganged pins */
1521:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             tempVal = CapSense_1_curFlashSnsPtr->numPins;
1522:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1523:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get IO pointer  */
1524:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curSnsIOPtr = &CapSense_1_ioList[CapSense_1_curFlashSnsPtr->firstPinId];
1525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1526:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect all ganged sensors  */
1527:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             do
1528:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1529:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1530:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curSnsIOPtr++;
1531:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tempVal--;
1532:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             } while (0u != tempVal);
1533:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1534:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1535:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1536:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect sensor */
1537:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1538:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1539:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1540:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect sensor */
1541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
1542:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1544:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1545:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1546:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1547:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDDisconnectSnsExt
1548:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1549:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1550:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 31


1551:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Disconnects a ganged sensor port-pin from the sensing HW block and AMUX bus.
1552:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Sets the default state of the un-scanned sensor.
1553:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1554:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1555:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The function gets the IO configuration registers addresses, their shifts and
1556:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   masks from the FLASH_IO_STRUCT object. Basing on this data and Inactive sensor
1557:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   connection parameter, it updates the HSIOM, PC and DR registers.
1558:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   The HSIOM register is updated only when the Inactive sensor connection parameter
1559:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *   is set to Shield.
1560:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1561:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param widgetId
1562:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the widget.
1563:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1564:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param sensorId
1565:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies ID of the sensor in the widget.
1566:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1567:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_SsCSDDisconnectSnsExt(uint32 widgetId, uint32 sensorId)
1569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1570:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1571:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tempVal;
1572:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1573:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1574:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* initialize ptr to sensor IO structure to appropriate address        */
1575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
1576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
1577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
1578:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1579:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
1580:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check ganged sns flag  */
1581:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig &
1582:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_GANGED_SNS_MASK) == CapSense_1_GANGED_SNS_MASK)
1583:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1584:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get sns pointer */
1585:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
1586:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash 
1587:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                sensorId;
1588:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1589:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get number of ganged pins */
1590:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             tempVal = CapSense_1_curFlashSnsPtr->numPins;
1591:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1592:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Get IO pointer  */
1593:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curSnsIOPtr = &CapSense_1_ioList[CapSense_1_curFlashSnsPtr->firstPinId];
1594:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1595:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disconnect all ganged sensors */
1596:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             do
1597:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1598:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
1599:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curSnsIOPtr++;
1600:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tempVal--;
1601:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             } while (0u != tempVal);
1602:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1603:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1604:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1605:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disconnect ganged sensor */
1606:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
1607:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 32


1608:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1609:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Disconnect ganged sensor */
1610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
1611:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
1612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1613:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1614:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1615:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1616:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDConnectSns
1617:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1618:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1619:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1620:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block.
1621:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1622:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1623:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Connects a port pin used by the sensor to the AMUX bus of the sensing HW block
1624:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  while a sensor is being scanned. The function ignores the fact if
1625:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the sensor is a ganged sensor and connects only a specified pin.
1626:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1627:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Scanning should be completed before calling this API.
1628:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1629:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1630:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1631:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget,
1632:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1633:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  They do not take into account changes in the design made by the
1634:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDConnectSns() function.
1635:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1636:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param  snsAddrPtr
1637:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1638:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  which to be connected to the sensing HW block.
1639:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1640:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1641:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDConnectSns(CapSense_1_FLASH_IO_STRUCT const *snsAddrPtr)
1642:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1643:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegisterValue;
1644:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint8  interruptState;
1645:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinModeShift;
1646:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1647:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1648:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Get offsets for sensor */
1649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1650:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1651:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     interruptState = CyEnterCriticalSection();
1653:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1654:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Use temporary variable to update registers without multiple writings to them */
1655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr);
1656:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_1_HSIOM_SEL_MASK << pinHSIOMShift);
1657:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_1_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
1658:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1659:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update port configuration register (drive mode) for sensor */
1660:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)CapSense_1_
1661:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1662:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Update HSIOM register for sensor */
1663:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1664:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 33


1665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
1666:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1667:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1668:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1669:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
1670:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_CSDDisconnectSns
1671:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
1672:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1673:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
1674:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Disconnects a sensor port pin from the sensing HW block and the AMUX bus. Sets
1675:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  the default state of the un-scanned sensor.
1676:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1677:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
1678:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function works identically to CapSense_1_CSDConnectSns() except
1679:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  it disconnects the specified port-pin used by the sensor.
1680:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1681:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Calling this function directly from the application layer is not
1682:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  recommended. This function is used to implement only the user's specific
1683:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  use cases. Functions that perform a setup and scan of sensor/widget
1684:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  automatically set the required pin states and perform the sensor connection.
1685:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  They ignore changes in the design made by the
1686:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  CapSense_1_CSDDisconnectSns() function.
1687:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1688:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \param  snsAddrPtr
1689:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Specifies the pointer to the FLASH_IO_STRUCT object belonging to a sensor
1690:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  which should be disconnected from the sensing HW block.
1691:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
1692:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
1693:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** void CapSense_1_CSDDisconnectSns(CapSense_1_FLASH_IO_STRUCT const *snsAddrPtr)
1694:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
1695:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
1696:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegisterValue;
1697:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinModeShift;
1698:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1699:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) || \
1700:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1701:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8  interruptState;
1702:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) && \
1703:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION))) */
1704:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1705:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
1706:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
1707:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1708:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) ||  \
1709:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1710:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update HSIOM register to disconnect sensor */
1711:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->hsiomPtr, CY_GET_REG32(snsAddrPtr->hsiomPtr) & ~(CapSense_1_HSIOM_
1712:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1713:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         interruptState = CyEnterCriticalSection();
1714:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1715:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update port configuration register (drive mode) for sensor */
1716:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue = CY_GET_REG32(snsAddrPtr->pcPtr);
1717:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue &= ~(CapSense_1_GPIO_PC_MASK << pinModeShift);
1718:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue |= CapSense_1_CSD_INACTIVE_SNS_CONNECTION << pinModeShift;
1719:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newRegisterValue);
1720:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1721:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 34


1722:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1723:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set logic 0 to port data register */
1724:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->drPtr, CY_GET_REG32(snsAddrPtr->drPtr) & (uint32)~(uint32)((uint32
1725:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
1726:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update port configuration register (drive mode to HiZ Analog) for sensor */
1727:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, CY_GET_REG32(snsAddrPtr->pcPtr) & (uint32)~((uint32)CapSens
1728:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1729:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Connect to Shield */
1730:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue = CY_GET_REG32(snsAddrPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK << pinH
1731:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue |= (CapSense_1_HSIOM_SEL_CSD_SHIELD << pinHSIOMShift);
1732:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->hsiomPtr, newRegisterValue);
1733:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) && \
1734:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 (CapSense_1_SNS_CONNECTION_SHIELD != CapSense_1_CSD_INACTIVE_SNS_CONNECTION)) */
1735:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
1736:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1737:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
1738:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))
1739:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1740:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
1741:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDSetSingleIdacMode
1742:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
1743:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1744:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
1745:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *  This function set single IDAC mode.
1746:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1747:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
1748:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   For Third-generation HW block: The function enables Modulator IDAC only in variable mod
1749:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   For Fourth-generation HW block: The function enables IDACA LEG1 in CSD mode, IDACA LEG2
1750:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1751:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
1752:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDSetSingleIdacMode(void)
1753:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 161              		.loc 1 1753 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
1754:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 newRegValue;
1755:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1756:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1757:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Enable IDACA LEG1 in CSD mode, IDACA LEG2 in GP mode */
1758:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_IDAC_MOD_PTR) &
 166              		.loc 1 1758 0
 167 0000 074B     		ldr	r3, .L14
 168 0002 1A68     		ldr	r2, [r3]
 169 0004 7F21     		movs	r1, #127
 170 0006 0A40     		ands	r2, r1
 171              	.LVL4:
1759:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                               CapSense_1_IDAC_MOD_VAL_MASK;
1760:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= CapSense_1_IDAC_MOD_CALIBRATION_CFG;
 172              		.loc 1 1760 0
 173 0008 0648     		ldr	r0, .L14+4
 174 000a 0243     		orrs	r2, r0
 175              	.LVL5:
1761:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, newRegValue);
 176              		.loc 1 1761 0
 177 000c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 35


1762:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1763:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)
1764:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     newRegValue = CY_GET_REG32(CapSense_1_IDAC_COMP_PTR) & CapSense_1_IDAC_COMP_VAL
 178              		.loc 1 1764 0
 179 000e 064A     		ldr	r2, .L14+8
 180              	.LVL6:
 181 0010 1368     		ldr	r3, [r2]
 182              	.LVL7:
 183 0012 0B40     		ands	r3, r1
 184              	.LVL8:
1765:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     newRegValue |= CapSense_1_IDAC_COMP_CALIBRATION_CFG;
 185              		.loc 1 1765 0
 186 0014 8021     		movs	r1, #128
 187 0016 0904     		lsls	r1, r1, #16
 188 0018 0B43     		orrs	r3, r1
 189              	.LVL9:
1766:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_COMP_PTR, newRegValue);
 190              		.loc 1 1766 0
 191 001a 1360     		str	r3, [r2]
1767:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1768:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN */
1769:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
1770:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Enable Modulator IDAC only in variable mode */
1771:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_IDAC_PTR) &
1772:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                               ~(CapSense_1_IDAC_MOD_MODE_MASK | CapSense_1_IDAC_COMP_MODE_MASK);
1773:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= CapSense_1_IDAC_MOD_MODE_VARIABLE;
1774:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_PTR, newRegValue);
1775:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1776:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 192              		.loc 1 1776 0
 193              		@ sp needed
 194 001c 7047     		bx	lr
 195              	.L15:
 196 001e C046     		.align	2
 197              	.L14:
 198 0020 C0010B40 		.word	1074463168
 199 0024 00008301 		.word	25362432
 200 0028 C4010B40 		.word	1074463172
 201              		.cfi_endproc
 202              	.LFE19:
 203              		.size	CapSense_1_SsCSDSetSingleIdacMode, .-CapSense_1_SsCSDSetSingleIdacMode
 204              		.section	.text.CapSense_1_SsCSDRestoreIdacMode,"ax",%progbits
 205              		.align	2
 206              		.code	16
 207              		.thumb_func
 208              		.type	CapSense_1_SsCSDRestoreIdacMode, %function
 209              	CapSense_1_SsCSDRestoreIdacMode:
 210              	.LFB20:
1777:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1778:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
1779:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****            (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)) */
1780:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1781:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) || \
1782:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****      (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN))
1783:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1784:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*******************************************************************************
1785:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * Function Name: CapSense_1_SsCSDRestoreIdacMode
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 36


1786:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ****************************************************************************//**
1787:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1788:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \brief
1789:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *  This function restores IDAC configuration.
1790:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1791:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         * \details
1792:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *   The function restores Compensation IDAC if it is enabled.
1793:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *
1794:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         *******************************************************************************/
1795:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         static void CapSense_1_SsCSDRestoreIdacMode(void)
1796:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 211              		.loc 1 1796 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
1797:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Restore IDAC configuration */
1798:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1799:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 uint32 newRegValue;
1800:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1801:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 216              		.loc 1 1801 0
 217 0000 064A     		ldr	r2, .L17
 218 0002 1368     		ldr	r3, [r2]
 219              	.LVL10:
1802:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 newRegValue |= CapSense_1_DEFAULT_SW_REFGEN_SEL;
 220              		.loc 1 1802 0
 221 0004 0649     		ldr	r1, .L17+4
 222 0006 0B43     		orrs	r3, r1
 223              	.LVL11:
1803:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 224              		.loc 1 1803 0
 225 0008 1360     		str	r3, [r2]
1804:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_MOD_PTR, CapSense_1_IDAC_MOD_DEFAULT_CFG);
 226              		.loc 1 1804 0
 227 000a 064A     		ldr	r2, .L17+8
 228 000c 064B     		ldr	r3, .L17+12
 229              	.LVL12:
 230 000e 1A60     		str	r2, [r3]
 231              	.LVL13:
1805:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1806:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)
1807:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_IDAC_COMP_PTR, CapSense_1_IDAC_COMP_DEFAULT_CFG);
 232              		.loc 1 1807 0
 233 0010 C122     		movs	r2, #193
 234 0012 5204     		lsls	r2, r2, #17
 235 0014 054B     		ldr	r3, .L17+16
 236 0016 1A60     		str	r2, [r3]
1808:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
1809:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN */
1810:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #else
1811:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1812:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_PTR, CapSense_1_DEFAULT_CSD_IDAC_CONFIG);
1813:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #else
1814:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) &
1815:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                                         ~(CapSense_1_IDAC_MOD_MODE_
1816:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CY_SET_REG32(CapSense_1_IDAC_PTR, CY_GET_REG32(CapSense_1_IDAC_PTR) | CapSense_
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 37


1817:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1818:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1819:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 237              		.loc 1 1819 0
 238              		@ sp needed
 239 0018 7047     		bx	lr
 240              	.L18:
 241 001a C046     		.align	2
 242              	.L17:
 243 001c A8020B40 		.word	1074463400
 244 0020 01000010 		.word	268435457
 245 0024 00008301 		.word	25362432
 246 0028 C0010B40 		.word	1074463168
 247 002c C4010B40 		.word	1074463172
 248              		.cfi_endproc
 249              	.LFE20:
 250              		.size	CapSense_1_SsCSDRestoreIdacMode, .-CapSense_1_SsCSDRestoreIdacMode
 251              		.section	.text.CapSense_1_SsCSDCalibrateCheck,"ax",%progbits
 252              		.align	2
 253              		.code	16
 254              		.thumb_func
 255              		.type	CapSense_1_SsCSDCalibrateCheck, %function
 256              	CapSense_1_SsCSDCalibrateCheck:
 257              	.LFB21:
1820:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1821:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1822:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
1823:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDCalibrateCheck
1824:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
1825:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1826:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
1827:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This internal function checks if the calibration is performed successfully.
1828:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1829:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
1830:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The function verifies calibration error based on maximum raw count level.
1831:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1832:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param rawLevel The raw data level which should be reached during the
1833:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   calibration procedure.
1834:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param rawData  Calibrated raw counts.
1835:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1836:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1837:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   - Zero     - All the sensors in the widget are calibrated successfully.
1838:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   - Non-Zero - Calibration failed for any sensor in the widget.
1839:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1840:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
1841:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateCheck(CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt, ui
1842:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 258              		.loc 1 1842 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              	.LVL14:
 263 0000 70B5     		push	{r4, r5, r6, lr}
 264              		.cfi_def_cfa_offset 16
 265              		.cfi_offset 4, -16
 266              		.cfi_offset 5, -12
 267              		.cfi_offset 6, -8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 38


 268              		.cfi_offset 14, -4
 269 0002 0E00     		movs	r6, r1
 270 0004 1500     		movs	r5, r2
 271              	.LVL15:
1843:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus;
1844:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 rawCountsError;
1845:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 minRawLevel = 0u;
1846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 maxRawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
 272              		.loc 1 1846 0
 273 0006 0388     		ldrh	r3, [r0]
 274 0008 0124     		movs	r4, #1
 275 000a 9C40     		lsls	r4, r4, r3
 276 000c 013C     		subs	r4, r4, #1
 277              	.LVL16:
1847:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1848:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calculate the error in rawcounts for given resolution (round to floor) */
1849:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         rawCountsError = ((maxRawLevel * CapSense_1_IDAC_MOD_MAX_CALIB_ERROR) /
 278              		.loc 1 1849 0
 279 000e A300     		lsls	r3, r4, #2
 280 0010 1B19     		adds	r3, r3, r4
 281 0012 5800     		lsls	r0, r3, #1
 282              	.LVL17:
 283 0014 6421     		movs	r1, #100
 284              	.LVL18:
 285 0016 FFF7FEFF 		bl	__aeabi_uidiv
 286              	.LVL19:
 287 001a 0130     		adds	r0, r0, #1
 288              	.LVL20:
1850:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           CapSense_1_PERCENTAGE_100) + 1u;
1851:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1852:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Get minimum and maximum range values */
1853:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((rawLevel + rawCountsError) <= maxRawLevel)
 289              		.loc 1 1853 0
 290 001c 8319     		adds	r3, r0, r6
 291 001e 9C42     		cmp	r4, r3
 292 0020 00D2     		bcs	.L20
1846:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 293              		.loc 1 1846 0
 294 0022 2300     		movs	r3, r4
 295              	.L20:
 296              	.LVL21:
1854:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1855:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             maxRawLevel = rawLevel + rawCountsError;
1856:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1857:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (rawLevel >= rawCountsError)
 297              		.loc 1 1857 0
 298 0024 B042     		cmp	r0, r6
 299 0026 01D8     		bhi	.L23
1858:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1859:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             minRawLevel = rawLevel - rawCountsError;
 300              		.loc 1 1859 0
 301 0028 301A     		subs	r0, r6, r0
 302              	.LVL22:
 303 002a 00E0     		b	.L21
 304              	.LVL23:
 305              	.L23:
1845:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 maxRawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 39


 306              		.loc 1 1845 0
 307 002c 0020     		movs	r0, #0
 308              	.LVL24:
 309              	.L21:
1860:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1861:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1862:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check if calibration is in valid range */
1863:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if ((rawData < minRawLevel) || (rawData > maxRawLevel))
 310              		.loc 1 1863 0
 311 002e A842     		cmp	r0, r5
 312 0030 03D8     		bhi	.L24
 313              		.loc 1 1863 0 is_stmt 0 discriminator 1
 314 0032 AB42     		cmp	r3, r5
 315 0034 03D2     		bcs	.L25
1864:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1865:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus = CYRET_BAD_DATA;
 316              		.loc 1 1865 0 is_stmt 1
 317 0036 0620     		movs	r0, #6
 318              	.LVL25:
 319 0038 02E0     		b	.L22
 320              	.LVL26:
 321              	.L24:
 322 003a 0620     		movs	r0, #6
 323              	.LVL27:
 324 003c 00E0     		b	.L22
 325              	.LVL28:
 326              	.L25:
1866:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1867:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         else
1868:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1869:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus = CYRET_SUCCESS;
 327              		.loc 1 1869 0
 328 003e 0020     		movs	r0, #0
 329              	.LVL29:
 330              	.L22:
1870:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1871:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1872:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         return (calibrateStatus);
1873:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 331              		.loc 1 1873 0
 332              		@ sp needed
 333              	.LVL30:
 334              	.LVL31:
 335 0040 70BD     		pop	{r4, r5, r6, pc}
 336              		.cfi_endproc
 337              	.LFE21:
 338              		.size	CapSense_1_SsCSDCalibrateCheck, .-CapSense_1_SsCSDCalibrateCheck
 339 0042 C046     		.section	.text.CapSense_1_SsCSDInitialize,"ax",%progbits
 340              		.align	2
 341              		.global	CapSense_1_SsCSDInitialize
 342              		.code	16
 343              		.thumb_func
 344              		.type	CapSense_1_SsCSDInitialize, %function
 345              	CapSense_1_SsCSDInitialize:
 346              	.LFB4:
 480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegValue;
 347              		.loc 1 480 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 40


 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 0
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351 0000 70B5     		push	{r4, r5, r6, lr}
 352              		.cfi_def_cfa_offset 16
 353              		.cfi_offset 4, -16
 354              		.cfi_offset 5, -12
 355              		.cfi_offset 6, -8
 356              		.cfi_offset 14, -4
 484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 357              		.loc 1 484 0
 358 0002 FFF7FEFF 		bl	CapSense_1_SsClearCSDSensors
 359              	.LVL32:
 487:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 360              		.loc 1 487 0
 361 0006 FFF7FEFF 		bl	CapSense_1_BistDischargeExtCapacitors
 362              	.LVL33:
 505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 363              		.loc 1 505 0
 364 000a C022     		movs	r2, #192
 365 000c 1203     		lsls	r2, r2, #12
 366 000e 284B     		ldr	r3, .L27
 367 0010 1A60     		str	r2, [r3]
 508:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= CapSense_1_DEFAULT_SW_REFGEN_SEL;
 368              		.loc 1 508 0
 369 0012 284B     		ldr	r3, .L27+4
 370 0014 1968     		ldr	r1, [r3]
 371              	.LVL34:
 509:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 372              		.loc 1 509 0
 373 0016 284E     		ldr	r6, .L27+8
 374 0018 3143     		orrs	r1, r6
 375              	.LVL35:
 511:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_SET_PTR,         CapSense_1_DEFAULT_CSD_INTR_SET);
 376              		.loc 1 511 0
 377 001a 1960     		str	r1, [r3]
 512:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,   CapSense_1_DEFAULT_CSD_SW_FW_TANK_SEL);
 378              		.loc 1 512 0
 379 001c 0024     		movs	r4, #0
 380 001e 274A     		ldr	r2, .L27+12
 381 0020 1460     		str	r4, [r2]
 513:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_DSI_SEL_PTR,       CapSense_1_DEFAULT_CSD_SW_DSI_SEL);
 382              		.loc 1 513 0
 383 0022 274A     		ldr	r2, .L27+16
 384 0024 1460     		str	r4, [r2]
 514:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_ADC_CTL_PTR,          CapSense_1_DEFAULT_CSD_ADC_CTL);
 385              		.loc 1 514 0
 386 0026 274A     		ldr	r2, .L27+20
 387 0028 1460     		str	r4, [r2]
 515:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_AMBUF_PTR,            CapSense_1_AMBUF_PWR_MODE_OFF);
 388              		.loc 1 515 0
 389 002a 274A     		ldr	r2, .L27+24
 390 002c 1460     		str	r4, [r2]
 516:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,    CapSense_1_DEFAULT_SW_SHIELD_SEL);
 391              		.loc 1 516 0
 392 002e 274A     		ldr	r2, .L27+28
 393 0030 1460     		str	r4, [r2]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 41


 517:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR,      CapSense_1_DEFAULT_SW_HS_P_SEL);
 394              		.loc 1 517 0
 395 0032 274A     		ldr	r2, .L27+32
 396 0034 1460     		str	r4, [r2]
 518:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_N_SEL_PTR,      CapSense_1_DEFAULT_SW_HS_N_SEL);
 397              		.loc 1 518 0
 398 0036 274A     		ldr	r2, .L27+36
 399 0038 1460     		str	r4, [r2]
 519:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_HSCMP_PTR,            CapSense_1_DEFAULT_HSCMP_CFG);
 400              		.loc 1 519 0
 401 003a 274D     		ldr	r5, .L27+40
 402 003c 2C60     		str	r4, [r5]
 520:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 403              		.loc 1 520 0
 404 003e 274A     		ldr	r2, .L27+44
 405 0040 1460     		str	r4, [r2]
 523:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 406              		.loc 1 523 0
 407 0042 274A     		ldr	r2, .L27+48
 408 0044 1168     		ldr	r1, [r2]
 409              	.LVL36:
 524:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CMOD_HSIOM_SHIFT);
 410              		.loc 1 524 0
 411 0046 F020     		movs	r0, #240
 412 0048 8143     		bics	r1, r0
 413              	.LVL37:
 525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 414              		.loc 1 525 0
 415 004a 9038     		subs	r0, r0, #144
 416 004c 0143     		orrs	r1, r0
 417              	.LVL38:
 526:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 418              		.loc 1 526 0
 419 004e 1160     		str	r1, [r2]
 529:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue |= CapSense_1_SW_BYP_SEL_SW_BYA_MASK;
 420              		.loc 1 529 0
 421 0050 244A     		ldr	r2, .L27+52
 422 0052 1168     		ldr	r1, [r2]
 423              	.LVL39:
 530:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_BYP_SEL_PTR, newRegValue);
 424              		.loc 1 530 0
 425 0054 8020     		movs	r0, #128
 426 0056 4001     		lsls	r0, r0, #5
 427 0058 0143     		orrs	r1, r0
 428              	.LVL40:
 531:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 429              		.loc 1 531 0
 430 005a 1160     		str	r1, [r2]
 537:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 431              		.loc 1 537 0
 432 005c 8021     		movs	r1, #128
 433              	.LVL41:
 434 005e 4900     		lsls	r1, r1, #1
 435 0060 214A     		ldr	r2, .L27+56
 436              	.LVL42:
 437 0062 1160     		str	r1, [r2]
 438              	.LVL43:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 42


 554:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             newRegValue |= CapSense_1_SW_REFGEN_SEL_SW_SGR_MASK | CapSense_1_SW_REFGEN_SEL_SW_IAIB_
 439              		.loc 1 554 0
 440 0064 1A68     		ldr	r2, [r3]
 441              	.LVL44:
 555:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 442              		.loc 1 555 0
 443 0066 3243     		orrs	r2, r6
 444              	.LVL45:
 556:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
 445              		.loc 1 556 0
 446 0068 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 447              		.loc 1 592 0
 448 006a 8023     		movs	r3, #128
 449 006c 5B04     		lsls	r3, r3, #17
 450 006e 1F4A     		ldr	r2, .L27+60
 451              	.LVL46:
 452 0070 1360     		str	r3, [r2]
 453              	.LVL47:
 595:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 454              		.loc 1 595 0
 455 0072 1F49     		ldr	r1, .L27+64
 456 0074 1F4A     		ldr	r2, .L27+68
 457 0076 1160     		str	r1, [r2]
 608:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 458              		.loc 1 608 0
 459 0078 1F4A     		ldr	r2, .L27+72
 460 007a 1460     		str	r4, [r2]
 612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_2000_MV > CapSense_1_CYDEV_VDDA_MV) */
 461              		.loc 1 612 0
 462 007c 2B60     		str	r3, [r5]
 616:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 463              		.loc 1 616 0
 464 007e FFF7FEFF 		bl	CapSense_1_SsCSDConfigIDACs
 465              	.LVL48:
 619:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 466              		.loc 1 619 0
 467 0082 2023     		movs	r3, #32
 468 0084 1D4A     		ldr	r2, .L27+76
 469 0086 D05C     		ldrb	r0, [r2, r3]
 470 0088 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 471              	.LVL49:
 627:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 472              		.loc 1 627 0
 473 008c FFF7FEFF 		bl	CapSense_1_SsCSDSetFilterDelay
 474              	.LVL50:
 631:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                   CapSense_1_CONFIG_SENSE_EN_MASK |
 475              		.loc 1 631 0
 476 0090 1B4B     		ldr	r3, .L27+80
 477 0092 1B68     		ldr	r3, [r3]
 478 0094 1B4A     		ldr	r2, .L27+84
 479 0096 1343     		orrs	r3, r2
 480 0098 1B4A     		ldr	r2, .L27+88
 481 009a 1360     		str	r3, [r2]
 637:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 482              		.loc 1 637 0
 483 009c 0F22     		movs	r2, #15
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 43


 484 009e 1B4B     		ldr	r3, .L27+92
 485 00a0 1A60     		str	r2, [r3]
 640:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 486              		.loc 1 640 0
 487 00a2 1B4B     		ldr	r3, .L27+96
 488 00a4 1C60     		str	r4, [r3]
 643:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 489              		.loc 1 643 0
 490 00a6 053A     		subs	r2, r2, #5
 491 00a8 1A4B     		ldr	r3, .L27+100
 492 00aa 1A60     		str	r2, [r3]
 675:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 493              		.loc 1 675 0
 494              		@ sp needed
 495 00ac 70BD     		pop	{r4, r5, r6, pc}
 496              	.L28:
 497 00ae C046     		.align	2
 498              	.L27:
 499 00b0 04020B40 		.word	1074463236
 500 00b4 A8020B40 		.word	1074463400
 501 00b8 01000010 		.word	268435457
 502 00bc F4000B40 		.word	1074462964
 503 00c0 B4020B40 		.word	1074463412
 504 00c4 C0020B40 		.word	1074463424
 505 00c8 20030B40 		.word	1074463520
 506 00cc 84010B40 		.word	1074463108
 507 00d0 88020B40 		.word	1074463368
 508 00d4 80020B40 		.word	1074463360
 509 00d8 84020B40 		.word	1074463364
 510 00dc 80010B40 		.word	1074463104
 511 00e0 00040240 		.word	1073873920
 512 00e4 94020B40 		.word	1074463380
 513 00e8 A0020B40 		.word	1074463392
 514 00ec A4020B40 		.word	1074463396
 515 00f0 41120000 		.word	4673
 516 00f4 88010B40 		.word	1074463112
 517 00f8 90020B40 		.word	1074463376
 518 00fc 00000000 		.word	CapSense_1_dsRam
 519 0100 00000000 		.word	.LANCHOR0
 520 0104 00100080 		.word	-2147479552
 521 0108 00000B40 		.word	1074462720
 522 010c 00030B40 		.word	1074463488
 523 0110 F0010B40 		.word	1074463216
 524 0114 10030B40 		.word	1074463504
 525              		.cfi_endproc
 526              	.LFE4:
 527              		.size	CapSense_1_SsCSDInitialize, .-CapSense_1_SsCSDInitialize
 528              		.section	.text.CapSense_1_SsCSDSetUpIdacs,"ax",%progbits
 529              		.align	2
 530              		.global	CapSense_1_SsCSDSetUpIdacs
 531              		.code	16
 532              		.thumb_func
 533              		.type	CapSense_1_SsCSDSetUpIdacs, %function
 534              	CapSense_1_SsCSDSetUpIdacs:
 535              	.LFB6:
 756:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 536              		.loc 1 756 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 44


 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540              	.LVL51:
 541 0000 70B5     		push	{r4, r5, r6, lr}
 542              		.cfi_def_cfa_offset 16
 543              		.cfi_offset 4, -16
 544              		.cfi_offset 5, -12
 545              		.cfi_offset 6, -8
 546              		.cfi_offset 14, -4
 547 0002 0500     		movs	r5, r0
 768:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 548              		.loc 1 768 0
 549 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 550              	.LVL52:
 771:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 551              		.loc 1 771 0
 552 0008 0C49     		ldr	r1, .L30
 553 000a 0B68     		ldr	r3, [r1]
 554              	.LVL53:
 774:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 555              		.loc 1 774 0
 556 000c 7F26     		movs	r6, #127
 557 000e B343     		bics	r3, r6
 558              	.LVL54:
 787:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN | CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 559              		.loc 1 787 0
 560 0010 0B4A     		ldr	r2, .L30+4
 561 0012 1478     		ldrb	r4, [r2]
 562 0014 2D19     		adds	r5, r5, r4
 563              	.LVL55:
 564 0016 6A7A     		ldrb	r2, [r5, #9]
 565 0018 1343     		orrs	r3, r2
 566              	.LVL56:
 791:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CyExitCriticalSection(interruptState);
 567              		.loc 1 791 0
 568 001a 0B60     		str	r3, [r1]
 792:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 569              		.loc 1 792 0
 570 001c FFF7FEFF 		bl	CyExitCriticalSection
 571              	.LVL57:
 796:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Get IDACB Value */
 572              		.loc 1 796 0
 573 0020 FFF7FEFF 		bl	CyEnterCriticalSection
 574              	.LVL58:
 798:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 575              		.loc 1 798 0
 576 0024 0749     		ldr	r1, .L30+8
 577 0026 0B68     		ldr	r3, [r1]
 578              	.LVL59:
 801:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 579              		.loc 1 801 0
 580 0028 B343     		bics	r3, r6
 581              	.LVL60:
 804:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 582              		.loc 1 804 0
 583 002a 074A     		ldr	r2, .L30+12
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 45


 584 002c 1268     		ldr	r2, [r2]
 585 002e 1419     		adds	r4, r2, r4
 586 0030 627A     		ldrb	r2, [r4, #9]
 587 0032 1343     		orrs	r3, r2
 588              	.LVL61:
 807:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyExitCriticalSection(interruptState);
 589              		.loc 1 807 0
 590 0034 0B60     		str	r3, [r1]
 808:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 591              		.loc 1 808 0
 592 0036 FFF7FEFF 		bl	CyExitCriticalSection
 593              	.LVL62:
 849:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 594              		.loc 1 849 0
 595              		@ sp needed
 596 003a 70BD     		pop	{r4, r5, r6, pc}
 597              	.L31:
 598              		.align	2
 599              	.L30:
 600 003c C0010B40 		.word	1074463168
 601 0040 00000000 		.word	CapSense_1_scanFreqIndex
 602 0044 C4010B40 		.word	1074463172
 603 0048 00000000 		.word	CapSense_1_curRamSnsPtr
 604              		.cfi_endproc
 605              	.LFE6:
 606              		.size	CapSense_1_SsCSDSetUpIdacs, .-CapSense_1_SsCSDSetUpIdacs
 607              		.section	.text.CapSense_1_SsCSDGetNumberOfConversions,"ax",%progbits
 608              		.align	2
 609              		.global	CapSense_1_SsCSDGetNumberOfConversions
 610              		.code	16
 611              		.thumb_func
 612              		.type	CapSense_1_SsCSDGetNumberOfConversions, %function
 613              	CapSense_1_SsCSDGetNumberOfConversions:
 614              	.LFB7:
 873:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 conversionsNum;
 615              		.loc 1 873 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              	.LVL63:
 620 0000 10B5     		push	{r4, lr}
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 4, -8
 623              		.cfi_offset 14, -4
 624 0002 0300     		movs	r3, r0
 880:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 625              		.loc 1 880 0
 626 0004 0120     		movs	r0, #1
 627              	.LVL64:
 628 0006 8840     		lsls	r0, r0, r1
 629 0008 0138     		subs	r0, r0, #1
 630              	.LVL65:
 909:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 631              		.loc 1 909 0
 632 000a 002B     		cmp	r3, #0
 633 000c 02D0     		beq	.L33
 911:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 46


 634              		.loc 1 911 0
 635 000e 1900     		movs	r1, r3
 636              	.LVL66:
 637 0010 FFF7FEFF 		bl	__aeabi_uidiv
 638              	.LVL67:
 639              	.L33:
 932:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 640              		.loc 1 932 0
 641 0014 0028     		cmp	r0, #0
 642 0016 00D1     		bne	.L34
 643 0018 0130     		adds	r0, r0, #1
 644              	.LVL68:
 645              	.L34:
 933:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 646              		.loc 1 933 0 discriminator 4
 647              		@ sp needed
 648 001a 10BD     		pop	{r4, pc}
 649              		.cfi_endproc
 650              	.LFE7:
 651              		.size	CapSense_1_SsCSDGetNumberOfConversions, .-CapSense_1_SsCSDGetNumberOfConversions
 652              		.section	.text.CapSense_1_SsCSDConfigClock,"ax",%progbits
 653              		.align	2
 654              		.global	CapSense_1_SsCSDConfigClock
 655              		.code	16
 656              		.thumb_func
 657              		.type	CapSense_1_SsCSDConfigClock, %function
 658              	CapSense_1_SsCSDConfigClock:
 659              	.LFB8:
 949:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 snsClkDivider;
 660              		.loc 1 949 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 0, uses_anonymous_args = 0
 664 0000 10B5     		push	{r4, lr}
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 4, -8
 667              		.cfi_offset 14, -4
 955:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 668              		.loc 1 955 0
 669 0002 094B     		ldr	r3, .L38
 670 0004 1B78     		ldrb	r3, [r3]
 954:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2WdgtRam;
 671              		.loc 1 954 0
 672 0006 5B01     		lsls	r3, r3, #5
 673 0008 084A     		ldr	r2, .L38+4
 674 000a D318     		adds	r3, r2, r3
 675 000c 5B68     		ldr	r3, [r3, #4]
 676              	.LVL69:
 972:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 677              		.loc 1 972 0
 678 000e 5989     		ldrh	r1, [r3, #10]
 679              	.LVL70:
 988:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 680              		.loc 1 988 0
 681 0010 1B7B     		ldrb	r3, [r3, #12]
 682              	.LVL71:
 992:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 47


 683              		.loc 1 992 0
 684 0012 1804     		lsls	r0, r3, #16
 685              	.LVL72:
 995:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             (CapSense_1_CLK_SOURCE_PRS12 == snsClkSrc))
 686              		.loc 1 995 0
 687 0014 053B     		subs	r3, r3, #5
 688              	.LVL73:
 689 0016 012B     		cmp	r3, #1
 690 0018 02D8     		bhi	.L37
 998:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 691              		.loc 1 998 0
 692 001a 8023     		movs	r3, #128
 693              	.LVL74:
 694 001c 9B04     		lsls	r3, r3, #18
 695 001e 1843     		orrs	r0, r3
 696              	.LVL75:
 697              	.L37:
1025:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 698              		.loc 1 1025 0
 699 0020 FFF7FEFF 		bl	CapSense_1_SsCSDSetModeSnsClockDivider
 700              	.LVL76:
1026:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 701              		.loc 1 1026 0
 702              		@ sp needed
 703 0024 10BD     		pop	{r4, pc}
 704              	.L39:
 705 0026 C046     		.align	2
 706              	.L38:
 707 0028 00000000 		.word	CapSense_1_widgetIndex
 708 002c 00000000 		.word	CapSense_1_dsFlash
 709              		.cfi_endproc
 710              	.LFE8:
 711              		.size	CapSense_1_SsCSDConfigClock, .-CapSense_1_SsCSDConfigClock
 712              		.section	.text.CapSense_1_SsCSDCalculateScanDuration,"ax",%progbits
 713              		.align	2
 714              		.global	CapSense_1_SsCSDCalculateScanDuration
 715              		.code	16
 716              		.thumb_func
 717              		.type	CapSense_1_SsCSDCalculateScanDuration, %function
 718              	CapSense_1_SsCSDCalculateScanDuration:
 719              	.LFB9:
1050:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 720              		.loc 1 1050 0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724              	.LVL77:
 725 0000 10B5     		push	{r4, lr}
 726              		.cfi_def_cfa_offset 8
 727              		.cfi_offset 4, -8
 728              		.cfi_offset 14, -4
 729 0002 0300     		movs	r3, r0
1070:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
 730              		.loc 1 1070 0
 731 0004 4089     		ldrh	r0, [r0, #10]
 732              	.LVL78:
1074:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 48


 733              		.loc 1 1074 0
 734 0006 1988     		ldrh	r1, [r3]
 735 0008 1A7B     		ldrb	r2, [r3, #12]
 736 000a FFF7FEFF 		bl	CapSense_1_SsCSDGetNumberOfConversions
 737              	.LVL79:
1077:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
 738              		.loc 1 1077 0
 739 000e 0004     		lsls	r0, r0, #16
 740              	.LVL80:
 741 0010 000C     		lsrs	r0, r0, #16
 742 0012 014B     		ldr	r3, .L41
 743 0014 1860     		str	r0, [r3]
1082:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 744              		.loc 1 1082 0
 745              		@ sp needed
 746 0016 10BD     		pop	{r4, pc}
 747              	.L42:
 748              		.align	2
 749              	.L41:
 750 0018 14030B40 		.word	1074463508
 751              		.cfi_endproc
 752              	.LFE9:
 753              		.size	CapSense_1_SsCSDCalculateScanDuration, .-CapSense_1_SsCSDCalculateScanDuration
 754              		.section	.text.CapSense_1_SsCSDStartSample,"ax",%progbits
 755              		.align	2
 756              		.global	CapSense_1_SsCSDStartSample
 757              		.code	16
 758              		.thumb_func
 759              		.type	CapSense_1_SsCSDStartSample, %function
 760              	CapSense_1_SsCSDStartSample:
 761              	.LFB12:
1264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
 762              		.loc 1 1264 0
 763              		.cfi_startproc
 764              		@ args = 0, pretend = 0, frame = 0
 765              		@ frame_needed = 0, uses_anonymous_args = 0
 766 0000 10B5     		push	{r4, lr}
 767              		.cfi_def_cfa_offset 8
 768              		.cfi_offset 4, -8
 769              		.cfi_offset 14, -4
1277:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 770              		.loc 1 1277 0
 771 0002 0A20     		movs	r0, #10
 772 0004 FFF7FEFF 		bl	CyIntDisable
 773              	.LVL81:
1280:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 774              		.loc 1 1280 0
 775 0008 0122     		movs	r2, #1
 776 000a 2A4B     		ldr	r3, .L51
 777 000c 1A60     		str	r2, [r3]
 778              	.LBB6:
 779              	.LBB7:
1874:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1875:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
1876:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDCalibrateOneSensor
1877:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
1878:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 49


1879:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
1880:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Computes the Modulator IDAC value for one sensor that provides raw signal at
1881:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  the specified level.
1882:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1883:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
1884:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The function performs the following tasks:
1885:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   1. initializes The Compensation IDAC to zero
1886:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   2. Enables the calibrated sensor
1887:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   3. Performs eight iteration steps to get the target = rawLevel
1888:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *      setting and resetting the IDAC value bits beginning from the
1889:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *      MSB bit to an MSB bit.
1890:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   4. Disables the calibrated sensor
1891:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   5. Checks if the IDAC is in the correct range
1892:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   6. Updates the maximum IDAC value in the widget
1893:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   7. Stores the temporary ModIDAC8 value (in the single-IDAC mode).
1894:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1895:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  The CSD block should be initialized with the CapSense_1_SsCSDInitialize()
1896:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  API before using this function.
1897:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1898:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param  rawLevel
1899:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *   The raw data level which should be reached during the calibration procedure.
1900:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param  ptrIdac  The pointer to IDAC.
1901:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param  iDAC8Max The pointer to the maximum IDAC value in the widget.
1902:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1903:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return Returns the status of the operation:
1904:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  - Zero     - All the sensors in the widget are calibrated successfully.
1905:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  - Non-Zero - Calibration failed for any sensor in the widget.
1906:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
1907:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
1908:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     static cystatus CapSense_1_SsCSDCalibrateOneSensor(uint32 rawLevel,
1909:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                            uint8 *ptrIdac,
1910:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                            uint8 *iDAC8Max)
1911:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
1912:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus;
1913:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 calMask = ((uint32)CapSense_1_CAL_MIDDLE_BIT << 1uL);
1914:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
1915:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1916:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint16 rawData0 = 0u;
1917:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1918:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint16 rawData1 = 0u;
1919:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint16 rawData2 = 0u;
1920:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1921:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1922:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Declare and initialize ptr to widget and sensor structures to appropriate address */
1923:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1924:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_wid
1925:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1926:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ptrIdac[0u] = 0u;
1927:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1928:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[CapSense_1_FREQ_CHANNEL_1] = 0u;
1929:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[CapSense_1_FREQ_CHANNEL_2] = 0u;
1930:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1931:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1932:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Setup the calibrated sensor of the widget (Set IDAC = calMask and connect the sensor) */
1933:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDSetupWidgetExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sensorIndex
1934:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1935:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 50


1936:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set single IDAC mode */
1937:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDSetSingleIdacMode();
1938:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1939:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1940:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*
1941:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * Perform the iteration steps to get target = rawLevel.
1942:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * The number of iteration steps is defined by calMask and depend on IDAC resolution.
1943:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          */
1944:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         do
1945:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
1946:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Decrease IDAC until rawData reaches rawLevel */
1947:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (rawData0 < rawLevel)
1948:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1949:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Reset bit for null channel (decrease IDAC -> will increase rawData) */
1950:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[0u] &= (uint8)(~calMask);
1951:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1952:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1953:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 if (rawData1 < rawLevel)
1954:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
1955:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[CapSense_1_FREQ_CHANNEL_1] &= (uint8)(~calMask);
1956:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
1957:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 if (rawData2 < rawLevel)
1958:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
1959:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[CapSense_1_FREQ_CHANNEL_2] &= (uint8)(~calMask);
1960:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
1961:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1962:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1963:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /*
1964:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             * Shift calMask to set or reset next bit.
1965:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             * Perform scan even if callibration mask is equal to zero.
1966:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             * It gives raw counts for the last changed IDAC.
1967:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             */
1968:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calMask >>= 1u;
1969:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1970:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set bit for null channel */
1971:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[0u] |= (uint8)calMask;
1972:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1973:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_1] |= (uint8)calMask;
1974:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_2] |= (uint8)calMask;
1975:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1976:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1977:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Update IDAC */
1978:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDSetUpIdacs(ptrWdgt);
1979:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1980:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Scan sensor */
1981:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDScanExt();
1982:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1983:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Initialize Watchdog Counter with time interval which is enough to charge 100 nF capa
1984:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter = CapSense_1_CSD_CALIBR_WATCHDOG_CYCLES_NUM;
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while (((CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY) != 0u) &&
1986:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
1987:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
1988:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Wait until scan complete and decrement Watchdog Counter to prevent unending loop
1989:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 watchdogCounter--;
1990:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
1991:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
1992:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Read rawData */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 51


1993:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             rawData0 = CapSense_1_curRamSnsPtr->raw[0u];
1994:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1995:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 rawData1 = CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_1];
1996:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 rawData2 = CapSense_1_curRamSnsPtr->raw[CapSense_1_FREQ_CHANNEL_2];
1997:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
1998:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
1999:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while (calMask > 0u);
2000:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2001:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2002:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDDisconnectSnsExt((uint32)CapSense_1_widgetIndex, (uint32)CapSense_1_sen
2003:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2004:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* initialize pointer to sensor IO structure */
2005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
2006:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
2007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             + CapSense_1_sensorIndex;
2008:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2009:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disable sensor */
2010:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_CSDDisconnectSns(CapSense_1_curSnsIOPtr);
2011:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2012:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2013:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set flag about disconnecting the electrode */
2014:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_eleCsdDisconnectFlag = 0u;
2015:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2016:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2017:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Restore IDAC configuration to default state */
2018:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDRestoreIdacMode();
2019:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2020:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2021:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Check if IDAC is in correct range */
2022:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         calibrateStatus = CapSense_1_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData0);
2023:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2024:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus |= CapSense_1_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData1);
2025:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus |= CapSense_1_SsCSDCalibrateCheck(ptrWdgt, rawLevel, (uint32)rawData2);
2026:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2027:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2028:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /*
2029:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * Update maximum IDAC value in widget. iDAC8Max variable will contain
2030:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          * maximum IDAC value after all the sensors in a widget have been scanned.
2031:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****          */
2032:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (*iDAC8Max < ptrIdac[0u])
2033:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2034:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             *iDAC8Max = ptrIdac[0u];
2035:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2036:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Stores IDAC and raw count that corresponds to a sensor with maximum Cp within a 
2037:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_calibratedIdac = *iDAC8Max;
2038:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_calibratedRawcount = rawData0;
2039:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2040:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2041:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2042:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (iDAC8Max[CapSense_1_FREQ_CHANNEL_1] < ptrIdac[CapSense_1_FREQ_CHANNEL_1])
2043:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2044:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 iDAC8Max[CapSense_1_FREQ_CHANNEL_1] = ptrIdac[CapSense_1_FREQ_CHANNEL_1];
2045:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2046:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if (iDAC8Max[CapSense_1_FREQ_CHANNEL_2] < ptrIdac[CapSense_1_FREQ_CHANNEL_2])
2047:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2048:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 iDAC8Max[CapSense_1_FREQ_CHANNEL_2] = ptrIdac[CapSense_1_FREQ_CHANNEL_2];
2049:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 52


2050:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2051:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2052:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2053:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /*
2054:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * Store temporary ModIDAC8 value (in single-IDAC mode) in idacComp variable.
2055:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * We need this value to calculate idacMod value the in the dual-IDAC mode.
2056:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              */
2057:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_curRamSnsPtr->idacComp[0u] = ptrIdac[0u];
2058:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2059:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] = ptrIdac[CapSense_1_F
2060:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] = ptrIdac[CapSense_1_F
2061:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2062:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2063:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2064:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         return (calibrateStatus);
2065:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
2066:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2067:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2068:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
2069:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_CSDCalibrateWidget
2070:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
2071:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2072:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
2073:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Executes the IDAC calibration for all the sensors in the widget specified in
2074:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  the input.
2075:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2076:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
2077:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Performs a successive approximation search algorithm to find appropriate
2078:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  IDAC values for sensors in the specified widget that provides the raw
2079:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  count to the level specified by the target parameter.
2080:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2081:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Calibration is always performed in the single IDAC mode and if the dual
2082:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  IDAC mode (Enable compensation IDAC is enabled) is configured, the IDAC
2083:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  values are re-calculated to match the raw count target. If a widget
2084:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  consists of two or more elements (buttons, slider segments, etc.), then
2085:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  calibration is performed by the element with the highest sensor
2086:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  capacitance.
2087:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2088:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Calibration fails if the achieved raw count is outside of the +/-10%
2089:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  range of the target.
2090:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2091:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function is available when the CSD Enable IDAC auto-calibration
2092:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  parameter is enabled or the  SmartSense auto-tuning mode is configured.
2093:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2094:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param widgetId
2095:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Specifies the ID number of the CSD widget to calibrate its raw count.
2096:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  A macro for the widget ID can be found in the
2097:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  CapSense_1 Configuration header file defined as
2098:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  CapSense_1_<WidgetName>_WDGT_ID.
2099:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2100:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \param target
2101:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Specifies the calibration target in percentages of the maximum raw count.
2102:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2103:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \return
2104:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  Returns the status of the specified widget calibration:
2105:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    - CYRET_SUCCESS - The operation is successfully completed.
2106:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    - CYRET_BAD_PARAM - The input parameter is invalid.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 53


2107:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *    - CYRET_BAD_DATA - The calibration failed and the Component may not operate as expected.
2108:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2109:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
2110:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     cystatus CapSense_1_CSDCalibrateWidget(uint32 widgetId, uint32 target)
2111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
2112:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 rawLevel;
2113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
2114:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2115:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2116:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2117:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 uint8 maxIdac = 1u;
2118:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 uint16 maxRaw = 1u;
2119:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /*(CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2120:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2122:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Declare and initialize ptr to widget and sensor structures to appropriate address */
2123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2124:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2125:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2126:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (1u == CapSense_1_NUM_SCAN_FREQS)
2127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint8 iDAC8Max[CapSense_1_NUM_SCAN_FREQS] = {1u};
2128:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint8 iDAC8Max[CapSense_1_NUM_SCAN_FREQS] = {1u, 1u, 1u};
2130:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (1u == CapSense_1_NUM_SCAN_FREQS) */
2131:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2132:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint8 *ptrIdac;
2133:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2134:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calibrate maximum level for given resolution */
2135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         rawLevel = (0x00000001Lu << ptrWdgt->resolution) - 1u;
2136:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Calculate percentage of maximum value */
2138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         rawLevel = (rawLevel * target) / CapSense_1_PERCENTAGE_100;
2139:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Update CapSense_1_widgetIndex */
2141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_widgetIndex = (uint8)widgetId;
2142:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2143:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Setup ISR handler to single-sensor scan function */
2144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_ISR_StartEx(&CapSense_1_CSDPostSingleScan);
2145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2146:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init pointer to Modulator IDAC */
2147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         ptrIdac = &ptrWdgt->idacMod[0u];
2148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2149:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_calibratedIdac = 1u;
2151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_calibratedRawcount = 1u;
2152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2153:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2154:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Go through all the sensors (or columns of touchpad) of widget to calibrate them */
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         for (CapSense_1_sensorIndex = 0u;
2156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex++)
2158:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2159:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Calibrate current sensor in widget */
2160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             calibrateStatus |= CapSense_1_SsCSDCalibrateOneSensor(rawLevel, ptrIdac, iDAC8Max);
2161:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2162:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2163:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Normalize idacMod and idacComp values */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 54


2164:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
2165:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Calculate Modulator value: idacMod = (iDAC8Max + 1)/2 */
2166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[0u] = (iDAC8Max[0u] + 1u) >> 1u;
2167:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2168:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_1] =  (iDAC8Max[CapSense_1_FREQ_CHANNEL_1] + 1u) >>
2169:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_2] = (iDAC8Max[CapSense_1_FREQ_CHANNEL_2] + 1u) >> 
2170:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2171:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2172:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Go through all columns of touchpad (or all the sensors in button) to normalize them 
2173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             for (CapSense_1_sensorIndex = 0u;
2174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex++)
2176:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
2178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_1_sensorIndex
2179:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * Target *
2180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 if (CapSense_1_curRamSnsPtr->idacComp[0u] >= ptrIdac[0u])
2181:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
2182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[0u] -= ptrIdac[0u];
2183:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2184:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          (CapSense_1_DISABLE == CapSense_1_CSDV2))
2185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[0u] =
2186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[0u]) + CapSense_1
2187:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_PERCENTAGE_100);
2188:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2189:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2190:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
2191:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 else
2192:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
2193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_curRamSnsPtr->idacComp[0u] = 0u;
2194:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
2195:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2196:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Do same for first frequency channel */
2197:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] >= ptrIdac[Cap
2198:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2199:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] -= ptrIdac[Cap
2200:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2201:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                              (CapSense_1_DISABLE == CapSense_1_CSDV2))
2202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] =
2203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FR
2204:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_100);
2205:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2206:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                    (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2208:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else
2209:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                        CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] = 0u;
2211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Do same for second frequency channel */
2213:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] >= ptrIdac[Cap
2214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2215:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] -= ptrIdac[Cap
2216:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                              (CapSense_1_DISABLE == CapSense_1_CSDV2))
2218:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] =
2219:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FR
2220:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_100);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 55


2221:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2222:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                    (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2223:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2224:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     else
2225:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2226:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] = 0u;
2227:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2230:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2231:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Normalize widget for single-IDAC mode*/
2232:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             ptrIdac[0u] = iDAC8Max[0u];
2233:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2234:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_1] = iDAC8Max[CapSense_1_FREQ_CHANNEL_1];
2235:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac[CapSense_1_FREQ_CHANNEL_2] = iDAC8Max[CapSense_1_FREQ_CHANNEL_2];
2236:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2237:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2238:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2240:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
2241:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
2242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Init pointer to Modulator IDAC for columns */
2244:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 ptrIdac = &ptrWdgt->rowIdacMod[0u];
2245:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2246:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Reset the maximum value for columns */
2247:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 iDAC8Max[0u] = 1u;
2248:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2249:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     iDAC8Max[CapSense_1_FREQ_CHANNEL_1] = 1u;
2250:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     iDAC8Max[CapSense_1_FREQ_CHANNEL_2] = 1u;
2251:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2252:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2253:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2254:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     maxIdac = CapSense_1_calibratedIdac;
2255:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     maxRaw = CapSense_1_calibratedRawcount;
2256:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedIdac = 1u;
2257:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedRawcount = 1u;
2258:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2259:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2260:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Go through all columns of touchpad to calibrate them */
2261:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 for (CapSense_1_sensorIndex = CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2262:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                      CapSense_1_sensorIndex < (uint8)CapSense_1_dsFlash.wdgtArray[widgetId].totalNu
2263:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                      CapSense_1_sensorIndex++)
2264:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
2265:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Calibrate current sensor in widget */
2266:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     calibrateStatus |= CapSense_1_SsCSDCalibrateOneSensor(rawLevel, ptrIdac, iDAC8M
2267:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
2268:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2269:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
2270:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedIdacRow = CapSense_1_calibratedIdac;
2271:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedRawcountRow = CapSense_1_calibratedRawcount;
2272:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedIdac = maxIdac;
2273:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     CapSense_1_calibratedRawcount = maxRaw;
2274:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
2275:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2276:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Normalize idacMod and idacComp values */
2277:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 56


2278:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Calculate Modulator value: idacMod = (iDAC8Max + 1)/2 */
2279:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[0u] = (iDAC8Max[0u] + 1u) >> 1u;
2280:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2281:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_1] =  (iDAC8Max[CapSense_1_FREQ_CHANNEL_1] 
2282:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_2] = (iDAC8Max[CapSense_1_FREQ_CHANNEL_2] +
2283:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2284:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2285:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Go through all columns of touchpad to normalize them */
2286:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     for (CapSense_1_sensorIndex = CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
2287:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_sensorIndex < (uint8)CapSense_1_dsFlash.wdgtArray[widgetId].tot
2288:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_sensorIndex++)
2289:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     {
2290:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_curRamSnsPtr = (CapSense_1_RAM_SNS_STRUCT *)
2291:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                  CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_1_sen
2292:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2293:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * 
2294:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         if (CapSense_1_curRamSnsPtr->idacComp[0u] >= ptrIdac[0u])
2295:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         {
2296:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_curRamSnsPtr->idacComp[0u] -= ptrIdac[0u];
2297:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
2298:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                  (CapSense_1_DISABLE == CapSense_1_CSDV2))
2299:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_curRamSnsPtr->idacComp[0u] =
2300:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[0u]) +
2301:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_10
2302:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)
2303:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                        (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2304:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         }
2305:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2306:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             /* Do same for first frequency channel */
2307:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] >= ptr
2308:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             {
2309:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] -= ptr
2310:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) |
2311:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                      (CapSense_1_DISABLE == CapSense_1_CSDV2))
2312:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_1] =
2313:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSe
2314:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_10
2315:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP
2316:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2317:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             }
2318:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             /* Do same for second frequency channel */
2319:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             if (CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] >= ptr
2320:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             {
2321:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] -= ptr
2322:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) |
2323:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                      (CapSense_1_DISABLE == CapSense_1_CSDV2))
2324:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_curRamSnsPtr->idacComp[CapSense_1_FREQ_CHANNEL_2] =
2325:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[CapSe
2326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_PERCENTAGE_100) - 1u) / CapSense_1_PERCENTAGE_10
2327:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                 #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP
2328:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                            (CapSense_1_DISABLE == CapSense_1_CSDV2)) */
2329:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             }
2330:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2331:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     }
2332:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #else
2333:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     /* Normalize widget for single-IDAC mode*/
2334:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     ptrIdac[0u] = iDAC8Max[0u];
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 57


2335:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
2336:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_1] = iDAC8Max[CapSense_1_FREQ_CHANNEL_1];
2337:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         ptrIdac[CapSense_1_FREQ_CHANNEL_2] = iDAC8Max[CapSense_1_FREQ_CHANNEL_2];
2338:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2339:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
2340:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2341:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2342:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_sensorIndex = 0u;
2344:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2345:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         return calibrateStatus;
2346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
2347:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) || \
2348:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)) */
2349:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2350:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2351:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
2352:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /*******************************************************************************
2353:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * Function Name: CapSense_1_SsCSDClockRestart
2354:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     ****************************************************************************//**
2355:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2356:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \brief
2357:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  This function restarts the clocks.
2358:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2359:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     * \details
2360:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  The function performs following:
2361:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  1) Stops, sets dividers and starts ModClk clock;
2362:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  2) Stops and starts SnsClk clock;
2363:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *  3) Scan one cycle to reset the flip-flop for Direct clock mode.
2364:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *
2365:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     *******************************************************************************/
2366:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CY_INLINE static void CapSense_1_SsCSDClockRestart(void)
2367:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
2368:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Stop clocks, set dividers, and start clock to align clock phase */
2369:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_SsSetModClkClockDivider((uint32)CapSense_1_dsRam.modCsdClk);
2370:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
2372:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Stop sense clock clock   */
2373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
2374:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          ((uint32)CapSense_1_SnsClk__DIV_ID <<
2375:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_SNSCLK_CMD_DIV_SHIFT)|
2376:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          ((uint32)CapSense_1_SNSCLK_CMD_DISABLE_MASK));
2377:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2378:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Check whether previous sense clock start command has finished. */
2379:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) & CapSense_1_SNSCLK_CMD_ENABLE_MAS
2380:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2381:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Wait until previous sense clock start command has finished. */
2382:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2383:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2384:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Start sense clock aligned to previously started modulator clock. */
2385:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
2386:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_S
2387:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_SNSCLK_CMD_PA_DIV_SHI
2388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                           CapSense_1_SNSCLK_CMD_ENABLE_MASK));
2389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2390:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Clear bit to disable SnsClk clock. */
2391:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 58


2392:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
2393:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          (uint32)(~(uint32)CapSense_1_SnsClk__ENABLE_MASK));
2394:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2395:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set bit to enable SnsClk clock. */
2396:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
2397:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
2398:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                         CapSense_1_SnsClk__ENABLE_MASK);
2399:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
2400:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2401:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE)
2402:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Scan one cycle to reset the flip-flop for Direct clock mode */
2403:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyIntDisable(CapSense_1_ISR_NUMBER);
2404:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_COUNTER_PTR, CapSense_1_ONE_CYCLE);
2405:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2406:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while(0u != (CY_GET_REG32(CapSense_1_COUNTER_PTR) & CapSense_1_RESOLUTION_16_BITS))
2407:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
2408:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Wait until scanning is complete */
2409:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
2410:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_SET_MASK);
2411:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CyIntClearPending(CapSense_1_ISR_NUMBER);
2412:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CLK_SOURCE_DIRECT == CapSense_1_CSD_SNS_CLK_SOURCE) */
2413:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
2414:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
2415:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2416:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2417:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
2418:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDCmodPrecharge
2419:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
2420:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2421:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
2422:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function initializes the Cmod charging to Vref.
2423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
2425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Third-generation HW block:
2426:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The function initializes the Cmod charging to Vref.
2427:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Then it waits the even when Cmod is completely charged
2428:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  to Vref to have stable raw counts. Software Watchdog Counter is implemented to
2429:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  prevent the project hanging.
2430:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2432:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Coarse initialization for CMOD and Cch.
2433:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The coarse initialization is performed by HSCOMP.
2434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The HSCOMP monitors the Cmod voltage via Cmod sense path
2435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and charges the Cmod using HCAV switch via CSDBUS-A, AMUXBUS-A
2436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and static connection of Cmod to AMUXBUS-A.
2437:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2438:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
2439:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDCmodPrecharge(void)
2440:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
2441:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2442:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2443:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2445:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
2446:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) &&\
2447:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
2448:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             uint32 tmpRegValue;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 59


2449:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif
2450:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2451:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_CSD_CSDCMP_INIT);
 780              		.loc 1 2451 0
 781 000e 0023     		movs	r3, #0
 782 0010 2949     		ldr	r1, .L51+4
 783 0012 0B60     		str	r3, [r1]
2452:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR,  CapSense_1_CSD_SW_FW_MOD_SEL_INIT);
 784              		.loc 1 2452 0
 785 0014 2949     		ldr	r1, .L51+8
 786 0016 0B60     		str	r3, [r1]
2453:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR, CapSense_1_CSD_SW_FW_TANK_SEL_INIT);
 787              		.loc 1 2453 0
 788 0018 2949     		ldr	r1, .L51+12
 789 001a 0B60     		str	r3, [r1]
2454:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,  CapSense_1_CSD_SW_SHIELD_SEL_INIT);
 790              		.loc 1 2454 0
 791 001c 0620     		movs	r0, #6
 792 001e 2949     		ldr	r1, .L51+16
 793 0020 0860     		str	r0, [r1]
2455:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
2456:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /*
2457:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2458:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              * Connect AMUXBUS-B to HSCMP positive input
2459:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              */
2460:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_SW_HS_P_SEL_COARSE);
2461:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2462:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(0u != CapSense_1_CSD_SHIELD_TANK_EN)
2463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Connect CTANK to AMUXBUS-A */
2464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tmpRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
2465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tmpRegValue &= (uint32)(~(uint32)CapSense_1_CSH_HSIOM_MASK);
2466:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 tmpRegValue |= (CapSense_1_HSIOM_SEL_AMUXA << CapSense_1_CSH_HSIOM_SHIFT);
2467:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, tmpRegValue);
2468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (0u != CapSense_1_CSD_SHIELD_TANK_EN) */
2469:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2470:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect CMOD to (sense path) to HSCOMP: HMPM or HMPS or HMPT switches depend on Cmod
2471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_SW_HS_P_SEL_COARSE);
 794              		.loc 1 2471 0
 795 0022 FA30     		adds	r0, r0, #250
 796 0024 2849     		ldr	r1, .L51+20
 797 0026 0860     		str	r0, [r1]
2472:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
2473:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2474:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR, CapSense_1_CSD_SW_RES_INIT);
 798              		.loc 1 2474 0
 799 0028 2849     		ldr	r1, .L51+24
 800 002a 0A60     		str	r2, [r1]
2475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Clear all interrupt pending requests */
2477:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_ALL_MASK);
 801              		.loc 1 2477 0
 802 002c 8321     		movs	r1, #131
 803 002e 4900     		lsls	r1, r1, #1
 804 0030 274A     		ldr	r2, .L51+28
 805 0032 1160     		str	r1, [r2]
2478:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2479:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_MASK_PTR, CapSense_1_CLEAR_MASK);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 60


 806              		.loc 1 2479 0
 807 0034 274A     		ldr	r2, .L51+32
 808 0036 1360     		str	r3, [r2]
2480:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2481:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Start SEQUENCER for coarse initialization for Cmod */
2482:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_SEQ_MODE_MASK |
 809              		.loc 1 2482 0
 810 0038 0322     		movs	r2, #3
 811 003a 274B     		ldr	r3, .L51+36
 812 003c 1A60     		str	r2, [r3]
 813              	.LVL82:
2483:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                          CapSense_1_SEQ_START_START_MASK);
2484:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2485:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2486:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         watchdogCounter = CapSense_1_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
 814              		.loc 1 2486 0
 815 003e E123     		movs	r3, #225
 816 0040 1B02     		lsls	r3, r3, #8
 817 0042 00E0     		b	.L44
 818              	.LVL83:
 819              	.L46:
2487:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2488:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait for INTR.INIT goes high */
2489:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_1_INTR_PTR) & CapSense_1_INTR_INIT_MASK)) && (0u != wat
2490:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2491:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter--;
 820              		.loc 1 2491 0
 821 0044 013B     		subs	r3, r3, #1
 822              	.LVL84:
 823              	.L44:
2489:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 824              		.loc 1 2489 0
 825 0046 224A     		ldr	r2, .L51+28
 826 0048 1268     		ldr	r2, [r2]
 827 004a 5207     		lsls	r2, r2, #29
 828 004c 01D4     		bmi	.L45
 829 004e 002B     		cmp	r3, #0
 830 0050 F8D1     		bne	.L46
 831              	.L45:
2492:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2493:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2494:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         if (0u == watchdogCounter)
 832              		.loc 1 2494 0
 833 0052 002B     		cmp	r3, #0
 834 0054 02D1     		bne	.L47
2495:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2496:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Set sequencer to idle state if coarse initialization fails */
2497:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_ABORT_MASK);
 835              		.loc 1 2497 0
 836 0056 0822     		movs	r2, #8
 837 0058 1F4B     		ldr	r3, .L51+36
 838              	.LVL85:
 839 005a 1A60     		str	r2, [r3]
 840              	.L47:
 841              	.LBE7:
 842              	.LBE6:
 843              	.LBB8:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 61


 844              	.LBB9:
2498:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2500:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
2501:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2502:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 tmpRegValue;
2503:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 newRegValue;
2504:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
2505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Save the current IDAC configuration */
2507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         tmpRegValue = CY_GET_REG32(CapSense_1_IDAC_PTR);
2508:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2509:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait until Cmod discharges below Vref */
2510:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyDelayCycles(CapSense_1_CMOD_DISCHARGE_CYCLES);
2511:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2512:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegValue = CapSense_1_CSD_IDAC_PRECHARGE_CONFIG | (tmpRegValue & ~CapSense_1_IDAC_MOD_CF
2513:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2514:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set the IDAC configuration for fast Cmod precharge to Vref */
2515:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_PTR, newRegValue);
2516:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2517:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
2518:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CY_GET_REG32(CapSense_1_CONFIG_PTR) & ~CapSense_1_C
2519:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
2520:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2521:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2522:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         watchdogCounter = CapSense_1_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
2523:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2524:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait until Cmod reaches to Vref */
2525:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while((0u == (CY_GET_REG32(CapSense_1_STATUS_PTR) & CapSense_1_STATUS_SAMPLE)) && (0u != wa
2526:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2527:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter--;
2528:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2529:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2530:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
2531:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_CONFIG_PTR, CY_GET_REG32(CapSense_1_CONFIG_PTR) | CapSense_1_CO
2532:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG) */
2533:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2534:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Restore the current IDAC configuration */
2535:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_IDAC_PTR, tmpRegValue);
2536:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2537:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable the sense modulator output */
2538:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd | CapSense_1_CTANK_PRECHARGE_CONFI
2539:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2540:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntEnable(CapSense_1_ISR_NUMBER);
2541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2542:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
2544:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2545:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2546:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** /*******************************************************************************
2547:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * Function Name: CapSense_1_SsCSDTriggerScan
2548:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** ****************************************************************************//**
2549:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2550:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \brief
2551:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  This function triggers the scanning.
2552:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2553:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** * \details
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 62


2554:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Third-generation HW block:
2555:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Writes resolution to start the scanning.
2556:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2557:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For Fourth-generation HW block:
2558:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Trigger the fine initialization (scan some dummy cycles) and start sampling.
2559:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  Fine initialization for CMOD and Start scan.
2560:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  For the fine initialization and sampling, Cmod is static connected to AMUXBUS-A
2561:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  and in every conversion (one cycle of SnsClk), the sensor capacitance is charged
2562:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  from Cmod and discharged to ground using the switches in GPIO cell.
2563:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  The CSDCOMP monitors voltage on Cmod using the sense path and charges Cmod back
2564:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *  to Vref using IDACs by connecting IDAC to CSDBUS-A and then the AMUXBUS-A.
2565:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *
2566:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** *******************************************************************************/
2567:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** CY_INLINE static void CapSense_1_SsCSDTriggerScan(void)
2568:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** {
2569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2570:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2571:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Fourth-generation HW block section */
2572:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2573:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
2574:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Clear previous interrupts */
2576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_PTR, CapSense_1_INTR_ALL_MASK);
 845              		.loc 1 2576 0
 846 005c 8322     		movs	r2, #131
 847 005e 5200     		lsls	r2, r2, #1
 848 0060 1B4B     		ldr	r3, .L51+28
 849 0062 1A60     		str	r2, [r3]
2577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2578:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Clear pending interrupts  */
2579:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntClearPending(CapSense_1_ISR_NUMBER);
 850              		.loc 1 2579 0
 851 0064 0A20     		movs	r0, #10
 852 0066 FFF7FEFF 		bl	CyIntClearPending
 853              	.LVL86:
2580:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2581:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable CSD interrupt */
2582:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CyIntEnable(CapSense_1_ISR_NUMBER);
 854              		.loc 1 2582 0
 855 006a 0A20     		movs	r0, #10
 856 006c FFF7FEFF 		bl	CyIntEnable
 857              	.LVL87:
2583:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2584:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2585:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_HS_P_SEL_PTR, CapSense_1_CSD_SW_HS_P_SEL_SCAN);
 858              		.loc 1 2585 0
 859 0070 0023     		movs	r3, #0
 860 0072 154A     		ldr	r2, .L51+20
 861 0074 1360     		str	r3, [r2]
2586:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2587:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Set scanning configuration for switches */
2588:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_MOD_SEL_PTR, CapSense_1_CSD_SW_FW_MOD_SEL_SCAN);
 862              		.loc 1 2588 0
 863 0076 114A     		ldr	r2, .L51+8
 864 0078 1360     		str	r3, [r2]
2589:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_FW_TANK_SEL_PTR,CapSense_1_CSD_SW_FW_TANK_SEL_SCAN);
 865              		.loc 1 2589 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 63


 866 007a 114A     		ldr	r2, .L51+12
 867 007c 1360     		str	r3, [r2]
2590:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2591:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_SHIELD_SEL_PTR,  CapSense_1_CSD_SW_SHIELD_SEL_SCAN);
 868              		.loc 1 2591 0
 869 007e 114A     		ldr	r2, .L51+16
 870 0080 1360     		str	r3, [r2]
2592:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2593:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && (CapSense_1_ENABLE == CapSense_1_CSD
2594:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Connect CTANK to AMUXBUS-B */
2595:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_SsCSDEnableShieldTank();
2596:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && (CapSense_1_ENABLE == CapSens
2597:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2598:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SW_RES_PTR, CapSense_1_CSD_SW_RES_SCAN);
 871              		.loc 1 2598 0
 872 0082 A021     		movs	r1, #160
 873 0084 114A     		ldr	r2, .L51+24
 874 0086 1160     		str	r1, [r2]
2599:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_CSDCMP_PTR, CapSense_1_CSD_CSDCMP_SCAN);
 875              		.loc 1 2599 0
 876 0088 9F39     		subs	r1, r1, #159
 877 008a 0B4A     		ldr	r2, .L51+4
 878 008c 1160     		str	r1, [r2]
2600:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2601:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN)
2602:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Disable HSCOMP during the sampling phase when shield is disabled */
2603:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_HSCMP_PTR, 0u);
 879              		.loc 1 2603 0
 880 008e 094A     		ldr	r2, .L51
 881 0090 1360     		str	r3, [r2]
2604:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
2605:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_HSCMP_PTR, CapSense_1_HSCMP_SCAN_MASK);
2606:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_DISABLE == CapSense_1_CSD_SHIELD_EN) */
2607:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2608:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE)
2609:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             /* Force the LFSR to it's initial state (all ones) */
2610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, CY_GET_REG32(CapSense_1_SENSE_PERIOD_PTR) |
2611:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                            CapSense_1_SENSE_PERIOD_LFSR_CLEAR_MASK)
2612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CLK_SOURCE_DIRECT != CapSense_1_CSD_SNS_CLK_SOURCE) */
2613:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2614:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Enable SAMPLE interrupt */
2615:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_INTR_MASK_PTR, CapSense_1_INTR_MASK_SAMPLE_MASK);
 882              		.loc 1 2615 0
 883 0092 0222     		movs	r2, #2
 884 0094 0F4B     		ldr	r3, .L51+32
 885 0096 1A60     		str	r2, [r3]
 886              	.LVL88:
2616:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2617:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Init Watchdog Counter to prevent a hang */
2618:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         watchdogCounter = CapSense_1_CSD_PRECHARGE_WATCHDOG_CYCLES_NUM;
 887              		.loc 1 2618 0
 888 0098 E123     		movs	r3, #225
 889 009a 1B02     		lsls	r3, r3, #8
 890 009c 00E0     		b	.L48
 891              	.LVL89:
 892              	.L50:
2619:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 64


2620:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Wait for IDLE state of the HW sequencer */
2621:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         while((0u != (CapSense_1_STAT_SEQ_REG & CapSense_1_STAT_SEQ_SEQ_STATE_MASK)) && (0u != watc
2622:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
2623:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             watchdogCounter--;
 893              		.loc 1 2623 0
 894 009e 013B     		subs	r3, r3, #1
 895              	.LVL90:
 896              	.L48:
2621:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 897              		.loc 1 2621 0
 898 00a0 0E4A     		ldr	r2, .L51+40
 899 00a2 1268     		ldr	r2, [r2]
 900 00a4 5207     		lsls	r2, r2, #29
 901 00a6 01D0     		beq	.L49
 902 00a8 002B     		cmp	r3, #0
 903 00aa F8D1     		bne	.L50
 904              	.L49:
2624:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
2625:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
2626:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         /* Start SEQUENCER for fine initialization scan for Cmod and then for normal scan */
2627:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(CapSense_1_SEQ_START_PTR, CapSense_1_SEQ_START_AZ0_SKIP_MASK |
 905              		.loc 1 2627 0
 906 00ac 0C4A     		ldr	r2, .L51+44
 907 00ae 0A4B     		ldr	r3, .L51+36
 908              	.LVL91:
 909 00b0 1A60     		str	r2, [r3]
 910              	.LBE9:
 911              	.LBE8:
1326:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 912              		.loc 1 1326 0
 913              		@ sp needed
 914 00b2 10BD     		pop	{r4, pc}
 915              	.L52:
 916              		.align	2
 917              	.L51:
 918 00b4 80010B40 		.word	1074463104
 919 00b8 8C010B40 		.word	1074463116
 920 00bc B0020B40 		.word	1074463408
 921 00c0 B4020B40 		.word	1074463412
 922 00c4 88020B40 		.word	1074463368
 923 00c8 80020B40 		.word	1074463360
 924 00cc F0010B40 		.word	1074463216
 925 00d0 F0000B40 		.word	1074462960
 926 00d4 F8000B40 		.word	1074462968
 927 00d8 40030B40 		.word	1074463552
 928 00dc 00000B40 		.word	1074462720
 929 00e0 01030000 		.word	769
 930              		.cfi_endproc
 931              	.LFE12:
 932              		.size	CapSense_1_SsCSDStartSample, .-CapSense_1_SsCSDStartSample
 933              		.section	.text.CapSense_1_CSDScanExt,"ax",%progbits
 934              		.align	2
 935              		.global	CapSense_1_CSDScanExt
 936              		.code	16
 937              		.thumb_func
 938              		.type	CapSense_1_CSDScanExt, %function
 939              	CapSense_1_CSDScanExt:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 65


 940              	.LFB13:
1371:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     /* Set Start of sensor scan flag */
 941              		.loc 1 1371 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945 0000 10B5     		push	{r4, lr}
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 4, -8
 948              		.cfi_offset 14, -4
1373:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 949              		.loc 1 1373 0
 950 0002 054A     		ldr	r2, .L54
 951 0004 D368     		ldr	r3, [r2, #12]
 952 0006 0549     		ldr	r1, .L54+4
 953 0008 0B43     		orrs	r3, r1
 954 000a D360     		str	r3, [r2, #12]
1383:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_ANALOG_STARTUP_DELAY_US > 0uL) */
 955              		.loc 1 1383 0
 956 000c 0A20     		movs	r0, #10
 957 000e FFF7FEFF 		bl	CyDelayUs
 958              	.LVL92:
1388:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 959              		.loc 1 1388 0
 960 0012 FFF7FEFF 		bl	CapSense_1_SsCSDStartSample
 961              	.LVL93:
1389:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 962              		.loc 1 1389 0
 963              		@ sp needed
 964 0016 10BD     		pop	{r4, pc}
 965              	.L55:
 966              		.align	2
 967              	.L54:
 968 0018 00000000 		.word	CapSense_1_dsRam
 969 001c 80000100 		.word	65664
 970              		.cfi_endproc
 971              	.LFE13:
 972              		.size	CapSense_1_CSDScanExt, .-CapSense_1_CSDScanExt
 973              		.section	.text.CapSense_1_CSDConnectSns,"ax",%progbits
 974              		.align	2
 975              		.global	CapSense_1_CSDConnectSns
 976              		.code	16
 977              		.thumb_func
 978              		.type	CapSense_1_CSDConnectSns, %function
 979              	CapSense_1_CSDConnectSns:
 980              	.LFB17:
1642:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 newRegisterValue;
 981              		.loc 1 1642 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985              	.LVL94:
 986 0000 70B5     		push	{r4, r5, r6, lr}
 987              		.cfi_def_cfa_offset 16
 988              		.cfi_offset 4, -16
 989              		.cfi_offset 5, -12
 990              		.cfi_offset 6, -8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 66


 991              		.cfi_offset 14, -4
 992 0002 0400     		movs	r4, r0
1649:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinHSIOMShift = (uint32)snsAddrPtr->hsiomShift;
 993              		.loc 1 1649 0
 994 0004 857E     		ldrb	r5, [r0, #26]
 995              	.LVL95:
1650:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 996              		.loc 1 1650 0
 997 0006 067E     		ldrb	r6, [r0, #24]
 998              	.LVL96:
1652:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 999              		.loc 1 1652 0
 1000 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1001              	.LVL97:
1655:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue &= ~(CapSense_1_HSIOM_SEL_MASK << pinHSIOMShift);
 1002              		.loc 1 1655 0
 1003 000c 2368     		ldr	r3, [r4]
 1004 000e 1B68     		ldr	r3, [r3]
 1005              	.LVL98:
1656:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     newRegisterValue |= (uint32)((uint32)CapSense_1_HSIOM_SEL_CSD_SENSE << pinHSIOMShift);
 1006              		.loc 1 1656 0
 1007 0010 0F22     		movs	r2, #15
 1008 0012 B240     		lsls	r2, r2, r6
 1009 0014 9343     		bics	r3, r2
 1010              	.LVL99:
 1011 0016 1A00     		movs	r2, r3
 1012              	.LVL100:
1657:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1013              		.loc 1 1657 0
 1014 0018 0423     		movs	r3, #4
 1015 001a B340     		lsls	r3, r3, r6
 1016 001c 1343     		orrs	r3, r2
 1017              	.LVL101:
1660:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1018              		.loc 1 1660 0
 1019 001e 6668     		ldr	r6, [r4, #4]
 1020              	.LVL102:
 1021 0020 3268     		ldr	r2, [r6]
 1022 0022 0721     		movs	r1, #7
 1023 0024 A940     		lsls	r1, r1, r5
 1024 0026 8A43     		bics	r2, r1
 1025 0028 3260     		str	r2, [r6]
1663:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1026              		.loc 1 1663 0
 1027 002a 2268     		ldr	r2, [r4]
 1028 002c 1360     		str	r3, [r2]
1665:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 1029              		.loc 1 1665 0
 1030 002e FFF7FEFF 		bl	CyExitCriticalSection
 1031              	.LVL103:
1666:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1032              		.loc 1 1666 0
 1033              		@ sp needed
 1034              	.LVL104:
 1035              	.LVL105:
 1036 0032 70BD     		pop	{r4, r5, r6, pc}
 1037              		.cfi_endproc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 67


 1038              	.LFE17:
 1039              		.size	CapSense_1_CSDConnectSns, .-CapSense_1_CSDConnectSns
 1040              		.section	.text.CapSense_1_CSDScan,"ax",%progbits
 1041              		.align	2
 1042              		.global	CapSense_1_CSDScan
 1043              		.code	16
 1044              		.thumb_func
 1045              		.type	CapSense_1_CSDScan, %function
 1046              	CapSense_1_CSDScan:
 1047              	.LFB14:
1423:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 1048              		.loc 1 1423 0
 1049              		.cfi_startproc
 1050              		@ args = 0, pretend = 0, frame = 0
 1051              		@ frame_needed = 0, uses_anonymous_args = 0
 1052 0000 70B5     		push	{r4, r5, r6, lr}
 1053              		.cfi_def_cfa_offset 16
 1054              		.cfi_offset 4, -16
 1055              		.cfi_offset 5, -12
 1056              		.cfi_offset 6, -8
 1057              		.cfi_offset 14, -4
1425:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1058              		.loc 1 1425 0
 1059 0002 154E     		ldr	r6, .L58
 1060 0004 3378     		ldrb	r3, [r6]
1424:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetI
 1061              		.loc 1 1424 0
 1062 0006 154D     		ldr	r5, .L58+4
 1063 0008 5B01     		lsls	r3, r3, #5
 1064 000a EB18     		adds	r3, r5, r3
 1065 000c 5868     		ldr	r0, [r3, #4]
 1066              	.LVL106:
1431:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1067              		.loc 1 1431 0
 1068 000e 144C     		ldr	r4, .L58+8
 1069 0010 0023     		movs	r3, #0
 1070 0012 2370     		strb	r3, [r4]
1434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].
 1071              		.loc 1 1434 0
 1072 0014 3378     		ldrb	r3, [r6]
1435:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
 1073              		.loc 1 1435 0
 1074 0016 5B01     		lsls	r3, r3, #5
 1075 0018 EB18     		adds	r3, r5, r3
 1076 001a 9968     		ldr	r1, [r3, #8]
1436:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1077              		.loc 1 1436 0
 1078 001c 2378     		ldrb	r3, [r4]
 1079 001e DBB2     		uxtb	r3, r3
 1080 0020 9A00     		lsls	r2, r3, #2
 1081 0022 D318     		adds	r3, r2, r3
 1082 0024 5A00     		lsls	r2, r3, #1
 1083 0026 8A18     		adds	r2, r1, r2
1434:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].
 1084              		.loc 1 1434 0
 1085 0028 0E4B     		ldr	r3, .L58+12
 1086 002a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 68


1444:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1087              		.loc 1 1444 0
 1088 002c FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 1089              	.LVL107:
1463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2Sn
 1090              		.loc 1 1463 0
 1091 0030 3378     		ldrb	r3, [r6]
1464:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         + CapSense_1_sensorIndex;
 1092              		.loc 1 1464 0
 1093 0032 5B01     		lsls	r3, r3, #5
 1094 0034 5859     		ldr	r0, [r3, r5]
1465:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1095              		.loc 1 1465 0
 1096 0036 2278     		ldrb	r2, [r4]
 1097 0038 D2B2     		uxtb	r2, r2
 1098 003a D300     		lsls	r3, r2, #3
 1099 003c 9A1A     		subs	r2, r3, r2
 1100 003e 9300     		lsls	r3, r2, #2
 1101 0040 C018     		adds	r0, r0, r3
1463:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2Sn
 1102              		.loc 1 1463 0
 1103 0042 094B     		ldr	r3, .L58+16
 1104 0044 1860     		str	r0, [r3]
1468:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1105              		.loc 1 1468 0
 1106 0046 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 1107              	.LVL108:
1471:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 1108              		.loc 1 1471 0
 1109 004a 0848     		ldr	r0, .L58+20
 1110 004c FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 1111              	.LVL109:
1475:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 1112              		.loc 1 1475 0
 1113 0050 FFF7FEFF 		bl	CapSense_1_CSDScanExt
 1114              	.LVL110:
1476:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1115              		.loc 1 1476 0
 1116              		@ sp needed
 1117 0054 70BD     		pop	{r4, r5, r6, pc}
 1118              	.L59:
 1119 0056 C046     		.align	2
 1120              	.L58:
 1121 0058 00000000 		.word	CapSense_1_widgetIndex
 1122 005c 00000000 		.word	CapSense_1_dsFlash
 1123 0060 00000000 		.word	CapSense_1_sensorIndex
 1124 0064 00000000 		.word	CapSense_1_curRamSnsPtr
 1125 0068 00000000 		.word	CapSense_1_curSnsIOPtr
 1126 006c 00000000 		.word	CapSense_1_CSDPostMultiScan
 1127              		.cfi_endproc
 1128              	.LFE14:
 1129              		.size	CapSense_1_CSDScan, .-CapSense_1_CSDScan
 1130              		.section	.text.CapSense_1_SsCSDConnectSensorExt,"ax",%progbits
 1131              		.align	2
 1132              		.global	CapSense_1_SsCSDConnectSensorExt
 1133              		.code	16
 1134              		.thumb_func
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 69


 1135              		.type	CapSense_1_SsCSDConnectSensorExt, %function
 1136              	CapSense_1_SsCSDConnectSensorExt:
 1137              	.LFB15:
1499:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 1138              		.loc 1 1499 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142              	.LVL111:
 1143 0000 10B5     		push	{r4, lr}
 1144              		.cfi_def_cfa_offset 8
 1145              		.cfi_offset 4, -8
 1146              		.cfi_offset 14, -4
1506:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
 1147              		.loc 1 1506 0
 1148 0002 4001     		lsls	r0, r0, #5
 1149              	.LVL112:
 1150 0004 054B     		ldr	r3, .L61
 1151 0006 C058     		ldr	r0, [r0, r3]
1507:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1152              		.loc 1 1507 0
 1153 0008 CB00     		lsls	r3, r1, #3
 1154 000a 591A     		subs	r1, r3, r1
 1155              	.LVL113:
 1156 000c 8B00     		lsls	r3, r1, #2
 1157 000e C018     		adds	r0, r0, r3
1505:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
 1158              		.loc 1 1505 0
 1159 0010 034B     		ldr	r3, .L61+4
 1160 0012 1860     		str	r0, [r3]
1541:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 1161              		.loc 1 1541 0
 1162 0014 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 1163              	.LVL114:
1543:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1164              		.loc 1 1543 0
 1165              		@ sp needed
 1166 0018 10BD     		pop	{r4, pc}
 1167              	.L62:
 1168 001a C046     		.align	2
 1169              	.L61:
 1170 001c 00000000 		.word	CapSense_1_dsFlash
 1171 0020 00000000 		.word	CapSense_1_curSnsIOPtr
 1172              		.cfi_endproc
 1173              	.LFE15:
 1174              		.size	CapSense_1_SsCSDConnectSensorExt, .-CapSense_1_SsCSDConnectSensorExt
 1175              		.section	.text.CapSense_1_CSDDisconnectSns,"ax",%progbits
 1176              		.align	2
 1177              		.global	CapSense_1_CSDDisconnectSns
 1178              		.code	16
 1179              		.thumb_func
 1180              		.type	CapSense_1_CSDDisconnectSns, %function
 1181              	CapSense_1_CSDDisconnectSns:
 1182              	.LFB18:
1694:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     uint32 pinHSIOMShift;
 1183              		.loc 1 1694 0
 1184              		.cfi_startproc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 70


 1185              		@ args = 0, pretend = 0, frame = 0
 1186              		@ frame_needed = 0, uses_anonymous_args = 0
 1187              	.LVL115:
 1188 0000 70B5     		push	{r4, r5, r6, lr}
 1189              		.cfi_def_cfa_offset 16
 1190              		.cfi_offset 4, -16
 1191              		.cfi_offset 5, -12
 1192              		.cfi_offset 6, -8
 1193              		.cfi_offset 14, -4
 1194 0002 0400     		movs	r4, r0
1705:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     pinModeShift = (uint32)snsAddrPtr->shift;
 1195              		.loc 1 1705 0
 1196 0004 007E     		ldrb	r0, [r0, #24]
 1197              	.LVL116:
1706:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1198              		.loc 1 1706 0
 1199 0006 A57E     		ldrb	r5, [r4, #26]
 1200              	.LVL117:
1711:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1201              		.loc 1 1711 0
 1202 0008 2168     		ldr	r1, [r4]
 1203 000a 0B68     		ldr	r3, [r1]
 1204 000c 0F22     		movs	r2, #15
 1205 000e 8240     		lsls	r2, r2, r0
 1206 0010 9343     		bics	r3, r2
 1207 0012 0B60     		str	r3, [r1]
1713:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1208              		.loc 1 1713 0
 1209 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1210              	.LVL118:
1716:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue &= ~(CapSense_1_GPIO_PC_MASK << pinModeShift);
 1211              		.loc 1 1716 0
 1212 0018 6168     		ldr	r1, [r4, #4]
 1213 001a 0B68     		ldr	r3, [r1]
 1214              	.LVL119:
1717:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         newRegisterValue |= CapSense_1_CSD_INACTIVE_SNS_CONNECTION << pinModeShift;
 1215              		.loc 1 1717 0
 1216 001c 0722     		movs	r2, #7
 1217 001e AA40     		lsls	r2, r2, r5
 1218 0020 9343     		bics	r3, r2
 1219              	.LVL120:
 1220 0022 1A00     		movs	r2, r3
 1221              	.LVL121:
1718:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CY_SET_REG32(snsAddrPtr->pcPtr, newRegisterValue);
 1222              		.loc 1 1718 0
 1223 0024 0623     		movs	r3, #6
 1224 0026 AB40     		lsls	r3, r3, r5
 1225 0028 1343     		orrs	r3, r2
 1226              	.LVL122:
1719:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1227              		.loc 1 1719 0
 1228 002a 0B60     		str	r3, [r1]
1721:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1229              		.loc 1 1721 0
 1230 002c FFF7FEFF 		bl	CyExitCriticalSection
 1231              	.LVL123:
1724:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #else
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 71


 1232              		.loc 1 1724 0
 1233 0030 A168     		ldr	r1, [r4, #8]
 1234 0032 0B68     		ldr	r3, [r1]
 1235 0034 607E     		ldrb	r0, [r4, #25]
 1236 0036 0122     		movs	r2, #1
 1237 0038 8240     		lsls	r2, r2, r0
 1238 003a 9343     		bics	r3, r2
 1239 003c 0B60     		str	r3, [r1]
1735:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1240              		.loc 1 1735 0
 1241              		@ sp needed
 1242              	.LVL124:
 1243              	.LVL125:
 1244 003e 70BD     		pop	{r4, r5, r6, pc}
 1245              		.cfi_endproc
 1246              	.LFE18:
 1247              		.size	CapSense_1_CSDDisconnectSns, .-CapSense_1_CSDDisconnectSns
 1248              		.section	.text.CapSense_1_SsCSDElectrodeCheck,"ax",%progbits
 1249              		.align	2
 1250              		.global	CapSense_1_SsCSDElectrodeCheck
 1251              		.code	16
 1252              		.thumb_func
 1253              		.type	CapSense_1_SsCSDElectrodeCheck, %function
 1254              	CapSense_1_SsCSDElectrodeCheck:
 1255              	.LFB5:
 695:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 1256              		.loc 1 695 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
 1259              		@ frame_needed = 0, uses_anonymous_args = 0
 1260 0000 10B5     		push	{r4, lr}
 1261              		.cfi_def_cfa_offset 8
 1262              		.cfi_offset 4, -8
 1263              		.cfi_offset 14, -4
 700:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     {
 1264              		.loc 1 700 0
 1265 0002 064B     		ldr	r3, .L66
 1266 0004 1B78     		ldrb	r3, [r3]
 1267 0006 012B     		cmp	r3, #1
 1268 0008 06D1     		bne	.L64
 728:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 1269              		.loc 1 728 0
 1270 000a 054B     		ldr	r3, .L66+4
 1271 000c 1868     		ldr	r0, [r3]
 1272 000e FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1273              	.LVL126:
 731:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     }
 1274              		.loc 1 731 0
 1275 0012 0022     		movs	r2, #0
 1276 0014 014B     		ldr	r3, .L66
 1277 0016 1A70     		strb	r2, [r3]
 1278              	.L64:
 733:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1279              		.loc 1 733 0
 1280              		@ sp needed
 1281 0018 10BD     		pop	{r4, pc}
 1282              	.L67:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 72


 1283 001a C046     		.align	2
 1284              	.L66:
 1285 001c 00000000 		.word	.LANCHOR1
 1286 0020 00000000 		.word	CapSense_1_curSnsIOPtr
 1287              		.cfi_endproc
 1288              	.LFE5:
 1289              		.size	CapSense_1_SsCSDElectrodeCheck, .-CapSense_1_SsCSDElectrodeCheck
 1290              		.section	.text.CapSense_1_CSDSetupWidget,"ax",%progbits
 1291              		.align	2
 1292              		.global	CapSense_1_CSDSetupWidget
 1293              		.code	16
 1294              		.thumb_func
 1295              		.type	CapSense_1_CSDSetupWidget, %function
 1296              	CapSense_1_CSDSetupWidget:
 1297              	.LFB10:
1121:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1298              		.loc 1 1121 0
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 0
 1301              		@ frame_needed = 0, uses_anonymous_args = 0
 1302              	.LVL127:
 1303 0000 70B5     		push	{r4, r5, r6, lr}
 1304              		.cfi_def_cfa_offset 16
 1305              		.cfi_offset 4, -16
 1306              		.cfi_offset 5, -12
 1307              		.cfi_offset 6, -8
 1308              		.cfi_offset 14, -4
1123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
 1309              		.loc 1 1123 0
 1310 0002 104E     		ldr	r6, .L69
 1311 0004 4301     		lsls	r3, r0, #5
 1312 0006 F318     		adds	r3, r6, r3
 1313 0008 5D68     		ldr	r5, [r3, #4]
 1314              	.LVL128:
1127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1315              		.loc 1 1127 0
 1316 000a C0B2     		uxtb	r0, r0
 1317              	.LVL129:
 1318 000c 0E4C     		ldr	r4, .L69+4
 1319 000e 2070     		strb	r0, [r4]
1129:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1320              		.loc 1 1129 0
 1321 0010 0120     		movs	r0, #1
 1322 0012 FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
 1323              	.LVL130:
1137:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1324              		.loc 1 1137 0
 1325 0016 FFF7FEFF 		bl	CapSense_1_SsCSDElectrodeCheck
 1326              	.LVL131:
1141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1327              		.loc 1 1141 0
 1328 001a 2378     		ldrb	r3, [r4]
 1329 001c 5B01     		lsls	r3, r3, #5
 1330 001e 9A59     		ldr	r2, [r3, r6]
1140:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                     CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].ptr2SnsFla
 1331              		.loc 1 1140 0
 1332 0020 0A4B     		ldr	r3, .L69+8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 73


 1333 0022 1A60     		str	r2, [r3]
1144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_dsRam.status |= CapSense_1_widgetIndex;
 1334              		.loc 1 1144 0
 1335 0024 0A4B     		ldr	r3, .L69+12
 1336 0026 DA68     		ldr	r2, [r3, #12]
 1337 0028 7F21     		movs	r1, #127
 1338 002a 8A43     		bics	r2, r1
 1339 002c DA60     		str	r2, [r3, #12]
1145:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1340              		.loc 1 1145 0
 1341 002e 2178     		ldrb	r1, [r4]
 1342 0030 DA68     		ldr	r2, [r3, #12]
 1343 0032 0A43     		orrs	r2, r1
 1344 0034 DA60     		str	r2, [r3, #12]
1148:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1345              		.loc 1 1148 0
 1346 0036 2800     		movs	r0, r5
 1347 0038 FFF7FEFF 		bl	CapSense_1_SsCSDCalculateScanDuration
 1348              	.LVL132:
1152:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* ((CapSense_1_DISABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) ||\
 1349              		.loc 1 1152 0
 1350 003c FFF7FEFF 		bl	CapSense_1_SsCSDConfigClock
 1351              	.LVL133:
1155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1352              		.loc 1 1155 0
 1353              		@ sp needed
 1354              	.LVL134:
 1355              	.LVL135:
 1356 0040 70BD     		pop	{r4, r5, r6, pc}
 1357              	.L70:
 1358 0042 C046     		.align	2
 1359              	.L69:
 1360 0044 00000000 		.word	CapSense_1_dsFlash
 1361 0048 00000000 		.word	CapSense_1_widgetIndex
 1362 004c 00000000 		.word	CapSense_1_curSnsIOPtr
 1363 0050 00000000 		.word	CapSense_1_dsRam
 1364              		.cfi_endproc
 1365              	.LFE10:
 1366              		.size	CapSense_1_CSDSetupWidget, .-CapSense_1_CSDSetupWidget
 1367              		.section	.text.CapSense_1_CSDSetupWidgetExt,"ax",%progbits
 1368              		.align	2
 1369              		.global	CapSense_1_CSDSetupWidgetExt
 1370              		.code	16
 1371              		.thumb_func
 1372              		.type	CapSense_1_CSDSetupWidgetExt, %function
 1373              	CapSense_1_CSDSetupWidgetExt:
 1374              	.LFB11:
1202:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 1375              		.loc 1 1202 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 0
 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379              	.LVL136:
 1380 0000 70B5     		push	{r4, r5, r6, lr}
 1381              		.cfi_def_cfa_offset 16
 1382              		.cfi_offset 4, -16
 1383              		.cfi_offset 5, -12
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 74


 1384              		.cfi_offset 6, -8
 1385              		.cfi_offset 14, -4
1203:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                     CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Wdgt
 1386              		.loc 1 1203 0
 1387 0002 4301     		lsls	r3, r0, #5
 1388 0004 134A     		ldr	r2, .L72
 1389 0006 D318     		adds	r3, r2, r3
 1390 0008 5D68     		ldr	r5, [r3, #4]
 1391              	.LVL137:
1207:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1392              		.loc 1 1207 0
 1393 000a C9B2     		uxtb	r1, r1
 1394              	.LVL138:
 1395 000c 124C     		ldr	r4, .L72+4
 1396 000e 2170     		strb	r1, [r4]
1211:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               + CapSense_1_sensorIndex;
 1397              		.loc 1 1211 0
 1398 0010 9968     		ldr	r1, [r3, #8]
1212:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1399              		.loc 1 1212 0
 1400 0012 2378     		ldrb	r3, [r4]
 1401 0014 DBB2     		uxtb	r3, r3
 1402 0016 9A00     		lsls	r2, r3, #2
 1403 0018 D318     		adds	r3, r2, r3
 1404 001a 5A00     		lsls	r2, r3, #1
 1405 001c 8A18     		adds	r2, r1, r2
1210:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam
 1406              		.loc 1 1210 0
 1407 001e 0F4B     		ldr	r3, .L72+8
 1408 0020 1A60     		str	r2, [r3]
1214:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1409              		.loc 1 1214 0
 1410 0022 FFF7FEFF 		bl	CapSense_1_CSDSetupWidget
 1411              	.LVL139:
1217:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1412              		.loc 1 1217 0
 1413 0026 2800     		movs	r0, r5
 1414 0028 FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 1415              	.LVL140:
1228:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         CapSense_1_CSDConnectSns(CapSense_1_curSnsIOPtr);
 1416              		.loc 1 1228 0
 1417 002c 2378     		ldrb	r3, [r4]
 1418 002e DBB2     		uxtb	r3, r3
 1419 0030 0B49     		ldr	r1, .L72+12
 1420 0032 DA00     		lsls	r2, r3, #3
 1421 0034 D31A     		subs	r3, r2, r3
 1422 0036 9800     		lsls	r0, r3, #2
 1423 0038 0B68     		ldr	r3, [r1]
 1424 003a 9C46     		mov	ip, r3
 1425 003c 6044     		add	r0, r0, ip
 1426 003e 0860     		str	r0, [r1]
1229:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)  */
 1427              		.loc 1 1229 0
 1428 0040 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 1429              	.LVL141:
1239:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1430              		.loc 1 1239 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 75


 1431 0044 0122     		movs	r2, #1
 1432 0046 074B     		ldr	r3, .L72+16
 1433 0048 1A70     		strb	r2, [r3]
1242:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** }
 1434              		.loc 1 1242 0
 1435 004a 0748     		ldr	r0, .L72+20
 1436 004c FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 1437              	.LVL142:
1243:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1438              		.loc 1 1243 0
 1439              		@ sp needed
 1440              	.LVL143:
 1441 0050 70BD     		pop	{r4, r5, r6, pc}
 1442              	.L73:
 1443 0052 C046     		.align	2
 1444              	.L72:
 1445 0054 00000000 		.word	CapSense_1_dsFlash
 1446 0058 00000000 		.word	CapSense_1_sensorIndex
 1447 005c 00000000 		.word	CapSense_1_curRamSnsPtr
 1448 0060 00000000 		.word	CapSense_1_curSnsIOPtr
 1449 0064 00000000 		.word	.LANCHOR1
 1450 0068 00000000 		.word	CapSense_1_CSDPostSingleScan
 1451              		.cfi_endproc
 1452              	.LFE11:
 1453              		.size	CapSense_1_CSDSetupWidgetExt, .-CapSense_1_CSDSetupWidgetExt
 1454              		.section	.text.CapSense_1_SsCSDDisconnectSnsExt,"ax",%progbits
 1455              		.align	2
 1456              		.global	CapSense_1_SsCSDDisconnectSnsExt
 1457              		.code	16
 1458              		.thumb_func
 1459              		.type	CapSense_1_SsCSDDisconnectSnsExt, %function
 1460              	CapSense_1_SsCSDDisconnectSnsExt:
 1461              	.LFB16:
1569:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 1462              		.loc 1 1569 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 0
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466              	.LVL144:
 1467 0000 10B5     		push	{r4, lr}
 1468              		.cfi_def_cfa_offset 8
 1469              		.cfi_offset 4, -8
 1470              		.cfi_offset 14, -4
1576:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       + sensorId;
 1471              		.loc 1 1576 0
 1472 0002 4001     		lsls	r0, r0, #5
 1473              	.LVL145:
 1474 0004 054B     		ldr	r3, .L75
 1475 0006 C058     		ldr	r0, [r0, r3]
1577:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1476              		.loc 1 1577 0
 1477 0008 CB00     		lsls	r3, r1, #3
 1478 000a 591A     		subs	r1, r3, r1
 1479              	.LVL146:
 1480 000c 8B00     		lsls	r3, r1, #2
 1481 000e C018     		adds	r0, r0, r3
1575:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                       CapSense_1_dsFlash.wdgtArray[widgetId].ptr2Sn
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 76


 1482              		.loc 1 1575 0
 1483 0010 034B     		ldr	r3, .L75+4
 1484 0012 1860     		str	r0, [r3]
1610:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 1485              		.loc 1 1610 0
 1486 0014 FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1487              	.LVL147:
1612:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1488              		.loc 1 1612 0
 1489              		@ sp needed
 1490 0018 10BD     		pop	{r4, pc}
 1491              	.L76:
 1492 001a C046     		.align	2
 1493              	.L75:
 1494 001c 00000000 		.word	CapSense_1_dsFlash
 1495 0020 00000000 		.word	CapSense_1_curSnsIOPtr
 1496              		.cfi_endproc
 1497              	.LFE16:
 1498              		.size	CapSense_1_SsCSDDisconnectSnsExt, .-CapSense_1_SsCSDDisconnectSnsExt
 1499              		.section	.text.CapSense_1_SsCSDCalibrateOneSensor,"ax",%progbits
 1500              		.align	2
 1501              		.code	16
 1502              		.thumb_func
 1503              		.type	CapSense_1_SsCSDCalibrateOneSensor, %function
 1504              	CapSense_1_SsCSDCalibrateOneSensor:
 1505              	.LFB22:
1911:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         cystatus calibrateStatus;
 1506              		.loc 1 1911 0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 8
 1509              		@ frame_needed = 0, uses_anonymous_args = 0
 1510              	.LVL148:
 1511 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1512              		.cfi_def_cfa_offset 20
 1513              		.cfi_offset 4, -20
 1514              		.cfi_offset 5, -16
 1515              		.cfi_offset 6, -12
 1516              		.cfi_offset 7, -8
 1517              		.cfi_offset 14, -4
 1518 0002 4746     		mov	r7, r8
 1519 0004 80B4     		push	{r7}
 1520              		.cfi_def_cfa_offset 24
 1521              		.cfi_offset 8, -24
 1522 0006 82B0     		sub	sp, sp, #8
 1523              		.cfi_def_cfa_offset 32
 1524 0008 0700     		movs	r7, r0
 1525 000a 0E00     		movs	r6, r1
 1526 000c 9046     		mov	r8, r2
 1527              	.LVL149:
1924:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1528              		.loc 1 1924 0
 1529 000e 2E4A     		ldr	r2, .L84
 1530              	.LVL150:
 1531 0010 1378     		ldrb	r3, [r2]
1923:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                                         CapSense_1_dsFlash.wdgtArray[CapSense_1_wid
 1532              		.loc 1 1923 0
 1533 0012 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 77


 1534 0014 2D49     		ldr	r1, .L84+4
 1535              	.LVL151:
 1536 0016 CB18     		adds	r3, r1, r3
 1537 0018 5B68     		ldr	r3, [r3, #4]
 1538 001a 0193     		str	r3, [sp, #4]
 1539              	.LVL152:
1926:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1540              		.loc 1 1926 0
 1541 001c 0023     		movs	r3, #0
 1542              	.LVL153:
 1543 001e 3370     		strb	r3, [r6]
1933:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1544              		.loc 1 1933 0
 1545 0020 1078     		ldrb	r0, [r2]
 1546              	.LVL154:
 1547 0022 C0B2     		uxtb	r0, r0
 1548 0024 2A4B     		ldr	r3, .L84+8
 1549 0026 1978     		ldrb	r1, [r3]
 1550 0028 C9B2     		uxtb	r1, r1
 1551 002a FFF7FEFF 		bl	CapSense_1_CSDSetupWidgetExt
 1552              	.LVL155:
1937:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 1553              		.loc 1 1937 0
 1554 002e FFF7FEFF 		bl	CapSense_1_SsCSDSetSingleIdacMode
 1555              	.LVL156:
1916:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1556              		.loc 1 1916 0
 1557 0032 0024     		movs	r4, #0
1913:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 watchdogCounter;
 1558              		.loc 1 1913 0
 1559 0034 8025     		movs	r5, #128
 1560              	.LVL157:
 1561              	.L82:
1947:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 1562              		.loc 1 1947 0
 1563 0036 BC42     		cmp	r4, r7
 1564 0038 02D2     		bcs	.L78
1950:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 1565              		.loc 1 1950 0
 1566 003a 3378     		ldrb	r3, [r6]
 1567 003c AB43     		bics	r3, r5
 1568 003e 3370     		strb	r3, [r6]
 1569              	.L78:
1968:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1570              		.loc 1 1968 0
 1571 0040 6D08     		lsrs	r5, r5, #1
 1572              	.LVL158:
1971:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1573              		.loc 1 1971 0
 1574 0042 3378     		ldrb	r3, [r6]
 1575 0044 2B43     		orrs	r3, r5
 1576 0046 3370     		strb	r3, [r6]
1978:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1577              		.loc 1 1978 0
 1578 0048 0198     		ldr	r0, [sp, #4]
 1579 004a FFF7FEFF 		bl	CapSense_1_SsCSDSetUpIdacs
 1580              	.LVL159:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 78


1981:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1581              		.loc 1 1981 0
 1582 004e FFF7FEFF 		bl	CapSense_1_CSDScanExt
 1583              	.LVL160:
1984:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             while (((CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY) != 0u) &&
 1584              		.loc 1 1984 0
 1585 0052 E123     		movs	r3, #225
 1586 0054 1B02     		lsls	r3, r3, #8
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1587              		.loc 1 1985 0
 1588 0056 00E0     		b	.L79
 1589              	.LVL161:
 1590              	.L81:
1989:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             }
 1591              		.loc 1 1989 0
 1592 0058 013B     		subs	r3, r3, #1
 1593              	.LVL162:
 1594              	.L79:
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1595              		.loc 1 1985 0
 1596 005a 1E4A     		ldr	r2, .L84+12
 1597 005c D268     		ldr	r2, [r2, #12]
 1598 005e 1206     		lsls	r2, r2, #24
 1599 0060 01D5     		bpl	.L80
1985:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                    (0u != watchdogCounter))
 1600              		.loc 1 1985 0 is_stmt 0 discriminator 1
 1601 0062 002B     		cmp	r3, #0
 1602 0064 F8D1     		bne	.L81
 1603              	.L80:
1993:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1604              		.loc 1 1993 0 is_stmt 1
 1605 0066 1C4B     		ldr	r3, .L84+16
 1606              	.LVL163:
 1607 0068 1B68     		ldr	r3, [r3]
 1608 006a 1C88     		ldrh	r4, [r3]
 1609              	.LVL164:
1999:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1610              		.loc 1 1999 0
 1611 006c 002D     		cmp	r5, #0
 1612 006e E2D1     		bne	.L82
2005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
 1613              		.loc 1 2005 0
 1614 0070 154B     		ldr	r3, .L84
 1615 0072 1B78     		ldrb	r3, [r3]
2006:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             + CapSense_1_sensorIndex;
 1616              		.loc 1 2006 0
 1617 0074 5B01     		lsls	r3, r3, #5
 1618 0076 154A     		ldr	r2, .L84+4
 1619 0078 9858     		ldr	r0, [r3, r2]
2007:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1620              		.loc 1 2007 0
 1621 007a 154B     		ldr	r3, .L84+8
 1622 007c 1A78     		ldrb	r2, [r3]
 1623 007e D2B2     		uxtb	r2, r2
 1624 0080 D300     		lsls	r3, r2, #3
 1625 0082 9A1A     		subs	r2, r3, r2
 1626 0084 9300     		lsls	r3, r2, #2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 79


 1627 0086 C018     		adds	r0, r0, r3
2005:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                             CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].pt
 1628              		.loc 1 2005 0
 1629 0088 144B     		ldr	r3, .L84+20
 1630 008a 1860     		str	r0, [r3]
2010:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
 1631              		.loc 1 2010 0
 1632 008c FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1633              	.LVL165:
2014:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1634              		.loc 1 2014 0
 1635 0090 0022     		movs	r2, #0
 1636 0092 134B     		ldr	r3, .L84+24
 1637 0094 1A70     		strb	r2, [r3]
2018:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
 1638              		.loc 1 2018 0
 1639 0096 FFF7FEFF 		bl	CapSense_1_SsCSDRestoreIdacMode
 1640              	.LVL166:
2022:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1641              		.loc 1 2022 0
 1642 009a 2200     		movs	r2, r4
 1643 009c 3900     		movs	r1, r7
 1644 009e 0198     		ldr	r0, [sp, #4]
 1645 00a0 FFF7FEFF 		bl	CapSense_1_SsCSDCalibrateCheck
 1646              	.LVL167:
2032:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 1647              		.loc 1 2032 0
 1648 00a4 4346     		mov	r3, r8
 1649 00a6 1A78     		ldrb	r2, [r3]
 1650 00a8 3378     		ldrb	r3, [r6]
 1651 00aa 9A42     		cmp	r2, r3
 1652 00ac 04D2     		bcs	.L83
2034:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
 1653              		.loc 1 2034 0
 1654 00ae 4246     		mov	r2, r8
 1655 00b0 1370     		strb	r3, [r2]
2037:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 CapSense_1_calibratedRawcount = rawData0;
 1656              		.loc 1 2037 0
 1657 00b2 0C4A     		ldr	r2, .L84+28
 1658 00b4 1371     		strb	r3, [r2, #4]
2038:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
 1659              		.loc 1 2038 0
 1660 00b6 D480     		strh	r4, [r2, #6]
 1661              	.L83:
2057:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1662              		.loc 1 2057 0
 1663 00b8 074B     		ldr	r3, .L84+16
 1664 00ba 1B68     		ldr	r3, [r3]
 1665 00bc 3278     		ldrb	r2, [r6]
 1666 00be 5A72     		strb	r2, [r3, #9]
2065:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1667              		.loc 1 2065 0
 1668 00c0 02B0     		add	sp, sp, #8
 1669              		@ sp needed
 1670              	.LVL168:
 1671              	.LVL169:
 1672              	.LVL170:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 80


 1673              	.LVL171:
 1674              	.LVL172:
 1675 00c2 04BC     		pop	{r2}
 1676 00c4 9046     		mov	r8, r2
 1677 00c6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1678              	.L85:
 1679              		.align	2
 1680              	.L84:
 1681 00c8 00000000 		.word	CapSense_1_widgetIndex
 1682 00cc 00000000 		.word	CapSense_1_dsFlash
 1683 00d0 00000000 		.word	CapSense_1_sensorIndex
 1684 00d4 00000000 		.word	CapSense_1_dsRam
 1685 00d8 00000000 		.word	CapSense_1_curRamSnsPtr
 1686 00dc 00000000 		.word	CapSense_1_curSnsIOPtr
 1687 00e0 00000000 		.word	.LANCHOR1
 1688 00e4 00000000 		.word	.LANCHOR0
 1689              		.cfi_endproc
 1690              	.LFE22:
 1691              		.size	CapSense_1_SsCSDCalibrateOneSensor, .-CapSense_1_SsCSDCalibrateOneSensor
 1692              		.section	.text.CapSense_1_CSDCalibrateWidget,"ax",%progbits
 1693              		.align	2
 1694              		.global	CapSense_1_CSDCalibrateWidget
 1695              		.code	16
 1696              		.thumb_func
 1697              		.type	CapSense_1_CSDCalibrateWidget, %function
 1698              	CapSense_1_CSDCalibrateWidget:
 1699              	.LFB23:
2111:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         uint32 rawLevel;
 1700              		.loc 1 2111 0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 16
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 1704              	.LVL173:
 1705 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1706              		.cfi_def_cfa_offset 20
 1707              		.cfi_offset 4, -20
 1708              		.cfi_offset 5, -16
 1709              		.cfi_offset 6, -12
 1710              		.cfi_offset 7, -8
 1711              		.cfi_offset 14, -4
 1712 0002 4F46     		mov	r7, r9
 1713 0004 80B4     		push	{r7}
 1714              		.cfi_def_cfa_offset 24
 1715              		.cfi_offset 9, -24
 1716 0006 84B0     		sub	sp, sp, #16
 1717              		.cfi_def_cfa_offset 40
 1718 0008 0400     		movs	r4, r0
 1719 000a 8946     		mov	r9, r1
 1720              	.LVL174:
2123:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                                               CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1721              		.loc 1 2123 0
 1722 000c 4301     		lsls	r3, r0, #5
 1723 000e 384A     		ldr	r2, .L93
 1724 0010 D318     		adds	r3, r2, r3
 1725 0012 5F68     		ldr	r7, [r3, #4]
 1726              	.LVL175:
2127:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #else
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 81


 1727              		.loc 1 2127 0
 1728 0014 0125     		movs	r5, #1
 1729 0016 03AB     		add	r3, sp, #12
 1730 0018 1D70     		strb	r5, [r3]
2135:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1731              		.loc 1 2135 0
 1732 001a 3B88     		ldrh	r3, [r7]
 1733 001c 2800     		movs	r0, r5
 1734              	.LVL176:
 1735 001e 9840     		lsls	r0, r0, r3
 1736 0020 0138     		subs	r0, r0, #1
 1737              	.LVL177:
2138:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1738              		.loc 1 2138 0
 1739 0022 4843     		muls	r0, r1
 1740              	.LVL178:
 1741 0024 6421     		movs	r1, #100
 1742              	.LVL179:
 1743 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1744              	.LVL180:
 1745 002a 0190     		str	r0, [sp, #4]
 1746              	.LVL181:
2141:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1747              		.loc 1 2141 0
 1748 002c E2B2     		uxtb	r2, r4
 1749 002e 314B     		ldr	r3, .L93+4
 1750 0030 1A70     		strb	r2, [r3]
2144:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1751              		.loc 1 2144 0
 1752 0032 3148     		ldr	r0, .L93+8
 1753              	.LVL182:
 1754 0034 FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 1755              	.LVL183:
2147:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1756              		.loc 1 2147 0
 1757 0038 3E00     		movs	r6, r7
 1758 003a 0936     		adds	r6, r6, #9
 1759              	.LVL184:
2150:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             CapSense_1_calibratedRawcount = 1u;
 1760              		.loc 1 2150 0
 1761 003c 2F4B     		ldr	r3, .L93+12
 1762 003e 1D71     		strb	r5, [r3, #4]
2151:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
 1763              		.loc 1 2151 0
 1764 0040 DD80     		strh	r5, [r3, #6]
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1765              		.loc 1 2155 0
 1766 0042 0022     		movs	r2, #0
 1767 0044 2E4B     		ldr	r3, .L93+16
 1768 0046 1A70     		strb	r2, [r3]
2113:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1769              		.loc 1 2113 0
 1770 0048 0025     		movs	r5, #0
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1771              		.loc 1 2155 0
 1772 004a 0AE0     		b	.L87
 1773              	.LVL185:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 82


 1774              	.L88:
2160:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         }
 1775              		.loc 1 2160 0
 1776 004c 03AA     		add	r2, sp, #12
 1777 004e 3100     		movs	r1, r6
 1778 0050 0198     		ldr	r0, [sp, #4]
 1779 0052 FFF7FEFF 		bl	CapSense_1_SsCSDCalibrateOneSensor
 1780              	.LVL186:
 1781 0056 0543     		orrs	r5, r0
 1782              	.LVL187:
2157:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****         {
 1783              		.loc 1 2157 0
 1784 0058 294A     		ldr	r2, .L93+16
 1785 005a 1378     		ldrb	r3, [r2]
 1786 005c 0133     		adds	r3, r3, #1
 1787 005e DBB2     		uxtb	r3, r3
 1788 0060 1370     		strb	r3, [r2]
 1789              	.LVL188:
 1790              	.L87:
2156:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex++)
 1791              		.loc 1 2156 0 discriminator 1
 1792 0062 6301     		lsls	r3, r4, #5
 1793 0064 224A     		ldr	r2, .L93
 1794 0066 D318     		adds	r3, r2, r3
 1795 0068 DA7E     		ldrb	r2, [r3, #27]
 1796 006a 254B     		ldr	r3, .L93+16
 1797 006c 1B78     		ldrb	r3, [r3]
 1798 006e DBB2     		uxtb	r3, r3
2155:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****              CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1799              		.loc 1 2155 0 discriminator 1
 1800 0070 9A42     		cmp	r2, r3
 1801 0072 EBD8     		bhi	.L88
2166:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 1802              		.loc 1 2166 0
 1803 0074 03AB     		add	r3, sp, #12
 1804 0076 1B78     		ldrb	r3, [r3]
 1805 0078 0133     		adds	r3, r3, #1
 1806 007a 5B08     		lsrs	r3, r3, #1
 1807 007c 7B72     		strb	r3, [r7, #9]
2173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1808              		.loc 1 2173 0
 1809 007e 0022     		movs	r2, #0
 1810 0080 1F4B     		ldr	r3, .L93+16
 1811 0082 1A70     		strb	r2, [r3]
 1812 0084 22E0     		b	.L89
 1813              	.LVL189:
 1814              	.L92:
2178:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 /* Calculate Compensation IDAC value: idacComp(i) = (iDAC8(i) - idacMod) * Target *
 1815              		.loc 1 2178 0
 1816 0086 6301     		lsls	r3, r4, #5
 1817 0088 194A     		ldr	r2, .L93
 1818 008a D318     		adds	r3, r2, r3
 1819 008c 9E68     		ldr	r6, [r3, #8]
 1820 008e 1C4B     		ldr	r3, .L93+16
 1821 0090 1B78     		ldrb	r3, [r3]
 1822 0092 DBB2     		uxtb	r3, r3
 1823 0094 9A00     		lsls	r2, r3, #2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 83


 1824 0096 D318     		adds	r3, r2, r3
 1825 0098 5A00     		lsls	r2, r3, #1
 1826 009a B618     		adds	r6, r6, r2
2177:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                          CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsRam + CapSense_1_sensorIndex
 1827              		.loc 1 2177 0
 1828 009c 194B     		ldr	r3, .L93+20
 1829 009e 1E60     		str	r6, [r3]
2180:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 {
 1830              		.loc 1 2180 0
 1831 00a0 737A     		ldrb	r3, [r6, #9]
 1832 00a2 787A     		ldrb	r0, [r7, #9]
 1833 00a4 8342     		cmp	r3, r0
 1834 00a6 0AD3     		bcc	.L90
2182:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                     #if ((CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN) ||\
 1835              		.loc 1 2182 0
 1836 00a8 1B1A     		subs	r3, r3, r0
 1837 00aa D8B2     		uxtb	r0, r3
 1838 00ac 7072     		strb	r0, [r6, #9]
2186:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             CapSense_1_PERCENTAGE_100);
 1839              		.loc 1 2186 0
 1840 00ae 4B46     		mov	r3, r9
 1841 00b0 5843     		muls	r0, r3
 1842 00b2 6330     		adds	r0, r0, #99
 1843 00b4 6421     		movs	r1, #100
 1844 00b6 FFF7FEFF 		bl	__aeabi_uidiv
 1845              	.LVL190:
2185:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                             (uint8)((((target * CapSense_1_curRamSnsPtr->idacComp[0u]) + CapSense_1
 1846              		.loc 1 2185 0
 1847 00ba 7072     		strb	r0, [r6, #9]
 1848 00bc 01E0     		b	.L91
 1849              	.L90:
2193:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                 }
 1850              		.loc 1 2193 0
 1851 00be 0023     		movs	r3, #0
 1852 00c0 7372     		strb	r3, [r6, #9]
 1853              	.L91:
2175:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****             {
 1854              		.loc 1 2175 0
 1855 00c2 0F4A     		ldr	r2, .L93+16
 1856 00c4 1378     		ldrb	r3, [r2]
 1857 00c6 0133     		adds	r3, r3, #1
 1858 00c8 DBB2     		uxtb	r3, r3
 1859 00ca 1370     		strb	r3, [r2]
 1860              	.L89:
2174:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex++)
 1861              		.loc 1 2174 0 discriminator 1
 1862 00cc 6301     		lsls	r3, r4, #5
 1863 00ce 084A     		ldr	r2, .L93
 1864 00d0 D318     		adds	r3, r2, r3
 1865 00d2 DA7E     		ldrb	r2, [r3, #27]
 1866 00d4 0A4B     		ldr	r3, .L93+16
 1867 00d6 1B78     		ldrb	r3, [r3]
 1868 00d8 DBB2     		uxtb	r3, r3
2173:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c ****                  CapSense_1_sensorIndex < CapSense_1_dsFlash.wdgtArray[widgetId].numCols;
 1869              		.loc 1 2173 0 discriminator 1
 1870 00da 9A42     		cmp	r2, r3
 1871 00dc D3D8     		bhi	.L92
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 84


2343:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** 
 1872              		.loc 1 2343 0
 1873 00de 0022     		movs	r2, #0
 1874 00e0 074B     		ldr	r3, .L93+16
 1875 00e2 1A70     		strb	r2, [r3]
2346:Generated_Source\PSoC4/CapSense_1_SensingCSD_LL.c **** #endif /* ((CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) || \
 1876              		.loc 1 2346 0
 1877 00e4 2800     		movs	r0, r5
 1878 00e6 04B0     		add	sp, sp, #16
 1879              		@ sp needed
 1880              	.LVL191:
 1881              	.LVL192:
 1882              	.LVL193:
 1883              	.LVL194:
 1884 00e8 04BC     		pop	{r2}
 1885 00ea 9146     		mov	r9, r2
 1886 00ec F0BD     		pop	{r4, r5, r6, r7, pc}
 1887              	.L94:
 1888 00ee C046     		.align	2
 1889              	.L93:
 1890 00f0 00000000 		.word	CapSense_1_dsFlash
 1891 00f4 00000000 		.word	CapSense_1_widgetIndex
 1892 00f8 00000000 		.word	CapSense_1_CSDPostSingleScan
 1893 00fc 00000000 		.word	.LANCHOR0
 1894 0100 00000000 		.word	CapSense_1_sensorIndex
 1895 0104 00000000 		.word	CapSense_1_curRamSnsPtr
 1896              		.cfi_endproc
 1897              	.LFE23:
 1898              		.size	CapSense_1_CSDCalibrateWidget, .-CapSense_1_CSDCalibrateWidget
 1899              		.global	CapSense_1_calibratedRawcount
 1900              		.global	CapSense_1_calibratedIdac
 1901              		.global	CapSense_1_configCsd
 1902              		.data
 1903              		.align	2
 1904              		.set	.LANCHOR0,. + 0
 1905              		.type	CapSense_1_configCsd, %object
 1906              		.size	CapSense_1_configCsd, 4
 1907              	CapSense_1_configCsd:
 1908 0000 20000004 		.word	67108896
 1909              		.type	CapSense_1_calibratedIdac, %object
 1910              		.size	CapSense_1_calibratedIdac, 1
 1911              	CapSense_1_calibratedIdac:
 1912 0004 01       		.byte	1
 1913 0005 00       		.space	1
 1914              		.type	CapSense_1_calibratedRawcount, %object
 1915              		.size	CapSense_1_calibratedRawcount, 2
 1916              	CapSense_1_calibratedRawcount:
 1917 0006 0100     		.short	1
 1918              		.bss
 1919              		.set	.LANCHOR1,. + 0
 1920              		.type	CapSense_1_eleCsdDisconnectFlag, %object
 1921              		.size	CapSense_1_eleCsdDisconnectFlag, 1
 1922              	CapSense_1_eleCsdDisconnectFlag:
 1923 0000 00       		.space	1
 1924              		.text
 1925              	.Letext0:
 1926              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 85


 1927              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1928              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_SmartSense_LL.h"
 1929              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1930              		.file 6 "Generated_Source\\PSoC4\\CapSense_1_Sensing.h"
 1931              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 1932              		.file 8 "Generated_Source\\PSoC4\\CapSense_1_ISR.h"
 1933              		.section	.debug_info,"",%progbits
 1934              	.Ldebug_info0:
 1935 0000 6E100000 		.4byte	0x106e
 1936 0004 0400     		.2byte	0x4
 1937 0006 00000000 		.4byte	.Ldebug_abbrev0
 1938 000a 04       		.byte	0x4
 1939 000b 01       		.uleb128 0x1
 1940 000c 77020000 		.4byte	.LASF175
 1941 0010 0C       		.byte	0xc
 1942 0011 38040000 		.4byte	.LASF176
 1943 0015 92040000 		.4byte	.LASF177
 1944 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1945 001d 00000000 		.4byte	0
 1946 0021 00000000 		.4byte	.Ldebug_line0
 1947 0025 02       		.uleb128 0x2
 1948 0026 01       		.byte	0x1
 1949 0027 06       		.byte	0x6
 1950 0028 100B0000 		.4byte	.LASF0
 1951 002c 02       		.uleb128 0x2
 1952 002d 01       		.byte	0x1
 1953 002e 08       		.byte	0x8
 1954 002f 5C0A0000 		.4byte	.LASF1
 1955 0033 02       		.uleb128 0x2
 1956 0034 02       		.byte	0x2
 1957 0035 05       		.byte	0x5
 1958 0036 8A080000 		.4byte	.LASF2
 1959 003a 02       		.uleb128 0x2
 1960 003b 02       		.byte	0x2
 1961 003c 07       		.byte	0x7
 1962 003d 210B0000 		.4byte	.LASF3
 1963 0041 02       		.uleb128 0x2
 1964 0042 04       		.byte	0x4
 1965 0043 05       		.byte	0x5
 1966 0044 94080000 		.4byte	.LASF4
 1967 0048 02       		.uleb128 0x2
 1968 0049 04       		.byte	0x4
 1969 004a 07       		.byte	0x7
 1970 004b 180A0000 		.4byte	.LASF5
 1971 004f 02       		.uleb128 0x2
 1972 0050 08       		.byte	0x8
 1973 0051 05       		.byte	0x5
 1974 0052 57060000 		.4byte	.LASF6
 1975 0056 02       		.uleb128 0x2
 1976 0057 08       		.byte	0x8
 1977 0058 07       		.byte	0x7
 1978 0059 35030000 		.4byte	.LASF7
 1979 005d 03       		.uleb128 0x3
 1980 005e 04       		.byte	0x4
 1981 005f 05       		.byte	0x5
 1982 0060 696E7400 		.ascii	"int\000"
 1983 0064 02       		.uleb128 0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 86


 1984 0065 04       		.byte	0x4
 1985 0066 07       		.byte	0x7
 1986 0067 E0000000 		.4byte	.LASF8
 1987 006b 04       		.uleb128 0x4
 1988 006c 780B0000 		.4byte	.LASF9
 1989 0070 02       		.byte	0x2
 1990 0071 E401     		.2byte	0x1e4
 1991 0073 2C000000 		.4byte	0x2c
 1992 0077 04       		.uleb128 0x4
 1993 0078 D5050000 		.4byte	.LASF10
 1994 007c 02       		.byte	0x2
 1995 007d E501     		.2byte	0x1e5
 1996 007f 3A000000 		.4byte	0x3a
 1997 0083 04       		.uleb128 0x4
 1998 0084 43070000 		.4byte	.LASF11
 1999 0088 02       		.byte	0x2
 2000 0089 E601     		.2byte	0x1e6
 2001 008b 48000000 		.4byte	0x48
 2002 008f 02       		.uleb128 0x2
 2003 0090 04       		.byte	0x4
 2004 0091 04       		.byte	0x4
 2005 0092 6B020000 		.4byte	.LASF12
 2006 0096 02       		.uleb128 0x2
 2007 0097 08       		.byte	0x8
 2008 0098 04       		.byte	0x4
 2009 0099 7E0B0000 		.4byte	.LASF13
 2010 009d 02       		.uleb128 0x2
 2011 009e 01       		.byte	0x1
 2012 009f 08       		.byte	0x8
 2013 00a0 AF050000 		.4byte	.LASF14
 2014 00a4 04       		.uleb128 0x4
 2015 00a5 530A0000 		.4byte	.LASF15
 2016 00a9 02       		.byte	0x2
 2017 00aa 8602     		.2byte	0x286
 2018 00ac 48000000 		.4byte	0x48
 2019 00b0 05       		.uleb128 0x5
 2020 00b1 6B000000 		.4byte	0x6b
 2021 00b5 04       		.uleb128 0x4
 2022 00b6 EB070000 		.4byte	.LASF16
 2023 00ba 02       		.byte	0x2
 2024 00bb 9002     		.2byte	0x290
 2025 00bd C1000000 		.4byte	0xc1
 2026 00c1 05       		.uleb128 0x5
 2027 00c2 83000000 		.4byte	0x83
 2028 00c6 04       		.uleb128 0x4
 2029 00c7 65060000 		.4byte	.LASF17
 2030 00cb 03       		.byte	0x3
 2031 00cc 2D01     		.2byte	0x12d
 2032 00ce 77000000 		.4byte	0x77
 2033 00d2 04       		.uleb128 0x4
 2034 00d3 7C030000 		.4byte	.LASF18
 2035 00d7 03       		.byte	0x3
 2036 00d8 3101     		.2byte	0x131
 2037 00da 6B000000 		.4byte	0x6b
 2038 00de 06       		.uleb128 0x6
 2039 00df 0C       		.byte	0xc
 2040 00e0 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 87


 2041 00e1 6E       		.byte	0x6e
 2042 00e2 3B010000 		.4byte	0x13b
 2043 00e6 07       		.uleb128 0x7
 2044 00e7 AD0B0000 		.4byte	.LASF19
 2045 00eb 04       		.byte	0x4
 2046 00ec 73       		.byte	0x73
 2047 00ed 77000000 		.4byte	0x77
 2048 00f1 00       		.byte	0
 2049 00f2 07       		.uleb128 0x7
 2050 00f3 B40B0000 		.4byte	.LASF20
 2051 00f7 04       		.byte	0x4
 2052 00f8 77       		.byte	0x77
 2053 00f9 77000000 		.4byte	0x77
 2054 00fd 02       		.byte	0x2
 2055 00fe 07       		.uleb128 0x7
 2056 00ff BB0B0000 		.4byte	.LASF21
 2057 0103 04       		.byte	0x4
 2058 0104 7B       		.byte	0x7b
 2059 0105 77000000 		.4byte	0x77
 2060 0109 04       		.byte	0x4
 2061 010a 07       		.uleb128 0x7
 2062 010b C20B0000 		.4byte	.LASF22
 2063 010f 04       		.byte	0x4
 2064 0110 7F       		.byte	0x7f
 2065 0111 77000000 		.4byte	0x77
 2066 0115 06       		.byte	0x6
 2067 0116 07       		.uleb128 0x7
 2068 0117 C90B0000 		.4byte	.LASF23
 2069 011b 04       		.byte	0x4
 2070 011c 83       		.byte	0x83
 2071 011d 77000000 		.4byte	0x77
 2072 0121 08       		.byte	0x8
 2073 0122 07       		.uleb128 0x7
 2074 0123 D00B0000 		.4byte	.LASF24
 2075 0127 04       		.byte	0x4
 2076 0128 87       		.byte	0x87
 2077 0129 6B000000 		.4byte	0x6b
 2078 012d 0A       		.byte	0xa
 2079 012e 07       		.uleb128 0x7
 2080 012f D70B0000 		.4byte	.LASF25
 2081 0133 04       		.byte	0x4
 2082 0134 8B       		.byte	0x8b
 2083 0135 6B000000 		.4byte	0x6b
 2084 0139 0B       		.byte	0xb
 2085 013a 00       		.byte	0
 2086 013b 08       		.uleb128 0x8
 2087 013c 52050000 		.4byte	.LASF26
 2088 0140 04       		.byte	0x4
 2089 0141 8C       		.byte	0x8c
 2090 0142 DE000000 		.4byte	0xde
 2091 0146 09       		.uleb128 0x9
 2092 0147 01       		.byte	0x1
 2093 0148 2C000000 		.4byte	0x2c
 2094 014c 05       		.byte	0x5
 2095 014d 70       		.byte	0x70
 2096 014e 71010000 		.4byte	0x171
 2097 0152 0A       		.uleb128 0xa
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 88


 2098 0153 65070000 		.4byte	.LASF27
 2099 0157 00       		.byte	0
 2100 0158 0A       		.uleb128 0xa
 2101 0159 F2090000 		.4byte	.LASF28
 2102 015d 01       		.byte	0x1
 2103 015e 0A       		.uleb128 0xa
 2104 015f F3080000 		.4byte	.LASF29
 2105 0163 02       		.byte	0x2
 2106 0164 0A       		.uleb128 0xa
 2107 0165 6A040000 		.4byte	.LASF30
 2108 0169 03       		.byte	0x3
 2109 016a 0A       		.uleb128 0xa
 2110 016b CD070000 		.4byte	.LASF31
 2111 016f 04       		.byte	0x4
 2112 0170 00       		.byte	0
 2113 0171 06       		.uleb128 0x6
 2114 0172 12       		.byte	0x12
 2115 0173 05       		.byte	0x5
 2116 0174 8E       		.byte	0x8e
 2117 0175 0A020000 		.4byte	0x20a
 2118 0179 07       		.uleb128 0x7
 2119 017a EB050000 		.4byte	.LASF32
 2120 017e 05       		.byte	0x5
 2121 017f 93       		.byte	0x93
 2122 0180 77000000 		.4byte	0x77
 2123 0184 00       		.byte	0
 2124 0185 07       		.uleb128 0x7
 2125 0186 420A0000 		.4byte	.LASF33
 2126 018a 05       		.byte	0x5
 2127 018b 98       		.byte	0x98
 2128 018c C6000000 		.4byte	0xc6
 2129 0190 02       		.byte	0x2
 2130 0191 07       		.uleb128 0x7
 2131 0192 95050000 		.4byte	.LASF34
 2132 0196 05       		.byte	0x5
 2133 0197 9D       		.byte	0x9d
 2134 0198 6B000000 		.4byte	0x6b
 2135 019c 04       		.byte	0x4
 2136 019d 07       		.uleb128 0x7
 2137 019e FC060000 		.4byte	.LASF35
 2138 01a2 05       		.byte	0x5
 2139 01a3 A2       		.byte	0xa2
 2140 01a4 6B000000 		.4byte	0x6b
 2141 01a8 05       		.byte	0x5
 2142 01a9 07       		.uleb128 0x7
 2143 01aa 4A070000 		.4byte	.LASF36
 2144 01ae 05       		.byte	0x5
 2145 01af A8       		.byte	0xa8
 2146 01b0 6B000000 		.4byte	0x6b
 2147 01b4 06       		.byte	0x6
 2148 01b5 07       		.uleb128 0x7
 2149 01b6 7F060000 		.4byte	.LASF37
 2150 01ba 05       		.byte	0x5
 2151 01bb AE       		.byte	0xae
 2152 01bc 6B000000 		.4byte	0x6b
 2153 01c0 07       		.byte	0x7
 2154 01c1 07       		.uleb128 0x7
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 89


 2155 01c2 D6040000 		.4byte	.LASF38
 2156 01c6 05       		.byte	0x5
 2157 01c7 B5       		.byte	0xb5
 2158 01c8 D2000000 		.4byte	0xd2
 2159 01cc 08       		.byte	0x8
 2160 01cd 07       		.uleb128 0x7
 2161 01ce 2A0A0000 		.4byte	.LASF39
 2162 01d2 05       		.byte	0x5
 2163 01d3 BC       		.byte	0xbc
 2164 01d4 0A020000 		.4byte	0x20a
 2165 01d8 09       		.byte	0x9
 2166 01d9 07       		.uleb128 0x7
 2167 01da DA0A0000 		.4byte	.LASF40
 2168 01de 05       		.byte	0x5
 2169 01df C4       		.byte	0xc4
 2170 01e0 77000000 		.4byte	0x77
 2171 01e4 0A       		.byte	0xa
 2172 01e5 07       		.uleb128 0x7
 2173 01e6 50080000 		.4byte	.LASF41
 2174 01ea 05       		.byte	0x5
 2175 01eb C9       		.byte	0xc9
 2176 01ec 6B000000 		.4byte	0x6b
 2177 01f0 0C       		.byte	0xc
 2178 01f1 07       		.uleb128 0x7
 2179 01f2 AC090000 		.4byte	.LASF42
 2180 01f6 05       		.byte	0x5
 2181 01f7 CF       		.byte	0xcf
 2182 01f8 77000000 		.4byte	0x77
 2183 01fc 0E       		.byte	0xe
 2184 01fd 07       		.uleb128 0x7
 2185 01fe 31040000 		.4byte	.LASF43
 2186 0202 05       		.byte	0x5
 2187 0203 D4       		.byte	0xd4
 2188 0204 77000000 		.4byte	0x77
 2189 0208 10       		.byte	0x10
 2190 0209 00       		.byte	0
 2191 020a 0B       		.uleb128 0xb
 2192 020b 6B000000 		.4byte	0x6b
 2193 020f 1A020000 		.4byte	0x21a
 2194 0213 0C       		.uleb128 0xc
 2195 0214 1A020000 		.4byte	0x21a
 2196 0218 00       		.byte	0
 2197 0219 00       		.byte	0
 2198 021a 02       		.uleb128 0x2
 2199 021b 04       		.byte	0x4
 2200 021c 07       		.byte	0x7
 2201 021d 65080000 		.4byte	.LASF44
 2202 0221 08       		.uleb128 0x8
 2203 0222 1C070000 		.4byte	.LASF45
 2204 0226 05       		.byte	0x5
 2205 0227 D5       		.byte	0xd5
 2206 0228 71010000 		.4byte	0x171
 2207 022c 06       		.uleb128 0x6
 2208 022d 12       		.byte	0x12
 2209 022e 05       		.byte	0x5
 2210 022f DA       		.byte	0xda
 2211 0230 CB020000 		.4byte	0x2cb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 90


 2212 0234 07       		.uleb128 0x7
 2213 0235 EB050000 		.4byte	.LASF32
 2214 0239 05       		.byte	0x5
 2215 023a DF       		.byte	0xdf
 2216 023b 77000000 		.4byte	0x77
 2217 023f 00       		.byte	0
 2218 0240 07       		.uleb128 0x7
 2219 0241 420A0000 		.4byte	.LASF33
 2220 0245 05       		.byte	0x5
 2221 0246 E4       		.byte	0xe4
 2222 0247 C6000000 		.4byte	0xc6
 2223 024b 02       		.byte	0x2
 2224 024c 07       		.uleb128 0x7
 2225 024d 95050000 		.4byte	.LASF34
 2226 0251 05       		.byte	0x5
 2227 0252 E9       		.byte	0xe9
 2228 0253 6B000000 		.4byte	0x6b
 2229 0257 04       		.byte	0x4
 2230 0258 07       		.uleb128 0x7
 2231 0259 FC060000 		.4byte	.LASF35
 2232 025d 05       		.byte	0x5
 2233 025e EE       		.byte	0xee
 2234 025f 6B000000 		.4byte	0x6b
 2235 0263 05       		.byte	0x5
 2236 0264 07       		.uleb128 0x7
 2237 0265 4A070000 		.4byte	.LASF36
 2238 0269 05       		.byte	0x5
 2239 026a F4       		.byte	0xf4
 2240 026b 6B000000 		.4byte	0x6b
 2241 026f 06       		.byte	0x6
 2242 0270 07       		.uleb128 0x7
 2243 0271 7F060000 		.4byte	.LASF37
 2244 0275 05       		.byte	0x5
 2245 0276 FA       		.byte	0xfa
 2246 0277 6B000000 		.4byte	0x6b
 2247 027b 07       		.byte	0x7
 2248 027c 0D       		.uleb128 0xd
 2249 027d D6040000 		.4byte	.LASF38
 2250 0281 05       		.byte	0x5
 2251 0282 0101     		.2byte	0x101
 2252 0284 D2000000 		.4byte	0xd2
 2253 0288 08       		.byte	0x8
 2254 0289 0D       		.uleb128 0xd
 2255 028a 2A0A0000 		.4byte	.LASF39
 2256 028e 05       		.byte	0x5
 2257 028f 0801     		.2byte	0x108
 2258 0291 0A020000 		.4byte	0x20a
 2259 0295 09       		.byte	0x9
 2260 0296 0D       		.uleb128 0xd
 2261 0297 DA0A0000 		.4byte	.LASF40
 2262 029b 05       		.byte	0x5
 2263 029c 1001     		.2byte	0x110
 2264 029e 77000000 		.4byte	0x77
 2265 02a2 0A       		.byte	0xa
 2266 02a3 0D       		.uleb128 0xd
 2267 02a4 50080000 		.4byte	.LASF41
 2268 02a8 05       		.byte	0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 91


 2269 02a9 1501     		.2byte	0x115
 2270 02ab 6B000000 		.4byte	0x6b
 2271 02af 0C       		.byte	0xc
 2272 02b0 0D       		.uleb128 0xd
 2273 02b1 AC090000 		.4byte	.LASF42
 2274 02b5 05       		.byte	0x5
 2275 02b6 1B01     		.2byte	0x11b
 2276 02b8 77000000 		.4byte	0x77
 2277 02bc 0E       		.byte	0xe
 2278 02bd 0D       		.uleb128 0xd
 2279 02be 31040000 		.4byte	.LASF43
 2280 02c2 05       		.byte	0x5
 2281 02c3 2001     		.2byte	0x120
 2282 02c5 77000000 		.4byte	0x77
 2283 02c9 10       		.byte	0x10
 2284 02ca 00       		.byte	0
 2285 02cb 04       		.uleb128 0x4
 2286 02cc F50B0000 		.4byte	.LASF46
 2287 02d0 05       		.byte	0x5
 2288 02d1 2101     		.2byte	0x121
 2289 02d3 2C020000 		.4byte	0x22c
 2290 02d7 0E       		.uleb128 0xe
 2291 02d8 5A       		.byte	0x5a
 2292 02d9 05       		.byte	0x5
 2293 02da 2701     		.2byte	0x127
 2294 02dc 22030000 		.4byte	0x322
 2295 02e0 0D       		.uleb128 0xd
 2296 02e1 1F090000 		.4byte	.LASF47
 2297 02e5 05       		.byte	0x5
 2298 02e6 2C01     		.2byte	0x12c
 2299 02e8 CB020000 		.4byte	0x2cb
 2300 02ec 00       		.byte	0
 2301 02ed 0D       		.uleb128 0xd
 2302 02ee 27090000 		.4byte	.LASF48
 2303 02f2 05       		.byte	0x5
 2304 02f3 3101     		.2byte	0x131
 2305 02f5 CB020000 		.4byte	0x2cb
 2306 02f9 12       		.byte	0x12
 2307 02fa 0D       		.uleb128 0xd
 2308 02fb 2F090000 		.4byte	.LASF49
 2309 02ff 05       		.byte	0x5
 2310 0300 3601     		.2byte	0x136
 2311 0302 CB020000 		.4byte	0x2cb
 2312 0306 24       		.byte	0x24
 2313 0307 0D       		.uleb128 0xd
 2314 0308 37090000 		.4byte	.LASF50
 2315 030c 05       		.byte	0x5
 2316 030d 3B01     		.2byte	0x13b
 2317 030f CB020000 		.4byte	0x2cb
 2318 0313 36       		.byte	0x36
 2319 0314 0D       		.uleb128 0xd
 2320 0315 3F090000 		.4byte	.LASF51
 2321 0319 05       		.byte	0x5
 2322 031a 4001     		.2byte	0x140
 2323 031c CB020000 		.4byte	0x2cb
 2324 0320 48       		.byte	0x48
 2325 0321 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 92


 2326 0322 04       		.uleb128 0x4
 2327 0323 20020000 		.4byte	.LASF52
 2328 0327 05       		.byte	0x5
 2329 0328 4101     		.2byte	0x141
 2330 032a D7020000 		.4byte	0x2d7
 2331 032e 0E       		.uleb128 0xe
 2332 032f 0A       		.byte	0xa
 2333 0330 05       		.byte	0x5
 2334 0331 4701     		.2byte	0x147
 2335 0333 86030000 		.4byte	0x386
 2336 0337 0F       		.uleb128 0xf
 2337 0338 72617700 		.ascii	"raw\000"
 2338 033c 05       		.byte	0x5
 2339 033d 4C01     		.2byte	0x14c
 2340 033f 86030000 		.4byte	0x386
 2341 0343 00       		.byte	0
 2342 0344 0D       		.uleb128 0xd
 2343 0345 1C0B0000 		.4byte	.LASF53
 2344 0349 05       		.byte	0x5
 2345 034a 5101     		.2byte	0x151
 2346 034c 86030000 		.4byte	0x386
 2347 0350 02       		.byte	0x2
 2348 0351 0D       		.uleb128 0xd
 2349 0352 4B0A0000 		.4byte	.LASF54
 2350 0356 05       		.byte	0x5
 2351 0357 5701     		.2byte	0x157
 2352 0359 0A020000 		.4byte	0x20a
 2353 035d 04       		.byte	0x4
 2354 035e 0D       		.uleb128 0xd
 2355 035f D7080000 		.4byte	.LASF55
 2356 0363 05       		.byte	0x5
 2357 0364 5C01     		.2byte	0x15c
 2358 0366 C6000000 		.4byte	0xc6
 2359 036a 06       		.byte	0x6
 2360 036b 0D       		.uleb128 0xd
 2361 036c 850B0000 		.4byte	.LASF56
 2362 0370 05       		.byte	0x5
 2363 0371 6101     		.2byte	0x161
 2364 0373 96030000 		.4byte	0x396
 2365 0377 08       		.byte	0x8
 2366 0378 0D       		.uleb128 0xd
 2367 0379 28060000 		.4byte	.LASF57
 2368 037d 05       		.byte	0x5
 2369 037e 6601     		.2byte	0x166
 2370 0380 0A020000 		.4byte	0x20a
 2371 0384 09       		.byte	0x9
 2372 0385 00       		.byte	0
 2373 0386 0B       		.uleb128 0xb
 2374 0387 77000000 		.4byte	0x77
 2375 038b 96030000 		.4byte	0x396
 2376 038f 0C       		.uleb128 0xc
 2377 0390 1A020000 		.4byte	0x21a
 2378 0394 00       		.byte	0
 2379 0395 00       		.byte	0
 2380 0396 0B       		.uleb128 0xb
 2381 0397 D2000000 		.4byte	0xd2
 2382 039b A6030000 		.4byte	0x3a6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 93


 2383 039f 0C       		.uleb128 0xc
 2384 03a0 1A020000 		.4byte	0x21a
 2385 03a4 00       		.byte	0
 2386 03a5 00       		.byte	0
 2387 03a6 04       		.uleb128 0x4
 2388 03a7 930B0000 		.4byte	.LASF58
 2389 03ab 05       		.byte	0x5
 2390 03ac 6701     		.2byte	0x167
 2391 03ae 2E030000 		.4byte	0x32e
 2392 03b2 0E       		.uleb128 0xe
 2393 03b3 32       		.byte	0x32
 2394 03b4 05       		.byte	0x5
 2395 03b5 6D01     		.2byte	0x16d
 2396 03b7 FD030000 		.4byte	0x3fd
 2397 03bb 0D       		.uleb128 0xd
 2398 03bc 1F090000 		.4byte	.LASF47
 2399 03c0 05       		.byte	0x5
 2400 03c1 7201     		.2byte	0x172
 2401 03c3 FD030000 		.4byte	0x3fd
 2402 03c7 00       		.byte	0
 2403 03c8 0D       		.uleb128 0xd
 2404 03c9 27090000 		.4byte	.LASF48
 2405 03cd 05       		.byte	0x5
 2406 03ce 7701     		.2byte	0x177
 2407 03d0 FD030000 		.4byte	0x3fd
 2408 03d4 0A       		.byte	0xa
 2409 03d5 0D       		.uleb128 0xd
 2410 03d6 2F090000 		.4byte	.LASF49
 2411 03da 05       		.byte	0x5
 2412 03db 7C01     		.2byte	0x17c
 2413 03dd FD030000 		.4byte	0x3fd
 2414 03e1 14       		.byte	0x14
 2415 03e2 0D       		.uleb128 0xd
 2416 03e3 37090000 		.4byte	.LASF50
 2417 03e7 05       		.byte	0x5
 2418 03e8 8101     		.2byte	0x181
 2419 03ea FD030000 		.4byte	0x3fd
 2420 03ee 1E       		.byte	0x1e
 2421 03ef 0D       		.uleb128 0xd
 2422 03f0 3F090000 		.4byte	.LASF51
 2423 03f4 05       		.byte	0x5
 2424 03f5 8601     		.2byte	0x186
 2425 03f7 FD030000 		.4byte	0x3fd
 2426 03fb 28       		.byte	0x28
 2427 03fc 00       		.byte	0
 2428 03fd 0B       		.uleb128 0xb
 2429 03fe A6030000 		.4byte	0x3a6
 2430 0402 0D040000 		.4byte	0x40d
 2431 0406 0C       		.uleb128 0xc
 2432 0407 1A020000 		.4byte	0x21a
 2433 040b 00       		.byte	0
 2434 040c 00       		.byte	0
 2435 040d 04       		.uleb128 0x4
 2436 040e 7C070000 		.4byte	.LASF59
 2437 0412 05       		.byte	0x5
 2438 0413 8701     		.2byte	0x187
 2439 0415 B2030000 		.4byte	0x3b2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 94


 2440 0419 0E       		.uleb128 0xe
 2441 041a B4       		.byte	0xb4
 2442 041b 05       		.byte	0x5
 2443 041c 8D01     		.2byte	0x18d
 2444 041e 00050000 		.4byte	0x500
 2445 0422 0D       		.uleb128 0xd
 2446 0423 04080000 		.4byte	.LASF60
 2447 0427 05       		.byte	0x5
 2448 0428 9401     		.2byte	0x194
 2449 042a 77000000 		.4byte	0x77
 2450 042e 00       		.byte	0
 2451 042f 0D       		.uleb128 0xd
 2452 0430 EC0B0000 		.4byte	.LASF61
 2453 0434 05       		.byte	0x5
 2454 0435 9901     		.2byte	0x199
 2455 0437 77000000 		.4byte	0x77
 2456 043b 02       		.byte	0x2
 2457 043c 0D       		.uleb128 0xd
 2458 043d 20010000 		.4byte	.LASF62
 2459 0441 05       		.byte	0x5
 2460 0442 9E01     		.2byte	0x19e
 2461 0444 77000000 		.4byte	0x77
 2462 0448 04       		.byte	0x4
 2463 0449 0D       		.uleb128 0xd
 2464 044a DC080000 		.4byte	.LASF63
 2465 044e 05       		.byte	0x5
 2466 044f A401     		.2byte	0x1a4
 2467 0451 77000000 		.4byte	0x77
 2468 0455 06       		.byte	0x6
 2469 0456 0D       		.uleb128 0xd
 2470 0457 ED000000 		.4byte	.LASF64
 2471 045b 05       		.byte	0x5
 2472 045c A901     		.2byte	0x1a9
 2473 045e 77000000 		.4byte	0x77
 2474 0462 08       		.byte	0x8
 2475 0463 0D       		.uleb128 0xd
 2476 0464 0C060000 		.4byte	.LASF65
 2477 0468 05       		.byte	0x5
 2478 0469 AE01     		.2byte	0x1ae
 2479 046b C1000000 		.4byte	0xc1
 2480 046f 0C       		.byte	0xc
 2481 0470 0D       		.uleb128 0xd
 2482 0471 B9080000 		.4byte	.LASF66
 2483 0475 05       		.byte	0x5
 2484 0476 B401     		.2byte	0x1b4
 2485 0478 00050000 		.4byte	0x500
 2486 047c 10       		.byte	0x10
 2487 047d 0D       		.uleb128 0xd
 2488 047e B6090000 		.4byte	.LASF67
 2489 0482 05       		.byte	0x5
 2490 0483 BB01     		.2byte	0x1bb
 2491 0485 00050000 		.4byte	0x500
 2492 0489 14       		.byte	0x14
 2493 048a 0D       		.uleb128 0xd
 2494 048b 46080000 		.4byte	.LASF68
 2495 048f 05       		.byte	0x5
 2496 0490 CB01     		.2byte	0x1cb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 95


 2497 0492 10050000 		.4byte	0x510
 2498 0496 18       		.byte	0x18
 2499 0497 0D       		.uleb128 0xd
 2500 0498 05070000 		.4byte	.LASF69
 2501 049c 05       		.byte	0x5
 2502 049d D101     		.2byte	0x1d1
 2503 049f 77000000 		.4byte	0x77
 2504 04a3 1E       		.byte	0x1e
 2505 04a4 0D       		.uleb128 0xd
 2506 04a5 E3030000 		.4byte	.LASF70
 2507 04a9 05       		.byte	0x5
 2508 04aa D601     		.2byte	0x1d6
 2509 04ac 6B000000 		.4byte	0x6b
 2510 04b0 20       		.byte	0x20
 2511 04b1 0D       		.uleb128 0xd
 2512 04b2 B6060000 		.4byte	.LASF71
 2513 04b6 05       		.byte	0x5
 2514 04b7 DB01     		.2byte	0x1db
 2515 04b9 22030000 		.4byte	0x322
 2516 04bd 22       		.byte	0x22
 2517 04be 0D       		.uleb128 0xd
 2518 04bf 2D030000 		.4byte	.LASF72
 2519 04c3 05       		.byte	0x5
 2520 04c4 E001     		.2byte	0x1e0
 2521 04c6 0D040000 		.4byte	0x40d
 2522 04ca 7C       		.byte	0x7c
 2523 04cb 0D       		.uleb128 0xd
 2524 04cc B5000000 		.4byte	.LASF73
 2525 04d0 05       		.byte	0x5
 2526 04d1 E501     		.2byte	0x1e5
 2527 04d3 6B000000 		.4byte	0x6b
 2528 04d7 AE       		.byte	0xae
 2529 04d8 0D       		.uleb128 0xd
 2530 04d9 4C030000 		.4byte	.LASF74
 2531 04dd 05       		.byte	0x5
 2532 04de EA01     		.2byte	0x1ea
 2533 04e0 6B000000 		.4byte	0x6b
 2534 04e4 AF       		.byte	0xaf
 2535 04e5 0D       		.uleb128 0xd
 2536 04e6 F1070000 		.4byte	.LASF75
 2537 04ea 05       		.byte	0x5
 2538 04eb EF01     		.2byte	0x1ef
 2539 04ed 77000000 		.4byte	0x77
 2540 04f1 B0       		.byte	0xb0
 2541 04f2 0D       		.uleb128 0xd
 2542 04f3 CC060000 		.4byte	.LASF76
 2543 04f7 05       		.byte	0x5
 2544 04f8 F401     		.2byte	0x1f4
 2545 04fa 86030000 		.4byte	0x386
 2546 04fe B2       		.byte	0xb2
 2547 04ff 00       		.byte	0
 2548 0500 0B       		.uleb128 0xb
 2549 0501 83000000 		.4byte	0x83
 2550 0505 10050000 		.4byte	0x510
 2551 0509 0C       		.uleb128 0xc
 2552 050a 1A020000 		.4byte	0x21a
 2553 050e 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 96


 2554 050f 00       		.byte	0
 2555 0510 0B       		.uleb128 0xb
 2556 0511 6B000000 		.4byte	0x6b
 2557 0515 20050000 		.4byte	0x520
 2558 0519 0C       		.uleb128 0xc
 2559 051a 1A020000 		.4byte	0x21a
 2560 051e 04       		.byte	0x4
 2561 051f 00       		.byte	0
 2562 0520 04       		.uleb128 0x4
 2563 0521 F6050000 		.4byte	.LASF77
 2564 0525 05       		.byte	0x5
 2565 0526 F501     		.2byte	0x1f5
 2566 0528 19040000 		.4byte	0x419
 2567 052c 0E       		.uleb128 0xe
 2568 052d 1C       		.byte	0x1c
 2569 052e 05       		.byte	0x5
 2570 052f FB01     		.2byte	0x1fb
 2571 0531 AB050000 		.4byte	0x5ab
 2572 0535 0D       		.uleb128 0xd
 2573 0536 3A070000 		.4byte	.LASF78
 2574 053a 05       		.byte	0x5
 2575 053b 0002     		.2byte	0x200
 2576 053d AB050000 		.4byte	0x5ab
 2577 0541 00       		.byte	0
 2578 0542 0D       		.uleb128 0xd
 2579 0543 51060000 		.4byte	.LASF79
 2580 0547 05       		.byte	0x5
 2581 0548 0502     		.2byte	0x205
 2582 054a AB050000 		.4byte	0x5ab
 2583 054e 04       		.byte	0x4
 2584 054f 0D       		.uleb128 0xd
 2585 0550 2B040000 		.4byte	.LASF80
 2586 0554 05       		.byte	0x5
 2587 0555 0A02     		.2byte	0x20a
 2588 0557 AB050000 		.4byte	0x5ab
 2589 055b 08       		.byte	0x8
 2590 055c 0D       		.uleb128 0xd
 2591 055d ED080000 		.4byte	.LASF81
 2592 0561 05       		.byte	0x5
 2593 0562 0F02     		.2byte	0x20f
 2594 0564 AB050000 		.4byte	0x5ab
 2595 0568 0C       		.byte	0xc
 2596 0569 0D       		.uleb128 0xd
 2597 056a B50A0000 		.4byte	.LASF82
 2598 056e 05       		.byte	0x5
 2599 056f 1402     		.2byte	0x214
 2600 0571 83000000 		.4byte	0x83
 2601 0575 10       		.byte	0x10
 2602 0576 0D       		.uleb128 0xd
 2603 0577 9B070000 		.4byte	.LASF83
 2604 057b 05       		.byte	0x5
 2605 057c 1902     		.2byte	0x219
 2606 057e 83000000 		.4byte	0x83
 2607 0582 14       		.byte	0x14
 2608 0583 0D       		.uleb128 0xd
 2609 0584 CA050000 		.4byte	.LASF84
 2610 0588 05       		.byte	0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 97


 2611 0589 1E02     		.2byte	0x21e
 2612 058b 6B000000 		.4byte	0x6b
 2613 058f 18       		.byte	0x18
 2614 0590 0D       		.uleb128 0xd
 2615 0591 100A0000 		.4byte	.LASF85
 2616 0595 05       		.byte	0x5
 2617 0596 2302     		.2byte	0x223
 2618 0598 6B000000 		.4byte	0x6b
 2619 059c 19       		.byte	0x19
 2620 059d 0D       		.uleb128 0xd
 2621 059e 71020000 		.4byte	.LASF86
 2622 05a2 05       		.byte	0x5
 2623 05a3 2802     		.2byte	0x228
 2624 05a5 6B000000 		.4byte	0x6b
 2625 05a9 1A       		.byte	0x1a
 2626 05aa 00       		.byte	0
 2627 05ab 10       		.uleb128 0x10
 2628 05ac 04       		.byte	0x4
 2629 05ad B5000000 		.4byte	0xb5
 2630 05b1 04       		.uleb128 0x4
 2631 05b2 340B0000 		.4byte	.LASF87
 2632 05b6 05       		.byte	0x5
 2633 05b7 2902     		.2byte	0x229
 2634 05b9 2C050000 		.4byte	0x52c
 2635 05bd 0E       		.uleb128 0xe
 2636 05be 20       		.byte	0x20
 2637 05bf 05       		.byte	0x5
 2638 05c0 5C02     		.2byte	0x25c
 2639 05c2 49060000 		.4byte	0x649
 2640 05c6 0D       		.uleb128 0xd
 2641 05c7 BF060000 		.4byte	.LASF88
 2642 05cb 05       		.byte	0x5
 2643 05cc 6502     		.2byte	0x265
 2644 05ce 49060000 		.4byte	0x649
 2645 05d2 00       		.byte	0
 2646 05d3 0D       		.uleb128 0xd
 2647 05d4 A90A0000 		.4byte	.LASF89
 2648 05d8 05       		.byte	0x5
 2649 05d9 6C02     		.2byte	0x26c
 2650 05db 50060000 		.4byte	0x650
 2651 05df 04       		.byte	0x4
 2652 05e0 0D       		.uleb128 0xd
 2653 05e1 0D080000 		.4byte	.LASF90
 2654 05e5 05       		.byte	0x5
 2655 05e6 7202     		.2byte	0x272
 2656 05e8 52060000 		.4byte	0x652
 2657 05ec 08       		.byte	0x8
 2658 05ed 0D       		.uleb128 0xd
 2659 05ee 55070000 		.4byte	.LASF91
 2660 05f2 05       		.byte	0x5
 2661 05f3 7802     		.2byte	0x278
 2662 05f5 50060000 		.4byte	0x650
 2663 05f9 0C       		.byte	0xc
 2664 05fa 0D       		.uleb128 0xd
 2665 05fb 320A0000 		.4byte	.LASF92
 2666 05ff 05       		.byte	0x5
 2667 0600 7F02     		.2byte	0x27f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 98


 2668 0602 58060000 		.4byte	0x658
 2669 0606 10       		.byte	0x10
 2670 0607 0D       		.uleb128 0xd
 2671 0608 6A0A0000 		.4byte	.LASF93
 2672 060c 05       		.byte	0x5
 2673 060d 8402     		.2byte	0x284
 2674 060f 83000000 		.4byte	0x83
 2675 0613 14       		.byte	0x14
 2676 0614 0D       		.uleb128 0xd
 2677 0615 3A050000 		.4byte	.LASF94
 2678 0619 05       		.byte	0x5
 2679 061a 8B02     		.2byte	0x28b
 2680 061c 77000000 		.4byte	0x77
 2681 0620 18       		.byte	0x18
 2682 0621 0D       		.uleb128 0xd
 2683 0622 73030000 		.4byte	.LASF95
 2684 0626 05       		.byte	0x5
 2685 0627 9202     		.2byte	0x292
 2686 0629 6B000000 		.4byte	0x6b
 2687 062d 1A       		.byte	0x1a
 2688 062e 0D       		.uleb128 0xd
 2689 062f 65090000 		.4byte	.LASF96
 2690 0633 05       		.byte	0x5
 2691 0634 9C02     		.2byte	0x29c
 2692 0636 6B000000 		.4byte	0x6b
 2693 063a 1B       		.byte	0x1b
 2694 063b 0D       		.uleb128 0xd
 2695 063c 5C030000 		.4byte	.LASF97
 2696 0640 05       		.byte	0x5
 2697 0641 A402     		.2byte	0x2a4
 2698 0643 5E060000 		.4byte	0x65e
 2699 0647 1C       		.byte	0x1c
 2700 0648 00       		.byte	0
 2701 0649 10       		.uleb128 0x10
 2702 064a 04       		.byte	0x4
 2703 064b 4F060000 		.4byte	0x64f
 2704 064f 11       		.uleb128 0x11
 2705 0650 12       		.uleb128 0x12
 2706 0651 04       		.byte	0x4
 2707 0652 10       		.uleb128 0x10
 2708 0653 04       		.byte	0x4
 2709 0654 A6030000 		.4byte	0x3a6
 2710 0658 10       		.uleb128 0x10
 2711 0659 04       		.byte	0x4
 2712 065a 6B000000 		.4byte	0x6b
 2713 065e 10       		.uleb128 0x10
 2714 065f 04       		.byte	0x4
 2715 0660 3B010000 		.4byte	0x13b
 2716 0664 04       		.uleb128 0x4
 2717 0665 82000000 		.4byte	.LASF98
 2718 0669 05       		.byte	0x5
 2719 066a A502     		.2byte	0x2a5
 2720 066c BD050000 		.4byte	0x5bd
 2721 0670 0E       		.uleb128 0xe
 2722 0671 A0       		.byte	0xa0
 2723 0672 05       		.byte	0x5
 2724 0673 AB02     		.2byte	0x2ab
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 99


 2725 0675 87060000 		.4byte	0x687
 2726 0679 0D       		.uleb128 0xd
 2727 067a 630C0000 		.4byte	.LASF99
 2728 067e 05       		.byte	0x5
 2729 067f B002     		.2byte	0x2b0
 2730 0681 87060000 		.4byte	0x687
 2731 0685 00       		.byte	0
 2732 0686 00       		.byte	0
 2733 0687 0B       		.uleb128 0xb
 2734 0688 64060000 		.4byte	0x664
 2735 068c 97060000 		.4byte	0x697
 2736 0690 0C       		.uleb128 0xc
 2737 0691 1A020000 		.4byte	0x21a
 2738 0695 04       		.byte	0x4
 2739 0696 00       		.byte	0
 2740 0697 04       		.uleb128 0x4
 2741 0698 2E080000 		.4byte	.LASF100
 2742 069c 05       		.byte	0x5
 2743 069d B102     		.2byte	0x2b1
 2744 069f 70060000 		.4byte	0x670
 2745 06a3 02       		.uleb128 0x2
 2746 06a4 08       		.byte	0x8
 2747 06a5 04       		.byte	0x4
 2748 06a6 10070000 		.4byte	.LASF101
 2749 06aa 13       		.uleb128 0x13
 2750 06ab F9000000 		.4byte	.LASF103
 2751 06af 01       		.byte	0x1
 2752 06b0 5E01     		.2byte	0x15e
 2753 06b2 00000000 		.4byte	.LFB1
 2754 06b6 10000000 		.4byte	.LFE1-.LFB1
 2755 06ba 01       		.uleb128 0x1
 2756 06bb 9C       		.byte	0x9c
 2757 06bc E1060000 		.4byte	0x6e1
 2758 06c0 14       		.uleb128 0x14
 2759 06c1 50080000 		.4byte	.LASF41
 2760 06c5 01       		.byte	0x1
 2761 06c6 5E01     		.2byte	0x15e
 2762 06c8 83000000 		.4byte	0x83
 2763 06cc 00000000 		.4byte	.LLST0
 2764 06d0 14       		.uleb128 0x14
 2765 06d1 DE0B0000 		.4byte	.LASF102
 2766 06d5 01       		.byte	0x1
 2767 06d6 5E01     		.2byte	0x15e
 2768 06d8 83000000 		.4byte	0x83
 2769 06dc 21000000 		.4byte	.LLST1
 2770 06e0 00       		.byte	0
 2771 06e1 15       		.uleb128 0x15
 2772 06e2 C4030000 		.4byte	.LASF104
 2773 06e6 01       		.byte	0x1
 2774 06e7 7E01     		.2byte	0x17e
 2775 06e9 00000000 		.4byte	.LFB2
 2776 06ed 58000000 		.4byte	.LFE2-.LFB2
 2777 06f1 01       		.uleb128 0x1
 2778 06f2 9C       		.byte	0x9c
 2779 06f3 06070000 		.4byte	0x706
 2780 06f7 16       		.uleb128 0x16
 2781 06f8 AC070000 		.4byte	.LASF106
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 100


 2782 06fc 01       		.byte	0x1
 2783 06fd 8101     		.2byte	0x181
 2784 06ff 83000000 		.4byte	0x83
 2785 0703 01       		.uleb128 0x1
 2786 0704 50       		.byte	0x50
 2787 0705 00       		.byte	0
 2788 0706 17       		.uleb128 0x17
 2789 0707 00000000 		.4byte	.LASF178
 2790 070b 01       		.byte	0x1
 2791 070c A701     		.2byte	0x1a7
 2792 070e 00000000 		.4byte	.LFB3
 2793 0712 1C000000 		.4byte	.LFE3-.LFB3
 2794 0716 01       		.uleb128 0x1
 2795 0717 9C       		.byte	0x9c
 2796 0718 13       		.uleb128 0x13
 2797 0719 410C0000 		.4byte	.LASF105
 2798 071d 01       		.byte	0x1
 2799 071e D806     		.2byte	0x6d8
 2800 0720 00000000 		.4byte	.LFB19
 2801 0724 2C000000 		.4byte	.LFE19-.LFB19
 2802 0728 01       		.uleb128 0x1
 2803 0729 9C       		.byte	0x9c
 2804 072a 3F070000 		.4byte	0x73f
 2805 072e 18       		.uleb128 0x18
 2806 072f 4F0B0000 		.4byte	.LASF107
 2807 0733 01       		.byte	0x1
 2808 0734 DA06     		.2byte	0x6da
 2809 0736 83000000 		.4byte	0x83
 2810 073a 41000000 		.4byte	.LLST2
 2811 073e 00       		.byte	0
 2812 073f 13       		.uleb128 0x13
 2813 0740 DC060000 		.4byte	.LASF108
 2814 0744 01       		.byte	0x1
 2815 0745 0307     		.2byte	0x703
 2816 0747 00000000 		.4byte	.LFB20
 2817 074b 30000000 		.4byte	.LFE20-.LFB20
 2818 074f 01       		.uleb128 0x1
 2819 0750 9C       		.byte	0x9c
 2820 0751 66070000 		.4byte	0x766
 2821 0755 18       		.uleb128 0x18
 2822 0756 4F0B0000 		.4byte	.LASF107
 2823 075a 01       		.byte	0x1
 2824 075b 0707     		.2byte	0x707
 2825 075d 83000000 		.4byte	0x83
 2826 0761 7A000000 		.4byte	.LLST3
 2827 0765 00       		.byte	0
 2828 0766 19       		.uleb128 0x19
 2829 0767 770A0000 		.4byte	.LASF144
 2830 076b 01       		.byte	0x1
 2831 076c 3107     		.2byte	0x731
 2832 076e A4000000 		.4byte	0xa4
 2833 0772 00000000 		.4byte	.LFB21
 2834 0776 42000000 		.4byte	.LFE21-.LFB21
 2835 077a 01       		.uleb128 0x1
 2836 077b 9C       		.byte	0x9c
 2837 077c EF070000 		.4byte	0x7ef
 2838 0780 14       		.uleb128 0x14
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 101


 2839 0781 47020000 		.4byte	.LASF109
 2840 0785 01       		.byte	0x1
 2841 0786 3107     		.2byte	0x731
 2842 0788 EF070000 		.4byte	0x7ef
 2843 078c 9C000000 		.4byte	.LLST4
 2844 0790 14       		.uleb128 0x14
 2845 0791 89040000 		.4byte	.LASF110
 2846 0795 01       		.byte	0x1
 2847 0796 3107     		.2byte	0x731
 2848 0798 83000000 		.4byte	0x83
 2849 079c BD000000 		.4byte	.LLST5
 2850 07a0 14       		.uleb128 0x14
 2851 07a1 5D080000 		.4byte	.LASF111
 2852 07a5 01       		.byte	0x1
 2853 07a6 3107     		.2byte	0x731
 2854 07a8 83000000 		.4byte	0x83
 2855 07ac E9000000 		.4byte	.LLST6
 2856 07b0 16       		.uleb128 0x16
 2857 07b1 A6060000 		.4byte	.LASF112
 2858 07b5 01       		.byte	0x1
 2859 07b6 3307     		.2byte	0x733
 2860 07b8 A4000000 		.4byte	0xa4
 2861 07bc 01       		.uleb128 0x1
 2862 07bd 50       		.byte	0x50
 2863 07be 18       		.uleb128 0x18
 2864 07bf CB0A0000 		.4byte	.LASF113
 2865 07c3 01       		.byte	0x1
 2866 07c4 3407     		.2byte	0x734
 2867 07c6 83000000 		.4byte	0x83
 2868 07ca 15010000 		.4byte	.LLST7
 2869 07ce 18       		.uleb128 0x18
 2870 07cf 46050000 		.4byte	.LASF114
 2871 07d3 01       		.byte	0x1
 2872 07d4 3507     		.2byte	0x735
 2873 07d6 83000000 		.4byte	0x83
 2874 07da 33010000 		.4byte	.LLST8
 2875 07de 18       		.uleb128 0x18
 2876 07df A0070000 		.4byte	.LASF115
 2877 07e3 01       		.byte	0x1
 2878 07e4 3607     		.2byte	0x736
 2879 07e6 83000000 		.4byte	0x83
 2880 07ea 7F010000 		.4byte	.LLST9
 2881 07ee 00       		.byte	0
 2882 07ef 10       		.uleb128 0x10
 2883 07f0 04       		.byte	0x4
 2884 07f1 F5070000 		.4byte	0x7f5
 2885 07f5 1A       		.uleb128 0x1a
 2886 07f6 21020000 		.4byte	0x221
 2887 07fa 1B       		.uleb128 0x1b
 2888 07fb 05020000 		.4byte	.LASF116
 2889 07ff 01       		.byte	0x1
 2890 0800 DF01     		.2byte	0x1df
 2891 0802 00000000 		.4byte	.LFB4
 2892 0806 18010000 		.4byte	.LFE4-.LFB4
 2893 080a 01       		.uleb128 0x1
 2894 080b 9C       		.byte	0x9c
 2895 080c 4E080000 		.4byte	0x84e
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 102


 2896 0810 18       		.uleb128 0x18
 2897 0811 4F0B0000 		.4byte	.LASF107
 2898 0815 01       		.byte	0x1
 2899 0816 E101     		.2byte	0x1e1
 2900 0818 83000000 		.4byte	0x83
 2901 081c 9D010000 		.4byte	.LLST10
 2902 0820 1C       		.uleb128 0x1c
 2903 0821 06000000 		.4byte	.LVL32
 2904 0825 F80F0000 		.4byte	0xff8
 2905 0829 1C       		.uleb128 0x1c
 2906 082a 0A000000 		.4byte	.LVL33
 2907 082e 03100000 		.4byte	0x1003
 2908 0832 1C       		.uleb128 0x1c
 2909 0833 82000000 		.4byte	.LVL48
 2910 0837 06070000 		.4byte	0x706
 2911 083b 1C       		.uleb128 0x1c
 2912 083c 8C000000 		.4byte	.LVL49
 2913 0840 0E100000 		.4byte	0x100e
 2914 0844 1C       		.uleb128 0x1c
 2915 0845 90000000 		.4byte	.LVL50
 2916 0849 E1060000 		.4byte	0x6e1
 2917 084d 00       		.byte	0
 2918 084e 1B       		.uleb128 0x1b
 2919 084f C5000000 		.4byte	.LASF117
 2920 0853 01       		.byte	0x1
 2921 0854 F302     		.2byte	0x2f3
 2922 0856 00000000 		.4byte	.LFB6
 2923 085a 4C000000 		.4byte	.LFE6-.LFB6
 2924 085e 01       		.uleb128 0x1
 2925 085f 9C       		.byte	0x9c
 2926 0860 C9080000 		.4byte	0x8c9
 2927 0864 14       		.uleb128 0x14
 2928 0865 47020000 		.4byte	.LASF109
 2929 0869 01       		.byte	0x1
 2930 086a F302     		.2byte	0x2f3
 2931 086c EF070000 		.4byte	0x7ef
 2932 0870 E5010000 		.4byte	.LLST11
 2933 0874 18       		.uleb128 0x18
 2934 0875 3F010000 		.4byte	.LASF118
 2935 0879 01       		.byte	0x1
 2936 087a F602     		.2byte	0x2f6
 2937 087c 6B000000 		.4byte	0x6b
 2938 0880 11020000 		.4byte	.LLST12
 2939 0884 18       		.uleb128 0x18
 2940 0885 11090000 		.4byte	.LASF119
 2941 0889 01       		.byte	0x1
 2942 088a F902     		.2byte	0x2f9
 2943 088c 83000000 		.4byte	0x83
 2944 0890 2F020000 		.4byte	.LLST13
 2945 0894 18       		.uleb128 0x18
 2946 0895 1C000000 		.4byte	.LASF120
 2947 0899 01       		.byte	0x1
 2948 089a FC02     		.2byte	0x2fc
 2949 089c 83000000 		.4byte	0x83
 2950 08a0 42020000 		.4byte	.LLST14
 2951 08a4 1C       		.uleb128 0x1c
 2952 08a5 08000000 		.4byte	.LVL52
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 103


 2953 08a9 19100000 		.4byte	0x1019
 2954 08ad 1C       		.uleb128 0x1c
 2955 08ae 20000000 		.4byte	.LVL57
 2956 08b2 24100000 		.4byte	0x1024
 2957 08b6 1C       		.uleb128 0x1c
 2958 08b7 24000000 		.4byte	.LVL58
 2959 08bb 19100000 		.4byte	0x1019
 2960 08bf 1C       		.uleb128 0x1c
 2961 08c0 3A000000 		.4byte	.LVL62
 2962 08c4 24100000 		.4byte	0x1024
 2963 08c8 00       		.byte	0
 2964 08c9 1D       		.uleb128 0x1d
 2965 08ca 50000000 		.4byte	.LASF150
 2966 08ce 01       		.byte	0x1
 2967 08cf 6803     		.2byte	0x368
 2968 08d1 83000000 		.4byte	0x83
 2969 08d5 00000000 		.4byte	.LFB7
 2970 08d9 1C000000 		.4byte	.LFE7-.LFB7
 2971 08dd 01       		.uleb128 0x1
 2972 08de 9C       		.byte	0x9c
 2973 08df 24090000 		.4byte	0x924
 2974 08e3 14       		.uleb128 0x14
 2975 08e4 DE0B0000 		.4byte	.LASF102
 2976 08e8 01       		.byte	0x1
 2977 08e9 6803     		.2byte	0x368
 2978 08eb 83000000 		.4byte	0x83
 2979 08ef 55020000 		.4byte	.LLST15
 2980 08f3 14       		.uleb128 0x14
 2981 08f4 EB050000 		.4byte	.LASF32
 2982 08f8 01       		.byte	0x1
 2983 08f9 6803     		.2byte	0x368
 2984 08fb 83000000 		.4byte	0x83
 2985 08ff 81020000 		.4byte	.LLST16
 2986 0903 14       		.uleb128 0x14
 2987 0904 09030000 		.4byte	.LASF121
 2988 0908 01       		.byte	0x1
 2989 0909 6803     		.2byte	0x368
 2990 090b 83000000 		.4byte	0x83
 2991 090f A2020000 		.4byte	.LLST17
 2992 0913 18       		.uleb128 0x18
 2993 0914 DC050000 		.4byte	.LASF122
 2994 0918 01       		.byte	0x1
 2995 0919 6A03     		.2byte	0x36a
 2996 091b 83000000 		.4byte	0x83
 2997 091f C3020000 		.4byte	.LLST18
 2998 0923 00       		.byte	0
 2999 0924 1B       		.uleb128 0x1b
 3000 0925 8A060000 		.4byte	.LASF123
 3001 0929 01       		.byte	0x1
 3002 092a B403     		.2byte	0x3b4
 3003 092c 00000000 		.4byte	.LFB8
 3004 0930 30000000 		.4byte	.LFE8-.LFB8
 3005 0934 01       		.uleb128 0x1
 3006 0935 9C       		.byte	0x9c
 3007 0936 84090000 		.4byte	0x984
 3008 093a 18       		.uleb128 0x18
 3009 093b DE0B0000 		.4byte	.LASF102
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 104


 3010 093f 01       		.byte	0x1
 3011 0940 B603     		.2byte	0x3b6
 3012 0942 83000000 		.4byte	0x83
 3013 0946 F3020000 		.4byte	.LLST19
 3014 094a 18       		.uleb128 0x18
 3015 094b 09030000 		.4byte	.LASF121
 3016 094f 01       		.byte	0x1
 3017 0950 B703     		.2byte	0x3b7
 3018 0952 83000000 		.4byte	0x83
 3019 0956 06030000 		.4byte	.LLST20
 3020 095a 18       		.uleb128 0x18
 3021 095b 4F0B0000 		.4byte	.LASF107
 3022 095f 01       		.byte	0x1
 3023 0960 B803     		.2byte	0x3b8
 3024 0962 83000000 		.4byte	0x83
 3025 0966 26030000 		.4byte	.LLST21
 3026 096a 18       		.uleb128 0x18
 3027 096b 47020000 		.4byte	.LASF109
 3028 096f 01       		.byte	0x1
 3029 0970 BA03     		.2byte	0x3ba
 3030 0972 EF070000 		.4byte	0x7ef
 3031 0976 39030000 		.4byte	.LLST22
 3032 097a 1C       		.uleb128 0x1c
 3033 097b 24000000 		.4byte	.LVL76
 3034 097f AA060000 		.4byte	0x6aa
 3035 0983 00       		.byte	0
 3036 0984 1B       		.uleb128 0x1b
 3037 0985 E10A0000 		.4byte	.LASF124
 3038 0989 01       		.byte	0x1
 3039 098a 1904     		.2byte	0x419
 3040 098c 00000000 		.4byte	.LFB9
 3041 0990 1C000000 		.4byte	.LFE9-.LFB9
 3042 0994 01       		.uleb128 0x1
 3043 0995 9C       		.byte	0x9c
 3044 0996 D4090000 		.4byte	0x9d4
 3045 099a 14       		.uleb128 0x14
 3046 099b 47020000 		.4byte	.LASF109
 3047 099f 01       		.byte	0x1
 3048 09a0 1904     		.2byte	0x419
 3049 09a2 EF070000 		.4byte	0x7ef
 3050 09a6 4C030000 		.4byte	.LLST23
 3051 09aa 18       		.uleb128 0x18
 3052 09ab DC050000 		.4byte	.LASF122
 3053 09af 01       		.byte	0x1
 3054 09b0 1C04     		.2byte	0x41c
 3055 09b2 83000000 		.4byte	0x83
 3056 09b6 78030000 		.4byte	.LLST24
 3057 09ba 18       		.uleb128 0x18
 3058 09bb DE0B0000 		.4byte	.LASF102
 3059 09bf 01       		.byte	0x1
 3060 09c0 1D04     		.2byte	0x41d
 3061 09c2 83000000 		.4byte	0x83
 3062 09c6 8B030000 		.4byte	.LLST25
 3063 09ca 1C       		.uleb128 0x1c
 3064 09cb 0E000000 		.4byte	.LVL79
 3065 09cf C9080000 		.4byte	0x8c9
 3066 09d3 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 105


 3067 09d4 1E       		.uleb128 0x1e
 3068 09d5 4F020000 		.4byte	.LASF125
 3069 09d9 01       		.byte	0x1
 3070 09da 070A     		.2byte	0xa07
 3071 09dc 03       		.byte	0x3
 3072 09dd EE090000 		.4byte	0x9ee
 3073 09e1 1F       		.uleb128 0x1f
 3074 09e2 13030000 		.4byte	.LASF127
 3075 09e6 01       		.byte	0x1
 3076 09e7 0D0A     		.2byte	0xa0d
 3077 09e9 83000000 		.4byte	0x83
 3078 09ed 00       		.byte	0
 3079 09ee 1E       		.uleb128 0x1e
 3080 09ef 77050000 		.4byte	.LASF126
 3081 09f3 01       		.byte	0x1
 3082 09f4 8709     		.2byte	0x987
 3083 09f6 03       		.byte	0x3
 3084 09f7 080A0000 		.4byte	0xa08
 3085 09fb 1F       		.uleb128 0x1f
 3086 09fc 13030000 		.4byte	.LASF127
 3087 0a00 01       		.byte	0x1
 3088 0a01 8D09     		.2byte	0x98d
 3089 0a03 83000000 		.4byte	0x83
 3090 0a07 00       		.byte	0
 3091 0a08 1B       		.uleb128 0x1b
 3092 0a09 9D080000 		.4byte	.LASF128
 3093 0a0d 01       		.byte	0x1
 3094 0a0e EF04     		.2byte	0x4ef
 3095 0a10 00000000 		.4byte	.LFB12
 3096 0a14 E4000000 		.4byte	.LFE12-.LFB12
 3097 0a18 01       		.uleb128 0x1
 3098 0a19 9C       		.byte	0x9c
 3099 0a1a A00A0000 		.4byte	0xaa0
 3100 0a1e 20       		.uleb128 0x20
 3101 0a1f EE090000 		.4byte	0x9ee
 3102 0a23 0E000000 		.4byte	.LBB6
 3103 0a27 4E000000 		.4byte	.LBE6-.LBB6
 3104 0a2b 01       		.byte	0x1
 3105 0a2c 0C05     		.2byte	0x50c
 3106 0a2e 460A0000 		.4byte	0xa46
 3107 0a32 21       		.uleb128 0x21
 3108 0a33 0E000000 		.4byte	.LBB7
 3109 0a37 4E000000 		.4byte	.LBE7-.LBB7
 3110 0a3b 22       		.uleb128 0x22
 3111 0a3c FB090000 		.4byte	0x9fb
 3112 0a40 9E030000 		.4byte	.LLST26
 3113 0a44 00       		.byte	0
 3114 0a45 00       		.byte	0
 3115 0a46 20       		.uleb128 0x20
 3116 0a47 D4090000 		.4byte	0x9d4
 3117 0a4b 5C000000 		.4byte	.LBB8
 3118 0a4f 56000000 		.4byte	.LBE8-.LBB8
 3119 0a53 01       		.byte	0x1
 3120 0a54 0F05     		.2byte	0x50f
 3121 0a56 900A0000 		.4byte	0xa90
 3122 0a5a 21       		.uleb128 0x21
 3123 0a5b 5C000000 		.4byte	.LBB9
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 106


 3124 0a5f 56000000 		.4byte	.LBE9-.LBB9
 3125 0a63 22       		.uleb128 0x22
 3126 0a64 E1090000 		.4byte	0x9e1
 3127 0a68 BF030000 		.4byte	.LLST27
 3128 0a6c 23       		.uleb128 0x23
 3129 0a6d 6A000000 		.4byte	.LVL86
 3130 0a71 2F100000 		.4byte	0x102f
 3131 0a75 7F0A0000 		.4byte	0xa7f
 3132 0a79 24       		.uleb128 0x24
 3133 0a7a 01       		.uleb128 0x1
 3134 0a7b 50       		.byte	0x50
 3135 0a7c 01       		.uleb128 0x1
 3136 0a7d 3A       		.byte	0x3a
 3137 0a7e 00       		.byte	0
 3138 0a7f 25       		.uleb128 0x25
 3139 0a80 70000000 		.4byte	.LVL87
 3140 0a84 3A100000 		.4byte	0x103a
 3141 0a88 24       		.uleb128 0x24
 3142 0a89 01       		.uleb128 0x1
 3143 0a8a 50       		.byte	0x50
 3144 0a8b 01       		.uleb128 0x1
 3145 0a8c 3A       		.byte	0x3a
 3146 0a8d 00       		.byte	0
 3147 0a8e 00       		.byte	0
 3148 0a8f 00       		.byte	0
 3149 0a90 25       		.uleb128 0x25
 3150 0a91 08000000 		.4byte	.LVL81
 3151 0a95 45100000 		.4byte	0x1045
 3152 0a99 24       		.uleb128 0x24
 3153 0a9a 01       		.uleb128 0x1
 3154 0a9b 50       		.byte	0x50
 3155 0a9c 01       		.uleb128 0x1
 3156 0a9d 3A       		.byte	0x3a
 3157 0a9e 00       		.byte	0
 3158 0a9f 00       		.byte	0
 3159 0aa0 1B       		.uleb128 0x1b
 3160 0aa1 18080000 		.4byte	.LASF129
 3161 0aa5 01       		.byte	0x1
 3162 0aa6 5A05     		.2byte	0x55a
 3163 0aa8 00000000 		.4byte	.LFB13
 3164 0aac 20000000 		.4byte	.LFE13-.LFB13
 3165 0ab0 01       		.uleb128 0x1
 3166 0ab1 9C       		.byte	0x9c
 3167 0ab2 D30A0000 		.4byte	0xad3
 3168 0ab6 23       		.uleb128 0x23
 3169 0ab7 12000000 		.4byte	.LVL92
 3170 0abb 50100000 		.4byte	0x1050
 3171 0abf C90A0000 		.4byte	0xac9
 3172 0ac3 24       		.uleb128 0x24
 3173 0ac4 01       		.uleb128 0x1
 3174 0ac5 50       		.byte	0x50
 3175 0ac6 01       		.uleb128 0x1
 3176 0ac7 3A       		.byte	0x3a
 3177 0ac8 00       		.byte	0
 3178 0ac9 1C       		.uleb128 0x1c
 3179 0aca 16000000 		.4byte	.LVL93
 3180 0ace 080A0000 		.4byte	0xa08
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 107


 3181 0ad2 00       		.byte	0
 3182 0ad3 1B       		.uleb128 0x1b
 3183 0ad4 6B010000 		.4byte	.LASF130
 3184 0ad8 01       		.byte	0x1
 3185 0ad9 6906     		.2byte	0x669
 3186 0adb 00000000 		.4byte	.LFB17
 3187 0adf 34000000 		.4byte	.LFE17-.LFB17
 3188 0ae3 01       		.uleb128 0x1
 3189 0ae4 9C       		.byte	0x9c
 3190 0ae5 4C0B0000 		.4byte	0xb4c
 3191 0ae9 14       		.uleb128 0x14
 3192 0aea 77000000 		.4byte	.LASF131
 3193 0aee 01       		.byte	0x1
 3194 0aef 6906     		.2byte	0x669
 3195 0af1 4C0B0000 		.4byte	0xb4c
 3196 0af5 E0030000 		.4byte	.LLST28
 3197 0af9 18       		.uleb128 0x18
 3198 0afa B3030000 		.4byte	.LASF132
 3199 0afe 01       		.byte	0x1
 3200 0aff 6B06     		.2byte	0x66b
 3201 0b01 83000000 		.4byte	0x83
 3202 0b05 0C040000 		.4byte	.LLST29
 3203 0b09 18       		.uleb128 0x18
 3204 0b0a 3F010000 		.4byte	.LASF118
 3205 0b0e 01       		.byte	0x1
 3206 0b0f 6C06     		.2byte	0x66c
 3207 0b11 6B000000 		.4byte	0x6b
 3208 0b15 35040000 		.4byte	.LLST30
 3209 0b19 18       		.uleb128 0x18
 3210 0b1a F8010000 		.4byte	.LASF133
 3211 0b1e 01       		.byte	0x1
 3212 0b1f 6D06     		.2byte	0x66d
 3213 0b21 83000000 		.4byte	0x83
 3214 0b25 48040000 		.4byte	.LLST31
 3215 0b29 18       		.uleb128 0x18
 3216 0b2a 84010000 		.4byte	.LASF134
 3217 0b2e 01       		.byte	0x1
 3218 0b2f 6E06     		.2byte	0x66e
 3219 0b31 83000000 		.4byte	0x83
 3220 0b35 5B040000 		.4byte	.LLST32
 3221 0b39 1C       		.uleb128 0x1c
 3222 0b3a 0C000000 		.4byte	.LVL97
 3223 0b3e 19100000 		.4byte	0x1019
 3224 0b42 1C       		.uleb128 0x1c
 3225 0b43 32000000 		.4byte	.LVL103
 3226 0b47 24100000 		.4byte	0x1024
 3227 0b4b 00       		.byte	0
 3228 0b4c 10       		.uleb128 0x10
 3229 0b4d 04       		.byte	0x4
 3230 0b4e 520B0000 		.4byte	0xb52
 3231 0b52 1A       		.uleb128 0x1a
 3232 0b53 B1050000 		.4byte	0x5b1
 3233 0b57 1B       		.uleb128 0x1b
 3234 0b58 960A0000 		.4byte	.LASF135
 3235 0b5c 01       		.byte	0x1
 3236 0b5d 8E05     		.2byte	0x58e
 3237 0b5f 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 108


 3238 0b63 70000000 		.4byte	.LFE14-.LFB14
 3239 0b67 01       		.uleb128 0x1
 3240 0b68 9C       		.byte	0x9c
 3241 0b69 A20B0000 		.4byte	0xba2
 3242 0b6d 18       		.uleb128 0x18
 3243 0b6e 47020000 		.4byte	.LASF109
 3244 0b72 01       		.byte	0x1
 3245 0b73 9005     		.2byte	0x590
 3246 0b75 EF070000 		.4byte	0x7ef
 3247 0b79 6E040000 		.4byte	.LLST33
 3248 0b7d 1C       		.uleb128 0x1c
 3249 0b7e 30000000 		.4byte	.LVL107
 3250 0b82 4E080000 		.4byte	0x84e
 3251 0b86 1C       		.uleb128 0x1c
 3252 0b87 4A000000 		.4byte	.LVL108
 3253 0b8b D30A0000 		.4byte	0xad3
 3254 0b8f 1C       		.uleb128 0x1c
 3255 0b90 50000000 		.4byte	.LVL109
 3256 0b94 5B100000 		.4byte	0x105b
 3257 0b98 1C       		.uleb128 0x1c
 3258 0b99 54000000 		.4byte	.LVL110
 3259 0b9d A00A0000 		.4byte	0xaa0
 3260 0ba1 00       		.byte	0
 3261 0ba2 1B       		.uleb128 0x1b
 3262 0ba3 BE010000 		.4byte	.LASF136
 3263 0ba7 01       		.byte	0x1
 3264 0ba8 DA05     		.2byte	0x5da
 3265 0baa 00000000 		.4byte	.LFB15
 3266 0bae 24000000 		.4byte	.LFE15-.LFB15
 3267 0bb2 01       		.uleb128 0x1
 3268 0bb3 9C       		.byte	0x9c
 3269 0bb4 E20B0000 		.4byte	0xbe2
 3270 0bb8 14       		.uleb128 0x14
 3271 0bb9 150C0000 		.4byte	.LASF137
 3272 0bbd 01       		.byte	0x1
 3273 0bbe DA05     		.2byte	0x5da
 3274 0bc0 83000000 		.4byte	0x83
 3275 0bc4 81040000 		.4byte	.LLST34
 3276 0bc8 14       		.uleb128 0x14
 3277 0bc9 3E020000 		.4byte	.LASF138
 3278 0bcd 01       		.byte	0x1
 3279 0bce DA05     		.2byte	0x5da
 3280 0bd0 83000000 		.4byte	0x83
 3281 0bd4 A2040000 		.4byte	.LLST35
 3282 0bd8 1C       		.uleb128 0x1c
 3283 0bd9 18000000 		.4byte	.LVL114
 3284 0bdd D30A0000 		.4byte	0xad3
 3285 0be1 00       		.byte	0
 3286 0be2 1B       		.uleb128 0x1b
 3287 0be3 6E080000 		.4byte	.LASF139
 3288 0be7 01       		.byte	0x1
 3289 0be8 9D06     		.2byte	0x69d
 3290 0bea 00000000 		.4byte	.LFB18
 3291 0bee 40000000 		.4byte	.LFE18-.LFB18
 3292 0bf2 01       		.uleb128 0x1
 3293 0bf3 9C       		.byte	0x9c
 3294 0bf4 5B0C0000 		.4byte	0xc5b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 109


 3295 0bf8 14       		.uleb128 0x14
 3296 0bf9 77000000 		.4byte	.LASF131
 3297 0bfd 01       		.byte	0x1
 3298 0bfe 9D06     		.2byte	0x69d
 3299 0c00 4C0B0000 		.4byte	0xb4c
 3300 0c04 C3040000 		.4byte	.LLST36
 3301 0c08 18       		.uleb128 0x18
 3302 0c09 84010000 		.4byte	.LASF134
 3303 0c0d 01       		.byte	0x1
 3304 0c0e 9F06     		.2byte	0x69f
 3305 0c10 83000000 		.4byte	0x83
 3306 0c14 EF040000 		.4byte	.LLST37
 3307 0c18 18       		.uleb128 0x18
 3308 0c19 B3030000 		.4byte	.LASF132
 3309 0c1d 01       		.byte	0x1
 3310 0c1e A006     		.2byte	0x6a0
 3311 0c20 83000000 		.4byte	0x83
 3312 0c24 02050000 		.4byte	.LLST38
 3313 0c28 18       		.uleb128 0x18
 3314 0c29 F8010000 		.4byte	.LASF133
 3315 0c2d 01       		.byte	0x1
 3316 0c2e A106     		.2byte	0x6a1
 3317 0c30 83000000 		.4byte	0x83
 3318 0c34 2B050000 		.4byte	.LLST39
 3319 0c38 18       		.uleb128 0x18
 3320 0c39 3F010000 		.4byte	.LASF118
 3321 0c3d 01       		.byte	0x1
 3322 0c3e A506     		.2byte	0x6a5
 3323 0c40 6B000000 		.4byte	0x6b
 3324 0c44 3E050000 		.4byte	.LLST40
 3325 0c48 1C       		.uleb128 0x1c
 3326 0c49 18000000 		.4byte	.LVL118
 3327 0c4d 19100000 		.4byte	0x1019
 3328 0c51 1C       		.uleb128 0x1c
 3329 0c52 30000000 		.4byte	.LVL123
 3330 0c56 24100000 		.4byte	0x1024
 3331 0c5a 00       		.byte	0
 3332 0c5b 1B       		.uleb128 0x1b
 3333 0c5c 9F010000 		.4byte	.LASF140
 3334 0c60 01       		.byte	0x1
 3335 0c61 B602     		.2byte	0x2b6
 3336 0c63 00000000 		.4byte	.LFB5
 3337 0c67 24000000 		.4byte	.LFE5-.LFB5
 3338 0c6b 01       		.uleb128 0x1
 3339 0c6c 9C       		.byte	0x9c
 3340 0c6d 7B0C0000 		.4byte	0xc7b
 3341 0c71 1C       		.uleb128 0x1c
 3342 0c72 12000000 		.4byte	.LVL126
 3343 0c76 E20B0000 		.4byte	0xbe2
 3344 0c7a 00       		.byte	0
 3345 0c7b 1B       		.uleb128 0x1b
 3346 0c7c C1090000 		.4byte	.LASF141
 3347 0c80 01       		.byte	0x1
 3348 0c81 6004     		.2byte	0x460
 3349 0c83 00000000 		.4byte	.LFB10
 3350 0c87 54000000 		.4byte	.LFE10-.LFB10
 3351 0c8b 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 110


 3352 0c8c 9C       		.byte	0x9c
 3353 0c8d EB0C0000 		.4byte	0xceb
 3354 0c91 14       		.uleb128 0x14
 3355 0c92 150C0000 		.4byte	.LASF137
 3356 0c96 01       		.byte	0x1
 3357 0c97 6004     		.2byte	0x460
 3358 0c99 83000000 		.4byte	0x83
 3359 0c9d 51050000 		.4byte	.LLST41
 3360 0ca1 18       		.uleb128 0x18
 3361 0ca2 47020000 		.4byte	.LASF109
 3362 0ca6 01       		.byte	0x1
 3363 0ca7 6304     		.2byte	0x463
 3364 0ca9 EF070000 		.4byte	0x7ef
 3365 0cad 72050000 		.4byte	.LLST42
 3366 0cb1 23       		.uleb128 0x23
 3367 0cb2 16000000 		.4byte	.LVL130
 3368 0cb6 66100000 		.4byte	0x1066
 3369 0cba C40C0000 		.4byte	0xcc4
 3370 0cbe 24       		.uleb128 0x24
 3371 0cbf 01       		.uleb128 0x1
 3372 0cc0 50       		.byte	0x50
 3373 0cc1 01       		.uleb128 0x1
 3374 0cc2 31       		.byte	0x31
 3375 0cc3 00       		.byte	0
 3376 0cc4 1C       		.uleb128 0x1c
 3377 0cc5 1A000000 		.4byte	.LVL131
 3378 0cc9 5B0C0000 		.4byte	0xc5b
 3379 0ccd 23       		.uleb128 0x23
 3380 0cce 3C000000 		.4byte	.LVL132
 3381 0cd2 84090000 		.4byte	0x984
 3382 0cd6 E10C0000 		.4byte	0xce1
 3383 0cda 24       		.uleb128 0x24
 3384 0cdb 01       		.uleb128 0x1
 3385 0cdc 50       		.byte	0x50
 3386 0cdd 02       		.uleb128 0x2
 3387 0cde 75       		.byte	0x75
 3388 0cdf 00       		.sleb128 0
 3389 0ce0 00       		.byte	0
 3390 0ce1 1C       		.uleb128 0x1c
 3391 0ce2 40000000 		.4byte	.LVL133
 3392 0ce6 24090000 		.4byte	0x924
 3393 0cea 00       		.byte	0
 3394 0ceb 1B       		.uleb128 0x1b
 3395 0cec 4E010000 		.4byte	.LASF142
 3396 0cf0 01       		.byte	0x1
 3397 0cf1 B104     		.2byte	0x4b1
 3398 0cf3 00000000 		.4byte	.LFB11
 3399 0cf7 6C000000 		.4byte	.LFE11-.LFB11
 3400 0cfb 01       		.uleb128 0x1
 3401 0cfc 9C       		.byte	0x9c
 3402 0cfd 6D0D0000 		.4byte	0xd6d
 3403 0d01 14       		.uleb128 0x14
 3404 0d02 150C0000 		.4byte	.LASF137
 3405 0d06 01       		.byte	0x1
 3406 0d07 B104     		.2byte	0x4b1
 3407 0d09 83000000 		.4byte	0x83
 3408 0d0d 99050000 		.4byte	.LLST43
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 111


 3409 0d11 14       		.uleb128 0x14
 3410 0d12 3E020000 		.4byte	.LASF138
 3411 0d16 01       		.byte	0x1
 3412 0d17 B104     		.2byte	0x4b1
 3413 0d19 83000000 		.4byte	0x83
 3414 0d1d BA050000 		.4byte	.LLST44
 3415 0d21 18       		.uleb128 0x18
 3416 0d22 47020000 		.4byte	.LASF109
 3417 0d26 01       		.byte	0x1
 3418 0d27 B304     		.2byte	0x4b3
 3419 0d29 EF070000 		.4byte	0x7ef
 3420 0d2d DB050000 		.4byte	.LLST45
 3421 0d31 23       		.uleb128 0x23
 3422 0d32 26000000 		.4byte	.LVL139
 3423 0d36 7B0C0000 		.4byte	0xc7b
 3424 0d3a 460D0000 		.4byte	0xd46
 3425 0d3e 24       		.uleb128 0x24
 3426 0d3f 01       		.uleb128 0x1
 3427 0d40 50       		.byte	0x50
 3428 0d41 03       		.uleb128 0x3
 3429 0d42 F3       		.byte	0xf3
 3430 0d43 01       		.uleb128 0x1
 3431 0d44 50       		.byte	0x50
 3432 0d45 00       		.byte	0
 3433 0d46 23       		.uleb128 0x23
 3434 0d47 2C000000 		.4byte	.LVL140
 3435 0d4b 4E080000 		.4byte	0x84e
 3436 0d4f 5A0D0000 		.4byte	0xd5a
 3437 0d53 24       		.uleb128 0x24
 3438 0d54 01       		.uleb128 0x1
 3439 0d55 50       		.byte	0x50
 3440 0d56 02       		.uleb128 0x2
 3441 0d57 75       		.byte	0x75
 3442 0d58 00       		.sleb128 0
 3443 0d59 00       		.byte	0
 3444 0d5a 1C       		.uleb128 0x1c
 3445 0d5b 44000000 		.4byte	.LVL141
 3446 0d5f D30A0000 		.4byte	0xad3
 3447 0d63 1C       		.uleb128 0x1c
 3448 0d64 50000000 		.4byte	.LVL142
 3449 0d68 5B100000 		.4byte	0x105b
 3450 0d6c 00       		.byte	0
 3451 0d6d 1B       		.uleb128 0x1b
 3452 0d6e 8B090000 		.4byte	.LASF143
 3453 0d72 01       		.byte	0x1
 3454 0d73 2006     		.2byte	0x620
 3455 0d75 00000000 		.4byte	.LFB16
 3456 0d79 24000000 		.4byte	.LFE16-.LFB16
 3457 0d7d 01       		.uleb128 0x1
 3458 0d7e 9C       		.byte	0x9c
 3459 0d7f AD0D0000 		.4byte	0xdad
 3460 0d83 14       		.uleb128 0x14
 3461 0d84 150C0000 		.4byte	.LASF137
 3462 0d88 01       		.byte	0x1
 3463 0d89 2006     		.2byte	0x620
 3464 0d8b 83000000 		.4byte	0x83
 3465 0d8f EE050000 		.4byte	.LLST46
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 112


 3466 0d93 14       		.uleb128 0x14
 3467 0d94 3E020000 		.4byte	.LASF138
 3468 0d98 01       		.byte	0x1
 3469 0d99 2006     		.2byte	0x620
 3470 0d9b 83000000 		.4byte	0x83
 3471 0d9f 0F060000 		.4byte	.LLST47
 3472 0da3 1C       		.uleb128 0x1c
 3473 0da4 18000000 		.4byte	.LVL147
 3474 0da8 E20B0000 		.4byte	0xbe2
 3475 0dac 00       		.byte	0
 3476 0dad 26       		.uleb128 0x26
 3477 0dae 1E0C0000 		.4byte	.LASF145
 3478 0db2 01       		.byte	0x1
 3479 0db3 7407     		.2byte	0x774
 3480 0db5 A4000000 		.4byte	0xa4
 3481 0db9 00000000 		.4byte	.LFB22
 3482 0dbd E8000000 		.4byte	.LFE22-.LFB22
 3483 0dc1 01       		.uleb128 0x1
 3484 0dc2 9C       		.byte	0x9c
 3485 0dc3 A50E0000 		.4byte	0xea5
 3486 0dc7 14       		.uleb128 0x14
 3487 0dc8 89040000 		.4byte	.LASF110
 3488 0dcc 01       		.byte	0x1
 3489 0dcd 7407     		.2byte	0x774
 3490 0dcf 83000000 		.4byte	0x83
 3491 0dd3 30060000 		.4byte	.LLST48
 3492 0dd7 14       		.uleb128 0x14
 3493 0dd8 E5080000 		.4byte	.LASF146
 3494 0ddc 01       		.byte	0x1
 3495 0ddd 7507     		.2byte	0x775
 3496 0ddf 58060000 		.4byte	0x658
 3497 0de3 5C060000 		.4byte	.LLST49
 3498 0de7 14       		.uleb128 0x14
 3499 0de8 070B0000 		.4byte	.LASF147
 3500 0dec 01       		.byte	0x1
 3501 0ded 7607     		.2byte	0x776
 3502 0def 58060000 		.4byte	0x658
 3503 0df3 88060000 		.4byte	.LLST50
 3504 0df7 16       		.uleb128 0x16
 3505 0df8 A6060000 		.4byte	.LASF112
 3506 0dfc 01       		.byte	0x1
 3507 0dfd 7807     		.2byte	0x778
 3508 0dff A4000000 		.4byte	0xa4
 3509 0e03 01       		.uleb128 0x1
 3510 0e04 50       		.byte	0x50
 3511 0e05 18       		.uleb128 0x18
 3512 0e06 6B030000 		.4byte	.LASF148
 3513 0e0a 01       		.byte	0x1
 3514 0e0b 7907     		.2byte	0x779
 3515 0e0d 83000000 		.4byte	0x83
 3516 0e11 B4060000 		.4byte	.LLST51
 3517 0e15 18       		.uleb128 0x18
 3518 0e16 13030000 		.4byte	.LASF127
 3519 0e1a 01       		.byte	0x1
 3520 0e1b 7A07     		.2byte	0x77a
 3521 0e1d 83000000 		.4byte	0x83
 3522 0e21 D4060000 		.4byte	.LLST52
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 113


 3523 0e25 18       		.uleb128 0x18
 3524 0e26 22040000 		.4byte	.LASF149
 3525 0e2a 01       		.byte	0x1
 3526 0e2b 7C07     		.2byte	0x77c
 3527 0e2d 77000000 		.4byte	0x77
 3528 0e31 F5060000 		.4byte	.LLST53
 3529 0e35 18       		.uleb128 0x18
 3530 0e36 47020000 		.4byte	.LASF109
 3531 0e3a 01       		.byte	0x1
 3532 0e3b 8307     		.2byte	0x783
 3533 0e3d A50E0000 		.4byte	0xea5
 3534 0e41 14070000 		.4byte	.LLST54
 3535 0e45 1C       		.uleb128 0x1c
 3536 0e46 2E000000 		.4byte	.LVL155
 3537 0e4a EB0C0000 		.4byte	0xceb
 3538 0e4e 1C       		.uleb128 0x1c
 3539 0e4f 32000000 		.4byte	.LVL156
 3540 0e53 18070000 		.4byte	0x718
 3541 0e57 23       		.uleb128 0x23
 3542 0e58 4E000000 		.4byte	.LVL159
 3543 0e5c 4E080000 		.4byte	0x84e
 3544 0e60 6C0E0000 		.4byte	0xe6c
 3545 0e64 24       		.uleb128 0x24
 3546 0e65 01       		.uleb128 0x1
 3547 0e66 50       		.byte	0x50
 3548 0e67 03       		.uleb128 0x3
 3549 0e68 91       		.byte	0x91
 3550 0e69 64       		.sleb128 -28
 3551 0e6a 06       		.byte	0x6
 3552 0e6b 00       		.byte	0
 3553 0e6c 1C       		.uleb128 0x1c
 3554 0e6d 52000000 		.4byte	.LVL160
 3555 0e71 A00A0000 		.4byte	0xaa0
 3556 0e75 1C       		.uleb128 0x1c
 3557 0e76 90000000 		.4byte	.LVL165
 3558 0e7a E20B0000 		.4byte	0xbe2
 3559 0e7e 1C       		.uleb128 0x1c
 3560 0e7f 9A000000 		.4byte	.LVL166
 3561 0e83 3F070000 		.4byte	0x73f
 3562 0e87 25       		.uleb128 0x25
 3563 0e88 A4000000 		.4byte	.LVL167
 3564 0e8c 66070000 		.4byte	0x766
 3565 0e90 24       		.uleb128 0x24
 3566 0e91 01       		.uleb128 0x1
 3567 0e92 50       		.byte	0x50
 3568 0e93 03       		.uleb128 0x3
 3569 0e94 91       		.byte	0x91
 3570 0e95 64       		.sleb128 -28
 3571 0e96 06       		.byte	0x6
 3572 0e97 24       		.uleb128 0x24
 3573 0e98 01       		.uleb128 0x1
 3574 0e99 51       		.byte	0x51
 3575 0e9a 02       		.uleb128 0x2
 3576 0e9b 77       		.byte	0x77
 3577 0e9c 00       		.sleb128 0
 3578 0e9d 24       		.uleb128 0x24
 3579 0e9e 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 114


 3580 0e9f 52       		.byte	0x52
 3581 0ea0 02       		.uleb128 0x2
 3582 0ea1 74       		.byte	0x74
 3583 0ea2 00       		.sleb128 0
 3584 0ea3 00       		.byte	0
 3585 0ea4 00       		.byte	0
 3586 0ea5 10       		.uleb128 0x10
 3587 0ea6 04       		.byte	0x4
 3588 0ea7 21020000 		.4byte	0x221
 3589 0eab 1D       		.uleb128 0x1d
 3590 0eac 47090000 		.4byte	.LASF151
 3591 0eb0 01       		.byte	0x1
 3592 0eb1 3E08     		.2byte	0x83e
 3593 0eb3 A4000000 		.4byte	0xa4
 3594 0eb7 00000000 		.4byte	.LFB23
 3595 0ebb 08010000 		.4byte	.LFE23-.LFB23
 3596 0ebf 01       		.uleb128 0x1
 3597 0ec0 9C       		.byte	0x9c
 3598 0ec1 5B0F0000 		.4byte	0xf5b
 3599 0ec5 14       		.uleb128 0x14
 3600 0ec6 150C0000 		.4byte	.LASF137
 3601 0eca 01       		.byte	0x1
 3602 0ecb 3E08     		.2byte	0x83e
 3603 0ecd 83000000 		.4byte	0x83
 3604 0ed1 33070000 		.4byte	.LLST55
 3605 0ed5 14       		.uleb128 0x14
 3606 0ed6 1B040000 		.4byte	.LASF152
 3607 0eda 01       		.byte	0x1
 3608 0edb 3E08     		.2byte	0x83e
 3609 0edd 83000000 		.4byte	0x83
 3610 0ee1 5F070000 		.4byte	.LLST56
 3611 0ee5 18       		.uleb128 0x18
 3612 0ee6 89040000 		.4byte	.LASF110
 3613 0eea 01       		.byte	0x1
 3614 0eeb 4008     		.2byte	0x840
 3615 0eed 83000000 		.4byte	0x83
 3616 0ef1 8B070000 		.4byte	.LLST57
 3617 0ef5 18       		.uleb128 0x18
 3618 0ef6 A6060000 		.4byte	.LASF112
 3619 0efa 01       		.byte	0x1
 3620 0efb 4108     		.2byte	0x841
 3621 0efd A4000000 		.4byte	0xa4
 3622 0f01 C7070000 		.4byte	.LLST58
 3623 0f05 18       		.uleb128 0x18
 3624 0f06 47020000 		.4byte	.LASF109
 3625 0f0a 01       		.byte	0x1
 3626 0f0b 4B08     		.2byte	0x84b
 3627 0f0d A50E0000 		.4byte	0xea5
 3628 0f11 F1070000 		.4byte	.LLST59
 3629 0f15 16       		.uleb128 0x16
 3630 0f16 070B0000 		.4byte	.LASF147
 3631 0f1a 01       		.byte	0x1
 3632 0f1b 4F08     		.2byte	0x84f
 3633 0f1d 0A020000 		.4byte	0x20a
 3634 0f21 02       		.uleb128 0x2
 3635 0f22 91       		.byte	0x91
 3636 0f23 64       		.sleb128 -28
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 115


 3637 0f24 18       		.uleb128 0x18
 3638 0f25 E5080000 		.4byte	.LASF146
 3639 0f29 01       		.byte	0x1
 3640 0f2a 5408     		.2byte	0x854
 3641 0f2c 58060000 		.4byte	0x658
 3642 0f30 04080000 		.4byte	.LLST60
 3643 0f34 1C       		.uleb128 0x1c
 3644 0f35 38000000 		.4byte	.LVL183
 3645 0f39 5B100000 		.4byte	0x105b
 3646 0f3d 25       		.uleb128 0x25
 3647 0f3e 56000000 		.4byte	.LVL186
 3648 0f42 AD0D0000 		.4byte	0xdad
 3649 0f46 24       		.uleb128 0x24
 3650 0f47 01       		.uleb128 0x1
 3651 0f48 50       		.byte	0x50
 3652 0f49 03       		.uleb128 0x3
 3653 0f4a 91       		.byte	0x91
 3654 0f4b 5C       		.sleb128 -36
 3655 0f4c 06       		.byte	0x6
 3656 0f4d 24       		.uleb128 0x24
 3657 0f4e 01       		.uleb128 0x1
 3658 0f4f 51       		.byte	0x51
 3659 0f50 02       		.uleb128 0x2
 3660 0f51 76       		.byte	0x76
 3661 0f52 00       		.sleb128 0
 3662 0f53 24       		.uleb128 0x24
 3663 0f54 01       		.uleb128 0x1
 3664 0f55 52       		.byte	0x52
 3665 0f56 02       		.uleb128 0x2
 3666 0f57 91       		.byte	0x91
 3667 0f58 64       		.sleb128 -28
 3668 0f59 00       		.byte	0
 3669 0f5a 00       		.byte	0
 3670 0f5b 27       		.uleb128 0x27
 3671 0f5c 31060000 		.4byte	.LASF153
 3672 0f60 01       		.byte	0x1
 3673 0f61 72       		.byte	0x72
 3674 0f62 6B000000 		.4byte	0x6b
 3675 0f66 05       		.uleb128 0x5
 3676 0f67 03       		.byte	0x3
 3677 0f68 00000000 		.4byte	CapSense_1_eleCsdDisconnectFlag
 3678 0f6c 28       		.uleb128 0x28
 3679 0f6d BC070000 		.4byte	.LASF154
 3680 0f71 05       		.byte	0x5
 3681 0f72 5304     		.2byte	0x453
 3682 0f74 20050000 		.4byte	0x520
 3683 0f78 28       		.uleb128 0x28
 3684 0f79 C4080000 		.4byte	.LASF155
 3685 0f7d 05       		.byte	0x5
 3686 0f7e 5404     		.2byte	0x454
 3687 0f80 840F0000 		.4byte	0xf84
 3688 0f84 1A       		.uleb128 0x1a
 3689 0f85 97060000 		.4byte	0x697
 3690 0f89 29       		.uleb128 0x29
 3691 0f8a E1040000 		.4byte	.LASF156
 3692 0f8e 06       		.byte	0x6
 3693 0f8f 9D       		.byte	0x9d
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 116


 3694 0f90 B0000000 		.4byte	0xb0
 3695 0f94 29       		.uleb128 0x29
 3696 0f95 DB090000 		.4byte	.LASF157
 3697 0f99 06       		.byte	0x6
 3698 0f9a 9E       		.byte	0x9e
 3699 0f9b B0000000 		.4byte	0xb0
 3700 0f9f 29       		.uleb128 0x29
 3701 0fa0 9D000000 		.4byte	.LASF158
 3702 0fa4 06       		.byte	0x6
 3703 0fa5 A1       		.byte	0xa1
 3704 0fa6 52060000 		.4byte	0x652
 3705 0faa 29       		.uleb128 0x29
 3706 0fab DF010000 		.4byte	.LASF159
 3707 0faf 06       		.byte	0x6
 3708 0fb0 A8       		.byte	0xa8
 3709 0fb1 B50F0000 		.4byte	0xfb5
 3710 0fb5 1A       		.uleb128 0x1a
 3711 0fb6 6B000000 		.4byte	0x6b
 3712 0fba 29       		.uleb128 0x29
 3713 0fbb 28010000 		.4byte	.LASF160
 3714 0fbf 06       		.byte	0x6
 3715 0fc0 B6       		.byte	0xb6
 3716 0fc1 4C0B0000 		.4byte	0xb4c
 3717 0fc5 2A       		.uleb128 0x2a
 3718 0fc6 13060000 		.4byte	.LASF161
 3719 0fca 01       		.byte	0x1
 3720 0fcb 6B       		.byte	0x6b
 3721 0fcc 83000000 		.4byte	0x83
 3722 0fd0 05       		.uleb128 0x5
 3723 0fd1 03       		.byte	0x3
 3724 0fd2 00000000 		.4byte	CapSense_1_configCsd
 3725 0fd6 2A       		.uleb128 0x2a
 3726 0fd7 99030000 		.4byte	.LASF162
 3727 0fdb 01       		.byte	0x1
 3728 0fdc 7A       		.byte	0x7a
 3729 0fdd 6B000000 		.4byte	0x6b
 3730 0fe1 05       		.uleb128 0x5
 3731 0fe2 03       		.byte	0x3
 3732 0fe3 00000000 		.4byte	CapSense_1_calibratedIdac
 3733 0fe7 2A       		.uleb128 0x2a
 3734 0fe8 6D090000 		.4byte	.LASF163
 3735 0fec 01       		.byte	0x1
 3736 0fed 7B       		.byte	0x7b
 3737 0fee 77000000 		.4byte	0x77
 3738 0ff2 05       		.uleb128 0x5
 3739 0ff3 03       		.byte	0x3
 3740 0ff4 00000000 		.4byte	CapSense_1_calibratedRawcount
 3741 0ff8 2B       		.uleb128 0x2b
 3742 0ff9 5B0B0000 		.4byte	.LASF164
 3743 0ffd 5B0B0000 		.4byte	.LASF164
 3744 1001 06       		.byte	0x6
 3745 1002 85       		.byte	0x85
 3746 1003 2B       		.uleb128 0x2b
 3747 1004 2A000000 		.4byte	.LASF165
 3748 1008 2A000000 		.4byte	.LASF165
 3749 100c 06       		.byte	0x6
 3750 100d 93       		.byte	0x93
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 117


 3751 100e 2B       		.uleb128 0x2b
 3752 100f 17050000 		.4byte	.LASF166
 3753 1013 17050000 		.4byte	.LASF166
 3754 1017 06       		.byte	0x6
 3755 1018 68       		.byte	0x68
 3756 1019 2B       		.uleb128 0x2b
 3757 101a 04040000 		.4byte	.LASF167
 3758 101e 04040000 		.4byte	.LASF167
 3759 1022 07       		.byte	0x7
 3760 1023 E5       		.byte	0xe5
 3761 1024 2B       		.uleb128 0x2b
 3762 1025 B4050000 		.4byte	.LASF168
 3763 1029 B4050000 		.4byte	.LASF168
 3764 102d 07       		.byte	0x7
 3765 102e E6       		.byte	0xe6
 3766 102f 2B       		.uleb128 0x2b
 3767 1030 9D050000 		.4byte	.LASF169
 3768 1034 9D050000 		.4byte	.LASF169
 3769 1038 07       		.byte	0x7
 3770 1039 C8       		.byte	0xc8
 3771 103a 2B       		.uleb128 0x2b
 3772 103b BF0A0000 		.4byte	.LASF170
 3773 103f BF0A0000 		.4byte	.LASF170
 3774 1043 07       		.byte	0x7
 3775 1044 C3       		.byte	0xc3
 3776 1045 2B       		.uleb128 0x2b
 3777 1046 92010000 		.4byte	.LASF171
 3778 104a 92010000 		.4byte	.LASF171
 3779 104e 07       		.byte	0x7
 3780 104f C5       		.byte	0xc5
 3781 1050 2B       		.uleb128 0x2b
 3782 1051 23030000 		.4byte	.LASF172
 3783 1055 23030000 		.4byte	.LASF172
 3784 1059 07       		.byte	0x7
 3785 105a DA       		.byte	0xda
 3786 105b 2B       		.uleb128 0x2b
 3787 105c ED030000 		.4byte	.LASF173
 3788 1060 ED030000 		.4byte	.LASF173
 3789 1064 08       		.byte	0x8
 3790 1065 18       		.byte	0x18
 3791 1066 2B       		.uleb128 0x2b
 3792 1067 F8040000 		.4byte	.LASF174
 3793 106b F8040000 		.4byte	.LASF174
 3794 106f 06       		.byte	0x6
 3795 1070 6E       		.byte	0x6e
 3796 1071 00       		.byte	0
 3797              		.section	.debug_abbrev,"",%progbits
 3798              	.Ldebug_abbrev0:
 3799 0000 01       		.uleb128 0x1
 3800 0001 11       		.uleb128 0x11
 3801 0002 01       		.byte	0x1
 3802 0003 25       		.uleb128 0x25
 3803 0004 0E       		.uleb128 0xe
 3804 0005 13       		.uleb128 0x13
 3805 0006 0B       		.uleb128 0xb
 3806 0007 03       		.uleb128 0x3
 3807 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 118


 3808 0009 1B       		.uleb128 0x1b
 3809 000a 0E       		.uleb128 0xe
 3810 000b 55       		.uleb128 0x55
 3811 000c 17       		.uleb128 0x17
 3812 000d 11       		.uleb128 0x11
 3813 000e 01       		.uleb128 0x1
 3814 000f 10       		.uleb128 0x10
 3815 0010 17       		.uleb128 0x17
 3816 0011 00       		.byte	0
 3817 0012 00       		.byte	0
 3818 0013 02       		.uleb128 0x2
 3819 0014 24       		.uleb128 0x24
 3820 0015 00       		.byte	0
 3821 0016 0B       		.uleb128 0xb
 3822 0017 0B       		.uleb128 0xb
 3823 0018 3E       		.uleb128 0x3e
 3824 0019 0B       		.uleb128 0xb
 3825 001a 03       		.uleb128 0x3
 3826 001b 0E       		.uleb128 0xe
 3827 001c 00       		.byte	0
 3828 001d 00       		.byte	0
 3829 001e 03       		.uleb128 0x3
 3830 001f 24       		.uleb128 0x24
 3831 0020 00       		.byte	0
 3832 0021 0B       		.uleb128 0xb
 3833 0022 0B       		.uleb128 0xb
 3834 0023 3E       		.uleb128 0x3e
 3835 0024 0B       		.uleb128 0xb
 3836 0025 03       		.uleb128 0x3
 3837 0026 08       		.uleb128 0x8
 3838 0027 00       		.byte	0
 3839 0028 00       		.byte	0
 3840 0029 04       		.uleb128 0x4
 3841 002a 16       		.uleb128 0x16
 3842 002b 00       		.byte	0
 3843 002c 03       		.uleb128 0x3
 3844 002d 0E       		.uleb128 0xe
 3845 002e 3A       		.uleb128 0x3a
 3846 002f 0B       		.uleb128 0xb
 3847 0030 3B       		.uleb128 0x3b
 3848 0031 05       		.uleb128 0x5
 3849 0032 49       		.uleb128 0x49
 3850 0033 13       		.uleb128 0x13
 3851 0034 00       		.byte	0
 3852 0035 00       		.byte	0
 3853 0036 05       		.uleb128 0x5
 3854 0037 35       		.uleb128 0x35
 3855 0038 00       		.byte	0
 3856 0039 49       		.uleb128 0x49
 3857 003a 13       		.uleb128 0x13
 3858 003b 00       		.byte	0
 3859 003c 00       		.byte	0
 3860 003d 06       		.uleb128 0x6
 3861 003e 13       		.uleb128 0x13
 3862 003f 01       		.byte	0x1
 3863 0040 0B       		.uleb128 0xb
 3864 0041 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 119


 3865 0042 3A       		.uleb128 0x3a
 3866 0043 0B       		.uleb128 0xb
 3867 0044 3B       		.uleb128 0x3b
 3868 0045 0B       		.uleb128 0xb
 3869 0046 01       		.uleb128 0x1
 3870 0047 13       		.uleb128 0x13
 3871 0048 00       		.byte	0
 3872 0049 00       		.byte	0
 3873 004a 07       		.uleb128 0x7
 3874 004b 0D       		.uleb128 0xd
 3875 004c 00       		.byte	0
 3876 004d 03       		.uleb128 0x3
 3877 004e 0E       		.uleb128 0xe
 3878 004f 3A       		.uleb128 0x3a
 3879 0050 0B       		.uleb128 0xb
 3880 0051 3B       		.uleb128 0x3b
 3881 0052 0B       		.uleb128 0xb
 3882 0053 49       		.uleb128 0x49
 3883 0054 13       		.uleb128 0x13
 3884 0055 38       		.uleb128 0x38
 3885 0056 0B       		.uleb128 0xb
 3886 0057 00       		.byte	0
 3887 0058 00       		.byte	0
 3888 0059 08       		.uleb128 0x8
 3889 005a 16       		.uleb128 0x16
 3890 005b 00       		.byte	0
 3891 005c 03       		.uleb128 0x3
 3892 005d 0E       		.uleb128 0xe
 3893 005e 3A       		.uleb128 0x3a
 3894 005f 0B       		.uleb128 0xb
 3895 0060 3B       		.uleb128 0x3b
 3896 0061 0B       		.uleb128 0xb
 3897 0062 49       		.uleb128 0x49
 3898 0063 13       		.uleb128 0x13
 3899 0064 00       		.byte	0
 3900 0065 00       		.byte	0
 3901 0066 09       		.uleb128 0x9
 3902 0067 04       		.uleb128 0x4
 3903 0068 01       		.byte	0x1
 3904 0069 0B       		.uleb128 0xb
 3905 006a 0B       		.uleb128 0xb
 3906 006b 49       		.uleb128 0x49
 3907 006c 13       		.uleb128 0x13
 3908 006d 3A       		.uleb128 0x3a
 3909 006e 0B       		.uleb128 0xb
 3910 006f 3B       		.uleb128 0x3b
 3911 0070 0B       		.uleb128 0xb
 3912 0071 01       		.uleb128 0x1
 3913 0072 13       		.uleb128 0x13
 3914 0073 00       		.byte	0
 3915 0074 00       		.byte	0
 3916 0075 0A       		.uleb128 0xa
 3917 0076 28       		.uleb128 0x28
 3918 0077 00       		.byte	0
 3919 0078 03       		.uleb128 0x3
 3920 0079 0E       		.uleb128 0xe
 3921 007a 1C       		.uleb128 0x1c
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 120


 3922 007b 0B       		.uleb128 0xb
 3923 007c 00       		.byte	0
 3924 007d 00       		.byte	0
 3925 007e 0B       		.uleb128 0xb
 3926 007f 01       		.uleb128 0x1
 3927 0080 01       		.byte	0x1
 3928 0081 49       		.uleb128 0x49
 3929 0082 13       		.uleb128 0x13
 3930 0083 01       		.uleb128 0x1
 3931 0084 13       		.uleb128 0x13
 3932 0085 00       		.byte	0
 3933 0086 00       		.byte	0
 3934 0087 0C       		.uleb128 0xc
 3935 0088 21       		.uleb128 0x21
 3936 0089 00       		.byte	0
 3937 008a 49       		.uleb128 0x49
 3938 008b 13       		.uleb128 0x13
 3939 008c 2F       		.uleb128 0x2f
 3940 008d 0B       		.uleb128 0xb
 3941 008e 00       		.byte	0
 3942 008f 00       		.byte	0
 3943 0090 0D       		.uleb128 0xd
 3944 0091 0D       		.uleb128 0xd
 3945 0092 00       		.byte	0
 3946 0093 03       		.uleb128 0x3
 3947 0094 0E       		.uleb128 0xe
 3948 0095 3A       		.uleb128 0x3a
 3949 0096 0B       		.uleb128 0xb
 3950 0097 3B       		.uleb128 0x3b
 3951 0098 05       		.uleb128 0x5
 3952 0099 49       		.uleb128 0x49
 3953 009a 13       		.uleb128 0x13
 3954 009b 38       		.uleb128 0x38
 3955 009c 0B       		.uleb128 0xb
 3956 009d 00       		.byte	0
 3957 009e 00       		.byte	0
 3958 009f 0E       		.uleb128 0xe
 3959 00a0 13       		.uleb128 0x13
 3960 00a1 01       		.byte	0x1
 3961 00a2 0B       		.uleb128 0xb
 3962 00a3 0B       		.uleb128 0xb
 3963 00a4 3A       		.uleb128 0x3a
 3964 00a5 0B       		.uleb128 0xb
 3965 00a6 3B       		.uleb128 0x3b
 3966 00a7 05       		.uleb128 0x5
 3967 00a8 01       		.uleb128 0x1
 3968 00a9 13       		.uleb128 0x13
 3969 00aa 00       		.byte	0
 3970 00ab 00       		.byte	0
 3971 00ac 0F       		.uleb128 0xf
 3972 00ad 0D       		.uleb128 0xd
 3973 00ae 00       		.byte	0
 3974 00af 03       		.uleb128 0x3
 3975 00b0 08       		.uleb128 0x8
 3976 00b1 3A       		.uleb128 0x3a
 3977 00b2 0B       		.uleb128 0xb
 3978 00b3 3B       		.uleb128 0x3b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 121


 3979 00b4 05       		.uleb128 0x5
 3980 00b5 49       		.uleb128 0x49
 3981 00b6 13       		.uleb128 0x13
 3982 00b7 38       		.uleb128 0x38
 3983 00b8 0B       		.uleb128 0xb
 3984 00b9 00       		.byte	0
 3985 00ba 00       		.byte	0
 3986 00bb 10       		.uleb128 0x10
 3987 00bc 0F       		.uleb128 0xf
 3988 00bd 00       		.byte	0
 3989 00be 0B       		.uleb128 0xb
 3990 00bf 0B       		.uleb128 0xb
 3991 00c0 49       		.uleb128 0x49
 3992 00c1 13       		.uleb128 0x13
 3993 00c2 00       		.byte	0
 3994 00c3 00       		.byte	0
 3995 00c4 11       		.uleb128 0x11
 3996 00c5 26       		.uleb128 0x26
 3997 00c6 00       		.byte	0
 3998 00c7 00       		.byte	0
 3999 00c8 00       		.byte	0
 4000 00c9 12       		.uleb128 0x12
 4001 00ca 0F       		.uleb128 0xf
 4002 00cb 00       		.byte	0
 4003 00cc 0B       		.uleb128 0xb
 4004 00cd 0B       		.uleb128 0xb
 4005 00ce 00       		.byte	0
 4006 00cf 00       		.byte	0
 4007 00d0 13       		.uleb128 0x13
 4008 00d1 2E       		.uleb128 0x2e
 4009 00d2 01       		.byte	0x1
 4010 00d3 03       		.uleb128 0x3
 4011 00d4 0E       		.uleb128 0xe
 4012 00d5 3A       		.uleb128 0x3a
 4013 00d6 0B       		.uleb128 0xb
 4014 00d7 3B       		.uleb128 0x3b
 4015 00d8 05       		.uleb128 0x5
 4016 00d9 27       		.uleb128 0x27
 4017 00da 19       		.uleb128 0x19
 4018 00db 11       		.uleb128 0x11
 4019 00dc 01       		.uleb128 0x1
 4020 00dd 12       		.uleb128 0x12
 4021 00de 06       		.uleb128 0x6
 4022 00df 40       		.uleb128 0x40
 4023 00e0 18       		.uleb128 0x18
 4024 00e1 9742     		.uleb128 0x2117
 4025 00e3 19       		.uleb128 0x19
 4026 00e4 01       		.uleb128 0x1
 4027 00e5 13       		.uleb128 0x13
 4028 00e6 00       		.byte	0
 4029 00e7 00       		.byte	0
 4030 00e8 14       		.uleb128 0x14
 4031 00e9 05       		.uleb128 0x5
 4032 00ea 00       		.byte	0
 4033 00eb 03       		.uleb128 0x3
 4034 00ec 0E       		.uleb128 0xe
 4035 00ed 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 122


 4036 00ee 0B       		.uleb128 0xb
 4037 00ef 3B       		.uleb128 0x3b
 4038 00f0 05       		.uleb128 0x5
 4039 00f1 49       		.uleb128 0x49
 4040 00f2 13       		.uleb128 0x13
 4041 00f3 02       		.uleb128 0x2
 4042 00f4 17       		.uleb128 0x17
 4043 00f5 00       		.byte	0
 4044 00f6 00       		.byte	0
 4045 00f7 15       		.uleb128 0x15
 4046 00f8 2E       		.uleb128 0x2e
 4047 00f9 01       		.byte	0x1
 4048 00fa 03       		.uleb128 0x3
 4049 00fb 0E       		.uleb128 0xe
 4050 00fc 3A       		.uleb128 0x3a
 4051 00fd 0B       		.uleb128 0xb
 4052 00fe 3B       		.uleb128 0x3b
 4053 00ff 05       		.uleb128 0x5
 4054 0100 27       		.uleb128 0x27
 4055 0101 19       		.uleb128 0x19
 4056 0102 11       		.uleb128 0x11
 4057 0103 01       		.uleb128 0x1
 4058 0104 12       		.uleb128 0x12
 4059 0105 06       		.uleb128 0x6
 4060 0106 40       		.uleb128 0x40
 4061 0107 18       		.uleb128 0x18
 4062 0108 9642     		.uleb128 0x2116
 4063 010a 19       		.uleb128 0x19
 4064 010b 01       		.uleb128 0x1
 4065 010c 13       		.uleb128 0x13
 4066 010d 00       		.byte	0
 4067 010e 00       		.byte	0
 4068 010f 16       		.uleb128 0x16
 4069 0110 34       		.uleb128 0x34
 4070 0111 00       		.byte	0
 4071 0112 03       		.uleb128 0x3
 4072 0113 0E       		.uleb128 0xe
 4073 0114 3A       		.uleb128 0x3a
 4074 0115 0B       		.uleb128 0xb
 4075 0116 3B       		.uleb128 0x3b
 4076 0117 05       		.uleb128 0x5
 4077 0118 49       		.uleb128 0x49
 4078 0119 13       		.uleb128 0x13
 4079 011a 02       		.uleb128 0x2
 4080 011b 18       		.uleb128 0x18
 4081 011c 00       		.byte	0
 4082 011d 00       		.byte	0
 4083 011e 17       		.uleb128 0x17
 4084 011f 2E       		.uleb128 0x2e
 4085 0120 00       		.byte	0
 4086 0121 03       		.uleb128 0x3
 4087 0122 0E       		.uleb128 0xe
 4088 0123 3A       		.uleb128 0x3a
 4089 0124 0B       		.uleb128 0xb
 4090 0125 3B       		.uleb128 0x3b
 4091 0126 05       		.uleb128 0x5
 4092 0127 27       		.uleb128 0x27
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 123


 4093 0128 19       		.uleb128 0x19
 4094 0129 11       		.uleb128 0x11
 4095 012a 01       		.uleb128 0x1
 4096 012b 12       		.uleb128 0x12
 4097 012c 06       		.uleb128 0x6
 4098 012d 40       		.uleb128 0x40
 4099 012e 18       		.uleb128 0x18
 4100 012f 9742     		.uleb128 0x2117
 4101 0131 19       		.uleb128 0x19
 4102 0132 00       		.byte	0
 4103 0133 00       		.byte	0
 4104 0134 18       		.uleb128 0x18
 4105 0135 34       		.uleb128 0x34
 4106 0136 00       		.byte	0
 4107 0137 03       		.uleb128 0x3
 4108 0138 0E       		.uleb128 0xe
 4109 0139 3A       		.uleb128 0x3a
 4110 013a 0B       		.uleb128 0xb
 4111 013b 3B       		.uleb128 0x3b
 4112 013c 05       		.uleb128 0x5
 4113 013d 49       		.uleb128 0x49
 4114 013e 13       		.uleb128 0x13
 4115 013f 02       		.uleb128 0x2
 4116 0140 17       		.uleb128 0x17
 4117 0141 00       		.byte	0
 4118 0142 00       		.byte	0
 4119 0143 19       		.uleb128 0x19
 4120 0144 2E       		.uleb128 0x2e
 4121 0145 01       		.byte	0x1
 4122 0146 03       		.uleb128 0x3
 4123 0147 0E       		.uleb128 0xe
 4124 0148 3A       		.uleb128 0x3a
 4125 0149 0B       		.uleb128 0xb
 4126 014a 3B       		.uleb128 0x3b
 4127 014b 05       		.uleb128 0x5
 4128 014c 27       		.uleb128 0x27
 4129 014d 19       		.uleb128 0x19
 4130 014e 49       		.uleb128 0x49
 4131 014f 13       		.uleb128 0x13
 4132 0150 11       		.uleb128 0x11
 4133 0151 01       		.uleb128 0x1
 4134 0152 12       		.uleb128 0x12
 4135 0153 06       		.uleb128 0x6
 4136 0154 40       		.uleb128 0x40
 4137 0155 18       		.uleb128 0x18
 4138 0156 9642     		.uleb128 0x2116
 4139 0158 19       		.uleb128 0x19
 4140 0159 01       		.uleb128 0x1
 4141 015a 13       		.uleb128 0x13
 4142 015b 00       		.byte	0
 4143 015c 00       		.byte	0
 4144 015d 1A       		.uleb128 0x1a
 4145 015e 26       		.uleb128 0x26
 4146 015f 00       		.byte	0
 4147 0160 49       		.uleb128 0x49
 4148 0161 13       		.uleb128 0x13
 4149 0162 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 124


 4150 0163 00       		.byte	0
 4151 0164 1B       		.uleb128 0x1b
 4152 0165 2E       		.uleb128 0x2e
 4153 0166 01       		.byte	0x1
 4154 0167 3F       		.uleb128 0x3f
 4155 0168 19       		.uleb128 0x19
 4156 0169 03       		.uleb128 0x3
 4157 016a 0E       		.uleb128 0xe
 4158 016b 3A       		.uleb128 0x3a
 4159 016c 0B       		.uleb128 0xb
 4160 016d 3B       		.uleb128 0x3b
 4161 016e 05       		.uleb128 0x5
 4162 016f 27       		.uleb128 0x27
 4163 0170 19       		.uleb128 0x19
 4164 0171 11       		.uleb128 0x11
 4165 0172 01       		.uleb128 0x1
 4166 0173 12       		.uleb128 0x12
 4167 0174 06       		.uleb128 0x6
 4168 0175 40       		.uleb128 0x40
 4169 0176 18       		.uleb128 0x18
 4170 0177 9742     		.uleb128 0x2117
 4171 0179 19       		.uleb128 0x19
 4172 017a 01       		.uleb128 0x1
 4173 017b 13       		.uleb128 0x13
 4174 017c 00       		.byte	0
 4175 017d 00       		.byte	0
 4176 017e 1C       		.uleb128 0x1c
 4177 017f 898201   		.uleb128 0x4109
 4178 0182 00       		.byte	0
 4179 0183 11       		.uleb128 0x11
 4180 0184 01       		.uleb128 0x1
 4181 0185 31       		.uleb128 0x31
 4182 0186 13       		.uleb128 0x13
 4183 0187 00       		.byte	0
 4184 0188 00       		.byte	0
 4185 0189 1D       		.uleb128 0x1d
 4186 018a 2E       		.uleb128 0x2e
 4187 018b 01       		.byte	0x1
 4188 018c 3F       		.uleb128 0x3f
 4189 018d 19       		.uleb128 0x19
 4190 018e 03       		.uleb128 0x3
 4191 018f 0E       		.uleb128 0xe
 4192 0190 3A       		.uleb128 0x3a
 4193 0191 0B       		.uleb128 0xb
 4194 0192 3B       		.uleb128 0x3b
 4195 0193 05       		.uleb128 0x5
 4196 0194 27       		.uleb128 0x27
 4197 0195 19       		.uleb128 0x19
 4198 0196 49       		.uleb128 0x49
 4199 0197 13       		.uleb128 0x13
 4200 0198 11       		.uleb128 0x11
 4201 0199 01       		.uleb128 0x1
 4202 019a 12       		.uleb128 0x12
 4203 019b 06       		.uleb128 0x6
 4204 019c 40       		.uleb128 0x40
 4205 019d 18       		.uleb128 0x18
 4206 019e 9642     		.uleb128 0x2116
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 125


 4207 01a0 19       		.uleb128 0x19
 4208 01a1 01       		.uleb128 0x1
 4209 01a2 13       		.uleb128 0x13
 4210 01a3 00       		.byte	0
 4211 01a4 00       		.byte	0
 4212 01a5 1E       		.uleb128 0x1e
 4213 01a6 2E       		.uleb128 0x2e
 4214 01a7 01       		.byte	0x1
 4215 01a8 03       		.uleb128 0x3
 4216 01a9 0E       		.uleb128 0xe
 4217 01aa 3A       		.uleb128 0x3a
 4218 01ab 0B       		.uleb128 0xb
 4219 01ac 3B       		.uleb128 0x3b
 4220 01ad 05       		.uleb128 0x5
 4221 01ae 27       		.uleb128 0x27
 4222 01af 19       		.uleb128 0x19
 4223 01b0 20       		.uleb128 0x20
 4224 01b1 0B       		.uleb128 0xb
 4225 01b2 01       		.uleb128 0x1
 4226 01b3 13       		.uleb128 0x13
 4227 01b4 00       		.byte	0
 4228 01b5 00       		.byte	0
 4229 01b6 1F       		.uleb128 0x1f
 4230 01b7 34       		.uleb128 0x34
 4231 01b8 00       		.byte	0
 4232 01b9 03       		.uleb128 0x3
 4233 01ba 0E       		.uleb128 0xe
 4234 01bb 3A       		.uleb128 0x3a
 4235 01bc 0B       		.uleb128 0xb
 4236 01bd 3B       		.uleb128 0x3b
 4237 01be 05       		.uleb128 0x5
 4238 01bf 49       		.uleb128 0x49
 4239 01c0 13       		.uleb128 0x13
 4240 01c1 00       		.byte	0
 4241 01c2 00       		.byte	0
 4242 01c3 20       		.uleb128 0x20
 4243 01c4 1D       		.uleb128 0x1d
 4244 01c5 01       		.byte	0x1
 4245 01c6 31       		.uleb128 0x31
 4246 01c7 13       		.uleb128 0x13
 4247 01c8 11       		.uleb128 0x11
 4248 01c9 01       		.uleb128 0x1
 4249 01ca 12       		.uleb128 0x12
 4250 01cb 06       		.uleb128 0x6
 4251 01cc 58       		.uleb128 0x58
 4252 01cd 0B       		.uleb128 0xb
 4253 01ce 59       		.uleb128 0x59
 4254 01cf 05       		.uleb128 0x5
 4255 01d0 01       		.uleb128 0x1
 4256 01d1 13       		.uleb128 0x13
 4257 01d2 00       		.byte	0
 4258 01d3 00       		.byte	0
 4259 01d4 21       		.uleb128 0x21
 4260 01d5 0B       		.uleb128 0xb
 4261 01d6 01       		.byte	0x1
 4262 01d7 11       		.uleb128 0x11
 4263 01d8 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 126


 4264 01d9 12       		.uleb128 0x12
 4265 01da 06       		.uleb128 0x6
 4266 01db 00       		.byte	0
 4267 01dc 00       		.byte	0
 4268 01dd 22       		.uleb128 0x22
 4269 01de 34       		.uleb128 0x34
 4270 01df 00       		.byte	0
 4271 01e0 31       		.uleb128 0x31
 4272 01e1 13       		.uleb128 0x13
 4273 01e2 02       		.uleb128 0x2
 4274 01e3 17       		.uleb128 0x17
 4275 01e4 00       		.byte	0
 4276 01e5 00       		.byte	0
 4277 01e6 23       		.uleb128 0x23
 4278 01e7 898201   		.uleb128 0x4109
 4279 01ea 01       		.byte	0x1
 4280 01eb 11       		.uleb128 0x11
 4281 01ec 01       		.uleb128 0x1
 4282 01ed 31       		.uleb128 0x31
 4283 01ee 13       		.uleb128 0x13
 4284 01ef 01       		.uleb128 0x1
 4285 01f0 13       		.uleb128 0x13
 4286 01f1 00       		.byte	0
 4287 01f2 00       		.byte	0
 4288 01f3 24       		.uleb128 0x24
 4289 01f4 8A8201   		.uleb128 0x410a
 4290 01f7 00       		.byte	0
 4291 01f8 02       		.uleb128 0x2
 4292 01f9 18       		.uleb128 0x18
 4293 01fa 9142     		.uleb128 0x2111
 4294 01fc 18       		.uleb128 0x18
 4295 01fd 00       		.byte	0
 4296 01fe 00       		.byte	0
 4297 01ff 25       		.uleb128 0x25
 4298 0200 898201   		.uleb128 0x4109
 4299 0203 01       		.byte	0x1
 4300 0204 11       		.uleb128 0x11
 4301 0205 01       		.uleb128 0x1
 4302 0206 31       		.uleb128 0x31
 4303 0207 13       		.uleb128 0x13
 4304 0208 00       		.byte	0
 4305 0209 00       		.byte	0
 4306 020a 26       		.uleb128 0x26
 4307 020b 2E       		.uleb128 0x2e
 4308 020c 01       		.byte	0x1
 4309 020d 03       		.uleb128 0x3
 4310 020e 0E       		.uleb128 0xe
 4311 020f 3A       		.uleb128 0x3a
 4312 0210 0B       		.uleb128 0xb
 4313 0211 3B       		.uleb128 0x3b
 4314 0212 05       		.uleb128 0x5
 4315 0213 27       		.uleb128 0x27
 4316 0214 19       		.uleb128 0x19
 4317 0215 49       		.uleb128 0x49
 4318 0216 13       		.uleb128 0x13
 4319 0217 11       		.uleb128 0x11
 4320 0218 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 127


 4321 0219 12       		.uleb128 0x12
 4322 021a 06       		.uleb128 0x6
 4323 021b 40       		.uleb128 0x40
 4324 021c 18       		.uleb128 0x18
 4325 021d 9742     		.uleb128 0x2117
 4326 021f 19       		.uleb128 0x19
 4327 0220 01       		.uleb128 0x1
 4328 0221 13       		.uleb128 0x13
 4329 0222 00       		.byte	0
 4330 0223 00       		.byte	0
 4331 0224 27       		.uleb128 0x27
 4332 0225 34       		.uleb128 0x34
 4333 0226 00       		.byte	0
 4334 0227 03       		.uleb128 0x3
 4335 0228 0E       		.uleb128 0xe
 4336 0229 3A       		.uleb128 0x3a
 4337 022a 0B       		.uleb128 0xb
 4338 022b 3B       		.uleb128 0x3b
 4339 022c 0B       		.uleb128 0xb
 4340 022d 49       		.uleb128 0x49
 4341 022e 13       		.uleb128 0x13
 4342 022f 02       		.uleb128 0x2
 4343 0230 18       		.uleb128 0x18
 4344 0231 00       		.byte	0
 4345 0232 00       		.byte	0
 4346 0233 28       		.uleb128 0x28
 4347 0234 34       		.uleb128 0x34
 4348 0235 00       		.byte	0
 4349 0236 03       		.uleb128 0x3
 4350 0237 0E       		.uleb128 0xe
 4351 0238 3A       		.uleb128 0x3a
 4352 0239 0B       		.uleb128 0xb
 4353 023a 3B       		.uleb128 0x3b
 4354 023b 05       		.uleb128 0x5
 4355 023c 49       		.uleb128 0x49
 4356 023d 13       		.uleb128 0x13
 4357 023e 3F       		.uleb128 0x3f
 4358 023f 19       		.uleb128 0x19
 4359 0240 3C       		.uleb128 0x3c
 4360 0241 19       		.uleb128 0x19
 4361 0242 00       		.byte	0
 4362 0243 00       		.byte	0
 4363 0244 29       		.uleb128 0x29
 4364 0245 34       		.uleb128 0x34
 4365 0246 00       		.byte	0
 4366 0247 03       		.uleb128 0x3
 4367 0248 0E       		.uleb128 0xe
 4368 0249 3A       		.uleb128 0x3a
 4369 024a 0B       		.uleb128 0xb
 4370 024b 3B       		.uleb128 0x3b
 4371 024c 0B       		.uleb128 0xb
 4372 024d 49       		.uleb128 0x49
 4373 024e 13       		.uleb128 0x13
 4374 024f 3F       		.uleb128 0x3f
 4375 0250 19       		.uleb128 0x19
 4376 0251 3C       		.uleb128 0x3c
 4377 0252 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 128


 4378 0253 00       		.byte	0
 4379 0254 00       		.byte	0
 4380 0255 2A       		.uleb128 0x2a
 4381 0256 34       		.uleb128 0x34
 4382 0257 00       		.byte	0
 4383 0258 03       		.uleb128 0x3
 4384 0259 0E       		.uleb128 0xe
 4385 025a 3A       		.uleb128 0x3a
 4386 025b 0B       		.uleb128 0xb
 4387 025c 3B       		.uleb128 0x3b
 4388 025d 0B       		.uleb128 0xb
 4389 025e 49       		.uleb128 0x49
 4390 025f 13       		.uleb128 0x13
 4391 0260 3F       		.uleb128 0x3f
 4392 0261 19       		.uleb128 0x19
 4393 0262 02       		.uleb128 0x2
 4394 0263 18       		.uleb128 0x18
 4395 0264 00       		.byte	0
 4396 0265 00       		.byte	0
 4397 0266 2B       		.uleb128 0x2b
 4398 0267 2E       		.uleb128 0x2e
 4399 0268 00       		.byte	0
 4400 0269 3F       		.uleb128 0x3f
 4401 026a 19       		.uleb128 0x19
 4402 026b 3C       		.uleb128 0x3c
 4403 026c 19       		.uleb128 0x19
 4404 026d 6E       		.uleb128 0x6e
 4405 026e 0E       		.uleb128 0xe
 4406 026f 03       		.uleb128 0x3
 4407 0270 0E       		.uleb128 0xe
 4408 0271 3A       		.uleb128 0x3a
 4409 0272 0B       		.uleb128 0xb
 4410 0273 3B       		.uleb128 0x3b
 4411 0274 0B       		.uleb128 0xb
 4412 0275 00       		.byte	0
 4413 0276 00       		.byte	0
 4414 0277 00       		.byte	0
 4415              		.section	.debug_loc,"",%progbits
 4416              	.Ldebug_loc0:
 4417              	.LLST0:
 4418 0000 00000000 		.4byte	.LVL0
 4419 0004 04000000 		.4byte	.LVL2
 4420 0008 0100     		.2byte	0x1
 4421 000a 50       		.byte	0x50
 4422 000b 04000000 		.4byte	.LVL2
 4423 000f 10000000 		.4byte	.LFE1
 4424 0013 0400     		.2byte	0x4
 4425 0015 F3       		.byte	0xf3
 4426 0016 01       		.uleb128 0x1
 4427 0017 50       		.byte	0x50
 4428 0018 9F       		.byte	0x9f
 4429 0019 00000000 		.4byte	0
 4430 001d 00000000 		.4byte	0
 4431              	.LLST1:
 4432 0021 00000000 		.4byte	.LVL0
 4433 0025 02000000 		.4byte	.LVL1
 4434 0029 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 129


 4435 002b 51       		.byte	0x51
 4436 002c 02000000 		.4byte	.LVL1
 4437 0030 10000000 		.4byte	.LFE1
 4438 0034 0300     		.2byte	0x3
 4439 0036 71       		.byte	0x71
 4440 0037 01       		.sleb128 1
 4441 0038 9F       		.byte	0x9f
 4442 0039 00000000 		.4byte	0
 4443 003d 00000000 		.4byte	0
 4444              	.LLST2:
 4445 0041 08000000 		.4byte	.LVL4
 4446 0045 10000000 		.4byte	.LVL6
 4447 0049 0100     		.2byte	0x1
 4448 004b 52       		.byte	0x52
 4449 004c 10000000 		.4byte	.LVL6
 4450 0050 12000000 		.4byte	.LVL7
 4451 0054 0200     		.2byte	0x2
 4452 0056 73       		.byte	0x73
 4453 0057 00       		.sleb128 0
 4454 0058 12000000 		.4byte	.LVL7
 4455 005c 14000000 		.4byte	.LVL8
 4456 0060 0500     		.2byte	0x5
 4457 0062 0C       		.byte	0xc
 4458 0063 C0010B40 		.4byte	0x400b01c0
 4459 0067 14000000 		.4byte	.LVL8
 4460 006b 2C000000 		.4byte	.LFE19
 4461 006f 0100     		.2byte	0x1
 4462 0071 53       		.byte	0x53
 4463 0072 00000000 		.4byte	0
 4464 0076 00000000 		.4byte	0
 4465              	.LLST3:
 4466 007a 04000000 		.4byte	.LVL10
 4467 007e 0E000000 		.4byte	.LVL12
 4468 0082 0100     		.2byte	0x1
 4469 0084 53       		.byte	0x53
 4470 0085 0E000000 		.4byte	.LVL12
 4471 0089 10000000 		.4byte	.LVL13
 4472 008d 0500     		.2byte	0x5
 4473 008f 0C       		.byte	0xc
 4474 0090 A8020B40 		.4byte	0x400b02a8
 4475 0094 00000000 		.4byte	0
 4476 0098 00000000 		.4byte	0
 4477              	.LLST4:
 4478 009c 00000000 		.4byte	.LVL14
 4479 00a0 14000000 		.4byte	.LVL17
 4480 00a4 0100     		.2byte	0x1
 4481 00a6 50       		.byte	0x50
 4482 00a7 14000000 		.4byte	.LVL17
 4483 00ab 42000000 		.4byte	.LFE21
 4484 00af 0400     		.2byte	0x4
 4485 00b1 F3       		.byte	0xf3
 4486 00b2 01       		.uleb128 0x1
 4487 00b3 50       		.byte	0x50
 4488 00b4 9F       		.byte	0x9f
 4489 00b5 00000000 		.4byte	0
 4490 00b9 00000000 		.4byte	0
 4491              	.LLST5:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 130


 4492 00bd 00000000 		.4byte	.LVL14
 4493 00c1 16000000 		.4byte	.LVL18
 4494 00c5 0100     		.2byte	0x1
 4495 00c7 51       		.byte	0x51
 4496 00c8 16000000 		.4byte	.LVL18
 4497 00cc 40000000 		.4byte	.LVL31
 4498 00d0 0100     		.2byte	0x1
 4499 00d2 56       		.byte	0x56
 4500 00d3 40000000 		.4byte	.LVL31
 4501 00d7 42000000 		.4byte	.LFE21
 4502 00db 0400     		.2byte	0x4
 4503 00dd F3       		.byte	0xf3
 4504 00de 01       		.uleb128 0x1
 4505 00df 51       		.byte	0x51
 4506 00e0 9F       		.byte	0x9f
 4507 00e1 00000000 		.4byte	0
 4508 00e5 00000000 		.4byte	0
 4509              	.LLST6:
 4510 00e9 00000000 		.4byte	.LVL14
 4511 00ed 19000000 		.4byte	.LVL19-1
 4512 00f1 0100     		.2byte	0x1
 4513 00f3 52       		.byte	0x52
 4514 00f4 19000000 		.4byte	.LVL19-1
 4515 00f8 40000000 		.4byte	.LVL30
 4516 00fc 0100     		.2byte	0x1
 4517 00fe 55       		.byte	0x55
 4518 00ff 40000000 		.4byte	.LVL30
 4519 0103 42000000 		.4byte	.LFE21
 4520 0107 0400     		.2byte	0x4
 4521 0109 F3       		.byte	0xf3
 4522 010a 01       		.uleb128 0x1
 4523 010b 52       		.byte	0x52
 4524 010c 9F       		.byte	0x9f
 4525 010d 00000000 		.4byte	0
 4526 0111 00000000 		.4byte	0
 4527              	.LLST7:
 4528 0115 1C000000 		.4byte	.LVL20
 4529 0119 2A000000 		.4byte	.LVL22
 4530 011d 0100     		.2byte	0x1
 4531 011f 50       		.byte	0x50
 4532 0120 2C000000 		.4byte	.LVL23
 4533 0124 2E000000 		.4byte	.LVL24
 4534 0128 0100     		.2byte	0x1
 4535 012a 50       		.byte	0x50
 4536 012b 00000000 		.4byte	0
 4537 012f 00000000 		.4byte	0
 4538              	.LLST8:
 4539 0133 06000000 		.4byte	.LVL15
 4540 0137 2A000000 		.4byte	.LVL22
 4541 013b 0200     		.2byte	0x2
 4542 013d 30       		.byte	0x30
 4543 013e 9F       		.byte	0x9f
 4544 013f 2A000000 		.4byte	.LVL22
 4545 0143 2C000000 		.4byte	.LVL23
 4546 0147 0100     		.2byte	0x1
 4547 0149 50       		.byte	0x50
 4548 014a 2C000000 		.4byte	.LVL23
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 131


 4549 014e 2E000000 		.4byte	.LVL24
 4550 0152 0200     		.2byte	0x2
 4551 0154 30       		.byte	0x30
 4552 0155 9F       		.byte	0x9f
 4553 0156 2E000000 		.4byte	.LVL24
 4554 015a 38000000 		.4byte	.LVL25
 4555 015e 0100     		.2byte	0x1
 4556 0160 50       		.byte	0x50
 4557 0161 3A000000 		.4byte	.LVL26
 4558 0165 3C000000 		.4byte	.LVL27
 4559 0169 0100     		.2byte	0x1
 4560 016b 50       		.byte	0x50
 4561 016c 3E000000 		.4byte	.LVL28
 4562 0170 40000000 		.4byte	.LVL29
 4563 0174 0100     		.2byte	0x1
 4564 0176 50       		.byte	0x50
 4565 0177 00000000 		.4byte	0
 4566 017b 00000000 		.4byte	0
 4567              	.LLST9:
 4568 017f 0E000000 		.4byte	.LVL16
 4569 0183 24000000 		.4byte	.LVL21
 4570 0187 0100     		.2byte	0x1
 4571 0189 54       		.byte	0x54
 4572 018a 24000000 		.4byte	.LVL21
 4573 018e 42000000 		.4byte	.LFE21
 4574 0192 0100     		.2byte	0x1
 4575 0194 53       		.byte	0x53
 4576 0195 00000000 		.4byte	0
 4577 0199 00000000 		.4byte	0
 4578              	.LLST10:
 4579 019d 16000000 		.4byte	.LVL34
 4580 01a1 5E000000 		.4byte	.LVL41
 4581 01a5 0100     		.2byte	0x1
 4582 01a7 51       		.byte	0x51
 4583 01a8 5E000000 		.4byte	.LVL41
 4584 01ac 62000000 		.4byte	.LVL42
 4585 01b0 0200     		.2byte	0x2
 4586 01b2 72       		.byte	0x72
 4587 01b3 00       		.sleb128 0
 4588 01b4 62000000 		.4byte	.LVL42
 4589 01b8 64000000 		.4byte	.LVL43
 4590 01bc 0500     		.2byte	0x5
 4591 01be 0C       		.byte	0xc
 4592 01bf 94020B40 		.4byte	0x400b0294
 4593 01c3 66000000 		.4byte	.LVL44
 4594 01c7 70000000 		.4byte	.LVL46
 4595 01cb 0100     		.2byte	0x1
 4596 01cd 52       		.byte	0x52
 4597 01ce 70000000 		.4byte	.LVL46
 4598 01d2 72000000 		.4byte	.LVL47
 4599 01d6 0500     		.2byte	0x5
 4600 01d8 0C       		.byte	0xc
 4601 01d9 A8020B40 		.4byte	0x400b02a8
 4602 01dd 00000000 		.4byte	0
 4603 01e1 00000000 		.4byte	0
 4604              	.LLST11:
 4605 01e5 00000000 		.4byte	.LVL51
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 132


 4606 01e9 07000000 		.4byte	.LVL52-1
 4607 01ed 0100     		.2byte	0x1
 4608 01ef 50       		.byte	0x50
 4609 01f0 07000000 		.4byte	.LVL52-1
 4610 01f4 16000000 		.4byte	.LVL55
 4611 01f8 0100     		.2byte	0x1
 4612 01fa 55       		.byte	0x55
 4613 01fb 16000000 		.4byte	.LVL55
 4614 01ff 4C000000 		.4byte	.LFE6
 4615 0203 0400     		.2byte	0x4
 4616 0205 F3       		.byte	0xf3
 4617 0206 01       		.uleb128 0x1
 4618 0207 50       		.byte	0x50
 4619 0208 9F       		.byte	0x9f
 4620 0209 00000000 		.4byte	0
 4621 020d 00000000 		.4byte	0
 4622              	.LLST12:
 4623 0211 08000000 		.4byte	.LVL52
 4624 0215 1F000000 		.4byte	.LVL57-1
 4625 0219 0100     		.2byte	0x1
 4626 021b 50       		.byte	0x50
 4627 021c 24000000 		.4byte	.LVL58
 4628 0220 39000000 		.4byte	.LVL62-1
 4629 0224 0100     		.2byte	0x1
 4630 0226 50       		.byte	0x50
 4631 0227 00000000 		.4byte	0
 4632 022b 00000000 		.4byte	0
 4633              	.LLST13:
 4634 022f 0C000000 		.4byte	.LVL53
 4635 0233 1F000000 		.4byte	.LVL57-1
 4636 0237 0100     		.2byte	0x1
 4637 0239 53       		.byte	0x53
 4638 023a 00000000 		.4byte	0
 4639 023e 00000000 		.4byte	0
 4640              	.LLST14:
 4641 0242 28000000 		.4byte	.LVL59
 4642 0246 39000000 		.4byte	.LVL62-1
 4643 024a 0100     		.2byte	0x1
 4644 024c 53       		.byte	0x53
 4645 024d 00000000 		.4byte	0
 4646 0251 00000000 		.4byte	0
 4647              	.LLST15:
 4648 0255 00000000 		.4byte	.LVL63
 4649 0259 06000000 		.4byte	.LVL64
 4650 025d 0100     		.2byte	0x1
 4651 025f 50       		.byte	0x50
 4652 0260 06000000 		.4byte	.LVL64
 4653 0264 13000000 		.4byte	.LVL67-1
 4654 0268 0100     		.2byte	0x1
 4655 026a 53       		.byte	0x53
 4656 026b 13000000 		.4byte	.LVL67-1
 4657 026f 1C000000 		.4byte	.LFE7
 4658 0273 0400     		.2byte	0x4
 4659 0275 F3       		.byte	0xf3
 4660 0276 01       		.uleb128 0x1
 4661 0277 50       		.byte	0x50
 4662 0278 9F       		.byte	0x9f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 133


 4663 0279 00000000 		.4byte	0
 4664 027d 00000000 		.4byte	0
 4665              	.LLST16:
 4666 0281 00000000 		.4byte	.LVL63
 4667 0285 10000000 		.4byte	.LVL66
 4668 0289 0100     		.2byte	0x1
 4669 028b 51       		.byte	0x51
 4670 028c 10000000 		.4byte	.LVL66
 4671 0290 1C000000 		.4byte	.LFE7
 4672 0294 0400     		.2byte	0x4
 4673 0296 F3       		.byte	0xf3
 4674 0297 01       		.uleb128 0x1
 4675 0298 51       		.byte	0x51
 4676 0299 9F       		.byte	0x9f
 4677 029a 00000000 		.4byte	0
 4678 029e 00000000 		.4byte	0
 4679              	.LLST17:
 4680 02a2 00000000 		.4byte	.LVL63
 4681 02a6 13000000 		.4byte	.LVL67-1
 4682 02aa 0100     		.2byte	0x1
 4683 02ac 52       		.byte	0x52
 4684 02ad 13000000 		.4byte	.LVL67-1
 4685 02b1 1C000000 		.4byte	.LFE7
 4686 02b5 0400     		.2byte	0x4
 4687 02b7 F3       		.byte	0xf3
 4688 02b8 01       		.uleb128 0x1
 4689 02b9 52       		.byte	0x52
 4690 02ba 9F       		.byte	0x9f
 4691 02bb 00000000 		.4byte	0
 4692 02bf 00000000 		.4byte	0
 4693              	.LLST18:
 4694 02c3 0A000000 		.4byte	.LVL65
 4695 02c7 13000000 		.4byte	.LVL67-1
 4696 02cb 0100     		.2byte	0x1
 4697 02cd 50       		.byte	0x50
 4698 02ce 13000000 		.4byte	.LVL67-1
 4699 02d2 14000000 		.4byte	.LVL67
 4700 02d6 0800     		.2byte	0x8
 4701 02d8 31       		.byte	0x31
 4702 02d9 F3       		.byte	0xf3
 4703 02da 01       		.uleb128 0x1
 4704 02db 51       		.byte	0x51
 4705 02dc 24       		.byte	0x24
 4706 02dd 31       		.byte	0x31
 4707 02de 1C       		.byte	0x1c
 4708 02df 9F       		.byte	0x9f
 4709 02e0 14000000 		.4byte	.LVL67
 4710 02e4 1A000000 		.4byte	.LVL68
 4711 02e8 0100     		.2byte	0x1
 4712 02ea 50       		.byte	0x50
 4713 02eb 00000000 		.4byte	0
 4714 02ef 00000000 		.4byte	0
 4715              	.LLST19:
 4716 02f3 10000000 		.4byte	.LVL70
 4717 02f7 23000000 		.4byte	.LVL76-1
 4718 02fb 0100     		.2byte	0x1
 4719 02fd 51       		.byte	0x51
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 134


 4720 02fe 00000000 		.4byte	0
 4721 0302 00000000 		.4byte	0
 4722              	.LLST20:
 4723 0306 12000000 		.4byte	.LVL71
 4724 030a 16000000 		.4byte	.LVL73
 4725 030e 0100     		.2byte	0x1
 4726 0310 53       		.byte	0x53
 4727 0311 16000000 		.4byte	.LVL73
 4728 0315 1C000000 		.4byte	.LVL74
 4729 0319 0300     		.2byte	0x3
 4730 031b 73       		.byte	0x73
 4731 031c 05       		.sleb128 5
 4732 031d 9F       		.byte	0x9f
 4733 031e 00000000 		.4byte	0
 4734 0322 00000000 		.4byte	0
 4735              	.LLST21:
 4736 0326 14000000 		.4byte	.LVL72
 4737 032a 23000000 		.4byte	.LVL76-1
 4738 032e 0100     		.2byte	0x1
 4739 0330 50       		.byte	0x50
 4740 0331 00000000 		.4byte	0
 4741 0335 00000000 		.4byte	0
 4742              	.LLST22:
 4743 0339 0E000000 		.4byte	.LVL69
 4744 033d 12000000 		.4byte	.LVL71
 4745 0341 0100     		.2byte	0x1
 4746 0343 53       		.byte	0x53
 4747 0344 00000000 		.4byte	0
 4748 0348 00000000 		.4byte	0
 4749              	.LLST23:
 4750 034c 00000000 		.4byte	.LVL77
 4751 0350 06000000 		.4byte	.LVL78
 4752 0354 0100     		.2byte	0x1
 4753 0356 50       		.byte	0x50
 4754 0357 06000000 		.4byte	.LVL78
 4755 035b 0D000000 		.4byte	.LVL79-1
 4756 035f 0100     		.2byte	0x1
 4757 0361 53       		.byte	0x53
 4758 0362 0D000000 		.4byte	.LVL79-1
 4759 0366 1C000000 		.4byte	.LFE9
 4760 036a 0400     		.2byte	0x4
 4761 036c F3       		.byte	0xf3
 4762 036d 01       		.uleb128 0x1
 4763 036e 50       		.byte	0x50
 4764 036f 9F       		.byte	0x9f
 4765 0370 00000000 		.4byte	0
 4766 0374 00000000 		.4byte	0
 4767              	.LLST24:
 4768 0378 0E000000 		.4byte	.LVL79
 4769 037c 10000000 		.4byte	.LVL80
 4770 0380 0100     		.2byte	0x1
 4771 0382 50       		.byte	0x50
 4772 0383 00000000 		.4byte	0
 4773 0387 00000000 		.4byte	0
 4774              	.LLST25:
 4775 038b 06000000 		.4byte	.LVL78
 4776 038f 0D000000 		.4byte	.LVL79-1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 135


 4777 0393 0100     		.2byte	0x1
 4778 0395 50       		.byte	0x50
 4779 0396 00000000 		.4byte	0
 4780 039a 00000000 		.4byte	0
 4781              	.LLST26:
 4782 039e 3E000000 		.4byte	.LVL82
 4783 03a2 44000000 		.4byte	.LVL83
 4784 03a6 0400     		.2byte	0x4
 4785 03a8 0A       		.byte	0xa
 4786 03a9 00E1     		.2byte	0xe100
 4787 03ab 9F       		.byte	0x9f
 4788 03ac 44000000 		.4byte	.LVL83
 4789 03b0 5A000000 		.4byte	.LVL85
 4790 03b4 0100     		.2byte	0x1
 4791 03b6 53       		.byte	0x53
 4792 03b7 00000000 		.4byte	0
 4793 03bb 00000000 		.4byte	0
 4794              	.LLST27:
 4795 03bf 98000000 		.4byte	.LVL88
 4796 03c3 9E000000 		.4byte	.LVL89
 4797 03c7 0400     		.2byte	0x4
 4798 03c9 0A       		.byte	0xa
 4799 03ca 00E1     		.2byte	0xe100
 4800 03cc 9F       		.byte	0x9f
 4801 03cd 9E000000 		.4byte	.LVL89
 4802 03d1 B0000000 		.4byte	.LVL91
 4803 03d5 0100     		.2byte	0x1
 4804 03d7 53       		.byte	0x53
 4805 03d8 00000000 		.4byte	0
 4806 03dc 00000000 		.4byte	0
 4807              	.LLST28:
 4808 03e0 00000000 		.4byte	.LVL94
 4809 03e4 0B000000 		.4byte	.LVL97-1
 4810 03e8 0100     		.2byte	0x1
 4811 03ea 50       		.byte	0x50
 4812 03eb 0B000000 		.4byte	.LVL97-1
 4813 03ef 32000000 		.4byte	.LVL104
 4814 03f3 0100     		.2byte	0x1
 4815 03f5 54       		.byte	0x54
 4816 03f6 32000000 		.4byte	.LVL104
 4817 03fa 34000000 		.4byte	.LFE17
 4818 03fe 0400     		.2byte	0x4
 4819 0400 F3       		.byte	0xf3
 4820 0401 01       		.uleb128 0x1
 4821 0402 50       		.byte	0x50
 4822 0403 9F       		.byte	0x9f
 4823 0404 00000000 		.4byte	0
 4824 0408 00000000 		.4byte	0
 4825              	.LLST29:
 4826 040c 10000000 		.4byte	.LVL98
 4827 0410 16000000 		.4byte	.LVL99
 4828 0414 0100     		.2byte	0x1
 4829 0416 53       		.byte	0x53
 4830 0417 18000000 		.4byte	.LVL100
 4831 041b 1E000000 		.4byte	.LVL101
 4832 041f 0100     		.2byte	0x1
 4833 0421 52       		.byte	0x52
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 136


 4834 0422 1E000000 		.4byte	.LVL101
 4835 0426 31000000 		.4byte	.LVL103-1
 4836 042a 0100     		.2byte	0x1
 4837 042c 53       		.byte	0x53
 4838 042d 00000000 		.4byte	0
 4839 0431 00000000 		.4byte	0
 4840              	.LLST30:
 4841 0435 0C000000 		.4byte	.LVL97
 4842 0439 31000000 		.4byte	.LVL103-1
 4843 043d 0100     		.2byte	0x1
 4844 043f 50       		.byte	0x50
 4845 0440 00000000 		.4byte	0
 4846 0444 00000000 		.4byte	0
 4847              	.LLST31:
 4848 0448 06000000 		.4byte	.LVL95
 4849 044c 32000000 		.4byte	.LVL105
 4850 0450 0100     		.2byte	0x1
 4851 0452 55       		.byte	0x55
 4852 0453 00000000 		.4byte	0
 4853 0457 00000000 		.4byte	0
 4854              	.LLST32:
 4855 045b 08000000 		.4byte	.LVL96
 4856 045f 20000000 		.4byte	.LVL102
 4857 0463 0100     		.2byte	0x1
 4858 0465 56       		.byte	0x56
 4859 0466 00000000 		.4byte	0
 4860 046a 00000000 		.4byte	0
 4861              	.LLST33:
 4862 046e 0E000000 		.4byte	.LVL106
 4863 0472 2F000000 		.4byte	.LVL107-1
 4864 0476 0100     		.2byte	0x1
 4865 0478 50       		.byte	0x50
 4866 0479 00000000 		.4byte	0
 4867 047d 00000000 		.4byte	0
 4868              	.LLST34:
 4869 0481 00000000 		.4byte	.LVL111
 4870 0485 04000000 		.4byte	.LVL112
 4871 0489 0100     		.2byte	0x1
 4872 048b 50       		.byte	0x50
 4873 048c 04000000 		.4byte	.LVL112
 4874 0490 24000000 		.4byte	.LFE15
 4875 0494 0400     		.2byte	0x4
 4876 0496 F3       		.byte	0xf3
 4877 0497 01       		.uleb128 0x1
 4878 0498 50       		.byte	0x50
 4879 0499 9F       		.byte	0x9f
 4880 049a 00000000 		.4byte	0
 4881 049e 00000000 		.4byte	0
 4882              	.LLST35:
 4883 04a2 00000000 		.4byte	.LVL111
 4884 04a6 0C000000 		.4byte	.LVL113
 4885 04aa 0100     		.2byte	0x1
 4886 04ac 51       		.byte	0x51
 4887 04ad 0C000000 		.4byte	.LVL113
 4888 04b1 24000000 		.4byte	.LFE15
 4889 04b5 0400     		.2byte	0x4
 4890 04b7 F3       		.byte	0xf3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 137


 4891 04b8 01       		.uleb128 0x1
 4892 04b9 51       		.byte	0x51
 4893 04ba 9F       		.byte	0x9f
 4894 04bb 00000000 		.4byte	0
 4895 04bf 00000000 		.4byte	0
 4896              	.LLST36:
 4897 04c3 00000000 		.4byte	.LVL115
 4898 04c7 06000000 		.4byte	.LVL116
 4899 04cb 0100     		.2byte	0x1
 4900 04cd 50       		.byte	0x50
 4901 04ce 06000000 		.4byte	.LVL116
 4902 04d2 3E000000 		.4byte	.LVL124
 4903 04d6 0100     		.2byte	0x1
 4904 04d8 54       		.byte	0x54
 4905 04d9 3E000000 		.4byte	.LVL124
 4906 04dd 40000000 		.4byte	.LFE18
 4907 04e1 0400     		.2byte	0x4
 4908 04e3 F3       		.byte	0xf3
 4909 04e4 01       		.uleb128 0x1
 4910 04e5 50       		.byte	0x50
 4911 04e6 9F       		.byte	0x9f
 4912 04e7 00000000 		.4byte	0
 4913 04eb 00000000 		.4byte	0
 4914              	.LLST37:
 4915 04ef 06000000 		.4byte	.LVL116
 4916 04f3 17000000 		.4byte	.LVL118-1
 4917 04f7 0100     		.2byte	0x1
 4918 04f9 50       		.byte	0x50
 4919 04fa 00000000 		.4byte	0
 4920 04fe 00000000 		.4byte	0
 4921              	.LLST38:
 4922 0502 1C000000 		.4byte	.LVL119
 4923 0506 22000000 		.4byte	.LVL120
 4924 050a 0100     		.2byte	0x1
 4925 050c 53       		.byte	0x53
 4926 050d 24000000 		.4byte	.LVL121
 4927 0511 2A000000 		.4byte	.LVL122
 4928 0515 0100     		.2byte	0x1
 4929 0517 52       		.byte	0x52
 4930 0518 2A000000 		.4byte	.LVL122
 4931 051c 2F000000 		.4byte	.LVL123-1
 4932 0520 0100     		.2byte	0x1
 4933 0522 53       		.byte	0x53
 4934 0523 00000000 		.4byte	0
 4935 0527 00000000 		.4byte	0
 4936              	.LLST39:
 4937 052b 08000000 		.4byte	.LVL117
 4938 052f 3E000000 		.4byte	.LVL125
 4939 0533 0100     		.2byte	0x1
 4940 0535 55       		.byte	0x55
 4941 0536 00000000 		.4byte	0
 4942 053a 00000000 		.4byte	0
 4943              	.LLST40:
 4944 053e 18000000 		.4byte	.LVL118
 4945 0542 2F000000 		.4byte	.LVL123-1
 4946 0546 0100     		.2byte	0x1
 4947 0548 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 138


 4948 0549 00000000 		.4byte	0
 4949 054d 00000000 		.4byte	0
 4950              	.LLST41:
 4951 0551 00000000 		.4byte	.LVL127
 4952 0555 0C000000 		.4byte	.LVL129
 4953 0559 0100     		.2byte	0x1
 4954 055b 50       		.byte	0x50
 4955 055c 0C000000 		.4byte	.LVL129
 4956 0560 54000000 		.4byte	.LFE10
 4957 0564 0400     		.2byte	0x4
 4958 0566 F3       		.byte	0xf3
 4959 0567 01       		.uleb128 0x1
 4960 0568 50       		.byte	0x50
 4961 0569 9F       		.byte	0x9f
 4962 056a 00000000 		.4byte	0
 4963 056e 00000000 		.4byte	0
 4964              	.LLST42:
 4965 0572 0A000000 		.4byte	.LVL128
 4966 0576 40000000 		.4byte	.LVL134
 4967 057a 0100     		.2byte	0x1
 4968 057c 55       		.byte	0x55
 4969 057d 40000000 		.4byte	.LVL134
 4970 0581 40000000 		.4byte	.LVL135
 4971 0585 0A00     		.2byte	0xa
 4972 0587 F3       		.byte	0xf3
 4973 0588 01       		.uleb128 0x1
 4974 0589 50       		.byte	0x50
 4975 058a 35       		.byte	0x35
 4976 058b 24       		.byte	0x24
 4977 058c 76       		.byte	0x76
 4978 058d 00       		.sleb128 0
 4979 058e 22       		.byte	0x22
 4980 058f 23       		.byte	0x23
 4981 0590 04       		.uleb128 0x4
 4982 0591 00000000 		.4byte	0
 4983 0595 00000000 		.4byte	0
 4984              	.LLST43:
 4985 0599 00000000 		.4byte	.LVL136
 4986 059d 25000000 		.4byte	.LVL139-1
 4987 05a1 0100     		.2byte	0x1
 4988 05a3 50       		.byte	0x50
 4989 05a4 25000000 		.4byte	.LVL139-1
 4990 05a8 6C000000 		.4byte	.LFE11
 4991 05ac 0400     		.2byte	0x4
 4992 05ae F3       		.byte	0xf3
 4993 05af 01       		.uleb128 0x1
 4994 05b0 50       		.byte	0x50
 4995 05b1 9F       		.byte	0x9f
 4996 05b2 00000000 		.4byte	0
 4997 05b6 00000000 		.4byte	0
 4998              	.LLST44:
 4999 05ba 00000000 		.4byte	.LVL136
 5000 05be 0C000000 		.4byte	.LVL138
 5001 05c2 0100     		.2byte	0x1
 5002 05c4 51       		.byte	0x51
 5003 05c5 0C000000 		.4byte	.LVL138
 5004 05c9 6C000000 		.4byte	.LFE11
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 139


 5005 05cd 0400     		.2byte	0x4
 5006 05cf F3       		.byte	0xf3
 5007 05d0 01       		.uleb128 0x1
 5008 05d1 51       		.byte	0x51
 5009 05d2 9F       		.byte	0x9f
 5010 05d3 00000000 		.4byte	0
 5011 05d7 00000000 		.4byte	0
 5012              	.LLST45:
 5013 05db 0A000000 		.4byte	.LVL137
 5014 05df 50000000 		.4byte	.LVL143
 5015 05e3 0100     		.2byte	0x1
 5016 05e5 55       		.byte	0x55
 5017 05e6 00000000 		.4byte	0
 5018 05ea 00000000 		.4byte	0
 5019              	.LLST46:
 5020 05ee 00000000 		.4byte	.LVL144
 5021 05f2 04000000 		.4byte	.LVL145
 5022 05f6 0100     		.2byte	0x1
 5023 05f8 50       		.byte	0x50
 5024 05f9 04000000 		.4byte	.LVL145
 5025 05fd 24000000 		.4byte	.LFE16
 5026 0601 0400     		.2byte	0x4
 5027 0603 F3       		.byte	0xf3
 5028 0604 01       		.uleb128 0x1
 5029 0605 50       		.byte	0x50
 5030 0606 9F       		.byte	0x9f
 5031 0607 00000000 		.4byte	0
 5032 060b 00000000 		.4byte	0
 5033              	.LLST47:
 5034 060f 00000000 		.4byte	.LVL144
 5035 0613 0C000000 		.4byte	.LVL146
 5036 0617 0100     		.2byte	0x1
 5037 0619 51       		.byte	0x51
 5038 061a 0C000000 		.4byte	.LVL146
 5039 061e 24000000 		.4byte	.LFE16
 5040 0622 0400     		.2byte	0x4
 5041 0624 F3       		.byte	0xf3
 5042 0625 01       		.uleb128 0x1
 5043 0626 51       		.byte	0x51
 5044 0627 9F       		.byte	0x9f
 5045 0628 00000000 		.4byte	0
 5046 062c 00000000 		.4byte	0
 5047              	.LLST48:
 5048 0630 00000000 		.4byte	.LVL148
 5049 0634 22000000 		.4byte	.LVL154
 5050 0638 0100     		.2byte	0x1
 5051 063a 50       		.byte	0x50
 5052 063b 22000000 		.4byte	.LVL154
 5053 063f C2000000 		.4byte	.LVL171
 5054 0643 0100     		.2byte	0x1
 5055 0645 57       		.byte	0x57
 5056 0646 C2000000 		.4byte	.LVL171
 5057 064a E8000000 		.4byte	.LFE22
 5058 064e 0400     		.2byte	0x4
 5059 0650 F3       		.byte	0xf3
 5060 0651 01       		.uleb128 0x1
 5061 0652 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 140


 5062 0653 9F       		.byte	0x9f
 5063 0654 00000000 		.4byte	0
 5064 0658 00000000 		.4byte	0
 5065              	.LLST49:
 5066 065c 00000000 		.4byte	.LVL148
 5067 0660 16000000 		.4byte	.LVL151
 5068 0664 0100     		.2byte	0x1
 5069 0666 51       		.byte	0x51
 5070 0667 16000000 		.4byte	.LVL151
 5071 066b C2000000 		.4byte	.LVL170
 5072 066f 0100     		.2byte	0x1
 5073 0671 56       		.byte	0x56
 5074 0672 C2000000 		.4byte	.LVL170
 5075 0676 E8000000 		.4byte	.LFE22
 5076 067a 0400     		.2byte	0x4
 5077 067c F3       		.byte	0xf3
 5078 067d 01       		.uleb128 0x1
 5079 067e 51       		.byte	0x51
 5080 067f 9F       		.byte	0x9f
 5081 0680 00000000 		.4byte	0
 5082 0684 00000000 		.4byte	0
 5083              	.LLST50:
 5084 0688 00000000 		.4byte	.LVL148
 5085 068c 10000000 		.4byte	.LVL150
 5086 0690 0100     		.2byte	0x1
 5087 0692 52       		.byte	0x52
 5088 0693 10000000 		.4byte	.LVL150
 5089 0697 C2000000 		.4byte	.LVL172
 5090 069b 0100     		.2byte	0x1
 5091 069d 58       		.byte	0x58
 5092 069e C2000000 		.4byte	.LVL172
 5093 06a2 E8000000 		.4byte	.LFE22
 5094 06a6 0400     		.2byte	0x4
 5095 06a8 F3       		.byte	0xf3
 5096 06a9 01       		.uleb128 0x1
 5097 06aa 52       		.byte	0x52
 5098 06ab 9F       		.byte	0x9f
 5099 06ac 00000000 		.4byte	0
 5100 06b0 00000000 		.4byte	0
 5101              	.LLST51:
 5102 06b4 0E000000 		.4byte	.LVL149
 5103 06b8 36000000 		.4byte	.LVL157
 5104 06bc 0300     		.2byte	0x3
 5105 06be 08       		.byte	0x8
 5106 06bf 80       		.byte	0x80
 5107 06c0 9F       		.byte	0x9f
 5108 06c1 36000000 		.4byte	.LVL157
 5109 06c5 C2000000 		.4byte	.LVL169
 5110 06c9 0100     		.2byte	0x1
 5111 06cb 55       		.byte	0x55
 5112 06cc 00000000 		.4byte	0
 5113 06d0 00000000 		.4byte	0
 5114              	.LLST52:
 5115 06d4 52000000 		.4byte	.LVL160
 5116 06d8 58000000 		.4byte	.LVL161
 5117 06dc 0400     		.2byte	0x4
 5118 06de 0A       		.byte	0xa
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 141


 5119 06df 00E1     		.2byte	0xe100
 5120 06e1 9F       		.byte	0x9f
 5121 06e2 58000000 		.4byte	.LVL161
 5122 06e6 68000000 		.4byte	.LVL163
 5123 06ea 0100     		.2byte	0x1
 5124 06ec 53       		.byte	0x53
 5125 06ed 00000000 		.4byte	0
 5126 06f1 00000000 		.4byte	0
 5127              	.LLST53:
 5128 06f5 0E000000 		.4byte	.LVL149
 5129 06f9 36000000 		.4byte	.LVL157
 5130 06fd 0200     		.2byte	0x2
 5131 06ff 30       		.byte	0x30
 5132 0700 9F       		.byte	0x9f
 5133 0701 36000000 		.4byte	.LVL157
 5134 0705 C2000000 		.4byte	.LVL168
 5135 0709 0100     		.2byte	0x1
 5136 070b 54       		.byte	0x54
 5137 070c 00000000 		.4byte	0
 5138 0710 00000000 		.4byte	0
 5139              	.LLST54:
 5140 0714 1C000000 		.4byte	.LVL152
 5141 0718 1E000000 		.4byte	.LVL153
 5142 071c 0100     		.2byte	0x1
 5143 071e 53       		.byte	0x53
 5144 071f 1E000000 		.4byte	.LVL153
 5145 0723 E8000000 		.4byte	.LFE22
 5146 0727 0200     		.2byte	0x2
 5147 0729 91       		.byte	0x91
 5148 072a 64       		.sleb128 -28
 5149 072b 00000000 		.4byte	0
 5150 072f 00000000 		.4byte	0
 5151              	.LLST55:
 5152 0733 00000000 		.4byte	.LVL173
 5153 0737 1E000000 		.4byte	.LVL176
 5154 073b 0100     		.2byte	0x1
 5155 073d 50       		.byte	0x50
 5156 073e 1E000000 		.4byte	.LVL176
 5157 0742 E8000000 		.4byte	.LVL191
 5158 0746 0100     		.2byte	0x1
 5159 0748 54       		.byte	0x54
 5160 0749 E8000000 		.4byte	.LVL191
 5161 074d 08010000 		.4byte	.LFE23
 5162 0751 0400     		.2byte	0x4
 5163 0753 F3       		.byte	0xf3
 5164 0754 01       		.uleb128 0x1
 5165 0755 50       		.byte	0x50
 5166 0756 9F       		.byte	0x9f
 5167 0757 00000000 		.4byte	0
 5168 075b 00000000 		.4byte	0
 5169              	.LLST56:
 5170 075f 00000000 		.4byte	.LVL173
 5171 0763 26000000 		.4byte	.LVL179
 5172 0767 0100     		.2byte	0x1
 5173 0769 51       		.byte	0x51
 5174 076a 26000000 		.4byte	.LVL179
 5175 076e E8000000 		.4byte	.LVL194
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 142


 5176 0772 0100     		.2byte	0x1
 5177 0774 59       		.byte	0x59
 5178 0775 E8000000 		.4byte	.LVL194
 5179 0779 08010000 		.4byte	.LFE23
 5180 077d 0400     		.2byte	0x4
 5181 077f F3       		.byte	0xf3
 5182 0780 01       		.uleb128 0x1
 5183 0781 51       		.byte	0x51
 5184 0782 9F       		.byte	0x9f
 5185 0783 00000000 		.4byte	0
 5186 0787 00000000 		.4byte	0
 5187              	.LLST57:
 5188 078b 22000000 		.4byte	.LVL177
 5189 078f 24000000 		.4byte	.LVL178
 5190 0793 0100     		.2byte	0x1
 5191 0795 50       		.byte	0x50
 5192 0796 24000000 		.4byte	.LVL178
 5193 079a 29000000 		.4byte	.LVL180-1
 5194 079e 0800     		.2byte	0x8
 5195 07a0 75       		.byte	0x75
 5196 07a1 00       		.sleb128 0
 5197 07a2 73       		.byte	0x73
 5198 07a3 00       		.sleb128 0
 5199 07a4 24       		.byte	0x24
 5200 07a5 31       		.byte	0x31
 5201 07a6 1C       		.byte	0x1c
 5202 07a7 9F       		.byte	0x9f
 5203 07a8 2C000000 		.4byte	.LVL181
 5204 07ac 34000000 		.4byte	.LVL182
 5205 07b0 0100     		.2byte	0x1
 5206 07b2 50       		.byte	0x50
 5207 07b3 34000000 		.4byte	.LVL182
 5208 07b7 08010000 		.4byte	.LFE23
 5209 07bb 0200     		.2byte	0x2
 5210 07bd 91       		.byte	0x91
 5211 07be 5C       		.sleb128 -36
 5212 07bf 00000000 		.4byte	0
 5213 07c3 00000000 		.4byte	0
 5214              	.LLST58:
 5215 07c7 0C000000 		.4byte	.LVL174
 5216 07cb 4C000000 		.4byte	.LVL185
 5217 07cf 0200     		.2byte	0x2
 5218 07d1 30       		.byte	0x30
 5219 07d2 9F       		.byte	0x9f
 5220 07d3 4C000000 		.4byte	.LVL185
 5221 07d7 E8000000 		.4byte	.LVL192
 5222 07db 0100     		.2byte	0x1
 5223 07dd 55       		.byte	0x55
 5224 07de E8000000 		.4byte	.LVL192
 5225 07e2 08010000 		.4byte	.LFE23
 5226 07e6 0100     		.2byte	0x1
 5227 07e8 50       		.byte	0x50
 5228 07e9 00000000 		.4byte	0
 5229 07ed 00000000 		.4byte	0
 5230              	.LLST59:
 5231 07f1 14000000 		.4byte	.LVL175
 5232 07f5 E8000000 		.4byte	.LVL193
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 143


 5233 07f9 0100     		.2byte	0x1
 5234 07fb 57       		.byte	0x57
 5235 07fc 00000000 		.4byte	0
 5236 0800 00000000 		.4byte	0
 5237              	.LLST60:
 5238 0804 3C000000 		.4byte	.LVL184
 5239 0808 86000000 		.4byte	.LVL189
 5240 080c 0100     		.2byte	0x1
 5241 080e 56       		.byte	0x56
 5242 080f 86000000 		.4byte	.LVL189
 5243 0813 E8000000 		.4byte	.LVL193
 5244 0817 0300     		.2byte	0x3
 5245 0819 77       		.byte	0x77
 5246 081a 09       		.sleb128 9
 5247 081b 9F       		.byte	0x9f
 5248 081c 00000000 		.4byte	0
 5249 0820 00000000 		.4byte	0
 5250              		.section	.debug_aranges,"",%progbits
 5251 0000 CC000000 		.4byte	0xcc
 5252 0004 0200     		.2byte	0x2
 5253 0006 00000000 		.4byte	.Ldebug_info0
 5254 000a 04       		.byte	0x4
 5255 000b 00       		.byte	0
 5256 000c 0000     		.2byte	0
 5257 000e 0000     		.2byte	0
 5258 0010 00000000 		.4byte	.LFB1
 5259 0014 10000000 		.4byte	.LFE1-.LFB1
 5260 0018 00000000 		.4byte	.LFB2
 5261 001c 58000000 		.4byte	.LFE2-.LFB2
 5262 0020 00000000 		.4byte	.LFB3
 5263 0024 1C000000 		.4byte	.LFE3-.LFB3
 5264 0028 00000000 		.4byte	.LFB19
 5265 002c 2C000000 		.4byte	.LFE19-.LFB19
 5266 0030 00000000 		.4byte	.LFB20
 5267 0034 30000000 		.4byte	.LFE20-.LFB20
 5268 0038 00000000 		.4byte	.LFB21
 5269 003c 42000000 		.4byte	.LFE21-.LFB21
 5270 0040 00000000 		.4byte	.LFB4
 5271 0044 18010000 		.4byte	.LFE4-.LFB4
 5272 0048 00000000 		.4byte	.LFB6
 5273 004c 4C000000 		.4byte	.LFE6-.LFB6
 5274 0050 00000000 		.4byte	.LFB7
 5275 0054 1C000000 		.4byte	.LFE7-.LFB7
 5276 0058 00000000 		.4byte	.LFB8
 5277 005c 30000000 		.4byte	.LFE8-.LFB8
 5278 0060 00000000 		.4byte	.LFB9
 5279 0064 1C000000 		.4byte	.LFE9-.LFB9
 5280 0068 00000000 		.4byte	.LFB12
 5281 006c E4000000 		.4byte	.LFE12-.LFB12
 5282 0070 00000000 		.4byte	.LFB13
 5283 0074 20000000 		.4byte	.LFE13-.LFB13
 5284 0078 00000000 		.4byte	.LFB17
 5285 007c 34000000 		.4byte	.LFE17-.LFB17
 5286 0080 00000000 		.4byte	.LFB14
 5287 0084 70000000 		.4byte	.LFE14-.LFB14
 5288 0088 00000000 		.4byte	.LFB15
 5289 008c 24000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 144


 5290 0090 00000000 		.4byte	.LFB18
 5291 0094 40000000 		.4byte	.LFE18-.LFB18
 5292 0098 00000000 		.4byte	.LFB5
 5293 009c 24000000 		.4byte	.LFE5-.LFB5
 5294 00a0 00000000 		.4byte	.LFB10
 5295 00a4 54000000 		.4byte	.LFE10-.LFB10
 5296 00a8 00000000 		.4byte	.LFB11
 5297 00ac 6C000000 		.4byte	.LFE11-.LFB11
 5298 00b0 00000000 		.4byte	.LFB16
 5299 00b4 24000000 		.4byte	.LFE16-.LFB16
 5300 00b8 00000000 		.4byte	.LFB22
 5301 00bc E8000000 		.4byte	.LFE22-.LFB22
 5302 00c0 00000000 		.4byte	.LFB23
 5303 00c4 08010000 		.4byte	.LFE23-.LFB23
 5304 00c8 00000000 		.4byte	0
 5305 00cc 00000000 		.4byte	0
 5306              		.section	.debug_ranges,"",%progbits
 5307              	.Ldebug_ranges0:
 5308 0000 00000000 		.4byte	.LFB1
 5309 0004 10000000 		.4byte	.LFE1
 5310 0008 00000000 		.4byte	.LFB2
 5311 000c 58000000 		.4byte	.LFE2
 5312 0010 00000000 		.4byte	.LFB3
 5313 0014 1C000000 		.4byte	.LFE3
 5314 0018 00000000 		.4byte	.LFB19
 5315 001c 2C000000 		.4byte	.LFE19
 5316 0020 00000000 		.4byte	.LFB20
 5317 0024 30000000 		.4byte	.LFE20
 5318 0028 00000000 		.4byte	.LFB21
 5319 002c 42000000 		.4byte	.LFE21
 5320 0030 00000000 		.4byte	.LFB4
 5321 0034 18010000 		.4byte	.LFE4
 5322 0038 00000000 		.4byte	.LFB6
 5323 003c 4C000000 		.4byte	.LFE6
 5324 0040 00000000 		.4byte	.LFB7
 5325 0044 1C000000 		.4byte	.LFE7
 5326 0048 00000000 		.4byte	.LFB8
 5327 004c 30000000 		.4byte	.LFE8
 5328 0050 00000000 		.4byte	.LFB9
 5329 0054 1C000000 		.4byte	.LFE9
 5330 0058 00000000 		.4byte	.LFB12
 5331 005c E4000000 		.4byte	.LFE12
 5332 0060 00000000 		.4byte	.LFB13
 5333 0064 20000000 		.4byte	.LFE13
 5334 0068 00000000 		.4byte	.LFB17
 5335 006c 34000000 		.4byte	.LFE17
 5336 0070 00000000 		.4byte	.LFB14
 5337 0074 70000000 		.4byte	.LFE14
 5338 0078 00000000 		.4byte	.LFB15
 5339 007c 24000000 		.4byte	.LFE15
 5340 0080 00000000 		.4byte	.LFB18
 5341 0084 40000000 		.4byte	.LFE18
 5342 0088 00000000 		.4byte	.LFB5
 5343 008c 24000000 		.4byte	.LFE5
 5344 0090 00000000 		.4byte	.LFB10
 5345 0094 54000000 		.4byte	.LFE10
 5346 0098 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 145


 5347 009c 6C000000 		.4byte	.LFE11
 5348 00a0 00000000 		.4byte	.LFB16
 5349 00a4 24000000 		.4byte	.LFE16
 5350 00a8 00000000 		.4byte	.LFB22
 5351 00ac E8000000 		.4byte	.LFE22
 5352 00b0 00000000 		.4byte	.LFB23
 5353 00b4 08010000 		.4byte	.LFE23
 5354 00b8 00000000 		.4byte	0
 5355 00bc 00000000 		.4byte	0
 5356              		.section	.debug_line,"",%progbits
 5357              	.Ldebug_line0:
 5358 0000 F9030000 		.section	.debug_str,"MS",%progbits,1
 5358      0200E200 
 5358      00000201 
 5358      FB0E0D00 
 5358      01010101 
 5359              	.LASF178:
 5360 0000 43617053 		.ascii	"CapSense_1_SsCSDConfigIDACs\000"
 5360      656E7365 
 5360      5F315F53 
 5360      73435344 
 5360      436F6E66 
 5361              	.LASF120:
 5362 001c 69646163 		.ascii	"idacBRegValue\000"
 5362      42526567 
 5362      56616C75 
 5362      6500
 5363              	.LASF165:
 5364 002a 43617053 		.ascii	"CapSense_1_BistDischargeExtCapacitors\000"
 5364      656E7365 
 5364      5F315F42 
 5364      69737444 
 5364      69736368 
 5365              	.LASF150:
 5366 0050 43617053 		.ascii	"CapSense_1_SsCSDGetNumberOfConversions\000"
 5366      656E7365 
 5366      5F315F53 
 5366      73435344 
 5366      4765744E 
 5367              	.LASF131:
 5368 0077 736E7341 		.ascii	"snsAddrPtr\000"
 5368      64647250 
 5368      747200
 5369              	.LASF98:
 5370 0082 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 5370      656E7365 
 5370      5F315F46 
 5370      4C415348 
 5370      5F57445F 
 5371              	.LASF158:
 5372 009d 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 5372      656E7365 
 5372      5F315F63 
 5372      75725261 
 5372      6D536E73 
 5373              	.LASF73:
 5374 00b5 736E7254 		.ascii	"snrTestWidgetId\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 146


 5374      65737457 
 5374      69646765 
 5374      74496400 
 5375              	.LASF117:
 5376 00c5 43617053 		.ascii	"CapSense_1_SsCSDSetUpIdacs\000"
 5376      656E7365 
 5376      5F315F53 
 5376      73435344 
 5376      53657455 
 5377              	.LASF8:
 5378 00e0 756E7369 		.ascii	"unsigned int\000"
 5378      676E6564 
 5378      20696E74 
 5378      00
 5379              	.LASF64:
 5380 00ed 7363616E 		.ascii	"scanCounter\000"
 5380      436F756E 
 5380      74657200 
 5381              	.LASF103:
 5382 00f9 43617053 		.ascii	"CapSense_1_SsCSDSetModeSnsClockDivider\000"
 5382      656E7365 
 5382      5F315F53 
 5382      73435344 
 5382      5365744D 
 5383              	.LASF62:
 5384 0120 6877436C 		.ascii	"hwClock\000"
 5384      6F636B00 
 5385              	.LASF160:
 5386 0128 43617053 		.ascii	"CapSense_1_curSnsIOPtr\000"
 5386      656E7365 
 5386      5F315F63 
 5386      7572536E 
 5386      73494F50 
 5387              	.LASF118:
 5388 013f 696E7465 		.ascii	"interruptState\000"
 5388      72727570 
 5388      74537461 
 5388      746500
 5389              	.LASF142:
 5390 014e 43617053 		.ascii	"CapSense_1_CSDSetupWidgetExt\000"
 5390      656E7365 
 5390      5F315F43 
 5390      53445365 
 5390      74757057 
 5391              	.LASF130:
 5392 016b 43617053 		.ascii	"CapSense_1_CSDConnectSns\000"
 5392      656E7365 
 5392      5F315F43 
 5392      5344436F 
 5392      6E6E6563 
 5393              	.LASF134:
 5394 0184 70696E48 		.ascii	"pinHSIOMShift\000"
 5394      53494F4D 
 5394      53686966 
 5394      7400
 5395              	.LASF171:
 5396 0192 4379496E 		.ascii	"CyIntDisable\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 147


 5396      74446973 
 5396      61626C65 
 5396      00
 5397              	.LASF140:
 5398 019f 43617053 		.ascii	"CapSense_1_SsCSDElectrodeCheck\000"
 5398      656E7365 
 5398      5F315F53 
 5398      73435344 
 5398      456C6563 
 5399              	.LASF136:
 5400 01be 43617053 		.ascii	"CapSense_1_SsCSDConnectSensorExt\000"
 5400      656E7365 
 5400      5F315F53 
 5400      73435344 
 5400      436F6E6E 
 5401              	.LASF159:
 5402 01df 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 5402      656E7365 
 5402      5F315F73 
 5402      63616E46 
 5402      72657149 
 5403              	.LASF133:
 5404 01f8 70696E4D 		.ascii	"pinModeShift\000"
 5404      6F646553 
 5404      68696674 
 5404      00
 5405              	.LASF116:
 5406 0205 43617053 		.ascii	"CapSense_1_SsCSDInitialize\000"
 5406      656E7365 
 5406      5F315F53 
 5406      73435344 
 5406      496E6974 
 5407              	.LASF52:
 5408 0220 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 5408      656E7365 
 5408      5F315F52 
 5408      414D5F57 
 5408      445F4C49 
 5409              	.LASF138:
 5410 023e 73656E73 		.ascii	"sensorId\000"
 5410      6F724964 
 5410      00
 5411              	.LASF109:
 5412 0247 70747257 		.ascii	"ptrWdgt\000"
 5412      64677400 
 5413              	.LASF125:
 5414 024f 43617053 		.ascii	"CapSense_1_SsCSDTriggerScan\000"
 5414      656E7365 
 5414      5F315F53 
 5414      73435344 
 5414      54726967 
 5415              	.LASF12:
 5416 026b 666C6F61 		.ascii	"float\000"
 5416      7400
 5417              	.LASF86:
 5418 0271 73686966 		.ascii	"shift\000"
 5418      7400
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 148


 5419              	.LASF175:
 5420 0277 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5420      43313120 
 5420      352E342E 
 5420      31203230 
 5420      31363036 
 5421 02aa 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5421      20726576 
 5421      6973696F 
 5421      6E203233 
 5421      37373135 
 5422 02dd 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5422      67202D66 
 5422      66756E63 
 5422      74696F6E 
 5422      2D736563 
 5423              	.LASF121:
 5424 0309 736E7343 		.ascii	"snsClkSrc\000"
 5424      6C6B5372 
 5424      6300
 5425              	.LASF127:
 5426 0313 77617463 		.ascii	"watchdogCounter\000"
 5426      68646F67 
 5426      436F756E 
 5426      74657200 
 5427              	.LASF172:
 5428 0323 43794465 		.ascii	"CyDelayUs\000"
 5428      6C617955 
 5428      7300
 5429              	.LASF72:
 5430 032d 736E734C 		.ascii	"snsList\000"
 5430      69737400 
 5431              	.LASF7:
 5432 0335 6C6F6E67 		.ascii	"long long unsigned int\000"
 5432      206C6F6E 
 5432      6720756E 
 5432      7369676E 
 5432      65642069 
 5433              	.LASF74:
 5434 034c 736E7254 		.ascii	"snrTestSensorId\000"
 5434      65737453 
 5434      656E736F 
 5434      72496400 
 5435              	.LASF97:
 5436 035c 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 5436      4E6F6973 
 5436      65456E76 
 5436      6C7000
 5437              	.LASF148:
 5438 036b 63616C4D 		.ascii	"calMask\000"
 5438      61736B00 
 5439              	.LASF95:
 5440 0373 77646774 		.ascii	"wdgtType\000"
 5440      54797065 
 5440      00
 5441              	.LASF18:
 5442 037c 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 149


 5442      656E7365 
 5442      5F315F4C 
 5442      4F575F42 
 5442      534C4E5F 
 5443              	.LASF162:
 5444 0399 43617053 		.ascii	"CapSense_1_calibratedIdac\000"
 5444      656E7365 
 5444      5F315F63 
 5444      616C6962 
 5444      72617465 
 5445              	.LASF132:
 5446 03b3 6E657752 		.ascii	"newRegisterValue\000"
 5446      65676973 
 5446      74657256 
 5446      616C7565 
 5446      00
 5447              	.LASF104:
 5448 03c4 43617053 		.ascii	"CapSense_1_SsCSDSetFilterDelay\000"
 5448      656E7365 
 5448      5F315F53 
 5448      73435344 
 5448      53657446 
 5449              	.LASF70:
 5450 03e3 6D6F6443 		.ascii	"modCsdClk\000"
 5450      7364436C 
 5450      6B00
 5451              	.LASF173:
 5452 03ed 43617053 		.ascii	"CapSense_1_ISR_StartEx\000"
 5452      656E7365 
 5452      5F315F49 
 5452      53525F53 
 5452      74617274 
 5453              	.LASF167:
 5454 0404 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5454      74657243 
 5454      72697469 
 5454      63616C53 
 5454      65637469 
 5455              	.LASF152:
 5456 041b 74617267 		.ascii	"target\000"
 5456      657400
 5457              	.LASF149:
 5458 0422 72617744 		.ascii	"rawData0\000"
 5458      61746130 
 5458      00
 5459              	.LASF80:
 5460 042b 64725074 		.ascii	"drPtr\000"
 5460      7200
 5461              	.LASF43:
 5462 0431 73696750 		.ascii	"sigPFC\000"
 5462      464300
 5463              	.LASF176:
 5464 0438 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.c"
 5464      72617465 
 5464      645F536F 
 5464      75726365 
 5464      5C50536F 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 150


 5465 0469 00       		.ascii	"\000"
 5466              	.LASF30:
 5467 046a 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 5467      656E7365 
 5467      5F315F53 
 5467      454E5345 
 5467      5F4D4554 
 5468              	.LASF110:
 5469 0489 7261774C 		.ascii	"rawLevel\000"
 5469      6576656C 
 5469      00
 5470              	.LASF177:
 5471 0492 433A5C55 		.ascii	"C:\\Users\\michael.machate\\Desktop\\Cypress_Firstt"
 5471      73657273 
 5471      5C6D6963 
 5471      6861656C 
 5471      2E6D6163 
 5472 04c1 65737473 		.ascii	"ests\\FirstTest.cydsn\000"
 5472      5C466972 
 5472      73745465 
 5472      73742E63 
 5472      7964736E 
 5473              	.LASF38:
 5474 04d6 6C6F7742 		.ascii	"lowBslnRst\000"
 5474      736C6E52 
 5474      737400
 5475              	.LASF156:
 5476 04e1 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 5476      656E7365 
 5476      5F315F77 
 5476      69646765 
 5476      74496E64 
 5477              	.LASF174:
 5478 04f8 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 5478      656E7365 
 5478      5F315F53 
 5478      73537769 
 5478      74636853 
 5479              	.LASF166:
 5480 0517 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 5480      656E7365 
 5480      5F315F53 
 5480      73536574 
 5480      4D6F6443 
 5481              	.LASF94:
 5482 053a 746F7461 		.ascii	"totalNumSns\000"
 5482      6C4E756D 
 5482      536E7300 
 5483              	.LASF114:
 5484 0546 6D696E52 		.ascii	"minRawLevel\000"
 5484      61774C65 
 5484      76656C00 
 5485              	.LASF26:
 5486 0552 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 5486      5453454E 
 5486      53455F43 
 5486      53445F4E 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 151


 5486      4F495345 
 5487              	.LASF126:
 5488 0577 43617053 		.ascii	"CapSense_1_SsCSDCmodPrecharge\000"
 5488      656E7365 
 5488      5F315F53 
 5488      73435344 
 5488      436D6F64 
 5489              	.LASF34:
 5490 0595 6E6F6973 		.ascii	"noiseTh\000"
 5490      65546800 
 5491              	.LASF169:
 5492 059d 4379496E 		.ascii	"CyIntClearPending\000"
 5492      74436C65 
 5492      61725065 
 5492      6E64696E 
 5492      6700
 5493              	.LASF14:
 5494 05af 63686172 		.ascii	"char\000"
 5494      00
 5495              	.LASF168:
 5496 05b4 43794578 		.ascii	"CyExitCriticalSection\000"
 5496      69744372 
 5496      69746963 
 5496      616C5365 
 5496      6374696F 
 5497              	.LASF84:
 5498 05ca 6873696F 		.ascii	"hsiomShift\000"
 5498      6D536869 
 5498      667400
 5499              	.LASF10:
 5500 05d5 75696E74 		.ascii	"uint16\000"
 5500      313600
 5501              	.LASF122:
 5502 05dc 636F6E76 		.ascii	"conversionsNum\000"
 5502      65727369 
 5502      6F6E734E 
 5502      756D00
 5503              	.LASF32:
 5504 05eb 7265736F 		.ascii	"resolution\000"
 5504      6C757469 
 5504      6F6E00
 5505              	.LASF77:
 5506 05f6 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 5506      656E7365 
 5506      5F315F52 
 5506      414D5F53 
 5506      54525543 
 5507              	.LASF65:
 5508 060c 73746174 		.ascii	"status\000"
 5508      757300
 5509              	.LASF161:
 5510 0613 43617053 		.ascii	"CapSense_1_configCsd\000"
 5510      656E7365 
 5510      5F315F63 
 5510      6F6E6669 
 5510      67437364 
 5511              	.LASF57:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 152


 5512 0628 69646163 		.ascii	"idacComp\000"
 5512      436F6D70 
 5512      00
 5513              	.LASF153:
 5514 0631 43617053 		.ascii	"CapSense_1_eleCsdDisconnectFlag\000"
 5514      656E7365 
 5514      5F315F65 
 5514      6C654373 
 5514      64446973 
 5515              	.LASF79:
 5516 0651 70635074 		.ascii	"pcPtr\000"
 5516      7200
 5517              	.LASF6:
 5518 0657 6C6F6E67 		.ascii	"long long int\000"
 5518      206C6F6E 
 5518      6720696E 
 5518      7400
 5519              	.LASF17:
 5520 0665 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 5520      656E7365 
 5520      5F315F54 
 5520      48524553 
 5520      484F4C44 
 5521              	.LASF37:
 5522 067f 6F6E4465 		.ascii	"onDebounce\000"
 5522      626F756E 
 5522      636500
 5523              	.LASF123:
 5524 068a 43617053 		.ascii	"CapSense_1_SsCSDConfigClock\000"
 5524      656E7365 
 5524      5F315F53 
 5524      73435344 
 5524      436F6E66 
 5525              	.LASF112:
 5526 06a6 63616C69 		.ascii	"calibrateStatus\000"
 5526      62726174 
 5526      65537461 
 5526      74757300 
 5527              	.LASF71:
 5528 06b6 77646774 		.ascii	"wdgtList\000"
 5528      4C697374 
 5528      00
 5529              	.LASF88:
 5530 06bf 70747232 		.ascii	"ptr2SnsFlash\000"
 5530      536E7346 
 5530      6C617368 
 5530      00
 5531              	.LASF76:
 5532 06cc 736E7254 		.ascii	"snrTestRawCount\000"
 5532      65737452 
 5532      6177436F 
 5532      756E7400 
 5533              	.LASF108:
 5534 06dc 43617053 		.ascii	"CapSense_1_SsCSDRestoreIdacMode\000"
 5534      656E7365 
 5534      5F315F53 
 5534      73435344 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 153


 5534      52657374 
 5535              	.LASF35:
 5536 06fc 6E4E6F69 		.ascii	"nNoiseTh\000"
 5536      73655468 
 5536      00
 5537              	.LASF69:
 5538 0705 63736430 		.ascii	"csd0Config\000"
 5538      436F6E66 
 5538      696700
 5539              	.LASF101:
 5540 0710 6C6F6E67 		.ascii	"long double\000"
 5540      20646F75 
 5540      626C6500 
 5541              	.LASF45:
 5542 071c 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 5542      656E7365 
 5542      5F315F52 
 5542      414D5F57 
 5542      445F4241 
 5543              	.LASF78:
 5544 073a 6873696F 		.ascii	"hsiomPtr\000"
 5544      6D507472 
 5544      00
 5545              	.LASF11:
 5546 0743 75696E74 		.ascii	"uint32\000"
 5546      333200
 5547              	.LASF36:
 5548 074a 68797374 		.ascii	"hysteresis\000"
 5548      65726573 
 5548      697300
 5549              	.LASF91:
 5550 0755 70747232 		.ascii	"ptr2FltrHistory\000"
 5550      466C7472 
 5550      48697374 
 5550      6F727900 
 5551              	.LASF27:
 5552 0765 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 5552      656E7365 
 5552      5F315F55 
 5552      4E444546 
 5552      494E4544 
 5553              	.LASF59:
 5554 077c 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 5554      656E7365 
 5554      5F315F52 
 5554      414D5F53 
 5554      4E535F4C 
 5555              	.LASF83:
 5556 079b 6D61736B 		.ascii	"mask\000"
 5556      00
 5557              	.LASF115:
 5558 07a0 6D617852 		.ascii	"maxRawLevel\000"
 5558      61774C65 
 5558      76656C00 
 5559              	.LASF106:
 5560 07ac 73616D70 		.ascii	"sampleClkFreqHz\000"
 5560      6C65436C 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 154


 5560      6B467265 
 5560      71487A00 
 5561              	.LASF154:
 5562 07bc 43617053 		.ascii	"CapSense_1_dsRam\000"
 5562      656E7365 
 5562      5F315F64 
 5562      7352616D 
 5562      00
 5563              	.LASF31:
 5564 07cd 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 5564      656E7365 
 5564      5F315F53 
 5564      454E5345 
 5564      5F4D4554 
 5565              	.LASF16:
 5566 07eb 72656733 		.ascii	"reg32\000"
 5566      3200
 5567              	.LASF75:
 5568 07f1 736E7254 		.ascii	"snrTestScanCounter\000"
 5568      65737453 
 5568      63616E43 
 5568      6F756E74 
 5568      657200
 5569              	.LASF60:
 5570 0804 636F6E66 		.ascii	"configId\000"
 5570      69674964 
 5570      00
 5571              	.LASF90:
 5572 080d 70747232 		.ascii	"ptr2SnsRam\000"
 5572      536E7352 
 5572      616D00
 5573              	.LASF129:
 5574 0818 43617053 		.ascii	"CapSense_1_CSDScanExt\000"
 5574      656E7365 
 5574      5F315F43 
 5574      53445363 
 5574      616E4578 
 5575              	.LASF100:
 5576 082e 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 5576      656E7365 
 5576      5F315F46 
 5576      4C415348 
 5576      5F535452 
 5577              	.LASF68:
 5578 0846 736E7353 		.ascii	"snsStatus\000"
 5578      74617475 
 5578      7300
 5579              	.LASF41:
 5580 0850 736E7343 		.ascii	"snsClkSource\000"
 5580      6C6B536F 
 5580      75726365 
 5580      00
 5581              	.LASF111:
 5582 085d 72617744 		.ascii	"rawData\000"
 5582      61746100 
 5583              	.LASF44:
 5584 0865 73697A65 		.ascii	"sizetype\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 155


 5584      74797065 
 5584      00
 5585              	.LASF139:
 5586 086e 43617053 		.ascii	"CapSense_1_CSDDisconnectSns\000"
 5586      656E7365 
 5586      5F315F43 
 5586      53444469 
 5586      73636F6E 
 5587              	.LASF2:
 5588 088a 73686F72 		.ascii	"short int\000"
 5588      7420696E 
 5588      7400
 5589              	.LASF4:
 5590 0894 6C6F6E67 		.ascii	"long int\000"
 5590      20696E74 
 5590      00
 5591              	.LASF128:
 5592 089d 43617053 		.ascii	"CapSense_1_SsCSDStartSample\000"
 5592      656E7365 
 5592      5F315F53 
 5592      73435344 
 5592      53746172 
 5593              	.LASF66:
 5594 08b9 77646774 		.ascii	"wdgtEnable\000"
 5594      456E6162 
 5594      6C6500
 5595              	.LASF155:
 5596 08c4 43617053 		.ascii	"CapSense_1_dsFlash\000"
 5596      656E7365 
 5596      5F315F64 
 5596      73466C61 
 5596      736800
 5597              	.LASF55:
 5598 08d7 64696666 		.ascii	"diff\000"
 5598      00
 5599              	.LASF63:
 5600 08dc 74756E65 		.ascii	"tunerCmd\000"
 5600      72436D64 
 5600      00
 5601              	.LASF146:
 5602 08e5 70747249 		.ascii	"ptrIdac\000"
 5602      64616300 
 5603              	.LASF81:
 5604 08ed 70735074 		.ascii	"psPtr\000"
 5604      7200
 5605              	.LASF29:
 5606 08f3 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 5606      656E7365 
 5606      5F315F53 
 5606      454E5345 
 5606      5F4D4554 
 5607              	.LASF119:
 5608 0911 69646163 		.ascii	"idacARegValue\000"
 5608      41526567 
 5608      56616C75 
 5608      6500
 5609              	.LASF47:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 156


 5610 091f 62757474 		.ascii	"button0\000"
 5610      6F6E3000 
 5611              	.LASF48:
 5612 0927 62757474 		.ascii	"button1\000"
 5612      6F6E3100 
 5613              	.LASF49:
 5614 092f 62757474 		.ascii	"button2\000"
 5614      6F6E3200 
 5615              	.LASF50:
 5616 0937 62757474 		.ascii	"button3\000"
 5616      6F6E3300 
 5617              	.LASF51:
 5618 093f 62757474 		.ascii	"button4\000"
 5618      6F6E3400 
 5619              	.LASF151:
 5620 0947 43617053 		.ascii	"CapSense_1_CSDCalibrateWidget\000"
 5620      656E7365 
 5620      5F315F43 
 5620      53444361 
 5620      6C696272 
 5621              	.LASF96:
 5622 0965 6E756D43 		.ascii	"numCols\000"
 5622      6F6C7300 
 5623              	.LASF163:
 5624 096d 43617053 		.ascii	"CapSense_1_calibratedRawcount\000"
 5624      656E7365 
 5624      5F315F63 
 5624      616C6962 
 5624      72617465 
 5625              	.LASF143:
 5626 098b 43617053 		.ascii	"CapSense_1_SsCSDDisconnectSnsExt\000"
 5626      656E7365 
 5626      5F315F53 
 5626      73435344 
 5626      44697363 
 5627              	.LASF42:
 5628 09ac 66696E67 		.ascii	"fingerCap\000"
 5628      65724361 
 5628      7000
 5629              	.LASF67:
 5630 09b6 77646774 		.ascii	"wdgtStatus\000"
 5630      53746174 
 5630      757300
 5631              	.LASF141:
 5632 09c1 43617053 		.ascii	"CapSense_1_CSDSetupWidget\000"
 5632      656E7365 
 5632      5F315F43 
 5632      53445365 
 5632      74757057 
 5633              	.LASF157:
 5634 09db 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 5634      656E7365 
 5634      5F315F73 
 5634      656E736F 
 5634      72496E64 
 5635              	.LASF28:
 5636 09f2 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 157


 5636      656E7365 
 5636      5F315F53 
 5636      454E5345 
 5636      5F4D4554 
 5637              	.LASF85:
 5638 0a10 64725368 		.ascii	"drShift\000"
 5638      69667400 
 5639              	.LASF5:
 5640 0a18 6C6F6E67 		.ascii	"long unsigned int\000"
 5640      20756E73 
 5640      69676E65 
 5640      6420696E 
 5640      7400
 5641              	.LASF39:
 5642 0a2a 69646163 		.ascii	"idacMod\000"
 5642      4D6F6400 
 5643              	.LASF92:
 5644 0a32 70747232 		.ascii	"ptr2DebounceArr\000"
 5644      4465626F 
 5644      756E6365 
 5644      41727200 
 5645              	.LASF33:
 5646 0a42 66696E67 		.ascii	"fingerTh\000"
 5646      65725468 
 5646      00
 5647              	.LASF54:
 5648 0a4b 62736C6E 		.ascii	"bslnExt\000"
 5648      45787400 
 5649              	.LASF15:
 5650 0a53 63797374 		.ascii	"cystatus\000"
 5650      61747573 
 5650      00
 5651              	.LASF1:
 5652 0a5c 756E7369 		.ascii	"unsigned char\000"
 5652      676E6564 
 5652      20636861 
 5652      7200
 5653              	.LASF93:
 5654 0a6a 73746174 		.ascii	"staticConfig\000"
 5654      6963436F 
 5654      6E666967 
 5654      00
 5655              	.LASF144:
 5656 0a77 43617053 		.ascii	"CapSense_1_SsCSDCalibrateCheck\000"
 5656      656E7365 
 5656      5F315F53 
 5656      73435344 
 5656      43616C69 
 5657              	.LASF135:
 5658 0a96 43617053 		.ascii	"CapSense_1_CSDScan\000"
 5658      656E7365 
 5658      5F315F43 
 5658      53445363 
 5658      616E00
 5659              	.LASF89:
 5660 0aa9 70747232 		.ascii	"ptr2WdgtRam\000"
 5660      57646774 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 158


 5660      52616D00 
 5661              	.LASF82:
 5662 0ab5 6873696F 		.ascii	"hsiomMask\000"
 5662      6D4D6173 
 5662      6B00
 5663              	.LASF170:
 5664 0abf 4379496E 		.ascii	"CyIntEnable\000"
 5664      74456E61 
 5664      626C6500 
 5665              	.LASF113:
 5666 0acb 72617743 		.ascii	"rawCountsError\000"
 5666      6F756E74 
 5666      73457272 
 5666      6F7200
 5667              	.LASF40:
 5668 0ada 736E7343 		.ascii	"snsClk\000"
 5668      6C6B00
 5669              	.LASF124:
 5670 0ae1 43617053 		.ascii	"CapSense_1_SsCSDCalculateScanDuration\000"
 5670      656E7365 
 5670      5F315F53 
 5670      73435344 
 5670      43616C63 
 5671              	.LASF147:
 5672 0b07 69444143 		.ascii	"iDAC8Max\000"
 5672      384D6178 
 5672      00
 5673              	.LASF0:
 5674 0b10 7369676E 		.ascii	"signed char\000"
 5674      65642063 
 5674      68617200 
 5675              	.LASF53:
 5676 0b1c 62736C6E 		.ascii	"bsln\000"
 5676      00
 5677              	.LASF3:
 5678 0b21 73686F72 		.ascii	"short unsigned int\000"
 5678      7420756E 
 5678      7369676E 
 5678      65642069 
 5678      6E7400
 5679              	.LASF87:
 5680 0b34 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 5680      656E7365 
 5680      5F315F46 
 5680      4C415348 
 5680      5F494F5F 
 5681              	.LASF107:
 5682 0b4f 6E657752 		.ascii	"newRegValue\000"
 5682      65675661 
 5682      6C756500 
 5683              	.LASF164:
 5684 0b5b 43617053 		.ascii	"CapSense_1_SsClearCSDSensors\000"
 5684      656E7365 
 5684      5F315F53 
 5684      73436C65 
 5684      61724353 
 5685              	.LASF9:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 159


 5686 0b78 75696E74 		.ascii	"uint8\000"
 5686      3800
 5687              	.LASF13:
 5688 0b7e 646F7562 		.ascii	"double\000"
 5688      6C6500
 5689              	.LASF56:
 5690 0b85 6E656742 		.ascii	"negBslnRstCnt\000"
 5690      736C6E52 
 5690      7374436E 
 5690      7400
 5691              	.LASF58:
 5692 0b93 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 5692      656E7365 
 5692      5F315F52 
 5692      414D5F53 
 5692      4E535F53 
 5693              	.LASF19:
 5694 0bad 70617261 		.ascii	"param0\000"
 5694      6D3000
 5695              	.LASF20:
 5696 0bb4 70617261 		.ascii	"param1\000"
 5696      6D3100
 5697              	.LASF21:
 5698 0bbb 70617261 		.ascii	"param2\000"
 5698      6D3200
 5699              	.LASF22:
 5700 0bc2 70617261 		.ascii	"param3\000"
 5700      6D3300
 5701              	.LASF23:
 5702 0bc9 70617261 		.ascii	"param4\000"
 5702      6D3400
 5703              	.LASF24:
 5704 0bd0 70617261 		.ascii	"param5\000"
 5704      6D3500
 5705              	.LASF25:
 5706 0bd7 70617261 		.ascii	"param6\000"
 5706      6D3600
 5707              	.LASF102:
 5708 0bde 736E7343 		.ascii	"snsClkDivider\000"
 5708      6C6B4469 
 5708      76696465 
 5708      7200
 5709              	.LASF61:
 5710 0bec 64657669 		.ascii	"deviceId\000"
 5710      63654964 
 5710      00
 5711              	.LASF46:
 5712 0bf5 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 5712      656E7365 
 5712      5F315F52 
 5712      414D5F57 
 5712      445F4255 
 5713              	.LASF137:
 5714 0c15 77696467 		.ascii	"widgetId\000"
 5714      65744964 
 5714      00
 5715              	.LASF145:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccm0xciP.s 			page 160


 5716 0c1e 43617053 		.ascii	"CapSense_1_SsCSDCalibrateOneSensor\000"
 5716      656E7365 
 5716      5F315F53 
 5716      73435344 
 5716      43616C69 
 5717              	.LASF105:
 5718 0c41 43617053 		.ascii	"CapSense_1_SsCSDSetSingleIdacMode\000"
 5718      656E7365 
 5718      5F315F53 
 5718      73435344 
 5718      53657453 
 5719              	.LASF99:
 5720 0c63 77646774 		.ascii	"wdgtArray\000"
 5720      41727261 
 5720      7900
 5721              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
