ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsSetWidgetSenseClkSrc,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsSetWidgetSenseClkSrc, %function
  24              	CapSense_1_SsSetWidgetSenseClkSrc:
  25              	.LFB18:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \file CapSense_1_Sensing.c
   3:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \version 5.20
   4:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \see CapSense_1 v5.20 Datasheet
  10:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Structure.h"
  43:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_Adc.h"
  58:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (0u != CapSense_1_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #include "CapSense_1_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (0u != CapSense_1_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_1_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  85:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
 161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
 165:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_SENSE_METHOD_ENUM CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_immunity[CapSense_1_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     const uint8 CapSense_1_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint8 CapSense_1_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_RAM_SNS_STRUCT *CapSense_1_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_WD_STRUCT const *CapSense_1_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_IsBusy
 212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint32 CapSense_1_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetupWidget
 240:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDSetupWidgetExt(), CapSense_1_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 259:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_I_REP
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function does not start sensor scanning, the CapSense_1_Scan()
 264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if ((CapSense_1_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_Scan
 348:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function is called only after the CapSense_1_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_1_IsBusy()
 358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_Scan(void)
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXScan();
 384:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDScan();
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXScan();
 394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_SetupWidget() and CapSense_1_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  using the CapSense_1_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 430:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_ScanAllWidgets(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 9


 431:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CapSense_1_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (0u != (CapSense_1_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_ENABLE;
 462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (0u != (CapSense_1_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 scanStatus = CapSense_1_Scan();
 477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 487:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 10


 488:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitialize
 489:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling the CapSense_1_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1 Component at power-up. The CapSense_1_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (centerFreqTrim < CapSense_1_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_1_IMO_FREQUE
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (centerFreqTrim > (CapSense_1_IMO_FREQUENCY_OFFSET_MAX - CapSense_1_IMO_FREQUENCY_O
 534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 544:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 11


 545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****               ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 559:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_MANY_SENSE_MODES_EN)
 564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
 568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSX_E);
 570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ISX_E);
 572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 576:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (initStatus);
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 580:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 581:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetPinState
 583:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 585:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 586:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 587:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 589:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  associated with the ganged sensor is updated.
 590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 592:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 594:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 595:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 596:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 597:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 598:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function accepts the CapSense_1_SHIELD and
 599:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SENSOR states as an input only if there is at least
 600:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_1_TX_PIN
 601:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and CapSense_1_RX_PIN states as an input only if there is at least
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 12


 602:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSX widget in the project.
 603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling this function directly from the application layer is not
 605:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 606:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 607:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  automatically set the required pin states. They ignore changes
 608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  in the design made by the CapSense_1_SetPinState() function.
 609:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 610:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 611:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 612:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 613:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  sensor.
 614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration
 615:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  header file defined as CapSense_1_<WidgetName>_WDGT_ID.
 616:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param sensorElement
 618:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 619:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  its pin state.
 620:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 622:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 623:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_SNS<SensorNumber>_ID.
 624:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 625:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 627:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 628:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \endif
 629:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as:
 631:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_RX<RXNumber>_ID
 632:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_TX<TXNumber>_ID.
 633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 634:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param state
 635:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the state of the sensor to be set:
 636:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     1. CapSense_1_GROUND - The pin is connected to the ground.
 637:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     2. CapSense_1_HIGHZ - The drive mode of the pin is set to High-Z
 638:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        Analog.
 639:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     3. CapSense_1_SHIELD - The shield signal is routed to the pin
 640:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 641:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     4. CapSense_1_SENSOR - The pin is connected to the scanning bus
 642:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method is enabled).
 643:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     5. CapSense_1_TX_PIN - The Tx signal is routed to the sensor
 644:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     6. CapSense_1_RX_PIN - The pin is connected to the scanning bus
 646:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 647:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdIndex;
 653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8  interruptState;
 654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr;
 655:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 13


 659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check the ganged sns flag */
 662:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig & Ca
 663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr = CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 665:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr += sensorElement;
 666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinId];
 667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2
 672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = 1u;
 673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsF
 676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 678:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Reset HSIOM and PC registers */
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 687:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (state)
 689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_GROUND:
 691:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_HIGHZ:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSOR:
 706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Enable sensor */
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDConnectSns(ioPtr);
 708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 709:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 case CapSense_1_SHIELD:
 712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM
 715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 14


 716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     break;
 717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 719:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_TX_PIN:
 723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_GPIO_STRGDRV <<
 726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 728:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_RX_PIN:
 730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK <
 733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wrong state */
 739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 741:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
 743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 745:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 746:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDDisableMode
 749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSD mode.
 753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  4. Disable Shield Electrodes.
 760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void)
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 765:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 770:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 15


 773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)))
 774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Disconnect IDACA and IDACB */
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))) */
 781:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsCSDElectrodeCheck();
 784:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
 789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_1_CSH_TO_AMUXBUS_B_MASK << CapSense_1_CSH_HS
 790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, newRegValue);
 791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 793:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT))
 796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableShieldElectrodes();
 797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)) */
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 800:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 801:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 802:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableCSXMode
 806:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSX mode.
 810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void)
 818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 820:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 825:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 16


 830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_CSXElectrodeCheck();
 833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 834:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 836:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableISXMode
 839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables ISX mode.
 843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void)
 851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 853:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 858:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
 863:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXElectrodeCheck();
 866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_DigPrt2_Stop();
 867:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_USES_PORT_3)
 868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DigPrt3_Stop();
 869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* CapSense_1_USES_PORT_3 */
 870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 871:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 873:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 874:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSwitchSensingMode
 875:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 876:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 877:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 878:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanned.
 880:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 881:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 882:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 883:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 884:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSD mode.
 886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 17


 887:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 888:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 889:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 890:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSX mode.
 891:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 892:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param mode
 893:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the scan mode:
 894:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSD_E
 895:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSX_E
 896:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_ISX_E
 897:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_BIST_E
 898:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_UNDEFINED_E
 899:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 900:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 901:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ENUM mode)
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == CapSense_1_currentSenseMethod)
 907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDDisableMode();
 910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 911:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == CapSense_1_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableCSXMode();
 916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == CapSense_1_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableISXMode();
 922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == CapSense_1_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistDisableMode();
 928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
 933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Release ADC resources */
 934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_AdcReleaseResources();
 935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
 936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 937:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Enable the specified mode */
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == mode)
 940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDInitialize();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 18


 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == mode)
 948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXInitialize();
 952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSX_E;
 953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 954:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == mode)
 956:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 957:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXInitialize();
 960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_ISX_E;
 961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == mode)
 964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistInitialize();
 967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_BIST_E;
 968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 976:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 978:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetIOsInDefaultState
 980:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 981:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 982:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 983:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all electrodes into a default state.
 984:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 985:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 986:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 987:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 988:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - Strong drive.
 989:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 990:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the ADC channels into a default state:
 992:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 993:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - HiZ-Analog.
 994:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 995:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 996:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly from the application
 997:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  layer.
 998:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetIOsInDefaultState(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 19


1001:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
1003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
1004:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 regValue;
1005:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes */
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_1_TOTAL_ELECTRODES; loopIndex++)
1008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 1. Disconnect HSIOM.
1011:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 2. Set strong DM.
1012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 3. Set pin state to logic 0.
1013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1022:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1026:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get next electrode */
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
1029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1030:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ADC_EN)
1032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ClearAdcChannels();
1033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     
1035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ISX_EN)
1036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXSetDefaultDigital();
1037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1039:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
1041:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1042:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsReleaseResources()
1043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1044:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1045:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1046:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1047:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  default state.
1048:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1049:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1050:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The function performs following tasks:
1051:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1052:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1053:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     Cmod for CSD mode)
1054:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1055:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1056:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
1057:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 20


1058:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Resources released successfully.
1059:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1060:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1062:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsReleaseResources(void)
1063:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1065:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
1067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1070:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
1072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableCSXMode();
1075:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1076:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableISXMode();
1079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1080:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableMode();
1083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
1084:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_BistDisableMode();
1087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1088:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) &&  \
1091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsSetIOsInDefaultState();
1093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1094:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE != CapSense_1_CSD_SHIELD_EN) &&  \
1095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION)) */
1096:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1100:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
1102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1103:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return busyStatus;
1105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1108:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1109:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsPostAllWidgetsScan
1111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 21


1115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is the function used by the CapSense_1 ISR to implement multiple widget
1118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanning.
1119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Should not be used by the application layer.
1120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsPostAllWidgetsScan(void)
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Increment widget index
1126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Check if all the widgets are scanned
1127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     */
1129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (1u != CapSense_1_TOTAL_WIDGETS)
1130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus postScanStatus;
1131:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_widgetIndex++;
1135:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             postScanStatus = CapSense_1_SetupWidget((uint32)CapSense_1_widgetIndex);
1137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
1144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_Scan();
1146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (CapSense_1_ENABLE == CapSense_1_CSD_EN))
1151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widget
1153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable the CSD block */
1155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
1156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1158:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                            (CapSense_1_ENABLE == CapSense_1_CSD_EN)) */
1159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update scan Counter */
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.scanCounter++;
1162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1164:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure */
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1169:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 22


1172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1173:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1174:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsIsrInitialize
1185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  proper working of the Component.
1194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1195:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param address
1196:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1197:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1198:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsIsrInitialize(cyisraddress address)
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1203:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetModClkClockDivider
1207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param modClk
1219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The divider value for the modulator clock.
1220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetModClkClockDivider(uint32 modClk)
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Stop modulator clock */
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
1228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CapSense_1_MODCLK_CMD_DIV_SHIFT)|
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 23


1229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_MODCLK_CMD_DISABLE_MASK));
1230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense modClk.
1233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) & CapSense_1_MODCLK_CMD_ENABLE_MASK))
1240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1242:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
1247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_MODCLK_CMD_PA_DIV_SHIFT) |
1248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   CapSense_1_MODCLK_CMD_ENABLE_MASK));
1249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1252:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) &
1255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(~CapSense_1_ModClk__ENABLE_MASK));
1256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Update ModClk clock divider.
1259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_ModClk__DI
1262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= (modClk - 1u);
1263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, newRegValue);
1264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set bit to enable ModClk clock. */
1266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) |
1268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ModClk__ENABLE_MASK);
1269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetSnsClockDivider
1275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the sense clock.
1280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 24


1286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1287:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1289:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1290:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetSnsClockDivider(uint32 snsClk)
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1292:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1294:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense clock.
1297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_SENSE_PERIOD_PTR);
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
1304:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Stop sense clock clock   */
1307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SnsClk__DIV_ID <<
1309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CapSense_1_SNSCLK_CMD_DIV_SHIFT)|
1310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SNSCLK_CMD_DISABLE_MASK));
1311:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Set divider value for sense clock.
1314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * to dividing by 1.
1316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) & CapSense_1_SNSCLK_CMD_ENABLE_MASK))
1321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1324:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_SHIFT
1328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_SNSCLK_CMD_PA_DIV_SHIFT) 
1329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       CapSense_1_SNSCLK_CMD_ENABLE_MASK));
1330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
1331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
1332:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
1336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(~(uint32)CapSense_1_SnsClk__ENABLE_MASK));
1337:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Update snsClk clock divider.
1340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_SnsClk
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 25


1343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (snsClk - 1u);
1344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, newRegValue);
1345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1346:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
1349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_SnsClk__ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetClockDividers
1357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  modClk The divider value for the modulator clock.
1372:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1373:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetModClkClockDivider(modClk);
1378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Sns clock */
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetSnsClockDivider(snsClk);
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ANYMODE_AUTOCAL)
1385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateWidget
1387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the
1392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget prior to calibration.
1393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function performs exactly the same tasks as
1396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_CalibrateAllWidgets, but only for a specified widget.
1397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 26


1400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1403:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
1413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  A macro for the widget ID can be found in the
1415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1 Configuration header file defined as
1416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_<WidgetName>_WDGT_ID.
1417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the specified widget calibration:
1420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateWidget(uint32 widgetId)
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_TOTAL_WIDGETS <= widgetId)
1433:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1435:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /*
1438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              */
1441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (0u != CapSense_1_GET_WIDGET_EN_STATUS(widgetId))
1443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 else
1447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif  /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1453:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Exit from the loop because of a fail */
1455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
1456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 27


1457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN)
1462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSX_E ==
1463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSX widget */
1466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                        CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN) */
1469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)
1471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1474:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSD widget */
1475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RA
1476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1477:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN) */
1478:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RAWCOUNT_C
1482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXCalibrateWidget(widgetId, CapSense_1_ISX_RAWCOUNT_CAL_LEVEL);
1490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
1492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
1494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              /* Update CRC */
1496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN)
1497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_DsUpdateWidgetCrc(widgetId);
1498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN) */
1499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (0u);
1501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateAllWidgets
1508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1511:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  prior to calibration.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 28


1514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1526:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endcond
1527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the calibration process:
1534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateAllWidgets(void)
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1543:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             calibrateStatus |= CapSense_1_CalibrateWidget(wdgtIndex);
1547:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1551:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
1552:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1554:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
1555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsAutoTune
1557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense_1 operation.
1561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the following:
1564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    2*5*R*Cp.
1567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the operation:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 29


1571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_SsAutoTune(void)
1576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cp = 0uL;
1581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1582:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 cpRow = 0uL;
1583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cpWidget[CapSense_1_TOTAL_WIDGETS];
1586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
1587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Configure common config variables */
1590:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_1_CSD_SNSCLK_R_CONST;
1591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.vRef = CapSense_1_CSD_VREF_MV;
1592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_1_CSD_IDAC_GAIN_VALUE_NA;
1593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif ((CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) && (CapSense_1_DISABLE == CY_PSO
1599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained */
1600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1603:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Initialize CSD mode */
1612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDInitialize();
1613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN) */
1614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #1:
1617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - performing the first calibration at fixed settings
1618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sensor Cp
1619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sense clock frequency based on Cp
1620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sense clock for all the widgets */
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1626:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 30


1628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = CapSense_1_CALIBRATION_RESOLUTION;
1633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_1_CAL
1637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
1645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_CAL_LEVEL);
1648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get IDAC */
1657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calculate achived calibration level */
1660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcountR
1661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Find correct sense clock value */
1664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cpRow)
1667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1670:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
1672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
1675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1680:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << Ca
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 31


1685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 {
1686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_1_dsRam.modCsdClk;
1687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 }
1688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #else
1689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #endif
1691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1694:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1700:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calculate achived calibration level */
1702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcount * CapSen
1703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1704:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find correct sense clock value */
1706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cp)
1709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1712:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
1714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1722:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_1_FL
1727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                              ptrWdgt->snsClk = CapSense_1_dsRam.modCsdClk;
1729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
1731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif
1733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1734:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (cpRow > cp)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 32


1742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1744:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Non-CSD widget */
1752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1756:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #2:
1759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with new sense clock frequency
1760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting resolution
1761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1762:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune resolution for all the widgets */
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1771:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1774:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1777:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set parasitic capacitance for columns */
1779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1780:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1787:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1794:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Set parasitic capacitance for rows */
1796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1797:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get IDAC */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 33


1799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get finger capacitance */
1805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Init pointer to sigPFC */
1808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1809:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find resolution */
1811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1814:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #3:
1817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - selecting a widget clock source if AUTO
1818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - updating sensitivity
1820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1821:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sensitivity for all the widgets */
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1832:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
1837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
1838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
1839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return autoTuneStatus;
1843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1844:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) */
1845:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1846:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1847:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
1848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) ||\
1850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
1851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSinking
1853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 34


1856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1863:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void)
1865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1867:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sinking Mode */
1869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM2_PTR) & ~CapSense_1_IDAC_TRIM2_MOD_SNK_MASK;
1870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1871:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK) ;
1872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1873:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1874:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1875:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM2_COMP_SNK_MASK;
1876:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1877:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1878:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1880:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1881:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM2_PTR, trimValue);
1882:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1883:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1884:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
1885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1887:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1888:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) || \
1889:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
1890:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1891:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSourcing
1892:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1893:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1894:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
1895:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1896:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1897:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1898:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1899:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1900:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1901:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void)
1904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1906:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM1_PTR) & ~CapSense_1_IDAC_TRIM1_MOD_SRC_MASK;
1909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK);
1911:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 35


1913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM1_COMP_SRC_MASK;
1915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1918:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM1_PTR, trimValue);
1921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
1924:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1925:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsTrimIdacs
1928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1937:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  source mode based on sink/source mode configuration.
1938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void)
1942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
1947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_
1953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1954:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
1955:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1957:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeImoFreq
1960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the IMO frequency.
1964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  trims are contained in the CapSense_1_immunity[value] array for each
1968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  frequency channel.
1969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 36


1970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param value The frequency channel ID.
1971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeImoFreq(uint32 value)
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1978:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1979:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeClkFreq
1980:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1981:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1982:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1983:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1984:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1985:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1986:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1987:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1988:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1989:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1990:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param chId
1991:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The frequency channel ID.
1992:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1993:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1994:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeClkFreq(uint32 chId)
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1996:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
1997:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset1 = 0u;
1998:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset2 = 0u;
1999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2000:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2004:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 snsClkSrc;
2009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2011:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((0u != CapSense_1_TOTAL_CSD_WIDGETS) || \
2013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_1_TOTAL_CS
2014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_1_dsFlash.wdgtArray[CapSense
2015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)ptrFlas
2016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch(CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex]))
2019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
2022:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get sensor clock divider value */
2023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
2024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsdClk;
2025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2026:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 37


2027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2030:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2038:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2039:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2041:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F1;
2042:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F2;
2043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2044:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2045:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2046:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2047:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Get sense clk source */
2048:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2049:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2050:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2051:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2052:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2053:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2054:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2055:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2056:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2057:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2058:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2059:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2060:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2062:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2063:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2065:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset1 <<= 1u;
2068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset2 <<= 1u;
2069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2070:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2075:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2076:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
2080:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 38


2084:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2088:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2094:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2096:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)
2098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM
2099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2105:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2106:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2107:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider >>= 1;
2110:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (snsClkDivider == 0u)
2111:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2112:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = 1u;
2113:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2114:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2116:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2117:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2118:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2119:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2121:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2122:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSD_WIDGETS) */
2126:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSX_WIDGETS)
2128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
2130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsxClk;
2131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F1;
2135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F2;
2136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2137:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 39


2141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2155:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2159:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSX_WIDGETS) */
2161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CYASSERT(0);
2164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2)))
2173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitializeSourceSenseClk
2175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2177:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2178:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2179:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  for all CSD widgets.
2183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsInitializeSourceSenseClk(void)
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2187:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
2188:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
2191:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2Wdgt
2193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2194:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 40


2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2199:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2204:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2205:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_IS
2206:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2207:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2208:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2209:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
2210:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
2211:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
2212:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2215:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
2216:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_ISX_EN)) && \
2217:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2))) */
2218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2221:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2222:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetSenseClkSrc
2223:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2224:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2230:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget.
2236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2237:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
2239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
  27              		.loc 1 2239 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2243:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 41


2249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2251:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             snsClkDivider = CapSense_1_SsCSDGetColSnsClkDivider(wdgtIndex);
2252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrW
2255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                              CapSen
2256:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /*
2260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * average PRS frequency through the argument.
2262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     */
2263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->r
2264:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
2268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2269:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * average PRS frequency through the argument.
2270:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
2271:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resol
2272:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2273:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2274:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2275:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2276:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2277:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2278:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2280:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
  33              		.loc 1 2280 0
  34 0000 0523     		movs	r3, #5
  35 0002 0B73     		strb	r3, [r1, #12]
2281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2283:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
2284:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
2285:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_SsCSDGetRowSnsClkDivider(wdgtIndex);
2288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /*
2294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * average PRS frequency through the argument.
2296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             */
2297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)pt
2298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
2302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 42


2303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * average PRS frequency through the argument.
2304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
2305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdg
2306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = 0u;
2307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
2309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrScale = 0u;
2311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LF
2313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
  36              		.loc 1 2315 0
  37              		@ sp needed
  38 0004 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE18:
  41              		.size	CapSense_1_SsSetWidgetSenseClkSrc, .-CapSense_1_SsSetWidgetSenseClkSrc
  42 0006 C046     		.section	.text.CapSense_1_SsCSDDisableMode,"ax",%progbits
  43              		.align	2
  44              		.code	16
  45              		.thumb_func
  46              		.type	CapSense_1_SsCSDDisableMode, %function
  47              	CapSense_1_SsCSDDisableMode:
  48              	.LFB7:
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
  49              		.loc 1 763 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53 0000 10B5     		push	{r4, lr}
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 4, -8
  56              		.cfi_offset 14, -4
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
  57              		.loc 1 767 0
  58 0002 064A     		ldr	r2, .L3
  59 0004 1368     		ldr	r3, [r2]
  60              	.LVL1:
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
  61              		.loc 1 768 0
  62 0006 F021     		movs	r1, #240
  63 0008 8B43     		bics	r3, r1
  64              	.LVL2:
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  65              		.loc 1 769 0
  66 000a 1360     		str	r3, [r2]
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
  67              		.loc 1 775 0
  68 000c 044A     		ldr	r2, .L3+4
  69 000e 1368     		ldr	r3, [r2]
  70              	.LVL3:
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
  71              		.loc 1 776 0
  72 0010 EF39     		subs	r1, r1, #239
  73 0012 8B43     		bics	r3, r1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 43


  74              	.LVL4:
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
  75              		.loc 1 777 0
  76 0014 1360     		str	r3, [r2]
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  77              		.loc 1 783 0
  78 0016 FFF7FEFF 		bl	CapSense_1_SsCSDElectrodeCheck
  79              	.LVL5:
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  80              		.loc 1 799 0
  81              		@ sp needed
  82 001a 10BD     		pop	{r4, pc}
  83              	.L4:
  84              		.align	2
  85              	.L3:
  86 001c 00040240 		.word	1073873920
  87 0020 A8020B40 		.word	1074463400
  88              		.cfi_endproc
  89              	.LFE7:
  90              		.size	CapSense_1_SsCSDDisableMode, .-CapSense_1_SsCSDDisableMode
  91              		.section	.text.CapSense_1_IsBusy,"ax",%progbits
  92              		.align	2
  93              		.global	CapSense_1_IsBusy
  94              		.code	16
  95              		.thumb_func
  96              		.type	CapSense_1_IsBusy, %function
  97              	CapSense_1_IsBusy:
  98              	.LFB1:
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
  99              		.loc 1 234 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 104              		.loc 1 235 0
 105 0000 024B     		ldr	r3, .L6
 106 0002 DB68     		ldr	r3, [r3, #12]
 107 0004 8020     		movs	r0, #128
 108 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 109              		.loc 1 236 0
 110              		@ sp needed
 111 0008 7047     		bx	lr
 112              	.L7:
 113 000a C046     		.align	2
 114              	.L6:
 115 000c 00000000 		.word	CapSense_1_dsRam
 116              		.cfi_endproc
 117              	.LFE1:
 118              		.size	CapSense_1_IsBusy, .-CapSense_1_IsBusy
 119              		.section	.text.CapSense_1_SetupWidget,"ax",%progbits
 120              		.align	2
 121              		.global	CapSense_1_SetupWidget
 122              		.code	16
 123              		.thumb_func
 124              		.type	CapSense_1_SetupWidget, %function
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 44


 125              	CapSense_1_SetupWidget:
 126              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 127              		.loc 1 286 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              	.LVL6:
 132 0000 10B5     		push	{r4, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 4, -8
 135              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 136              		.loc 1 289 0
 137 0002 0E4B     		ldr	r3, .L14
 138 0004 DB68     		ldr	r3, [r3, #12]
 139 0006 DB03     		lsls	r3, r3, #15
 140 0008 0DD4     		bmi	.L11
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 141              		.loc 1 299 0
 142 000a 0028     		cmp	r0, #0
 143 000c 0DD1     		bne	.L12
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 144              		.loc 1 300 0 discriminator 1
 145 000e 4309     		lsrs	r3, r0, #5
 146 0010 0433     		adds	r3, r3, #4
 147 0012 9B00     		lsls	r3, r3, #2
 148 0014 094A     		ldr	r2, .L14
 149 0016 9B58     		ldr	r3, [r3, r2]
 150 0018 1F22     		movs	r2, #31
 151 001a 0240     		ands	r2, r0
 152 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 153              		.loc 1 299 0 discriminator 1
 154 001e DB07     		lsls	r3, r3, #31
 155 0020 05D4     		bmi	.L13
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 156              		.loc 1 307 0
 157 0022 0124     		movs	r4, #1
 158 0024 04E0     		b	.L9
 159              	.L11:
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 160              		.loc 1 292 0
 161 0026 1124     		movs	r4, #17
 162 0028 02E0     		b	.L9
 163              	.L12:
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 164              		.loc 1 307 0
 165 002a 0124     		movs	r4, #1
 166 002c 00E0     		b	.L9
 167              	.L13:
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 168              		.loc 1 303 0
 169 002e 0024     		movs	r4, #0
 170              	.L9:
 171              	.LVL7:
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 45


 172              		.loc 1 314 0
 173 0030 002C     		cmp	r4, #0
 174 0032 01D1     		bne	.L10
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 175              		.loc 1 327 0
 176 0034 FFF7FEFF 		bl	CapSense_1_CSDSetupWidget
 177              	.LVL8:
 178              	.L10:
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 179              		.loc 1 343 0
 180 0038 2000     		movs	r0, r4
 181              		@ sp needed
 182              	.LVL9:
 183 003a 10BD     		pop	{r4, pc}
 184              	.L15:
 185              		.align	2
 186              	.L14:
 187 003c 00000000 		.word	CapSense_1_dsRam
 188              		.cfi_endproc
 189              	.LFE2:
 190              		.size	CapSense_1_SetupWidget, .-CapSense_1_SetupWidget
 191              		.section	.text.CapSense_1_Scan,"ax",%progbits
 192              		.align	2
 193              		.global	CapSense_1_Scan
 194              		.code	16
 195              		.thumb_func
 196              		.type	CapSense_1_Scan, %function
 197              	CapSense_1_Scan:
 198              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 199              		.loc 1 369 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 10B5     		push	{r4, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 4, -8
 206              		.cfi_offset 14, -4
 207              	.LVL10:
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 208              		.loc 1 372 0
 209 0002 084B     		ldr	r3, .L22
 210 0004 DB68     		ldr	r3, [r3, #12]
 211 0006 DB03     		lsls	r3, r3, #15
 212 0008 07D4     		bmi	.L19
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 213              		.loc 1 379 0
 214 000a 074B     		ldr	r3, .L22+4
 215 000c 1B78     		ldrb	r3, [r3]
 216 000e 012B     		cmp	r3, #1
 217 0010 05D1     		bne	.L21
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 218              		.loc 1 388 0
 219 0012 FFF7FEFF 		bl	CapSense_1_CSDScan
 220              	.LVL11:
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 221              		.loc 1 370 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 46


 222 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 223              		.loc 1 389 0
 224 0018 03E0     		b	.L17
 225              	.L19:
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 226              		.loc 1 375 0
 227 001a 1120     		movs	r0, #17
 228 001c 01E0     		b	.L17
 229              	.L21:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 230              		.loc 1 397 0
 231 001e 0120     		movs	r0, #1
 232 0020 4042     		rsbs	r0, r0, #0
 233              	.L17:
 234              	.LVL12:
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 235              		.loc 1 402 0
 236              		@ sp needed
 237 0022 10BD     		pop	{r4, pc}
 238              	.L23:
 239              		.align	2
 240              	.L22:
 241 0024 00000000 		.word	CapSense_1_dsRam
 242 0028 00000000 		.word	.LANCHOR0
 243              		.cfi_endproc
 244              	.LFE3:
 245              		.size	CapSense_1_Scan, .-CapSense_1_Scan
 246              		.section	.text.CapSense_1_ScanAllWidgets,"ax",%progbits
 247              		.align	2
 248              		.global	CapSense_1_ScanAllWidgets
 249              		.code	16
 250              		.thumb_func
 251              		.type	CapSense_1_ScanAllWidgets, %function
 252              	CapSense_1_ScanAllWidgets:
 253              	.LFB4:
 431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 254              		.loc 1 431 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 10B5     		push	{r4, lr}
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 4, -8
 261              		.cfi_offset 14, -4
 262              	.LVL13:
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 263              		.loc 1 436 0
 264 0002 0C4B     		ldr	r3, .L30
 265 0004 DB68     		ldr	r3, [r3, #12]
 266 0006 1B06     		lsls	r3, r3, #24
 267 0008 12D4     		bmi	.L29
 268 000a 0024     		movs	r4, #0
 269 000c 0120     		movs	r0, #1
 270 000e 4042     		rsbs	r0, r0, #0
 271 0010 0BE0     		b	.L26
 272              	.LVL14:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 47


 273              	.L28:
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 274              		.loc 1 452 0
 275 0012 2000     		movs	r0, r4
 276              	.LVL15:
 277 0014 FFF7FEFF 		bl	CapSense_1_SetupWidget
 278              	.LVL16:
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 279              		.loc 1 454 0
 280 0018 0028     		cmp	r0, #0
 281 001a 05D1     		bne	.L27
 471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 282              		.loc 1 471 0
 283 001c 0022     		movs	r2, #0
 284 001e 064B     		ldr	r3, .L30+4
 285 0020 5A70     		strb	r2, [r3, #1]
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 286              		.loc 1 476 0
 287 0022 FFF7FEFF 		bl	CapSense_1_Scan
 288              	.LVL17:
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 289              		.loc 1 478 0
 290 0026 04E0     		b	.L25
 291              	.L27:
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 292              		.loc 1 449 0
 293 0028 0134     		adds	r4, r4, #1
 294              	.LVL18:
 295              	.L26:
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 296              		.loc 1 447 0 discriminator 1
 297 002a 002C     		cmp	r4, #0
 298 002c F1D0     		beq	.L28
 299 002e 00E0     		b	.L25
 300              	.LVL19:
 301              	.L29:
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 302              		.loc 1 439 0
 303 0030 1120     		movs	r0, #17
 304              	.LVL20:
 305              	.L25:
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 306              		.loc 1 484 0
 307              		@ sp needed
 308 0032 10BD     		pop	{r4, pc}
 309              	.L31:
 310              		.align	2
 311              	.L30:
 312 0034 00000000 		.word	CapSense_1_dsRam
 313 0038 00000000 		.word	.LANCHOR0
 314              		.cfi_endproc
 315              	.LFE4:
 316              		.size	CapSense_1_ScanAllWidgets, .-CapSense_1_ScanAllWidgets
 317              		.section	.text.CapSense_1_SetPinState,"ax",%progbits
 318              		.align	2
 319              		.global	CapSense_1_SetPinState
 320              		.code	16
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 48


 321              		.thumb_func
 322              		.type	CapSense_1_SetPinState, %function
 323              	CapSense_1_SetPinState:
 324              	.LFB6:
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 325              		.loc 1 650 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              	.LVL21:
 330 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 331              		.cfi_def_cfa_offset 24
 332              		.cfi_offset 3, -24
 333              		.cfi_offset 4, -20
 334              		.cfi_offset 5, -16
 335              		.cfi_offset 6, -12
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 1600     		movs	r6, r2
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 339              		.loc 1 675 0
 340 0004 C300     		lsls	r3, r0, #3
 341 0006 181A     		subs	r0, r3, r0
 342              	.LVL22:
 343 0008 8300     		lsls	r3, r0, #2
 344 000a 244A     		ldr	r2, .L39
 345              	.LVL23:
 346 000c 9C58     		ldr	r4, [r3, r2]
 347 000e CB00     		lsls	r3, r1, #3
 348 0010 591A     		subs	r1, r3, r1
 349              	.LVL24:
 350 0012 8B00     		lsls	r3, r1, #2
 351 0014 E418     		adds	r4, r4, r3
 352              	.LVL25:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 353              		.loc 1 680 0
 354 0016 0025     		movs	r5, #0
 355 0018 3CE0     		b	.L33
 356              	.LVL26:
 357              	.L38:
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 358              		.loc 1 683 0
 359 001a FFF7FEFF 		bl	CyEnterCriticalSection
 360              	.LVL27:
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 361              		.loc 1 684 0
 362 001e 2168     		ldr	r1, [r4]
 363 0020 0B68     		ldr	r3, [r1]
 364 0022 277E     		ldrb	r7, [r4, #24]
 365 0024 0F22     		movs	r2, #15
 366 0026 BA40     		lsls	r2, r2, r7
 367 0028 9343     		bics	r3, r2
 368 002a 0B60     		str	r3, [r1]
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 369              		.loc 1 685 0
 370 002c 6168     		ldr	r1, [r4, #4]
 371 002e 0B68     		ldr	r3, [r1]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 49


 372 0030 A77E     		ldrb	r7, [r4, #26]
 373 0032 0722     		movs	r2, #7
 374 0034 BA40     		lsls	r2, r2, r7
 375 0036 9343     		bics	r3, r2
 376 0038 0B60     		str	r3, [r1]
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 377              		.loc 1 686 0
 378 003a FFF7FEFF 		bl	CyExitCriticalSection
 379              	.LVL28:
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 380              		.loc 1 688 0
 381 003e 012E     		cmp	r6, #1
 382 0040 17D0     		beq	.L35
 383 0042 002E     		cmp	r6, #0
 384 0044 02D0     		beq	.L36
 385 0046 032E     		cmp	r6, #3
 386 0048 1FD0     		beq	.L37
 387 004a 21E0     		b	.L34
 388              	.L36:
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 389              		.loc 1 692 0
 390 004c FFF7FEFF 		bl	CyEnterCriticalSection
 391              	.LVL29:
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 392              		.loc 1 693 0
 393 0050 6268     		ldr	r2, [r4, #4]
 394 0052 1168     		ldr	r1, [r2]
 395 0054 A77E     		ldrb	r7, [r4, #26]
 396 0056 0623     		movs	r3, #6
 397 0058 BB40     		lsls	r3, r3, r7
 398 005a 0B43     		orrs	r3, r1
 399 005c 1360     		str	r3, [r2]
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 400              		.loc 1 694 0
 401 005e A168     		ldr	r1, [r4, #8]
 402 0060 0B68     		ldr	r3, [r1]
 403 0062 677E     		ldrb	r7, [r4, #25]
 404 0064 0122     		movs	r2, #1
 405 0066 BA40     		lsls	r2, r2, r7
 406 0068 9343     		bics	r3, r2
 407 006a 0B60     		str	r3, [r1]
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 408              		.loc 1 695 0
 409 006c FFF7FEFF 		bl	CyExitCriticalSection
 410              	.LVL30:
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 411              		.loc 1 696 0
 412 0070 0EE0     		b	.L34
 413              	.L35:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 414              		.loc 1 699 0
 415 0072 FFF7FEFF 		bl	CyEnterCriticalSection
 416              	.LVL31:
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 417              		.loc 1 700 0
 418 0076 A168     		ldr	r1, [r4, #8]
 419 0078 0B68     		ldr	r3, [r1]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 50


 420 007a 677E     		ldrb	r7, [r4, #25]
 421 007c 0122     		movs	r2, #1
 422 007e BA40     		lsls	r2, r2, r7
 423 0080 9343     		bics	r3, r2
 424 0082 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 425              		.loc 1 701 0
 426 0084 FFF7FEFF 		bl	CyExitCriticalSection
 427              	.LVL32:
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 428              		.loc 1 702 0
 429 0088 02E0     		b	.L34
 430              	.L37:
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 431              		.loc 1 707 0
 432 008a 2000     		movs	r0, r4
 433 008c FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 434              	.LVL33:
 435              	.L34:
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 436              		.loc 1 742 0 discriminator 2
 437 0090 1C34     		adds	r4, r4, #28
 438              	.LVL34:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 439              		.loc 1 680 0 discriminator 2
 440 0092 0135     		adds	r5, r5, #1
 441              	.LVL35:
 442              	.L33:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 443              		.loc 1 680 0 is_stmt 0 discriminator 1
 444 0094 002D     		cmp	r5, #0
 445 0096 C0D0     		beq	.L38
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 446              		.loc 1 744 0 is_stmt 1
 447              		@ sp needed
 448              	.LVL36:
 449              	.LVL37:
 450              	.LVL38:
 451 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 452              	.L40:
 453 009a C046     		.align	2
 454              	.L39:
 455 009c 00000000 		.word	CapSense_1_dsFlash
 456              		.cfi_endproc
 457              	.LFE6:
 458              		.size	CapSense_1_SetPinState, .-CapSense_1_SetPinState
 459              		.section	.text.CapSense_1_SsSwitchSensingMode,"ax",%progbits
 460              		.align	2
 461              		.global	CapSense_1_SsSwitchSensingMode
 462              		.code	16
 463              		.thumb_func
 464              		.type	CapSense_1_SsSwitchSensingMode, %function
 465              	CapSense_1_SsSwitchSensingMode:
 466              	.LFB8:
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 467              		.loc 1 902 0
 468              		.cfi_startproc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 51


 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              	.LVL39:
 472 0000 10B5     		push	{r4, lr}
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 4, -8
 475              		.cfi_offset 14, -4
 476 0002 0400     		movs	r4, r0
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 477              		.loc 1 903 0
 478 0004 0C4B     		ldr	r3, .L45
 479 0006 1B78     		ldrb	r3, [r3]
 480 0008 8342     		cmp	r3, r0
 481 000a 14D0     		beq	.L41
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 482              		.loc 1 906 0
 483 000c 012B     		cmp	r3, #1
 484 000e 01D1     		bne	.L43
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 485              		.loc 1 909 0
 486 0010 FFF7FEFF 		bl	CapSense_1_SsCSDDisableMode
 487              	.LVL40:
 488              	.L43:
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 489              		.loc 1 939 0
 490 0014 012C     		cmp	r4, #1
 491 0016 05D1     		bne	.L44
 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 492              		.loc 1 943 0
 493 0018 FFF7FEFF 		bl	CapSense_1_SsCSDInitialize
 494              	.LVL41:
 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 495              		.loc 1 944 0
 496 001c 0122     		movs	r2, #1
 497 001e 064B     		ldr	r3, .L45
 498 0020 1A70     		strb	r2, [r3]
 499 0022 08E0     		b	.L41
 500              	.L44:
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 501              		.loc 1 947 0
 502 0024 022C     		cmp	r4, #2
 503 0026 06D0     		beq	.L41
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 504              		.loc 1 955 0
 505 0028 042C     		cmp	r4, #4
 506 002a 04D0     		beq	.L41
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 507              		.loc 1 963 0
 508 002c 032C     		cmp	r4, #3
 509 002e 02D0     		beq	.L41
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 510              		.loc 1 972 0
 511 0030 0022     		movs	r2, #0
 512 0032 014B     		ldr	r3, .L45
 513 0034 1A70     		strb	r2, [r3]
 514              	.L41:
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 52


 515              		.loc 1 975 0
 516              		@ sp needed
 517 0036 10BD     		pop	{r4, pc}
 518              	.L46:
 519              		.align	2
 520              	.L45:
 521 0038 00000000 		.word	.LANCHOR0
 522              		.cfi_endproc
 523              	.LFE8:
 524              		.size	CapSense_1_SsSwitchSensingMode, .-CapSense_1_SsSwitchSensingMode
 525              		.section	.text.CapSense_1_SsSetIOsInDefaultState,"ax",%progbits
 526              		.align	2
 527              		.global	CapSense_1_SsSetIOsInDefaultState
 528              		.code	16
 529              		.thumb_func
 530              		.type	CapSense_1_SsSetIOsInDefaultState, %function
 531              	CapSense_1_SsSetIOsInDefaultState:
 532              	.LFB9:
1001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
 533              		.loc 1 1001 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537 0000 30B5     		push	{r4, r5, lr}
 538              		.cfi_def_cfa_offset 12
 539              		.cfi_offset 4, -12
 540              		.cfi_offset 5, -8
 541              		.cfi_offset 14, -4
 542              	.LVL42:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 543              		.loc 1 1007 0
 544 0002 0021     		movs	r1, #0
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
 545              		.loc 1 1002 0
 546 0004 0D4B     		ldr	r3, .L50
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 547              		.loc 1 1007 0
 548 0006 16E0     		b	.L48
 549              	.LVL43:
 550              	.L49:
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 551              		.loc 1 1014 0 discriminator 3
 552 0008 1868     		ldr	r0, [r3]
 553 000a 0268     		ldr	r2, [r0]
 554              	.LVL44:
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 555              		.loc 1 1015 0 discriminator 3
 556 000c 1C69     		ldr	r4, [r3, #16]
 557 000e A243     		bics	r2, r4
 558              	.LVL45:
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 559              		.loc 1 1016 0 discriminator 3
 560 0010 0260     		str	r2, [r0]
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
 561              		.loc 1 1018 0 discriminator 3
 562 0012 5C68     		ldr	r4, [r3, #4]
 563 0014 2268     		ldr	r2, [r4]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 53


 564              	.LVL46:
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
 565              		.loc 1 1019 0 discriminator 3
 566 0016 9D7E     		ldrb	r5, [r3, #26]
 567 0018 0720     		movs	r0, #7
 568 001a A840     		lsls	r0, r0, r5
 569 001c 8243     		bics	r2, r0
 570              	.LVL47:
 571 001e 1000     		movs	r0, r2
 572              	.LVL48:
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 573              		.loc 1 1020 0 discriminator 3
 574 0020 0622     		movs	r2, #6
 575 0022 AA40     		lsls	r2, r2, r5
 576 0024 0243     		orrs	r2, r0
 577              	.LVL49:
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 578              		.loc 1 1021 0 discriminator 3
 579 0026 2260     		str	r2, [r4]
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
 580              		.loc 1 1023 0 discriminator 3
 581 0028 9868     		ldr	r0, [r3, #8]
 582 002a 0268     		ldr	r2, [r0]
 583              	.LVL50:
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 584              		.loc 1 1024 0 discriminator 3
 585 002c 5C69     		ldr	r4, [r3, #20]
 586 002e A243     		bics	r2, r4
 587              	.LVL51:
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 588              		.loc 1 1025 0 discriminator 3
 589 0030 0260     		str	r2, [r0]
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 590              		.loc 1 1028 0 discriminator 3
 591 0032 1C33     		adds	r3, r3, #28
 592              	.LVL52:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 593              		.loc 1 1007 0 discriminator 3
 594 0034 0131     		adds	r1, r1, #1
 595              	.LVL53:
 596              	.L48:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 597              		.loc 1 1007 0 is_stmt 0 discriminator 1
 598 0036 0029     		cmp	r1, #0
 599 0038 E6D0     		beq	.L49
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 600              		.loc 1 1038 0 is_stmt 1
 601              		@ sp needed
 602 003a 30BD     		pop	{r4, r5, pc}
 603              	.L51:
 604              		.align	2
 605              	.L50:
 606 003c 00000000 		.word	CapSense_1_ioList
 607              		.cfi_endproc
 608              	.LFE9:
 609              		.size	CapSense_1_SsSetIOsInDefaultState, .-CapSense_1_SsSetIOsInDefaultState
 610              		.section	.text.CapSense_1_SsPostAllWidgetsScan,"ax",%progbits
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 54


 611              		.align	2
 612              		.global	CapSense_1_SsPostAllWidgetsScan
 613              		.code	16
 614              		.thumb_func
 615              		.type	CapSense_1_SsPostAllWidgetsScan, %function
 616              	CapSense_1_SsPostAllWidgetsScan:
 617              	.LFB10:
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 618              		.loc 1 1123 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              		@ link register save eliminated.
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 623              		.loc 1 1180 0
 624              		@ sp needed
 625 0000 7047     		bx	lr
 626              		.cfi_endproc
 627              	.LFE10:
 628              		.size	CapSense_1_SsPostAllWidgetsScan, .-CapSense_1_SsPostAllWidgetsScan
 629 0002 C046     		.section	.text.CapSense_1_SsIsrInitialize,"ax",%progbits
 630              		.align	2
 631              		.global	CapSense_1_SsIsrInitialize
 632              		.code	16
 633              		.thumb_func
 634              		.type	CapSense_1_SsIsrInitialize, %function
 635              	CapSense_1_SsIsrInitialize:
 636              	.LFB11:
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
 637              		.loc 1 1200 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 0
 640              		@ frame_needed = 0, uses_anonymous_args = 0
 641              	.LVL54:
 642 0000 10B5     		push	{r4, lr}
 643              		.cfi_def_cfa_offset 8
 644              		.cfi_offset 4, -8
 645              		.cfi_offset 14, -4
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 646              		.loc 1 1201 0
 647 0002 FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 648              	.LVL55:
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 649              		.loc 1 1202 0
 650              		@ sp needed
 651 0006 10BD     		pop	{r4, pc}
 652              		.cfi_endproc
 653              	.LFE11:
 654              		.size	CapSense_1_SsIsrInitialize, .-CapSense_1_SsIsrInitialize
 655              		.section	.text.CapSense_1_SsSetModClkClockDivider,"ax",%progbits
 656              		.align	2
 657              		.global	CapSense_1_SsSetModClkClockDivider
 658              		.code	16
 659              		.thumb_func
 660              		.type	CapSense_1_SsSetModClkClockDivider, %function
 661              	CapSense_1_SsSetModClkClockDivider:
 662              	.LFB12:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 55


1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
 663              		.loc 1 1223 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              		@ link register save eliminated.
 668              	.LVL56:
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
 669              		.loc 1 1226 0
 670 0000 074A     		ldr	r2, .L56
 671 0002 084B     		ldr	r3, .L56+4
 672 0004 1A60     		str	r2, [r3]
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 673              		.loc 1 1236 0
 674 0006 0138     		subs	r0, r0, #1
 675              	.LVL57:
 676 0008 0002     		lsls	r0, r0, #8
 677              	.LVL58:
 678 000a 074B     		ldr	r3, .L56+8
 679 000c 1860     		str	r0, [r3]
 680              	.L55:
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 681              		.loc 1 1239 0 discriminator 1
 682 000e 054B     		ldr	r3, .L56+4
 683 0010 1B68     		ldr	r3, [r3]
 684 0012 002B     		cmp	r3, #0
 685 0014 FBDB     		blt	.L55
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
 686              		.loc 1 1245 0
 687 0016 054A     		ldr	r2, .L56+12
 688 0018 024B     		ldr	r3, .L56+4
 689 001a 1A60     		str	r2, [r3]
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 690              		.loc 1 1270 0
 691              		@ sp needed
 692 001c 7047     		bx	lr
 693              	.L57:
 694 001e C046     		.align	2
 695              	.L56:
 696 0020 40000040 		.word	1073741888
 697 0024 00000140 		.word	1073807360
 698 0028 00030140 		.word	1073808128
 699 002c 40FF0080 		.word	-2147418304
 700              		.cfi_endproc
 701              	.LFE12:
 702              		.size	CapSense_1_SsSetModClkClockDivider, .-CapSense_1_SsSetModClkClockDivider
 703              		.section	.text.CapSense_1_SsSetSnsClockDivider,"ax",%progbits
 704              		.align	2
 705              		.global	CapSense_1_SsSetSnsClockDivider
 706              		.code	16
 707              		.thumb_func
 708              		.type	CapSense_1_SsSetSnsClockDivider, %function
 709              	CapSense_1_SsSetSnsClockDivider:
 710              	.LFB13:
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 711              		.loc 1 1291 0
 712              		.cfi_startproc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 56


 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 716              	.LVL59:
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
 717              		.loc 1 1300 0
 718 0000 034A     		ldr	r2, .L59
 719 0002 1368     		ldr	r3, [r2]
 720              	.LVL60:
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
 721              		.loc 1 1301 0
 722 0004 1B0B     		lsrs	r3, r3, #12
 723              	.LVL61:
 724 0006 1B03     		lsls	r3, r3, #12
 725              	.LVL62:
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
 726              		.loc 1 1302 0
 727 0008 0138     		subs	r0, r0, #1
 728              	.LVL63:
 729 000a 1843     		orrs	r0, r3
 730              	.LVL64:
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 731              		.loc 1 1303 0
 732 000c 1060     		str	r0, [r2]
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 733              		.loc 1 1352 0
 734              		@ sp needed
 735 000e 7047     		bx	lr
 736              	.L60:
 737              		.align	2
 738              	.L59:
 739 0010 00020B40 		.word	1074463232
 740              		.cfi_endproc
 741              	.LFE13:
 742              		.size	CapSense_1_SsSetSnsClockDivider, .-CapSense_1_SsSetSnsClockDivider
 743              		.section	.text.CapSense_1_SsSetClockDividers,"ax",%progbits
 744              		.align	2
 745              		.global	CapSense_1_SsSetClockDividers
 746              		.code	16
 747              		.thumb_func
 748              		.type	CapSense_1_SsSetClockDividers, %function
 749              	CapSense_1_SsSetClockDividers:
 750              	.LFB14:
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
 751              		.loc 1 1375 0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              	.LVL65:
 756 0000 10B5     		push	{r4, lr}
 757              		.cfi_def_cfa_offset 8
 758              		.cfi_offset 4, -8
 759              		.cfi_offset 14, -4
 760 0002 0400     		movs	r4, r0
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 761              		.loc 1 1377 0
 762 0004 0800     		movs	r0, r1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 57


 763              	.LVL66:
 764 0006 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 765              	.LVL67:
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 766              		.loc 1 1380 0
 767 000a 2000     		movs	r0, r4
 768 000c FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 769              	.LVL68:
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 770              		.loc 1 1381 0
 771              		@ sp needed
 772              	.LVL69:
 773 0010 10BD     		pop	{r4, pc}
 774              		.cfi_endproc
 775              	.LFE14:
 776              		.size	CapSense_1_SsSetClockDividers, .-CapSense_1_SsSetClockDividers
 777 0012 C046     		.section	.text.CapSense_1_CalibrateWidget,"ax",%progbits
 778              		.align	2
 779              		.global	CapSense_1_CalibrateWidget
 780              		.code	16
 781              		.thumb_func
 782              		.type	CapSense_1_CalibrateWidget, %function
 783              	CapSense_1_CalibrateWidget:
 784              	.LFB15:
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 785              		.loc 1 1427 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              	.LVL70:
 790 0000 10B5     		push	{r4, lr}
 791              		.cfi_def_cfa_offset 8
 792              		.cfi_offset 4, -8
 793              		.cfi_offset 14, -4
 794 0002 031E     		subs	r3, r0, #0
 795              	.LVL71:
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 796              		.loc 1 1432 0
 797 0004 01D1     		bne	.L65
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 798              		.loc 1 1428 0
 799 0006 0020     		movs	r0, #0
 800              	.LVL72:
 801 0008 00E0     		b	.L63
 802              	.LVL73:
 803              	.L65:
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 804              		.loc 1 1434 0
 805 000a 0120     		movs	r0, #1
 806              	.LVL74:
 807              	.L63:
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 808              		.loc 1 1452 0
 809 000c 0028     		cmp	r0, #0
 810 000e 03D1     		bne	.L64
1481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 811              		.loc 1 1481 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 58


 812 0010 5521     		movs	r1, #85
 813 0012 1800     		movs	r0, r3
 814              	.LVL75:
 815 0014 FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 816              	.LVL76:
 817              	.L64:
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 818              		.loc 1 1503 0
 819              		@ sp needed
 820 0018 10BD     		pop	{r4, pc}
 821              		.cfi_endproc
 822              	.LFE15:
 823              		.size	CapSense_1_CalibrateWidget, .-CapSense_1_CalibrateWidget
 824 001a C046     		.section	.text.CapSense_1_CalibrateAllWidgets,"ax",%progbits
 825              		.align	2
 826              		.global	CapSense_1_CalibrateAllWidgets
 827              		.code	16
 828              		.thumb_func
 829              		.type	CapSense_1_CalibrateAllWidgets, %function
 830              	CapSense_1_CalibrateAllWidgets:
 831              	.LFB16:
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 832              		.loc 1 1540 0
 833              		.cfi_startproc
 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 0, uses_anonymous_args = 0
 836 0000 70B5     		push	{r4, r5, r6, lr}
 837              		.cfi_def_cfa_offset 16
 838              		.cfi_offset 4, -16
 839              		.cfi_offset 5, -12
 840              		.cfi_offset 6, -8
 841              		.cfi_offset 14, -4
 842              	.LVL77:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 843              		.loc 1 1544 0
 844 0002 0024     		movs	r4, #0
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
 845              		.loc 1 1541 0
 846 0004 0025     		movs	r5, #0
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 847              		.loc 1 1544 0
 848 0006 04E0     		b	.L67
 849              	.LVL78:
 850              	.L68:
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 851              		.loc 1 1546 0 discriminator 3
 852 0008 2000     		movs	r0, r4
 853 000a FFF7FEFF 		bl	CapSense_1_CalibrateWidget
 854              	.LVL79:
 855 000e 0543     		orrs	r5, r0
 856              	.LVL80:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 857              		.loc 1 1544 0 discriminator 3
 858 0010 0134     		adds	r4, r4, #1
 859              	.LVL81:
 860              	.L67:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 59


 861              		.loc 1 1544 0 is_stmt 0 discriminator 1
 862 0012 002C     		cmp	r4, #0
 863 0014 F8D0     		beq	.L68
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
 864              		.loc 1 1550 0 is_stmt 1
 865 0016 2800     		movs	r0, r5
 866              		@ sp needed
 867              	.LVL82:
 868              	.LVL83:
 869 0018 70BD     		pop	{r4, r5, r6, pc}
 870              		.cfi_endproc
 871              	.LFE16:
 872              		.size	CapSense_1_CalibrateAllWidgets, .-CapSense_1_CalibrateAllWidgets
 873 001a C046     		.section	.text.CapSense_1_SsInitializeSourceSenseClk,"ax",%progbits
 874              		.align	2
 875              		.global	CapSense_1_SsInitializeSourceSenseClk
 876              		.code	16
 877              		.thumb_func
 878              		.type	CapSense_1_SsInitializeSourceSenseClk, %function
 879              	CapSense_1_SsInitializeSourceSenseClk:
 880              	.LFB17:
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 881              		.loc 1 2186 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885 0000 10B5     		push	{r4, lr}
 886              		.cfi_def_cfa_offset 8
 887              		.cfi_offset 4, -8
 888              		.cfi_offset 14, -4
 889              	.LVL84:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 890              		.loc 1 2190 0
 891 0002 0024     		movs	r4, #0
 892 0004 09E0     		b	.L70
 893              	.LVL85:
 894              	.L71:
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 895              		.loc 1 2192 0
 896 0006 E200     		lsls	r2, r4, #3
 897 0008 121B     		subs	r2, r2, r4
 898 000a 9300     		lsls	r3, r2, #2
 899 000c 044A     		ldr	r2, .L72
 900 000e D318     		adds	r3, r2, r3
 901 0010 5968     		ldr	r1, [r3, #4]
 902              	.LVL86:
2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 903              		.loc 1 2198 0
 904 0012 2000     		movs	r0, r4
 905 0014 FFF7FEFF 		bl	CapSense_1_SsSetWidgetSenseClkSrc
 906              	.LVL87:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 907              		.loc 1 2190 0
 908 0018 0134     		adds	r4, r4, #1
 909              	.LVL88:
 910              	.L70:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 60


 911              		.loc 1 2190 0 is_stmt 0 discriminator 1
 912 001a 002C     		cmp	r4, #0
 913 001c F3D0     		beq	.L71
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
 914              		.loc 1 2213 0 is_stmt 1
 915              		@ sp needed
 916              	.LVL89:
 917 001e 10BD     		pop	{r4, pc}
 918              	.L73:
 919              		.align	2
 920              	.L72:
 921 0020 00000000 		.word	CapSense_1_dsFlash
 922              		.cfi_endproc
 923              	.LFE17:
 924              		.size	CapSense_1_SsInitializeSourceSenseClk, .-CapSense_1_SsInitializeSourceSenseClk
 925              		.section	.text.CapSense_1_SsInitialize,"ax",%progbits
 926              		.align	2
 927              		.global	CapSense_1_SsInitialize
 928              		.code	16
 929              		.thumb_func
 930              		.type	CapSense_1_SsInitialize, %function
 931              	CapSense_1_SsInitialize:
 932              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 933              		.loc 1 517 0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937 0000 10B5     		push	{r4, lr}
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 4, -8
 940              		.cfi_offset 14, -4
 941              	.LVL90:
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 942              		.loc 1 556 0
 943 0002 FFF7FEFF 		bl	CapSense_1_SsInitializeSourceSenseClk
 944              	.LVL91:
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 945              		.loc 1 561 0
 946 0006 FFF7FEFF 		bl	CapSense_1_SsSetIOsInDefaultState
 947              	.LVL92:
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 948              		.loc 1 567 0
 949 000a 0120     		movs	r0, #1
 950 000c FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
 951              	.LVL93:
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 952              		.loc 1 578 0
 953 0010 0020     		movs	r0, #0
 954              		@ sp needed
 955 0012 10BD     		pop	{r4, pc}
 956              		.cfi_endproc
 957              	.LFE5:
 958              		.size	CapSense_1_SsInitialize, .-CapSense_1_SsInitialize
 959              		.section	.text.CapSense_1_SsClearCSDSensors,"ax",%progbits
 960              		.align	2
 961              		.global	CapSense_1_SsClearCSDSensors
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 61


 962              		.code	16
 963              		.thumb_func
 964              		.type	CapSense_1_SsClearCSDSensors, %function
 965              	CapSense_1_SsClearCSDSensors:
 966              	.LFB19:
2316:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2317:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2319:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetTxClkSrc
2322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
2337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2340:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
2342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 conversionsNum;
2344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2345:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)
2348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 snsClkDivider = CapSense_1_SsCSXGetTxClkDivider(wdgtIndex);
2351:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2352:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2353:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2354:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2355:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2356:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Unused function argument */
2357:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)wdgtIndex;
2358:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2359:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2360:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_CSX_TX_CLK_SOURCE;
2361:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2362:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Unused function argument */
2363:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex;
2364:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) */
2365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2366:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
2367:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 62


2368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)) */
2369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
2378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2379:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrSize
2380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2385:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2386:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2387:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  requirements:
2388:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2389:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2390:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2391:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2392:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2393:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2394:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2395:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  resolution The widget resolution.
2396:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2397:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2398:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2400:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2401:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 lfsrSize = 0u;
2403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Find LFSR value */
2405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((CapSense_1_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (CapSense_1_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC4_PERIOD)))
2408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC4;
2410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC3_PERIOD)))
2414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC3;
2416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC2_PERIOD)))
2420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC2;
2422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 63


2425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC1_PERIOD)))
2426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC1;
2428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2429:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (lfsrSize);
2435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2437:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2439:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrScale
2440:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2441:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2442:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2443:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2444:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2445:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2446:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2447:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2448:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  period.
2449:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2450:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  range +/-10%.
2452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2454:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2455:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2456:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2458:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2459:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2460:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2461:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2462:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2463:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2464:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2465:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2466:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2467:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2468:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2470:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2471:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2472:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
2473:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2475:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrScale;
2479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrRange;
2480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrDither;
2481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 64


2482:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     switch(lfsrSize)
2484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC1:
2486:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC1_RANGE;
2488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2490:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC2:
2491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC2_RANGE;
2493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2494:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC3:
2496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC3_RANGE;
2498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2499:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC4:
2501:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC4_RANGE;
2503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2504:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2505:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = 0u;
2508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
2515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((lfsrSize != CapSense_1_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2520:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(lfsrDither < CapSense_1_LFSR_DITHER_PERCENTAGE)
2522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale++;
2524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrDither <<=1uL;
2525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if(lfsrDither > CapSense_1_LFSR_DITHER_PERCENTAGE)
2528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale--;
2530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2536:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return ((uint8)lfsrScale);
2538:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 65


2539:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2540:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****           ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))) */
2547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsClearCSDSensors
2552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  an inactive state.
2558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  connection is Ground or Hi-Z.
2564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsClearCSDSensors(void)
2567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 967              		.loc 1 2567 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971 0000 70B5     		push	{r4, r5, r6, lr}
 972              		.cfi_def_cfa_offset 16
 973              		.cfi_offset 4, -16
 974              		.cfi_offset 5, -12
 975              		.cfi_offset 6, -8
 976              		.cfi_offset 14, -4
 977              	.LVL94:
2568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
2569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsIndex;
2570:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 pinIndex;
2573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2574:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Declare ptr to sensor IO structure */
2577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2579:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_IO_STRUCT const *curSnsIOPtr;
2582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
 978              		.loc 1 2583 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 66


 979 0002 0025     		movs	r5, #0
 980 0004 16E0     		b	.L76
 981              	.LVL95:
 982              	.L79:
2584:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
2586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2588:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
 983              		.loc 1 2588 0
 984 0006 EB00     		lsls	r3, r5, #3
 985 0008 5B1B     		subs	r3, r3, r5
 986 000a 9A00     		lsls	r2, r3, #2
 987 000c 0B4B     		ldr	r3, .L80
 988 000e D658     		ldr	r6, [r2, r3]
 989              	.LVL96:
2589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                 CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlas
2590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Go through all the sensors in widget */
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_1_dsFlash.wdgtArray[wdgtIndex].total
 990              		.loc 1 2592 0
 991 0010 0024     		movs	r4, #0
 992 0012 06E0     		b	.L77
 993              	.LVL97:
 994              	.L78:
2593:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Check ganged sns flag */
2596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[wdgtIndex].
2597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                  CapSense_1_GANGED_SNS_MASK))
2598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get sns pointer */
2600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
2601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                CapSense_1_dsFlash.wdgtArray[wdgtInd
2602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                snsIndex;
2603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             {
2606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinI
2608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Disconnect dedicated pin */
2610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 CapSense_1_CSDDisconnectSns(curDedicatedSnsIOPtr);
2611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             }
2612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2614:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Disable sensor */
2616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable sensor */
2620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 995              		.loc 1 2620 0 discriminator 3
 996 0014 E300     		lsls	r3, r4, #3
 997 0016 1B1B     		subs	r3, r3, r4
 998 0018 9800     		lsls	r0, r3, #2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 67


 999 001a 3018     		adds	r0, r6, r0
 1000 001c FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1001              	.LVL98:
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1002              		.loc 1 2592 0 discriminator 3
 1003 0020 0134     		adds	r4, r4, #1
 1004              	.LVL99:
 1005              	.L77:
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1006              		.loc 1 2592 0 is_stmt 0 discriminator 1
 1007 0022 EA00     		lsls	r2, r5, #3
 1008 0024 521B     		subs	r2, r2, r5
 1009 0026 9300     		lsls	r3, r2, #2
 1010 0028 044A     		ldr	r2, .L80
 1011 002a D318     		adds	r3, r2, r3
 1012 002c 1B7E     		ldrb	r3, [r3, #24]
 1013 002e 9C42     		cmp	r4, r3
 1014 0030 F0D3     		bcc	.L78
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1015              		.loc 1 2583 0 is_stmt 1 discriminator 2
 1016 0032 0135     		adds	r5, r5, #1
 1017              	.LVL100:
 1018              	.L76:
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1019              		.loc 1 2583 0 is_stmt 0 discriminator 1
 1020 0034 002D     		cmp	r5, #0
 1021 0036 E6D0     		beq	.L79
2621:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1022              		.loc 1 2625 0 is_stmt 1
 1023              		@ sp needed
 1024              	.LVL101:
 1025 0038 70BD     		pop	{r4, r5, r6, pc}
 1026              	.L81:
 1027 003a C046     		.align	2
 1028              	.L80:
 1029 003c 00000000 		.word	CapSense_1_dsFlash
 1030              		.cfi_endproc
 1031              	.LFE19:
 1032              		.size	CapSense_1_SsClearCSDSensors, .-CapSense_1_SsClearCSDSensors
 1033              		.section	.text.CapSense_1_SsCSDGetColSnsClkDivider,"ax",%progbits
 1034              		.align	2
 1035              		.global	CapSense_1_SsCSDGetColSnsClkDivider
 1036              		.code	16
 1037              		.thumb_func
 1038              		.type	CapSense_1_SsCSDGetColSnsClkDivider, %function
 1039              	CapSense_1_SsCSDGetColSnsClkDivider:
 1040              	.LFB20:
2626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDGetColSnsClkDivider
2629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2630:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 68


2632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2633:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
2641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
2644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2645:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2648:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 CapSense_1_SsCSDGetColSnsClkDivider(uint32 widgetId)
2649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1041              		.loc 1 2649 0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              		@ link register save eliminated.
 1046              	.LVL102:
2650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 retVal;
2651:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 1047              		.loc 1 2656 0
 1048 0000 C300     		lsls	r3, r0, #3
 1049 0002 181A     		subs	r0, r3, r0
 1050              	.LVL103:
 1051 0004 8300     		lsls	r3, r0, #2
 1052 0006 024A     		ldr	r2, .L83
 1053 0008 D318     		adds	r3, r2, r3
 1054 000a 5B68     		ldr	r3, [r3, #4]
 1055              	.LVL104:
2657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1056              		.loc 1 2659 0
 1057 000c 5889     		ldrh	r0, [r3, #10]
 1058              	.LVL105:
2660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return (retVal);
2667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1059              		.loc 1 2667 0
 1060              		@ sp needed
 1061 000e 7047     		bx	lr
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 69


 1062              	.L84:
 1063              		.align	2
 1064              	.L83:
 1065 0010 00000000 		.word	CapSense_1_dsFlash
 1066              		.cfi_endproc
 1067              	.LFE20:
 1068              		.size	CapSense_1_SsCSDGetColSnsClkDivider, .-CapSense_1_SsCSDGetColSnsClkDivider
 1069              		.section	.text.CapSense_1_SsCSDSetColSnsClkDivider,"ax",%progbits
 1070              		.align	2
 1071              		.global	CapSense_1_SsCSDSetColSnsClkDivider
 1072              		.code	16
 1073              		.thumb_func
 1074              		.type	CapSense_1_SsCSDSetColSnsClkDivider, %function
 1075              	CapSense_1_SsCSDSetColSnsClkDivider:
 1076              	.LFB21:
2668:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2669:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDSetColSnsClkDivider
2672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value for one-dimension widgets
2676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value based on the Component
2680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param
2684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widgetId Specifies the ID of the widget.
2685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return The Sense Clock Divider value for one-dimension widgets
2687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *        and the Column Sense Clock divider value for two-dimension widgets.
2688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsCSDSetColSnsClkDivider(uint32 widgetId, uint32 dividerVal)
2691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1077              		.loc 1 2691 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081              		@ link register save eliminated.
 1082              	.LVL106:
2692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2695:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 1083              		.loc 1 2696 0
 1084 0000 C300     		lsls	r3, r0, #3
 1085 0002 181A     		subs	r0, r3, r0
 1086              	.LVL107:
 1087 0004 8300     		lsls	r3, r0, #2
 1088 0006 024A     		ldr	r2, .L86
 1089 0008 D318     		adds	r3, r2, r3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 70


 1090 000a 5B68     		ldr	r3, [r3, #4]
 1091              	.LVL108:
2697:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2698:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt->snsClk = (uint16)dividerVal;
 1092              		.loc 1 2699 0
 1093 000c 5981     		strh	r1, [r3, #10]
2700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsRam.snsCsdClk = (uint16)dividerVal;
2702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1094              		.loc 1 2705 0
 1095              		@ sp needed
 1096 000e 7047     		bx	lr
 1097              	.L87:
 1098              		.align	2
 1099              	.L86:
 1100 0010 00000000 		.word	CapSense_1_dsFlash
 1101              		.cfi_endproc
 1102              	.LFE21:
 1103              		.size	CapSense_1_SsCSDSetColSnsClkDivider, .-CapSense_1_SsCSDSetColSnsClkDivider
 1104              		.section	.text.CapSense_1_BistDischargeExtCapacitors,"ax",%progbits
 1105              		.align	2
 1106              		.global	CapSense_1_BistDischargeExtCapacitors
 1107              		.code	16
 1108              		.thumb_func
 1109              		.type	CapSense_1_BistDischargeExtCapacitors, %function
 1110              	CapSense_1_BistDischargeExtCapacitors:
 1111              	.LFB22:
2706:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDGetRowSnsClkDivider
2711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  two-dimension widgets.
2721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return
2726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 CapSense_1_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 71


2732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 retVal;
2733:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Get sense divider based on configuration */
2735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2736:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2737:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2740:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2747:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (retVal);
2749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2752:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2753:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDCalcPrsSize
2757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  requirements:
2765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  resolution The widget resolution.
2770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 CapSense_1_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 prsSize;
2777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 modClkDivider = 1u;
2778:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if ((CapSense_1_ENABLE != CapSense_1_CSDV2) && \
2780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK))
2781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     modClkDivider = (uint32)CapSense_1_dsRam.modCsdClk;
2782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((snsClkDivider * CapSense_1_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu 
2785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS12 mode */
2787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_12_CONFIG;
2788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 72


2789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if ((snsClkDivider * CapSense_1_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x0000000
2790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS8 mode */
2792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_8_CONFIG;
2793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
2795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set Direct clock mode */
2797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_CLK_SOURCE_DIRECT;
2798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (uint8)prsSize;
2801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2804:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2805:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_BistDischargeExtCapacitors
2809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors.
2813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors by connection them
2816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects 
2817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses 
2819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_BistDischargeExtCapacitors(void)
2823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1112              		.loc 1 2823 0
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 0, uses_anonymous_args = 0
 1116 0000 70B5     		push	{r4, r5, r6, lr}
 1117              		.cfi_def_cfa_offset 16
 1118              		.cfi_offset 4, -16
 1119              		.cfi_offset 5, -12
 1120              		.cfi_offset 6, -8
 1121              		.cfi_offset 14, -4
2824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
2825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8  interruptState;
2826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         
2827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1122              		.loc 1 2828 0
 1123 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1124              	.LVL109:
2829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR);
 1125              		.loc 1 2829 0
 1126 0006 134A     		ldr	r2, .L89
 1127 0008 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 73


 1128              	.LVL110:
2830:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_HSIOM_MASK);
 1129              		.loc 1 2830 0
 1130 000a F021     		movs	r1, #240
 1131 000c 8B43     		bics	r3, r1
 1132              	.LVL111:
2831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR, newRegValue);
 1133              		.loc 1 2831 0
 1134 000e 1360     		str	r3, [r2]
2832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1135              		.loc 1 2832 0
 1136 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1137              	.LVL112:
2833:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2835:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1138              		.loc 1 2835 0
 1139 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1140              	.LVL113:
2836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_DR_PTR);
 1141              		.loc 1 2836 0
 1142 0018 0F4A     		ldr	r2, .L89+4
 1143 001a 1368     		ldr	r3, [r2]
 1144              	.LVL114:
2837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_DR_MASK);
 1145              		.loc 1 2837 0
 1146 001c 0221     		movs	r1, #2
 1147 001e 8B43     		bics	r3, r1
 1148              	.LVL115:
2838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_DR_PTR, newRegValue);
 1149              		.loc 1 2838 0
 1150 0020 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1151              		.loc 1 2839 0
 1152 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1153              	.LVL116:
2840:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1154              		.loc 1 2842 0
 1155 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 1156              	.LVL117:
2843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1157              		.loc 1 2843 0
 1158 002a 0C4C     		ldr	r4, .L89+8
 1159 002c 2368     		ldr	r3, [r4]
 1160              	.LVL118:
2844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1161              		.loc 1 2844 0
 1162 002e 3825     		movs	r5, #56
 1163 0030 AB43     		bics	r3, r5
 1164              	.LVL119:
2845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (CapSense_1_EXT_CAP_PC_STRONG_CFG);
 1165              		.loc 1 2845 0
 1166 0032 3022     		movs	r2, #48
 1167 0034 1343     		orrs	r3, r2
 1168              	.LVL120:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 74


2846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1169              		.loc 1 2846 0
 1170 0036 2360     		str	r3, [r4]
2847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1171              		.loc 1 2847 0
 1172 0038 FFF7FEFF 		bl	CyExitCriticalSection
 1173              	.LVL121:
2848:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Delay to discharge external capacitors */
2850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyDelayUs(CapSense_1_EXT_CAP_DISCHARGE_TIME);
 1174              		.loc 1 2850 0
 1175 003c 0120     		movs	r0, #1
 1176 003e FFF7FEFF 		bl	CyDelayUs
 1177              	.LVL122:
2851:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1178              		.loc 1 2853 0
 1179 0042 FFF7FEFF 		bl	CyEnterCriticalSection
 1180              	.LVL123:
2854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1181              		.loc 1 2854 0
 1182 0046 2368     		ldr	r3, [r4]
 1183              	.LVL124:
2855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1184              		.loc 1 2855 0
 1185 0048 AB43     		bics	r3, r5
 1186              	.LVL125:
2856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1187              		.loc 1 2856 0
 1188 004a 2360     		str	r3, [r4]
2857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1189              		.loc 1 2857 0
 1190 004c FFF7FEFF 		bl	CyExitCriticalSection
 1191              	.LVL126:
2858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1192              		.loc 1 2858 0
 1193              		@ sp needed
 1194 0050 70BD     		pop	{r4, r5, r6, pc}
 1195              	.L90:
 1196 0052 C046     		.align	2
 1197              	.L89:
 1198 0054 00040240 		.word	1073873920
 1199 0058 00040440 		.word	1074004992
 1200 005c 08040440 		.word	1074005000
 1201              		.cfi_endproc
 1202              	.LFE22:
 1203              		.size	CapSense_1_BistDischargeExtCapacitors, .-CapSense_1_BistDischargeExtCapacitors
 1204              		.comm	CapSense_1_curSnsIOPtr,4,4
 1205              		.comm	CapSense_1_curRamSnsPtr,4,4
 1206              		.global	CapSense_1_requestScanAllWidget
 1207              		.global	CapSense_1_sensorIndex
 1208              		.global	CapSense_1_widgetIndex
 1209              		.global	CapSense_1_scanFreqIndex
 1210              		.global	CapSense_1_currentSenseMethod
 1211              		.section	.rodata
 1212              		.type	CapSense_1_scanFreqIndex, %object
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 75


 1213              		.size	CapSense_1_scanFreqIndex, 1
 1214              	CapSense_1_scanFreqIndex:
 1215 0000 00       		.space	1
 1216              		.bss
 1217              		.set	.LANCHOR0,. + 0
 1218              		.type	CapSense_1_currentSenseMethod, %object
 1219              		.size	CapSense_1_currentSenseMethod, 1
 1220              	CapSense_1_currentSenseMethod:
 1221 0000 00       		.space	1
 1222              		.type	CapSense_1_requestScanAllWidget, %object
 1223              		.size	CapSense_1_requestScanAllWidget, 1
 1224              	CapSense_1_requestScanAllWidget:
 1225 0001 00       		.space	1
 1226              		.type	CapSense_1_sensorIndex, %object
 1227              		.size	CapSense_1_sensorIndex, 1
 1228              	CapSense_1_sensorIndex:
 1229 0002 00       		.space	1
 1230              		.type	CapSense_1_widgetIndex, %object
 1231              		.size	CapSense_1_widgetIndex, 1
 1232              	CapSense_1_widgetIndex:
 1233 0003 00       		.space	1
 1234              		.text
 1235              	.Letext0:
 1236              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1237              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1238              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1239              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.h"
 1240              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 1241              		.file 7 "Generated_Source\\PSoC4\\CapSense_1_ISR.h"
 1242              		.section	.debug_info,"",%progbits
 1243              	.Ldebug_info0:
 1244 0000 430D0000 		.4byte	0xd43
 1245 0004 0400     		.2byte	0x4
 1246 0006 00000000 		.4byte	.Ldebug_abbrev0
 1247 000a 04       		.byte	0x4
 1248 000b 01       		.uleb128 0x1
 1249 000c 76020000 		.4byte	.LASF155
 1250 0010 0C       		.byte	0xc
 1251 0011 C6060000 		.4byte	.LASF156
 1252 0015 05040000 		.4byte	.LASF157
 1253 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1254 001d 00000000 		.4byte	0
 1255 0021 00000000 		.4byte	.Ldebug_line0
 1256 0025 02       		.uleb128 0x2
 1257 0026 01       		.byte	0x1
 1258 0027 06       		.byte	0x6
 1259 0028 1A0A0000 		.4byte	.LASF0
 1260 002c 02       		.uleb128 0x2
 1261 002d 01       		.byte	0x1
 1262 002e 08       		.byte	0x8
 1263 002f 8B090000 		.4byte	.LASF1
 1264 0033 02       		.uleb128 0x2
 1265 0034 02       		.byte	0x2
 1266 0035 05       		.byte	0x5
 1267 0036 C5070000 		.4byte	.LASF2
 1268 003a 02       		.uleb128 0x2
 1269 003b 02       		.byte	0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 76


 1270 003c 07       		.byte	0x7
 1271 003d 2B0A0000 		.4byte	.LASF3
 1272 0041 02       		.uleb128 0x2
 1273 0042 04       		.byte	0x4
 1274 0043 05       		.byte	0x5
 1275 0044 F3070000 		.4byte	.LASF4
 1276 0048 02       		.uleb128 0x2
 1277 0049 04       		.byte	0x4
 1278 004a 07       		.byte	0x7
 1279 004b FA080000 		.4byte	.LASF5
 1280 004f 02       		.uleb128 0x2
 1281 0050 08       		.byte	0x8
 1282 0051 05       		.byte	0x5
 1283 0052 8C050000 		.4byte	.LASF6
 1284 0056 02       		.uleb128 0x2
 1285 0057 08       		.byte	0x8
 1286 0058 07       		.byte	0x7
 1287 0059 31030000 		.4byte	.LASF7
 1288 005d 03       		.uleb128 0x3
 1289 005e 04       		.byte	0x4
 1290 005f 05       		.byte	0x5
 1291 0060 696E7400 		.ascii	"int\000"
 1292 0064 02       		.uleb128 0x2
 1293 0065 04       		.byte	0x4
 1294 0066 07       		.byte	0x7
 1295 0067 B1000000 		.4byte	.LASF8
 1296 006b 04       		.uleb128 0x4
 1297 006c 820A0000 		.4byte	.LASF9
 1298 0070 02       		.byte	0x2
 1299 0071 E401     		.2byte	0x1e4
 1300 0073 2C000000 		.4byte	0x2c
 1301 0077 04       		.uleb128 0x4
 1302 0078 4E050000 		.4byte	.LASF10
 1303 007c 02       		.byte	0x2
 1304 007d E501     		.2byte	0x1e5
 1305 007f 3A000000 		.4byte	0x3a
 1306 0083 04       		.uleb128 0x4
 1307 0084 69060000 		.4byte	.LASF11
 1308 0088 02       		.byte	0x2
 1309 0089 E601     		.2byte	0x1e6
 1310 008b 48000000 		.4byte	0x48
 1311 008f 02       		.uleb128 0x2
 1312 0090 04       		.byte	0x4
 1313 0091 04       		.byte	0x4
 1314 0092 6A020000 		.4byte	.LASF12
 1315 0096 02       		.uleb128 0x2
 1316 0097 08       		.byte	0x8
 1317 0098 04       		.byte	0x4
 1318 0099 880A0000 		.4byte	.LASF13
 1319 009d 02       		.uleb128 0x2
 1320 009e 01       		.byte	0x1
 1321 009f 08       		.byte	0x8
 1322 00a0 0E050000 		.4byte	.LASF14
 1323 00a4 04       		.uleb128 0x4
 1324 00a5 82090000 		.4byte	.LASF15
 1325 00a9 02       		.byte	0x2
 1326 00aa 8602     		.2byte	0x286
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 77


 1327 00ac 48000000 		.4byte	0x48
 1328 00b0 05       		.uleb128 0x5
 1329 00b1 6B000000 		.4byte	0x6b
 1330 00b5 04       		.uleb128 0x4
 1331 00b6 44070000 		.4byte	.LASF16
 1332 00ba 02       		.byte	0x2
 1333 00bb 9002     		.2byte	0x290
 1334 00bd C1000000 		.4byte	0xc1
 1335 00c1 05       		.uleb128 0x5
 1336 00c2 83000000 		.4byte	0x83
 1337 00c6 04       		.uleb128 0x4
 1338 00c7 29060000 		.4byte	.LASF17
 1339 00cb 02       		.byte	0x2
 1340 00cc A002     		.2byte	0x2a0
 1341 00ce D2000000 		.4byte	0xd2
 1342 00d2 06       		.uleb128 0x6
 1343 00d3 04       		.byte	0x4
 1344 00d4 D8000000 		.4byte	0xd8
 1345 00d8 07       		.uleb128 0x7
 1346 00d9 04       		.uleb128 0x4
 1347 00da 9A050000 		.4byte	.LASF18
 1348 00de 03       		.byte	0x3
 1349 00df 1D01     		.2byte	0x11d
 1350 00e1 77000000 		.4byte	0x77
 1351 00e5 04       		.uleb128 0x4
 1352 00e6 6A030000 		.4byte	.LASF19
 1353 00ea 03       		.byte	0x3
 1354 00eb 2101     		.2byte	0x121
 1355 00ed 6B000000 		.4byte	0x6b
 1356 00f1 08       		.uleb128 0x8
 1357 00f2 01       		.byte	0x1
 1358 00f3 2C000000 		.4byte	0x2c
 1359 00f7 04       		.byte	0x4
 1360 00f8 70       		.byte	0x70
 1361 00f9 1C010000 		.4byte	0x11c
 1362 00fd 09       		.uleb128 0x9
 1363 00fe 8B060000 		.4byte	.LASF20
 1364 0102 00       		.byte	0
 1365 0103 09       		.uleb128 0x9
 1366 0104 D4080000 		.4byte	.LASF21
 1367 0108 01       		.byte	0x1
 1368 0109 09       		.uleb128 0x9
 1369 010a 4C080000 		.4byte	.LASF22
 1370 010e 02       		.byte	0x2
 1371 010f 09       		.uleb128 0x9
 1372 0110 E6030000 		.4byte	.LASF23
 1373 0114 03       		.byte	0x3
 1374 0115 09       		.uleb128 0x9
 1375 0116 26070000 		.4byte	.LASF24
 1376 011a 04       		.byte	0x4
 1377 011b 00       		.byte	0
 1378 011c 0A       		.uleb128 0xa
 1379 011d 87030000 		.4byte	.LASF25
 1380 0121 04       		.byte	0x4
 1381 0122 76       		.byte	0x76
 1382 0123 F1000000 		.4byte	0xf1
 1383 0127 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 78


 1384 0128 0E       		.byte	0xe
 1385 0129 04       		.byte	0x4
 1386 012a 8E       		.byte	0x8e
 1387 012b A8010000 		.4byte	0x1a8
 1388 012f 0C       		.uleb128 0xc
 1389 0130 55050000 		.4byte	.LASF26
 1390 0134 04       		.byte	0x4
 1391 0135 93       		.byte	0x93
 1392 0136 77000000 		.4byte	0x77
 1393 013a 00       		.byte	0
 1394 013b 0C       		.uleb128 0xc
 1395 013c 52090000 		.4byte	.LASF27
 1396 0140 04       		.byte	0x4
 1397 0141 98       		.byte	0x98
 1398 0142 D9000000 		.4byte	0xd9
 1399 0146 02       		.byte	0x2
 1400 0147 0C       		.uleb128 0xc
 1401 0148 E7040000 		.4byte	.LASF28
 1402 014c 04       		.byte	0x4
 1403 014d 9D       		.byte	0x9d
 1404 014e 6B000000 		.4byte	0x6b
 1405 0152 04       		.byte	0x4
 1406 0153 0C       		.uleb128 0xc
 1407 0154 15060000 		.4byte	.LASF29
 1408 0158 04       		.byte	0x4
 1409 0159 A2       		.byte	0xa2
 1410 015a 6B000000 		.4byte	0x6b
 1411 015e 05       		.byte	0x5
 1412 015f 0C       		.uleb128 0xc
 1413 0160 70060000 		.4byte	.LASF30
 1414 0164 04       		.byte	0x4
 1415 0165 A8       		.byte	0xa8
 1416 0166 6B000000 		.4byte	0x6b
 1417 016a 06       		.byte	0x6
 1418 016b 0C       		.uleb128 0xc
 1419 016c B4050000 		.4byte	.LASF31
 1420 0170 04       		.byte	0x4
 1421 0171 AE       		.byte	0xae
 1422 0172 6B000000 		.4byte	0x6b
 1423 0176 07       		.byte	0x7
 1424 0177 0C       		.uleb128 0xc
 1425 0178 49040000 		.4byte	.LASF32
 1426 017c 04       		.byte	0x4
 1427 017d B5       		.byte	0xb5
 1428 017e E5000000 		.4byte	0xe5
 1429 0182 08       		.byte	0x8
 1430 0183 0C       		.uleb128 0xc
 1431 0184 1B090000 		.4byte	.LASF33
 1432 0188 04       		.byte	0x4
 1433 0189 BC       		.byte	0xbc
 1434 018a A8010000 		.4byte	0x1a8
 1435 018e 09       		.byte	0x9
 1436 018f 0C       		.uleb128 0xc
 1437 0190 FC090000 		.4byte	.LASF34
 1438 0194 04       		.byte	0x4
 1439 0195 C4       		.byte	0xc4
 1440 0196 77000000 		.4byte	0x77
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 79


 1441 019a 0A       		.byte	0xa
 1442 019b 0C       		.uleb128 0xc
 1443 019c 93070000 		.4byte	.LASF35
 1444 01a0 04       		.byte	0x4
 1445 01a1 C9       		.byte	0xc9
 1446 01a2 6B000000 		.4byte	0x6b
 1447 01a6 0C       		.byte	0xc
 1448 01a7 00       		.byte	0
 1449 01a8 0D       		.uleb128 0xd
 1450 01a9 6B000000 		.4byte	0x6b
 1451 01ad B8010000 		.4byte	0x1b8
 1452 01b1 0E       		.uleb128 0xe
 1453 01b2 B8010000 		.4byte	0x1b8
 1454 01b6 00       		.byte	0
 1455 01b7 00       		.byte	0
 1456 01b8 02       		.uleb128 0x2
 1457 01b9 04       		.byte	0x4
 1458 01ba 07       		.byte	0x7
 1459 01bb A0070000 		.4byte	.LASF36
 1460 01bf 0A       		.uleb128 0xa
 1461 01c0 42060000 		.4byte	.LASF37
 1462 01c4 04       		.byte	0x4
 1463 01c5 CA       		.byte	0xca
 1464 01c6 27010000 		.4byte	0x127
 1465 01ca 0B       		.uleb128 0xb
 1466 01cb 0E       		.byte	0xe
 1467 01cc 04       		.byte	0x4
 1468 01cd CF       		.byte	0xcf
 1469 01ce 4D020000 		.4byte	0x24d
 1470 01d2 0C       		.uleb128 0xc
 1471 01d3 55050000 		.4byte	.LASF26
 1472 01d7 04       		.byte	0x4
 1473 01d8 D4       		.byte	0xd4
 1474 01d9 77000000 		.4byte	0x77
 1475 01dd 00       		.byte	0
 1476 01de 0C       		.uleb128 0xc
 1477 01df 52090000 		.4byte	.LASF27
 1478 01e3 04       		.byte	0x4
 1479 01e4 D9       		.byte	0xd9
 1480 01e5 D9000000 		.4byte	0xd9
 1481 01e9 02       		.byte	0x2
 1482 01ea 0C       		.uleb128 0xc
 1483 01eb E7040000 		.4byte	.LASF28
 1484 01ef 04       		.byte	0x4
 1485 01f0 DE       		.byte	0xde
 1486 01f1 6B000000 		.4byte	0x6b
 1487 01f5 04       		.byte	0x4
 1488 01f6 0C       		.uleb128 0xc
 1489 01f7 15060000 		.4byte	.LASF29
 1490 01fb 04       		.byte	0x4
 1491 01fc E3       		.byte	0xe3
 1492 01fd 6B000000 		.4byte	0x6b
 1493 0201 05       		.byte	0x5
 1494 0202 0C       		.uleb128 0xc
 1495 0203 70060000 		.4byte	.LASF30
 1496 0207 04       		.byte	0x4
 1497 0208 E9       		.byte	0xe9
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 80


 1498 0209 6B000000 		.4byte	0x6b
 1499 020d 06       		.byte	0x6
 1500 020e 0C       		.uleb128 0xc
 1501 020f B4050000 		.4byte	.LASF31
 1502 0213 04       		.byte	0x4
 1503 0214 EF       		.byte	0xef
 1504 0215 6B000000 		.4byte	0x6b
 1505 0219 07       		.byte	0x7
 1506 021a 0C       		.uleb128 0xc
 1507 021b 49040000 		.4byte	.LASF32
 1508 021f 04       		.byte	0x4
 1509 0220 F6       		.byte	0xf6
 1510 0221 E5000000 		.4byte	0xe5
 1511 0225 08       		.byte	0x8
 1512 0226 0C       		.uleb128 0xc
 1513 0227 1B090000 		.4byte	.LASF33
 1514 022b 04       		.byte	0x4
 1515 022c FD       		.byte	0xfd
 1516 022d A8010000 		.4byte	0x1a8
 1517 0231 09       		.byte	0x9
 1518 0232 0F       		.uleb128 0xf
 1519 0233 FC090000 		.4byte	.LASF34
 1520 0237 04       		.byte	0x4
 1521 0238 0501     		.2byte	0x105
 1522 023a 77000000 		.4byte	0x77
 1523 023e 0A       		.byte	0xa
 1524 023f 0F       		.uleb128 0xf
 1525 0240 93070000 		.4byte	.LASF35
 1526 0244 04       		.byte	0x4
 1527 0245 0A01     		.2byte	0x10a
 1528 0247 6B000000 		.4byte	0x6b
 1529 024b 0C       		.byte	0xc
 1530 024c 00       		.byte	0
 1531 024d 04       		.uleb128 0x4
 1532 024e CD0A0000 		.4byte	.LASF38
 1533 0252 04       		.byte	0x4
 1534 0253 0B01     		.2byte	0x10b
 1535 0255 CA010000 		.4byte	0x1ca
 1536 0259 10       		.uleb128 0x10
 1537 025a 0E       		.byte	0xe
 1538 025b 04       		.byte	0x4
 1539 025c 1101     		.2byte	0x111
 1540 025e 70020000 		.4byte	0x270
 1541 0262 0F       		.uleb128 0xf
 1542 0263 6A080000 		.4byte	.LASF39
 1543 0267 04       		.byte	0x4
 1544 0268 1601     		.2byte	0x116
 1545 026a 4D020000 		.4byte	0x24d
 1546 026e 00       		.byte	0
 1547 026f 00       		.byte	0
 1548 0270 04       		.uleb128 0x4
 1549 0271 12020000 		.4byte	.LASF40
 1550 0275 04       		.byte	0x4
 1551 0276 1701     		.2byte	0x117
 1552 0278 59020000 		.4byte	0x259
 1553 027c 10       		.uleb128 0x10
 1554 027d 0A       		.byte	0xa
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 81


 1555 027e 04       		.byte	0x4
 1556 027f 1D01     		.2byte	0x11d
 1557 0281 D4020000 		.4byte	0x2d4
 1558 0285 11       		.uleb128 0x11
 1559 0286 72617700 		.ascii	"raw\000"
 1560 028a 04       		.byte	0x4
 1561 028b 2201     		.2byte	0x122
 1562 028d D4020000 		.4byte	0x2d4
 1563 0291 00       		.byte	0
 1564 0292 0F       		.uleb128 0xf
 1565 0293 260A0000 		.4byte	.LASF41
 1566 0297 04       		.byte	0x4
 1567 0298 2701     		.2byte	0x127
 1568 029a D4020000 		.4byte	0x2d4
 1569 029e 02       		.byte	0x2
 1570 029f 0F       		.uleb128 0xf
 1571 02a0 7A090000 		.4byte	.LASF42
 1572 02a4 04       		.byte	0x4
 1573 02a5 2D01     		.2byte	0x12d
 1574 02a7 A8010000 		.4byte	0x1a8
 1575 02ab 04       		.byte	0x4
 1576 02ac 0F       		.uleb128 0xf
 1577 02ad 38080000 		.4byte	.LASF43
 1578 02b1 04       		.byte	0x4
 1579 02b2 3201     		.2byte	0x132
 1580 02b4 D9000000 		.4byte	0xd9
 1581 02b8 06       		.byte	0x6
 1582 02b9 0F       		.uleb128 0xf
 1583 02ba 8F0A0000 		.4byte	.LASF44
 1584 02be 04       		.byte	0x4
 1585 02bf 3701     		.2byte	0x137
 1586 02c1 E4020000 		.4byte	0x2e4
 1587 02c5 08       		.byte	0x8
 1588 02c6 0F       		.uleb128 0xf
 1589 02c7 7D050000 		.4byte	.LASF45
 1590 02cb 04       		.byte	0x4
 1591 02cc 3C01     		.2byte	0x13c
 1592 02ce A8010000 		.4byte	0x1a8
 1593 02d2 09       		.byte	0x9
 1594 02d3 00       		.byte	0
 1595 02d4 0D       		.uleb128 0xd
 1596 02d5 77000000 		.4byte	0x77
 1597 02d9 E4020000 		.4byte	0x2e4
 1598 02dd 0E       		.uleb128 0xe
 1599 02de B8010000 		.4byte	0x1b8
 1600 02e2 00       		.byte	0
 1601 02e3 00       		.byte	0
 1602 02e4 0D       		.uleb128 0xd
 1603 02e5 E5000000 		.4byte	0xe5
 1604 02e9 F4020000 		.4byte	0x2f4
 1605 02ed 0E       		.uleb128 0xe
 1606 02ee B8010000 		.4byte	0x1b8
 1607 02f2 00       		.byte	0
 1608 02f3 00       		.byte	0
 1609 02f4 04       		.uleb128 0x4
 1610 02f5 9D0A0000 		.4byte	.LASF46
 1611 02f9 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 82


 1612 02fa 3D01     		.2byte	0x13d
 1613 02fc 7C020000 		.4byte	0x27c
 1614 0300 10       		.uleb128 0x10
 1615 0301 0A       		.byte	0xa
 1616 0302 04       		.byte	0x4
 1617 0303 4301     		.2byte	0x143
 1618 0305 17030000 		.4byte	0x317
 1619 0309 0F       		.uleb128 0xf
 1620 030a 6A080000 		.4byte	.LASF39
 1621 030e 04       		.byte	0x4
 1622 030f 4801     		.2byte	0x148
 1623 0311 17030000 		.4byte	0x317
 1624 0315 00       		.byte	0
 1625 0316 00       		.byte	0
 1626 0317 0D       		.uleb128 0xd
 1627 0318 F4020000 		.4byte	0x2f4
 1628 031c 27030000 		.4byte	0x327
 1629 0320 0E       		.uleb128 0xe
 1630 0321 B8010000 		.4byte	0x1b8
 1631 0325 00       		.byte	0
 1632 0326 00       		.byte	0
 1633 0327 04       		.uleb128 0x4
 1634 0328 A2060000 		.4byte	.LASF47
 1635 032c 04       		.byte	0x4
 1636 032d 4901     		.2byte	0x149
 1637 032f 00030000 		.4byte	0x300
 1638 0333 10       		.uleb128 0x10
 1639 0334 3C       		.byte	0x3c
 1640 0335 04       		.byte	0x4
 1641 0336 4F01     		.2byte	0x14f
 1642 0338 1A040000 		.4byte	0x41a
 1643 033c 0F       		.uleb128 0xf
 1644 033d 5D070000 		.4byte	.LASF48
 1645 0341 04       		.byte	0x4
 1646 0342 5601     		.2byte	0x156
 1647 0344 77000000 		.4byte	0x77
 1648 0348 00       		.byte	0
 1649 0349 0F       		.uleb128 0xf
 1650 034a B70A0000 		.4byte	.LASF49
 1651 034e 04       		.byte	0x4
 1652 034f 5B01     		.2byte	0x15b
 1653 0351 77000000 		.4byte	0x77
 1654 0355 02       		.byte	0x2
 1655 0356 0F       		.uleb128 0xf
 1656 0357 04010000 		.4byte	.LASF50
 1657 035b 04       		.byte	0x4
 1658 035c 6001     		.2byte	0x160
 1659 035e 77000000 		.4byte	0x77
 1660 0362 04       		.byte	0x4
 1661 0363 0F       		.uleb128 0xf
 1662 0364 3D080000 		.4byte	.LASF51
 1663 0368 04       		.byte	0x4
 1664 0369 6601     		.2byte	0x166
 1665 036b 77000000 		.4byte	0x77
 1666 036f 06       		.byte	0x6
 1667 0370 0F       		.uleb128 0xf
 1668 0371 F8000000 		.4byte	.LASF52
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 83


 1669 0375 04       		.byte	0x4
 1670 0376 6B01     		.2byte	0x16b
 1671 0378 77000000 		.4byte	0x77
 1672 037c 08       		.byte	0x8
 1673 037d 0F       		.uleb128 0xf
 1674 037e 76050000 		.4byte	.LASF53
 1675 0382 04       		.byte	0x4
 1676 0383 7001     		.2byte	0x170
 1677 0385 C1000000 		.4byte	0xc1
 1678 0389 0C       		.byte	0xc
 1679 038a 0F       		.uleb128 0xf
 1680 038b FC070000 		.4byte	.LASF54
 1681 038f 04       		.byte	0x4
 1682 0390 7601     		.2byte	0x176
 1683 0392 1A040000 		.4byte	0x41a
 1684 0396 10       		.byte	0x10
 1685 0397 0F       		.uleb128 0xf
 1686 0398 98080000 		.4byte	.LASF55
 1687 039c 04       		.byte	0x4
 1688 039d 7D01     		.2byte	0x17d
 1689 039f 1A040000 		.4byte	0x41a
 1690 03a3 14       		.byte	0x14
 1691 03a4 0F       		.uleb128 0xf
 1692 03a5 89070000 		.4byte	.LASF56
 1693 03a9 04       		.byte	0x4
 1694 03aa 8D01     		.2byte	0x18d
 1695 03ac A8010000 		.4byte	0x1a8
 1696 03b0 18       		.byte	0x18
 1697 03b1 0F       		.uleb128 0xf
 1698 03b2 1E060000 		.4byte	.LASF57
 1699 03b6 04       		.byte	0x4
 1700 03b7 9301     		.2byte	0x193
 1701 03b9 77000000 		.4byte	0x77
 1702 03bd 1A       		.byte	0x1a
 1703 03be 0F       		.uleb128 0xf
 1704 03bf A4030000 		.4byte	.LASF58
 1705 03c3 04       		.byte	0x4
 1706 03c4 9801     		.2byte	0x198
 1707 03c6 6B000000 		.4byte	0x6b
 1708 03ca 1C       		.byte	0x1c
 1709 03cb 0F       		.uleb128 0xf
 1710 03cc EF050000 		.4byte	.LASF59
 1711 03d0 04       		.byte	0x4
 1712 03d1 9D01     		.2byte	0x19d
 1713 03d3 70020000 		.4byte	0x270
 1714 03d7 1E       		.byte	0x1e
 1715 03d8 0F       		.uleb128 0xf
 1716 03d9 29030000 		.4byte	.LASF60
 1717 03dd 04       		.byte	0x4
 1718 03de A201     		.2byte	0x1a2
 1719 03e0 27030000 		.4byte	0x327
 1720 03e4 2C       		.byte	0x2c
 1721 03e5 0F       		.uleb128 0xf
 1722 03e6 8E000000 		.4byte	.LASF61
 1723 03ea 04       		.byte	0x4
 1724 03eb A701     		.2byte	0x1a7
 1725 03ed 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 84


 1726 03f1 36       		.byte	0x36
 1727 03f2 0F       		.uleb128 0xf
 1728 03f3 48030000 		.4byte	.LASF62
 1729 03f7 04       		.byte	0x4
 1730 03f8 AC01     		.2byte	0x1ac
 1731 03fa 6B000000 		.4byte	0x6b
 1732 03fe 37       		.byte	0x37
 1733 03ff 0F       		.uleb128 0xf
 1734 0400 4A070000 		.4byte	.LASF63
 1735 0404 04       		.byte	0x4
 1736 0405 B101     		.2byte	0x1b1
 1737 0407 77000000 		.4byte	0x77
 1738 040b 38       		.byte	0x38
 1739 040c 0F       		.uleb128 0xf
 1740 040d 05060000 		.4byte	.LASF64
 1741 0411 04       		.byte	0x4
 1742 0412 B601     		.2byte	0x1b6
 1743 0414 D4020000 		.4byte	0x2d4
 1744 0418 3A       		.byte	0x3a
 1745 0419 00       		.byte	0
 1746 041a 0D       		.uleb128 0xd
 1747 041b 83000000 		.4byte	0x83
 1748 041f 2A040000 		.4byte	0x42a
 1749 0423 0E       		.uleb128 0xe
 1750 0424 B8010000 		.4byte	0x1b8
 1751 0428 00       		.byte	0
 1752 0429 00       		.byte	0
 1753 042a 04       		.uleb128 0x4
 1754 042b 60050000 		.4byte	.LASF65
 1755 042f 04       		.byte	0x4
 1756 0430 B701     		.2byte	0x1b7
 1757 0432 33030000 		.4byte	0x333
 1758 0436 10       		.uleb128 0x10
 1759 0437 1C       		.byte	0x1c
 1760 0438 04       		.byte	0x4
 1761 0439 BD01     		.2byte	0x1bd
 1762 043b B5040000 		.4byte	0x4b5
 1763 043f 0F       		.uleb128 0xf
 1764 0440 60060000 		.4byte	.LASF66
 1765 0444 04       		.byte	0x4
 1766 0445 C201     		.2byte	0x1c2
 1767 0447 B5040000 		.4byte	0x4b5
 1768 044b 00       		.byte	0
 1769 044c 0F       		.uleb128 0xf
 1770 044d 86050000 		.4byte	.LASF67
 1771 0451 04       		.byte	0x4
 1772 0452 C701     		.2byte	0x1c7
 1773 0454 B5040000 		.4byte	0x4b5
 1774 0458 04       		.byte	0x4
 1775 0459 0F       		.uleb128 0xf
 1776 045a C5030000 		.4byte	.LASF68
 1777 045e 04       		.byte	0x4
 1778 045f CC01     		.2byte	0x1cc
 1779 0461 B5040000 		.4byte	0x4b5
 1780 0465 08       		.byte	0x8
 1781 0466 0F       		.uleb128 0xf
 1782 0467 46080000 		.4byte	.LASF69
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 85


 1783 046b 04       		.byte	0x4
 1784 046c D101     		.2byte	0x1d1
 1785 046e B5040000 		.4byte	0x4b5
 1786 0472 0C       		.byte	0xc
 1787 0473 0F       		.uleb128 0xf
 1788 0474 C8090000 		.4byte	.LASF70
 1789 0478 04       		.byte	0x4
 1790 0479 D601     		.2byte	0x1d6
 1791 047b 83000000 		.4byte	0x83
 1792 047f 10       		.byte	0x10
 1793 0480 0F       		.uleb128 0xf
 1794 0481 C1060000 		.4byte	.LASF71
 1795 0485 04       		.byte	0x4
 1796 0486 DB01     		.2byte	0x1db
 1797 0488 83000000 		.4byte	0x83
 1798 048c 14       		.byte	0x14
 1799 048d 0F       		.uleb128 0xf
 1800 048e 43050000 		.4byte	.LASF72
 1801 0492 04       		.byte	0x4
 1802 0493 E001     		.2byte	0x1e0
 1803 0495 6B000000 		.4byte	0x6b
 1804 0499 18       		.byte	0x18
 1805 049a 0F       		.uleb128 0xf
 1806 049b F2080000 		.4byte	.LASF73
 1807 049f 04       		.byte	0x4
 1808 04a0 E501     		.2byte	0x1e5
 1809 04a2 6B000000 		.4byte	0x6b
 1810 04a6 19       		.byte	0x19
 1811 04a7 0F       		.uleb128 0xf
 1812 04a8 70020000 		.4byte	.LASF74
 1813 04ac 04       		.byte	0x4
 1814 04ad EA01     		.2byte	0x1ea
 1815 04af 6B000000 		.4byte	0x6b
 1816 04b3 1A       		.byte	0x1a
 1817 04b4 00       		.byte	0
 1818 04b5 06       		.uleb128 0x6
 1819 04b6 04       		.byte	0x4
 1820 04b7 B5000000 		.4byte	0xb5
 1821 04bb 04       		.uleb128 0x4
 1822 04bc 3E0A0000 		.4byte	.LASF75
 1823 04c0 04       		.byte	0x4
 1824 04c1 EB01     		.2byte	0x1eb
 1825 04c3 36040000 		.4byte	0x436
 1826 04c7 10       		.uleb128 0x10
 1827 04c8 1C       		.byte	0x1c
 1828 04c9 04       		.byte	0x4
 1829 04ca 1E02     		.2byte	0x21e
 1830 04cc 46050000 		.4byte	0x546
 1831 04d0 0F       		.uleb128 0xf
 1832 04d1 F8050000 		.4byte	.LASF76
 1833 04d5 04       		.byte	0x4
 1834 04d6 2702     		.2byte	0x227
 1835 04d8 46050000 		.4byte	0x546
 1836 04dc 00       		.byte	0
 1837 04dd 0F       		.uleb128 0xf
 1838 04de AC090000 		.4byte	.LASF77
 1839 04e2 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 86


 1840 04e3 2E02     		.2byte	0x22e
 1841 04e5 4D050000 		.4byte	0x54d
 1842 04e9 04       		.byte	0x4
 1843 04ea 0F       		.uleb128 0xf
 1844 04eb 66070000 		.4byte	.LASF78
 1845 04ef 04       		.byte	0x4
 1846 04f0 3402     		.2byte	0x234
 1847 04f2 4F050000 		.4byte	0x54f
 1848 04f6 08       		.byte	0x8
 1849 04f7 0F       		.uleb128 0xf
 1850 04f8 7B060000 		.4byte	.LASF79
 1851 04fc 04       		.byte	0x4
 1852 04fd 3A02     		.2byte	0x23a
 1853 04ff 4D050000 		.4byte	0x54d
 1854 0503 0C       		.byte	0xc
 1855 0504 0F       		.uleb128 0xf
 1856 0505 23090000 		.4byte	.LASF80
 1857 0509 04       		.byte	0x4
 1858 050a 4102     		.2byte	0x241
 1859 050c 55050000 		.4byte	0x555
 1860 0510 10       		.byte	0x10
 1861 0511 0F       		.uleb128 0xf
 1862 0512 99090000 		.4byte	.LASF81
 1863 0516 04       		.byte	0x4
 1864 0517 4602     		.2byte	0x246
 1865 0519 83000000 		.4byte	0x83
 1866 051d 14       		.byte	0x14
 1867 051e 0F       		.uleb128 0xf
 1868 051f B0040000 		.4byte	.LASF82
 1869 0523 04       		.byte	0x4
 1870 0524 4D02     		.2byte	0x24d
 1871 0526 77000000 		.4byte	0x77
 1872 052a 18       		.byte	0x18
 1873 052b 0F       		.uleb128 0xf
 1874 052c 58030000 		.4byte	.LASF83
 1875 0530 04       		.byte	0x4
 1876 0531 5402     		.2byte	0x254
 1877 0533 6B000000 		.4byte	0x6b
 1878 0537 1A       		.byte	0x1a
 1879 0538 0F       		.uleb128 0xf
 1880 0539 90080000 		.4byte	.LASF84
 1881 053d 04       		.byte	0x4
 1882 053e 5E02     		.2byte	0x25e
 1883 0540 6B000000 		.4byte	0x6b
 1884 0544 1B       		.byte	0x1b
 1885 0545 00       		.byte	0
 1886 0546 06       		.uleb128 0x6
 1887 0547 04       		.byte	0x4
 1888 0548 4C050000 		.4byte	0x54c
 1889 054c 12       		.uleb128 0x12
 1890 054d 13       		.uleb128 0x13
 1891 054e 04       		.byte	0x4
 1892 054f 06       		.uleb128 0x6
 1893 0550 04       		.byte	0x4
 1894 0551 F4020000 		.4byte	0x2f4
 1895 0555 06       		.uleb128 0x6
 1896 0556 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 87


 1897 0557 6B000000 		.4byte	0x6b
 1898 055b 04       		.uleb128 0x4
 1899 055c 50000000 		.4byte	.LASF85
 1900 0560 04       		.byte	0x4
 1901 0561 5F02     		.2byte	0x25f
 1902 0563 C7040000 		.4byte	0x4c7
 1903 0567 10       		.uleb128 0x10
 1904 0568 1C       		.byte	0x1c
 1905 0569 04       		.byte	0x4
 1906 056a 6502     		.2byte	0x265
 1907 056c 7E050000 		.4byte	0x57e
 1908 0570 0F       		.uleb128 0xf
 1909 0571 2D0B0000 		.4byte	.LASF86
 1910 0575 04       		.byte	0x4
 1911 0576 6A02     		.2byte	0x26a
 1912 0578 7E050000 		.4byte	0x57e
 1913 057c 00       		.byte	0
 1914 057d 00       		.byte	0
 1915 057e 0D       		.uleb128 0xd
 1916 057f 5B050000 		.4byte	0x55b
 1917 0583 8E050000 		.4byte	0x58e
 1918 0587 0E       		.uleb128 0xe
 1919 0588 B8010000 		.4byte	0x1b8
 1920 058c 00       		.byte	0
 1921 058d 00       		.byte	0
 1922 058e 04       		.uleb128 0x4
 1923 058f 71070000 		.4byte	.LASF87
 1924 0593 04       		.byte	0x4
 1925 0594 6B02     		.2byte	0x26b
 1926 0596 67050000 		.4byte	0x567
 1927 059a 02       		.uleb128 0x2
 1928 059b 08       		.byte	0x8
 1929 059c 04       		.byte	0x4
 1930 059d 36060000 		.4byte	.LASF88
 1931 05a1 14       		.uleb128 0x14
 1932 05a2 6B040000 		.4byte	.LASF93
 1933 05a6 01       		.byte	0x1
 1934 05a7 BE08     		.2byte	0x8be
 1935 05a9 00000000 		.4byte	.LFB18
 1936 05ad 06000000 		.4byte	.LFE18-.LFB18
 1937 05b1 01       		.uleb128 0x1
 1938 05b2 9C       		.byte	0x9c
 1939 05b3 EE050000 		.4byte	0x5ee
 1940 05b7 15       		.uleb128 0x15
 1941 05b8 F2060000 		.4byte	.LASF89
 1942 05bc 01       		.byte	0x1
 1943 05bd BE08     		.2byte	0x8be
 1944 05bf 83000000 		.4byte	0x83
 1945 05c3 01       		.uleb128 0x1
 1946 05c4 50       		.byte	0x50
 1947 05c5 15       		.uleb128 0x15
 1948 05c6 38020000 		.4byte	.LASF90
 1949 05ca 01       		.byte	0x1
 1950 05cb BE08     		.2byte	0x8be
 1951 05cd EE050000 		.4byte	0x5ee
 1952 05d1 01       		.uleb128 0x1
 1953 05d2 51       		.byte	0x51
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 88


 1954 05d3 16       		.uleb128 0x16
 1955 05d4 61030000 		.4byte	.LASF91
 1956 05d8 01       		.byte	0x1
 1957 05d9 C008     		.2byte	0x8c0
 1958 05db 6B000000 		.4byte	0x6b
 1959 05df 05       		.byte	0x5
 1960 05e0 16       		.uleb128 0x16
 1961 05e1 6A010000 		.4byte	.LASF92
 1962 05e5 01       		.byte	0x1
 1963 05e6 C108     		.2byte	0x8c1
 1964 05e8 6B000000 		.4byte	0x6b
 1965 05ec 00       		.byte	0
 1966 05ed 00       		.byte	0
 1967 05ee 06       		.uleb128 0x6
 1968 05ef 04       		.byte	0x4
 1969 05f0 BF010000 		.4byte	0x1bf
 1970 05f4 14       		.uleb128 0x14
 1971 05f5 34000000 		.4byte	.LASF94
 1972 05f9 01       		.byte	0x1
 1973 05fa FA02     		.2byte	0x2fa
 1974 05fc 00000000 		.4byte	.LFB7
 1975 0600 24000000 		.4byte	.LFE7-.LFB7
 1976 0604 01       		.uleb128 0x1
 1977 0605 9C       		.byte	0x9c
 1978 0606 24060000 		.4byte	0x624
 1979 060a 17       		.uleb128 0x17
 1980 060b 590A0000 		.4byte	.LASF95
 1981 060f 01       		.byte	0x1
 1982 0610 FC02     		.2byte	0x2fc
 1983 0612 83000000 		.4byte	0x83
 1984 0616 00000000 		.4byte	.LLST0
 1985 061a 18       		.uleb128 0x18
 1986 061b 1A000000 		.4byte	.LVL5
 1987 061f C60C0000 		.4byte	0xcc6
 1988 0623 00       		.byte	0
 1989 0624 19       		.uleb128 0x19
 1990 0625 58010000 		.4byte	.LASF158
 1991 0629 01       		.byte	0x1
 1992 062a E9       		.byte	0xe9
 1993 062b 83000000 		.4byte	0x83
 1994 062f 00000000 		.4byte	.LFB1
 1995 0633 10000000 		.4byte	.LFE1-.LFB1
 1996 0637 01       		.uleb128 0x1
 1997 0638 9C       		.byte	0x9c
 1998 0639 1A       		.uleb128 0x1a
 1999 063a 08030000 		.4byte	.LASF98
 2000 063e 01       		.byte	0x1
 2001 063f 1D01     		.2byte	0x11d
 2002 0641 A4000000 		.4byte	0xa4
 2003 0645 00000000 		.4byte	.LFB2
 2004 0649 40000000 		.4byte	.LFE2-.LFB2
 2005 064d 01       		.uleb128 0x1
 2006 064e 9C       		.byte	0x9c
 2007 064f 7D060000 		.4byte	0x67d
 2008 0653 1B       		.uleb128 0x1b
 2009 0654 ED0A0000 		.4byte	.LASF96
 2010 0658 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 89


 2011 0659 1D01     		.2byte	0x11d
 2012 065b 83000000 		.4byte	0x83
 2013 065f 13000000 		.4byte	.LLST1
 2014 0663 17       		.uleb128 0x17
 2015 0664 C00A0000 		.4byte	.LASF97
 2016 0668 01       		.byte	0x1
 2017 0669 1F01     		.2byte	0x11f
 2018 066b A4000000 		.4byte	0xa4
 2019 066f 34000000 		.4byte	.LLST2
 2020 0673 18       		.uleb128 0x18
 2021 0674 38000000 		.4byte	.LVL8
 2022 0678 D20C0000 		.4byte	0xcd2
 2023 067c 00       		.byte	0
 2024 067d 1A       		.uleb128 0x1a
 2025 067e 16070000 		.4byte	.LASF99
 2026 0682 01       		.byte	0x1
 2027 0683 7001     		.2byte	0x170
 2028 0685 A4000000 		.4byte	0xa4
 2029 0689 00000000 		.4byte	.LFB3
 2030 068d 2C000000 		.4byte	.LFE3-.LFB3
 2031 0691 01       		.uleb128 0x1
 2032 0692 9C       		.byte	0x9c
 2033 0693 B1060000 		.4byte	0x6b1
 2034 0697 17       		.uleb128 0x17
 2035 0698 6B000000 		.4byte	.LASF100
 2036 069c 01       		.byte	0x1
 2037 069d 7201     		.2byte	0x172
 2038 069f A4000000 		.4byte	0xa4
 2039 06a3 52000000 		.4byte	.LLST3
 2040 06a7 18       		.uleb128 0x18
 2041 06a8 16000000 		.4byte	.LVL11
 2042 06ac DE0C0000 		.4byte	0xcde
 2043 06b0 00       		.byte	0
 2044 06b1 1A       		.uleb128 0x1a
 2045 06b2 29050000 		.4byte	.LASF101
 2046 06b6 01       		.byte	0x1
 2047 06b7 AE01     		.2byte	0x1ae
 2048 06b9 A4000000 		.4byte	0xa4
 2049 06bd 00000000 		.4byte	.LFB4
 2050 06c1 3C000000 		.4byte	.LFE4-.LFB4
 2051 06c5 01       		.uleb128 0x1
 2052 06c6 9C       		.byte	0x9c
 2053 06c7 09070000 		.4byte	0x709
 2054 06cb 17       		.uleb128 0x17
 2055 06cc 6B000000 		.4byte	.LASF100
 2056 06d0 01       		.byte	0x1
 2057 06d1 B001     		.2byte	0x1b0
 2058 06d3 A4000000 		.4byte	0xa4
 2059 06d7 71000000 		.4byte	.LLST4
 2060 06db 17       		.uleb128 0x17
 2061 06dc F2060000 		.4byte	.LASF89
 2062 06e0 01       		.byte	0x1
 2063 06e1 B201     		.2byte	0x1b2
 2064 06e3 83000000 		.4byte	0x83
 2065 06e7 BF000000 		.4byte	.LLST5
 2066 06eb 1C       		.uleb128 0x1c
 2067 06ec 18000000 		.4byte	.LVL16
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 90


 2068 06f0 39060000 		.4byte	0x639
 2069 06f4 FF060000 		.4byte	0x6ff
 2070 06f8 1D       		.uleb128 0x1d
 2071 06f9 01       		.uleb128 0x1
 2072 06fa 50       		.byte	0x50
 2073 06fb 02       		.uleb128 0x2
 2074 06fc 74       		.byte	0x74
 2075 06fd 00       		.sleb128 0
 2076 06fe 00       		.byte	0
 2077 06ff 18       		.uleb128 0x18
 2078 0700 26000000 		.4byte	.LVL17
 2079 0704 7D060000 		.4byte	0x67d
 2080 0708 00       		.byte	0
 2081 0709 1E       		.uleb128 0x1e
 2082 070a 54040000 		.4byte	.LASF108
 2083 070e 01       		.byte	0x1
 2084 070f 8902     		.2byte	0x289
 2085 0711 00000000 		.4byte	.LFB6
 2086 0715 A0000000 		.4byte	.LFE6-.LFB6
 2087 0719 01       		.uleb128 0x1
 2088 071a 9C       		.byte	0x9c
 2089 071b D3070000 		.4byte	0x7d3
 2090 071f 1B       		.uleb128 0x1b
 2091 0720 ED0A0000 		.4byte	.LASF96
 2092 0724 01       		.byte	0x1
 2093 0725 8902     		.2byte	0x289
 2094 0727 83000000 		.4byte	0x83
 2095 072b D2000000 		.4byte	.LLST6
 2096 072f 1B       		.uleb128 0x1b
 2097 0730 00000000 		.4byte	.LASF102
 2098 0734 01       		.byte	0x1
 2099 0735 8902     		.2byte	0x289
 2100 0737 83000000 		.4byte	0x83
 2101 073b F3000000 		.4byte	.LLST7
 2102 073f 1B       		.uleb128 0x1b
 2103 0740 B8090000 		.4byte	.LASF103
 2104 0744 01       		.byte	0x1
 2105 0745 8902     		.2byte	0x289
 2106 0747 83000000 		.4byte	0x83
 2107 074b 14010000 		.4byte	.LLST8
 2108 074f 16       		.uleb128 0x16
 2109 0750 30020000 		.4byte	.LASF104
 2110 0754 01       		.byte	0x1
 2111 0755 8B02     		.2byte	0x28b
 2112 0757 83000000 		.4byte	0x83
 2113 075b 01       		.byte	0x1
 2114 075c 17       		.uleb128 0x17
 2115 075d BE090000 		.4byte	.LASF105
 2116 0761 01       		.byte	0x1
 2117 0762 8C02     		.2byte	0x28c
 2118 0764 83000000 		.4byte	0x83
 2119 0768 40010000 		.4byte	.LLST9
 2120 076c 17       		.uleb128 0x17
 2121 076d 49010000 		.4byte	.LASF106
 2122 0771 01       		.byte	0x1
 2123 0772 8D02     		.2byte	0x28d
 2124 0774 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 91


 2125 0778 5F010000 		.4byte	.LLST10
 2126 077c 17       		.uleb128 0x17
 2127 077d A6090000 		.4byte	.LASF107
 2128 0781 01       		.byte	0x1
 2129 0782 8E02     		.2byte	0x28e
 2130 0784 D3070000 		.4byte	0x7d3
 2131 0788 88010000 		.4byte	.LLST11
 2132 078c 18       		.uleb128 0x18
 2133 078d 1E000000 		.4byte	.LVL27
 2134 0791 EA0C0000 		.4byte	0xcea
 2135 0795 18       		.uleb128 0x18
 2136 0796 3E000000 		.4byte	.LVL28
 2137 079a F50C0000 		.4byte	0xcf5
 2138 079e 18       		.uleb128 0x18
 2139 079f 50000000 		.4byte	.LVL29
 2140 07a3 EA0C0000 		.4byte	0xcea
 2141 07a7 18       		.uleb128 0x18
 2142 07a8 70000000 		.4byte	.LVL30
 2143 07ac F50C0000 		.4byte	0xcf5
 2144 07b0 18       		.uleb128 0x18
 2145 07b1 76000000 		.4byte	.LVL31
 2146 07b5 EA0C0000 		.4byte	0xcea
 2147 07b9 18       		.uleb128 0x18
 2148 07ba 88000000 		.4byte	.LVL32
 2149 07be F50C0000 		.4byte	0xcf5
 2150 07c2 1F       		.uleb128 0x1f
 2151 07c3 90000000 		.4byte	.LVL33
 2152 07c7 000D0000 		.4byte	0xd00
 2153 07cb 1D       		.uleb128 0x1d
 2154 07cc 01       		.uleb128 0x1
 2155 07cd 50       		.byte	0x50
 2156 07ce 02       		.uleb128 0x2
 2157 07cf 74       		.byte	0x74
 2158 07d0 00       		.sleb128 0
 2159 07d1 00       		.byte	0
 2160 07d2 00       		.byte	0
 2161 07d3 06       		.uleb128 0x6
 2162 07d4 04       		.byte	0x4
 2163 07d5 D9070000 		.4byte	0x7d9
 2164 07d9 20       		.uleb128 0x20
 2165 07da BB040000 		.4byte	0x4bb
 2166 07de 1E       		.uleb128 0x1e
 2167 07df EF040000 		.4byte	.LASF109
 2168 07e3 01       		.byte	0x1
 2169 07e4 8503     		.2byte	0x385
 2170 07e6 00000000 		.4byte	.LFB8
 2171 07ea 3C000000 		.4byte	.LFE8-.LFB8
 2172 07ee 01       		.uleb128 0x1
 2173 07ef 9C       		.byte	0x9c
 2174 07f0 17080000 		.4byte	0x817
 2175 07f4 1B       		.uleb128 0x1b
 2176 07f5 B3010000 		.4byte	.LASF110
 2177 07f9 01       		.byte	0x1
 2178 07fa 8503     		.2byte	0x385
 2179 07fc 1C010000 		.4byte	0x11c
 2180 0800 9B010000 		.4byte	.LLST12
 2181 0804 18       		.uleb128 0x18
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 92


 2182 0805 14000000 		.4byte	.LVL40
 2183 0809 F4050000 		.4byte	0x5f4
 2184 080d 18       		.uleb128 0x18
 2185 080e 1C000000 		.4byte	.LVL41
 2186 0812 0C0D0000 		.4byte	0xd0c
 2187 0816 00       		.byte	0
 2188 0817 1E       		.uleb128 0x1e
 2189 0818 BE000000 		.4byte	.LASF111
 2190 081c 01       		.byte	0x1
 2191 081d E803     		.2byte	0x3e8
 2192 081f 00000000 		.4byte	.LFB9
 2193 0823 40000000 		.4byte	.LFE9-.LFB9
 2194 0827 01       		.uleb128 0x1
 2195 0828 9C       		.byte	0x9c
 2196 0829 5E080000 		.4byte	0x85e
 2197 082d 17       		.uleb128 0x17
 2198 082e A6090000 		.4byte	.LASF107
 2199 0832 01       		.byte	0x1
 2200 0833 EA03     		.2byte	0x3ea
 2201 0835 D3070000 		.4byte	0x7d3
 2202 0839 BC010000 		.4byte	.LLST13
 2203 083d 17       		.uleb128 0x17
 2204 083e 60020000 		.4byte	.LASF112
 2205 0842 01       		.byte	0x1
 2206 0843 EB03     		.2byte	0x3eb
 2207 0845 83000000 		.4byte	0x83
 2208 0849 CF010000 		.4byte	.LLST14
 2209 084d 17       		.uleb128 0x17
 2210 084e 2E010000 		.4byte	.LASF113
 2211 0852 01       		.byte	0x1
 2212 0853 EC03     		.2byte	0x3ec
 2213 0855 83000000 		.4byte	0x83
 2214 0859 EE010000 		.4byte	.LLST15
 2215 085d 00       		.byte	0
 2216 085e 21       		.uleb128 0x21
 2217 085f F60A0000 		.4byte	.LASF159
 2218 0863 01       		.byte	0x1
 2219 0864 6204     		.2byte	0x462
 2220 0866 00000000 		.4byte	.LFB10
 2221 086a 02000000 		.4byte	.LFE10-.LFB10
 2222 086e 01       		.uleb128 0x1
 2223 086f 9C       		.byte	0x9c
 2224 0870 1E       		.uleb128 0x1e
 2225 0871 CB030000 		.4byte	.LASF114
 2226 0875 01       		.byte	0x1
 2227 0876 AF04     		.2byte	0x4af
 2228 0878 00000000 		.4byte	.LFB11
 2229 087c 08000000 		.4byte	.LFE11-.LFB11
 2230 0880 01       		.uleb128 0x1
 2231 0881 9C       		.byte	0x9c
 2232 0882 A8080000 		.4byte	0x8a8
 2233 0886 1B       		.uleb128 0x1b
 2234 0887 13090000 		.4byte	.LASF115
 2235 088b 01       		.byte	0x1
 2236 088c AF04     		.2byte	0x4af
 2237 088e C6000000 		.4byte	0xc6
 2238 0892 17020000 		.4byte	.LLST16
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 93


 2239 0896 1F       		.uleb128 0x1f
 2240 0897 06000000 		.4byte	.LVL55
 2241 089b 180D0000 		.4byte	0xd18
 2242 089f 1D       		.uleb128 0x1d
 2243 08a0 01       		.uleb128 0x1
 2244 08a1 50       		.byte	0x50
 2245 08a2 03       		.uleb128 0x3
 2246 08a3 F3       		.byte	0xf3
 2247 08a4 01       		.uleb128 0x1
 2248 08a5 50       		.byte	0x50
 2249 08a6 00       		.byte	0
 2250 08a7 00       		.byte	0
 2251 08a8 1E       		.uleb128 0x1e
 2252 08a9 8D040000 		.4byte	.LASF116
 2253 08ad 01       		.byte	0x1
 2254 08ae C604     		.2byte	0x4c6
 2255 08b0 00000000 		.4byte	.LFB12
 2256 08b4 30000000 		.4byte	.LFE12-.LFB12
 2257 08b8 01       		.uleb128 0x1
 2258 08b9 9C       		.byte	0x9c
 2259 08ba CF080000 		.4byte	0x8cf
 2260 08be 1B       		.uleb128 0x1b
 2261 08bf BC040000 		.4byte	.LASF117
 2262 08c3 01       		.byte	0x1
 2263 08c4 C604     		.2byte	0x4c6
 2264 08c6 83000000 		.4byte	0x83
 2265 08ca 38020000 		.4byte	.LLST17
 2266 08ce 00       		.byte	0
 2267 08cf 1E       		.uleb128 0x1e
 2268 08d0 BF050000 		.4byte	.LASF118
 2269 08d4 01       		.byte	0x1
 2270 08d5 0A05     		.2byte	0x50a
 2271 08d7 00000000 		.4byte	.LFB13
 2272 08db 14000000 		.4byte	.LFE13-.LFB13
 2273 08df 01       		.uleb128 0x1
 2274 08e0 9C       		.byte	0x9c
 2275 08e1 06090000 		.4byte	0x906
 2276 08e5 1B       		.uleb128 0x1b
 2277 08e6 FC090000 		.4byte	.LASF34
 2278 08ea 01       		.byte	0x1
 2279 08eb 0A05     		.2byte	0x50a
 2280 08ed 83000000 		.4byte	0x83
 2281 08f1 66020000 		.4byte	.LLST18
 2282 08f5 17       		.uleb128 0x17
 2283 08f6 590A0000 		.4byte	.LASF95
 2284 08fa 01       		.byte	0x1
 2285 08fb 0D05     		.2byte	0x50d
 2286 08fd 83000000 		.4byte	0x83
 2287 0901 94020000 		.4byte	.LLST19
 2288 0905 00       		.byte	0
 2289 0906 1E       		.uleb128 0x1e
 2290 0907 07080000 		.4byte	.LASF119
 2291 090b 01       		.byte	0x1
 2292 090c 5E05     		.2byte	0x55e
 2293 090e 00000000 		.4byte	.LFB14
 2294 0912 12000000 		.4byte	.LFE14-.LFB14
 2295 0916 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 94


 2296 0917 9C       		.byte	0x9c
 2297 0918 62090000 		.4byte	0x962
 2298 091c 1B       		.uleb128 0x1b
 2299 091d FC090000 		.4byte	.LASF34
 2300 0921 01       		.byte	0x1
 2301 0922 5E05     		.2byte	0x55e
 2302 0924 83000000 		.4byte	0x83
 2303 0928 BD020000 		.4byte	.LLST20
 2304 092c 1B       		.uleb128 0x1b
 2305 092d BC040000 		.4byte	.LASF117
 2306 0931 01       		.byte	0x1
 2307 0932 5E05     		.2byte	0x55e
 2308 0934 83000000 		.4byte	0x83
 2309 0938 E9020000 		.4byte	.LLST21
 2310 093c 1C       		.uleb128 0x1c
 2311 093d 0A000000 		.4byte	.LVL67
 2312 0941 A8080000 		.4byte	0x8a8
 2313 0945 51090000 		.4byte	0x951
 2314 0949 1D       		.uleb128 0x1d
 2315 094a 01       		.uleb128 0x1
 2316 094b 50       		.byte	0x50
 2317 094c 03       		.uleb128 0x3
 2318 094d F3       		.byte	0xf3
 2319 094e 01       		.uleb128 0x1
 2320 094f 51       		.byte	0x51
 2321 0950 00       		.byte	0
 2322 0951 1F       		.uleb128 0x1f
 2323 0952 10000000 		.4byte	.LVL68
 2324 0956 CF080000 		.4byte	0x8cf
 2325 095a 1D       		.uleb128 0x1d
 2326 095b 01       		.uleb128 0x1
 2327 095c 50       		.byte	0x50
 2328 095d 02       		.uleb128 0x2
 2329 095e 74       		.byte	0x74
 2330 095f 00       		.sleb128 0
 2331 0960 00       		.byte	0
 2332 0961 00       		.byte	0
 2333 0962 1A       		.uleb128 0x1a
 2334 0963 98010000 		.4byte	.LASF120
 2335 0967 01       		.byte	0x1
 2336 0968 9205     		.2byte	0x592
 2337 096a A4000000 		.4byte	0xa4
 2338 096e 00000000 		.4byte	.LFB15
 2339 0972 1A000000 		.4byte	.LFE15-.LFB15
 2340 0976 01       		.uleb128 0x1
 2341 0977 9C       		.byte	0x9c
 2342 0978 B4090000 		.4byte	0x9b4
 2343 097c 1B       		.uleb128 0x1b
 2344 097d ED0A0000 		.4byte	.LASF96
 2345 0981 01       		.byte	0x1
 2346 0982 9205     		.2byte	0x592
 2347 0984 83000000 		.4byte	0x83
 2348 0988 0A030000 		.4byte	.LLST22
 2349 098c 17       		.uleb128 0x17
 2350 098d DF050000 		.4byte	.LASF121
 2351 0991 01       		.byte	0x1
 2352 0992 9405     		.2byte	0x594
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 95


 2353 0994 A4000000 		.4byte	0xa4
 2354 0998 4C030000 		.4byte	.LLST23
 2355 099c 1F       		.uleb128 0x1f
 2356 099d 18000000 		.4byte	.LVL76
 2357 09a1 230D0000 		.4byte	0xd23
 2358 09a5 1D       		.uleb128 0x1d
 2359 09a6 01       		.uleb128 0x1
 2360 09a7 50       		.byte	0x50
 2361 09a8 03       		.uleb128 0x3
 2362 09a9 F3       		.byte	0xf3
 2363 09aa 01       		.uleb128 0x1
 2364 09ab 50       		.byte	0x50
 2365 09ac 1D       		.uleb128 0x1d
 2366 09ad 01       		.uleb128 0x1
 2367 09ae 51       		.byte	0x51
 2368 09af 02       		.uleb128 0x2
 2369 09b0 08       		.byte	0x8
 2370 09b1 55       		.byte	0x55
 2371 09b2 00       		.byte	0
 2372 09b3 00       		.byte	0
 2373 09b4 1A       		.uleb128 0x1a
 2374 09b5 5B090000 		.4byte	.LASF122
 2375 09b9 01       		.byte	0x1
 2376 09ba 0306     		.2byte	0x603
 2377 09bc A4000000 		.4byte	0xa4
 2378 09c0 00000000 		.4byte	.LFB16
 2379 09c4 1A000000 		.4byte	.LFE16-.LFB16
 2380 09c8 01       		.uleb128 0x1
 2381 09c9 9C       		.byte	0x9c
 2382 09ca FF090000 		.4byte	0x9ff
 2383 09ce 17       		.uleb128 0x17
 2384 09cf DF050000 		.4byte	.LASF121
 2385 09d3 01       		.byte	0x1
 2386 09d4 0506     		.2byte	0x605
 2387 09d6 A4000000 		.4byte	0xa4
 2388 09da 76030000 		.4byte	.LLST24
 2389 09de 17       		.uleb128 0x17
 2390 09df F2060000 		.4byte	.LASF89
 2391 09e3 01       		.byte	0x1
 2392 09e4 0606     		.2byte	0x606
 2393 09e6 83000000 		.4byte	0x83
 2394 09ea A0030000 		.4byte	.LLST25
 2395 09ee 1F       		.uleb128 0x1f
 2396 09ef 0E000000 		.4byte	.LVL79
 2397 09f3 62090000 		.4byte	0x962
 2398 09f7 1D       		.uleb128 0x1d
 2399 09f8 01       		.uleb128 0x1
 2400 09f9 50       		.byte	0x50
 2401 09fa 02       		.uleb128 0x2
 2402 09fb 74       		.byte	0x74
 2403 09fc 00       		.sleb128 0
 2404 09fd 00       		.byte	0
 2405 09fe 00       		.byte	0
 2406 09ff 1E       		.uleb128 0x1e
 2407 0a00 B8010000 		.4byte	.LASF123
 2408 0a04 01       		.byte	0x1
 2409 0a05 8908     		.2byte	0x889
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 96


 2410 0a07 00000000 		.4byte	.LFB17
 2411 0a0b 24000000 		.4byte	.LFE17-.LFB17
 2412 0a0f 01       		.uleb128 0x1
 2413 0a10 9C       		.byte	0x9c
 2414 0a11 460A0000 		.4byte	0xa46
 2415 0a15 17       		.uleb128 0x17
 2416 0a16 F2060000 		.4byte	.LASF89
 2417 0a1a 01       		.byte	0x1
 2418 0a1b 8B08     		.2byte	0x88b
 2419 0a1d 83000000 		.4byte	0x83
 2420 0a21 BF030000 		.4byte	.LLST26
 2421 0a25 17       		.uleb128 0x17
 2422 0a26 38020000 		.4byte	.LASF90
 2423 0a2a 01       		.byte	0x1
 2424 0a2b 8C08     		.2byte	0x88c
 2425 0a2d EE050000 		.4byte	0x5ee
 2426 0a31 DE030000 		.4byte	.LLST27
 2427 0a35 1F       		.uleb128 0x1f
 2428 0a36 18000000 		.4byte	.LVL87
 2429 0a3a A1050000 		.4byte	0x5a1
 2430 0a3e 1D       		.uleb128 0x1d
 2431 0a3f 01       		.uleb128 0x1
 2432 0a40 50       		.byte	0x50
 2433 0a41 02       		.uleb128 0x2
 2434 0a42 74       		.byte	0x74
 2435 0a43 00       		.sleb128 0
 2436 0a44 00       		.byte	0
 2437 0a45 00       		.byte	0
 2438 0a46 1A       		.uleb128 0x1a
 2439 0a47 E0000000 		.4byte	.LASF124
 2440 0a4b 01       		.byte	0x1
 2441 0a4c 0402     		.2byte	0x204
 2442 0a4e A4000000 		.4byte	0xa4
 2443 0a52 00000000 		.4byte	.LFB5
 2444 0a56 14000000 		.4byte	.LFE5-.LFB5
 2445 0a5a 01       		.uleb128 0x1
 2446 0a5b 9C       		.byte	0x9c
 2447 0a5c 8F0A0000 		.4byte	0xa8f
 2448 0a60 16       		.uleb128 0x16
 2449 0a61 23010000 		.4byte	.LASF125
 2450 0a65 01       		.byte	0x1
 2451 0a66 0602     		.2byte	0x206
 2452 0a68 A4000000 		.4byte	0xa4
 2453 0a6c 00       		.byte	0
 2454 0a6d 18       		.uleb128 0x18
 2455 0a6e 06000000 		.4byte	.LVL91
 2456 0a72 FF090000 		.4byte	0x9ff
 2457 0a76 18       		.uleb128 0x18
 2458 0a77 0A000000 		.4byte	.LVL92
 2459 0a7b 17080000 		.4byte	0x817
 2460 0a7f 1F       		.uleb128 0x1f
 2461 0a80 10000000 		.4byte	.LVL93
 2462 0a84 DE070000 		.4byte	0x7de
 2463 0a88 1D       		.uleb128 0x1d
 2464 0a89 01       		.uleb128 0x1
 2465 0a8a 50       		.byte	0x50
 2466 0a8b 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 97


 2467 0a8c 31       		.byte	0x31
 2468 0a8d 00       		.byte	0
 2469 0a8e 00       		.byte	0
 2470 0a8f 1E       		.uleb128 0x1e
 2471 0a90 650A0000 		.4byte	.LASF126
 2472 0a94 01       		.byte	0x1
 2473 0a95 060A     		.2byte	0xa06
 2474 0a97 00000000 		.4byte	.LFB19
 2475 0a9b 40000000 		.4byte	.LFE19-.LFB19
 2476 0a9f 01       		.uleb128 0x1
 2477 0aa0 9C       		.byte	0x9c
 2478 0aa1 F00A0000 		.4byte	0xaf0
 2479 0aa5 17       		.uleb128 0x17
 2480 0aa6 F2060000 		.4byte	.LASF89
 2481 0aaa 01       		.byte	0x1
 2482 0aab 080A     		.2byte	0xa08
 2483 0aad 83000000 		.4byte	0x83
 2484 0ab1 F1030000 		.4byte	.LLST28
 2485 0ab5 17       		.uleb128 0x17
 2486 0ab6 FC060000 		.4byte	.LASF127
 2487 0aba 01       		.byte	0x1
 2488 0abb 090A     		.2byte	0xa09
 2489 0abd 83000000 		.4byte	0x83
 2490 0ac1 10040000 		.4byte	.LLST29
 2491 0ac5 17       		.uleb128 0x17
 2492 0ac6 F0090000 		.4byte	.LASF128
 2493 0aca 01       		.byte	0x1
 2494 0acb 150A     		.2byte	0xa15
 2495 0acd D3070000 		.4byte	0x7d3
 2496 0ad1 2F040000 		.4byte	.LLST30
 2497 0ad5 1F       		.uleb128 0x1f
 2498 0ad6 20000000 		.4byte	.LVL98
 2499 0ada 2F0D0000 		.4byte	0xd2f
 2500 0ade 1D       		.uleb128 0x1d
 2501 0adf 01       		.uleb128 0x1
 2502 0ae0 50       		.byte	0x50
 2503 0ae1 0C       		.uleb128 0xc
 2504 0ae2 74       		.byte	0x74
 2505 0ae3 00       		.sleb128 0
 2506 0ae4 33       		.byte	0x33
 2507 0ae5 24       		.byte	0x24
 2508 0ae6 74       		.byte	0x74
 2509 0ae7 00       		.sleb128 0
 2510 0ae8 1C       		.byte	0x1c
 2511 0ae9 32       		.byte	0x32
 2512 0aea 24       		.byte	0x24
 2513 0aeb 76       		.byte	0x76
 2514 0aec 00       		.sleb128 0
 2515 0aed 22       		.byte	0x22
 2516 0aee 00       		.byte	0
 2517 0aef 00       		.byte	0
 2518 0af0 1A       		.uleb128 0x1a
 2519 0af1 C3040000 		.4byte	.LASF129
 2520 0af5 01       		.byte	0x1
 2521 0af6 580A     		.2byte	0xa58
 2522 0af8 83000000 		.4byte	0x83
 2523 0afc 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 98


 2524 0b00 14000000 		.4byte	.LFE20-.LFB20
 2525 0b04 01       		.uleb128 0x1
 2526 0b05 9C       		.byte	0x9c
 2527 0b06 370B0000 		.4byte	0xb37
 2528 0b0a 1B       		.uleb128 0x1b
 2529 0b0b ED0A0000 		.4byte	.LASF96
 2530 0b0f 01       		.byte	0x1
 2531 0b10 580A     		.2byte	0xa58
 2532 0b12 83000000 		.4byte	0x83
 2533 0b16 42040000 		.4byte	.LLST31
 2534 0b1a 22       		.uleb128 0x22
 2535 0b1b 0C090000 		.4byte	.LASF130
 2536 0b1f 01       		.byte	0x1
 2537 0b20 5A0A     		.2byte	0xa5a
 2538 0b22 83000000 		.4byte	0x83
 2539 0b26 01       		.uleb128 0x1
 2540 0b27 50       		.byte	0x50
 2541 0b28 22       		.uleb128 0x22
 2542 0b29 38020000 		.4byte	.LASF90
 2543 0b2d 01       		.byte	0x1
 2544 0b2e 5E0A     		.2byte	0xa5e
 2545 0b30 EE050000 		.4byte	0x5ee
 2546 0b34 01       		.uleb128 0x1
 2547 0b35 53       		.byte	0x53
 2548 0b36 00       		.byte	0
 2549 0b37 1E       		.uleb128 0x1e
 2550 0b38 CF070000 		.4byte	.LASF131
 2551 0b3c 01       		.byte	0x1
 2552 0b3d 820A     		.2byte	0xa82
 2553 0b3f 00000000 		.4byte	.LFB21
 2554 0b43 14000000 		.4byte	.LFE21-.LFB21
 2555 0b47 01       		.uleb128 0x1
 2556 0b48 9C       		.byte	0x9c
 2557 0b49 7A0B0000 		.4byte	0xb7a
 2558 0b4d 1B       		.uleb128 0x1b
 2559 0b4e ED0A0000 		.4byte	.LASF96
 2560 0b52 01       		.byte	0x1
 2561 0b53 820A     		.2byte	0xa82
 2562 0b55 83000000 		.4byte	0x83
 2563 0b59 63040000 		.4byte	.LLST32
 2564 0b5d 15       		.uleb128 0x15
 2565 0b5e 8D010000 		.4byte	.LASF132
 2566 0b62 01       		.byte	0x1
 2567 0b63 820A     		.2byte	0xa82
 2568 0b65 83000000 		.4byte	0x83
 2569 0b69 01       		.uleb128 0x1
 2570 0b6a 51       		.byte	0x51
 2571 0b6b 22       		.uleb128 0x22
 2572 0b6c 38020000 		.4byte	.LASF90
 2573 0b70 01       		.byte	0x1
 2574 0b71 860A     		.2byte	0xa86
 2575 0b73 EE050000 		.4byte	0x5ee
 2576 0b77 01       		.uleb128 0x1
 2577 0b78 53       		.byte	0x53
 2578 0b79 00       		.byte	0
 2579 0b7a 1E       		.uleb128 0x1e
 2580 0b7b 0E000000 		.4byte	.LASF133
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 99


 2581 0b7f 01       		.byte	0x1
 2582 0b80 060B     		.2byte	0xb06
 2583 0b82 00000000 		.4byte	.LFB22
 2584 0b86 60000000 		.4byte	.LFE22-.LFB22
 2585 0b8a 01       		.uleb128 0x1
 2586 0b8b 9C       		.byte	0x9c
 2587 0b8c 0C0C0000 		.4byte	0xc0c
 2588 0b90 17       		.uleb128 0x17
 2589 0b91 590A0000 		.4byte	.LASF95
 2590 0b95 01       		.byte	0x1
 2591 0b96 080B     		.2byte	0xb08
 2592 0b98 83000000 		.4byte	0x83
 2593 0b9c 84040000 		.4byte	.LLST33
 2594 0ba0 17       		.uleb128 0x17
 2595 0ba1 49010000 		.4byte	.LASF106
 2596 0ba5 01       		.byte	0x1
 2597 0ba6 090B     		.2byte	0xb09
 2598 0ba8 6B000000 		.4byte	0x6b
 2599 0bac B8040000 		.4byte	.LLST34
 2600 0bb0 18       		.uleb128 0x18
 2601 0bb1 06000000 		.4byte	.LVL109
 2602 0bb5 EA0C0000 		.4byte	0xcea
 2603 0bb9 18       		.uleb128 0x18
 2604 0bba 14000000 		.4byte	.LVL112
 2605 0bbe F50C0000 		.4byte	0xcf5
 2606 0bc2 18       		.uleb128 0x18
 2607 0bc3 18000000 		.4byte	.LVL113
 2608 0bc7 EA0C0000 		.4byte	0xcea
 2609 0bcb 18       		.uleb128 0x18
 2610 0bcc 26000000 		.4byte	.LVL116
 2611 0bd0 F50C0000 		.4byte	0xcf5
 2612 0bd4 18       		.uleb128 0x18
 2613 0bd5 2A000000 		.4byte	.LVL117
 2614 0bd9 EA0C0000 		.4byte	0xcea
 2615 0bdd 18       		.uleb128 0x18
 2616 0bde 3C000000 		.4byte	.LVL121
 2617 0be2 F50C0000 		.4byte	0xcf5
 2618 0be6 1C       		.uleb128 0x1c
 2619 0be7 42000000 		.4byte	.LVL122
 2620 0beb 3B0D0000 		.4byte	0xd3b
 2621 0bef F90B0000 		.4byte	0xbf9
 2622 0bf3 1D       		.uleb128 0x1d
 2623 0bf4 01       		.uleb128 0x1
 2624 0bf5 50       		.byte	0x50
 2625 0bf6 01       		.uleb128 0x1
 2626 0bf7 31       		.byte	0x31
 2627 0bf8 00       		.byte	0
 2628 0bf9 18       		.uleb128 0x18
 2629 0bfa 46000000 		.4byte	.LVL123
 2630 0bfe EA0C0000 		.4byte	0xcea
 2631 0c02 18       		.uleb128 0x18
 2632 0c03 50000000 		.4byte	.LVL126
 2633 0c07 F50C0000 		.4byte	0xcf5
 2634 0c0b 00       		.byte	0
 2635 0c0c 23       		.uleb128 0x23
 2636 0c0d 05070000 		.4byte	.LASF134
 2637 0c11 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 100


 2638 0c12 0D04     		.2byte	0x40d
 2639 0c14 2A040000 		.4byte	0x42a
 2640 0c18 23       		.uleb128 0x23
 2641 0c19 25080000 		.4byte	.LASF135
 2642 0c1d 04       		.byte	0x4
 2643 0c1e 0E04     		.2byte	0x40e
 2644 0c20 240C0000 		.4byte	0xc24
 2645 0c24 20       		.uleb128 0x20
 2646 0c25 8E050000 		.4byte	0x58e
 2647 0c29 0D       		.uleb128 0xd
 2648 0c2a D9070000 		.4byte	0x7d9
 2649 0c2e 390C0000 		.4byte	0xc39
 2650 0c32 0E       		.uleb128 0xe
 2651 0c33 B8010000 		.4byte	0x1b8
 2652 0c37 00       		.byte	0
 2653 0c38 00       		.byte	0
 2654 0c39 23       		.uleb128 0x23
 2655 0c3a 37010000 		.4byte	.LASF136
 2656 0c3e 04       		.byte	0x4
 2657 0c3f 0F04     		.2byte	0x40f
 2658 0c41 450C0000 		.4byte	0xc45
 2659 0c45 20       		.uleb128 0x20
 2660 0c46 290C0000 		.4byte	0xc29
 2661 0c4a 24       		.uleb128 0x24
 2662 0c4b 160B0000 		.4byte	.LASF137
 2663 0c4f 01       		.byte	0x1
 2664 0c50 BB       		.byte	0xbb
 2665 0c51 B0000000 		.4byte	0xb0
 2666 0c55 05       		.uleb128 0x5
 2667 0c56 03       		.byte	0x3
 2668 0c57 00000000 		.4byte	CapSense_1_widgetIndex
 2669 0c5b 24       		.uleb128 0x24
 2670 0c5c BD080000 		.4byte	.LASF138
 2671 0c60 01       		.byte	0x1
 2672 0c61 BC       		.byte	0xbc
 2673 0c62 B0000000 		.4byte	0xb0
 2674 0c66 05       		.uleb128 0x5
 2675 0c67 03       		.byte	0x3
 2676 0c68 00000000 		.4byte	CapSense_1_sensorIndex
 2677 0c6c 24       		.uleb128 0x24
 2678 0c6d 40020000 		.4byte	.LASF139
 2679 0c71 01       		.byte	0x1
 2680 0c72 BD       		.byte	0xbd
 2681 0c73 6B000000 		.4byte	0x6b
 2682 0c77 05       		.uleb128 0x5
 2683 0c78 03       		.byte	0x3
 2684 0c79 00000000 		.4byte	CapSense_1_requestScanAllWidget
 2685 0c7d 24       		.uleb128 0x24
 2686 0c7e 76000000 		.4byte	.LASF140
 2687 0c82 01       		.byte	0x1
 2688 0c83 C0       		.byte	0xc0
 2689 0c84 4F050000 		.4byte	0x54f
 2690 0c88 05       		.uleb128 0x5
 2691 0c89 03       		.byte	0x3
 2692 0c8a 00000000 		.4byte	CapSense_1_curRamSnsPtr
 2693 0c8e 24       		.uleb128 0x24
 2694 0c8f D2090000 		.4byte	.LASF141
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 101


 2695 0c93 01       		.byte	0x1
 2696 0c94 AE       		.byte	0xae
 2697 0c95 1C010000 		.4byte	0x11c
 2698 0c99 05       		.uleb128 0x5
 2699 0c9a 03       		.byte	0x3
 2700 0c9b 00000000 		.4byte	CapSense_1_currentSenseMethod
 2701 0c9f 24       		.uleb128 0x24
 2702 0ca0 DE010000 		.4byte	.LASF142
 2703 0ca4 01       		.byte	0x1
 2704 0ca5 B7       		.byte	0xb7
 2705 0ca6 B00C0000 		.4byte	0xcb0
 2706 0caa 05       		.uleb128 0x5
 2707 0cab 03       		.byte	0x3
 2708 0cac 00000000 		.4byte	CapSense_1_scanFreqIndex
 2709 0cb0 20       		.uleb128 0x20
 2710 0cb1 6B000000 		.4byte	0x6b
 2711 0cb5 24       		.uleb128 0x24
 2712 0cb6 0C010000 		.4byte	.LASF143
 2713 0cba 01       		.byte	0x1
 2714 0cbb CF       		.byte	0xcf
 2715 0cbc D3070000 		.4byte	0x7d3
 2716 0cc0 05       		.uleb128 0x5
 2717 0cc1 03       		.byte	0x3
 2718 0cc2 00000000 		.4byte	CapSense_1_curSnsIOPtr
 2719 0cc6 25       		.uleb128 0x25
 2720 0cc7 33090000 		.4byte	.LASF144
 2721 0ccb 33090000 		.4byte	.LASF144
 2722 0ccf 05       		.byte	0x5
 2723 0cd0 D401     		.2byte	0x1d4
 2724 0cd2 25       		.uleb128 0x25
 2725 0cd3 A3080000 		.4byte	.LASF145
 2726 0cd7 A3080000 		.4byte	.LASF145
 2727 0cdb 05       		.byte	0x5
 2728 0cdc B701     		.2byte	0x1b7
 2729 0cde 25       		.uleb128 0x25
 2730 0cdf 9E000000 		.4byte	.LASF146
 2731 0ce3 9E000000 		.4byte	.LASF146
 2732 0ce7 05       		.byte	0x5
 2733 0ce8 B901     		.2byte	0x1b9
 2734 0cea 26       		.uleb128 0x26
 2735 0ceb 030A0000 		.4byte	.LASF147
 2736 0cef 030A0000 		.4byte	.LASF147
 2737 0cf3 06       		.byte	0x6
 2738 0cf4 E5       		.byte	0xe5
 2739 0cf5 26       		.uleb128 0x26
 2740 0cf6 13050000 		.4byte	.LASF148
 2741 0cfa 13050000 		.4byte	.LASF148
 2742 0cfe 06       		.byte	0x6
 2743 0cff E6       		.byte	0xe6
 2744 0d00 25       		.uleb128 0x25
 2745 0d01 74010000 		.4byte	.LASF149
 2746 0d05 74010000 		.4byte	.LASF149
 2747 0d09 05       		.byte	0x5
 2748 0d0a C001     		.2byte	0x1c0
 2749 0d0c 25       		.uleb128 0x25
 2750 0d0d F7010000 		.4byte	.LASF150
 2751 0d11 F7010000 		.4byte	.LASF150
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 102


 2752 0d15 05       		.byte	0x5
 2753 0d16 D001     		.2byte	0x1d0
 2754 0d18 26       		.uleb128 0x26
 2755 0d19 AE030000 		.4byte	.LASF151
 2756 0d1d AE030000 		.4byte	.LASF151
 2757 0d21 07       		.byte	0x7
 2758 0d22 18       		.byte	0x18
 2759 0d23 25       		.uleb128 0x25
 2760 0d24 72080000 		.4byte	.LASF152
 2761 0d28 72080000 		.4byte	.LASF152
 2762 0d2c 05       		.byte	0x5
 2763 0d2d BD01     		.2byte	0x1bd
 2764 0d2f 25       		.uleb128 0x25
 2765 0d30 A9070000 		.4byte	.LASF153
 2766 0d34 A9070000 		.4byte	.LASF153
 2767 0d38 05       		.byte	0x5
 2768 0d39 C101     		.2byte	0x1c1
 2769 0d3b 26       		.uleb128 0x26
 2770 0d3c 1F030000 		.4byte	.LASF154
 2771 0d40 1F030000 		.4byte	.LASF154
 2772 0d44 06       		.byte	0x6
 2773 0d45 DA       		.byte	0xda
 2774 0d46 00       		.byte	0
 2775              		.section	.debug_abbrev,"",%progbits
 2776              	.Ldebug_abbrev0:
 2777 0000 01       		.uleb128 0x1
 2778 0001 11       		.uleb128 0x11
 2779 0002 01       		.byte	0x1
 2780 0003 25       		.uleb128 0x25
 2781 0004 0E       		.uleb128 0xe
 2782 0005 13       		.uleb128 0x13
 2783 0006 0B       		.uleb128 0xb
 2784 0007 03       		.uleb128 0x3
 2785 0008 0E       		.uleb128 0xe
 2786 0009 1B       		.uleb128 0x1b
 2787 000a 0E       		.uleb128 0xe
 2788 000b 55       		.uleb128 0x55
 2789 000c 17       		.uleb128 0x17
 2790 000d 11       		.uleb128 0x11
 2791 000e 01       		.uleb128 0x1
 2792 000f 10       		.uleb128 0x10
 2793 0010 17       		.uleb128 0x17
 2794 0011 00       		.byte	0
 2795 0012 00       		.byte	0
 2796 0013 02       		.uleb128 0x2
 2797 0014 24       		.uleb128 0x24
 2798 0015 00       		.byte	0
 2799 0016 0B       		.uleb128 0xb
 2800 0017 0B       		.uleb128 0xb
 2801 0018 3E       		.uleb128 0x3e
 2802 0019 0B       		.uleb128 0xb
 2803 001a 03       		.uleb128 0x3
 2804 001b 0E       		.uleb128 0xe
 2805 001c 00       		.byte	0
 2806 001d 00       		.byte	0
 2807 001e 03       		.uleb128 0x3
 2808 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 103


 2809 0020 00       		.byte	0
 2810 0021 0B       		.uleb128 0xb
 2811 0022 0B       		.uleb128 0xb
 2812 0023 3E       		.uleb128 0x3e
 2813 0024 0B       		.uleb128 0xb
 2814 0025 03       		.uleb128 0x3
 2815 0026 08       		.uleb128 0x8
 2816 0027 00       		.byte	0
 2817 0028 00       		.byte	0
 2818 0029 04       		.uleb128 0x4
 2819 002a 16       		.uleb128 0x16
 2820 002b 00       		.byte	0
 2821 002c 03       		.uleb128 0x3
 2822 002d 0E       		.uleb128 0xe
 2823 002e 3A       		.uleb128 0x3a
 2824 002f 0B       		.uleb128 0xb
 2825 0030 3B       		.uleb128 0x3b
 2826 0031 05       		.uleb128 0x5
 2827 0032 49       		.uleb128 0x49
 2828 0033 13       		.uleb128 0x13
 2829 0034 00       		.byte	0
 2830 0035 00       		.byte	0
 2831 0036 05       		.uleb128 0x5
 2832 0037 35       		.uleb128 0x35
 2833 0038 00       		.byte	0
 2834 0039 49       		.uleb128 0x49
 2835 003a 13       		.uleb128 0x13
 2836 003b 00       		.byte	0
 2837 003c 00       		.byte	0
 2838 003d 06       		.uleb128 0x6
 2839 003e 0F       		.uleb128 0xf
 2840 003f 00       		.byte	0
 2841 0040 0B       		.uleb128 0xb
 2842 0041 0B       		.uleb128 0xb
 2843 0042 49       		.uleb128 0x49
 2844 0043 13       		.uleb128 0x13
 2845 0044 00       		.byte	0
 2846 0045 00       		.byte	0
 2847 0046 07       		.uleb128 0x7
 2848 0047 15       		.uleb128 0x15
 2849 0048 00       		.byte	0
 2850 0049 27       		.uleb128 0x27
 2851 004a 19       		.uleb128 0x19
 2852 004b 00       		.byte	0
 2853 004c 00       		.byte	0
 2854 004d 08       		.uleb128 0x8
 2855 004e 04       		.uleb128 0x4
 2856 004f 01       		.byte	0x1
 2857 0050 0B       		.uleb128 0xb
 2858 0051 0B       		.uleb128 0xb
 2859 0052 49       		.uleb128 0x49
 2860 0053 13       		.uleb128 0x13
 2861 0054 3A       		.uleb128 0x3a
 2862 0055 0B       		.uleb128 0xb
 2863 0056 3B       		.uleb128 0x3b
 2864 0057 0B       		.uleb128 0xb
 2865 0058 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 104


 2866 0059 13       		.uleb128 0x13
 2867 005a 00       		.byte	0
 2868 005b 00       		.byte	0
 2869 005c 09       		.uleb128 0x9
 2870 005d 28       		.uleb128 0x28
 2871 005e 00       		.byte	0
 2872 005f 03       		.uleb128 0x3
 2873 0060 0E       		.uleb128 0xe
 2874 0061 1C       		.uleb128 0x1c
 2875 0062 0B       		.uleb128 0xb
 2876 0063 00       		.byte	0
 2877 0064 00       		.byte	0
 2878 0065 0A       		.uleb128 0xa
 2879 0066 16       		.uleb128 0x16
 2880 0067 00       		.byte	0
 2881 0068 03       		.uleb128 0x3
 2882 0069 0E       		.uleb128 0xe
 2883 006a 3A       		.uleb128 0x3a
 2884 006b 0B       		.uleb128 0xb
 2885 006c 3B       		.uleb128 0x3b
 2886 006d 0B       		.uleb128 0xb
 2887 006e 49       		.uleb128 0x49
 2888 006f 13       		.uleb128 0x13
 2889 0070 00       		.byte	0
 2890 0071 00       		.byte	0
 2891 0072 0B       		.uleb128 0xb
 2892 0073 13       		.uleb128 0x13
 2893 0074 01       		.byte	0x1
 2894 0075 0B       		.uleb128 0xb
 2895 0076 0B       		.uleb128 0xb
 2896 0077 3A       		.uleb128 0x3a
 2897 0078 0B       		.uleb128 0xb
 2898 0079 3B       		.uleb128 0x3b
 2899 007a 0B       		.uleb128 0xb
 2900 007b 01       		.uleb128 0x1
 2901 007c 13       		.uleb128 0x13
 2902 007d 00       		.byte	0
 2903 007e 00       		.byte	0
 2904 007f 0C       		.uleb128 0xc
 2905 0080 0D       		.uleb128 0xd
 2906 0081 00       		.byte	0
 2907 0082 03       		.uleb128 0x3
 2908 0083 0E       		.uleb128 0xe
 2909 0084 3A       		.uleb128 0x3a
 2910 0085 0B       		.uleb128 0xb
 2911 0086 3B       		.uleb128 0x3b
 2912 0087 0B       		.uleb128 0xb
 2913 0088 49       		.uleb128 0x49
 2914 0089 13       		.uleb128 0x13
 2915 008a 38       		.uleb128 0x38
 2916 008b 0B       		.uleb128 0xb
 2917 008c 00       		.byte	0
 2918 008d 00       		.byte	0
 2919 008e 0D       		.uleb128 0xd
 2920 008f 01       		.uleb128 0x1
 2921 0090 01       		.byte	0x1
 2922 0091 49       		.uleb128 0x49
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 105


 2923 0092 13       		.uleb128 0x13
 2924 0093 01       		.uleb128 0x1
 2925 0094 13       		.uleb128 0x13
 2926 0095 00       		.byte	0
 2927 0096 00       		.byte	0
 2928 0097 0E       		.uleb128 0xe
 2929 0098 21       		.uleb128 0x21
 2930 0099 00       		.byte	0
 2931 009a 49       		.uleb128 0x49
 2932 009b 13       		.uleb128 0x13
 2933 009c 2F       		.uleb128 0x2f
 2934 009d 0B       		.uleb128 0xb
 2935 009e 00       		.byte	0
 2936 009f 00       		.byte	0
 2937 00a0 0F       		.uleb128 0xf
 2938 00a1 0D       		.uleb128 0xd
 2939 00a2 00       		.byte	0
 2940 00a3 03       		.uleb128 0x3
 2941 00a4 0E       		.uleb128 0xe
 2942 00a5 3A       		.uleb128 0x3a
 2943 00a6 0B       		.uleb128 0xb
 2944 00a7 3B       		.uleb128 0x3b
 2945 00a8 05       		.uleb128 0x5
 2946 00a9 49       		.uleb128 0x49
 2947 00aa 13       		.uleb128 0x13
 2948 00ab 38       		.uleb128 0x38
 2949 00ac 0B       		.uleb128 0xb
 2950 00ad 00       		.byte	0
 2951 00ae 00       		.byte	0
 2952 00af 10       		.uleb128 0x10
 2953 00b0 13       		.uleb128 0x13
 2954 00b1 01       		.byte	0x1
 2955 00b2 0B       		.uleb128 0xb
 2956 00b3 0B       		.uleb128 0xb
 2957 00b4 3A       		.uleb128 0x3a
 2958 00b5 0B       		.uleb128 0xb
 2959 00b6 3B       		.uleb128 0x3b
 2960 00b7 05       		.uleb128 0x5
 2961 00b8 01       		.uleb128 0x1
 2962 00b9 13       		.uleb128 0x13
 2963 00ba 00       		.byte	0
 2964 00bb 00       		.byte	0
 2965 00bc 11       		.uleb128 0x11
 2966 00bd 0D       		.uleb128 0xd
 2967 00be 00       		.byte	0
 2968 00bf 03       		.uleb128 0x3
 2969 00c0 08       		.uleb128 0x8
 2970 00c1 3A       		.uleb128 0x3a
 2971 00c2 0B       		.uleb128 0xb
 2972 00c3 3B       		.uleb128 0x3b
 2973 00c4 05       		.uleb128 0x5
 2974 00c5 49       		.uleb128 0x49
 2975 00c6 13       		.uleb128 0x13
 2976 00c7 38       		.uleb128 0x38
 2977 00c8 0B       		.uleb128 0xb
 2978 00c9 00       		.byte	0
 2979 00ca 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 106


 2980 00cb 12       		.uleb128 0x12
 2981 00cc 26       		.uleb128 0x26
 2982 00cd 00       		.byte	0
 2983 00ce 00       		.byte	0
 2984 00cf 00       		.byte	0
 2985 00d0 13       		.uleb128 0x13
 2986 00d1 0F       		.uleb128 0xf
 2987 00d2 00       		.byte	0
 2988 00d3 0B       		.uleb128 0xb
 2989 00d4 0B       		.uleb128 0xb
 2990 00d5 00       		.byte	0
 2991 00d6 00       		.byte	0
 2992 00d7 14       		.uleb128 0x14
 2993 00d8 2E       		.uleb128 0x2e
 2994 00d9 01       		.byte	0x1
 2995 00da 03       		.uleb128 0x3
 2996 00db 0E       		.uleb128 0xe
 2997 00dc 3A       		.uleb128 0x3a
 2998 00dd 0B       		.uleb128 0xb
 2999 00de 3B       		.uleb128 0x3b
 3000 00df 05       		.uleb128 0x5
 3001 00e0 27       		.uleb128 0x27
 3002 00e1 19       		.uleb128 0x19
 3003 00e2 11       		.uleb128 0x11
 3004 00e3 01       		.uleb128 0x1
 3005 00e4 12       		.uleb128 0x12
 3006 00e5 06       		.uleb128 0x6
 3007 00e6 40       		.uleb128 0x40
 3008 00e7 18       		.uleb128 0x18
 3009 00e8 9742     		.uleb128 0x2117
 3010 00ea 19       		.uleb128 0x19
 3011 00eb 01       		.uleb128 0x1
 3012 00ec 13       		.uleb128 0x13
 3013 00ed 00       		.byte	0
 3014 00ee 00       		.byte	0
 3015 00ef 15       		.uleb128 0x15
 3016 00f0 05       		.uleb128 0x5
 3017 00f1 00       		.byte	0
 3018 00f2 03       		.uleb128 0x3
 3019 00f3 0E       		.uleb128 0xe
 3020 00f4 3A       		.uleb128 0x3a
 3021 00f5 0B       		.uleb128 0xb
 3022 00f6 3B       		.uleb128 0x3b
 3023 00f7 05       		.uleb128 0x5
 3024 00f8 49       		.uleb128 0x49
 3025 00f9 13       		.uleb128 0x13
 3026 00fa 02       		.uleb128 0x2
 3027 00fb 18       		.uleb128 0x18
 3028 00fc 00       		.byte	0
 3029 00fd 00       		.byte	0
 3030 00fe 16       		.uleb128 0x16
 3031 00ff 34       		.uleb128 0x34
 3032 0100 00       		.byte	0
 3033 0101 03       		.uleb128 0x3
 3034 0102 0E       		.uleb128 0xe
 3035 0103 3A       		.uleb128 0x3a
 3036 0104 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 107


 3037 0105 3B       		.uleb128 0x3b
 3038 0106 05       		.uleb128 0x5
 3039 0107 49       		.uleb128 0x49
 3040 0108 13       		.uleb128 0x13
 3041 0109 1C       		.uleb128 0x1c
 3042 010a 0B       		.uleb128 0xb
 3043 010b 00       		.byte	0
 3044 010c 00       		.byte	0
 3045 010d 17       		.uleb128 0x17
 3046 010e 34       		.uleb128 0x34
 3047 010f 00       		.byte	0
 3048 0110 03       		.uleb128 0x3
 3049 0111 0E       		.uleb128 0xe
 3050 0112 3A       		.uleb128 0x3a
 3051 0113 0B       		.uleb128 0xb
 3052 0114 3B       		.uleb128 0x3b
 3053 0115 05       		.uleb128 0x5
 3054 0116 49       		.uleb128 0x49
 3055 0117 13       		.uleb128 0x13
 3056 0118 02       		.uleb128 0x2
 3057 0119 17       		.uleb128 0x17
 3058 011a 00       		.byte	0
 3059 011b 00       		.byte	0
 3060 011c 18       		.uleb128 0x18
 3061 011d 898201   		.uleb128 0x4109
 3062 0120 00       		.byte	0
 3063 0121 11       		.uleb128 0x11
 3064 0122 01       		.uleb128 0x1
 3065 0123 31       		.uleb128 0x31
 3066 0124 13       		.uleb128 0x13
 3067 0125 00       		.byte	0
 3068 0126 00       		.byte	0
 3069 0127 19       		.uleb128 0x19
 3070 0128 2E       		.uleb128 0x2e
 3071 0129 00       		.byte	0
 3072 012a 3F       		.uleb128 0x3f
 3073 012b 19       		.uleb128 0x19
 3074 012c 03       		.uleb128 0x3
 3075 012d 0E       		.uleb128 0xe
 3076 012e 3A       		.uleb128 0x3a
 3077 012f 0B       		.uleb128 0xb
 3078 0130 3B       		.uleb128 0x3b
 3079 0131 0B       		.uleb128 0xb
 3080 0132 27       		.uleb128 0x27
 3081 0133 19       		.uleb128 0x19
 3082 0134 49       		.uleb128 0x49
 3083 0135 13       		.uleb128 0x13
 3084 0136 11       		.uleb128 0x11
 3085 0137 01       		.uleb128 0x1
 3086 0138 12       		.uleb128 0x12
 3087 0139 06       		.uleb128 0x6
 3088 013a 40       		.uleb128 0x40
 3089 013b 18       		.uleb128 0x18
 3090 013c 9742     		.uleb128 0x2117
 3091 013e 19       		.uleb128 0x19
 3092 013f 00       		.byte	0
 3093 0140 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 108


 3094 0141 1A       		.uleb128 0x1a
 3095 0142 2E       		.uleb128 0x2e
 3096 0143 01       		.byte	0x1
 3097 0144 3F       		.uleb128 0x3f
 3098 0145 19       		.uleb128 0x19
 3099 0146 03       		.uleb128 0x3
 3100 0147 0E       		.uleb128 0xe
 3101 0148 3A       		.uleb128 0x3a
 3102 0149 0B       		.uleb128 0xb
 3103 014a 3B       		.uleb128 0x3b
 3104 014b 05       		.uleb128 0x5
 3105 014c 27       		.uleb128 0x27
 3106 014d 19       		.uleb128 0x19
 3107 014e 49       		.uleb128 0x49
 3108 014f 13       		.uleb128 0x13
 3109 0150 11       		.uleb128 0x11
 3110 0151 01       		.uleb128 0x1
 3111 0152 12       		.uleb128 0x12
 3112 0153 06       		.uleb128 0x6
 3113 0154 40       		.uleb128 0x40
 3114 0155 18       		.uleb128 0x18
 3115 0156 9742     		.uleb128 0x2117
 3116 0158 19       		.uleb128 0x19
 3117 0159 01       		.uleb128 0x1
 3118 015a 13       		.uleb128 0x13
 3119 015b 00       		.byte	0
 3120 015c 00       		.byte	0
 3121 015d 1B       		.uleb128 0x1b
 3122 015e 05       		.uleb128 0x5
 3123 015f 00       		.byte	0
 3124 0160 03       		.uleb128 0x3
 3125 0161 0E       		.uleb128 0xe
 3126 0162 3A       		.uleb128 0x3a
 3127 0163 0B       		.uleb128 0xb
 3128 0164 3B       		.uleb128 0x3b
 3129 0165 05       		.uleb128 0x5
 3130 0166 49       		.uleb128 0x49
 3131 0167 13       		.uleb128 0x13
 3132 0168 02       		.uleb128 0x2
 3133 0169 17       		.uleb128 0x17
 3134 016a 00       		.byte	0
 3135 016b 00       		.byte	0
 3136 016c 1C       		.uleb128 0x1c
 3137 016d 898201   		.uleb128 0x4109
 3138 0170 01       		.byte	0x1
 3139 0171 11       		.uleb128 0x11
 3140 0172 01       		.uleb128 0x1
 3141 0173 31       		.uleb128 0x31
 3142 0174 13       		.uleb128 0x13
 3143 0175 01       		.uleb128 0x1
 3144 0176 13       		.uleb128 0x13
 3145 0177 00       		.byte	0
 3146 0178 00       		.byte	0
 3147 0179 1D       		.uleb128 0x1d
 3148 017a 8A8201   		.uleb128 0x410a
 3149 017d 00       		.byte	0
 3150 017e 02       		.uleb128 0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 109


 3151 017f 18       		.uleb128 0x18
 3152 0180 9142     		.uleb128 0x2111
 3153 0182 18       		.uleb128 0x18
 3154 0183 00       		.byte	0
 3155 0184 00       		.byte	0
 3156 0185 1E       		.uleb128 0x1e
 3157 0186 2E       		.uleb128 0x2e
 3158 0187 01       		.byte	0x1
 3159 0188 3F       		.uleb128 0x3f
 3160 0189 19       		.uleb128 0x19
 3161 018a 03       		.uleb128 0x3
 3162 018b 0E       		.uleb128 0xe
 3163 018c 3A       		.uleb128 0x3a
 3164 018d 0B       		.uleb128 0xb
 3165 018e 3B       		.uleb128 0x3b
 3166 018f 05       		.uleb128 0x5
 3167 0190 27       		.uleb128 0x27
 3168 0191 19       		.uleb128 0x19
 3169 0192 11       		.uleb128 0x11
 3170 0193 01       		.uleb128 0x1
 3171 0194 12       		.uleb128 0x12
 3172 0195 06       		.uleb128 0x6
 3173 0196 40       		.uleb128 0x40
 3174 0197 18       		.uleb128 0x18
 3175 0198 9742     		.uleb128 0x2117
 3176 019a 19       		.uleb128 0x19
 3177 019b 01       		.uleb128 0x1
 3178 019c 13       		.uleb128 0x13
 3179 019d 00       		.byte	0
 3180 019e 00       		.byte	0
 3181 019f 1F       		.uleb128 0x1f
 3182 01a0 898201   		.uleb128 0x4109
 3183 01a3 01       		.byte	0x1
 3184 01a4 11       		.uleb128 0x11
 3185 01a5 01       		.uleb128 0x1
 3186 01a6 31       		.uleb128 0x31
 3187 01a7 13       		.uleb128 0x13
 3188 01a8 00       		.byte	0
 3189 01a9 00       		.byte	0
 3190 01aa 20       		.uleb128 0x20
 3191 01ab 26       		.uleb128 0x26
 3192 01ac 00       		.byte	0
 3193 01ad 49       		.uleb128 0x49
 3194 01ae 13       		.uleb128 0x13
 3195 01af 00       		.byte	0
 3196 01b0 00       		.byte	0
 3197 01b1 21       		.uleb128 0x21
 3198 01b2 2E       		.uleb128 0x2e
 3199 01b3 00       		.byte	0
 3200 01b4 3F       		.uleb128 0x3f
 3201 01b5 19       		.uleb128 0x19
 3202 01b6 03       		.uleb128 0x3
 3203 01b7 0E       		.uleb128 0xe
 3204 01b8 3A       		.uleb128 0x3a
 3205 01b9 0B       		.uleb128 0xb
 3206 01ba 3B       		.uleb128 0x3b
 3207 01bb 05       		.uleb128 0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 110


 3208 01bc 27       		.uleb128 0x27
 3209 01bd 19       		.uleb128 0x19
 3210 01be 11       		.uleb128 0x11
 3211 01bf 01       		.uleb128 0x1
 3212 01c0 12       		.uleb128 0x12
 3213 01c1 06       		.uleb128 0x6
 3214 01c2 40       		.uleb128 0x40
 3215 01c3 18       		.uleb128 0x18
 3216 01c4 9742     		.uleb128 0x2117
 3217 01c6 19       		.uleb128 0x19
 3218 01c7 00       		.byte	0
 3219 01c8 00       		.byte	0
 3220 01c9 22       		.uleb128 0x22
 3221 01ca 34       		.uleb128 0x34
 3222 01cb 00       		.byte	0
 3223 01cc 03       		.uleb128 0x3
 3224 01cd 0E       		.uleb128 0xe
 3225 01ce 3A       		.uleb128 0x3a
 3226 01cf 0B       		.uleb128 0xb
 3227 01d0 3B       		.uleb128 0x3b
 3228 01d1 05       		.uleb128 0x5
 3229 01d2 49       		.uleb128 0x49
 3230 01d3 13       		.uleb128 0x13
 3231 01d4 02       		.uleb128 0x2
 3232 01d5 18       		.uleb128 0x18
 3233 01d6 00       		.byte	0
 3234 01d7 00       		.byte	0
 3235 01d8 23       		.uleb128 0x23
 3236 01d9 34       		.uleb128 0x34
 3237 01da 00       		.byte	0
 3238 01db 03       		.uleb128 0x3
 3239 01dc 0E       		.uleb128 0xe
 3240 01dd 3A       		.uleb128 0x3a
 3241 01de 0B       		.uleb128 0xb
 3242 01df 3B       		.uleb128 0x3b
 3243 01e0 05       		.uleb128 0x5
 3244 01e1 49       		.uleb128 0x49
 3245 01e2 13       		.uleb128 0x13
 3246 01e3 3F       		.uleb128 0x3f
 3247 01e4 19       		.uleb128 0x19
 3248 01e5 3C       		.uleb128 0x3c
 3249 01e6 19       		.uleb128 0x19
 3250 01e7 00       		.byte	0
 3251 01e8 00       		.byte	0
 3252 01e9 24       		.uleb128 0x24
 3253 01ea 34       		.uleb128 0x34
 3254 01eb 00       		.byte	0
 3255 01ec 03       		.uleb128 0x3
 3256 01ed 0E       		.uleb128 0xe
 3257 01ee 3A       		.uleb128 0x3a
 3258 01ef 0B       		.uleb128 0xb
 3259 01f0 3B       		.uleb128 0x3b
 3260 01f1 0B       		.uleb128 0xb
 3261 01f2 49       		.uleb128 0x49
 3262 01f3 13       		.uleb128 0x13
 3263 01f4 3F       		.uleb128 0x3f
 3264 01f5 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 111


 3265 01f6 02       		.uleb128 0x2
 3266 01f7 18       		.uleb128 0x18
 3267 01f8 00       		.byte	0
 3268 01f9 00       		.byte	0
 3269 01fa 25       		.uleb128 0x25
 3270 01fb 2E       		.uleb128 0x2e
 3271 01fc 00       		.byte	0
 3272 01fd 3F       		.uleb128 0x3f
 3273 01fe 19       		.uleb128 0x19
 3274 01ff 3C       		.uleb128 0x3c
 3275 0200 19       		.uleb128 0x19
 3276 0201 6E       		.uleb128 0x6e
 3277 0202 0E       		.uleb128 0xe
 3278 0203 03       		.uleb128 0x3
 3279 0204 0E       		.uleb128 0xe
 3280 0205 3A       		.uleb128 0x3a
 3281 0206 0B       		.uleb128 0xb
 3282 0207 3B       		.uleb128 0x3b
 3283 0208 05       		.uleb128 0x5
 3284 0209 00       		.byte	0
 3285 020a 00       		.byte	0
 3286 020b 26       		.uleb128 0x26
 3287 020c 2E       		.uleb128 0x2e
 3288 020d 00       		.byte	0
 3289 020e 3F       		.uleb128 0x3f
 3290 020f 19       		.uleb128 0x19
 3291 0210 3C       		.uleb128 0x3c
 3292 0211 19       		.uleb128 0x19
 3293 0212 6E       		.uleb128 0x6e
 3294 0213 0E       		.uleb128 0xe
 3295 0214 03       		.uleb128 0x3
 3296 0215 0E       		.uleb128 0xe
 3297 0216 3A       		.uleb128 0x3a
 3298 0217 0B       		.uleb128 0xb
 3299 0218 3B       		.uleb128 0x3b
 3300 0219 0B       		.uleb128 0xb
 3301 021a 00       		.byte	0
 3302 021b 00       		.byte	0
 3303 021c 00       		.byte	0
 3304              		.section	.debug_loc,"",%progbits
 3305              	.Ldebug_loc0:
 3306              	.LLST0:
 3307 0000 06000000 		.4byte	.LVL1
 3308 0004 19000000 		.4byte	.LVL5-1
 3309 0008 0100     		.2byte	0x1
 3310 000a 53       		.byte	0x53
 3311 000b 00000000 		.4byte	0
 3312 000f 00000000 		.4byte	0
 3313              	.LLST1:
 3314 0013 00000000 		.4byte	.LVL6
 3315 0017 37000000 		.4byte	.LVL8-1
 3316 001b 0100     		.2byte	0x1
 3317 001d 50       		.byte	0x50
 3318 001e 37000000 		.4byte	.LVL8-1
 3319 0022 40000000 		.4byte	.LFE2
 3320 0026 0400     		.2byte	0x4
 3321 0028 F3       		.byte	0xf3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 112


 3322 0029 01       		.uleb128 0x1
 3323 002a 50       		.byte	0x50
 3324 002b 9F       		.byte	0x9f
 3325 002c 00000000 		.4byte	0
 3326 0030 00000000 		.4byte	0
 3327              	.LLST2:
 3328 0034 30000000 		.4byte	.LVL7
 3329 0038 3A000000 		.4byte	.LVL9
 3330 003c 0100     		.2byte	0x1
 3331 003e 54       		.byte	0x54
 3332 003f 3A000000 		.4byte	.LVL9
 3333 0043 40000000 		.4byte	.LFE2
 3334 0047 0100     		.2byte	0x1
 3335 0049 50       		.byte	0x50
 3336 004a 00000000 		.4byte	0
 3337 004e 00000000 		.4byte	0
 3338              	.LLST3:
 3339 0052 02000000 		.4byte	.LVL10
 3340 0056 22000000 		.4byte	.LVL12
 3341 005a 0200     		.2byte	0x2
 3342 005c 30       		.byte	0x30
 3343 005d 9F       		.byte	0x9f
 3344 005e 22000000 		.4byte	.LVL12
 3345 0062 2C000000 		.4byte	.LFE3
 3346 0066 0100     		.2byte	0x1
 3347 0068 50       		.byte	0x50
 3348 0069 00000000 		.4byte	0
 3349 006d 00000000 		.4byte	0
 3350              	.LLST4:
 3351 0071 02000000 		.4byte	.LVL13
 3352 0075 12000000 		.4byte	.LVL14
 3353 0079 0300     		.2byte	0x3
 3354 007b 09       		.byte	0x9
 3355 007c FF       		.byte	0xff
 3356 007d 9F       		.byte	0x9f
 3357 007e 12000000 		.4byte	.LVL14
 3358 0082 14000000 		.4byte	.LVL15
 3359 0086 0100     		.2byte	0x1
 3360 0088 50       		.byte	0x50
 3361 0089 18000000 		.4byte	.LVL16
 3362 008d 25000000 		.4byte	.LVL17-1
 3363 0091 0100     		.2byte	0x1
 3364 0093 50       		.byte	0x50
 3365 0094 26000000 		.4byte	.LVL17
 3366 0098 30000000 		.4byte	.LVL19
 3367 009c 0100     		.2byte	0x1
 3368 009e 50       		.byte	0x50
 3369 009f 30000000 		.4byte	.LVL19
 3370 00a3 32000000 		.4byte	.LVL20
 3371 00a7 0300     		.2byte	0x3
 3372 00a9 09       		.byte	0x9
 3373 00aa FF       		.byte	0xff
 3374 00ab 9F       		.byte	0x9f
 3375 00ac 32000000 		.4byte	.LVL20
 3376 00b0 3C000000 		.4byte	.LFE4
 3377 00b4 0100     		.2byte	0x1
 3378 00b6 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 113


 3379 00b7 00000000 		.4byte	0
 3380 00bb 00000000 		.4byte	0
 3381              	.LLST5:
 3382 00bf 12000000 		.4byte	.LVL14
 3383 00c3 30000000 		.4byte	.LVL19
 3384 00c7 0100     		.2byte	0x1
 3385 00c9 54       		.byte	0x54
 3386 00ca 00000000 		.4byte	0
 3387 00ce 00000000 		.4byte	0
 3388              	.LLST6:
 3389 00d2 00000000 		.4byte	.LVL21
 3390 00d6 08000000 		.4byte	.LVL22
 3391 00da 0100     		.2byte	0x1
 3392 00dc 50       		.byte	0x50
 3393 00dd 08000000 		.4byte	.LVL22
 3394 00e1 A0000000 		.4byte	.LFE6
 3395 00e5 0400     		.2byte	0x4
 3396 00e7 F3       		.byte	0xf3
 3397 00e8 01       		.uleb128 0x1
 3398 00e9 50       		.byte	0x50
 3399 00ea 9F       		.byte	0x9f
 3400 00eb 00000000 		.4byte	0
 3401 00ef 00000000 		.4byte	0
 3402              	.LLST7:
 3403 00f3 00000000 		.4byte	.LVL21
 3404 00f7 12000000 		.4byte	.LVL24
 3405 00fb 0100     		.2byte	0x1
 3406 00fd 51       		.byte	0x51
 3407 00fe 12000000 		.4byte	.LVL24
 3408 0102 A0000000 		.4byte	.LFE6
 3409 0106 0400     		.2byte	0x4
 3410 0108 F3       		.byte	0xf3
 3411 0109 01       		.uleb128 0x1
 3412 010a 51       		.byte	0x51
 3413 010b 9F       		.byte	0x9f
 3414 010c 00000000 		.4byte	0
 3415 0110 00000000 		.4byte	0
 3416              	.LLST8:
 3417 0114 00000000 		.4byte	.LVL21
 3418 0118 0C000000 		.4byte	.LVL23
 3419 011c 0100     		.2byte	0x1
 3420 011e 52       		.byte	0x52
 3421 011f 0C000000 		.4byte	.LVL23
 3422 0123 98000000 		.4byte	.LVL38
 3423 0127 0100     		.2byte	0x1
 3424 0129 56       		.byte	0x56
 3425 012a 98000000 		.4byte	.LVL38
 3426 012e A0000000 		.4byte	.LFE6
 3427 0132 0400     		.2byte	0x4
 3428 0134 F3       		.byte	0xf3
 3429 0135 01       		.uleb128 0x1
 3430 0136 52       		.byte	0x52
 3431 0137 9F       		.byte	0x9f
 3432 0138 00000000 		.4byte	0
 3433 013c 00000000 		.4byte	0
 3434              	.LLST9:
 3435 0140 16000000 		.4byte	.LVL25
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 114


 3436 0144 1A000000 		.4byte	.LVL26
 3437 0148 0200     		.2byte	0x2
 3438 014a 30       		.byte	0x30
 3439 014b 9F       		.byte	0x9f
 3440 014c 1A000000 		.4byte	.LVL26
 3441 0150 98000000 		.4byte	.LVL37
 3442 0154 0100     		.2byte	0x1
 3443 0156 55       		.byte	0x55
 3444 0157 00000000 		.4byte	0
 3445 015b 00000000 		.4byte	0
 3446              	.LLST10:
 3447 015f 1E000000 		.4byte	.LVL27
 3448 0163 3D000000 		.4byte	.LVL28-1
 3449 0167 0100     		.2byte	0x1
 3450 0169 50       		.byte	0x50
 3451 016a 50000000 		.4byte	.LVL29
 3452 016e 6F000000 		.4byte	.LVL30-1
 3453 0172 0100     		.2byte	0x1
 3454 0174 50       		.byte	0x50
 3455 0175 76000000 		.4byte	.LVL31
 3456 0179 87000000 		.4byte	.LVL32-1
 3457 017d 0100     		.2byte	0x1
 3458 017f 50       		.byte	0x50
 3459 0180 00000000 		.4byte	0
 3460 0184 00000000 		.4byte	0
 3461              	.LLST11:
 3462 0188 16000000 		.4byte	.LVL25
 3463 018c 98000000 		.4byte	.LVL36
 3464 0190 0100     		.2byte	0x1
 3465 0192 54       		.byte	0x54
 3466 0193 00000000 		.4byte	0
 3467 0197 00000000 		.4byte	0
 3468              	.LLST12:
 3469 019b 00000000 		.4byte	.LVL39
 3470 019f 13000000 		.4byte	.LVL40-1
 3471 01a3 0100     		.2byte	0x1
 3472 01a5 50       		.byte	0x50
 3473 01a6 13000000 		.4byte	.LVL40-1
 3474 01aa 3C000000 		.4byte	.LFE8
 3475 01ae 0400     		.2byte	0x4
 3476 01b0 F3       		.byte	0xf3
 3477 01b1 01       		.uleb128 0x1
 3478 01b2 50       		.byte	0x50
 3479 01b3 9F       		.byte	0x9f
 3480 01b4 00000000 		.4byte	0
 3481 01b8 00000000 		.4byte	0
 3482              	.LLST13:
 3483 01bc 08000000 		.4byte	.LVL43
 3484 01c0 40000000 		.4byte	.LFE9
 3485 01c4 0100     		.2byte	0x1
 3486 01c6 53       		.byte	0x53
 3487 01c7 00000000 		.4byte	0
 3488 01cb 00000000 		.4byte	0
 3489              	.LLST14:
 3490 01cf 02000000 		.4byte	.LVL42
 3491 01d3 08000000 		.4byte	.LVL43
 3492 01d7 0200     		.2byte	0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 115


 3493 01d9 30       		.byte	0x30
 3494 01da 9F       		.byte	0x9f
 3495 01db 08000000 		.4byte	.LVL43
 3496 01df 40000000 		.4byte	.LFE9
 3497 01e3 0100     		.2byte	0x1
 3498 01e5 51       		.byte	0x51
 3499 01e6 00000000 		.4byte	0
 3500 01ea 00000000 		.4byte	0
 3501              	.LLST15:
 3502 01ee 0C000000 		.4byte	.LVL44
 3503 01f2 1E000000 		.4byte	.LVL47
 3504 01f6 0100     		.2byte	0x1
 3505 01f8 52       		.byte	0x52
 3506 01f9 20000000 		.4byte	.LVL48
 3507 01fd 26000000 		.4byte	.LVL49
 3508 0201 0100     		.2byte	0x1
 3509 0203 50       		.byte	0x50
 3510 0204 26000000 		.4byte	.LVL49
 3511 0208 36000000 		.4byte	.LVL53
 3512 020c 0100     		.2byte	0x1
 3513 020e 52       		.byte	0x52
 3514 020f 00000000 		.4byte	0
 3515 0213 00000000 		.4byte	0
 3516              	.LLST16:
 3517 0217 00000000 		.4byte	.LVL54
 3518 021b 05000000 		.4byte	.LVL55-1
 3519 021f 0100     		.2byte	0x1
 3520 0221 50       		.byte	0x50
 3521 0222 05000000 		.4byte	.LVL55-1
 3522 0226 08000000 		.4byte	.LFE11
 3523 022a 0400     		.2byte	0x4
 3524 022c F3       		.byte	0xf3
 3525 022d 01       		.uleb128 0x1
 3526 022e 50       		.byte	0x50
 3527 022f 9F       		.byte	0x9f
 3528 0230 00000000 		.4byte	0
 3529 0234 00000000 		.4byte	0
 3530              	.LLST17:
 3531 0238 00000000 		.4byte	.LVL56
 3532 023c 08000000 		.4byte	.LVL57
 3533 0240 0100     		.2byte	0x1
 3534 0242 50       		.byte	0x50
 3535 0243 08000000 		.4byte	.LVL57
 3536 0247 0A000000 		.4byte	.LVL58
 3537 024b 0300     		.2byte	0x3
 3538 024d 70       		.byte	0x70
 3539 024e 01       		.sleb128 1
 3540 024f 9F       		.byte	0x9f
 3541 0250 0A000000 		.4byte	.LVL58
 3542 0254 30000000 		.4byte	.LFE12
 3543 0258 0400     		.2byte	0x4
 3544 025a F3       		.byte	0xf3
 3545 025b 01       		.uleb128 0x1
 3546 025c 50       		.byte	0x50
 3547 025d 9F       		.byte	0x9f
 3548 025e 00000000 		.4byte	0
 3549 0262 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 116


 3550              	.LLST18:
 3551 0266 00000000 		.4byte	.LVL59
 3552 026a 0A000000 		.4byte	.LVL63
 3553 026e 0100     		.2byte	0x1
 3554 0270 50       		.byte	0x50
 3555 0271 0A000000 		.4byte	.LVL63
 3556 0275 0C000000 		.4byte	.LVL64
 3557 0279 0300     		.2byte	0x3
 3558 027b 70       		.byte	0x70
 3559 027c 01       		.sleb128 1
 3560 027d 9F       		.byte	0x9f
 3561 027e 0C000000 		.4byte	.LVL64
 3562 0282 14000000 		.4byte	.LFE13
 3563 0286 0400     		.2byte	0x4
 3564 0288 F3       		.byte	0xf3
 3565 0289 01       		.uleb128 0x1
 3566 028a 50       		.byte	0x50
 3567 028b 9F       		.byte	0x9f
 3568 028c 00000000 		.4byte	0
 3569 0290 00000000 		.4byte	0
 3570              	.LLST19:
 3571 0294 04000000 		.4byte	.LVL60
 3572 0298 06000000 		.4byte	.LVL61
 3573 029c 0100     		.2byte	0x1
 3574 029e 53       		.byte	0x53
 3575 029f 08000000 		.4byte	.LVL62
 3576 02a3 0C000000 		.4byte	.LVL64
 3577 02a7 0100     		.2byte	0x1
 3578 02a9 53       		.byte	0x53
 3579 02aa 0C000000 		.4byte	.LVL64
 3580 02ae 14000000 		.4byte	.LFE13
 3581 02b2 0100     		.2byte	0x1
 3582 02b4 50       		.byte	0x50
 3583 02b5 00000000 		.4byte	0
 3584 02b9 00000000 		.4byte	0
 3585              	.LLST20:
 3586 02bd 00000000 		.4byte	.LVL65
 3587 02c1 06000000 		.4byte	.LVL66
 3588 02c5 0100     		.2byte	0x1
 3589 02c7 50       		.byte	0x50
 3590 02c8 06000000 		.4byte	.LVL66
 3591 02cc 10000000 		.4byte	.LVL69
 3592 02d0 0100     		.2byte	0x1
 3593 02d2 54       		.byte	0x54
 3594 02d3 10000000 		.4byte	.LVL69
 3595 02d7 12000000 		.4byte	.LFE14
 3596 02db 0400     		.2byte	0x4
 3597 02dd F3       		.byte	0xf3
 3598 02de 01       		.uleb128 0x1
 3599 02df 50       		.byte	0x50
 3600 02e0 9F       		.byte	0x9f
 3601 02e1 00000000 		.4byte	0
 3602 02e5 00000000 		.4byte	0
 3603              	.LLST21:
 3604 02e9 00000000 		.4byte	.LVL65
 3605 02ed 09000000 		.4byte	.LVL67-1
 3606 02f1 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 117


 3607 02f3 51       		.byte	0x51
 3608 02f4 09000000 		.4byte	.LVL67-1
 3609 02f8 12000000 		.4byte	.LFE14
 3610 02fc 0400     		.2byte	0x4
 3611 02fe F3       		.byte	0xf3
 3612 02ff 01       		.uleb128 0x1
 3613 0300 51       		.byte	0x51
 3614 0301 9F       		.byte	0x9f
 3615 0302 00000000 		.4byte	0
 3616 0306 00000000 		.4byte	0
 3617              	.LLST22:
 3618 030a 00000000 		.4byte	.LVL70
 3619 030e 08000000 		.4byte	.LVL72
 3620 0312 0100     		.2byte	0x1
 3621 0314 50       		.byte	0x50
 3622 0315 08000000 		.4byte	.LVL72
 3623 0319 0A000000 		.4byte	.LVL73
 3624 031d 0100     		.2byte	0x1
 3625 031f 53       		.byte	0x53
 3626 0320 0A000000 		.4byte	.LVL73
 3627 0324 0C000000 		.4byte	.LVL74
 3628 0328 0100     		.2byte	0x1
 3629 032a 50       		.byte	0x50
 3630 032b 0C000000 		.4byte	.LVL74
 3631 032f 17000000 		.4byte	.LVL76-1
 3632 0333 0100     		.2byte	0x1
 3633 0335 53       		.byte	0x53
 3634 0336 17000000 		.4byte	.LVL76-1
 3635 033a 1A000000 		.4byte	.LFE15
 3636 033e 0400     		.2byte	0x4
 3637 0340 F3       		.byte	0xf3
 3638 0341 01       		.uleb128 0x1
 3639 0342 50       		.byte	0x50
 3640 0343 9F       		.byte	0x9f
 3641 0344 00000000 		.4byte	0
 3642 0348 00000000 		.4byte	0
 3643              	.LLST23:
 3644 034c 04000000 		.4byte	.LVL71
 3645 0350 0C000000 		.4byte	.LVL74
 3646 0354 0200     		.2byte	0x2
 3647 0356 30       		.byte	0x30
 3648 0357 9F       		.byte	0x9f
 3649 0358 0C000000 		.4byte	.LVL74
 3650 035c 14000000 		.4byte	.LVL75
 3651 0360 0100     		.2byte	0x1
 3652 0362 50       		.byte	0x50
 3653 0363 18000000 		.4byte	.LVL76
 3654 0367 1A000000 		.4byte	.LFE15
 3655 036b 0100     		.2byte	0x1
 3656 036d 50       		.byte	0x50
 3657 036e 00000000 		.4byte	0
 3658 0372 00000000 		.4byte	0
 3659              	.LLST24:
 3660 0376 02000000 		.4byte	.LVL77
 3661 037a 08000000 		.4byte	.LVL78
 3662 037e 0200     		.2byte	0x2
 3663 0380 30       		.byte	0x30
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 118


 3664 0381 9F       		.byte	0x9f
 3665 0382 08000000 		.4byte	.LVL78
 3666 0386 18000000 		.4byte	.LVL83
 3667 038a 0100     		.2byte	0x1
 3668 038c 55       		.byte	0x55
 3669 038d 18000000 		.4byte	.LVL83
 3670 0391 1A000000 		.4byte	.LFE16
 3671 0395 0100     		.2byte	0x1
 3672 0397 50       		.byte	0x50
 3673 0398 00000000 		.4byte	0
 3674 039c 00000000 		.4byte	0
 3675              	.LLST25:
 3676 03a0 02000000 		.4byte	.LVL77
 3677 03a4 08000000 		.4byte	.LVL78
 3678 03a8 0200     		.2byte	0x2
 3679 03aa 30       		.byte	0x30
 3680 03ab 9F       		.byte	0x9f
 3681 03ac 08000000 		.4byte	.LVL78
 3682 03b0 18000000 		.4byte	.LVL82
 3683 03b4 0100     		.2byte	0x1
 3684 03b6 54       		.byte	0x54
 3685 03b7 00000000 		.4byte	0
 3686 03bb 00000000 		.4byte	0
 3687              	.LLST26:
 3688 03bf 02000000 		.4byte	.LVL84
 3689 03c3 06000000 		.4byte	.LVL85
 3690 03c7 0200     		.2byte	0x2
 3691 03c9 30       		.byte	0x30
 3692 03ca 9F       		.byte	0x9f
 3693 03cb 06000000 		.4byte	.LVL85
 3694 03cf 1E000000 		.4byte	.LVL89
 3695 03d3 0100     		.2byte	0x1
 3696 03d5 54       		.byte	0x54
 3697 03d6 00000000 		.4byte	0
 3698 03da 00000000 		.4byte	0
 3699              	.LLST27:
 3700 03de 12000000 		.4byte	.LVL86
 3701 03e2 17000000 		.4byte	.LVL87-1
 3702 03e6 0100     		.2byte	0x1
 3703 03e8 51       		.byte	0x51
 3704 03e9 00000000 		.4byte	0
 3705 03ed 00000000 		.4byte	0
 3706              	.LLST28:
 3707 03f1 02000000 		.4byte	.LVL94
 3708 03f5 06000000 		.4byte	.LVL95
 3709 03f9 0200     		.2byte	0x2
 3710 03fb 30       		.byte	0x30
 3711 03fc 9F       		.byte	0x9f
 3712 03fd 06000000 		.4byte	.LVL95
 3713 0401 38000000 		.4byte	.LVL101
 3714 0405 0100     		.2byte	0x1
 3715 0407 55       		.byte	0x55
 3716 0408 00000000 		.4byte	0
 3717 040c 00000000 		.4byte	0
 3718              	.LLST29:
 3719 0410 10000000 		.4byte	.LVL96
 3720 0414 14000000 		.4byte	.LVL97
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 119


 3721 0418 0200     		.2byte	0x2
 3722 041a 30       		.byte	0x30
 3723 041b 9F       		.byte	0x9f
 3724 041c 14000000 		.4byte	.LVL97
 3725 0420 34000000 		.4byte	.LVL100
 3726 0424 0100     		.2byte	0x1
 3727 0426 54       		.byte	0x54
 3728 0427 00000000 		.4byte	0
 3729 042b 00000000 		.4byte	0
 3730              	.LLST30:
 3731 042f 10000000 		.4byte	.LVL96
 3732 0433 34000000 		.4byte	.LVL100
 3733 0437 0100     		.2byte	0x1
 3734 0439 56       		.byte	0x56
 3735 043a 00000000 		.4byte	0
 3736 043e 00000000 		.4byte	0
 3737              	.LLST31:
 3738 0442 00000000 		.4byte	.LVL102
 3739 0446 04000000 		.4byte	.LVL103
 3740 044a 0100     		.2byte	0x1
 3741 044c 50       		.byte	0x50
 3742 044d 04000000 		.4byte	.LVL103
 3743 0451 14000000 		.4byte	.LFE20
 3744 0455 0400     		.2byte	0x4
 3745 0457 F3       		.byte	0xf3
 3746 0458 01       		.uleb128 0x1
 3747 0459 50       		.byte	0x50
 3748 045a 9F       		.byte	0x9f
 3749 045b 00000000 		.4byte	0
 3750 045f 00000000 		.4byte	0
 3751              	.LLST32:
 3752 0463 00000000 		.4byte	.LVL106
 3753 0467 04000000 		.4byte	.LVL107
 3754 046b 0100     		.2byte	0x1
 3755 046d 50       		.byte	0x50
 3756 046e 04000000 		.4byte	.LVL107
 3757 0472 14000000 		.4byte	.LFE21
 3758 0476 0400     		.2byte	0x4
 3759 0478 F3       		.byte	0xf3
 3760 0479 01       		.uleb128 0x1
 3761 047a 50       		.byte	0x50
 3762 047b 9F       		.byte	0x9f
 3763 047c 00000000 		.4byte	0
 3764 0480 00000000 		.4byte	0
 3765              	.LLST33:
 3766 0484 0A000000 		.4byte	.LVL110
 3767 0488 13000000 		.4byte	.LVL112-1
 3768 048c 0100     		.2byte	0x1
 3769 048e 53       		.byte	0x53
 3770 048f 1C000000 		.4byte	.LVL114
 3771 0493 25000000 		.4byte	.LVL116-1
 3772 0497 0100     		.2byte	0x1
 3773 0499 53       		.byte	0x53
 3774 049a 2E000000 		.4byte	.LVL118
 3775 049e 3B000000 		.4byte	.LVL121-1
 3776 04a2 0100     		.2byte	0x1
 3777 04a4 53       		.byte	0x53
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 120


 3778 04a5 48000000 		.4byte	.LVL124
 3779 04a9 4F000000 		.4byte	.LVL126-1
 3780 04ad 0100     		.2byte	0x1
 3781 04af 53       		.byte	0x53
 3782 04b0 00000000 		.4byte	0
 3783 04b4 00000000 		.4byte	0
 3784              	.LLST34:
 3785 04b8 06000000 		.4byte	.LVL109
 3786 04bc 13000000 		.4byte	.LVL112-1
 3787 04c0 0100     		.2byte	0x1
 3788 04c2 50       		.byte	0x50
 3789 04c3 18000000 		.4byte	.LVL113
 3790 04c7 25000000 		.4byte	.LVL116-1
 3791 04cb 0100     		.2byte	0x1
 3792 04cd 50       		.byte	0x50
 3793 04ce 2A000000 		.4byte	.LVL117
 3794 04d2 3B000000 		.4byte	.LVL121-1
 3795 04d6 0100     		.2byte	0x1
 3796 04d8 50       		.byte	0x50
 3797 04d9 46000000 		.4byte	.LVL123
 3798 04dd 4F000000 		.4byte	.LVL126-1
 3799 04e1 0100     		.2byte	0x1
 3800 04e3 50       		.byte	0x50
 3801 04e4 00000000 		.4byte	0
 3802 04e8 00000000 		.4byte	0
 3803              		.section	.debug_aranges,"",%progbits
 3804 0000 C4000000 		.4byte	0xc4
 3805 0004 0200     		.2byte	0x2
 3806 0006 00000000 		.4byte	.Ldebug_info0
 3807 000a 04       		.byte	0x4
 3808 000b 00       		.byte	0
 3809 000c 0000     		.2byte	0
 3810 000e 0000     		.2byte	0
 3811 0010 00000000 		.4byte	.LFB18
 3812 0014 06000000 		.4byte	.LFE18-.LFB18
 3813 0018 00000000 		.4byte	.LFB7
 3814 001c 24000000 		.4byte	.LFE7-.LFB7
 3815 0020 00000000 		.4byte	.LFB1
 3816 0024 10000000 		.4byte	.LFE1-.LFB1
 3817 0028 00000000 		.4byte	.LFB2
 3818 002c 40000000 		.4byte	.LFE2-.LFB2
 3819 0030 00000000 		.4byte	.LFB3
 3820 0034 2C000000 		.4byte	.LFE3-.LFB3
 3821 0038 00000000 		.4byte	.LFB4
 3822 003c 3C000000 		.4byte	.LFE4-.LFB4
 3823 0040 00000000 		.4byte	.LFB6
 3824 0044 A0000000 		.4byte	.LFE6-.LFB6
 3825 0048 00000000 		.4byte	.LFB8
 3826 004c 3C000000 		.4byte	.LFE8-.LFB8
 3827 0050 00000000 		.4byte	.LFB9
 3828 0054 40000000 		.4byte	.LFE9-.LFB9
 3829 0058 00000000 		.4byte	.LFB10
 3830 005c 02000000 		.4byte	.LFE10-.LFB10
 3831 0060 00000000 		.4byte	.LFB11
 3832 0064 08000000 		.4byte	.LFE11-.LFB11
 3833 0068 00000000 		.4byte	.LFB12
 3834 006c 30000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 121


 3835 0070 00000000 		.4byte	.LFB13
 3836 0074 14000000 		.4byte	.LFE13-.LFB13
 3837 0078 00000000 		.4byte	.LFB14
 3838 007c 12000000 		.4byte	.LFE14-.LFB14
 3839 0080 00000000 		.4byte	.LFB15
 3840 0084 1A000000 		.4byte	.LFE15-.LFB15
 3841 0088 00000000 		.4byte	.LFB16
 3842 008c 1A000000 		.4byte	.LFE16-.LFB16
 3843 0090 00000000 		.4byte	.LFB17
 3844 0094 24000000 		.4byte	.LFE17-.LFB17
 3845 0098 00000000 		.4byte	.LFB5
 3846 009c 14000000 		.4byte	.LFE5-.LFB5
 3847 00a0 00000000 		.4byte	.LFB19
 3848 00a4 40000000 		.4byte	.LFE19-.LFB19
 3849 00a8 00000000 		.4byte	.LFB20
 3850 00ac 14000000 		.4byte	.LFE20-.LFB20
 3851 00b0 00000000 		.4byte	.LFB21
 3852 00b4 14000000 		.4byte	.LFE21-.LFB21
 3853 00b8 00000000 		.4byte	.LFB22
 3854 00bc 60000000 		.4byte	.LFE22-.LFB22
 3855 00c0 00000000 		.4byte	0
 3856 00c4 00000000 		.4byte	0
 3857              		.section	.debug_ranges,"",%progbits
 3858              	.Ldebug_ranges0:
 3859 0000 00000000 		.4byte	.LFB18
 3860 0004 06000000 		.4byte	.LFE18
 3861 0008 00000000 		.4byte	.LFB7
 3862 000c 24000000 		.4byte	.LFE7
 3863 0010 00000000 		.4byte	.LFB1
 3864 0014 10000000 		.4byte	.LFE1
 3865 0018 00000000 		.4byte	.LFB2
 3866 001c 40000000 		.4byte	.LFE2
 3867 0020 00000000 		.4byte	.LFB3
 3868 0024 2C000000 		.4byte	.LFE3
 3869 0028 00000000 		.4byte	.LFB4
 3870 002c 3C000000 		.4byte	.LFE4
 3871 0030 00000000 		.4byte	.LFB6
 3872 0034 A0000000 		.4byte	.LFE6
 3873 0038 00000000 		.4byte	.LFB8
 3874 003c 3C000000 		.4byte	.LFE8
 3875 0040 00000000 		.4byte	.LFB9
 3876 0044 40000000 		.4byte	.LFE9
 3877 0048 00000000 		.4byte	.LFB10
 3878 004c 02000000 		.4byte	.LFE10
 3879 0050 00000000 		.4byte	.LFB11
 3880 0054 08000000 		.4byte	.LFE11
 3881 0058 00000000 		.4byte	.LFB12
 3882 005c 30000000 		.4byte	.LFE12
 3883 0060 00000000 		.4byte	.LFB13
 3884 0064 14000000 		.4byte	.LFE13
 3885 0068 00000000 		.4byte	.LFB14
 3886 006c 12000000 		.4byte	.LFE14
 3887 0070 00000000 		.4byte	.LFB15
 3888 0074 1A000000 		.4byte	.LFE15
 3889 0078 00000000 		.4byte	.LFB16
 3890 007c 1A000000 		.4byte	.LFE16
 3891 0080 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 122


 3892 0084 24000000 		.4byte	.LFE17
 3893 0088 00000000 		.4byte	.LFB5
 3894 008c 14000000 		.4byte	.LFE5
 3895 0090 00000000 		.4byte	.LFB19
 3896 0094 40000000 		.4byte	.LFE19
 3897 0098 00000000 		.4byte	.LFB20
 3898 009c 14000000 		.4byte	.LFE20
 3899 00a0 00000000 		.4byte	.LFB21
 3900 00a4 14000000 		.4byte	.LFE21
 3901 00a8 00000000 		.4byte	.LFB22
 3902 00ac 60000000 		.4byte	.LFE22
 3903 00b0 00000000 		.4byte	0
 3904 00b4 00000000 		.4byte	0
 3905              		.section	.debug_line,"",%progbits
 3906              	.Ldebug_line0:
 3907 0000 AA030000 		.section	.debug_str,"MS",%progbits,1
 3907      0200C400 
 3907      00000201 
 3907      FB0E0D00 
 3907      01010101 
 3908              	.LASF102:
 3909 0000 73656E73 		.ascii	"sensorElement\000"
 3909      6F72456C 
 3909      656D656E 
 3909      7400
 3910              	.LASF133:
 3911 000e 43617053 		.ascii	"CapSense_1_BistDischargeExtCapacitors\000"
 3911      656E7365 
 3911      5F315F42 
 3911      69737444 
 3911      69736368 
 3912              	.LASF94:
 3913 0034 43617053 		.ascii	"CapSense_1_SsCSDDisableMode\000"
 3913      656E7365 
 3913      5F315F53 
 3913      73435344 
 3913      44697361 
 3914              	.LASF85:
 3915 0050 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 3915      656E7365 
 3915      5F315F46 
 3915      4C415348 
 3915      5F57445F 
 3916              	.LASF100:
 3917 006b 7363616E 		.ascii	"scanStatus\000"
 3917      53746174 
 3917      757300
 3918              	.LASF140:
 3919 0076 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 3919      656E7365 
 3919      5F315F63 
 3919      75725261 
 3919      6D536E73 
 3920              	.LASF61:
 3921 008e 736E7254 		.ascii	"snrTestWidgetId\000"
 3921      65737457 
 3921      69646765 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 123


 3921      74496400 
 3922              	.LASF146:
 3923 009e 43617053 		.ascii	"CapSense_1_CSDScan\000"
 3923      656E7365 
 3923      5F315F43 
 3923      53445363 
 3923      616E00
 3924              	.LASF8:
 3925 00b1 756E7369 		.ascii	"unsigned int\000"
 3925      676E6564 
 3925      20696E74 
 3925      00
 3926              	.LASF111:
 3927 00be 43617053 		.ascii	"CapSense_1_SsSetIOsInDefaultState\000"
 3927      656E7365 
 3927      5F315F53 
 3927      73536574 
 3927      494F7349 
 3928              	.LASF124:
 3929 00e0 43617053 		.ascii	"CapSense_1_SsInitialize\000"
 3929      656E7365 
 3929      5F315F53 
 3929      73496E69 
 3929      7469616C 
 3930              	.LASF52:
 3931 00f8 7363616E 		.ascii	"scanCounter\000"
 3931      436F756E 
 3931      74657200 
 3932              	.LASF50:
 3933 0104 6877436C 		.ascii	"hwClock\000"
 3933      6F636B00 
 3934              	.LASF143:
 3935 010c 43617053 		.ascii	"CapSense_1_curSnsIOPtr\000"
 3935      656E7365 
 3935      5F315F63 
 3935      7572536E 
 3935      73494F50 
 3936              	.LASF125:
 3937 0123 696E6974 		.ascii	"initStatus\000"
 3937      53746174 
 3937      757300
 3938              	.LASF113:
 3939 012e 72656756 		.ascii	"regValue\000"
 3939      616C7565 
 3939      00
 3940              	.LASF136:
 3941 0137 43617053 		.ascii	"CapSense_1_ioList\000"
 3941      656E7365 
 3941      5F315F69 
 3941      6F4C6973 
 3941      7400
 3942              	.LASF106:
 3943 0149 696E7465 		.ascii	"interruptState\000"
 3943      72727570 
 3943      74537461 
 3943      746500
 3944              	.LASF158:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 124


 3945 0158 43617053 		.ascii	"CapSense_1_IsBusy\000"
 3945      656E7365 
 3945      5F315F49 
 3945      73427573 
 3945      7900
 3946              	.LASF92:
 3947 016a 6C667372 		.ascii	"lfsrScale\000"
 3947      5363616C 
 3947      6500
 3948              	.LASF149:
 3949 0174 43617053 		.ascii	"CapSense_1_CSDConnectSns\000"
 3949      656E7365 
 3949      5F315F43 
 3949      5344436F 
 3949      6E6E6563 
 3950              	.LASF132:
 3951 018d 64697669 		.ascii	"dividerVal\000"
 3951      64657256 
 3951      616C00
 3952              	.LASF120:
 3953 0198 43617053 		.ascii	"CapSense_1_CalibrateWidget\000"
 3953      656E7365 
 3953      5F315F43 
 3953      616C6962 
 3953      72617465 
 3954              	.LASF110:
 3955 01b3 6D6F6465 		.ascii	"mode\000"
 3955      00
 3956              	.LASF123:
 3957 01b8 43617053 		.ascii	"CapSense_1_SsInitializeSourceSenseClk\000"
 3957      656E7365 
 3957      5F315F53 
 3957      73496E69 
 3957      7469616C 
 3958              	.LASF142:
 3959 01de 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 3959      656E7365 
 3959      5F315F73 
 3959      63616E46 
 3959      72657149 
 3960              	.LASF150:
 3961 01f7 43617053 		.ascii	"CapSense_1_SsCSDInitialize\000"
 3961      656E7365 
 3961      5F315F53 
 3961      73435344 
 3961      496E6974 
 3962              	.LASF40:
 3963 0212 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 3963      656E7365 
 3963      5F315F52 
 3963      414D5F57 
 3963      445F4C49 
 3964              	.LASF104:
 3965 0230 656C7464 		.ascii	"eltdNum\000"
 3965      4E756D00 
 3966              	.LASF90:
 3967 0238 70747257 		.ascii	"ptrWdgt\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 125


 3967      64677400 
 3968              	.LASF139:
 3969 0240 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
 3969      656E7365 
 3969      5F315F72 
 3969      65717565 
 3969      73745363 
 3970              	.LASF112:
 3971 0260 6C6F6F70 		.ascii	"loopIndex\000"
 3971      496E6465 
 3971      7800
 3972              	.LASF12:
 3973 026a 666C6F61 		.ascii	"float\000"
 3973      7400
 3974              	.LASF74:
 3975 0270 73686966 		.ascii	"shift\000"
 3975      7400
 3976              	.LASF155:
 3977 0276 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3977      43313120 
 3977      352E342E 
 3977      31203230 
 3977      31363036 
 3978 02a9 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 3978      20726576 
 3978      6973696F 
 3978      6E203233 
 3978      37373135 
 3979 02dc 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 3979      67202D66 
 3979      66756E63 
 3979      74696F6E 
 3979      2D736563 
 3980              	.LASF98:
 3981 0308 43617053 		.ascii	"CapSense_1_SetupWidget\000"
 3981      656E7365 
 3981      5F315F53 
 3981      65747570 
 3981      57696467 
 3982              	.LASF154:
 3983 031f 43794465 		.ascii	"CyDelayUs\000"
 3983      6C617955 
 3983      7300
 3984              	.LASF60:
 3985 0329 736E734C 		.ascii	"snsList\000"
 3985      69737400 
 3986              	.LASF7:
 3987 0331 6C6F6E67 		.ascii	"long long unsigned int\000"
 3987      206C6F6E 
 3987      6720756E 
 3987      7369676E 
 3987      65642069 
 3988              	.LASF62:
 3989 0348 736E7254 		.ascii	"snrTestSensorId\000"
 3989      65737453 
 3989      656E736F 
 3989      72496400 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 126


 3990              	.LASF83:
 3991 0358 77646774 		.ascii	"wdgtType\000"
 3991      54797065 
 3991      00
 3992              	.LASF91:
 3993 0361 6C667372 		.ascii	"lfsrSize\000"
 3993      53697A65 
 3993      00
 3994              	.LASF19:
 3995 036a 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 3995      656E7365 
 3995      5F315F4C 
 3995      4F575F42 
 3995      534C4E5F 
 3996              	.LASF25:
 3997 0387 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ENUM\000"
 3997      656E7365 
 3997      5F315F53 
 3997      454E5345 
 3997      5F4D4554 
 3998              	.LASF58:
 3999 03a4 6D6F6443 		.ascii	"modCsdClk\000"
 3999      7364436C 
 3999      6B00
 4000              	.LASF151:
 4001 03ae 43617053 		.ascii	"CapSense_1_ISR_StartEx\000"
 4001      656E7365 
 4001      5F315F49 
 4001      53525F53 
 4001      74617274 
 4002              	.LASF68:
 4003 03c5 64725074 		.ascii	"drPtr\000"
 4003      7200
 4004              	.LASF114:
 4005 03cb 43617053 		.ascii	"CapSense_1_SsIsrInitialize\000"
 4005      656E7365 
 4005      5F315F53 
 4005      73497372 
 4005      496E6974 
 4006              	.LASF23:
 4007 03e6 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 4007      656E7365 
 4007      5F315F53 
 4007      454E5345 
 4007      5F4D4554 
 4008              	.LASF157:
 4009 0405 433A5C55 		.ascii	"C:\\Users\\michael.machate\\Desktop\\Cypress_Firstt"
 4009      73657273 
 4009      5C6D6963 
 4009      6861656C 
 4009      2E6D6163 
 4010 0434 65737473 		.ascii	"ests\\FirstTest.cydsn\000"
 4010      5C466972 
 4010      73745465 
 4010      73742E63 
 4010      7964736E 
 4011              	.LASF32:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 127


 4012 0449 6C6F7742 		.ascii	"lowBslnRst\000"
 4012      736C6E52 
 4012      737400
 4013              	.LASF108:
 4014 0454 43617053 		.ascii	"CapSense_1_SetPinState\000"
 4014      656E7365 
 4014      5F315F53 
 4014      65745069 
 4014      6E537461 
 4015              	.LASF93:
 4016 046b 43617053 		.ascii	"CapSense_1_SsSetWidgetSenseClkSrc\000"
 4016      656E7365 
 4016      5F315F53 
 4016      73536574 
 4016      57696467 
 4017              	.LASF116:
 4018 048d 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 4018      656E7365 
 4018      5F315F53 
 4018      73536574 
 4018      4D6F6443 
 4019              	.LASF82:
 4020 04b0 746F7461 		.ascii	"totalNumSns\000"
 4020      6C4E756D 
 4020      536E7300 
 4021              	.LASF117:
 4022 04bc 6D6F6443 		.ascii	"modClk\000"
 4022      6C6B00
 4023              	.LASF129:
 4024 04c3 43617053 		.ascii	"CapSense_1_SsCSDGetColSnsClkDivider\000"
 4024      656E7365 
 4024      5F315F53 
 4024      73435344 
 4024      47657443 
 4025              	.LASF28:
 4026 04e7 6E6F6973 		.ascii	"noiseTh\000"
 4026      65546800 
 4027              	.LASF109:
 4028 04ef 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 4028      656E7365 
 4028      5F315F53 
 4028      73537769 
 4028      74636853 
 4029              	.LASF14:
 4030 050e 63686172 		.ascii	"char\000"
 4030      00
 4031              	.LASF148:
 4032 0513 43794578 		.ascii	"CyExitCriticalSection\000"
 4032      69744372 
 4032      69746963 
 4032      616C5365 
 4032      6374696F 
 4033              	.LASF101:
 4034 0529 43617053 		.ascii	"CapSense_1_ScanAllWidgets\000"
 4034      656E7365 
 4034      5F315F53 
 4034      63616E41 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 128


 4034      6C6C5769 
 4035              	.LASF72:
 4036 0543 6873696F 		.ascii	"hsiomShift\000"
 4036      6D536869 
 4036      667400
 4037              	.LASF10:
 4038 054e 75696E74 		.ascii	"uint16\000"
 4038      313600
 4039              	.LASF26:
 4040 0555 7265736F 		.ascii	"resolution\000"
 4040      6C757469 
 4040      6F6E00
 4041              	.LASF65:
 4042 0560 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 4042      656E7365 
 4042      5F315F52 
 4042      414D5F53 
 4042      54525543 
 4043              	.LASF53:
 4044 0576 73746174 		.ascii	"status\000"
 4044      757300
 4045              	.LASF45:
 4046 057d 69646163 		.ascii	"idacComp\000"
 4046      436F6D70 
 4046      00
 4047              	.LASF67:
 4048 0586 70635074 		.ascii	"pcPtr\000"
 4048      7200
 4049              	.LASF6:
 4050 058c 6C6F6E67 		.ascii	"long long int\000"
 4050      206C6F6E 
 4050      6720696E 
 4050      7400
 4051              	.LASF18:
 4052 059a 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 4052      656E7365 
 4052      5F315F54 
 4052      48524553 
 4052      484F4C44 
 4053              	.LASF31:
 4054 05b4 6F6E4465 		.ascii	"onDebounce\000"
 4054      626F756E 
 4054      636500
 4055              	.LASF118:
 4056 05bf 43617053 		.ascii	"CapSense_1_SsSetSnsClockDivider\000"
 4056      656E7365 
 4056      5F315F53 
 4056      73536574 
 4056      536E7343 
 4057              	.LASF121:
 4058 05df 63616C69 		.ascii	"calibrateStatus\000"
 4058      62726174 
 4058      65537461 
 4058      74757300 
 4059              	.LASF59:
 4060 05ef 77646774 		.ascii	"wdgtList\000"
 4060      4C697374 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 129


 4060      00
 4061              	.LASF76:
 4062 05f8 70747232 		.ascii	"ptr2SnsFlash\000"
 4062      536E7346 
 4062      6C617368 
 4062      00
 4063              	.LASF64:
 4064 0605 736E7254 		.ascii	"snrTestRawCount\000"
 4064      65737452 
 4064      6177436F 
 4064      756E7400 
 4065              	.LASF29:
 4066 0615 6E4E6F69 		.ascii	"nNoiseTh\000"
 4066      73655468 
 4066      00
 4067              	.LASF57:
 4068 061e 63736430 		.ascii	"csd0Config\000"
 4068      436F6E66 
 4068      696700
 4069              	.LASF17:
 4070 0629 63796973 		.ascii	"cyisraddress\000"
 4070      72616464 
 4070      72657373 
 4070      00
 4071              	.LASF88:
 4072 0636 6C6F6E67 		.ascii	"long double\000"
 4072      20646F75 
 4072      626C6500 
 4073              	.LASF37:
 4074 0642 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 4074      656E7365 
 4074      5F315F52 
 4074      414D5F57 
 4074      445F4241 
 4075              	.LASF66:
 4076 0660 6873696F 		.ascii	"hsiomPtr\000"
 4076      6D507472 
 4076      00
 4077              	.LASF11:
 4078 0669 75696E74 		.ascii	"uint32\000"
 4078      333200
 4079              	.LASF30:
 4080 0670 68797374 		.ascii	"hysteresis\000"
 4080      65726573 
 4080      697300
 4081              	.LASF79:
 4082 067b 70747232 		.ascii	"ptr2FltrHistory\000"
 4082      466C7472 
 4082      48697374 
 4082      6F727900 
 4083              	.LASF20:
 4084 068b 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 4084      656E7365 
 4084      5F315F55 
 4084      4E444546 
 4084      494E4544 
 4085              	.LASF47:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 130


 4086 06a2 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 4086      656E7365 
 4086      5F315F52 
 4086      414D5F53 
 4086      4E535F4C 
 4087              	.LASF71:
 4088 06c1 6D61736B 		.ascii	"mask\000"
 4088      00
 4089              	.LASF156:
 4090 06c6 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_Sensing.c\000"
 4090      72617465 
 4090      645F536F 
 4090      75726365 
 4090      5C50536F 
 4091              	.LASF89:
 4092 06f2 77646774 		.ascii	"wdgtIndex\000"
 4092      496E6465 
 4092      7800
 4093              	.LASF127:
 4094 06fc 736E7349 		.ascii	"snsIndex\000"
 4094      6E646578 
 4094      00
 4095              	.LASF134:
 4096 0705 43617053 		.ascii	"CapSense_1_dsRam\000"
 4096      656E7365 
 4096      5F315F64 
 4096      7352616D 
 4096      00
 4097              	.LASF99:
 4098 0716 43617053 		.ascii	"CapSense_1_Scan\000"
 4098      656E7365 
 4098      5F315F53 
 4098      63616E00 
 4099              	.LASF24:
 4100 0726 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 4100      656E7365 
 4100      5F315F53 
 4100      454E5345 
 4100      5F4D4554 
 4101              	.LASF16:
 4102 0744 72656733 		.ascii	"reg32\000"
 4102      3200
 4103              	.LASF63:
 4104 074a 736E7254 		.ascii	"snrTestScanCounter\000"
 4104      65737453 
 4104      63616E43 
 4104      6F756E74 
 4104      657200
 4105              	.LASF48:
 4106 075d 636F6E66 		.ascii	"configId\000"
 4106      69674964 
 4106      00
 4107              	.LASF78:
 4108 0766 70747232 		.ascii	"ptr2SnsRam\000"
 4108      536E7352 
 4108      616D00
 4109              	.LASF87:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 131


 4110 0771 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 4110      656E7365 
 4110      5F315F46 
 4110      4C415348 
 4110      5F535452 
 4111              	.LASF56:
 4112 0789 736E7353 		.ascii	"snsStatus\000"
 4112      74617475 
 4112      7300
 4113              	.LASF35:
 4114 0793 736E7343 		.ascii	"snsClkSource\000"
 4114      6C6B536F 
 4114      75726365 
 4114      00
 4115              	.LASF36:
 4116 07a0 73697A65 		.ascii	"sizetype\000"
 4116      74797065 
 4116      00
 4117              	.LASF153:
 4118 07a9 43617053 		.ascii	"CapSense_1_CSDDisconnectSns\000"
 4118      656E7365 
 4118      5F315F43 
 4118      53444469 
 4118      73636F6E 
 4119              	.LASF2:
 4120 07c5 73686F72 		.ascii	"short int\000"
 4120      7420696E 
 4120      7400
 4121              	.LASF131:
 4122 07cf 43617053 		.ascii	"CapSense_1_SsCSDSetColSnsClkDivider\000"
 4122      656E7365 
 4122      5F315F53 
 4122      73435344 
 4122      53657443 
 4123              	.LASF4:
 4124 07f3 6C6F6E67 		.ascii	"long int\000"
 4124      20696E74 
 4124      00
 4125              	.LASF54:
 4126 07fc 77646774 		.ascii	"wdgtEnable\000"
 4126      456E6162 
 4126      6C6500
 4127              	.LASF119:
 4128 0807 43617053 		.ascii	"CapSense_1_SsSetClockDividers\000"
 4128      656E7365 
 4128      5F315F53 
 4128      73536574 
 4128      436C6F63 
 4129              	.LASF135:
 4130 0825 43617053 		.ascii	"CapSense_1_dsFlash\000"
 4130      656E7365 
 4130      5F315F64 
 4130      73466C61 
 4130      736800
 4131              	.LASF43:
 4132 0838 64696666 		.ascii	"diff\000"
 4132      00
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 132


 4133              	.LASF51:
 4134 083d 74756E65 		.ascii	"tunerCmd\000"
 4134      72436D64 
 4134      00
 4135              	.LASF69:
 4136 0846 70735074 		.ascii	"psPtr\000"
 4136      7200
 4137              	.LASF22:
 4138 084c 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 4138      656E7365 
 4138      5F315F53 
 4138      454E5345 
 4138      5F4D4554 
 4139              	.LASF39:
 4140 086a 62757474 		.ascii	"button0\000"
 4140      6F6E3000 
 4141              	.LASF152:
 4142 0872 43617053 		.ascii	"CapSense_1_CSDCalibrateWidget\000"
 4142      656E7365 
 4142      5F315F43 
 4142      53444361 
 4142      6C696272 
 4143              	.LASF84:
 4144 0890 6E756D43 		.ascii	"numCols\000"
 4144      6F6C7300 
 4145              	.LASF55:
 4146 0898 77646774 		.ascii	"wdgtStatus\000"
 4146      53746174 
 4146      757300
 4147              	.LASF145:
 4148 08a3 43617053 		.ascii	"CapSense_1_CSDSetupWidget\000"
 4148      656E7365 
 4148      5F315F43 
 4148      53445365 
 4148      74757057 
 4149              	.LASF138:
 4150 08bd 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 4150      656E7365 
 4150      5F315F73 
 4150      656E736F 
 4150      72496E64 
 4151              	.LASF21:
 4152 08d4 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 4152      656E7365 
 4152      5F315F53 
 4152      454E5345 
 4152      5F4D4554 
 4153              	.LASF73:
 4154 08f2 64725368 		.ascii	"drShift\000"
 4154      69667400 
 4155              	.LASF5:
 4156 08fa 6C6F6E67 		.ascii	"long unsigned int\000"
 4156      20756E73 
 4156      69676E65 
 4156      6420696E 
 4156      7400
 4157              	.LASF130:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 133


 4158 090c 72657456 		.ascii	"retVal\000"
 4158      616C00
 4159              	.LASF115:
 4160 0913 61646472 		.ascii	"address\000"
 4160      65737300 
 4161              	.LASF33:
 4162 091b 69646163 		.ascii	"idacMod\000"
 4162      4D6F6400 
 4163              	.LASF80:
 4164 0923 70747232 		.ascii	"ptr2DebounceArr\000"
 4164      4465626F 
 4164      756E6365 
 4164      41727200 
 4165              	.LASF144:
 4166 0933 43617053 		.ascii	"CapSense_1_SsCSDElectrodeCheck\000"
 4166      656E7365 
 4166      5F315F53 
 4166      73435344 
 4166      456C6563 
 4167              	.LASF27:
 4168 0952 66696E67 		.ascii	"fingerTh\000"
 4168      65725468 
 4168      00
 4169              	.LASF122:
 4170 095b 43617053 		.ascii	"CapSense_1_CalibrateAllWidgets\000"
 4170      656E7365 
 4170      5F315F43 
 4170      616C6962 
 4170      72617465 
 4171              	.LASF42:
 4172 097a 62736C6E 		.ascii	"bslnExt\000"
 4172      45787400 
 4173              	.LASF15:
 4174 0982 63797374 		.ascii	"cystatus\000"
 4174      61747573 
 4174      00
 4175              	.LASF1:
 4176 098b 756E7369 		.ascii	"unsigned char\000"
 4176      676E6564 
 4176      20636861 
 4176      7200
 4177              	.LASF81:
 4178 0999 73746174 		.ascii	"staticConfig\000"
 4178      6963436F 
 4178      6E666967 
 4178      00
 4179              	.LASF107:
 4180 09a6 696F5074 		.ascii	"ioPtr\000"
 4180      7200
 4181              	.LASF77:
 4182 09ac 70747232 		.ascii	"ptr2WdgtRam\000"
 4182      57646774 
 4182      52616D00 
 4183              	.LASF103:
 4184 09b8 73746174 		.ascii	"state\000"
 4184      6500
 4185              	.LASF105:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 134


 4186 09be 656C7464 		.ascii	"eltdIndex\000"
 4186      496E6465 
 4186      7800
 4187              	.LASF70:
 4188 09c8 6873696F 		.ascii	"hsiomMask\000"
 4188      6D4D6173 
 4188      6B00
 4189              	.LASF141:
 4190 09d2 43617053 		.ascii	"CapSense_1_currentSenseMethod\000"
 4190      656E7365 
 4190      5F315F63 
 4190      75727265 
 4190      6E745365 
 4191              	.LASF128:
 4192 09f0 63757253 		.ascii	"curSnsIOPtr\000"
 4192      6E73494F 
 4192      50747200 
 4193              	.LASF34:
 4194 09fc 736E7343 		.ascii	"snsClk\000"
 4194      6C6B00
 4195              	.LASF147:
 4196 0a03 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4196      74657243 
 4196      72697469 
 4196      63616C53 
 4196      65637469 
 4197              	.LASF0:
 4198 0a1a 7369676E 		.ascii	"signed char\000"
 4198      65642063 
 4198      68617200 
 4199              	.LASF41:
 4200 0a26 62736C6E 		.ascii	"bsln\000"
 4200      00
 4201              	.LASF3:
 4202 0a2b 73686F72 		.ascii	"short unsigned int\000"
 4202      7420756E 
 4202      7369676E 
 4202      65642069 
 4202      6E7400
 4203              	.LASF75:
 4204 0a3e 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 4204      656E7365 
 4204      5F315F46 
 4204      4C415348 
 4204      5F494F5F 
 4205              	.LASF95:
 4206 0a59 6E657752 		.ascii	"newRegValue\000"
 4206      65675661 
 4206      6C756500 
 4207              	.LASF126:
 4208 0a65 43617053 		.ascii	"CapSense_1_SsClearCSDSensors\000"
 4208      656E7365 
 4208      5F315F53 
 4208      73436C65 
 4208      61724353 
 4209              	.LASF9:
 4210 0a82 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccGle2he.s 			page 135


 4210      3800
 4211              	.LASF13:
 4212 0a88 646F7562 		.ascii	"double\000"
 4212      6C6500
 4213              	.LASF44:
 4214 0a8f 6E656742 		.ascii	"negBslnRstCnt\000"
 4214      736C6E52 
 4214      7374436E 
 4214      7400
 4215              	.LASF46:
 4216 0a9d 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 4216      656E7365 
 4216      5F315F52 
 4216      414D5F53 
 4216      4E535F53 
 4217              	.LASF49:
 4218 0ab7 64657669 		.ascii	"deviceId\000"
 4218      63654964 
 4218      00
 4219              	.LASF97:
 4220 0ac0 77696467 		.ascii	"widgetStatus\000"
 4220      65745374 
 4220      61747573 
 4220      00
 4221              	.LASF38:
 4222 0acd 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 4222      656E7365 
 4222      5F315F52 
 4222      414D5F57 
 4222      445F4255 
 4223              	.LASF96:
 4224 0aed 77696467 		.ascii	"widgetId\000"
 4224      65744964 
 4224      00
 4225              	.LASF159:
 4226 0af6 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 4226      656E7365 
 4226      5F315F53 
 4226      73506F73 
 4226      74416C6C 
 4227              	.LASF137:
 4228 0b16 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 4228      656E7365 
 4228      5F315F77 
 4228      69646765 
 4228      74496E64 
 4229              	.LASF86:
 4230 0b2d 77646774 		.ascii	"wdgtArray\000"
 4230      41727261 
 4230      7900
 4231              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
