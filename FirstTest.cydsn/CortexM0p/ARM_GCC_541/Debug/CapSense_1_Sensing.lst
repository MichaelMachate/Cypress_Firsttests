ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsSetWidgetSenseClkSrc,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsSetWidgetSenseClkSrc, %function
  24              	CapSense_1_SsSetWidgetSenseClkSrc:
  25              	.LFB20:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \file CapSense_1_Sensing.c
   3:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \version 5.20
   4:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \see CapSense_1 v5.20 Datasheet
  10:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Structure.h"
  43:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_Adc.h"
  58:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (0u != CapSense_1_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #include "CapSense_1_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (0u != CapSense_1_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_1_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  85:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
 161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
 165:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_SENSE_METHOD_ENUM CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_immunity[CapSense_1_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     const uint8 CapSense_1_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint8 CapSense_1_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_RAM_SNS_STRUCT *CapSense_1_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_WD_STRUCT const *CapSense_1_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_IsBusy
 212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint32 CapSense_1_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetupWidget
 240:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDSetupWidgetExt(), CapSense_1_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 259:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_I_REP
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function does not start sensor scanning, the CapSense_1_Scan()
 264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if ((CapSense_1_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_Scan
 348:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function is called only after the CapSense_1_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_1_IsBusy()
 358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_Scan(void)
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXScan();
 384:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDScan();
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXScan();
 394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_SetupWidget() and CapSense_1_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  using the CapSense_1_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 430:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_ScanAllWidgets(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 9


 431:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CapSense_1_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (0u != (CapSense_1_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_ENABLE;
 462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (0u != (CapSense_1_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 scanStatus = CapSense_1_Scan();
 477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 487:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 10


 488:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitialize
 489:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling the CapSense_1_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1 Component at power-up. The CapSense_1_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (centerFreqTrim < CapSense_1_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_1_IMO_FREQUE
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (centerFreqTrim > (CapSense_1_IMO_FREQUENCY_OFFSET_MAX - CapSense_1_IMO_FREQUENCY_O
 534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 544:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 11


 545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****               ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 559:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_MANY_SENSE_MODES_EN)
 564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
 568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSX_E);
 570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ISX_E);
 572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 576:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (initStatus);
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 580:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 581:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetPinState
 583:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 585:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 586:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 587:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 589:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  associated with the ganged sensor is updated.
 590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 592:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 594:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 595:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 596:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 597:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 598:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function accepts the CapSense_1_SHIELD and
 599:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SENSOR states as an input only if there is at least
 600:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_1_TX_PIN
 601:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and CapSense_1_RX_PIN states as an input only if there is at least
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 12


 602:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSX widget in the project.
 603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling this function directly from the application layer is not
 605:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 606:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 607:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  automatically set the required pin states. They ignore changes
 608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  in the design made by the CapSense_1_SetPinState() function.
 609:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 610:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 611:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 612:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 613:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  sensor.
 614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration
 615:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  header file defined as CapSense_1_<WidgetName>_WDGT_ID.
 616:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param sensorElement
 618:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 619:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  its pin state.
 620:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 622:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 623:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_SNS<SensorNumber>_ID.
 624:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 625:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 627:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 628:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \endif
 629:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as:
 631:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_RX<RXNumber>_ID
 632:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_TX<TXNumber>_ID.
 633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 634:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param state
 635:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the state of the sensor to be set:
 636:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     1. CapSense_1_GROUND - The pin is connected to the ground.
 637:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     2. CapSense_1_HIGHZ - The drive mode of the pin is set to High-Z
 638:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        Analog.
 639:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     3. CapSense_1_SHIELD - The shield signal is routed to the pin
 640:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 641:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     4. CapSense_1_SENSOR - The pin is connected to the scanning bus
 642:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method is enabled).
 643:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     5. CapSense_1_TX_PIN - The Tx signal is routed to the sensor
 644:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     6. CapSense_1_RX_PIN - The pin is connected to the scanning bus
 646:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 647:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdIndex;
 653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8  interruptState;
 654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr;
 655:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 13


 659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check the ganged sns flag */
 662:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig & Ca
 663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr = CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 665:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr += sensorElement;
 666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinId];
 667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2
 672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = 1u;
 673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsF
 676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 678:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Reset HSIOM and PC registers */
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 687:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (state)
 689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_GROUND:
 691:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_HIGHZ:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSOR:
 706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Enable sensor */
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDConnectSns(ioPtr);
 708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 709:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 case CapSense_1_SHIELD:
 712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM
 715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 14


 716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     break;
 717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 719:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_TX_PIN:
 723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_GPIO_STRGDRV <<
 726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 728:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_RX_PIN:
 730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK <
 733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wrong state */
 739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 741:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
 743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 745:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 746:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDDisableMode
 749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSD mode.
 753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  4. Disable Shield Electrodes.
 760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void)
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 765:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 770:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 15


 773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)))
 774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Disconnect IDACA and IDACB */
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))) */
 781:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsCSDElectrodeCheck();
 784:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
 789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_1_CSH_TO_AMUXBUS_B_MASK << CapSense_1_CSH_HS
 790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, newRegValue);
 791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 793:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT))
 796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableShieldElectrodes();
 797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)) */
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 800:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 801:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 802:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableCSXMode
 806:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSX mode.
 810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void)
 818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 820:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 825:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 16


 830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_CSXElectrodeCheck();
 833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 834:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 836:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableISXMode
 839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables ISX mode.
 843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void)
 851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 853:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 858:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
 863:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXElectrodeCheck();
 866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_DigPrt2_Stop();
 867:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_USES_PORT_3)
 868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DigPrt3_Stop();
 869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* CapSense_1_USES_PORT_3 */
 870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 871:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 873:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 874:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSwitchSensingMode
 875:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 876:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 877:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 878:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanned.
 880:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 881:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 882:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 883:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 884:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSD mode.
 886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 17


 887:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 888:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 889:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 890:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSX mode.
 891:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 892:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param mode
 893:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the scan mode:
 894:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSD_E
 895:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSX_E
 896:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_ISX_E
 897:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_BIST_E
 898:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_UNDEFINED_E
 899:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 900:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 901:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ENUM mode)
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == CapSense_1_currentSenseMethod)
 907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDDisableMode();
 910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 911:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == CapSense_1_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableCSXMode();
 916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == CapSense_1_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableISXMode();
 922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == CapSense_1_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistDisableMode();
 928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
 933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Release ADC resources */
 934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_AdcReleaseResources();
 935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
 936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 937:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Enable the specified mode */
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == mode)
 940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDInitialize();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 18


 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == mode)
 948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXInitialize();
 952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSX_E;
 953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 954:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == mode)
 956:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 957:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXInitialize();
 960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_ISX_E;
 961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == mode)
 964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistInitialize();
 967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_BIST_E;
 968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 976:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 978:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetIOsInDefaultState
 980:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 981:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 982:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 983:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all electrodes into a default state.
 984:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 985:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 986:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 987:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 988:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - Strong drive.
 989:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 990:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the ADC channels into a default state:
 992:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 993:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - HiZ-Analog.
 994:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 995:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 996:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly from the application
 997:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  layer.
 998:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetIOsInDefaultState(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 19


1001:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
1003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
1004:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 regValue;
1005:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes */
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_1_TOTAL_ELECTRODES; loopIndex++)
1008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 1. Disconnect HSIOM.
1011:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 2. Set strong DM.
1012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 3. Set pin state to logic 0.
1013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1022:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1026:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get next electrode */
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
1029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1030:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ADC_EN)
1032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ClearAdcChannels();
1033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     
1035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ISX_EN)
1036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXSetDefaultDigital();
1037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1039:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
1041:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1042:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsReleaseResources()
1043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1044:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1045:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1046:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1047:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  default state.
1048:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1049:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1050:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The function performs following tasks:
1051:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1052:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1053:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     Cmod for CSD mode)
1054:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1055:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1056:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
1057:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 20


1058:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Resources released successfully.
1059:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1060:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1062:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsReleaseResources(void)
1063:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1065:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
1067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1070:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
1072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableCSXMode();
1075:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1076:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableISXMode();
1079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1080:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableMode();
1083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
1084:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_BistDisableMode();
1087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1088:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) &&  \
1091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsSetIOsInDefaultState();
1093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1094:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE != CapSense_1_CSD_SHIELD_EN) &&  \
1095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION)) */
1096:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1100:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
1102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1103:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return busyStatus;
1105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1108:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1109:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsPostAllWidgetsScan
1111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 21


1115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is the function used by the CapSense_1 ISR to implement multiple widget
1118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanning.
1119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Should not be used by the application layer.
1120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsPostAllWidgetsScan(void)
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Increment widget index
1126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Check if all the widgets are scanned
1127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     */
1129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (1u != CapSense_1_TOTAL_WIDGETS)
1130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus postScanStatus;
1131:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_widgetIndex++;
1135:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             postScanStatus = CapSense_1_SetupWidget((uint32)CapSense_1_widgetIndex);
1137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
1144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_Scan();
1146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (CapSense_1_ENABLE == CapSense_1_CSD_EN))
1151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widget
1153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable the CSD block */
1155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
1156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1158:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                            (CapSense_1_ENABLE == CapSense_1_CSD_EN)) */
1159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update scan Counter */
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.scanCounter++;
1162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1164:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure */
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1169:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 22


1172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1173:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1174:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsIsrInitialize
1185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  proper working of the Component.
1194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1195:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param address
1196:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1197:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1198:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsIsrInitialize(cyisraddress address)
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1203:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetModClkClockDivider
1207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param modClk
1219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The divider value for the modulator clock.
1220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetModClkClockDivider(uint32 modClk)
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Stop modulator clock */
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
1228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CapSense_1_MODCLK_CMD_DIV_SHIFT)|
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 23


1229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_MODCLK_CMD_DISABLE_MASK));
1230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense modClk.
1233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) & CapSense_1_MODCLK_CMD_ENABLE_MASK))
1240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1242:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
1247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_MODCLK_CMD_PA_DIV_SHIFT) |
1248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   CapSense_1_MODCLK_CMD_ENABLE_MASK));
1249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1252:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) &
1255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(~CapSense_1_ModClk__ENABLE_MASK));
1256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Update ModClk clock divider.
1259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_ModClk__DI
1262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= (modClk - 1u);
1263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, newRegValue);
1264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set bit to enable ModClk clock. */
1266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) |
1268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ModClk__ENABLE_MASK);
1269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetSnsClockDivider
1275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the sense clock.
1280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 24


1286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1287:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1289:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1290:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetSnsClockDivider(uint32 snsClk)
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1292:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1294:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense clock.
1297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_SENSE_PERIOD_PTR);
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
1304:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Stop sense clock clock   */
1307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SnsClk__DIV_ID <<
1309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CapSense_1_SNSCLK_CMD_DIV_SHIFT)|
1310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SNSCLK_CMD_DISABLE_MASK));
1311:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Set divider value for sense clock.
1314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * to dividing by 1.
1316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) & CapSense_1_SNSCLK_CMD_ENABLE_MASK))
1321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1324:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_SHIFT
1328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_SNSCLK_CMD_PA_DIV_SHIFT) 
1329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       CapSense_1_SNSCLK_CMD_ENABLE_MASK));
1330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
1331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
1332:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
1336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(~(uint32)CapSense_1_SnsClk__ENABLE_MASK));
1337:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Update snsClk clock divider.
1340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_SnsClk
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 25


1343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (snsClk - 1u);
1344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, newRegValue);
1345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1346:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
1349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_SnsClk__ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetClockDividers
1357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  modClk The divider value for the modulator clock.
1372:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1373:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetModClkClockDivider(modClk);
1378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Sns clock */
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetSnsClockDivider(snsClk);
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ANYMODE_AUTOCAL)
1385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateWidget
1387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the
1392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget prior to calibration.
1393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function performs exactly the same tasks as
1396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_CalibrateAllWidgets, but only for a specified widget.
1397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 26


1400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1403:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
1413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  A macro for the widget ID can be found in the
1415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1 Configuration header file defined as
1416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_<WidgetName>_WDGT_ID.
1417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the specified widget calibration:
1420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateWidget(uint32 widgetId)
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_TOTAL_WIDGETS <= widgetId)
1433:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1435:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /*
1438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              */
1441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (0u != CapSense_1_GET_WIDGET_EN_STATUS(widgetId))
1443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 else
1447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif  /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1453:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Exit from the loop because of a fail */
1455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
1456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 27


1457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN)
1462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSX_E ==
1463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSX widget */
1466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                        CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN) */
1469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)
1471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1474:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSD widget */
1475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RA
1476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1477:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN) */
1478:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RAWCOUNT_C
1482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXCalibrateWidget(widgetId, CapSense_1_ISX_RAWCOUNT_CAL_LEVEL);
1490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
1492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
1494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              /* Update CRC */
1496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN)
1497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_DsUpdateWidgetCrc(widgetId);
1498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN) */
1499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (0u);
1501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateAllWidgets
1508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1511:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  prior to calibration.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 28


1514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1526:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endcond
1527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the calibration process:
1534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateAllWidgets(void)
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1543:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             calibrateStatus |= CapSense_1_CalibrateWidget(wdgtIndex);
1547:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1551:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
1552:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1554:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
1555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsAutoTune
1557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense_1 operation.
1561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the following:
1564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    2*5*R*Cp.
1567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the operation:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 29


1571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_SsAutoTune(void)
1576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cp = 0uL;
1581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1582:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 cpRow = 0uL;
1583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cpWidget[CapSense_1_TOTAL_WIDGETS];
1586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
1587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Configure common config variables */
1590:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_1_CSD_SNSCLK_R_CONST;
1591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.vRef = CapSense_1_CSD_VREF_MV;
1592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_1_CSD_IDAC_GAIN_VALUE_NA;
1593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif ((CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) && (CapSense_1_DISABLE == CY_PSO
1599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained */
1600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1603:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Initialize CSD mode */
1612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDInitialize();
1613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN) */
1614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #1:
1617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - performing the first calibration at fixed settings
1618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sensor Cp
1619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sense clock frequency based on Cp
1620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sense clock for all the widgets */
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1626:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 30


1628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = CapSense_1_CALIBRATION_RESOLUTION;
1633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_1_CAL
1637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
1645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_CAL_LEVEL);
1648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get IDAC */
1657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calculate achived calibration level */
1660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcountR
1661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Find correct sense clock value */
1664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cpRow)
1667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1670:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
1672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
1675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1680:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << Ca
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 31


1685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 {
1686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_1_dsRam.modCsdClk;
1687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 }
1688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #else
1689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #endif
1691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1694:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1700:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calculate achived calibration level */
1702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcount * CapSen
1703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1704:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find correct sense clock value */
1706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cp)
1709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1712:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
1714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1722:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_1_FL
1727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                              ptrWdgt->snsClk = CapSense_1_dsRam.modCsdClk;
1729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
1731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif
1733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1734:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (cpRow > cp)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 32


1742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1744:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Non-CSD widget */
1752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1756:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #2:
1759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with new sense clock frequency
1760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting resolution
1761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1762:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune resolution for all the widgets */
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1771:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1774:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1777:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set parasitic capacitance for columns */
1779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1780:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1787:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1794:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Set parasitic capacitance for rows */
1796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1797:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get IDAC */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 33


1799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get finger capacitance */
1805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Init pointer to sigPFC */
1808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1809:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find resolution */
1811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1814:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #3:
1817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - selecting a widget clock source if AUTO
1818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - updating sensitivity
1820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1821:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sensitivity for all the widgets */
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1832:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
1837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
1838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
1839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return autoTuneStatus;
1843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1844:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) */
1845:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1846:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1847:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
1848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) ||\
1850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
1851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSinking
1853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 34


1856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1863:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void)
1865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1867:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sinking Mode */
1869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM2_PTR) & ~CapSense_1_IDAC_TRIM2_MOD_SNK_MASK;
1870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1871:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK) ;
1872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1873:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1874:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1875:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM2_COMP_SNK_MASK;
1876:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1877:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1878:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1880:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1881:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM2_PTR, trimValue);
1882:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1883:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1884:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
1885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1887:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1888:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) || \
1889:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
1890:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1891:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSourcing
1892:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1893:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1894:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
1895:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1896:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1897:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1898:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1899:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1900:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1901:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void)
1904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1906:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM1_PTR) & ~CapSense_1_IDAC_TRIM1_MOD_SRC_MASK;
1909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK);
1911:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 35


1913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM1_COMP_SRC_MASK;
1915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1918:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM1_PTR, trimValue);
1921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
1924:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1925:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsTrimIdacs
1928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1937:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  source mode based on sink/source mode configuration.
1938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void)
1942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
1947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_
1953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1954:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
1955:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1957:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeImoFreq
1960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the IMO frequency.
1964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  trims are contained in the CapSense_1_immunity[value] array for each
1968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  frequency channel.
1969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 36


1970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param value The frequency channel ID.
1971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeImoFreq(uint32 value)
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1978:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1979:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeClkFreq
1980:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1981:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1982:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1983:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1984:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1985:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1986:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1987:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1988:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1989:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1990:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param chId
1991:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The frequency channel ID.
1992:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1993:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1994:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeClkFreq(uint32 chId)
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1996:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
1997:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset1 = 0u;
1998:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset2 = 0u;
1999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2000:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2004:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 snsClkSrc;
2009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2011:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((0u != CapSense_1_TOTAL_CSD_WIDGETS) || \
2013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_1_TOTAL_CS
2014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_1_dsFlash.wdgtArray[CapSense
2015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)ptrFlas
2016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch(CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex]))
2019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
2022:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get sensor clock divider value */
2023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
2024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsdClk;
2025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2026:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 37


2027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2030:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2038:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2039:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2041:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F1;
2042:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F2;
2043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2044:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2045:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2046:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2047:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Get sense clk source */
2048:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2049:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2050:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2051:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2052:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2053:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2054:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2055:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2056:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2057:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2058:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2059:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2060:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2062:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2063:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2065:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset1 <<= 1u;
2068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset2 <<= 1u;
2069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2070:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2075:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2076:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
2080:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 38


2084:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2088:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2094:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2096:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)
2098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM
2099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2105:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2106:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2107:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider >>= 1;
2110:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (snsClkDivider == 0u)
2111:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2112:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = 1u;
2113:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2114:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2116:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2117:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2118:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2119:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2121:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2122:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSD_WIDGETS) */
2126:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSX_WIDGETS)
2128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
2130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsxClk;
2131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F1;
2135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F2;
2136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2137:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 39


2141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2155:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2159:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSX_WIDGETS) */
2161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CYASSERT(0);
2164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2)))
2173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitializeSourceSenseClk
2175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2177:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2178:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2179:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  for all CSD widgets.
2183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsInitializeSourceSenseClk(void)
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2187:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
2188:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
2191:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2Wdgt
2193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2194:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 40


2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2199:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2204:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2205:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_IS
2206:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2207:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2208:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2209:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
2210:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
2211:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
2212:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2215:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
2216:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_ISX_EN)) && \
2217:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2))) */
2218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2221:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2222:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetSenseClkSrc
2223:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2224:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2230:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget.
2236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2237:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
2239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
  27              		.loc 1 2239 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2243:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 41


2249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2251:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             snsClkDivider = CapSense_1_SsCSDGetColSnsClkDivider(wdgtIndex);
2252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrW
2255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                              CapSen
2256:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /*
2260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * average PRS frequency through the argument.
2262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     */
2263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->r
2264:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
2268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2269:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * average PRS frequency through the argument.
2270:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
2271:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resol
2272:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2273:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2274:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2275:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2276:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2277:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2278:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2280:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
  33              		.loc 1 2280 0
  34 0000 0523     		movs	r3, #5
  35 0002 0B73     		strb	r3, [r1, #12]
2281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2283:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
2284:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
2285:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_SsCSDGetRowSnsClkDivider(wdgtIndex);
2288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /*
2294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * average PRS frequency through the argument.
2296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             */
2297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)pt
2298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
2302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 42


2303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * average PRS frequency through the argument.
2304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
2305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdg
2306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = 0u;
2307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
2309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrScale = 0u;
2311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LF
2313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
  36              		.loc 1 2315 0
  37              		@ sp needed
  38 0004 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE20:
  41              		.size	CapSense_1_SsSetWidgetSenseClkSrc, .-CapSense_1_SsSetWidgetSenseClkSrc
  42 0006 C046     		.section	.text.CapSense_1_SsCSDDisableMode,"ax",%progbits
  43              		.align	2
  44              		.code	16
  45              		.thumb_func
  46              		.type	CapSense_1_SsCSDDisableMode, %function
  47              	CapSense_1_SsCSDDisableMode:
  48              	.LFB7:
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
  49              		.loc 1 763 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53 0000 10B5     		push	{r4, lr}
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 4, -8
  56              		.cfi_offset 14, -4
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
  57              		.loc 1 767 0
  58 0002 064A     		ldr	r2, .L3
  59 0004 1368     		ldr	r3, [r2]
  60              	.LVL1:
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
  61              		.loc 1 768 0
  62 0006 F021     		movs	r1, #240
  63 0008 8B43     		bics	r3, r1
  64              	.LVL2:
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  65              		.loc 1 769 0
  66 000a 1360     		str	r3, [r2]
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
  67              		.loc 1 775 0
  68 000c 044A     		ldr	r2, .L3+4
  69 000e 1368     		ldr	r3, [r2]
  70              	.LVL3:
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
  71              		.loc 1 776 0
  72 0010 EF39     		subs	r1, r1, #239
  73 0012 8B43     		bics	r3, r1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 43


  74              	.LVL4:
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
  75              		.loc 1 777 0
  76 0014 1360     		str	r3, [r2]
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  77              		.loc 1 783 0
  78 0016 FFF7FEFF 		bl	CapSense_1_SsCSDElectrodeCheck
  79              	.LVL5:
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  80              		.loc 1 799 0
  81              		@ sp needed
  82 001a 10BD     		pop	{r4, pc}
  83              	.L4:
  84              		.align	2
  85              	.L3:
  86 001c 00040240 		.word	1073873920
  87 0020 A8020B40 		.word	1074463400
  88              		.cfi_endproc
  89              	.LFE7:
  90              		.size	CapSense_1_SsCSDDisableMode, .-CapSense_1_SsCSDDisableMode
  91              		.section	.text.CapSense_1_IsBusy,"ax",%progbits
  92              		.align	2
  93              		.global	CapSense_1_IsBusy
  94              		.code	16
  95              		.thumb_func
  96              		.type	CapSense_1_IsBusy, %function
  97              	CapSense_1_IsBusy:
  98              	.LFB1:
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
  99              		.loc 1 234 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 104              		.loc 1 235 0
 105 0000 024B     		ldr	r3, .L6
 106 0002 DB68     		ldr	r3, [r3, #12]
 107 0004 8020     		movs	r0, #128
 108 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 109              		.loc 1 236 0
 110              		@ sp needed
 111 0008 7047     		bx	lr
 112              	.L7:
 113 000a C046     		.align	2
 114              	.L6:
 115 000c 00000000 		.word	CapSense_1_dsRam
 116              		.cfi_endproc
 117              	.LFE1:
 118              		.size	CapSense_1_IsBusy, .-CapSense_1_IsBusy
 119              		.section	.text.CapSense_1_SetupWidget,"ax",%progbits
 120              		.align	2
 121              		.global	CapSense_1_SetupWidget
 122              		.code	16
 123              		.thumb_func
 124              		.type	CapSense_1_SetupWidget, %function
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 44


 125              	CapSense_1_SetupWidget:
 126              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 127              		.loc 1 286 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              	.LVL6:
 132 0000 10B5     		push	{r4, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 4, -8
 135              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 136              		.loc 1 289 0
 137 0002 0E4B     		ldr	r3, .L14
 138 0004 DB68     		ldr	r3, [r3, #12]
 139 0006 DB03     		lsls	r3, r3, #15
 140 0008 0DD4     		bmi	.L11
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 141              		.loc 1 299 0
 142 000a 0B28     		cmp	r0, #11
 143 000c 0DD8     		bhi	.L12
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 144              		.loc 1 300 0 discriminator 1
 145 000e 4309     		lsrs	r3, r0, #5
 146 0010 0433     		adds	r3, r3, #4
 147 0012 9B00     		lsls	r3, r3, #2
 148 0014 094A     		ldr	r2, .L14
 149 0016 9B58     		ldr	r3, [r3, r2]
 150 0018 1F22     		movs	r2, #31
 151 001a 0240     		ands	r2, r0
 152 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 153              		.loc 1 299 0 discriminator 1
 154 001e DB07     		lsls	r3, r3, #31
 155 0020 05D4     		bmi	.L13
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 156              		.loc 1 307 0
 157 0022 0124     		movs	r4, #1
 158 0024 04E0     		b	.L9
 159              	.L11:
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 160              		.loc 1 292 0
 161 0026 1124     		movs	r4, #17
 162 0028 02E0     		b	.L9
 163              	.L12:
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 164              		.loc 1 307 0
 165 002a 0124     		movs	r4, #1
 166 002c 00E0     		b	.L9
 167              	.L13:
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 168              		.loc 1 303 0
 169 002e 0024     		movs	r4, #0
 170              	.L9:
 171              	.LVL7:
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 45


 172              		.loc 1 314 0
 173 0030 002C     		cmp	r4, #0
 174 0032 01D1     		bne	.L10
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 175              		.loc 1 327 0
 176 0034 FFF7FEFF 		bl	CapSense_1_CSDSetupWidget
 177              	.LVL8:
 178              	.L10:
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 179              		.loc 1 343 0
 180 0038 2000     		movs	r0, r4
 181              		@ sp needed
 182              	.LVL9:
 183 003a 10BD     		pop	{r4, pc}
 184              	.L15:
 185              		.align	2
 186              	.L14:
 187 003c 00000000 		.word	CapSense_1_dsRam
 188              		.cfi_endproc
 189              	.LFE2:
 190              		.size	CapSense_1_SetupWidget, .-CapSense_1_SetupWidget
 191              		.section	.text.CapSense_1_Scan,"ax",%progbits
 192              		.align	2
 193              		.global	CapSense_1_Scan
 194              		.code	16
 195              		.thumb_func
 196              		.type	CapSense_1_Scan, %function
 197              	CapSense_1_Scan:
 198              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 199              		.loc 1 369 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 10B5     		push	{r4, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 4, -8
 206              		.cfi_offset 14, -4
 207              	.LVL10:
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 208              		.loc 1 372 0
 209 0002 084B     		ldr	r3, .L22
 210 0004 DB68     		ldr	r3, [r3, #12]
 211 0006 DB03     		lsls	r3, r3, #15
 212 0008 07D4     		bmi	.L19
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 213              		.loc 1 379 0
 214 000a 074B     		ldr	r3, .L22+4
 215 000c 1B78     		ldrb	r3, [r3]
 216 000e 012B     		cmp	r3, #1
 217 0010 05D1     		bne	.L21
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 218              		.loc 1 388 0
 219 0012 FFF7FEFF 		bl	CapSense_1_CSDScan
 220              	.LVL11:
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 221              		.loc 1 370 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 46


 222 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 223              		.loc 1 389 0
 224 0018 03E0     		b	.L17
 225              	.L19:
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 226              		.loc 1 375 0
 227 001a 1120     		movs	r0, #17
 228 001c 01E0     		b	.L17
 229              	.L21:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 230              		.loc 1 397 0
 231 001e 0120     		movs	r0, #1
 232 0020 4042     		rsbs	r0, r0, #0
 233              	.L17:
 234              	.LVL12:
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 235              		.loc 1 402 0
 236              		@ sp needed
 237 0022 10BD     		pop	{r4, pc}
 238              	.L23:
 239              		.align	2
 240              	.L22:
 241 0024 00000000 		.word	CapSense_1_dsRam
 242 0028 00000000 		.word	.LANCHOR0
 243              		.cfi_endproc
 244              	.LFE3:
 245              		.size	CapSense_1_Scan, .-CapSense_1_Scan
 246              		.section	.text.CapSense_1_ScanAllWidgets,"ax",%progbits
 247              		.align	2
 248              		.global	CapSense_1_ScanAllWidgets
 249              		.code	16
 250              		.thumb_func
 251              		.type	CapSense_1_ScanAllWidgets, %function
 252              	CapSense_1_ScanAllWidgets:
 253              	.LFB4:
 431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 254              		.loc 1 431 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 10B5     		push	{r4, lr}
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 4, -8
 261              		.cfi_offset 14, -4
 262              	.LVL13:
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 263              		.loc 1 436 0
 264 0002 0F4B     		ldr	r3, .L32
 265 0004 DB68     		ldr	r3, [r3, #12]
 266 0006 1B06     		lsls	r3, r3, #24
 267 0008 18D4     		bmi	.L31
 268 000a 0024     		movs	r4, #0
 269 000c 0120     		movs	r0, #1
 270 000e 4042     		rsbs	r0, r0, #0
 271 0010 11E0     		b	.L26
 272              	.LVL14:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 47


 273              	.L30:
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 274              		.loc 1 452 0
 275 0012 2000     		movs	r0, r4
 276              	.LVL15:
 277 0014 FFF7FEFF 		bl	CapSense_1_SetupWidget
 278              	.LVL16:
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 279              		.loc 1 454 0
 280 0018 0028     		cmp	r0, #0
 281 001a 0BD1     		bne	.L27
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 282              		.loc 1 458 0
 283 001c 0A2C     		cmp	r4, #10
 284 001e 03D8     		bhi	.L28
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 285              		.loc 1 461 0
 286 0020 0122     		movs	r2, #1
 287 0022 084B     		ldr	r3, .L32+4
 288 0024 5A70     		strb	r2, [r3, #1]
 289 0026 02E0     		b	.L29
 290              	.L28:
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 291              		.loc 1 466 0
 292 0028 0022     		movs	r2, #0
 293 002a 064B     		ldr	r3, .L32+4
 294 002c 5A70     		strb	r2, [r3, #1]
 295              	.L29:
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 296              		.loc 1 476 0
 297 002e FFF7FEFF 		bl	CapSense_1_Scan
 298              	.LVL17:
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 299              		.loc 1 478 0
 300 0032 04E0     		b	.L25
 301              	.L27:
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 302              		.loc 1 449 0
 303 0034 0134     		adds	r4, r4, #1
 304              	.LVL18:
 305              	.L26:
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 306              		.loc 1 447 0 discriminator 1
 307 0036 0B2C     		cmp	r4, #11
 308 0038 EBD9     		bls	.L30
 309 003a 00E0     		b	.L25
 310              	.LVL19:
 311              	.L31:
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 312              		.loc 1 439 0
 313 003c 1120     		movs	r0, #17
 314              	.LVL20:
 315              	.L25:
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 316              		.loc 1 484 0
 317              		@ sp needed
 318 003e 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 48


 319              	.L33:
 320              		.align	2
 321              	.L32:
 322 0040 00000000 		.word	CapSense_1_dsRam
 323 0044 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE4:
 326              		.size	CapSense_1_ScanAllWidgets, .-CapSense_1_ScanAllWidgets
 327              		.section	.text.CapSense_1_SetPinState,"ax",%progbits
 328              		.align	2
 329              		.global	CapSense_1_SetPinState
 330              		.code	16
 331              		.thumb_func
 332              		.type	CapSense_1_SetPinState, %function
 333              	CapSense_1_SetPinState:
 334              	.LFB6:
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 335              		.loc 1 650 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              	.LVL21:
 340 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 341              		.cfi_def_cfa_offset 24
 342              		.cfi_offset 3, -24
 343              		.cfi_offset 4, -20
 344              		.cfi_offset 5, -16
 345              		.cfi_offset 6, -12
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 1600     		movs	r6, r2
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 349              		.loc 1 675 0
 350 0004 C300     		lsls	r3, r0, #3
 351 0006 181A     		subs	r0, r3, r0
 352              	.LVL22:
 353 0008 8300     		lsls	r3, r0, #2
 354 000a 244A     		ldr	r2, .L41
 355              	.LVL23:
 356 000c 9C58     		ldr	r4, [r3, r2]
 357 000e CB00     		lsls	r3, r1, #3
 358 0010 591A     		subs	r1, r3, r1
 359              	.LVL24:
 360 0012 8B00     		lsls	r3, r1, #2
 361 0014 E418     		adds	r4, r4, r3
 362              	.LVL25:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 363              		.loc 1 680 0
 364 0016 0025     		movs	r5, #0
 365 0018 3CE0     		b	.L35
 366              	.LVL26:
 367              	.L40:
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 368              		.loc 1 683 0
 369 001a FFF7FEFF 		bl	CyEnterCriticalSection
 370              	.LVL27:
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 49


 371              		.loc 1 684 0
 372 001e 2168     		ldr	r1, [r4]
 373 0020 0B68     		ldr	r3, [r1]
 374 0022 277E     		ldrb	r7, [r4, #24]
 375 0024 0F22     		movs	r2, #15
 376 0026 BA40     		lsls	r2, r2, r7
 377 0028 9343     		bics	r3, r2
 378 002a 0B60     		str	r3, [r1]
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 379              		.loc 1 685 0
 380 002c 6168     		ldr	r1, [r4, #4]
 381 002e 0B68     		ldr	r3, [r1]
 382 0030 A77E     		ldrb	r7, [r4, #26]
 383 0032 0722     		movs	r2, #7
 384 0034 BA40     		lsls	r2, r2, r7
 385 0036 9343     		bics	r3, r2
 386 0038 0B60     		str	r3, [r1]
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 387              		.loc 1 686 0
 388 003a FFF7FEFF 		bl	CyExitCriticalSection
 389              	.LVL28:
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 390              		.loc 1 688 0
 391 003e 012E     		cmp	r6, #1
 392 0040 17D0     		beq	.L37
 393 0042 002E     		cmp	r6, #0
 394 0044 02D0     		beq	.L38
 395 0046 032E     		cmp	r6, #3
 396 0048 1FD0     		beq	.L39
 397 004a 21E0     		b	.L36
 398              	.L38:
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 399              		.loc 1 692 0
 400 004c FFF7FEFF 		bl	CyEnterCriticalSection
 401              	.LVL29:
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 402              		.loc 1 693 0
 403 0050 6268     		ldr	r2, [r4, #4]
 404 0052 1168     		ldr	r1, [r2]
 405 0054 A77E     		ldrb	r7, [r4, #26]
 406 0056 0623     		movs	r3, #6
 407 0058 BB40     		lsls	r3, r3, r7
 408 005a 0B43     		orrs	r3, r1
 409 005c 1360     		str	r3, [r2]
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 410              		.loc 1 694 0
 411 005e A168     		ldr	r1, [r4, #8]
 412 0060 0B68     		ldr	r3, [r1]
 413 0062 677E     		ldrb	r7, [r4, #25]
 414 0064 0122     		movs	r2, #1
 415 0066 BA40     		lsls	r2, r2, r7
 416 0068 9343     		bics	r3, r2
 417 006a 0B60     		str	r3, [r1]
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 418              		.loc 1 695 0
 419 006c FFF7FEFF 		bl	CyExitCriticalSection
 420              	.LVL30:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 50


 696:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 421              		.loc 1 696 0
 422 0070 0EE0     		b	.L36
 423              	.L37:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 424              		.loc 1 699 0
 425 0072 FFF7FEFF 		bl	CyEnterCriticalSection
 426              	.LVL31:
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 427              		.loc 1 700 0
 428 0076 A168     		ldr	r1, [r4, #8]
 429 0078 0B68     		ldr	r3, [r1]
 430 007a 677E     		ldrb	r7, [r4, #25]
 431 007c 0122     		movs	r2, #1
 432 007e BA40     		lsls	r2, r2, r7
 433 0080 9343     		bics	r3, r2
 434 0082 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 435              		.loc 1 701 0
 436 0084 FFF7FEFF 		bl	CyExitCriticalSection
 437              	.LVL32:
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 438              		.loc 1 702 0
 439 0088 02E0     		b	.L36
 440              	.L39:
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 441              		.loc 1 707 0
 442 008a 2000     		movs	r0, r4
 443 008c FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 444              	.LVL33:
 445              	.L36:
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 446              		.loc 1 742 0 discriminator 2
 447 0090 1C34     		adds	r4, r4, #28
 448              	.LVL34:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 449              		.loc 1 680 0 discriminator 2
 450 0092 0135     		adds	r5, r5, #1
 451              	.LVL35:
 452              	.L35:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 453              		.loc 1 680 0 is_stmt 0 discriminator 1
 454 0094 002D     		cmp	r5, #0
 455 0096 C0D0     		beq	.L40
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 456              		.loc 1 744 0 is_stmt 1
 457              		@ sp needed
 458              	.LVL36:
 459              	.LVL37:
 460              	.LVL38:
 461 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 462              	.L42:
 463 009a C046     		.align	2
 464              	.L41:
 465 009c 00000000 		.word	CapSense_1_dsFlash
 466              		.cfi_endproc
 467              	.LFE6:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 51


 468              		.size	CapSense_1_SetPinState, .-CapSense_1_SetPinState
 469              		.section	.text.CapSense_1_SsSwitchSensingMode,"ax",%progbits
 470              		.align	2
 471              		.global	CapSense_1_SsSwitchSensingMode
 472              		.code	16
 473              		.thumb_func
 474              		.type	CapSense_1_SsSwitchSensingMode, %function
 475              	CapSense_1_SsSwitchSensingMode:
 476              	.LFB8:
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 477              		.loc 1 902 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              	.LVL39:
 482 0000 10B5     		push	{r4, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 4, -8
 485              		.cfi_offset 14, -4
 486 0002 0400     		movs	r4, r0
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 487              		.loc 1 903 0
 488 0004 0C4B     		ldr	r3, .L47
 489 0006 1B78     		ldrb	r3, [r3]
 490 0008 8342     		cmp	r3, r0
 491 000a 14D0     		beq	.L43
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 492              		.loc 1 906 0
 493 000c 012B     		cmp	r3, #1
 494 000e 01D1     		bne	.L45
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 495              		.loc 1 909 0
 496 0010 FFF7FEFF 		bl	CapSense_1_SsCSDDisableMode
 497              	.LVL40:
 498              	.L45:
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 499              		.loc 1 939 0
 500 0014 012C     		cmp	r4, #1
 501 0016 05D1     		bne	.L46
 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 502              		.loc 1 943 0
 503 0018 FFF7FEFF 		bl	CapSense_1_SsCSDInitialize
 504              	.LVL41:
 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 505              		.loc 1 944 0
 506 001c 0122     		movs	r2, #1
 507 001e 064B     		ldr	r3, .L47
 508 0020 1A70     		strb	r2, [r3]
 509 0022 08E0     		b	.L43
 510              	.L46:
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 511              		.loc 1 947 0
 512 0024 022C     		cmp	r4, #2
 513 0026 06D0     		beq	.L43
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 514              		.loc 1 955 0
 515 0028 042C     		cmp	r4, #4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 52


 516 002a 04D0     		beq	.L43
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 517              		.loc 1 963 0
 518 002c 032C     		cmp	r4, #3
 519 002e 02D0     		beq	.L43
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 520              		.loc 1 972 0
 521 0030 0022     		movs	r2, #0
 522 0032 014B     		ldr	r3, .L47
 523 0034 1A70     		strb	r2, [r3]
 524              	.L43:
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 525              		.loc 1 975 0
 526              		@ sp needed
 527 0036 10BD     		pop	{r4, pc}
 528              	.L48:
 529              		.align	2
 530              	.L47:
 531 0038 00000000 		.word	.LANCHOR0
 532              		.cfi_endproc
 533              	.LFE8:
 534              		.size	CapSense_1_SsSwitchSensingMode, .-CapSense_1_SsSwitchSensingMode
 535              		.section	.text.CapSense_1_SsSetIOsInDefaultState,"ax",%progbits
 536              		.align	2
 537              		.global	CapSense_1_SsSetIOsInDefaultState
 538              		.code	16
 539              		.thumb_func
 540              		.type	CapSense_1_SsSetIOsInDefaultState, %function
 541              	CapSense_1_SsSetIOsInDefaultState:
 542              	.LFB9:
1001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
 543              		.loc 1 1001 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547 0000 30B5     		push	{r4, r5, lr}
 548              		.cfi_def_cfa_offset 12
 549              		.cfi_offset 4, -12
 550              		.cfi_offset 5, -8
 551              		.cfi_offset 14, -4
 552              	.LVL42:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 553              		.loc 1 1007 0
 554 0002 0020     		movs	r0, #0
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
 555              		.loc 1 1002 0
 556 0004 0D4B     		ldr	r3, .L52
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 557              		.loc 1 1007 0
 558 0006 16E0     		b	.L50
 559              	.LVL43:
 560              	.L51:
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 561              		.loc 1 1014 0 discriminator 3
 562 0008 1968     		ldr	r1, [r3]
 563 000a 0A68     		ldr	r2, [r1]
 564              	.LVL44:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 53


1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 565              		.loc 1 1015 0 discriminator 3
 566 000c 1C69     		ldr	r4, [r3, #16]
 567 000e A243     		bics	r2, r4
 568              	.LVL45:
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 569              		.loc 1 1016 0 discriminator 3
 570 0010 0A60     		str	r2, [r1]
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
 571              		.loc 1 1018 0 discriminator 3
 572 0012 5C68     		ldr	r4, [r3, #4]
 573 0014 2268     		ldr	r2, [r4]
 574              	.LVL46:
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
 575              		.loc 1 1019 0 discriminator 3
 576 0016 9D7E     		ldrb	r5, [r3, #26]
 577 0018 0721     		movs	r1, #7
 578 001a A940     		lsls	r1, r1, r5
 579 001c 8A43     		bics	r2, r1
 580              	.LVL47:
 581 001e 1100     		movs	r1, r2
 582              	.LVL48:
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 583              		.loc 1 1020 0 discriminator 3
 584 0020 0622     		movs	r2, #6
 585 0022 AA40     		lsls	r2, r2, r5
 586 0024 0A43     		orrs	r2, r1
 587              	.LVL49:
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 588              		.loc 1 1021 0 discriminator 3
 589 0026 2260     		str	r2, [r4]
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
 590              		.loc 1 1023 0 discriminator 3
 591 0028 9968     		ldr	r1, [r3, #8]
 592 002a 0A68     		ldr	r2, [r1]
 593              	.LVL50:
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 594              		.loc 1 1024 0 discriminator 3
 595 002c 5C69     		ldr	r4, [r3, #20]
 596 002e A243     		bics	r2, r4
 597              	.LVL51:
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 598              		.loc 1 1025 0 discriminator 3
 599 0030 0A60     		str	r2, [r1]
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 600              		.loc 1 1028 0 discriminator 3
 601 0032 1C33     		adds	r3, r3, #28
 602              	.LVL52:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 603              		.loc 1 1007 0 discriminator 3
 604 0034 0130     		adds	r0, r0, #1
 605              	.LVL53:
 606              	.L50:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 607              		.loc 1 1007 0 is_stmt 0 discriminator 1
 608 0036 0B28     		cmp	r0, #11
 609 0038 E6D9     		bls	.L51
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 54


1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 610              		.loc 1 1038 0 is_stmt 1
 611              		@ sp needed
 612 003a 30BD     		pop	{r4, r5, pc}
 613              	.L53:
 614              		.align	2
 615              	.L52:
 616 003c 00000000 		.word	CapSense_1_ioList
 617              		.cfi_endproc
 618              	.LFE9:
 619              		.size	CapSense_1_SsSetIOsInDefaultState, .-CapSense_1_SsSetIOsInDefaultState
 620              		.section	.text.CapSense_1_SsPostAllWidgetsScan,"ax",%progbits
 621              		.align	2
 622              		.global	CapSense_1_SsPostAllWidgetsScan
 623              		.code	16
 624              		.thumb_func
 625              		.type	CapSense_1_SsPostAllWidgetsScan, %function
 626              	CapSense_1_SsPostAllWidgetsScan:
 627              	.LFB10:
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 628              		.loc 1 1123 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632 0000 10B5     		push	{r4, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 4, -8
 635              		.cfi_offset 14, -4
 636              	.L59:
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 637              		.loc 1 1134 0
 638 0002 1B4A     		ldr	r2, .L60
 639 0004 9378     		ldrb	r3, [r2, #2]
 640 0006 0133     		adds	r3, r3, #1
 641 0008 DBB2     		uxtb	r3, r3
 642 000a 9370     		strb	r3, [r2, #2]
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 643              		.loc 1 1136 0
 644 000c 9078     		ldrb	r0, [r2, #2]
 645 000e C0B2     		uxtb	r0, r0
 646 0010 FFF7FEFF 		bl	CapSense_1_SetupWidget
 647              	.LVL54:
 648 0014 041E     		subs	r4, r0, #0
 649              	.LVL55:
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 650              		.loc 1 1138 0
 651 0016 09D1     		bne	.L55
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 652              		.loc 1 1140 0
 653 0018 154B     		ldr	r3, .L60
 654 001a 9B78     		ldrb	r3, [r3, #2]
 655 001c 0B2B     		cmp	r3, #11
 656 001e 02D1     		bne	.L56
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 657              		.loc 1 1143 0
 658 0020 0022     		movs	r2, #0
 659 0022 134B     		ldr	r3, .L60
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 55


 660 0024 5A70     		strb	r2, [r3, #1]
 661              	.L56:
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 662              		.loc 1 1145 0
 663 0026 FFF7FEFF 		bl	CapSense_1_Scan
 664              	.LVL56:
 665 002a 1EE0     		b	.L57
 666              	.LVL57:
 667              	.L55:
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 668              		.loc 1 1147 0
 669 002c 104B     		ldr	r3, .L60
 670 002e 9B78     		ldrb	r3, [r3, #2]
 671 0030 0B2B     		cmp	r3, #11
 672 0032 11D1     		bne	.L58
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 673              		.loc 1 1161 0
 674 0034 0F4B     		ldr	r3, .L60+4
 675 0036 1A89     		ldrh	r2, [r3, #8]
 676 0038 0132     		adds	r2, r2, #1
 677 003a 1A81     		strh	r2, [r3, #8]
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 678              		.loc 1 1163 0
 679 003c DA68     		ldr	r2, [r3, #12]
 680 003e 8021     		movs	r1, #128
 681 0040 8A43     		bics	r2, r1
 682 0042 DA60     		str	r2, [r3, #12]
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
 683              		.loc 1 1166 0
 684 0044 DA68     		ldr	r2, [r3, #12]
 685 0046 1202     		lsls	r2, r2, #8
 686 0048 120A     		lsrs	r2, r2, #8
 687 004a DA60     		str	r2, [r3, #12]
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 688              		.loc 1 1167 0
 689 004c DA68     		ldr	r2, [r3, #12]
 690 004e 0406     		lsls	r4, r0, #24
 691 0050 1443     		orrs	r4, r2
 692 0052 DC60     		str	r4, [r3, #12]
 693              	.LVL58:
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 694              		.loc 1 1170 0
 695 0054 0024     		movs	r4, #0
 696 0056 08E0     		b	.L57
 697              	.LVL59:
 698              	.L58:
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
 699              		.loc 1 1175 0
 700 0058 064A     		ldr	r2, .L60+4
 701 005a D368     		ldr	r3, [r2, #12]
 702 005c 1B02     		lsls	r3, r3, #8
 703 005e 1B0A     		lsrs	r3, r3, #8
 704 0060 D360     		str	r3, [r2, #12]
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 705              		.loc 1 1176 0
 706 0062 D168     		ldr	r1, [r2, #12]
 707 0064 0306     		lsls	r3, r0, #24
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 56


 708 0066 0B43     		orrs	r3, r1
 709 0068 D360     		str	r3, [r2, #12]
 710              	.LVL60:
 711              	.L57:
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
 712              		.loc 1 1178 0
 713 006a 002C     		cmp	r4, #0
 714 006c C9D1     		bne	.L59
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 715              		.loc 1 1180 0
 716              		@ sp needed
 717              	.LVL61:
 718 006e 10BD     		pop	{r4, pc}
 719              	.L61:
 720              		.align	2
 721              	.L60:
 722 0070 00000000 		.word	.LANCHOR0
 723 0074 00000000 		.word	CapSense_1_dsRam
 724              		.cfi_endproc
 725              	.LFE10:
 726              		.size	CapSense_1_SsPostAllWidgetsScan, .-CapSense_1_SsPostAllWidgetsScan
 727              		.section	.text.CapSense_1_SsIsrInitialize,"ax",%progbits
 728              		.align	2
 729              		.global	CapSense_1_SsIsrInitialize
 730              		.code	16
 731              		.thumb_func
 732              		.type	CapSense_1_SsIsrInitialize, %function
 733              	CapSense_1_SsIsrInitialize:
 734              	.LFB11:
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
 735              		.loc 1 1200 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739              	.LVL62:
 740 0000 10B5     		push	{r4, lr}
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 4, -8
 743              		.cfi_offset 14, -4
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 744              		.loc 1 1201 0
 745 0002 FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 746              	.LVL63:
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 747              		.loc 1 1202 0
 748              		@ sp needed
 749 0006 10BD     		pop	{r4, pc}
 750              		.cfi_endproc
 751              	.LFE11:
 752              		.size	CapSense_1_SsIsrInitialize, .-CapSense_1_SsIsrInitialize
 753              		.section	.text.CapSense_1_SsSetModClkClockDivider,"ax",%progbits
 754              		.align	2
 755              		.global	CapSense_1_SsSetModClkClockDivider
 756              		.code	16
 757              		.thumb_func
 758              		.type	CapSense_1_SsSetModClkClockDivider, %function
 759              	CapSense_1_SsSetModClkClockDivider:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 57


 760              	.LFB12:
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
 761              		.loc 1 1223 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              		@ link register save eliminated.
 766              	.LVL64:
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
 767              		.loc 1 1226 0
 768 0000 074A     		ldr	r2, .L65
 769 0002 084B     		ldr	r3, .L65+4
 770 0004 1A60     		str	r2, [r3]
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 771              		.loc 1 1236 0
 772 0006 0138     		subs	r0, r0, #1
 773              	.LVL65:
 774 0008 0002     		lsls	r0, r0, #8
 775              	.LVL66:
 776 000a 074B     		ldr	r3, .L65+8
 777 000c 1860     		str	r0, [r3]
 778              	.L64:
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 779              		.loc 1 1239 0 discriminator 1
 780 000e 054B     		ldr	r3, .L65+4
 781 0010 1B68     		ldr	r3, [r3]
 782 0012 002B     		cmp	r3, #0
 783 0014 FBDB     		blt	.L64
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
 784              		.loc 1 1245 0
 785 0016 054A     		ldr	r2, .L65+12
 786 0018 024B     		ldr	r3, .L65+4
 787 001a 1A60     		str	r2, [r3]
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 788              		.loc 1 1270 0
 789              		@ sp needed
 790 001c 7047     		bx	lr
 791              	.L66:
 792 001e C046     		.align	2
 793              	.L65:
 794 0020 40000040 		.word	1073741888
 795 0024 00000140 		.word	1073807360
 796 0028 00030140 		.word	1073808128
 797 002c 40FF0080 		.word	-2147418304
 798              		.cfi_endproc
 799              	.LFE12:
 800              		.size	CapSense_1_SsSetModClkClockDivider, .-CapSense_1_SsSetModClkClockDivider
 801              		.section	.text.CapSense_1_SsSetSnsClockDivider,"ax",%progbits
 802              		.align	2
 803              		.global	CapSense_1_SsSetSnsClockDivider
 804              		.code	16
 805              		.thumb_func
 806              		.type	CapSense_1_SsSetSnsClockDivider, %function
 807              	CapSense_1_SsSetSnsClockDivider:
 808              	.LFB13:
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 809              		.loc 1 1291 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 58


 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814              	.LVL67:
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
 815              		.loc 1 1300 0
 816 0000 034A     		ldr	r2, .L68
 817 0002 1368     		ldr	r3, [r2]
 818              	.LVL68:
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
 819              		.loc 1 1301 0
 820 0004 1B0B     		lsrs	r3, r3, #12
 821              	.LVL69:
 822 0006 1B03     		lsls	r3, r3, #12
 823              	.LVL70:
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
 824              		.loc 1 1302 0
 825 0008 0138     		subs	r0, r0, #1
 826              	.LVL71:
 827 000a 1843     		orrs	r0, r3
 828              	.LVL72:
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 829              		.loc 1 1303 0
 830 000c 1060     		str	r0, [r2]
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 831              		.loc 1 1352 0
 832              		@ sp needed
 833 000e 7047     		bx	lr
 834              	.L69:
 835              		.align	2
 836              	.L68:
 837 0010 00020B40 		.word	1074463232
 838              		.cfi_endproc
 839              	.LFE13:
 840              		.size	CapSense_1_SsSetSnsClockDivider, .-CapSense_1_SsSetSnsClockDivider
 841              		.section	.text.CapSense_1_SsSetClockDividers,"ax",%progbits
 842              		.align	2
 843              		.global	CapSense_1_SsSetClockDividers
 844              		.code	16
 845              		.thumb_func
 846              		.type	CapSense_1_SsSetClockDividers, %function
 847              	CapSense_1_SsSetClockDividers:
 848              	.LFB14:
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
 849              		.loc 1 1375 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853              	.LVL73:
 854 0000 10B5     		push	{r4, lr}
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 4, -8
 857              		.cfi_offset 14, -4
 858 0002 0400     		movs	r4, r0
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 859              		.loc 1 1377 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 59


 860 0004 0800     		movs	r0, r1
 861              	.LVL74:
 862 0006 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 863              	.LVL75:
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 864              		.loc 1 1380 0
 865 000a 2000     		movs	r0, r4
 866 000c FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 867              	.LVL76:
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 868              		.loc 1 1381 0
 869              		@ sp needed
 870              	.LVL77:
 871 0010 10BD     		pop	{r4, pc}
 872              		.cfi_endproc
 873              	.LFE14:
 874              		.size	CapSense_1_SsSetClockDividers, .-CapSense_1_SsSetClockDividers
 875 0012 C046     		.section	.text.CapSense_1_CalibrateWidget,"ax",%progbits
 876              		.align	2
 877              		.global	CapSense_1_CalibrateWidget
 878              		.code	16
 879              		.thumb_func
 880              		.type	CapSense_1_CalibrateWidget, %function
 881              	CapSense_1_CalibrateWidget:
 882              	.LFB15:
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 883              		.loc 1 1427 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              	.LVL78:
 888 0000 10B5     		push	{r4, lr}
 889              		.cfi_def_cfa_offset 8
 890              		.cfi_offset 4, -8
 891              		.cfi_offset 14, -4
 892 0002 0300     		movs	r3, r0
 893              	.LVL79:
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 894              		.loc 1 1432 0
 895 0004 0B28     		cmp	r0, #11
 896 0006 01D8     		bhi	.L74
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 897              		.loc 1 1428 0
 898 0008 0020     		movs	r0, #0
 899              	.LVL80:
 900 000a 00E0     		b	.L72
 901              	.LVL81:
 902              	.L74:
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 903              		.loc 1 1434 0
 904 000c 0120     		movs	r0, #1
 905              	.LVL82:
 906              	.L72:
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 907              		.loc 1 1452 0
 908 000e 0028     		cmp	r0, #0
 909 0010 03D1     		bne	.L73
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 60


1481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 910              		.loc 1 1481 0
 911 0012 5521     		movs	r1, #85
 912 0014 1800     		movs	r0, r3
 913              	.LVL83:
 914 0016 FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 915              	.LVL84:
 916              	.L73:
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 917              		.loc 1 1503 0
 918              		@ sp needed
 919 001a 10BD     		pop	{r4, pc}
 920              		.cfi_endproc
 921              	.LFE15:
 922              		.size	CapSense_1_CalibrateWidget, .-CapSense_1_CalibrateWidget
 923              		.section	.text.CapSense_1_CalibrateAllWidgets,"ax",%progbits
 924              		.align	2
 925              		.global	CapSense_1_CalibrateAllWidgets
 926              		.code	16
 927              		.thumb_func
 928              		.type	CapSense_1_CalibrateAllWidgets, %function
 929              	CapSense_1_CalibrateAllWidgets:
 930              	.LFB16:
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 931              		.loc 1 1540 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935 0000 70B5     		push	{r4, r5, r6, lr}
 936              		.cfi_def_cfa_offset 16
 937              		.cfi_offset 4, -16
 938              		.cfi_offset 5, -12
 939              		.cfi_offset 6, -8
 940              		.cfi_offset 14, -4
 941              	.LVL85:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 942              		.loc 1 1544 0
 943 0002 0024     		movs	r4, #0
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
 944              		.loc 1 1541 0
 945 0004 0025     		movs	r5, #0
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 946              		.loc 1 1544 0
 947 0006 04E0     		b	.L76
 948              	.LVL86:
 949              	.L77:
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 950              		.loc 1 1546 0 discriminator 3
 951 0008 2000     		movs	r0, r4
 952 000a FFF7FEFF 		bl	CapSense_1_CalibrateWidget
 953              	.LVL87:
 954 000e 0543     		orrs	r5, r0
 955              	.LVL88:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 956              		.loc 1 1544 0 discriminator 3
 957 0010 0134     		adds	r4, r4, #1
 958              	.LVL89:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 61


 959              	.L76:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 960              		.loc 1 1544 0 is_stmt 0 discriminator 1
 961 0012 0B2C     		cmp	r4, #11
 962 0014 F8D9     		bls	.L77
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
 963              		.loc 1 1550 0 is_stmt 1
 964 0016 2800     		movs	r0, r5
 965              		@ sp needed
 966              	.LVL90:
 967              	.LVL91:
 968 0018 70BD     		pop	{r4, r5, r6, pc}
 969              		.cfi_endproc
 970              	.LFE16:
 971              		.size	CapSense_1_CalibrateAllWidgets, .-CapSense_1_CalibrateAllWidgets
 972 001a C046     		.section	.text.CapSense_1_SsChangeImoFreq,"ax",%progbits
 973              		.align	2
 974              		.global	CapSense_1_SsChangeImoFreq
 975              		.code	16
 976              		.thumb_func
 977              		.type	CapSense_1_SsChangeImoFreq, %function
 978              	CapSense_1_SsChangeImoFreq:
 979              	.LFB17:
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
 980              		.loc 1 1974 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984              		@ link register save eliminated.
 985              	.LVL92:
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 986              		.loc 1 1975 0
 987 0000 024B     		ldr	r3, .L79
 988 0002 1818     		adds	r0, r3, r0
 989              	.LVL93:
 990 0004 0279     		ldrb	r2, [r0, #4]
 991 0006 024B     		ldr	r3, .L79+4
 992 0008 1A60     		str	r2, [r3]
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 993              		.loc 1 1976 0
 994              		@ sp needed
 995 000a 7047     		bx	lr
 996              	.L80:
 997              		.align	2
 998              	.L79:
 999 000c 00000000 		.word	.LANCHOR0
 1000 0010 0C0F0340 		.word	1073942284
 1001              		.cfi_endproc
 1002              	.LFE17:
 1003              		.size	CapSense_1_SsChangeImoFreq, .-CapSense_1_SsChangeImoFreq
 1004              		.section	.text.CapSense_1_SsChangeClkFreq,"ax",%progbits
 1005              		.align	2
 1006              		.global	CapSense_1_SsChangeClkFreq
 1007              		.code	16
 1008              		.thumb_func
 1009              		.type	CapSense_1_SsChangeClkFreq, %function
 1010              	CapSense_1_SsChangeClkFreq:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 62


 1011              	.LFB18:
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
 1012              		.loc 1 1995 0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 0
 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 1016              	.LVL94:
 1017 0000 70B5     		push	{r4, r5, r6, lr}
 1018              		.cfi_def_cfa_offset 16
 1019              		.cfi_offset 4, -16
 1020              		.cfi_offset 5, -12
 1021              		.cfi_offset 6, -8
 1022              		.cfi_offset 14, -4
 1023              	.LVL95:
2014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)ptrFlas
 1024              		.loc 1 2014 0
 1025 0002 184B     		ldr	r3, .L92
 1026 0004 9A78     		ldrb	r2, [r3, #2]
 1027 0006 D2B2     		uxtb	r2, r2
 1028              	.LVL96:
2015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 1029              		.loc 1 2015 0
 1030 0008 D300     		lsls	r3, r2, #3
 1031 000a 9A1A     		subs	r2, r3, r2
 1032              	.LVL97:
 1033 000c 9300     		lsls	r3, r2, #2
 1034 000e 164A     		ldr	r2, .L92+4
 1035 0010 D318     		adds	r3, r2, r3
 1036 0012 5A68     		ldr	r2, [r3, #4]
 1037              	.LVL98:
2024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
 1038              		.loc 1 2024 0
 1039 0014 154B     		ldr	r3, .L92+8
 1040 0016 1D8D     		ldrh	r5, [r3, #40]
 1041              	.LVL99:
2059:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
 1042              		.loc 1 2059 0
 1043 0018 147B     		ldrb	r4, [r2, #12]
 1044              	.LVL100:
2062:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 1045              		.loc 1 2062 0
 1046 001a 631F     		subs	r3, r4, #5
 1047 001c DBB2     		uxtb	r3, r3
 1048 001e 012B     		cmp	r3, #1
 1049 0020 02D9     		bls	.L91
2042:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1050              		.loc 1 2042 0
 1051 0022 0223     		movs	r3, #2
2041:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F2;
 1052              		.loc 1 2041 0
 1053 0024 0121     		movs	r1, #1
 1054 0026 01E0     		b	.L83
 1055              	.L91:
2068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
 1056              		.loc 1 2068 0
 1057 0028 0423     		movs	r3, #4
2067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset2 <<= 1u;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 63


 1058              		.loc 1 2067 0
 1059 002a 0221     		movs	r1, #2
 1060              	.L83:
 1061              	.LVL101:
2077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1062              		.loc 1 2077 0
 1063 002c 0128     		cmp	r0, #1
 1064 002e 02D0     		beq	.L85
 1065 0030 0228     		cmp	r0, #2
 1066 0032 02D0     		beq	.L86
 1067 0034 02E0     		b	.L84
 1068              	.L85:
2081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
 1069              		.loc 1 2081 0
 1070 0036 6D18     		adds	r5, r5, r1
 1071              	.LVL102:
2082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 1072              		.loc 1 2082 0
 1073 0038 00E0     		b	.L84
 1074              	.L86:
2086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
 1075              		.loc 1 2086 0
 1076 003a ED18     		adds	r5, r5, r3
 1077              	.LVL103:
 1078              	.L84:
2097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM
 1079              		.loc 1 2097 0
 1080 003c 1188     		ldrh	r1, [r2]
 1081              	.LVL104:
 1082 003e 2200     		movs	r2, r4
 1083              	.LVL105:
 1084 0040 2800     		movs	r0, r5
 1085              	.LVL106:
 1086 0042 FFF7FEFF 		bl	CapSense_1_SsCSDGetNumberOfConversions
 1087              	.LVL107:
2098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 1088              		.loc 1 2098 0
 1089 0046 0004     		lsls	r0, r0, #16
 1090              	.LVL108:
 1091 0048 000C     		lsrs	r0, r0, #16
 1092 004a 094B     		ldr	r3, .L92+12
 1093 004c 1860     		str	r0, [r3]
2104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 1094              		.loc 1 2104 0
 1095 004e 053C     		subs	r4, r4, #5
 1096              	.LVL109:
 1097 0050 E4B2     		uxtb	r4, r4
 1098              	.LVL110:
 1099 0052 012C     		cmp	r4, #1
 1100 0054 02D8     		bhi	.L87
2109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (snsClkDivider == 0u)
 1101              		.loc 1 2109 0
 1102 0056 6D08     		lsrs	r5, r5, #1
 1103              	.LVL111:
2110:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
 1104              		.loc 1 2110 0
 1105 0058 00D1     		bne	.L87
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 64


2112:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
 1106              		.loc 1 2112 0
 1107 005a 0135     		adds	r5, r5, #1
 1108              	.LVL112:
 1109              	.L87:
2122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1110              		.loc 1 2122 0
 1111 005c 2800     		movs	r0, r5
 1112 005e FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 1113              	.LVL113:
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 1114              		.loc 1 2166 0
 1115              		@ sp needed
 1116              	.LVL114:
 1117 0062 70BD     		pop	{r4, r5, r6, pc}
 1118              	.L93:
 1119              		.align	2
 1120              	.L92:
 1121 0064 00000000 		.word	.LANCHOR0
 1122 0068 00000000 		.word	CapSense_1_dsFlash
 1123 006c 00000000 		.word	CapSense_1_dsRam
 1124 0070 14030B40 		.word	1074463508
 1125              		.cfi_endproc
 1126              	.LFE18:
 1127              		.size	CapSense_1_SsChangeClkFreq, .-CapSense_1_SsChangeClkFreq
 1128              		.section	.text.CapSense_1_SsInitializeSourceSenseClk,"ax",%progbits
 1129              		.align	2
 1130              		.global	CapSense_1_SsInitializeSourceSenseClk
 1131              		.code	16
 1132              		.thumb_func
 1133              		.type	CapSense_1_SsInitializeSourceSenseClk, %function
 1134              	CapSense_1_SsInitializeSourceSenseClk:
 1135              	.LFB19:
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 1136              		.loc 1 2186 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140 0000 10B5     		push	{r4, lr}
 1141              		.cfi_def_cfa_offset 8
 1142              		.cfi_offset 4, -8
 1143              		.cfi_offset 14, -4
 1144              	.LVL115:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1145              		.loc 1 2190 0
 1146 0002 0024     		movs	r4, #0
 1147 0004 09E0     		b	.L95
 1148              	.LVL116:
 1149              	.L96:
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1150              		.loc 1 2192 0
 1151 0006 E200     		lsls	r2, r4, #3
 1152 0008 121B     		subs	r2, r2, r4
 1153 000a 9300     		lsls	r3, r2, #2
 1154 000c 044A     		ldr	r2, .L97
 1155 000e D318     		adds	r3, r2, r3
 1156 0010 5968     		ldr	r1, [r3, #4]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 65


 1157              	.LVL117:
2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 1158              		.loc 1 2198 0
 1159 0012 2000     		movs	r0, r4
 1160 0014 FFF7FEFF 		bl	CapSense_1_SsSetWidgetSenseClkSrc
 1161              	.LVL118:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1162              		.loc 1 2190 0
 1163 0018 0134     		adds	r4, r4, #1
 1164              	.LVL119:
 1165              	.L95:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1166              		.loc 1 2190 0 is_stmt 0 discriminator 1
 1167 001a 0B2C     		cmp	r4, #11
 1168 001c F3D9     		bls	.L96
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
 1169              		.loc 1 2213 0 is_stmt 1
 1170              		@ sp needed
 1171              	.LVL120:
 1172 001e 10BD     		pop	{r4, pc}
 1173              	.L98:
 1174              		.align	2
 1175              	.L97:
 1176 0020 00000000 		.word	CapSense_1_dsFlash
 1177              		.cfi_endproc
 1178              	.LFE19:
 1179              		.size	CapSense_1_SsInitializeSourceSenseClk, .-CapSense_1_SsInitializeSourceSenseClk
 1180              		.section	.text.CapSense_1_SsInitialize,"ax",%progbits
 1181              		.align	2
 1182              		.global	CapSense_1_SsInitialize
 1183              		.code	16
 1184              		.thumb_func
 1185              		.type	CapSense_1_SsInitialize, %function
 1186              	CapSense_1_SsInitialize:
 1187              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 1188              		.loc 1 517 0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 0
 1191              		@ frame_needed = 0, uses_anonymous_args = 0
 1192 0000 10B5     		push	{r4, lr}
 1193              		.cfi_def_cfa_offset 8
 1194              		.cfi_offset 4, -8
 1195              		.cfi_offset 14, -4
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 1196              		.loc 1 524 0
 1197 0002 124B     		ldr	r3, .L103
 1198 0004 1B68     		ldr	r3, [r3]
 1199 0006 DBB2     		uxtb	r3, r3
 1200              	.LVL121:
 525:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1201              		.loc 1 525 0
 1202 0008 114A     		ldr	r2, .L103+4
 1203 000a 1371     		strb	r3, [r2, #4]
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1204              		.loc 1 527 0
 1205 000c 132B     		cmp	r3, #19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 66


 1206 000e 05D8     		bhi	.L100
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 1207              		.loc 1 529 0
 1208 0010 1900     		movs	r1, r3
 1209 0012 1431     		adds	r1, r1, #20
 1210 0014 5171     		strb	r1, [r2, #5]
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 1211              		.loc 1 530 0
 1212 0016 2833     		adds	r3, r3, #40
 1213              	.LVL122:
 1214 0018 9371     		strb	r3, [r2, #6]
 1215 001a 0EE0     		b	.L101
 1216              	.LVL123:
 1217              	.L100:
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1218              		.loc 1 533 0
 1219 001c EB2B     		cmp	r3, #235
 1220 001e 06D9     		bls	.L102
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 1221              		.loc 1 535 0
 1222 0020 0B4A     		ldr	r2, .L103+4
 1223 0022 1900     		movs	r1, r3
 1224 0024 1439     		subs	r1, r1, #20
 1225 0026 5171     		strb	r1, [r2, #5]
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 1226              		.loc 1 536 0
 1227 0028 283B     		subs	r3, r3, #40
 1228              	.LVL124:
 1229 002a 9371     		strb	r3, [r2, #6]
 1230 002c 05E0     		b	.L101
 1231              	.LVL125:
 1232              	.L102:
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 1233              		.loc 1 541 0
 1234 002e 084A     		ldr	r2, .L103+4
 1235 0030 1900     		movs	r1, r3
 1236 0032 1439     		subs	r1, r1, #20
 1237 0034 5171     		strb	r1, [r2, #5]
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 1238              		.loc 1 542 0
 1239 0036 1433     		adds	r3, r3, #20
 1240              	.LVL126:
 1241 0038 9371     		strb	r3, [r2, #6]
 1242              	.L101:
 1243              	.LVL127:
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 1244              		.loc 1 556 0
 1245 003a FFF7FEFF 		bl	CapSense_1_SsInitializeSourceSenseClk
 1246              	.LVL128:
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1247              		.loc 1 561 0
 1248 003e FFF7FEFF 		bl	CapSense_1_SsSetIOsInDefaultState
 1249              	.LVL129:
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 1250              		.loc 1 567 0
 1251 0042 0120     		movs	r0, #1
 1252 0044 FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 67


 1253              	.LVL130:
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1254              		.loc 1 578 0
 1255 0048 0020     		movs	r0, #0
 1256              		@ sp needed
 1257 004a 10BD     		pop	{r4, pc}
 1258              	.L104:
 1259              		.align	2
 1260              	.L103:
 1261 004c 0C0F0340 		.word	1073942284
 1262 0050 00000000 		.word	.LANCHOR0
 1263              		.cfi_endproc
 1264              	.LFE5:
 1265              		.size	CapSense_1_SsInitialize, .-CapSense_1_SsInitialize
 1266              		.section	.text.CapSense_1_SsClearCSDSensors,"ax",%progbits
 1267              		.align	2
 1268              		.global	CapSense_1_SsClearCSDSensors
 1269              		.code	16
 1270              		.thumb_func
 1271              		.type	CapSense_1_SsClearCSDSensors, %function
 1272              	CapSense_1_SsClearCSDSensors:
 1273              	.LFB21:
2316:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2317:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2319:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetTxClkSrc
2322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
2337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2340:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
2342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 conversionsNum;
2344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2345:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)
2348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 snsClkDivider = CapSense_1_SsCSXGetTxClkDivider(wdgtIndex);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 68


2351:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2352:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2353:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2354:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2355:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2356:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Unused function argument */
2357:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)wdgtIndex;
2358:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2359:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2360:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_CSX_TX_CLK_SOURCE;
2361:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2362:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Unused function argument */
2363:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex;
2364:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) */
2365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2366:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
2367:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)) */
2369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
2378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2379:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrSize
2380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2385:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2386:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2387:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  requirements:
2388:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2389:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2390:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2391:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2392:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2393:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2394:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2395:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  resolution The widget resolution.
2396:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2397:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2398:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2400:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2401:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 lfsrSize = 0u;
2403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Find LFSR value */
2405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((CapSense_1_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (CapSense_1_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC4_PERIOD)))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 69


2408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC4;
2410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC3_PERIOD)))
2414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC3;
2416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC2_PERIOD)))
2420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC2;
2422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC1_PERIOD)))
2426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC1;
2428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2429:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (lfsrSize);
2435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2437:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2439:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrScale
2440:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2441:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2442:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2443:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2444:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2445:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2446:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2447:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2448:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  period.
2449:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2450:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  range +/-10%.
2452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2454:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2455:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2456:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2458:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2459:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2460:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2461:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2462:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2463:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2464:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 70


2465:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2466:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2467:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2468:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2470:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2471:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2472:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
2473:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2475:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrScale;
2479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrRange;
2480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrDither;
2481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2482:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     switch(lfsrSize)
2484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC1:
2486:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC1_RANGE;
2488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2490:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC2:
2491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC2_RANGE;
2493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2494:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC3:
2496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC3_RANGE;
2498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2499:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC4:
2501:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC4_RANGE;
2503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2504:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2505:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = 0u;
2508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
2515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((lfsrSize != CapSense_1_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2520:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(lfsrDither < CapSense_1_LFSR_DITHER_PERCENTAGE)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 71


2522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale++;
2524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrDither <<=1uL;
2525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if(lfsrDither > CapSense_1_LFSR_DITHER_PERCENTAGE)
2528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale--;
2530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2536:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return ((uint8)lfsrScale);
2538:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2539:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2540:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****           ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))) */
2547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsClearCSDSensors
2552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  an inactive state.
2558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  connection is Ground or Hi-Z.
2564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsClearCSDSensors(void)
2567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1274              		.loc 1 2567 0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 1278 0000 70B5     		push	{r4, r5, r6, lr}
 1279              		.cfi_def_cfa_offset 16
 1280              		.cfi_offset 4, -16
 1281              		.cfi_offset 5, -12
 1282              		.cfi_offset 6, -8
 1283              		.cfi_offset 14, -4
 1284              	.LVL131:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 72


2568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
2569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsIndex;
2570:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 pinIndex;
2573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2574:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Declare ptr to sensor IO structure */
2577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2579:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_IO_STRUCT const *curSnsIOPtr;
2582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
 1285              		.loc 1 2583 0
 1286 0002 0025     		movs	r5, #0
 1287 0004 16E0     		b	.L106
 1288              	.LVL132:
 1289              	.L109:
2584:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
2586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2588:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
 1290              		.loc 1 2588 0
 1291 0006 EB00     		lsls	r3, r5, #3
 1292 0008 5B1B     		subs	r3, r3, r5
 1293 000a 9A00     		lsls	r2, r3, #2
 1294 000c 0B4B     		ldr	r3, .L110
 1295 000e D658     		ldr	r6, [r2, r3]
 1296              	.LVL133:
2589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                 CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlas
2590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Go through all the sensors in widget */
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_1_dsFlash.wdgtArray[wdgtIndex].total
 1297              		.loc 1 2592 0
 1298 0010 0024     		movs	r4, #0
 1299 0012 06E0     		b	.L107
 1300              	.LVL134:
 1301              	.L108:
2593:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Check ganged sns flag */
2596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[wdgtIndex].
2597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                  CapSense_1_GANGED_SNS_MASK))
2598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get sns pointer */
2600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
2601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                CapSense_1_dsFlash.wdgtArray[wdgtInd
2602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                snsIndex;
2603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             {
2606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinI
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 73


2608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Disconnect dedicated pin */
2610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 CapSense_1_CSDDisconnectSns(curDedicatedSnsIOPtr);
2611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             }
2612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2614:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Disable sensor */
2616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable sensor */
2620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 1302              		.loc 1 2620 0 discriminator 3
 1303 0014 E300     		lsls	r3, r4, #3
 1304 0016 1B1B     		subs	r3, r3, r4
 1305 0018 9800     		lsls	r0, r3, #2
 1306 001a 3018     		adds	r0, r6, r0
 1307 001c FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1308              	.LVL135:
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1309              		.loc 1 2592 0 discriminator 3
 1310 0020 0134     		adds	r4, r4, #1
 1311              	.LVL136:
 1312              	.L107:
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1313              		.loc 1 2592 0 is_stmt 0 discriminator 1
 1314 0022 EA00     		lsls	r2, r5, #3
 1315 0024 521B     		subs	r2, r2, r5
 1316 0026 9300     		lsls	r3, r2, #2
 1317 0028 044A     		ldr	r2, .L110
 1318 002a D318     		adds	r3, r2, r3
 1319 002c 1B7E     		ldrb	r3, [r3, #24]
 1320 002e 9C42     		cmp	r4, r3
 1321 0030 F0D3     		bcc	.L108
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1322              		.loc 1 2583 0 is_stmt 1 discriminator 2
 1323 0032 0135     		adds	r5, r5, #1
 1324              	.LVL137:
 1325              	.L106:
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1326              		.loc 1 2583 0 is_stmt 0 discriminator 1
 1327 0034 0B2D     		cmp	r5, #11
 1328 0036 E6D9     		bls	.L109
2621:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1329              		.loc 1 2625 0 is_stmt 1
 1330              		@ sp needed
 1331              	.LVL138:
 1332 0038 70BD     		pop	{r4, r5, r6, pc}
 1333              	.L111:
 1334 003a C046     		.align	2
 1335              	.L110:
 1336 003c 00000000 		.word	CapSense_1_dsFlash
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 74


 1337              		.cfi_endproc
 1338              	.LFE21:
 1339              		.size	CapSense_1_SsClearCSDSensors, .-CapSense_1_SsClearCSDSensors
 1340              		.section	.text.CapSense_1_SsCSDGetColSnsClkDivider,"ax",%progbits
 1341              		.align	2
 1342              		.global	CapSense_1_SsCSDGetColSnsClkDivider
 1343              		.code	16
 1344              		.thumb_func
 1345              		.type	CapSense_1_SsCSDGetColSnsClkDivider, %function
 1346              	CapSense_1_SsCSDGetColSnsClkDivider:
 1347              	.LFB22:
2626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDGetColSnsClkDivider
2629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2630:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2633:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
2641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
2644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2645:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2648:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 CapSense_1_SsCSDGetColSnsClkDivider(uint32 widgetId)
2649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1348              		.loc 1 2649 0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 0
 1351              		@ frame_needed = 0, uses_anonymous_args = 0
 1352              		@ link register save eliminated.
 1353              	.LVL139:
2650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 retVal;
2651:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
2660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
 1354              		.loc 1 2661 0
 1355 0000 014B     		ldr	r3, .L113
 1356 0002 188D     		ldrh	r0, [r3, #40]
 1357              	.LVL140:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 75


2662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return (retVal);
2667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1358              		.loc 1 2667 0
 1359              		@ sp needed
 1360 0004 7047     		bx	lr
 1361              	.L114:
 1362 0006 C046     		.align	2
 1363              	.L113:
 1364 0008 00000000 		.word	CapSense_1_dsRam
 1365              		.cfi_endproc
 1366              	.LFE22:
 1367              		.size	CapSense_1_SsCSDGetColSnsClkDivider, .-CapSense_1_SsCSDGetColSnsClkDivider
 1368              		.section	.text.CapSense_1_SsCSDSetColSnsClkDivider,"ax",%progbits
 1369              		.align	2
 1370              		.global	CapSense_1_SsCSDSetColSnsClkDivider
 1371              		.code	16
 1372              		.thumb_func
 1373              		.type	CapSense_1_SsCSDSetColSnsClkDivider, %function
 1374              	CapSense_1_SsCSDSetColSnsClkDivider:
 1375              	.LFB23:
2668:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2669:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDSetColSnsClkDivider
2672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value for one-dimension widgets
2676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value based on the Component
2680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param
2684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widgetId Specifies the ID of the widget.
2685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return The Sense Clock Divider value for one-dimension widgets
2687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *        and the Column Sense Clock divider value for two-dimension widgets.
2688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsCSDSetColSnsClkDivider(uint32 widgetId, uint32 dividerVal)
2691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1376              		.loc 1 2691 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380              		@ link register save eliminated.
 1381              	.LVL141:
2692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 76


2695:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2697:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2698:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt->snsClk = (uint16)dividerVal;
2700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsRam.snsCsdClk = (uint16)dividerVal;
 1382              		.loc 1 2701 0
 1383 0000 014B     		ldr	r3, .L116
 1384 0002 1985     		strh	r1, [r3, #40]
2702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1385              		.loc 1 2705 0
 1386              		@ sp needed
 1387 0004 7047     		bx	lr
 1388              	.L117:
 1389 0006 C046     		.align	2
 1390              	.L116:
 1391 0008 00000000 		.word	CapSense_1_dsRam
 1392              		.cfi_endproc
 1393              	.LFE23:
 1394              		.size	CapSense_1_SsCSDSetColSnsClkDivider, .-CapSense_1_SsCSDSetColSnsClkDivider
 1395              		.section	.text.CapSense_1_BistDischargeExtCapacitors,"ax",%progbits
 1396              		.align	2
 1397              		.global	CapSense_1_BistDischargeExtCapacitors
 1398              		.code	16
 1399              		.thumb_func
 1400              		.type	CapSense_1_BistDischargeExtCapacitors, %function
 1401              	CapSense_1_BistDischargeExtCapacitors:
 1402              	.LFB24:
2706:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDGetRowSnsClkDivider
2711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  two-dimension widgets.
2721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return
2726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 CapSense_1_SsCSDGetRowSnsClkDivider(uint32 widgetId)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 77


2731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 retVal;
2733:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Get sense divider based on configuration */
2735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2736:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2737:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2740:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2747:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (retVal);
2749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2752:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2753:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDCalcPrsSize
2757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  requirements:
2765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  resolution The widget resolution.
2770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 CapSense_1_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 prsSize;
2777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 modClkDivider = 1u;
2778:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if ((CapSense_1_ENABLE != CapSense_1_CSDV2) && \
2780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK))
2781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     modClkDivider = (uint32)CapSense_1_dsRam.modCsdClk;
2782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((snsClkDivider * CapSense_1_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu 
2785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS12 mode */
2787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_12_CONFIG;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 78


2788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if ((snsClkDivider * CapSense_1_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x0000000
2790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS8 mode */
2792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_8_CONFIG;
2793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
2795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set Direct clock mode */
2797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_CLK_SOURCE_DIRECT;
2798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (uint8)prsSize;
2801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2804:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2805:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_BistDischargeExtCapacitors
2809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors.
2813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors by connection them
2816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects 
2817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses 
2819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_BistDischargeExtCapacitors(void)
2823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1403              		.loc 1 2823 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407 0000 70B5     		push	{r4, r5, r6, lr}
 1408              		.cfi_def_cfa_offset 16
 1409              		.cfi_offset 4, -16
 1410              		.cfi_offset 5, -12
 1411              		.cfi_offset 6, -8
 1412              		.cfi_offset 14, -4
2824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
2825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8  interruptState;
2826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         
2827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1413              		.loc 1 2828 0
 1414 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1415              	.LVL142:
2829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR);
 1416              		.loc 1 2829 0
 1417 0006 134A     		ldr	r2, .L119
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 79


 1418 0008 1368     		ldr	r3, [r2]
 1419              	.LVL143:
2830:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_HSIOM_MASK);
 1420              		.loc 1 2830 0
 1421 000a F021     		movs	r1, #240
 1422 000c 8B43     		bics	r3, r1
 1423              	.LVL144:
2831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR, newRegValue);
 1424              		.loc 1 2831 0
 1425 000e 1360     		str	r3, [r2]
2832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1426              		.loc 1 2832 0
 1427 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1428              	.LVL145:
2833:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2835:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1429              		.loc 1 2835 0
 1430 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1431              	.LVL146:
2836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_DR_PTR);
 1432              		.loc 1 2836 0
 1433 0018 0F4A     		ldr	r2, .L119+4
 1434 001a 1368     		ldr	r3, [r2]
 1435              	.LVL147:
2837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_DR_MASK);
 1436              		.loc 1 2837 0
 1437 001c 0221     		movs	r1, #2
 1438 001e 8B43     		bics	r3, r1
 1439              	.LVL148:
2838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_DR_PTR, newRegValue);
 1440              		.loc 1 2838 0
 1441 0020 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1442              		.loc 1 2839 0
 1443 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1444              	.LVL149:
2840:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1445              		.loc 1 2842 0
 1446 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 1447              	.LVL150:
2843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1448              		.loc 1 2843 0
 1449 002a 0C4C     		ldr	r4, .L119+8
 1450 002c 2368     		ldr	r3, [r4]
 1451              	.LVL151:
2844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1452              		.loc 1 2844 0
 1453 002e 3825     		movs	r5, #56
 1454 0030 AB43     		bics	r3, r5
 1455              	.LVL152:
2845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (CapSense_1_EXT_CAP_PC_STRONG_CFG);
 1456              		.loc 1 2845 0
 1457 0032 3022     		movs	r2, #48
 1458 0034 1343     		orrs	r3, r2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 80


 1459              	.LVL153:
2846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1460              		.loc 1 2846 0
 1461 0036 2360     		str	r3, [r4]
2847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1462              		.loc 1 2847 0
 1463 0038 FFF7FEFF 		bl	CyExitCriticalSection
 1464              	.LVL154:
2848:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Delay to discharge external capacitors */
2850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyDelayUs(CapSense_1_EXT_CAP_DISCHARGE_TIME);
 1465              		.loc 1 2850 0
 1466 003c 0120     		movs	r0, #1
 1467 003e FFF7FEFF 		bl	CyDelayUs
 1468              	.LVL155:
2851:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1469              		.loc 1 2853 0
 1470 0042 FFF7FEFF 		bl	CyEnterCriticalSection
 1471              	.LVL156:
2854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1472              		.loc 1 2854 0
 1473 0046 2368     		ldr	r3, [r4]
 1474              	.LVL157:
2855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1475              		.loc 1 2855 0
 1476 0048 AB43     		bics	r3, r5
 1477              	.LVL158:
2856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1478              		.loc 1 2856 0
 1479 004a 2360     		str	r3, [r4]
2857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1480              		.loc 1 2857 0
 1481 004c FFF7FEFF 		bl	CyExitCriticalSection
 1482              	.LVL159:
2858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1483              		.loc 1 2858 0
 1484              		@ sp needed
 1485 0050 70BD     		pop	{r4, r5, r6, pc}
 1486              	.L120:
 1487 0052 C046     		.align	2
 1488              	.L119:
 1489 0054 00040240 		.word	1073873920
 1490 0058 00040440 		.word	1074004992
 1491 005c 08040440 		.word	1074005000
 1492              		.cfi_endproc
 1493              	.LFE24:
 1494              		.size	CapSense_1_BistDischargeExtCapacitors, .-CapSense_1_BistDischargeExtCapacitors
 1495              		.comm	CapSense_1_curSnsIOPtr,4,4
 1496              		.comm	CapSense_1_curRamSnsPtr,4,4
 1497              		.global	CapSense_1_requestScanAllWidget
 1498              		.global	CapSense_1_sensorIndex
 1499              		.global	CapSense_1_widgetIndex
 1500              		.global	CapSense_1_immunity
 1501              		.global	CapSense_1_scanFreqIndex
 1502              		.global	CapSense_1_currentSenseMethod
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 81


 1503              		.bss
 1504              		.align	2
 1505              		.set	.LANCHOR0,. + 0
 1506              		.type	CapSense_1_currentSenseMethod, %object
 1507              		.size	CapSense_1_currentSenseMethod, 1
 1508              	CapSense_1_currentSenseMethod:
 1509 0000 00       		.space	1
 1510              		.type	CapSense_1_requestScanAllWidget, %object
 1511              		.size	CapSense_1_requestScanAllWidget, 1
 1512              	CapSense_1_requestScanAllWidget:
 1513 0001 00       		.space	1
 1514              		.type	CapSense_1_widgetIndex, %object
 1515              		.size	CapSense_1_widgetIndex, 1
 1516              	CapSense_1_widgetIndex:
 1517 0002 00       		.space	1
 1518 0003 00       		.space	1
 1519              		.type	CapSense_1_immunity, %object
 1520              		.size	CapSense_1_immunity, 3
 1521              	CapSense_1_immunity:
 1522 0004 000000   		.space	3
 1523              		.type	CapSense_1_sensorIndex, %object
 1524              		.size	CapSense_1_sensorIndex, 1
 1525              	CapSense_1_sensorIndex:
 1526 0007 00       		.space	1
 1527              		.type	CapSense_1_scanFreqIndex, %object
 1528              		.size	CapSense_1_scanFreqIndex, 1
 1529              	CapSense_1_scanFreqIndex:
 1530 0008 00       		.space	1
 1531              		.text
 1532              	.Letext0:
 1533              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1534              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1535              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1536              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.h"
 1537              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 1538              		.file 7 "Generated_Source\\PSoC4\\CapSense_1_ISR.h"
 1539              		.section	.debug_info,"",%progbits
 1540              	.Ldebug_info0:
 1541 0000 960F0000 		.4byte	0xf96
 1542 0004 0400     		.2byte	0x4
 1543 0006 00000000 		.4byte	.Ldebug_abbrev0
 1544 000a 04       		.byte	0x4
 1545 000b 01       		.uleb128 0x1
 1546 000c DB020000 		.4byte	.LASF181
 1547 0010 0C       		.byte	0xc
 1548 0011 62070000 		.4byte	.LASF182
 1549 0015 7A040000 		.4byte	.LASF183
 1550 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1551 001d 00000000 		.4byte	0
 1552 0021 00000000 		.4byte	.Ldebug_line0
 1553 0025 02       		.uleb128 0x2
 1554 0026 01       		.byte	0x1
 1555 0027 06       		.byte	0x6
 1556 0028 3A0B0000 		.4byte	.LASF0
 1557 002c 02       		.uleb128 0x2
 1558 002d 01       		.byte	0x1
 1559 002e 08       		.byte	0x8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 82


 1560 002f 9E0A0000 		.4byte	.LASF1
 1561 0033 02       		.uleb128 0x2
 1562 0034 02       		.byte	0x2
 1563 0035 05       		.byte	0x5
 1564 0036 8B080000 		.4byte	.LASF2
 1565 003a 02       		.uleb128 0x2
 1566 003b 02       		.byte	0x2
 1567 003c 07       		.byte	0x7
 1568 003d 4B0B0000 		.4byte	.LASF3
 1569 0041 02       		.uleb128 0x2
 1570 0042 04       		.byte	0x4
 1571 0043 05       		.byte	0x5
 1572 0044 B9080000 		.4byte	.LASF4
 1573 0048 02       		.uleb128 0x2
 1574 0049 04       		.byte	0x4
 1575 004a 07       		.byte	0x7
 1576 004b 080A0000 		.4byte	.LASF5
 1577 004f 02       		.uleb128 0x2
 1578 0050 08       		.byte	0x8
 1579 0051 05       		.byte	0x5
 1580 0052 10060000 		.4byte	.LASF6
 1581 0056 02       		.uleb128 0x2
 1582 0057 08       		.byte	0x8
 1583 0058 07       		.byte	0x7
 1584 0059 A0030000 		.4byte	.LASF7
 1585 005d 03       		.uleb128 0x3
 1586 005e 04       		.byte	0x4
 1587 005f 05       		.byte	0x5
 1588 0060 696E7400 		.ascii	"int\000"
 1589 0064 02       		.uleb128 0x2
 1590 0065 04       		.byte	0x4
 1591 0066 07       		.byte	0x7
 1592 0067 0C010000 		.4byte	.LASF8
 1593 006b 04       		.uleb128 0x4
 1594 006c B60B0000 		.4byte	.LASF9
 1595 0070 02       		.byte	0x2
 1596 0071 E401     		.2byte	0x1e4
 1597 0073 2C000000 		.4byte	0x2c
 1598 0077 04       		.uleb128 0x4
 1599 0078 C3050000 		.4byte	.LASF10
 1600 007c 02       		.byte	0x2
 1601 007d E501     		.2byte	0x1e5
 1602 007f 3A000000 		.4byte	0x3a
 1603 0083 04       		.uleb128 0x4
 1604 0084 05070000 		.4byte	.LASF11
 1605 0088 02       		.byte	0x2
 1606 0089 E601     		.2byte	0x1e6
 1607 008b 48000000 		.4byte	0x48
 1608 008f 02       		.uleb128 0x2
 1609 0090 04       		.byte	0x4
 1610 0091 04       		.byte	0x4
 1611 0092 C5020000 		.4byte	.LASF12
 1612 0096 02       		.uleb128 0x2
 1613 0097 08       		.byte	0x8
 1614 0098 04       		.byte	0x4
 1615 0099 BC0B0000 		.4byte	.LASF13
 1616 009d 02       		.uleb128 0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 83


 1617 009e 01       		.byte	0x1
 1618 009f 08       		.byte	0x8
 1619 00a0 83050000 		.4byte	.LASF14
 1620 00a4 04       		.uleb128 0x4
 1621 00a5 950A0000 		.4byte	.LASF15
 1622 00a9 02       		.byte	0x2
 1623 00aa 8602     		.2byte	0x286
 1624 00ac 48000000 		.4byte	0x48
 1625 00b0 05       		.uleb128 0x5
 1626 00b1 6B000000 		.4byte	0x6b
 1627 00b5 04       		.uleb128 0x4
 1628 00b6 FB070000 		.4byte	.LASF16
 1629 00ba 02       		.byte	0x2
 1630 00bb 9002     		.2byte	0x290
 1631 00bd C1000000 		.4byte	0xc1
 1632 00c1 05       		.uleb128 0x5
 1633 00c2 83000000 		.4byte	0x83
 1634 00c6 04       		.uleb128 0x4
 1635 00c7 B9060000 		.4byte	.LASF17
 1636 00cb 02       		.byte	0x2
 1637 00cc A002     		.2byte	0x2a0
 1638 00ce D2000000 		.4byte	0xd2
 1639 00d2 06       		.uleb128 0x6
 1640 00d3 04       		.byte	0x4
 1641 00d4 D8000000 		.4byte	0xd8
 1642 00d8 07       		.uleb128 0x7
 1643 00d9 04       		.uleb128 0x4
 1644 00da 1E060000 		.4byte	.LASF18
 1645 00de 03       		.byte	0x3
 1646 00df 4901     		.2byte	0x149
 1647 00e1 77000000 		.4byte	0x77
 1648 00e5 04       		.uleb128 0x4
 1649 00e6 D9030000 		.4byte	.LASF19
 1650 00ea 03       		.byte	0x3
 1651 00eb 4D01     		.2byte	0x14d
 1652 00ed 6B000000 		.4byte	0x6b
 1653 00f1 08       		.uleb128 0x8
 1654 00f2 01       		.byte	0x1
 1655 00f3 2C000000 		.4byte	0x2c
 1656 00f7 04       		.byte	0x4
 1657 00f8 70       		.byte	0x70
 1658 00f9 1C010000 		.4byte	0x11c
 1659 00fd 09       		.uleb128 0x9
 1660 00fe 27070000 		.4byte	.LASF20
 1661 0102 00       		.byte	0
 1662 0103 09       		.uleb128 0x9
 1663 0104 E2090000 		.4byte	.LASF21
 1664 0108 01       		.byte	0x1
 1665 0109 09       		.uleb128 0x9
 1666 010a 12090000 		.4byte	.LASF22
 1667 010e 02       		.byte	0x2
 1668 010f 09       		.uleb128 0x9
 1669 0110 5B040000 		.4byte	.LASF23
 1670 0114 03       		.byte	0x3
 1671 0115 09       		.uleb128 0x9
 1672 0116 DD070000 		.4byte	.LASF24
 1673 011a 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 84


 1674 011b 00       		.byte	0
 1675 011c 0A       		.uleb128 0xa
 1676 011d F6030000 		.4byte	.LASF25
 1677 0121 04       		.byte	0x4
 1678 0122 76       		.byte	0x76
 1679 0123 F1000000 		.4byte	0xf1
 1680 0127 0B       		.uleb128 0xb
 1681 0128 0E       		.byte	0xe
 1682 0129 04       		.byte	0x4
 1683 012a 8E       		.byte	0x8e
 1684 012b 9C010000 		.4byte	0x19c
 1685 012f 0C       		.uleb128 0xc
 1686 0130 D9050000 		.4byte	.LASF26
 1687 0134 04       		.byte	0x4
 1688 0135 93       		.byte	0x93
 1689 0136 77000000 		.4byte	0x77
 1690 013a 00       		.byte	0
 1691 013b 0C       		.uleb128 0xc
 1692 013c 600A0000 		.4byte	.LASF27
 1693 0140 04       		.byte	0x4
 1694 0141 98       		.byte	0x98
 1695 0142 D9000000 		.4byte	0xd9
 1696 0146 02       		.byte	0x2
 1697 0147 0C       		.uleb128 0xc
 1698 0148 5C050000 		.4byte	.LASF28
 1699 014c 04       		.byte	0x4
 1700 014d 9D       		.byte	0x9d
 1701 014e 6B000000 		.4byte	0x6b
 1702 0152 04       		.byte	0x4
 1703 0153 0C       		.uleb128 0xc
 1704 0154 A5060000 		.4byte	.LASF29
 1705 0158 04       		.byte	0x4
 1706 0159 A2       		.byte	0xa2
 1707 015a 6B000000 		.4byte	0x6b
 1708 015e 05       		.byte	0x5
 1709 015f 0C       		.uleb128 0xc
 1710 0160 0C070000 		.4byte	.LASF30
 1711 0164 04       		.byte	0x4
 1712 0165 A8       		.byte	0xa8
 1713 0166 6B000000 		.4byte	0x6b
 1714 016a 06       		.byte	0x6
 1715 016b 0C       		.uleb128 0xc
 1716 016c 38060000 		.4byte	.LASF31
 1717 0170 04       		.byte	0x4
 1718 0171 AE       		.byte	0xae
 1719 0172 6B000000 		.4byte	0x6b
 1720 0176 07       		.byte	0x7
 1721 0177 0C       		.uleb128 0xc
 1722 0178 BE040000 		.4byte	.LASF32
 1723 017c 04       		.byte	0x4
 1724 017d B5       		.byte	0xb5
 1725 017e E5000000 		.4byte	0xe5
 1726 0182 08       		.byte	0x8
 1727 0183 0C       		.uleb128 0xc
 1728 0184 290A0000 		.4byte	.LASF33
 1729 0188 04       		.byte	0x4
 1730 0189 BC       		.byte	0xbc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 85


 1731 018a 9C010000 		.4byte	0x19c
 1732 018e 09       		.byte	0x9
 1733 018f 0C       		.uleb128 0xc
 1734 0190 59080000 		.4byte	.LASF34
 1735 0194 04       		.byte	0x4
 1736 0195 C1       		.byte	0xc1
 1737 0196 6B000000 		.4byte	0x6b
 1738 019a 0C       		.byte	0xc
 1739 019b 00       		.byte	0
 1740 019c 0D       		.uleb128 0xd
 1741 019d 6B000000 		.4byte	0x6b
 1742 01a1 AC010000 		.4byte	0x1ac
 1743 01a5 0E       		.uleb128 0xe
 1744 01a6 AC010000 		.4byte	0x1ac
 1745 01aa 02       		.byte	0x2
 1746 01ab 00       		.byte	0
 1747 01ac 02       		.uleb128 0x2
 1748 01ad 04       		.byte	0x4
 1749 01ae 07       		.byte	0x7
 1750 01af 66080000 		.4byte	.LASF35
 1751 01b3 0A       		.uleb128 0xa
 1752 01b4 DE060000 		.4byte	.LASF36
 1753 01b8 04       		.byte	0x4
 1754 01b9 C2       		.byte	0xc2
 1755 01ba 27010000 		.4byte	0x127
 1756 01be 0B       		.uleb128 0xb
 1757 01bf 0E       		.byte	0xe
 1758 01c0 04       		.byte	0x4
 1759 01c1 C7       		.byte	0xc7
 1760 01c2 33020000 		.4byte	0x233
 1761 01c6 0C       		.uleb128 0xc
 1762 01c7 D9050000 		.4byte	.LASF26
 1763 01cb 04       		.byte	0x4
 1764 01cc CC       		.byte	0xcc
 1765 01cd 77000000 		.4byte	0x77
 1766 01d1 00       		.byte	0
 1767 01d2 0C       		.uleb128 0xc
 1768 01d3 600A0000 		.4byte	.LASF27
 1769 01d7 04       		.byte	0x4
 1770 01d8 D1       		.byte	0xd1
 1771 01d9 D9000000 		.4byte	0xd9
 1772 01dd 02       		.byte	0x2
 1773 01de 0C       		.uleb128 0xc
 1774 01df 5C050000 		.4byte	.LASF28
 1775 01e3 04       		.byte	0x4
 1776 01e4 D6       		.byte	0xd6
 1777 01e5 6B000000 		.4byte	0x6b
 1778 01e9 04       		.byte	0x4
 1779 01ea 0C       		.uleb128 0xc
 1780 01eb A5060000 		.4byte	.LASF29
 1781 01ef 04       		.byte	0x4
 1782 01f0 DB       		.byte	0xdb
 1783 01f1 6B000000 		.4byte	0x6b
 1784 01f5 05       		.byte	0x5
 1785 01f6 0C       		.uleb128 0xc
 1786 01f7 0C070000 		.4byte	.LASF30
 1787 01fb 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 86


 1788 01fc E1       		.byte	0xe1
 1789 01fd 6B000000 		.4byte	0x6b
 1790 0201 06       		.byte	0x6
 1791 0202 0C       		.uleb128 0xc
 1792 0203 38060000 		.4byte	.LASF31
 1793 0207 04       		.byte	0x4
 1794 0208 E7       		.byte	0xe7
 1795 0209 6B000000 		.4byte	0x6b
 1796 020d 07       		.byte	0x7
 1797 020e 0C       		.uleb128 0xc
 1798 020f BE040000 		.4byte	.LASF32
 1799 0213 04       		.byte	0x4
 1800 0214 EE       		.byte	0xee
 1801 0215 E5000000 		.4byte	0xe5
 1802 0219 08       		.byte	0x8
 1803 021a 0C       		.uleb128 0xc
 1804 021b 290A0000 		.4byte	.LASF33
 1805 021f 04       		.byte	0x4
 1806 0220 F5       		.byte	0xf5
 1807 0221 9C010000 		.4byte	0x19c
 1808 0225 09       		.byte	0x9
 1809 0226 0C       		.uleb128 0xc
 1810 0227 59080000 		.4byte	.LASF34
 1811 022b 04       		.byte	0x4
 1812 022c FA       		.byte	0xfa
 1813 022d 6B000000 		.4byte	0x6b
 1814 0231 0C       		.byte	0xc
 1815 0232 00       		.byte	0
 1816 0233 0A       		.uleb128 0xa
 1817 0234 0F0C0000 		.4byte	.LASF37
 1818 0238 04       		.byte	0x4
 1819 0239 FB       		.byte	0xfb
 1820 023a BE010000 		.4byte	0x1be
 1821 023e 0F       		.uleb128 0xf
 1822 023f A8       		.byte	0xa8
 1823 0240 04       		.byte	0x4
 1824 0241 0101     		.2byte	0x101
 1825 0243 E4020000 		.4byte	0x2e4
 1826 0247 10       		.uleb128 0x10
 1827 0248 30090000 		.4byte	.LASF38
 1828 024c 04       		.byte	0x4
 1829 024d 0601     		.2byte	0x106
 1830 024f 33020000 		.4byte	0x233
 1831 0253 00       		.byte	0
 1832 0254 10       		.uleb128 0x10
 1833 0255 38090000 		.4byte	.LASF39
 1834 0259 04       		.byte	0x4
 1835 025a 0B01     		.2byte	0x10b
 1836 025c 33020000 		.4byte	0x233
 1837 0260 0E       		.byte	0xe
 1838 0261 10       		.uleb128 0x10
 1839 0262 40090000 		.4byte	.LASF40
 1840 0266 04       		.byte	0x4
 1841 0267 1001     		.2byte	0x110
 1842 0269 33020000 		.4byte	0x233
 1843 026d 1C       		.byte	0x1c
 1844 026e 10       		.uleb128 0x10
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 87


 1845 026f 48090000 		.4byte	.LASF41
 1846 0273 04       		.byte	0x4
 1847 0274 1501     		.2byte	0x115
 1848 0276 33020000 		.4byte	0x233
 1849 027a 2A       		.byte	0x2a
 1850 027b 10       		.uleb128 0x10
 1851 027c 50090000 		.4byte	.LASF42
 1852 0280 04       		.byte	0x4
 1853 0281 1A01     		.2byte	0x11a
 1854 0283 33020000 		.4byte	0x233
 1855 0287 38       		.byte	0x38
 1856 0288 10       		.uleb128 0x10
 1857 0289 58090000 		.4byte	.LASF43
 1858 028d 04       		.byte	0x4
 1859 028e 1F01     		.2byte	0x11f
 1860 0290 33020000 		.4byte	0x233
 1861 0294 46       		.byte	0x46
 1862 0295 10       		.uleb128 0x10
 1863 0296 60090000 		.4byte	.LASF44
 1864 029a 04       		.byte	0x4
 1865 029b 2401     		.2byte	0x124
 1866 029d 33020000 		.4byte	0x233
 1867 02a1 54       		.byte	0x54
 1868 02a2 10       		.uleb128 0x10
 1869 02a3 68090000 		.4byte	.LASF45
 1870 02a7 04       		.byte	0x4
 1871 02a8 2901     		.2byte	0x129
 1872 02aa 33020000 		.4byte	0x233
 1873 02ae 62       		.byte	0x62
 1874 02af 10       		.uleb128 0x10
 1875 02b0 70090000 		.4byte	.LASF46
 1876 02b4 04       		.byte	0x4
 1877 02b5 2E01     		.2byte	0x12e
 1878 02b7 33020000 		.4byte	0x233
 1879 02bb 70       		.byte	0x70
 1880 02bc 10       		.uleb128 0x10
 1881 02bd 78090000 		.4byte	.LASF47
 1882 02c1 04       		.byte	0x4
 1883 02c2 3301     		.2byte	0x133
 1884 02c4 33020000 		.4byte	0x233
 1885 02c8 7E       		.byte	0x7e
 1886 02c9 10       		.uleb128 0x10
 1887 02ca 6F0C0000 		.4byte	.LASF48
 1888 02ce 04       		.byte	0x4
 1889 02cf 3801     		.2byte	0x138
 1890 02d1 33020000 		.4byte	0x233
 1891 02d5 8C       		.byte	0x8c
 1892 02d6 10       		.uleb128 0x10
 1893 02d7 780C0000 		.4byte	.LASF49
 1894 02db 04       		.byte	0x4
 1895 02dc 3D01     		.2byte	0x13d
 1896 02de 33020000 		.4byte	0x233
 1897 02e2 9A       		.byte	0x9a
 1898 02e3 00       		.byte	0
 1899 02e4 04       		.uleb128 0x4
 1900 02e5 6D020000 		.4byte	.LASF50
 1901 02e9 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 88


 1902 02ea 3E01     		.2byte	0x13e
 1903 02ec 3E020000 		.4byte	0x23e
 1904 02f0 0F       		.uleb128 0xf
 1905 02f1 18       		.byte	0x18
 1906 02f2 04       		.byte	0x4
 1907 02f3 4401     		.2byte	0x144
 1908 02f5 48030000 		.4byte	0x348
 1909 02f9 11       		.uleb128 0x11
 1910 02fa 72617700 		.ascii	"raw\000"
 1911 02fe 04       		.byte	0x4
 1912 02ff 4901     		.2byte	0x149
 1913 0301 48030000 		.4byte	0x348
 1914 0305 00       		.byte	0
 1915 0306 10       		.uleb128 0x10
 1916 0307 460B0000 		.4byte	.LASF51
 1917 030b 04       		.byte	0x4
 1918 030c 4E01     		.2byte	0x14e
 1919 030e 48030000 		.4byte	0x348
 1920 0312 06       		.byte	0x6
 1921 0313 10       		.uleb128 0x10
 1922 0314 880A0000 		.4byte	.LASF52
 1923 0318 04       		.byte	0x4
 1924 0319 5401     		.2byte	0x154
 1925 031b 9C010000 		.4byte	0x19c
 1926 031f 0C       		.byte	0xc
 1927 0320 10       		.uleb128 0x10
 1928 0321 FE080000 		.4byte	.LASF53
 1929 0325 04       		.byte	0x4
 1930 0326 5901     		.2byte	0x159
 1931 0328 D9000000 		.4byte	0xd9
 1932 032c 10       		.byte	0x10
 1933 032d 10       		.uleb128 0x10
 1934 032e C30B0000 		.4byte	.LASF54
 1935 0332 04       		.byte	0x4
 1936 0333 5E01     		.2byte	0x15e
 1937 0335 58030000 		.4byte	0x358
 1938 0339 12       		.byte	0x12
 1939 033a 10       		.uleb128 0x10
 1940 033b 01060000 		.4byte	.LASF55
 1941 033f 04       		.byte	0x4
 1942 0340 6301     		.2byte	0x163
 1943 0342 9C010000 		.4byte	0x19c
 1944 0346 15       		.byte	0x15
 1945 0347 00       		.byte	0
 1946 0348 0D       		.uleb128 0xd
 1947 0349 77000000 		.4byte	0x77
 1948 034d 58030000 		.4byte	0x358
 1949 0351 0E       		.uleb128 0xe
 1950 0352 AC010000 		.4byte	0x1ac
 1951 0356 02       		.byte	0x2
 1952 0357 00       		.byte	0
 1953 0358 0D       		.uleb128 0xd
 1954 0359 E5000000 		.4byte	0xe5
 1955 035d 68030000 		.4byte	0x368
 1956 0361 0E       		.uleb128 0xe
 1957 0362 AC010000 		.4byte	0x1ac
 1958 0366 02       		.byte	0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 89


 1959 0367 00       		.byte	0
 1960 0368 04       		.uleb128 0x4
 1961 0369 D10B0000 		.4byte	.LASF56
 1962 036d 04       		.byte	0x4
 1963 036e 6401     		.2byte	0x164
 1964 0370 F0020000 		.4byte	0x2f0
 1965 0374 12       		.uleb128 0x12
 1966 0375 2001     		.2byte	0x120
 1967 0377 04       		.byte	0x4
 1968 0378 6A01     		.2byte	0x16a
 1969 037a 1C040000 		.4byte	0x41c
 1970 037e 10       		.uleb128 0x10
 1971 037f 30090000 		.4byte	.LASF38
 1972 0383 04       		.byte	0x4
 1973 0384 6F01     		.2byte	0x16f
 1974 0386 1C040000 		.4byte	0x41c
 1975 038a 00       		.byte	0
 1976 038b 10       		.uleb128 0x10
 1977 038c 38090000 		.4byte	.LASF39
 1978 0390 04       		.byte	0x4
 1979 0391 7401     		.2byte	0x174
 1980 0393 1C040000 		.4byte	0x41c
 1981 0397 18       		.byte	0x18
 1982 0398 10       		.uleb128 0x10
 1983 0399 40090000 		.4byte	.LASF40
 1984 039d 04       		.byte	0x4
 1985 039e 7901     		.2byte	0x179
 1986 03a0 1C040000 		.4byte	0x41c
 1987 03a4 30       		.byte	0x30
 1988 03a5 10       		.uleb128 0x10
 1989 03a6 48090000 		.4byte	.LASF41
 1990 03aa 04       		.byte	0x4
 1991 03ab 7E01     		.2byte	0x17e
 1992 03ad 1C040000 		.4byte	0x41c
 1993 03b1 48       		.byte	0x48
 1994 03b2 10       		.uleb128 0x10
 1995 03b3 50090000 		.4byte	.LASF42
 1996 03b7 04       		.byte	0x4
 1997 03b8 8301     		.2byte	0x183
 1998 03ba 1C040000 		.4byte	0x41c
 1999 03be 60       		.byte	0x60
 2000 03bf 10       		.uleb128 0x10
 2001 03c0 58090000 		.4byte	.LASF43
 2002 03c4 04       		.byte	0x4
 2003 03c5 8801     		.2byte	0x188
 2004 03c7 1C040000 		.4byte	0x41c
 2005 03cb 78       		.byte	0x78
 2006 03cc 10       		.uleb128 0x10
 2007 03cd 60090000 		.4byte	.LASF44
 2008 03d1 04       		.byte	0x4
 2009 03d2 8D01     		.2byte	0x18d
 2010 03d4 1C040000 		.4byte	0x41c
 2011 03d8 90       		.byte	0x90
 2012 03d9 10       		.uleb128 0x10
 2013 03da 68090000 		.4byte	.LASF45
 2014 03de 04       		.byte	0x4
 2015 03df 9201     		.2byte	0x192
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 90


 2016 03e1 1C040000 		.4byte	0x41c
 2017 03e5 A8       		.byte	0xa8
 2018 03e6 10       		.uleb128 0x10
 2019 03e7 70090000 		.4byte	.LASF46
 2020 03eb 04       		.byte	0x4
 2021 03ec 9701     		.2byte	0x197
 2022 03ee 1C040000 		.4byte	0x41c
 2023 03f2 C0       		.byte	0xc0
 2024 03f3 10       		.uleb128 0x10
 2025 03f4 78090000 		.4byte	.LASF47
 2026 03f8 04       		.byte	0x4
 2027 03f9 9C01     		.2byte	0x19c
 2028 03fb 1C040000 		.4byte	0x41c
 2029 03ff D8       		.byte	0xd8
 2030 0400 10       		.uleb128 0x10
 2031 0401 6F0C0000 		.4byte	.LASF48
 2032 0405 04       		.byte	0x4
 2033 0406 A101     		.2byte	0x1a1
 2034 0408 1C040000 		.4byte	0x41c
 2035 040c F0       		.byte	0xf0
 2036 040d 13       		.uleb128 0x13
 2037 040e 780C0000 		.4byte	.LASF49
 2038 0412 04       		.byte	0x4
 2039 0413 A601     		.2byte	0x1a6
 2040 0415 1C040000 		.4byte	0x41c
 2041 0419 0801     		.2byte	0x108
 2042 041b 00       		.byte	0
 2043 041c 0D       		.uleb128 0xd
 2044 041d 68030000 		.4byte	0x368
 2045 0421 2C040000 		.4byte	0x42c
 2046 0425 0E       		.uleb128 0xe
 2047 0426 AC010000 		.4byte	0x1ac
 2048 042a 00       		.byte	0
 2049 042b 00       		.byte	0
 2050 042c 04       		.uleb128 0x4
 2051 042d 3E070000 		.4byte	.LASF57
 2052 0431 04       		.byte	0x4
 2053 0432 A701     		.2byte	0x1a7
 2054 0434 74030000 		.4byte	0x374
 2055 0438 12       		.uleb128 0x12
 2056 0439 FC01     		.2byte	0x1fc
 2057 043b 04       		.byte	0x4
 2058 043c AD01     		.2byte	0x1ad
 2059 043e 31050000 		.4byte	0x531
 2060 0442 10       		.uleb128 0x10
 2061 0443 14080000 		.4byte	.LASF58
 2062 0447 04       		.byte	0x4
 2063 0448 B401     		.2byte	0x1b4
 2064 044a 77000000 		.4byte	0x77
 2065 044e 00       		.byte	0
 2066 044f 10       		.uleb128 0x10
 2067 0450 F90B0000 		.4byte	.LASF59
 2068 0454 04       		.byte	0x4
 2069 0455 B901     		.2byte	0x1b9
 2070 0457 77000000 		.4byte	0x77
 2071 045b 02       		.byte	0x2
 2072 045c 10       		.uleb128 0x10
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 91


 2073 045d 5F010000 		.4byte	.LASF60
 2074 0461 04       		.byte	0x4
 2075 0462 BE01     		.2byte	0x1be
 2076 0464 77000000 		.4byte	0x77
 2077 0468 04       		.byte	0x4
 2078 0469 10       		.uleb128 0x10
 2079 046a 03090000 		.4byte	.LASF61
 2080 046e 04       		.byte	0x4
 2081 046f C401     		.2byte	0x1c4
 2082 0471 77000000 		.4byte	0x77
 2083 0475 06       		.byte	0x6
 2084 0476 10       		.uleb128 0x10
 2085 0477 53010000 		.4byte	.LASF62
 2086 047b 04       		.byte	0x4
 2087 047c C901     		.2byte	0x1c9
 2088 047e 77000000 		.4byte	0x77
 2089 0482 08       		.byte	0x8
 2090 0483 10       		.uleb128 0x10
 2091 0484 FA050000 		.4byte	.LASF63
 2092 0488 04       		.byte	0x4
 2093 0489 CE01     		.2byte	0x1ce
 2094 048b C1000000 		.4byte	0xc1
 2095 048f 0C       		.byte	0xc
 2096 0490 10       		.uleb128 0x10
 2097 0491 C2080000 		.4byte	.LASF64
 2098 0495 04       		.byte	0x4
 2099 0496 D401     		.2byte	0x1d4
 2100 0498 31050000 		.4byte	0x531
 2101 049c 10       		.byte	0x10
 2102 049d 10       		.uleb128 0x10
 2103 049e A6090000 		.4byte	.LASF65
 2104 04a2 04       		.byte	0x4
 2105 04a3 DB01     		.2byte	0x1db
 2106 04a5 31050000 		.4byte	0x531
 2107 04a9 14       		.byte	0x14
 2108 04aa 10       		.uleb128 0x10
 2109 04ab 40080000 		.4byte	.LASF66
 2110 04af 04       		.byte	0x4
 2111 04b0 EB01     		.2byte	0x1eb
 2112 04b2 41050000 		.4byte	0x541
 2113 04b6 18       		.byte	0x18
 2114 04b7 10       		.uleb128 0x10
 2115 04b8 AE060000 		.4byte	.LASF67
 2116 04bc 04       		.byte	0x4
 2117 04bd F101     		.2byte	0x1f1
 2118 04bf 77000000 		.4byte	0x77
 2119 04c3 24       		.byte	0x24
 2120 04c4 10       		.uleb128 0x10
 2121 04c5 19040000 		.4byte	.LASF68
 2122 04c9 04       		.byte	0x4
 2123 04ca F601     		.2byte	0x1f6
 2124 04cc 6B000000 		.4byte	0x6b
 2125 04d0 26       		.byte	0x26
 2126 04d1 10       		.uleb128 0x10
 2127 04d2 00000000 		.4byte	.LASF69
 2128 04d6 04       		.byte	0x4
 2129 04d7 FB01     		.2byte	0x1fb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 92


 2130 04d9 77000000 		.4byte	0x77
 2131 04dd 28       		.byte	0x28
 2132 04de 10       		.uleb128 0x10
 2133 04df 73060000 		.4byte	.LASF70
 2134 04e3 04       		.byte	0x4
 2135 04e4 0002     		.2byte	0x200
 2136 04e6 E4020000 		.4byte	0x2e4
 2137 04ea 2A       		.byte	0x2a
 2138 04eb 10       		.uleb128 0x10
 2139 04ec 98030000 		.4byte	.LASF71
 2140 04f0 04       		.byte	0x4
 2141 04f1 0502     		.2byte	0x205
 2142 04f3 2C040000 		.4byte	0x42c
 2143 04f7 D2       		.byte	0xd2
 2144 04f8 13       		.uleb128 0x13
 2145 04f9 BF000000 		.4byte	.LASF72
 2146 04fd 04       		.byte	0x4
 2147 04fe 0A02     		.2byte	0x20a
 2148 0500 6B000000 		.4byte	0x6b
 2149 0504 F201     		.2byte	0x1f2
 2150 0506 13       		.uleb128 0x13
 2151 0507 B7030000 		.4byte	.LASF73
 2152 050b 04       		.byte	0x4
 2153 050c 0F02     		.2byte	0x20f
 2154 050e 6B000000 		.4byte	0x6b
 2155 0512 F301     		.2byte	0x1f3
 2156 0514 13       		.uleb128 0x13
 2157 0515 01080000 		.4byte	.LASF74
 2158 0519 04       		.byte	0x4
 2159 051a 1402     		.2byte	0x214
 2160 051c 77000000 		.4byte	0x77
 2161 0520 F401     		.2byte	0x1f4
 2162 0522 13       		.uleb128 0x13
 2163 0523 89060000 		.4byte	.LASF75
 2164 0527 04       		.byte	0x4
 2165 0528 1902     		.2byte	0x219
 2166 052a 48030000 		.4byte	0x348
 2167 052e F601     		.2byte	0x1f6
 2168 0530 00       		.byte	0
 2169 0531 0D       		.uleb128 0xd
 2170 0532 83000000 		.4byte	0x83
 2171 0536 41050000 		.4byte	0x541
 2172 053a 0E       		.uleb128 0xe
 2173 053b AC010000 		.4byte	0x1ac
 2174 053f 00       		.byte	0
 2175 0540 00       		.byte	0
 2176 0541 0D       		.uleb128 0xd
 2177 0542 6B000000 		.4byte	0x6b
 2178 0546 51050000 		.4byte	0x551
 2179 054a 0E       		.uleb128 0xe
 2180 054b AC010000 		.4byte	0x1ac
 2181 054f 0B       		.byte	0xb
 2182 0550 00       		.byte	0
 2183 0551 04       		.uleb128 0x4
 2184 0552 E4050000 		.4byte	.LASF76
 2185 0556 04       		.byte	0x4
 2186 0557 1A02     		.2byte	0x21a
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 93


 2187 0559 38040000 		.4byte	0x438
 2188 055d 0F       		.uleb128 0xf
 2189 055e 1C       		.byte	0x1c
 2190 055f 04       		.byte	0x4
 2191 0560 2002     		.2byte	0x220
 2192 0562 DC050000 		.4byte	0x5dc
 2193 0566 10       		.uleb128 0x10
 2194 0567 FC060000 		.4byte	.LASF77
 2195 056b 04       		.byte	0x4
 2196 056c 2502     		.2byte	0x225
 2197 056e DC050000 		.4byte	0x5dc
 2198 0572 00       		.byte	0
 2199 0573 10       		.uleb128 0x10
 2200 0574 0A060000 		.4byte	.LASF78
 2201 0578 04       		.byte	0x4
 2202 0579 2A02     		.2byte	0x22a
 2203 057b DC050000 		.4byte	0x5dc
 2204 057f 04       		.byte	0x4
 2205 0580 10       		.uleb128 0x10
 2206 0581 3A040000 		.4byte	.LASF79
 2207 0585 04       		.byte	0x4
 2208 0586 2F02     		.2byte	0x22f
 2209 0588 DC050000 		.4byte	0x5dc
 2210 058c 08       		.byte	0x8
 2211 058d 10       		.uleb128 0x10
 2212 058e 0C090000 		.4byte	.LASF80
 2213 0592 04       		.byte	0x4
 2214 0593 3402     		.2byte	0x234
 2215 0595 DC050000 		.4byte	0x5dc
 2216 0599 0C       		.byte	0xc
 2217 059a 10       		.uleb128 0x10
 2218 059b E80A0000 		.4byte	.LASF81
 2219 059f 04       		.byte	0x4
 2220 05a0 3902     		.2byte	0x239
 2221 05a2 83000000 		.4byte	0x83
 2222 05a6 10       		.byte	0x10
 2223 05a7 10       		.uleb128 0x10
 2224 05a8 5D070000 		.4byte	.LASF82
 2225 05ac 04       		.byte	0x4
 2226 05ad 3E02     		.2byte	0x23e
 2227 05af 83000000 		.4byte	0x83
 2228 05b3 14       		.byte	0x14
 2229 05b4 10       		.uleb128 0x10
 2230 05b5 B8050000 		.4byte	.LASF83
 2231 05b9 04       		.byte	0x4
 2232 05ba 4302     		.2byte	0x243
 2233 05bc 6B000000 		.4byte	0x6b
 2234 05c0 18       		.byte	0x18
 2235 05c1 10       		.uleb128 0x10
 2236 05c2 000A0000 		.4byte	.LASF84
 2237 05c6 04       		.byte	0x4
 2238 05c7 4802     		.2byte	0x248
 2239 05c9 6B000000 		.4byte	0x6b
 2240 05cd 19       		.byte	0x19
 2241 05ce 10       		.uleb128 0x10
 2242 05cf CB020000 		.4byte	.LASF85
 2243 05d3 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 94


 2244 05d4 4D02     		.2byte	0x24d
 2245 05d6 6B000000 		.4byte	0x6b
 2246 05da 1A       		.byte	0x1a
 2247 05db 00       		.byte	0
 2248 05dc 06       		.uleb128 0x6
 2249 05dd 04       		.byte	0x4
 2250 05de B5000000 		.4byte	0xb5
 2251 05e2 04       		.uleb128 0x4
 2252 05e3 5E0B0000 		.4byte	.LASF86
 2253 05e7 04       		.byte	0x4
 2254 05e8 4E02     		.2byte	0x24e
 2255 05ea 5D050000 		.4byte	0x55d
 2256 05ee 0F       		.uleb128 0xf
 2257 05ef 1C       		.byte	0x1c
 2258 05f0 04       		.byte	0x4
 2259 05f1 8102     		.2byte	0x281
 2260 05f3 6D060000 		.4byte	0x66d
 2261 05f7 10       		.uleb128 0x10
 2262 05f8 7C060000 		.4byte	.LASF87
 2263 05fc 04       		.byte	0x4
 2264 05fd 8A02     		.2byte	0x28a
 2265 05ff 6D060000 		.4byte	0x66d
 2266 0603 00       		.byte	0
 2267 0604 10       		.uleb128 0x10
 2268 0605 CC0A0000 		.4byte	.LASF88
 2269 0609 04       		.byte	0x4
 2270 060a 9102     		.2byte	0x291
 2271 060c 74060000 		.4byte	0x674
 2272 0610 04       		.byte	0x4
 2273 0611 10       		.uleb128 0x10
 2274 0612 1D080000 		.4byte	.LASF89
 2275 0616 04       		.byte	0x4
 2276 0617 9702     		.2byte	0x297
 2277 0619 76060000 		.4byte	0x676
 2278 061d 08       		.byte	0x8
 2279 061e 10       		.uleb128 0x10
 2280 061f 17070000 		.4byte	.LASF90
 2281 0623 04       		.byte	0x4
 2282 0624 9D02     		.2byte	0x29d
 2283 0626 74060000 		.4byte	0x674
 2284 062a 0C       		.byte	0xc
 2285 062b 10       		.uleb128 0x10
 2286 062c 310A0000 		.4byte	.LASF91
 2287 0630 04       		.byte	0x4
 2288 0631 A402     		.2byte	0x2a4
 2289 0633 7C060000 		.4byte	0x67c
 2290 0637 10       		.byte	0x10
 2291 0638 10       		.uleb128 0x10
 2292 0639 B90A0000 		.4byte	.LASF92
 2293 063d 04       		.byte	0x4
 2294 063e A902     		.2byte	0x2a9
 2295 0640 83000000 		.4byte	0x83
 2296 0644 14       		.byte	0x14
 2297 0645 10       		.uleb128 0x10
 2298 0646 25050000 		.4byte	.LASF93
 2299 064a 04       		.byte	0x4
 2300 064b B002     		.2byte	0x2b0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 95


 2301 064d 77000000 		.4byte	0x77
 2302 0651 18       		.byte	0x18
 2303 0652 10       		.uleb128 0x10
 2304 0653 C7030000 		.4byte	.LASF94
 2305 0657 04       		.byte	0x4
 2306 0658 B702     		.2byte	0x2b7
 2307 065a 6B000000 		.4byte	0x6b
 2308 065e 1A       		.byte	0x1a
 2309 065f 10       		.uleb128 0x10
 2310 0660 9E090000 		.4byte	.LASF95
 2311 0664 04       		.byte	0x4
 2312 0665 C102     		.2byte	0x2c1
 2313 0667 6B000000 		.4byte	0x6b
 2314 066b 1B       		.byte	0x1b
 2315 066c 00       		.byte	0
 2316 066d 06       		.uleb128 0x6
 2317 066e 04       		.byte	0x4
 2318 066f 73060000 		.4byte	0x673
 2319 0673 14       		.uleb128 0x14
 2320 0674 15       		.uleb128 0x15
 2321 0675 04       		.byte	0x4
 2322 0676 06       		.uleb128 0x6
 2323 0677 04       		.byte	0x4
 2324 0678 68030000 		.4byte	0x368
 2325 067c 06       		.uleb128 0x6
 2326 067d 04       		.byte	0x4
 2327 067e 6B000000 		.4byte	0x6b
 2328 0682 04       		.uleb128 0x4
 2329 0683 81000000 		.4byte	.LASF96
 2330 0687 04       		.byte	0x4
 2331 0688 C202     		.2byte	0x2c2
 2332 068a EE050000 		.4byte	0x5ee
 2333 068e 12       		.uleb128 0x12
 2334 068f 5001     		.2byte	0x150
 2335 0691 04       		.byte	0x4
 2336 0692 C802     		.2byte	0x2c8
 2337 0694 A6060000 		.4byte	0x6a6
 2338 0698 10       		.uleb128 0x10
 2339 0699 D1020000 		.4byte	.LASF97
 2340 069d 04       		.byte	0x4
 2341 069e CD02     		.2byte	0x2cd
 2342 06a0 A6060000 		.4byte	0x6a6
 2343 06a4 00       		.byte	0
 2344 06a5 00       		.byte	0
 2345 06a6 0D       		.uleb128 0xd
 2346 06a7 82060000 		.4byte	0x682
 2347 06ab B6060000 		.4byte	0x6b6
 2348 06af 0E       		.uleb128 0xe
 2349 06b0 AC010000 		.4byte	0x1ac
 2350 06b4 0B       		.byte	0xb
 2351 06b5 00       		.byte	0
 2352 06b6 04       		.uleb128 0x4
 2353 06b7 28080000 		.4byte	.LASF98
 2354 06bb 04       		.byte	0x4
 2355 06bc CE02     		.2byte	0x2ce
 2356 06be 8E060000 		.4byte	0x68e
 2357 06c2 02       		.uleb128 0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 96


 2358 06c3 08       		.byte	0x8
 2359 06c4 04       		.byte	0x4
 2360 06c5 D2060000 		.4byte	.LASF99
 2361 06c9 16       		.uleb128 0x16
 2362 06ca E0040000 		.4byte	.LASF104
 2363 06ce 01       		.byte	0x1
 2364 06cf BE08     		.2byte	0x8be
 2365 06d1 00000000 		.4byte	.LFB20
 2366 06d5 06000000 		.4byte	.LFE20-.LFB20
 2367 06d9 01       		.uleb128 0x1
 2368 06da 9C       		.byte	0x9c
 2369 06db 16070000 		.4byte	0x716
 2370 06df 17       		.uleb128 0x17
 2371 06e0 A9070000 		.4byte	.LASF100
 2372 06e4 01       		.byte	0x1
 2373 06e5 BE08     		.2byte	0x8be
 2374 06e7 83000000 		.4byte	0x83
 2375 06eb 01       		.uleb128 0x1
 2376 06ec 50       		.byte	0x50
 2377 06ed 17       		.uleb128 0x17
 2378 06ee 93020000 		.4byte	.LASF101
 2379 06f2 01       		.byte	0x1
 2380 06f3 BE08     		.2byte	0x8be
 2381 06f5 16070000 		.4byte	0x716
 2382 06f9 01       		.uleb128 0x1
 2383 06fa 51       		.byte	0x51
 2384 06fb 18       		.uleb128 0x18
 2385 06fc D0030000 		.4byte	.LASF102
 2386 0700 01       		.byte	0x1
 2387 0701 C008     		.2byte	0x8c0
 2388 0703 6B000000 		.4byte	0x6b
 2389 0707 05       		.byte	0x5
 2390 0708 18       		.uleb128 0x18
 2391 0709 C5010000 		.4byte	.LASF103
 2392 070d 01       		.byte	0x1
 2393 070e C108     		.2byte	0x8c1
 2394 0710 6B000000 		.4byte	0x6b
 2395 0714 00       		.byte	0
 2396 0715 00       		.byte	0
 2397 0716 06       		.uleb128 0x6
 2398 0717 04       		.byte	0x4
 2399 0718 B3010000 		.4byte	0x1b3
 2400 071c 16       		.uleb128 0x16
 2401 071d 65000000 		.4byte	.LASF105
 2402 0721 01       		.byte	0x1
 2403 0722 FA02     		.2byte	0x2fa
 2404 0724 00000000 		.4byte	.LFB7
 2405 0728 24000000 		.4byte	.LFE7-.LFB7
 2406 072c 01       		.uleb128 0x1
 2407 072d 9C       		.byte	0x9c
 2408 072e 4C070000 		.4byte	0x74c
 2409 0732 19       		.uleb128 0x19
 2410 0733 8D0B0000 		.4byte	.LASF106
 2411 0737 01       		.byte	0x1
 2412 0738 FC02     		.2byte	0x2fc
 2413 073a 83000000 		.4byte	0x83
 2414 073e 00000000 		.4byte	.LLST0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 97


 2415 0742 1A       		.uleb128 0x1a
 2416 0743 1A000000 		.4byte	.LVL5
 2417 0747 0D0F0000 		.4byte	0xf0d
 2418 074b 00       		.byte	0
 2419 074c 1B       		.uleb128 0x1b
 2420 074d B3010000 		.4byte	.LASF184
 2421 0751 01       		.byte	0x1
 2422 0752 E9       		.byte	0xe9
 2423 0753 83000000 		.4byte	0x83
 2424 0757 00000000 		.4byte	.LFB1
 2425 075b 10000000 		.4byte	.LFE1-.LFB1
 2426 075f 01       		.uleb128 0x1
 2427 0760 9C       		.byte	0x9c
 2428 0761 1C       		.uleb128 0x1c
 2429 0762 77030000 		.4byte	.LASF109
 2430 0766 01       		.byte	0x1
 2431 0767 1D01     		.2byte	0x11d
 2432 0769 A4000000 		.4byte	0xa4
 2433 076d 00000000 		.4byte	.LFB2
 2434 0771 40000000 		.4byte	.LFE2-.LFB2
 2435 0775 01       		.uleb128 0x1
 2436 0776 9C       		.byte	0x9c
 2437 0777 A5070000 		.4byte	0x7a5
 2438 077b 1D       		.uleb128 0x1d
 2439 077c 2F0C0000 		.4byte	.LASF107
 2440 0780 01       		.byte	0x1
 2441 0781 1D01     		.2byte	0x11d
 2442 0783 83000000 		.4byte	0x83
 2443 0787 13000000 		.4byte	.LLST1
 2444 078b 19       		.uleb128 0x19
 2445 078c 020C0000 		.4byte	.LASF108
 2446 0790 01       		.byte	0x1
 2447 0791 1F01     		.2byte	0x11f
 2448 0793 A4000000 		.4byte	0xa4
 2449 0797 34000000 		.4byte	.LLST2
 2450 079b 1A       		.uleb128 0x1a
 2451 079c 38000000 		.4byte	.LVL8
 2452 07a0 190F0000 		.4byte	0xf19
 2453 07a4 00       		.byte	0
 2454 07a5 1C       		.uleb128 0x1c
 2455 07a6 CD070000 		.4byte	.LASF110
 2456 07aa 01       		.byte	0x1
 2457 07ab 7001     		.2byte	0x170
 2458 07ad A4000000 		.4byte	0xa4
 2459 07b1 00000000 		.4byte	.LFB3
 2460 07b5 2C000000 		.4byte	.LFE3-.LFB3
 2461 07b9 01       		.uleb128 0x1
 2462 07ba 9C       		.byte	0x9c
 2463 07bb D9070000 		.4byte	0x7d9
 2464 07bf 19       		.uleb128 0x19
 2465 07c0 9C000000 		.4byte	.LASF111
 2466 07c4 01       		.byte	0x1
 2467 07c5 7201     		.2byte	0x172
 2468 07c7 A4000000 		.4byte	0xa4
 2469 07cb 52000000 		.4byte	.LLST3
 2470 07cf 1A       		.uleb128 0x1a
 2471 07d0 16000000 		.4byte	.LVL11
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 98


 2472 07d4 250F0000 		.4byte	0xf25
 2473 07d8 00       		.byte	0
 2474 07d9 1C       		.uleb128 0x1c
 2475 07da 9E050000 		.4byte	.LASF112
 2476 07de 01       		.byte	0x1
 2477 07df AE01     		.2byte	0x1ae
 2478 07e1 A4000000 		.4byte	0xa4
 2479 07e5 00000000 		.4byte	.LFB4
 2480 07e9 48000000 		.4byte	.LFE4-.LFB4
 2481 07ed 01       		.uleb128 0x1
 2482 07ee 9C       		.byte	0x9c
 2483 07ef 31080000 		.4byte	0x831
 2484 07f3 19       		.uleb128 0x19
 2485 07f4 9C000000 		.4byte	.LASF111
 2486 07f8 01       		.byte	0x1
 2487 07f9 B001     		.2byte	0x1b0
 2488 07fb A4000000 		.4byte	0xa4
 2489 07ff 71000000 		.4byte	.LLST4
 2490 0803 19       		.uleb128 0x19
 2491 0804 A9070000 		.4byte	.LASF100
 2492 0808 01       		.byte	0x1
 2493 0809 B201     		.2byte	0x1b2
 2494 080b 83000000 		.4byte	0x83
 2495 080f BF000000 		.4byte	.LLST5
 2496 0813 1E       		.uleb128 0x1e
 2497 0814 18000000 		.4byte	.LVL16
 2498 0818 61070000 		.4byte	0x761
 2499 081c 27080000 		.4byte	0x827
 2500 0820 1F       		.uleb128 0x1f
 2501 0821 01       		.uleb128 0x1
 2502 0822 50       		.byte	0x50
 2503 0823 02       		.uleb128 0x2
 2504 0824 74       		.byte	0x74
 2505 0825 00       		.sleb128 0
 2506 0826 00       		.byte	0
 2507 0827 1A       		.uleb128 0x1a
 2508 0828 32000000 		.4byte	.LVL17
 2509 082c A5070000 		.4byte	0x7a5
 2510 0830 00       		.byte	0
 2511 0831 20       		.uleb128 0x20
 2512 0832 C9040000 		.4byte	.LASF119
 2513 0836 01       		.byte	0x1
 2514 0837 8902     		.2byte	0x289
 2515 0839 00000000 		.4byte	.LFB6
 2516 083d A0000000 		.4byte	.LFE6-.LFB6
 2517 0841 01       		.uleb128 0x1
 2518 0842 9C       		.byte	0x9c
 2519 0843 FB080000 		.4byte	0x8fb
 2520 0847 1D       		.uleb128 0x1d
 2521 0848 2F0C0000 		.4byte	.LASF107
 2522 084c 01       		.byte	0x1
 2523 084d 8902     		.2byte	0x289
 2524 084f 83000000 		.4byte	0x83
 2525 0853 D2000000 		.4byte	.LLST6
 2526 0857 1D       		.uleb128 0x1d
 2527 0858 0A000000 		.4byte	.LASF113
 2528 085c 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 99


 2529 085d 8902     		.2byte	0x289
 2530 085f 83000000 		.4byte	0x83
 2531 0863 F3000000 		.4byte	.LLST7
 2532 0867 1D       		.uleb128 0x1d
 2533 0868 D80A0000 		.4byte	.LASF114
 2534 086c 01       		.byte	0x1
 2535 086d 8902     		.2byte	0x289
 2536 086f 83000000 		.4byte	0x83
 2537 0873 14010000 		.4byte	.LLST8
 2538 0877 18       		.uleb128 0x18
 2539 0878 8B020000 		.4byte	.LASF115
 2540 087c 01       		.byte	0x1
 2541 087d 8B02     		.2byte	0x28b
 2542 087f 83000000 		.4byte	0x83
 2543 0883 01       		.byte	0x1
 2544 0884 19       		.uleb128 0x19
 2545 0885 DE0A0000 		.4byte	.LASF116
 2546 0889 01       		.byte	0x1
 2547 088a 8C02     		.2byte	0x28c
 2548 088c 83000000 		.4byte	0x83
 2549 0890 40010000 		.4byte	.LLST9
 2550 0894 19       		.uleb128 0x19
 2551 0895 A4010000 		.4byte	.LASF117
 2552 0899 01       		.byte	0x1
 2553 089a 8D02     		.2byte	0x28d
 2554 089c 6B000000 		.4byte	0x6b
 2555 08a0 5F010000 		.4byte	.LLST10
 2556 08a4 19       		.uleb128 0x19
 2557 08a5 C60A0000 		.4byte	.LASF118
 2558 08a9 01       		.byte	0x1
 2559 08aa 8E02     		.2byte	0x28e
 2560 08ac FB080000 		.4byte	0x8fb
 2561 08b0 88010000 		.4byte	.LLST11
 2562 08b4 1A       		.uleb128 0x1a
 2563 08b5 1E000000 		.4byte	.LVL27
 2564 08b9 310F0000 		.4byte	0xf31
 2565 08bd 1A       		.uleb128 0x1a
 2566 08be 3E000000 		.4byte	.LVL28
 2567 08c2 3C0F0000 		.4byte	0xf3c
 2568 08c6 1A       		.uleb128 0x1a
 2569 08c7 50000000 		.4byte	.LVL29
 2570 08cb 310F0000 		.4byte	0xf31
 2571 08cf 1A       		.uleb128 0x1a
 2572 08d0 70000000 		.4byte	.LVL30
 2573 08d4 3C0F0000 		.4byte	0xf3c
 2574 08d8 1A       		.uleb128 0x1a
 2575 08d9 76000000 		.4byte	.LVL31
 2576 08dd 310F0000 		.4byte	0xf31
 2577 08e1 1A       		.uleb128 0x1a
 2578 08e2 88000000 		.4byte	.LVL32
 2579 08e6 3C0F0000 		.4byte	0xf3c
 2580 08ea 21       		.uleb128 0x21
 2581 08eb 90000000 		.4byte	.LVL33
 2582 08ef 470F0000 		.4byte	0xf47
 2583 08f3 1F       		.uleb128 0x1f
 2584 08f4 01       		.uleb128 0x1
 2585 08f5 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 100


 2586 08f6 02       		.uleb128 0x2
 2587 08f7 74       		.byte	0x74
 2588 08f8 00       		.sleb128 0
 2589 08f9 00       		.byte	0
 2590 08fa 00       		.byte	0
 2591 08fb 06       		.uleb128 0x6
 2592 08fc 04       		.byte	0x4
 2593 08fd 01090000 		.4byte	0x901
 2594 0901 22       		.uleb128 0x22
 2595 0902 E2050000 		.4byte	0x5e2
 2596 0906 20       		.uleb128 0x20
 2597 0907 64050000 		.4byte	.LASF120
 2598 090b 01       		.byte	0x1
 2599 090c 8503     		.2byte	0x385
 2600 090e 00000000 		.4byte	.LFB8
 2601 0912 3C000000 		.4byte	.LFE8-.LFB8
 2602 0916 01       		.uleb128 0x1
 2603 0917 9C       		.byte	0x9c
 2604 0918 3F090000 		.4byte	0x93f
 2605 091c 1D       		.uleb128 0x1d
 2606 091d 0E020000 		.4byte	.LASF121
 2607 0921 01       		.byte	0x1
 2608 0922 8503     		.2byte	0x385
 2609 0924 1C010000 		.4byte	0x11c
 2610 0928 9B010000 		.4byte	.LLST12
 2611 092c 1A       		.uleb128 0x1a
 2612 092d 14000000 		.4byte	.LVL40
 2613 0931 1C070000 		.4byte	0x71c
 2614 0935 1A       		.uleb128 0x1a
 2615 0936 1C000000 		.4byte	.LVL41
 2616 093a 530F0000 		.4byte	0xf53
 2617 093e 00       		.byte	0
 2618 093f 20       		.uleb128 0x20
 2619 0940 19010000 		.4byte	.LASF122
 2620 0944 01       		.byte	0x1
 2621 0945 E803     		.2byte	0x3e8
 2622 0947 00000000 		.4byte	.LFB9
 2623 094b 40000000 		.4byte	.LFE9-.LFB9
 2624 094f 01       		.uleb128 0x1
 2625 0950 9C       		.byte	0x9c
 2626 0951 86090000 		.4byte	0x986
 2627 0955 19       		.uleb128 0x19
 2628 0956 C60A0000 		.4byte	.LASF118
 2629 095a 01       		.byte	0x1
 2630 095b EA03     		.2byte	0x3ea
 2631 095d FB080000 		.4byte	0x8fb
 2632 0961 BC010000 		.4byte	.LLST13
 2633 0965 19       		.uleb128 0x19
 2634 0966 BB020000 		.4byte	.LASF123
 2635 096a 01       		.byte	0x1
 2636 096b EB03     		.2byte	0x3eb
 2637 096d 83000000 		.4byte	0x83
 2638 0971 CF010000 		.4byte	.LLST14
 2639 0975 19       		.uleb128 0x19
 2640 0976 89010000 		.4byte	.LASF124
 2641 097a 01       		.byte	0x1
 2642 097b EC03     		.2byte	0x3ec
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 101


 2643 097d 83000000 		.4byte	0x83
 2644 0981 EE010000 		.4byte	.LLST15
 2645 0985 00       		.byte	0
 2646 0986 20       		.uleb128 0x20
 2647 0987 380C0000 		.4byte	.LASF125
 2648 098b 01       		.byte	0x1
 2649 098c 6204     		.2byte	0x462
 2650 098e 00000000 		.4byte	.LFB10
 2651 0992 78000000 		.4byte	.LFE10-.LFB10
 2652 0996 01       		.uleb128 0x1
 2653 0997 9C       		.byte	0x9c
 2654 0998 BF090000 		.4byte	0x9bf
 2655 099c 19       		.uleb128 0x19
 2656 099d 4A080000 		.4byte	.LASF126
 2657 09a1 01       		.byte	0x1
 2658 09a2 6A04     		.2byte	0x46a
 2659 09a4 A4000000 		.4byte	0xa4
 2660 09a8 17020000 		.4byte	.LLST16
 2661 09ac 1A       		.uleb128 0x1a
 2662 09ad 14000000 		.4byte	.LVL54
 2663 09b1 61070000 		.4byte	0x761
 2664 09b5 1A       		.uleb128 0x1a
 2665 09b6 2A000000 		.4byte	.LVL56
 2666 09ba A5070000 		.4byte	0x7a5
 2667 09be 00       		.byte	0
 2668 09bf 20       		.uleb128 0x20
 2669 09c0 40040000 		.4byte	.LASF127
 2670 09c4 01       		.byte	0x1
 2671 09c5 AF04     		.2byte	0x4af
 2672 09c7 00000000 		.4byte	.LFB11
 2673 09cb 08000000 		.4byte	.LFE11-.LFB11
 2674 09cf 01       		.uleb128 0x1
 2675 09d0 9C       		.byte	0x9c
 2676 09d1 F7090000 		.4byte	0x9f7
 2677 09d5 1D       		.uleb128 0x1d
 2678 09d6 210A0000 		.4byte	.LASF128
 2679 09da 01       		.byte	0x1
 2680 09db AF04     		.2byte	0x4af
 2681 09dd C6000000 		.4byte	0xc6
 2682 09e1 62020000 		.4byte	.LLST17
 2683 09e5 21       		.uleb128 0x21
 2684 09e6 06000000 		.4byte	.LVL63
 2685 09ea 5F0F0000 		.4byte	0xf5f
 2686 09ee 1F       		.uleb128 0x1f
 2687 09ef 01       		.uleb128 0x1
 2688 09f0 50       		.byte	0x50
 2689 09f1 03       		.uleb128 0x3
 2690 09f2 F3       		.byte	0xf3
 2691 09f3 01       		.uleb128 0x1
 2692 09f4 50       		.byte	0x50
 2693 09f5 00       		.byte	0
 2694 09f6 00       		.byte	0
 2695 09f7 20       		.uleb128 0x20
 2696 09f8 02050000 		.4byte	.LASF129
 2697 09fc 01       		.byte	0x1
 2698 09fd C604     		.2byte	0x4c6
 2699 09ff 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 102


 2700 0a03 30000000 		.4byte	.LFE12-.LFB12
 2701 0a07 01       		.uleb128 0x1
 2702 0a08 9C       		.byte	0x9c
 2703 0a09 1E0A0000 		.4byte	0xa1e
 2704 0a0d 1D       		.uleb128 0x1d
 2705 0a0e 31050000 		.4byte	.LASF130
 2706 0a12 01       		.byte	0x1
 2707 0a13 C604     		.2byte	0x4c6
 2708 0a15 83000000 		.4byte	0x83
 2709 0a19 83020000 		.4byte	.LLST18
 2710 0a1d 00       		.byte	0
 2711 0a1e 20       		.uleb128 0x20
 2712 0a1f 43060000 		.4byte	.LASF131
 2713 0a23 01       		.byte	0x1
 2714 0a24 0A05     		.2byte	0x50a
 2715 0a26 00000000 		.4byte	.LFB13
 2716 0a2a 14000000 		.4byte	.LFE13-.LFB13
 2717 0a2e 01       		.uleb128 0x1
 2718 0a2f 9C       		.byte	0x9c
 2719 0a30 550A0000 		.4byte	0xa55
 2720 0a34 1D       		.uleb128 0x1d
 2721 0a35 1C0B0000 		.4byte	.LASF132
 2722 0a39 01       		.byte	0x1
 2723 0a3a 0A05     		.2byte	0x50a
 2724 0a3c 83000000 		.4byte	0x83
 2725 0a40 B1020000 		.4byte	.LLST19
 2726 0a44 19       		.uleb128 0x19
 2727 0a45 8D0B0000 		.4byte	.LASF106
 2728 0a49 01       		.byte	0x1
 2729 0a4a 0D05     		.2byte	0x50d
 2730 0a4c 83000000 		.4byte	0x83
 2731 0a50 DF020000 		.4byte	.LLST20
 2732 0a54 00       		.byte	0
 2733 0a55 20       		.uleb128 0x20
 2734 0a56 CD080000 		.4byte	.LASF133
 2735 0a5a 01       		.byte	0x1
 2736 0a5b 5E05     		.2byte	0x55e
 2737 0a5d 00000000 		.4byte	.LFB14
 2738 0a61 12000000 		.4byte	.LFE14-.LFB14
 2739 0a65 01       		.uleb128 0x1
 2740 0a66 9C       		.byte	0x9c
 2741 0a67 B10A0000 		.4byte	0xab1
 2742 0a6b 1D       		.uleb128 0x1d
 2743 0a6c 1C0B0000 		.4byte	.LASF132
 2744 0a70 01       		.byte	0x1
 2745 0a71 5E05     		.2byte	0x55e
 2746 0a73 83000000 		.4byte	0x83
 2747 0a77 08030000 		.4byte	.LLST21
 2748 0a7b 1D       		.uleb128 0x1d
 2749 0a7c 31050000 		.4byte	.LASF130
 2750 0a80 01       		.byte	0x1
 2751 0a81 5E05     		.2byte	0x55e
 2752 0a83 83000000 		.4byte	0x83
 2753 0a87 34030000 		.4byte	.LLST22
 2754 0a8b 1E       		.uleb128 0x1e
 2755 0a8c 0A000000 		.4byte	.LVL75
 2756 0a90 F7090000 		.4byte	0x9f7
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 103


 2757 0a94 A00A0000 		.4byte	0xaa0
 2758 0a98 1F       		.uleb128 0x1f
 2759 0a99 01       		.uleb128 0x1
 2760 0a9a 50       		.byte	0x50
 2761 0a9b 03       		.uleb128 0x3
 2762 0a9c F3       		.byte	0xf3
 2763 0a9d 01       		.uleb128 0x1
 2764 0a9e 51       		.byte	0x51
 2765 0a9f 00       		.byte	0
 2766 0aa0 21       		.uleb128 0x21
 2767 0aa1 10000000 		.4byte	.LVL76
 2768 0aa5 1E0A0000 		.4byte	0xa1e
 2769 0aa9 1F       		.uleb128 0x1f
 2770 0aaa 01       		.uleb128 0x1
 2771 0aab 50       		.byte	0x50
 2772 0aac 02       		.uleb128 0x2
 2773 0aad 74       		.byte	0x74
 2774 0aae 00       		.sleb128 0
 2775 0aaf 00       		.byte	0
 2776 0ab0 00       		.byte	0
 2777 0ab1 1C       		.uleb128 0x1c
 2778 0ab2 F3010000 		.4byte	.LASF134
 2779 0ab6 01       		.byte	0x1
 2780 0ab7 9205     		.2byte	0x592
 2781 0ab9 A4000000 		.4byte	0xa4
 2782 0abd 00000000 		.4byte	.LFB15
 2783 0ac1 1C000000 		.4byte	.LFE15-.LFB15
 2784 0ac5 01       		.uleb128 0x1
 2785 0ac6 9C       		.byte	0x9c
 2786 0ac7 030B0000 		.4byte	0xb03
 2787 0acb 1D       		.uleb128 0x1d
 2788 0acc 2F0C0000 		.4byte	.LASF107
 2789 0ad0 01       		.byte	0x1
 2790 0ad1 9205     		.2byte	0x592
 2791 0ad3 83000000 		.4byte	0x83
 2792 0ad7 55030000 		.4byte	.LLST23
 2793 0adb 19       		.uleb128 0x19
 2794 0adc 63060000 		.4byte	.LASF135
 2795 0ae0 01       		.byte	0x1
 2796 0ae1 9405     		.2byte	0x594
 2797 0ae3 A4000000 		.4byte	0xa4
 2798 0ae7 97030000 		.4byte	.LLST24
 2799 0aeb 21       		.uleb128 0x21
 2800 0aec 1A000000 		.4byte	.LVL84
 2801 0af0 6A0F0000 		.4byte	0xf6a
 2802 0af4 1F       		.uleb128 0x1f
 2803 0af5 01       		.uleb128 0x1
 2804 0af6 50       		.byte	0x50
 2805 0af7 03       		.uleb128 0x3
 2806 0af8 F3       		.byte	0xf3
 2807 0af9 01       		.uleb128 0x1
 2808 0afa 50       		.byte	0x50
 2809 0afb 1F       		.uleb128 0x1f
 2810 0afc 01       		.uleb128 0x1
 2811 0afd 51       		.byte	0x51
 2812 0afe 02       		.uleb128 0x2
 2813 0aff 08       		.byte	0x8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 104


 2814 0b00 55       		.byte	0x55
 2815 0b01 00       		.byte	0
 2816 0b02 00       		.byte	0
 2817 0b03 1C       		.uleb128 0x1c
 2818 0b04 690A0000 		.4byte	.LASF136
 2819 0b08 01       		.byte	0x1
 2820 0b09 0306     		.2byte	0x603
 2821 0b0b A4000000 		.4byte	0xa4
 2822 0b0f 00000000 		.4byte	.LFB16
 2823 0b13 1A000000 		.4byte	.LFE16-.LFB16
 2824 0b17 01       		.uleb128 0x1
 2825 0b18 9C       		.byte	0x9c
 2826 0b19 4E0B0000 		.4byte	0xb4e
 2827 0b1d 19       		.uleb128 0x19
 2828 0b1e 63060000 		.4byte	.LASF135
 2829 0b22 01       		.byte	0x1
 2830 0b23 0506     		.2byte	0x605
 2831 0b25 A4000000 		.4byte	0xa4
 2832 0b29 C1030000 		.4byte	.LLST25
 2833 0b2d 19       		.uleb128 0x19
 2834 0b2e A9070000 		.4byte	.LASF100
 2835 0b32 01       		.byte	0x1
 2836 0b33 0606     		.2byte	0x606
 2837 0b35 83000000 		.4byte	0x83
 2838 0b39 EB030000 		.4byte	.LLST26
 2839 0b3d 21       		.uleb128 0x21
 2840 0b3e 0E000000 		.4byte	.LVL87
 2841 0b42 B10A0000 		.4byte	0xab1
 2842 0b46 1F       		.uleb128 0x1f
 2843 0b47 01       		.uleb128 0x1
 2844 0b48 50       		.byte	0x50
 2845 0b49 02       		.uleb128 0x2
 2846 0b4a 74       		.byte	0x74
 2847 0b4b 00       		.sleb128 0
 2848 0b4c 00       		.byte	0
 2849 0b4d 00       		.byte	0
 2850 0b4e 20       		.uleb128 0x20
 2851 0b4f 8E070000 		.4byte	.LASF137
 2852 0b53 01       		.byte	0x1
 2853 0b54 B507     		.2byte	0x7b5
 2854 0b56 00000000 		.4byte	.LFB17
 2855 0b5a 14000000 		.4byte	.LFE17-.LFB17
 2856 0b5e 01       		.uleb128 0x1
 2857 0b5f 9C       		.byte	0x9c
 2858 0b60 750B0000 		.4byte	0xb75
 2859 0b64 1D       		.uleb128 0x1d
 2860 0b65 13040000 		.4byte	.LASF138
 2861 0b69 01       		.byte	0x1
 2862 0b6a B507     		.2byte	0x7b5
 2863 0b6c 83000000 		.4byte	0x83
 2864 0b70 0A040000 		.4byte	.LLST27
 2865 0b74 00       		.byte	0
 2866 0b75 20       		.uleb128 0x20
 2867 0b76 CF000000 		.4byte	.LASF139
 2868 0b7a 01       		.byte	0x1
 2869 0b7b CA07     		.2byte	0x7ca
 2870 0b7d 00000000 		.4byte	.LFB18
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 105


 2871 0b81 74000000 		.4byte	.LFE18-.LFB18
 2872 0b85 01       		.uleb128 0x1
 2873 0b86 9C       		.byte	0x9c
 2874 0b87 320C0000 		.4byte	0xc32
 2875 0b8b 1D       		.uleb128 0x1d
 2876 0b8c 900A0000 		.4byte	.LASF140
 2877 0b90 01       		.byte	0x1
 2878 0b91 CA07     		.2byte	0x7ca
 2879 0b93 83000000 		.4byte	0x83
 2880 0b97 2B040000 		.4byte	.LLST28
 2881 0b9b 19       		.uleb128 0x19
 2882 0b9c EB0B0000 		.4byte	.LASF141
 2883 0ba0 01       		.byte	0x1
 2884 0ba1 CC07     		.2byte	0x7cc
 2885 0ba3 83000000 		.4byte	0x83
 2886 0ba7 4C040000 		.4byte	.LLST29
 2887 0bab 19       		.uleb128 0x19
 2888 0bac 99060000 		.4byte	.LASF142
 2889 0bb0 01       		.byte	0x1
 2890 0bb1 CD07     		.2byte	0x7cd
 2891 0bb3 83000000 		.4byte	0x83
 2892 0bb7 5F040000 		.4byte	.LLST30
 2893 0bbb 19       		.uleb128 0x19
 2894 0bbc C6060000 		.4byte	.LASF143
 2895 0bc0 01       		.byte	0x1
 2896 0bc1 CE07     		.2byte	0x7ce
 2897 0bc3 83000000 		.4byte	0x83
 2898 0bc7 8A040000 		.4byte	.LLST31
 2899 0bcb 19       		.uleb128 0x19
 2900 0bcc CA050000 		.4byte	.LASF144
 2901 0bd0 01       		.byte	0x1
 2902 0bd1 D207     		.2byte	0x7d2
 2903 0bd3 83000000 		.4byte	0x83
 2904 0bd7 B5040000 		.4byte	.LLST32
 2905 0bdb 19       		.uleb128 0x19
 2906 0bdc 6D030000 		.4byte	.LASF145
 2907 0be0 01       		.byte	0x1
 2908 0be1 D807     		.2byte	0x7d8
 2909 0be3 83000000 		.4byte	0x83
 2910 0be7 C8040000 		.4byte	.LLST33
 2911 0beb 23       		.uleb128 0x23
 2912 0bec AC0A0000 		.4byte	.LASF185
 2913 0bf0 01       		.byte	0x1
 2914 0bf1 DE07     		.2byte	0x7de
 2915 0bf3 320C0000 		.4byte	0xc32
 2916 0bf7 19       		.uleb128 0x19
 2917 0bf8 93020000 		.4byte	.LASF101
 2918 0bfc 01       		.byte	0x1
 2919 0bfd DF07     		.2byte	0x7df
 2920 0bff 3D0C0000 		.4byte	0xc3d
 2921 0c03 F0040000 		.4byte	.LLST34
 2922 0c07 1E       		.uleb128 0x1e
 2923 0c08 46000000 		.4byte	.LVL107
 2924 0c0c 760F0000 		.4byte	0xf76
 2925 0c10 210C0000 		.4byte	0xc21
 2926 0c14 1F       		.uleb128 0x1f
 2927 0c15 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 106


 2928 0c16 50       		.byte	0x50
 2929 0c17 02       		.uleb128 0x2
 2930 0c18 75       		.byte	0x75
 2931 0c19 00       		.sleb128 0
 2932 0c1a 1F       		.uleb128 0x1f
 2933 0c1b 01       		.uleb128 0x1
 2934 0c1c 52       		.byte	0x52
 2935 0c1d 02       		.uleb128 0x2
 2936 0c1e 74       		.byte	0x74
 2937 0c1f 00       		.sleb128 0
 2938 0c20 00       		.byte	0
 2939 0c21 21       		.uleb128 0x21
 2940 0c22 62000000 		.4byte	.LVL113
 2941 0c26 1E0A0000 		.4byte	0xa1e
 2942 0c2a 1F       		.uleb128 0x1f
 2943 0c2b 01       		.uleb128 0x1
 2944 0c2c 50       		.byte	0x50
 2945 0c2d 02       		.uleb128 0x2
 2946 0c2e 75       		.byte	0x75
 2947 0c2f 00       		.sleb128 0
 2948 0c30 00       		.byte	0
 2949 0c31 00       		.byte	0
 2950 0c32 06       		.uleb128 0x6
 2951 0c33 04       		.byte	0x4
 2952 0c34 380C0000 		.4byte	0xc38
 2953 0c38 22       		.uleb128 0x22
 2954 0c39 82060000 		.4byte	0x682
 2955 0c3d 06       		.uleb128 0x6
 2956 0c3e 04       		.byte	0x4
 2957 0c3f 430C0000 		.4byte	0xc43
 2958 0c43 22       		.uleb128 0x22
 2959 0c44 B3010000 		.4byte	0x1b3
 2960 0c48 20       		.uleb128 0x20
 2961 0c49 13020000 		.4byte	.LASF146
 2962 0c4d 01       		.byte	0x1
 2963 0c4e 8908     		.2byte	0x889
 2964 0c50 00000000 		.4byte	.LFB19
 2965 0c54 24000000 		.4byte	.LFE19-.LFB19
 2966 0c58 01       		.uleb128 0x1
 2967 0c59 9C       		.byte	0x9c
 2968 0c5a 8F0C0000 		.4byte	0xc8f
 2969 0c5e 19       		.uleb128 0x19
 2970 0c5f A9070000 		.4byte	.LASF100
 2971 0c63 01       		.byte	0x1
 2972 0c64 8B08     		.2byte	0x88b
 2973 0c66 83000000 		.4byte	0x83
 2974 0c6a 03050000 		.4byte	.LLST35
 2975 0c6e 19       		.uleb128 0x19
 2976 0c6f 93020000 		.4byte	.LASF101
 2977 0c73 01       		.byte	0x1
 2978 0c74 8C08     		.2byte	0x88c
 2979 0c76 16070000 		.4byte	0x716
 2980 0c7a 22050000 		.4byte	.LLST36
 2981 0c7e 21       		.uleb128 0x21
 2982 0c7f 18000000 		.4byte	.LVL118
 2983 0c83 C9060000 		.4byte	0x6c9
 2984 0c87 1F       		.uleb128 0x1f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 107


 2985 0c88 01       		.uleb128 0x1
 2986 0c89 50       		.byte	0x50
 2987 0c8a 02       		.uleb128 0x2
 2988 0c8b 74       		.byte	0x74
 2989 0c8c 00       		.sleb128 0
 2990 0c8d 00       		.byte	0
 2991 0c8e 00       		.byte	0
 2992 0c8f 1C       		.uleb128 0x1c
 2993 0c90 3B010000 		.4byte	.LASF147
 2994 0c94 01       		.byte	0x1
 2995 0c95 0402     		.2byte	0x204
 2996 0c97 A4000000 		.4byte	0xa4
 2997 0c9b 00000000 		.4byte	.LFB5
 2998 0c9f 54000000 		.4byte	.LFE5-.LFB5
 2999 0ca3 01       		.uleb128 0x1
 3000 0ca4 9C       		.byte	0x9c
 3001 0ca5 E80C0000 		.4byte	0xce8
 3002 0ca9 18       		.uleb128 0x18
 3003 0caa 7E010000 		.4byte	.LASF148
 3004 0cae 01       		.byte	0x1
 3005 0caf 0602     		.2byte	0x206
 3006 0cb1 A4000000 		.4byte	0xa4
 3007 0cb5 00       		.byte	0
 3008 0cb6 19       		.uleb128 0x19
 3009 0cb7 EA000000 		.4byte	.LASF149
 3010 0cbb 01       		.byte	0x1
 3011 0cbc 0A02     		.2byte	0x20a
 3012 0cbe 6B000000 		.4byte	0x6b
 3013 0cc2 35050000 		.4byte	.LLST37
 3014 0cc6 1A       		.uleb128 0x1a
 3015 0cc7 3E000000 		.4byte	.LVL128
 3016 0ccb 480C0000 		.4byte	0xc48
 3017 0ccf 1A       		.uleb128 0x1a
 3018 0cd0 42000000 		.4byte	.LVL129
 3019 0cd4 3F090000 		.4byte	0x93f
 3020 0cd8 21       		.uleb128 0x21
 3021 0cd9 48000000 		.4byte	.LVL130
 3022 0cdd 06090000 		.4byte	0x906
 3023 0ce1 1F       		.uleb128 0x1f
 3024 0ce2 01       		.uleb128 0x1
 3025 0ce3 50       		.byte	0x50
 3026 0ce4 01       		.uleb128 0x1
 3027 0ce5 31       		.byte	0x31
 3028 0ce6 00       		.byte	0
 3029 0ce7 00       		.byte	0
 3030 0ce8 20       		.uleb128 0x20
 3031 0ce9 990B0000 		.4byte	.LASF150
 3032 0ced 01       		.byte	0x1
 3033 0cee 060A     		.2byte	0xa06
 3034 0cf0 00000000 		.4byte	.LFB21
 3035 0cf4 40000000 		.4byte	.LFE21-.LFB21
 3036 0cf8 01       		.uleb128 0x1
 3037 0cf9 9C       		.byte	0x9c
 3038 0cfa 490D0000 		.4byte	0xd49
 3039 0cfe 19       		.uleb128 0x19
 3040 0cff A9070000 		.4byte	.LASF100
 3041 0d03 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 108


 3042 0d04 080A     		.2byte	0xa08
 3043 0d06 83000000 		.4byte	0x83
 3044 0d0a 8B050000 		.4byte	.LLST38
 3045 0d0e 19       		.uleb128 0x19
 3046 0d0f B3070000 		.4byte	.LASF151
 3047 0d13 01       		.byte	0x1
 3048 0d14 090A     		.2byte	0xa09
 3049 0d16 83000000 		.4byte	0x83
 3050 0d1a AA050000 		.4byte	.LLST39
 3051 0d1e 19       		.uleb128 0x19
 3052 0d1f 100B0000 		.4byte	.LASF152
 3053 0d23 01       		.byte	0x1
 3054 0d24 150A     		.2byte	0xa15
 3055 0d26 FB080000 		.4byte	0x8fb
 3056 0d2a C9050000 		.4byte	.LLST40
 3057 0d2e 21       		.uleb128 0x21
 3058 0d2f 20000000 		.4byte	.LVL135
 3059 0d33 820F0000 		.4byte	0xf82
 3060 0d37 1F       		.uleb128 0x1f
 3061 0d38 01       		.uleb128 0x1
 3062 0d39 50       		.byte	0x50
 3063 0d3a 0C       		.uleb128 0xc
 3064 0d3b 74       		.byte	0x74
 3065 0d3c 00       		.sleb128 0
 3066 0d3d 33       		.byte	0x33
 3067 0d3e 24       		.byte	0x24
 3068 0d3f 74       		.byte	0x74
 3069 0d40 00       		.sleb128 0
 3070 0d41 1C       		.byte	0x1c
 3071 0d42 32       		.byte	0x32
 3072 0d43 24       		.byte	0x24
 3073 0d44 76       		.byte	0x76
 3074 0d45 00       		.sleb128 0
 3075 0d46 22       		.byte	0x22
 3076 0d47 00       		.byte	0
 3077 0d48 00       		.byte	0
 3078 0d49 1C       		.uleb128 0x1c
 3079 0d4a 38050000 		.4byte	.LASF153
 3080 0d4e 01       		.byte	0x1
 3081 0d4f 580A     		.2byte	0xa58
 3082 0d51 83000000 		.4byte	0x83
 3083 0d55 00000000 		.4byte	.LFB22
 3084 0d59 0C000000 		.4byte	.LFE22-.LFB22
 3085 0d5d 01       		.uleb128 0x1
 3086 0d5e 9C       		.byte	0x9c
 3087 0d5f 820D0000 		.4byte	0xd82
 3088 0d63 1D       		.uleb128 0x1d
 3089 0d64 2F0C0000 		.4byte	.LASF107
 3090 0d68 01       		.byte	0x1
 3091 0d69 580A     		.2byte	0xa58
 3092 0d6b 83000000 		.4byte	0x83
 3093 0d6f DC050000 		.4byte	.LLST41
 3094 0d73 24       		.uleb128 0x24
 3095 0d74 1A0A0000 		.4byte	.LASF154
 3096 0d78 01       		.byte	0x1
 3097 0d79 5A0A     		.2byte	0xa5a
 3098 0d7b 83000000 		.4byte	0x83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 109


 3099 0d7f 01       		.uleb128 0x1
 3100 0d80 50       		.byte	0x50
 3101 0d81 00       		.byte	0
 3102 0d82 20       		.uleb128 0x20
 3103 0d83 95080000 		.4byte	.LASF155
 3104 0d87 01       		.byte	0x1
 3105 0d88 820A     		.2byte	0xa82
 3106 0d8a 00000000 		.4byte	.LFB23
 3107 0d8e 0C000000 		.4byte	.LFE23-.LFB23
 3108 0d92 01       		.uleb128 0x1
 3109 0d93 9C       		.byte	0x9c
 3110 0d94 B50D0000 		.4byte	0xdb5
 3111 0d98 17       		.uleb128 0x17
 3112 0d99 2F0C0000 		.4byte	.LASF107
 3113 0d9d 01       		.byte	0x1
 3114 0d9e 820A     		.2byte	0xa82
 3115 0da0 83000000 		.4byte	0x83
 3116 0da4 01       		.uleb128 0x1
 3117 0da5 50       		.byte	0x50
 3118 0da6 17       		.uleb128 0x17
 3119 0da7 E8010000 		.4byte	.LASF156
 3120 0dab 01       		.byte	0x1
 3121 0dac 820A     		.2byte	0xa82
 3122 0dae 83000000 		.4byte	0x83
 3123 0db2 01       		.uleb128 0x1
 3124 0db3 51       		.byte	0x51
 3125 0db4 00       		.byte	0
 3126 0db5 20       		.uleb128 0x20
 3127 0db6 18000000 		.4byte	.LASF157
 3128 0dba 01       		.byte	0x1
 3129 0dbb 060B     		.2byte	0xb06
 3130 0dbd 00000000 		.4byte	.LFB24
 3131 0dc1 60000000 		.4byte	.LFE24-.LFB24
 3132 0dc5 01       		.uleb128 0x1
 3133 0dc6 9C       		.byte	0x9c
 3134 0dc7 470E0000 		.4byte	0xe47
 3135 0dcb 19       		.uleb128 0x19
 3136 0dcc 8D0B0000 		.4byte	.LASF106
 3137 0dd0 01       		.byte	0x1
 3138 0dd1 080B     		.2byte	0xb08
 3139 0dd3 83000000 		.4byte	0x83
 3140 0dd7 FD050000 		.4byte	.LLST42
 3141 0ddb 19       		.uleb128 0x19
 3142 0ddc A4010000 		.4byte	.LASF117
 3143 0de0 01       		.byte	0x1
 3144 0de1 090B     		.2byte	0xb09
 3145 0de3 6B000000 		.4byte	0x6b
 3146 0de7 31060000 		.4byte	.LLST43
 3147 0deb 1A       		.uleb128 0x1a
 3148 0dec 06000000 		.4byte	.LVL142
 3149 0df0 310F0000 		.4byte	0xf31
 3150 0df4 1A       		.uleb128 0x1a
 3151 0df5 14000000 		.4byte	.LVL145
 3152 0df9 3C0F0000 		.4byte	0xf3c
 3153 0dfd 1A       		.uleb128 0x1a
 3154 0dfe 18000000 		.4byte	.LVL146
 3155 0e02 310F0000 		.4byte	0xf31
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 110


 3156 0e06 1A       		.uleb128 0x1a
 3157 0e07 26000000 		.4byte	.LVL149
 3158 0e0b 3C0F0000 		.4byte	0xf3c
 3159 0e0f 1A       		.uleb128 0x1a
 3160 0e10 2A000000 		.4byte	.LVL150
 3161 0e14 310F0000 		.4byte	0xf31
 3162 0e18 1A       		.uleb128 0x1a
 3163 0e19 3C000000 		.4byte	.LVL154
 3164 0e1d 3C0F0000 		.4byte	0xf3c
 3165 0e21 1E       		.uleb128 0x1e
 3166 0e22 42000000 		.4byte	.LVL155
 3167 0e26 8E0F0000 		.4byte	0xf8e
 3168 0e2a 340E0000 		.4byte	0xe34
 3169 0e2e 1F       		.uleb128 0x1f
 3170 0e2f 01       		.uleb128 0x1
 3171 0e30 50       		.byte	0x50
 3172 0e31 01       		.uleb128 0x1
 3173 0e32 31       		.byte	0x31
 3174 0e33 00       		.byte	0
 3175 0e34 1A       		.uleb128 0x1a
 3176 0e35 46000000 		.4byte	.LVL156
 3177 0e39 310F0000 		.4byte	0xf31
 3178 0e3d 1A       		.uleb128 0x1a
 3179 0e3e 50000000 		.4byte	.LVL159
 3180 0e42 3C0F0000 		.4byte	0xf3c
 3181 0e46 00       		.byte	0
 3182 0e47 25       		.uleb128 0x25
 3183 0e48 BC070000 		.4byte	.LASF158
 3184 0e4c 04       		.byte	0x4
 3185 0e4d 7004     		.2byte	0x470
 3186 0e4f 51050000 		.4byte	0x551
 3187 0e53 25       		.uleb128 0x25
 3188 0e54 EB080000 		.4byte	.LASF159
 3189 0e58 04       		.byte	0x4
 3190 0e59 7104     		.2byte	0x471
 3191 0e5b 5F0E0000 		.4byte	0xe5f
 3192 0e5f 22       		.uleb128 0x22
 3193 0e60 B6060000 		.4byte	0x6b6
 3194 0e64 0D       		.uleb128 0xd
 3195 0e65 01090000 		.4byte	0x901
 3196 0e69 740E0000 		.4byte	0xe74
 3197 0e6d 0E       		.uleb128 0xe
 3198 0e6e AC010000 		.4byte	0x1ac
 3199 0e72 0B       		.byte	0xb
 3200 0e73 00       		.byte	0
 3201 0e74 25       		.uleb128 0x25
 3202 0e75 92010000 		.4byte	.LASF160
 3203 0e79 04       		.byte	0x4
 3204 0e7a 7204     		.2byte	0x472
 3205 0e7c 800E0000 		.4byte	0xe80
 3206 0e80 22       		.uleb128 0x22
 3207 0e81 640E0000 		.4byte	0xe64
 3208 0e85 26       		.uleb128 0x26
 3209 0e86 580C0000 		.4byte	.LASF161
 3210 0e8a 01       		.byte	0x1
 3211 0e8b BB       		.byte	0xbb
 3212 0e8c B0000000 		.4byte	0xb0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 111


 3213 0e90 05       		.uleb128 0x5
 3214 0e91 03       		.byte	0x3
 3215 0e92 00000000 		.4byte	CapSense_1_widgetIndex
 3216 0e96 26       		.uleb128 0x26
 3217 0e97 CB090000 		.4byte	.LASF162
 3218 0e9b 01       		.byte	0x1
 3219 0e9c BC       		.byte	0xbc
 3220 0e9d B0000000 		.4byte	0xb0
 3221 0ea1 05       		.uleb128 0x5
 3222 0ea2 03       		.byte	0x3
 3223 0ea3 00000000 		.4byte	CapSense_1_sensorIndex
 3224 0ea7 26       		.uleb128 0x26
 3225 0ea8 9B020000 		.4byte	.LASF163
 3226 0eac 01       		.byte	0x1
 3227 0ead BD       		.byte	0xbd
 3228 0eae 6B000000 		.4byte	0x6b
 3229 0eb2 05       		.uleb128 0x5
 3230 0eb3 03       		.byte	0x3
 3231 0eb4 00000000 		.4byte	CapSense_1_requestScanAllWidget
 3232 0eb8 26       		.uleb128 0x26
 3233 0eb9 A7000000 		.4byte	.LASF164
 3234 0ebd 01       		.byte	0x1
 3235 0ebe C0       		.byte	0xc0
 3236 0ebf 76060000 		.4byte	0x676
 3237 0ec3 05       		.uleb128 0x5
 3238 0ec4 03       		.byte	0x3
 3239 0ec5 00000000 		.4byte	CapSense_1_curRamSnsPtr
 3240 0ec9 26       		.uleb128 0x26
 3241 0eca F20A0000 		.4byte	.LASF165
 3242 0ece 01       		.byte	0x1
 3243 0ecf AE       		.byte	0xae
 3244 0ed0 1C010000 		.4byte	0x11c
 3245 0ed4 05       		.uleb128 0x5
 3246 0ed5 03       		.byte	0x3
 3247 0ed6 00000000 		.4byte	CapSense_1_currentSenseMethod
 3248 0eda 26       		.uleb128 0x26
 3249 0edb 39020000 		.4byte	.LASF166
 3250 0edf 01       		.byte	0x1
 3251 0ee0 B2       		.byte	0xb2
 3252 0ee1 6B000000 		.4byte	0x6b
 3253 0ee5 05       		.uleb128 0x5
 3254 0ee6 03       		.byte	0x3
 3255 0ee7 00000000 		.4byte	CapSense_1_scanFreqIndex
 3256 0eeb 26       		.uleb128 0x26
 3257 0eec 790B0000 		.4byte	.LASF167
 3258 0ef0 01       		.byte	0x1
 3259 0ef1 B4       		.byte	0xb4
 3260 0ef2 9C010000 		.4byte	0x19c
 3261 0ef6 05       		.uleb128 0x5
 3262 0ef7 03       		.byte	0x3
 3263 0ef8 00000000 		.4byte	CapSense_1_immunity
 3264 0efc 26       		.uleb128 0x26
 3265 0efd 67010000 		.4byte	.LASF168
 3266 0f01 01       		.byte	0x1
 3267 0f02 CF       		.byte	0xcf
 3268 0f03 FB080000 		.4byte	0x8fb
 3269 0f07 05       		.uleb128 0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 112


 3270 0f08 03       		.byte	0x3
 3271 0f09 00000000 		.4byte	CapSense_1_curSnsIOPtr
 3272 0f0d 27       		.uleb128 0x27
 3273 0f0e 410A0000 		.4byte	.LASF169
 3274 0f12 410A0000 		.4byte	.LASF169
 3275 0f16 05       		.byte	0x5
 3276 0f17 D401     		.2byte	0x1d4
 3277 0f19 27       		.uleb128 0x27
 3278 0f1a B1090000 		.4byte	.LASF170
 3279 0f1e B1090000 		.4byte	.LASF170
 3280 0f22 05       		.byte	0x5
 3281 0f23 B701     		.2byte	0x1b7
 3282 0f25 27       		.uleb128 0x27
 3283 0f26 F9000000 		.4byte	.LASF171
 3284 0f2a F9000000 		.4byte	.LASF171
 3285 0f2e 05       		.byte	0x5
 3286 0f2f B901     		.2byte	0x1b9
 3287 0f31 28       		.uleb128 0x28
 3288 0f32 230B0000 		.4byte	.LASF172
 3289 0f36 230B0000 		.4byte	.LASF172
 3290 0f3a 06       		.byte	0x6
 3291 0f3b E5       		.byte	0xe5
 3292 0f3c 28       		.uleb128 0x28
 3293 0f3d 88050000 		.4byte	.LASF173
 3294 0f41 88050000 		.4byte	.LASF173
 3295 0f45 06       		.byte	0x6
 3296 0f46 E6       		.byte	0xe6
 3297 0f47 27       		.uleb128 0x27
 3298 0f48 CF010000 		.4byte	.LASF174
 3299 0f4c CF010000 		.4byte	.LASF174
 3300 0f50 05       		.byte	0x5
 3301 0f51 C001     		.2byte	0x1c0
 3302 0f53 27       		.uleb128 0x27
 3303 0f54 52020000 		.4byte	.LASF175
 3304 0f58 52020000 		.4byte	.LASF175
 3305 0f5c 05       		.byte	0x5
 3306 0f5d D001     		.2byte	0x1d0
 3307 0f5f 28       		.uleb128 0x28
 3308 0f60 23040000 		.4byte	.LASF176
 3309 0f64 23040000 		.4byte	.LASF176
 3310 0f68 07       		.byte	0x7
 3311 0f69 18       		.byte	0x18
 3312 0f6a 27       		.uleb128 0x27
 3313 0f6b 80090000 		.4byte	.LASF177
 3314 0f6f 80090000 		.4byte	.LASF177
 3315 0f73 05       		.byte	0x5
 3316 0f74 BD01     		.2byte	0x1bd
 3317 0f76 27       		.uleb128 0x27
 3318 0f77 3E000000 		.4byte	.LASF178
 3319 0f7b 3E000000 		.4byte	.LASF178
 3320 0f7f 05       		.byte	0x5
 3321 0f80 DB01     		.2byte	0x1db
 3322 0f82 27       		.uleb128 0x27
 3323 0f83 6F080000 		.4byte	.LASF179
 3324 0f87 6F080000 		.4byte	.LASF179
 3325 0f8b 05       		.byte	0x5
 3326 0f8c C101     		.2byte	0x1c1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 113


 3327 0f8e 28       		.uleb128 0x28
 3328 0f8f 8E030000 		.4byte	.LASF180
 3329 0f93 8E030000 		.4byte	.LASF180
 3330 0f97 06       		.byte	0x6
 3331 0f98 DA       		.byte	0xda
 3332 0f99 00       		.byte	0
 3333              		.section	.debug_abbrev,"",%progbits
 3334              	.Ldebug_abbrev0:
 3335 0000 01       		.uleb128 0x1
 3336 0001 11       		.uleb128 0x11
 3337 0002 01       		.byte	0x1
 3338 0003 25       		.uleb128 0x25
 3339 0004 0E       		.uleb128 0xe
 3340 0005 13       		.uleb128 0x13
 3341 0006 0B       		.uleb128 0xb
 3342 0007 03       		.uleb128 0x3
 3343 0008 0E       		.uleb128 0xe
 3344 0009 1B       		.uleb128 0x1b
 3345 000a 0E       		.uleb128 0xe
 3346 000b 55       		.uleb128 0x55
 3347 000c 17       		.uleb128 0x17
 3348 000d 11       		.uleb128 0x11
 3349 000e 01       		.uleb128 0x1
 3350 000f 10       		.uleb128 0x10
 3351 0010 17       		.uleb128 0x17
 3352 0011 00       		.byte	0
 3353 0012 00       		.byte	0
 3354 0013 02       		.uleb128 0x2
 3355 0014 24       		.uleb128 0x24
 3356 0015 00       		.byte	0
 3357 0016 0B       		.uleb128 0xb
 3358 0017 0B       		.uleb128 0xb
 3359 0018 3E       		.uleb128 0x3e
 3360 0019 0B       		.uleb128 0xb
 3361 001a 03       		.uleb128 0x3
 3362 001b 0E       		.uleb128 0xe
 3363 001c 00       		.byte	0
 3364 001d 00       		.byte	0
 3365 001e 03       		.uleb128 0x3
 3366 001f 24       		.uleb128 0x24
 3367 0020 00       		.byte	0
 3368 0021 0B       		.uleb128 0xb
 3369 0022 0B       		.uleb128 0xb
 3370 0023 3E       		.uleb128 0x3e
 3371 0024 0B       		.uleb128 0xb
 3372 0025 03       		.uleb128 0x3
 3373 0026 08       		.uleb128 0x8
 3374 0027 00       		.byte	0
 3375 0028 00       		.byte	0
 3376 0029 04       		.uleb128 0x4
 3377 002a 16       		.uleb128 0x16
 3378 002b 00       		.byte	0
 3379 002c 03       		.uleb128 0x3
 3380 002d 0E       		.uleb128 0xe
 3381 002e 3A       		.uleb128 0x3a
 3382 002f 0B       		.uleb128 0xb
 3383 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 114


 3384 0031 05       		.uleb128 0x5
 3385 0032 49       		.uleb128 0x49
 3386 0033 13       		.uleb128 0x13
 3387 0034 00       		.byte	0
 3388 0035 00       		.byte	0
 3389 0036 05       		.uleb128 0x5
 3390 0037 35       		.uleb128 0x35
 3391 0038 00       		.byte	0
 3392 0039 49       		.uleb128 0x49
 3393 003a 13       		.uleb128 0x13
 3394 003b 00       		.byte	0
 3395 003c 00       		.byte	0
 3396 003d 06       		.uleb128 0x6
 3397 003e 0F       		.uleb128 0xf
 3398 003f 00       		.byte	0
 3399 0040 0B       		.uleb128 0xb
 3400 0041 0B       		.uleb128 0xb
 3401 0042 49       		.uleb128 0x49
 3402 0043 13       		.uleb128 0x13
 3403 0044 00       		.byte	0
 3404 0045 00       		.byte	0
 3405 0046 07       		.uleb128 0x7
 3406 0047 15       		.uleb128 0x15
 3407 0048 00       		.byte	0
 3408 0049 27       		.uleb128 0x27
 3409 004a 19       		.uleb128 0x19
 3410 004b 00       		.byte	0
 3411 004c 00       		.byte	0
 3412 004d 08       		.uleb128 0x8
 3413 004e 04       		.uleb128 0x4
 3414 004f 01       		.byte	0x1
 3415 0050 0B       		.uleb128 0xb
 3416 0051 0B       		.uleb128 0xb
 3417 0052 49       		.uleb128 0x49
 3418 0053 13       		.uleb128 0x13
 3419 0054 3A       		.uleb128 0x3a
 3420 0055 0B       		.uleb128 0xb
 3421 0056 3B       		.uleb128 0x3b
 3422 0057 0B       		.uleb128 0xb
 3423 0058 01       		.uleb128 0x1
 3424 0059 13       		.uleb128 0x13
 3425 005a 00       		.byte	0
 3426 005b 00       		.byte	0
 3427 005c 09       		.uleb128 0x9
 3428 005d 28       		.uleb128 0x28
 3429 005e 00       		.byte	0
 3430 005f 03       		.uleb128 0x3
 3431 0060 0E       		.uleb128 0xe
 3432 0061 1C       		.uleb128 0x1c
 3433 0062 0B       		.uleb128 0xb
 3434 0063 00       		.byte	0
 3435 0064 00       		.byte	0
 3436 0065 0A       		.uleb128 0xa
 3437 0066 16       		.uleb128 0x16
 3438 0067 00       		.byte	0
 3439 0068 03       		.uleb128 0x3
 3440 0069 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 115


 3441 006a 3A       		.uleb128 0x3a
 3442 006b 0B       		.uleb128 0xb
 3443 006c 3B       		.uleb128 0x3b
 3444 006d 0B       		.uleb128 0xb
 3445 006e 49       		.uleb128 0x49
 3446 006f 13       		.uleb128 0x13
 3447 0070 00       		.byte	0
 3448 0071 00       		.byte	0
 3449 0072 0B       		.uleb128 0xb
 3450 0073 13       		.uleb128 0x13
 3451 0074 01       		.byte	0x1
 3452 0075 0B       		.uleb128 0xb
 3453 0076 0B       		.uleb128 0xb
 3454 0077 3A       		.uleb128 0x3a
 3455 0078 0B       		.uleb128 0xb
 3456 0079 3B       		.uleb128 0x3b
 3457 007a 0B       		.uleb128 0xb
 3458 007b 01       		.uleb128 0x1
 3459 007c 13       		.uleb128 0x13
 3460 007d 00       		.byte	0
 3461 007e 00       		.byte	0
 3462 007f 0C       		.uleb128 0xc
 3463 0080 0D       		.uleb128 0xd
 3464 0081 00       		.byte	0
 3465 0082 03       		.uleb128 0x3
 3466 0083 0E       		.uleb128 0xe
 3467 0084 3A       		.uleb128 0x3a
 3468 0085 0B       		.uleb128 0xb
 3469 0086 3B       		.uleb128 0x3b
 3470 0087 0B       		.uleb128 0xb
 3471 0088 49       		.uleb128 0x49
 3472 0089 13       		.uleb128 0x13
 3473 008a 38       		.uleb128 0x38
 3474 008b 0B       		.uleb128 0xb
 3475 008c 00       		.byte	0
 3476 008d 00       		.byte	0
 3477 008e 0D       		.uleb128 0xd
 3478 008f 01       		.uleb128 0x1
 3479 0090 01       		.byte	0x1
 3480 0091 49       		.uleb128 0x49
 3481 0092 13       		.uleb128 0x13
 3482 0093 01       		.uleb128 0x1
 3483 0094 13       		.uleb128 0x13
 3484 0095 00       		.byte	0
 3485 0096 00       		.byte	0
 3486 0097 0E       		.uleb128 0xe
 3487 0098 21       		.uleb128 0x21
 3488 0099 00       		.byte	0
 3489 009a 49       		.uleb128 0x49
 3490 009b 13       		.uleb128 0x13
 3491 009c 2F       		.uleb128 0x2f
 3492 009d 0B       		.uleb128 0xb
 3493 009e 00       		.byte	0
 3494 009f 00       		.byte	0
 3495 00a0 0F       		.uleb128 0xf
 3496 00a1 13       		.uleb128 0x13
 3497 00a2 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 116


 3498 00a3 0B       		.uleb128 0xb
 3499 00a4 0B       		.uleb128 0xb
 3500 00a5 3A       		.uleb128 0x3a
 3501 00a6 0B       		.uleb128 0xb
 3502 00a7 3B       		.uleb128 0x3b
 3503 00a8 05       		.uleb128 0x5
 3504 00a9 01       		.uleb128 0x1
 3505 00aa 13       		.uleb128 0x13
 3506 00ab 00       		.byte	0
 3507 00ac 00       		.byte	0
 3508 00ad 10       		.uleb128 0x10
 3509 00ae 0D       		.uleb128 0xd
 3510 00af 00       		.byte	0
 3511 00b0 03       		.uleb128 0x3
 3512 00b1 0E       		.uleb128 0xe
 3513 00b2 3A       		.uleb128 0x3a
 3514 00b3 0B       		.uleb128 0xb
 3515 00b4 3B       		.uleb128 0x3b
 3516 00b5 05       		.uleb128 0x5
 3517 00b6 49       		.uleb128 0x49
 3518 00b7 13       		.uleb128 0x13
 3519 00b8 38       		.uleb128 0x38
 3520 00b9 0B       		.uleb128 0xb
 3521 00ba 00       		.byte	0
 3522 00bb 00       		.byte	0
 3523 00bc 11       		.uleb128 0x11
 3524 00bd 0D       		.uleb128 0xd
 3525 00be 00       		.byte	0
 3526 00bf 03       		.uleb128 0x3
 3527 00c0 08       		.uleb128 0x8
 3528 00c1 3A       		.uleb128 0x3a
 3529 00c2 0B       		.uleb128 0xb
 3530 00c3 3B       		.uleb128 0x3b
 3531 00c4 05       		.uleb128 0x5
 3532 00c5 49       		.uleb128 0x49
 3533 00c6 13       		.uleb128 0x13
 3534 00c7 38       		.uleb128 0x38
 3535 00c8 0B       		.uleb128 0xb
 3536 00c9 00       		.byte	0
 3537 00ca 00       		.byte	0
 3538 00cb 12       		.uleb128 0x12
 3539 00cc 13       		.uleb128 0x13
 3540 00cd 01       		.byte	0x1
 3541 00ce 0B       		.uleb128 0xb
 3542 00cf 05       		.uleb128 0x5
 3543 00d0 3A       		.uleb128 0x3a
 3544 00d1 0B       		.uleb128 0xb
 3545 00d2 3B       		.uleb128 0x3b
 3546 00d3 05       		.uleb128 0x5
 3547 00d4 01       		.uleb128 0x1
 3548 00d5 13       		.uleb128 0x13
 3549 00d6 00       		.byte	0
 3550 00d7 00       		.byte	0
 3551 00d8 13       		.uleb128 0x13
 3552 00d9 0D       		.uleb128 0xd
 3553 00da 00       		.byte	0
 3554 00db 03       		.uleb128 0x3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 117


 3555 00dc 0E       		.uleb128 0xe
 3556 00dd 3A       		.uleb128 0x3a
 3557 00de 0B       		.uleb128 0xb
 3558 00df 3B       		.uleb128 0x3b
 3559 00e0 05       		.uleb128 0x5
 3560 00e1 49       		.uleb128 0x49
 3561 00e2 13       		.uleb128 0x13
 3562 00e3 38       		.uleb128 0x38
 3563 00e4 05       		.uleb128 0x5
 3564 00e5 00       		.byte	0
 3565 00e6 00       		.byte	0
 3566 00e7 14       		.uleb128 0x14
 3567 00e8 26       		.uleb128 0x26
 3568 00e9 00       		.byte	0
 3569 00ea 00       		.byte	0
 3570 00eb 00       		.byte	0
 3571 00ec 15       		.uleb128 0x15
 3572 00ed 0F       		.uleb128 0xf
 3573 00ee 00       		.byte	0
 3574 00ef 0B       		.uleb128 0xb
 3575 00f0 0B       		.uleb128 0xb
 3576 00f1 00       		.byte	0
 3577 00f2 00       		.byte	0
 3578 00f3 16       		.uleb128 0x16
 3579 00f4 2E       		.uleb128 0x2e
 3580 00f5 01       		.byte	0x1
 3581 00f6 03       		.uleb128 0x3
 3582 00f7 0E       		.uleb128 0xe
 3583 00f8 3A       		.uleb128 0x3a
 3584 00f9 0B       		.uleb128 0xb
 3585 00fa 3B       		.uleb128 0x3b
 3586 00fb 05       		.uleb128 0x5
 3587 00fc 27       		.uleb128 0x27
 3588 00fd 19       		.uleb128 0x19
 3589 00fe 11       		.uleb128 0x11
 3590 00ff 01       		.uleb128 0x1
 3591 0100 12       		.uleb128 0x12
 3592 0101 06       		.uleb128 0x6
 3593 0102 40       		.uleb128 0x40
 3594 0103 18       		.uleb128 0x18
 3595 0104 9742     		.uleb128 0x2117
 3596 0106 19       		.uleb128 0x19
 3597 0107 01       		.uleb128 0x1
 3598 0108 13       		.uleb128 0x13
 3599 0109 00       		.byte	0
 3600 010a 00       		.byte	0
 3601 010b 17       		.uleb128 0x17
 3602 010c 05       		.uleb128 0x5
 3603 010d 00       		.byte	0
 3604 010e 03       		.uleb128 0x3
 3605 010f 0E       		.uleb128 0xe
 3606 0110 3A       		.uleb128 0x3a
 3607 0111 0B       		.uleb128 0xb
 3608 0112 3B       		.uleb128 0x3b
 3609 0113 05       		.uleb128 0x5
 3610 0114 49       		.uleb128 0x49
 3611 0115 13       		.uleb128 0x13
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 118


 3612 0116 02       		.uleb128 0x2
 3613 0117 18       		.uleb128 0x18
 3614 0118 00       		.byte	0
 3615 0119 00       		.byte	0
 3616 011a 18       		.uleb128 0x18
 3617 011b 34       		.uleb128 0x34
 3618 011c 00       		.byte	0
 3619 011d 03       		.uleb128 0x3
 3620 011e 0E       		.uleb128 0xe
 3621 011f 3A       		.uleb128 0x3a
 3622 0120 0B       		.uleb128 0xb
 3623 0121 3B       		.uleb128 0x3b
 3624 0122 05       		.uleb128 0x5
 3625 0123 49       		.uleb128 0x49
 3626 0124 13       		.uleb128 0x13
 3627 0125 1C       		.uleb128 0x1c
 3628 0126 0B       		.uleb128 0xb
 3629 0127 00       		.byte	0
 3630 0128 00       		.byte	0
 3631 0129 19       		.uleb128 0x19
 3632 012a 34       		.uleb128 0x34
 3633 012b 00       		.byte	0
 3634 012c 03       		.uleb128 0x3
 3635 012d 0E       		.uleb128 0xe
 3636 012e 3A       		.uleb128 0x3a
 3637 012f 0B       		.uleb128 0xb
 3638 0130 3B       		.uleb128 0x3b
 3639 0131 05       		.uleb128 0x5
 3640 0132 49       		.uleb128 0x49
 3641 0133 13       		.uleb128 0x13
 3642 0134 02       		.uleb128 0x2
 3643 0135 17       		.uleb128 0x17
 3644 0136 00       		.byte	0
 3645 0137 00       		.byte	0
 3646 0138 1A       		.uleb128 0x1a
 3647 0139 898201   		.uleb128 0x4109
 3648 013c 00       		.byte	0
 3649 013d 11       		.uleb128 0x11
 3650 013e 01       		.uleb128 0x1
 3651 013f 31       		.uleb128 0x31
 3652 0140 13       		.uleb128 0x13
 3653 0141 00       		.byte	0
 3654 0142 00       		.byte	0
 3655 0143 1B       		.uleb128 0x1b
 3656 0144 2E       		.uleb128 0x2e
 3657 0145 00       		.byte	0
 3658 0146 3F       		.uleb128 0x3f
 3659 0147 19       		.uleb128 0x19
 3660 0148 03       		.uleb128 0x3
 3661 0149 0E       		.uleb128 0xe
 3662 014a 3A       		.uleb128 0x3a
 3663 014b 0B       		.uleb128 0xb
 3664 014c 3B       		.uleb128 0x3b
 3665 014d 0B       		.uleb128 0xb
 3666 014e 27       		.uleb128 0x27
 3667 014f 19       		.uleb128 0x19
 3668 0150 49       		.uleb128 0x49
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 119


 3669 0151 13       		.uleb128 0x13
 3670 0152 11       		.uleb128 0x11
 3671 0153 01       		.uleb128 0x1
 3672 0154 12       		.uleb128 0x12
 3673 0155 06       		.uleb128 0x6
 3674 0156 40       		.uleb128 0x40
 3675 0157 18       		.uleb128 0x18
 3676 0158 9742     		.uleb128 0x2117
 3677 015a 19       		.uleb128 0x19
 3678 015b 00       		.byte	0
 3679 015c 00       		.byte	0
 3680 015d 1C       		.uleb128 0x1c
 3681 015e 2E       		.uleb128 0x2e
 3682 015f 01       		.byte	0x1
 3683 0160 3F       		.uleb128 0x3f
 3684 0161 19       		.uleb128 0x19
 3685 0162 03       		.uleb128 0x3
 3686 0163 0E       		.uleb128 0xe
 3687 0164 3A       		.uleb128 0x3a
 3688 0165 0B       		.uleb128 0xb
 3689 0166 3B       		.uleb128 0x3b
 3690 0167 05       		.uleb128 0x5
 3691 0168 27       		.uleb128 0x27
 3692 0169 19       		.uleb128 0x19
 3693 016a 49       		.uleb128 0x49
 3694 016b 13       		.uleb128 0x13
 3695 016c 11       		.uleb128 0x11
 3696 016d 01       		.uleb128 0x1
 3697 016e 12       		.uleb128 0x12
 3698 016f 06       		.uleb128 0x6
 3699 0170 40       		.uleb128 0x40
 3700 0171 18       		.uleb128 0x18
 3701 0172 9742     		.uleb128 0x2117
 3702 0174 19       		.uleb128 0x19
 3703 0175 01       		.uleb128 0x1
 3704 0176 13       		.uleb128 0x13
 3705 0177 00       		.byte	0
 3706 0178 00       		.byte	0
 3707 0179 1D       		.uleb128 0x1d
 3708 017a 05       		.uleb128 0x5
 3709 017b 00       		.byte	0
 3710 017c 03       		.uleb128 0x3
 3711 017d 0E       		.uleb128 0xe
 3712 017e 3A       		.uleb128 0x3a
 3713 017f 0B       		.uleb128 0xb
 3714 0180 3B       		.uleb128 0x3b
 3715 0181 05       		.uleb128 0x5
 3716 0182 49       		.uleb128 0x49
 3717 0183 13       		.uleb128 0x13
 3718 0184 02       		.uleb128 0x2
 3719 0185 17       		.uleb128 0x17
 3720 0186 00       		.byte	0
 3721 0187 00       		.byte	0
 3722 0188 1E       		.uleb128 0x1e
 3723 0189 898201   		.uleb128 0x4109
 3724 018c 01       		.byte	0x1
 3725 018d 11       		.uleb128 0x11
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 120


 3726 018e 01       		.uleb128 0x1
 3727 018f 31       		.uleb128 0x31
 3728 0190 13       		.uleb128 0x13
 3729 0191 01       		.uleb128 0x1
 3730 0192 13       		.uleb128 0x13
 3731 0193 00       		.byte	0
 3732 0194 00       		.byte	0
 3733 0195 1F       		.uleb128 0x1f
 3734 0196 8A8201   		.uleb128 0x410a
 3735 0199 00       		.byte	0
 3736 019a 02       		.uleb128 0x2
 3737 019b 18       		.uleb128 0x18
 3738 019c 9142     		.uleb128 0x2111
 3739 019e 18       		.uleb128 0x18
 3740 019f 00       		.byte	0
 3741 01a0 00       		.byte	0
 3742 01a1 20       		.uleb128 0x20
 3743 01a2 2E       		.uleb128 0x2e
 3744 01a3 01       		.byte	0x1
 3745 01a4 3F       		.uleb128 0x3f
 3746 01a5 19       		.uleb128 0x19
 3747 01a6 03       		.uleb128 0x3
 3748 01a7 0E       		.uleb128 0xe
 3749 01a8 3A       		.uleb128 0x3a
 3750 01a9 0B       		.uleb128 0xb
 3751 01aa 3B       		.uleb128 0x3b
 3752 01ab 05       		.uleb128 0x5
 3753 01ac 27       		.uleb128 0x27
 3754 01ad 19       		.uleb128 0x19
 3755 01ae 11       		.uleb128 0x11
 3756 01af 01       		.uleb128 0x1
 3757 01b0 12       		.uleb128 0x12
 3758 01b1 06       		.uleb128 0x6
 3759 01b2 40       		.uleb128 0x40
 3760 01b3 18       		.uleb128 0x18
 3761 01b4 9742     		.uleb128 0x2117
 3762 01b6 19       		.uleb128 0x19
 3763 01b7 01       		.uleb128 0x1
 3764 01b8 13       		.uleb128 0x13
 3765 01b9 00       		.byte	0
 3766 01ba 00       		.byte	0
 3767 01bb 21       		.uleb128 0x21
 3768 01bc 898201   		.uleb128 0x4109
 3769 01bf 01       		.byte	0x1
 3770 01c0 11       		.uleb128 0x11
 3771 01c1 01       		.uleb128 0x1
 3772 01c2 31       		.uleb128 0x31
 3773 01c3 13       		.uleb128 0x13
 3774 01c4 00       		.byte	0
 3775 01c5 00       		.byte	0
 3776 01c6 22       		.uleb128 0x22
 3777 01c7 26       		.uleb128 0x26
 3778 01c8 00       		.byte	0
 3779 01c9 49       		.uleb128 0x49
 3780 01ca 13       		.uleb128 0x13
 3781 01cb 00       		.byte	0
 3782 01cc 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 121


 3783 01cd 23       		.uleb128 0x23
 3784 01ce 34       		.uleb128 0x34
 3785 01cf 00       		.byte	0
 3786 01d0 03       		.uleb128 0x3
 3787 01d1 0E       		.uleb128 0xe
 3788 01d2 3A       		.uleb128 0x3a
 3789 01d3 0B       		.uleb128 0xb
 3790 01d4 3B       		.uleb128 0x3b
 3791 01d5 05       		.uleb128 0x5
 3792 01d6 49       		.uleb128 0x49
 3793 01d7 13       		.uleb128 0x13
 3794 01d8 00       		.byte	0
 3795 01d9 00       		.byte	0
 3796 01da 24       		.uleb128 0x24
 3797 01db 34       		.uleb128 0x34
 3798 01dc 00       		.byte	0
 3799 01dd 03       		.uleb128 0x3
 3800 01de 0E       		.uleb128 0xe
 3801 01df 3A       		.uleb128 0x3a
 3802 01e0 0B       		.uleb128 0xb
 3803 01e1 3B       		.uleb128 0x3b
 3804 01e2 05       		.uleb128 0x5
 3805 01e3 49       		.uleb128 0x49
 3806 01e4 13       		.uleb128 0x13
 3807 01e5 02       		.uleb128 0x2
 3808 01e6 18       		.uleb128 0x18
 3809 01e7 00       		.byte	0
 3810 01e8 00       		.byte	0
 3811 01e9 25       		.uleb128 0x25
 3812 01ea 34       		.uleb128 0x34
 3813 01eb 00       		.byte	0
 3814 01ec 03       		.uleb128 0x3
 3815 01ed 0E       		.uleb128 0xe
 3816 01ee 3A       		.uleb128 0x3a
 3817 01ef 0B       		.uleb128 0xb
 3818 01f0 3B       		.uleb128 0x3b
 3819 01f1 05       		.uleb128 0x5
 3820 01f2 49       		.uleb128 0x49
 3821 01f3 13       		.uleb128 0x13
 3822 01f4 3F       		.uleb128 0x3f
 3823 01f5 19       		.uleb128 0x19
 3824 01f6 3C       		.uleb128 0x3c
 3825 01f7 19       		.uleb128 0x19
 3826 01f8 00       		.byte	0
 3827 01f9 00       		.byte	0
 3828 01fa 26       		.uleb128 0x26
 3829 01fb 34       		.uleb128 0x34
 3830 01fc 00       		.byte	0
 3831 01fd 03       		.uleb128 0x3
 3832 01fe 0E       		.uleb128 0xe
 3833 01ff 3A       		.uleb128 0x3a
 3834 0200 0B       		.uleb128 0xb
 3835 0201 3B       		.uleb128 0x3b
 3836 0202 0B       		.uleb128 0xb
 3837 0203 49       		.uleb128 0x49
 3838 0204 13       		.uleb128 0x13
 3839 0205 3F       		.uleb128 0x3f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 122


 3840 0206 19       		.uleb128 0x19
 3841 0207 02       		.uleb128 0x2
 3842 0208 18       		.uleb128 0x18
 3843 0209 00       		.byte	0
 3844 020a 00       		.byte	0
 3845 020b 27       		.uleb128 0x27
 3846 020c 2E       		.uleb128 0x2e
 3847 020d 00       		.byte	0
 3848 020e 3F       		.uleb128 0x3f
 3849 020f 19       		.uleb128 0x19
 3850 0210 3C       		.uleb128 0x3c
 3851 0211 19       		.uleb128 0x19
 3852 0212 6E       		.uleb128 0x6e
 3853 0213 0E       		.uleb128 0xe
 3854 0214 03       		.uleb128 0x3
 3855 0215 0E       		.uleb128 0xe
 3856 0216 3A       		.uleb128 0x3a
 3857 0217 0B       		.uleb128 0xb
 3858 0218 3B       		.uleb128 0x3b
 3859 0219 05       		.uleb128 0x5
 3860 021a 00       		.byte	0
 3861 021b 00       		.byte	0
 3862 021c 28       		.uleb128 0x28
 3863 021d 2E       		.uleb128 0x2e
 3864 021e 00       		.byte	0
 3865 021f 3F       		.uleb128 0x3f
 3866 0220 19       		.uleb128 0x19
 3867 0221 3C       		.uleb128 0x3c
 3868 0222 19       		.uleb128 0x19
 3869 0223 6E       		.uleb128 0x6e
 3870 0224 0E       		.uleb128 0xe
 3871 0225 03       		.uleb128 0x3
 3872 0226 0E       		.uleb128 0xe
 3873 0227 3A       		.uleb128 0x3a
 3874 0228 0B       		.uleb128 0xb
 3875 0229 3B       		.uleb128 0x3b
 3876 022a 0B       		.uleb128 0xb
 3877 022b 00       		.byte	0
 3878 022c 00       		.byte	0
 3879 022d 00       		.byte	0
 3880              		.section	.debug_loc,"",%progbits
 3881              	.Ldebug_loc0:
 3882              	.LLST0:
 3883 0000 06000000 		.4byte	.LVL1
 3884 0004 19000000 		.4byte	.LVL5-1
 3885 0008 0100     		.2byte	0x1
 3886 000a 53       		.byte	0x53
 3887 000b 00000000 		.4byte	0
 3888 000f 00000000 		.4byte	0
 3889              	.LLST1:
 3890 0013 00000000 		.4byte	.LVL6
 3891 0017 37000000 		.4byte	.LVL8-1
 3892 001b 0100     		.2byte	0x1
 3893 001d 50       		.byte	0x50
 3894 001e 37000000 		.4byte	.LVL8-1
 3895 0022 40000000 		.4byte	.LFE2
 3896 0026 0400     		.2byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 123


 3897 0028 F3       		.byte	0xf3
 3898 0029 01       		.uleb128 0x1
 3899 002a 50       		.byte	0x50
 3900 002b 9F       		.byte	0x9f
 3901 002c 00000000 		.4byte	0
 3902 0030 00000000 		.4byte	0
 3903              	.LLST2:
 3904 0034 30000000 		.4byte	.LVL7
 3905 0038 3A000000 		.4byte	.LVL9
 3906 003c 0100     		.2byte	0x1
 3907 003e 54       		.byte	0x54
 3908 003f 3A000000 		.4byte	.LVL9
 3909 0043 40000000 		.4byte	.LFE2
 3910 0047 0100     		.2byte	0x1
 3911 0049 50       		.byte	0x50
 3912 004a 00000000 		.4byte	0
 3913 004e 00000000 		.4byte	0
 3914              	.LLST3:
 3915 0052 02000000 		.4byte	.LVL10
 3916 0056 22000000 		.4byte	.LVL12
 3917 005a 0200     		.2byte	0x2
 3918 005c 30       		.byte	0x30
 3919 005d 9F       		.byte	0x9f
 3920 005e 22000000 		.4byte	.LVL12
 3921 0062 2C000000 		.4byte	.LFE3
 3922 0066 0100     		.2byte	0x1
 3923 0068 50       		.byte	0x50
 3924 0069 00000000 		.4byte	0
 3925 006d 00000000 		.4byte	0
 3926              	.LLST4:
 3927 0071 02000000 		.4byte	.LVL13
 3928 0075 12000000 		.4byte	.LVL14
 3929 0079 0300     		.2byte	0x3
 3930 007b 09       		.byte	0x9
 3931 007c FF       		.byte	0xff
 3932 007d 9F       		.byte	0x9f
 3933 007e 12000000 		.4byte	.LVL14
 3934 0082 14000000 		.4byte	.LVL15
 3935 0086 0100     		.2byte	0x1
 3936 0088 50       		.byte	0x50
 3937 0089 18000000 		.4byte	.LVL16
 3938 008d 31000000 		.4byte	.LVL17-1
 3939 0091 0100     		.2byte	0x1
 3940 0093 50       		.byte	0x50
 3941 0094 32000000 		.4byte	.LVL17
 3942 0098 3C000000 		.4byte	.LVL19
 3943 009c 0100     		.2byte	0x1
 3944 009e 50       		.byte	0x50
 3945 009f 3C000000 		.4byte	.LVL19
 3946 00a3 3E000000 		.4byte	.LVL20
 3947 00a7 0300     		.2byte	0x3
 3948 00a9 09       		.byte	0x9
 3949 00aa FF       		.byte	0xff
 3950 00ab 9F       		.byte	0x9f
 3951 00ac 3E000000 		.4byte	.LVL20
 3952 00b0 48000000 		.4byte	.LFE4
 3953 00b4 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 124


 3954 00b6 50       		.byte	0x50
 3955 00b7 00000000 		.4byte	0
 3956 00bb 00000000 		.4byte	0
 3957              	.LLST5:
 3958 00bf 12000000 		.4byte	.LVL14
 3959 00c3 3C000000 		.4byte	.LVL19
 3960 00c7 0100     		.2byte	0x1
 3961 00c9 54       		.byte	0x54
 3962 00ca 00000000 		.4byte	0
 3963 00ce 00000000 		.4byte	0
 3964              	.LLST6:
 3965 00d2 00000000 		.4byte	.LVL21
 3966 00d6 08000000 		.4byte	.LVL22
 3967 00da 0100     		.2byte	0x1
 3968 00dc 50       		.byte	0x50
 3969 00dd 08000000 		.4byte	.LVL22
 3970 00e1 A0000000 		.4byte	.LFE6
 3971 00e5 0400     		.2byte	0x4
 3972 00e7 F3       		.byte	0xf3
 3973 00e8 01       		.uleb128 0x1
 3974 00e9 50       		.byte	0x50
 3975 00ea 9F       		.byte	0x9f
 3976 00eb 00000000 		.4byte	0
 3977 00ef 00000000 		.4byte	0
 3978              	.LLST7:
 3979 00f3 00000000 		.4byte	.LVL21
 3980 00f7 12000000 		.4byte	.LVL24
 3981 00fb 0100     		.2byte	0x1
 3982 00fd 51       		.byte	0x51
 3983 00fe 12000000 		.4byte	.LVL24
 3984 0102 A0000000 		.4byte	.LFE6
 3985 0106 0400     		.2byte	0x4
 3986 0108 F3       		.byte	0xf3
 3987 0109 01       		.uleb128 0x1
 3988 010a 51       		.byte	0x51
 3989 010b 9F       		.byte	0x9f
 3990 010c 00000000 		.4byte	0
 3991 0110 00000000 		.4byte	0
 3992              	.LLST8:
 3993 0114 00000000 		.4byte	.LVL21
 3994 0118 0C000000 		.4byte	.LVL23
 3995 011c 0100     		.2byte	0x1
 3996 011e 52       		.byte	0x52
 3997 011f 0C000000 		.4byte	.LVL23
 3998 0123 98000000 		.4byte	.LVL38
 3999 0127 0100     		.2byte	0x1
 4000 0129 56       		.byte	0x56
 4001 012a 98000000 		.4byte	.LVL38
 4002 012e A0000000 		.4byte	.LFE6
 4003 0132 0400     		.2byte	0x4
 4004 0134 F3       		.byte	0xf3
 4005 0135 01       		.uleb128 0x1
 4006 0136 52       		.byte	0x52
 4007 0137 9F       		.byte	0x9f
 4008 0138 00000000 		.4byte	0
 4009 013c 00000000 		.4byte	0
 4010              	.LLST9:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 125


 4011 0140 16000000 		.4byte	.LVL25
 4012 0144 1A000000 		.4byte	.LVL26
 4013 0148 0200     		.2byte	0x2
 4014 014a 30       		.byte	0x30
 4015 014b 9F       		.byte	0x9f
 4016 014c 1A000000 		.4byte	.LVL26
 4017 0150 98000000 		.4byte	.LVL37
 4018 0154 0100     		.2byte	0x1
 4019 0156 55       		.byte	0x55
 4020 0157 00000000 		.4byte	0
 4021 015b 00000000 		.4byte	0
 4022              	.LLST10:
 4023 015f 1E000000 		.4byte	.LVL27
 4024 0163 3D000000 		.4byte	.LVL28-1
 4025 0167 0100     		.2byte	0x1
 4026 0169 50       		.byte	0x50
 4027 016a 50000000 		.4byte	.LVL29
 4028 016e 6F000000 		.4byte	.LVL30-1
 4029 0172 0100     		.2byte	0x1
 4030 0174 50       		.byte	0x50
 4031 0175 76000000 		.4byte	.LVL31
 4032 0179 87000000 		.4byte	.LVL32-1
 4033 017d 0100     		.2byte	0x1
 4034 017f 50       		.byte	0x50
 4035 0180 00000000 		.4byte	0
 4036 0184 00000000 		.4byte	0
 4037              	.LLST11:
 4038 0188 16000000 		.4byte	.LVL25
 4039 018c 98000000 		.4byte	.LVL36
 4040 0190 0100     		.2byte	0x1
 4041 0192 54       		.byte	0x54
 4042 0193 00000000 		.4byte	0
 4043 0197 00000000 		.4byte	0
 4044              	.LLST12:
 4045 019b 00000000 		.4byte	.LVL39
 4046 019f 13000000 		.4byte	.LVL40-1
 4047 01a3 0100     		.2byte	0x1
 4048 01a5 50       		.byte	0x50
 4049 01a6 13000000 		.4byte	.LVL40-1
 4050 01aa 3C000000 		.4byte	.LFE8
 4051 01ae 0400     		.2byte	0x4
 4052 01b0 F3       		.byte	0xf3
 4053 01b1 01       		.uleb128 0x1
 4054 01b2 50       		.byte	0x50
 4055 01b3 9F       		.byte	0x9f
 4056 01b4 00000000 		.4byte	0
 4057 01b8 00000000 		.4byte	0
 4058              	.LLST13:
 4059 01bc 08000000 		.4byte	.LVL43
 4060 01c0 40000000 		.4byte	.LFE9
 4061 01c4 0100     		.2byte	0x1
 4062 01c6 53       		.byte	0x53
 4063 01c7 00000000 		.4byte	0
 4064 01cb 00000000 		.4byte	0
 4065              	.LLST14:
 4066 01cf 02000000 		.4byte	.LVL42
 4067 01d3 08000000 		.4byte	.LVL43
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 126


 4068 01d7 0200     		.2byte	0x2
 4069 01d9 30       		.byte	0x30
 4070 01da 9F       		.byte	0x9f
 4071 01db 08000000 		.4byte	.LVL43
 4072 01df 40000000 		.4byte	.LFE9
 4073 01e3 0100     		.2byte	0x1
 4074 01e5 50       		.byte	0x50
 4075 01e6 00000000 		.4byte	0
 4076 01ea 00000000 		.4byte	0
 4077              	.LLST15:
 4078 01ee 0C000000 		.4byte	.LVL44
 4079 01f2 1E000000 		.4byte	.LVL47
 4080 01f6 0100     		.2byte	0x1
 4081 01f8 52       		.byte	0x52
 4082 01f9 20000000 		.4byte	.LVL48
 4083 01fd 26000000 		.4byte	.LVL49
 4084 0201 0100     		.2byte	0x1
 4085 0203 51       		.byte	0x51
 4086 0204 26000000 		.4byte	.LVL49
 4087 0208 36000000 		.4byte	.LVL53
 4088 020c 0100     		.2byte	0x1
 4089 020e 52       		.byte	0x52
 4090 020f 00000000 		.4byte	0
 4091 0213 00000000 		.4byte	0
 4092              	.LLST16:
 4093 0217 16000000 		.4byte	.LVL55
 4094 021b 29000000 		.4byte	.LVL56-1
 4095 021f 0100     		.2byte	0x1
 4096 0221 50       		.byte	0x50
 4097 0222 29000000 		.4byte	.LVL56-1
 4098 0226 2C000000 		.4byte	.LVL57
 4099 022a 0100     		.2byte	0x1
 4100 022c 54       		.byte	0x54
 4101 022d 2C000000 		.4byte	.LVL57
 4102 0231 54000000 		.4byte	.LVL58
 4103 0235 0100     		.2byte	0x1
 4104 0237 50       		.byte	0x50
 4105 0238 54000000 		.4byte	.LVL58
 4106 023c 58000000 		.4byte	.LVL59
 4107 0240 0200     		.2byte	0x2
 4108 0242 30       		.byte	0x30
 4109 0243 9F       		.byte	0x9f
 4110 0244 58000000 		.4byte	.LVL59
 4111 0248 6A000000 		.4byte	.LVL60
 4112 024c 0100     		.2byte	0x1
 4113 024e 50       		.byte	0x50
 4114 024f 6A000000 		.4byte	.LVL60
 4115 0253 6E000000 		.4byte	.LVL61
 4116 0257 0100     		.2byte	0x1
 4117 0259 54       		.byte	0x54
 4118 025a 00000000 		.4byte	0
 4119 025e 00000000 		.4byte	0
 4120              	.LLST17:
 4121 0262 00000000 		.4byte	.LVL62
 4122 0266 05000000 		.4byte	.LVL63-1
 4123 026a 0100     		.2byte	0x1
 4124 026c 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 127


 4125 026d 05000000 		.4byte	.LVL63-1
 4126 0271 08000000 		.4byte	.LFE11
 4127 0275 0400     		.2byte	0x4
 4128 0277 F3       		.byte	0xf3
 4129 0278 01       		.uleb128 0x1
 4130 0279 50       		.byte	0x50
 4131 027a 9F       		.byte	0x9f
 4132 027b 00000000 		.4byte	0
 4133 027f 00000000 		.4byte	0
 4134              	.LLST18:
 4135 0283 00000000 		.4byte	.LVL64
 4136 0287 08000000 		.4byte	.LVL65
 4137 028b 0100     		.2byte	0x1
 4138 028d 50       		.byte	0x50
 4139 028e 08000000 		.4byte	.LVL65
 4140 0292 0A000000 		.4byte	.LVL66
 4141 0296 0300     		.2byte	0x3
 4142 0298 70       		.byte	0x70
 4143 0299 01       		.sleb128 1
 4144 029a 9F       		.byte	0x9f
 4145 029b 0A000000 		.4byte	.LVL66
 4146 029f 30000000 		.4byte	.LFE12
 4147 02a3 0400     		.2byte	0x4
 4148 02a5 F3       		.byte	0xf3
 4149 02a6 01       		.uleb128 0x1
 4150 02a7 50       		.byte	0x50
 4151 02a8 9F       		.byte	0x9f
 4152 02a9 00000000 		.4byte	0
 4153 02ad 00000000 		.4byte	0
 4154              	.LLST19:
 4155 02b1 00000000 		.4byte	.LVL67
 4156 02b5 0A000000 		.4byte	.LVL71
 4157 02b9 0100     		.2byte	0x1
 4158 02bb 50       		.byte	0x50
 4159 02bc 0A000000 		.4byte	.LVL71
 4160 02c0 0C000000 		.4byte	.LVL72
 4161 02c4 0300     		.2byte	0x3
 4162 02c6 70       		.byte	0x70
 4163 02c7 01       		.sleb128 1
 4164 02c8 9F       		.byte	0x9f
 4165 02c9 0C000000 		.4byte	.LVL72
 4166 02cd 14000000 		.4byte	.LFE13
 4167 02d1 0400     		.2byte	0x4
 4168 02d3 F3       		.byte	0xf3
 4169 02d4 01       		.uleb128 0x1
 4170 02d5 50       		.byte	0x50
 4171 02d6 9F       		.byte	0x9f
 4172 02d7 00000000 		.4byte	0
 4173 02db 00000000 		.4byte	0
 4174              	.LLST20:
 4175 02df 04000000 		.4byte	.LVL68
 4176 02e3 06000000 		.4byte	.LVL69
 4177 02e7 0100     		.2byte	0x1
 4178 02e9 53       		.byte	0x53
 4179 02ea 08000000 		.4byte	.LVL70
 4180 02ee 0C000000 		.4byte	.LVL72
 4181 02f2 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 128


 4182 02f4 53       		.byte	0x53
 4183 02f5 0C000000 		.4byte	.LVL72
 4184 02f9 14000000 		.4byte	.LFE13
 4185 02fd 0100     		.2byte	0x1
 4186 02ff 50       		.byte	0x50
 4187 0300 00000000 		.4byte	0
 4188 0304 00000000 		.4byte	0
 4189              	.LLST21:
 4190 0308 00000000 		.4byte	.LVL73
 4191 030c 06000000 		.4byte	.LVL74
 4192 0310 0100     		.2byte	0x1
 4193 0312 50       		.byte	0x50
 4194 0313 06000000 		.4byte	.LVL74
 4195 0317 10000000 		.4byte	.LVL77
 4196 031b 0100     		.2byte	0x1
 4197 031d 54       		.byte	0x54
 4198 031e 10000000 		.4byte	.LVL77
 4199 0322 12000000 		.4byte	.LFE14
 4200 0326 0400     		.2byte	0x4
 4201 0328 F3       		.byte	0xf3
 4202 0329 01       		.uleb128 0x1
 4203 032a 50       		.byte	0x50
 4204 032b 9F       		.byte	0x9f
 4205 032c 00000000 		.4byte	0
 4206 0330 00000000 		.4byte	0
 4207              	.LLST22:
 4208 0334 00000000 		.4byte	.LVL73
 4209 0338 09000000 		.4byte	.LVL75-1
 4210 033c 0100     		.2byte	0x1
 4211 033e 51       		.byte	0x51
 4212 033f 09000000 		.4byte	.LVL75-1
 4213 0343 12000000 		.4byte	.LFE14
 4214 0347 0400     		.2byte	0x4
 4215 0349 F3       		.byte	0xf3
 4216 034a 01       		.uleb128 0x1
 4217 034b 51       		.byte	0x51
 4218 034c 9F       		.byte	0x9f
 4219 034d 00000000 		.4byte	0
 4220 0351 00000000 		.4byte	0
 4221              	.LLST23:
 4222 0355 00000000 		.4byte	.LVL78
 4223 0359 0A000000 		.4byte	.LVL80
 4224 035d 0100     		.2byte	0x1
 4225 035f 50       		.byte	0x50
 4226 0360 0A000000 		.4byte	.LVL80
 4227 0364 0C000000 		.4byte	.LVL81
 4228 0368 0100     		.2byte	0x1
 4229 036a 53       		.byte	0x53
 4230 036b 0C000000 		.4byte	.LVL81
 4231 036f 0E000000 		.4byte	.LVL82
 4232 0373 0100     		.2byte	0x1
 4233 0375 50       		.byte	0x50
 4234 0376 0E000000 		.4byte	.LVL82
 4235 037a 19000000 		.4byte	.LVL84-1
 4236 037e 0100     		.2byte	0x1
 4237 0380 53       		.byte	0x53
 4238 0381 19000000 		.4byte	.LVL84-1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 129


 4239 0385 1C000000 		.4byte	.LFE15
 4240 0389 0400     		.2byte	0x4
 4241 038b F3       		.byte	0xf3
 4242 038c 01       		.uleb128 0x1
 4243 038d 50       		.byte	0x50
 4244 038e 9F       		.byte	0x9f
 4245 038f 00000000 		.4byte	0
 4246 0393 00000000 		.4byte	0
 4247              	.LLST24:
 4248 0397 04000000 		.4byte	.LVL79
 4249 039b 0E000000 		.4byte	.LVL82
 4250 039f 0200     		.2byte	0x2
 4251 03a1 30       		.byte	0x30
 4252 03a2 9F       		.byte	0x9f
 4253 03a3 0E000000 		.4byte	.LVL82
 4254 03a7 16000000 		.4byte	.LVL83
 4255 03ab 0100     		.2byte	0x1
 4256 03ad 50       		.byte	0x50
 4257 03ae 1A000000 		.4byte	.LVL84
 4258 03b2 1C000000 		.4byte	.LFE15
 4259 03b6 0100     		.2byte	0x1
 4260 03b8 50       		.byte	0x50
 4261 03b9 00000000 		.4byte	0
 4262 03bd 00000000 		.4byte	0
 4263              	.LLST25:
 4264 03c1 02000000 		.4byte	.LVL85
 4265 03c5 08000000 		.4byte	.LVL86
 4266 03c9 0200     		.2byte	0x2
 4267 03cb 30       		.byte	0x30
 4268 03cc 9F       		.byte	0x9f
 4269 03cd 08000000 		.4byte	.LVL86
 4270 03d1 18000000 		.4byte	.LVL91
 4271 03d5 0100     		.2byte	0x1
 4272 03d7 55       		.byte	0x55
 4273 03d8 18000000 		.4byte	.LVL91
 4274 03dc 1A000000 		.4byte	.LFE16
 4275 03e0 0100     		.2byte	0x1
 4276 03e2 50       		.byte	0x50
 4277 03e3 00000000 		.4byte	0
 4278 03e7 00000000 		.4byte	0
 4279              	.LLST26:
 4280 03eb 02000000 		.4byte	.LVL85
 4281 03ef 08000000 		.4byte	.LVL86
 4282 03f3 0200     		.2byte	0x2
 4283 03f5 30       		.byte	0x30
 4284 03f6 9F       		.byte	0x9f
 4285 03f7 08000000 		.4byte	.LVL86
 4286 03fb 18000000 		.4byte	.LVL90
 4287 03ff 0100     		.2byte	0x1
 4288 0401 54       		.byte	0x54
 4289 0402 00000000 		.4byte	0
 4290 0406 00000000 		.4byte	0
 4291              	.LLST27:
 4292 040a 00000000 		.4byte	.LVL92
 4293 040e 04000000 		.4byte	.LVL93
 4294 0412 0100     		.2byte	0x1
 4295 0414 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 130


 4296 0415 04000000 		.4byte	.LVL93
 4297 0419 14000000 		.4byte	.LFE17
 4298 041d 0400     		.2byte	0x4
 4299 041f F3       		.byte	0xf3
 4300 0420 01       		.uleb128 0x1
 4301 0421 50       		.byte	0x50
 4302 0422 9F       		.byte	0x9f
 4303 0423 00000000 		.4byte	0
 4304 0427 00000000 		.4byte	0
 4305              	.LLST28:
 4306 042b 00000000 		.4byte	.LVL94
 4307 042f 42000000 		.4byte	.LVL106
 4308 0433 0100     		.2byte	0x1
 4309 0435 50       		.byte	0x50
 4310 0436 42000000 		.4byte	.LVL106
 4311 043a 74000000 		.4byte	.LFE18
 4312 043e 0400     		.2byte	0x4
 4313 0440 F3       		.byte	0xf3
 4314 0441 01       		.uleb128 0x1
 4315 0442 50       		.byte	0x50
 4316 0443 9F       		.byte	0x9f
 4317 0444 00000000 		.4byte	0
 4318 0448 00000000 		.4byte	0
 4319              	.LLST29:
 4320 044c 18000000 		.4byte	.LVL99
 4321 0450 62000000 		.4byte	.LVL114
 4322 0454 0100     		.2byte	0x1
 4323 0456 55       		.byte	0x55
 4324 0457 00000000 		.4byte	0
 4325 045b 00000000 		.4byte	0
 4326              	.LLST30:
 4327 045f 02000000 		.4byte	.LVL95
 4328 0463 18000000 		.4byte	.LVL99
 4329 0467 0200     		.2byte	0x2
 4330 0469 30       		.byte	0x30
 4331 046a 9F       		.byte	0x9f
 4332 046b 18000000 		.4byte	.LVL99
 4333 046f 2C000000 		.4byte	.LVL101
 4334 0473 0200     		.2byte	0x2
 4335 0475 31       		.byte	0x31
 4336 0476 9F       		.byte	0x9f
 4337 0477 2C000000 		.4byte	.LVL101
 4338 047b 3E000000 		.4byte	.LVL104
 4339 047f 0100     		.2byte	0x1
 4340 0481 51       		.byte	0x51
 4341 0482 00000000 		.4byte	0
 4342 0486 00000000 		.4byte	0
 4343              	.LLST31:
 4344 048a 02000000 		.4byte	.LVL95
 4345 048e 18000000 		.4byte	.LVL99
 4346 0492 0200     		.2byte	0x2
 4347 0494 30       		.byte	0x30
 4348 0495 9F       		.byte	0x9f
 4349 0496 18000000 		.4byte	.LVL99
 4350 049a 2C000000 		.4byte	.LVL101
 4351 049e 0200     		.2byte	0x2
 4352 04a0 32       		.byte	0x32
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 131


 4353 04a1 9F       		.byte	0x9f
 4354 04a2 2C000000 		.4byte	.LVL101
 4355 04a6 45000000 		.4byte	.LVL107-1
 4356 04aa 0100     		.2byte	0x1
 4357 04ac 53       		.byte	0x53
 4358 04ad 00000000 		.4byte	0
 4359 04b1 00000000 		.4byte	0
 4360              	.LLST32:
 4361 04b5 46000000 		.4byte	.LVL107
 4362 04b9 48000000 		.4byte	.LVL108
 4363 04bd 0100     		.2byte	0x1
 4364 04bf 50       		.byte	0x50
 4365 04c0 00000000 		.4byte	0
 4366 04c4 00000000 		.4byte	0
 4367              	.LLST33:
 4368 04c8 1A000000 		.4byte	.LVL100
 4369 04cc 50000000 		.4byte	.LVL109
 4370 04d0 0600     		.2byte	0x6
 4371 04d2 74       		.byte	0x74
 4372 04d3 00       		.sleb128 0
 4373 04d4 08       		.byte	0x8
 4374 04d5 FF       		.byte	0xff
 4375 04d6 1A       		.byte	0x1a
 4376 04d7 9F       		.byte	0x9f
 4377 04d8 50000000 		.4byte	.LVL109
 4378 04dc 52000000 		.4byte	.LVL110
 4379 04e0 0600     		.2byte	0x6
 4380 04e2 74       		.byte	0x74
 4381 04e3 05       		.sleb128 5
 4382 04e4 08       		.byte	0x8
 4383 04e5 FF       		.byte	0xff
 4384 04e6 1A       		.byte	0x1a
 4385 04e7 9F       		.byte	0x9f
 4386 04e8 00000000 		.4byte	0
 4387 04ec 00000000 		.4byte	0
 4388              	.LLST34:
 4389 04f0 14000000 		.4byte	.LVL98
 4390 04f4 40000000 		.4byte	.LVL105
 4391 04f8 0100     		.2byte	0x1
 4392 04fa 52       		.byte	0x52
 4393 04fb 00000000 		.4byte	0
 4394 04ff 00000000 		.4byte	0
 4395              	.LLST35:
 4396 0503 02000000 		.4byte	.LVL115
 4397 0507 06000000 		.4byte	.LVL116
 4398 050b 0200     		.2byte	0x2
 4399 050d 30       		.byte	0x30
 4400 050e 9F       		.byte	0x9f
 4401 050f 06000000 		.4byte	.LVL116
 4402 0513 1E000000 		.4byte	.LVL120
 4403 0517 0100     		.2byte	0x1
 4404 0519 54       		.byte	0x54
 4405 051a 00000000 		.4byte	0
 4406 051e 00000000 		.4byte	0
 4407              	.LLST36:
 4408 0522 12000000 		.4byte	.LVL117
 4409 0526 17000000 		.4byte	.LVL118-1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 132


 4410 052a 0100     		.2byte	0x1
 4411 052c 51       		.byte	0x51
 4412 052d 00000000 		.4byte	0
 4413 0531 00000000 		.4byte	0
 4414              	.LLST37:
 4415 0535 08000000 		.4byte	.LVL121
 4416 0539 18000000 		.4byte	.LVL122
 4417 053d 0100     		.2byte	0x1
 4418 053f 53       		.byte	0x53
 4419 0540 18000000 		.4byte	.LVL122
 4420 0544 1C000000 		.4byte	.LVL123
 4421 0548 0500     		.2byte	0x5
 4422 054a 03       		.byte	0x3
 4423 054b 00000000 		.4byte	CapSense_1_immunity
 4424 054f 1C000000 		.4byte	.LVL123
 4425 0553 2A000000 		.4byte	.LVL124
 4426 0557 0100     		.2byte	0x1
 4427 0559 53       		.byte	0x53
 4428 055a 2A000000 		.4byte	.LVL124
 4429 055e 2E000000 		.4byte	.LVL125
 4430 0562 0500     		.2byte	0x5
 4431 0564 03       		.byte	0x3
 4432 0565 00000000 		.4byte	CapSense_1_immunity
 4433 0569 2E000000 		.4byte	.LVL125
 4434 056d 38000000 		.4byte	.LVL126
 4435 0571 0100     		.2byte	0x1
 4436 0573 53       		.byte	0x53
 4437 0574 38000000 		.4byte	.LVL126
 4438 0578 3D000000 		.4byte	.LVL128-1
 4439 057c 0500     		.2byte	0x5
 4440 057e 03       		.byte	0x3
 4441 057f 00000000 		.4byte	CapSense_1_immunity
 4442 0583 00000000 		.4byte	0
 4443 0587 00000000 		.4byte	0
 4444              	.LLST38:
 4445 058b 02000000 		.4byte	.LVL131
 4446 058f 06000000 		.4byte	.LVL132
 4447 0593 0200     		.2byte	0x2
 4448 0595 30       		.byte	0x30
 4449 0596 9F       		.byte	0x9f
 4450 0597 06000000 		.4byte	.LVL132
 4451 059b 38000000 		.4byte	.LVL138
 4452 059f 0100     		.2byte	0x1
 4453 05a1 55       		.byte	0x55
 4454 05a2 00000000 		.4byte	0
 4455 05a6 00000000 		.4byte	0
 4456              	.LLST39:
 4457 05aa 10000000 		.4byte	.LVL133
 4458 05ae 14000000 		.4byte	.LVL134
 4459 05b2 0200     		.2byte	0x2
 4460 05b4 30       		.byte	0x30
 4461 05b5 9F       		.byte	0x9f
 4462 05b6 14000000 		.4byte	.LVL134
 4463 05ba 34000000 		.4byte	.LVL137
 4464 05be 0100     		.2byte	0x1
 4465 05c0 54       		.byte	0x54
 4466 05c1 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 133


 4467 05c5 00000000 		.4byte	0
 4468              	.LLST40:
 4469 05c9 10000000 		.4byte	.LVL133
 4470 05cd 34000000 		.4byte	.LVL137
 4471 05d1 0100     		.2byte	0x1
 4472 05d3 56       		.byte	0x56
 4473 05d4 00000000 		.4byte	0
 4474 05d8 00000000 		.4byte	0
 4475              	.LLST41:
 4476 05dc 00000000 		.4byte	.LVL139
 4477 05e0 04000000 		.4byte	.LVL140
 4478 05e4 0100     		.2byte	0x1
 4479 05e6 50       		.byte	0x50
 4480 05e7 04000000 		.4byte	.LVL140
 4481 05eb 0C000000 		.4byte	.LFE22
 4482 05ef 0400     		.2byte	0x4
 4483 05f1 F3       		.byte	0xf3
 4484 05f2 01       		.uleb128 0x1
 4485 05f3 50       		.byte	0x50
 4486 05f4 9F       		.byte	0x9f
 4487 05f5 00000000 		.4byte	0
 4488 05f9 00000000 		.4byte	0
 4489              	.LLST42:
 4490 05fd 0A000000 		.4byte	.LVL143
 4491 0601 13000000 		.4byte	.LVL145-1
 4492 0605 0100     		.2byte	0x1
 4493 0607 53       		.byte	0x53
 4494 0608 1C000000 		.4byte	.LVL147
 4495 060c 25000000 		.4byte	.LVL149-1
 4496 0610 0100     		.2byte	0x1
 4497 0612 53       		.byte	0x53
 4498 0613 2E000000 		.4byte	.LVL151
 4499 0617 3B000000 		.4byte	.LVL154-1
 4500 061b 0100     		.2byte	0x1
 4501 061d 53       		.byte	0x53
 4502 061e 48000000 		.4byte	.LVL157
 4503 0622 4F000000 		.4byte	.LVL159-1
 4504 0626 0100     		.2byte	0x1
 4505 0628 53       		.byte	0x53
 4506 0629 00000000 		.4byte	0
 4507 062d 00000000 		.4byte	0
 4508              	.LLST43:
 4509 0631 06000000 		.4byte	.LVL142
 4510 0635 13000000 		.4byte	.LVL145-1
 4511 0639 0100     		.2byte	0x1
 4512 063b 50       		.byte	0x50
 4513 063c 18000000 		.4byte	.LVL146
 4514 0640 25000000 		.4byte	.LVL149-1
 4515 0644 0100     		.2byte	0x1
 4516 0646 50       		.byte	0x50
 4517 0647 2A000000 		.4byte	.LVL150
 4518 064b 3B000000 		.4byte	.LVL154-1
 4519 064f 0100     		.2byte	0x1
 4520 0651 50       		.byte	0x50
 4521 0652 46000000 		.4byte	.LVL156
 4522 0656 4F000000 		.4byte	.LVL159-1
 4523 065a 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 134


 4524 065c 50       		.byte	0x50
 4525 065d 00000000 		.4byte	0
 4526 0661 00000000 		.4byte	0
 4527              		.section	.debug_aranges,"",%progbits
 4528 0000 D4000000 		.4byte	0xd4
 4529 0004 0200     		.2byte	0x2
 4530 0006 00000000 		.4byte	.Ldebug_info0
 4531 000a 04       		.byte	0x4
 4532 000b 00       		.byte	0
 4533 000c 0000     		.2byte	0
 4534 000e 0000     		.2byte	0
 4535 0010 00000000 		.4byte	.LFB20
 4536 0014 06000000 		.4byte	.LFE20-.LFB20
 4537 0018 00000000 		.4byte	.LFB7
 4538 001c 24000000 		.4byte	.LFE7-.LFB7
 4539 0020 00000000 		.4byte	.LFB1
 4540 0024 10000000 		.4byte	.LFE1-.LFB1
 4541 0028 00000000 		.4byte	.LFB2
 4542 002c 40000000 		.4byte	.LFE2-.LFB2
 4543 0030 00000000 		.4byte	.LFB3
 4544 0034 2C000000 		.4byte	.LFE3-.LFB3
 4545 0038 00000000 		.4byte	.LFB4
 4546 003c 48000000 		.4byte	.LFE4-.LFB4
 4547 0040 00000000 		.4byte	.LFB6
 4548 0044 A0000000 		.4byte	.LFE6-.LFB6
 4549 0048 00000000 		.4byte	.LFB8
 4550 004c 3C000000 		.4byte	.LFE8-.LFB8
 4551 0050 00000000 		.4byte	.LFB9
 4552 0054 40000000 		.4byte	.LFE9-.LFB9
 4553 0058 00000000 		.4byte	.LFB10
 4554 005c 78000000 		.4byte	.LFE10-.LFB10
 4555 0060 00000000 		.4byte	.LFB11
 4556 0064 08000000 		.4byte	.LFE11-.LFB11
 4557 0068 00000000 		.4byte	.LFB12
 4558 006c 30000000 		.4byte	.LFE12-.LFB12
 4559 0070 00000000 		.4byte	.LFB13
 4560 0074 14000000 		.4byte	.LFE13-.LFB13
 4561 0078 00000000 		.4byte	.LFB14
 4562 007c 12000000 		.4byte	.LFE14-.LFB14
 4563 0080 00000000 		.4byte	.LFB15
 4564 0084 1C000000 		.4byte	.LFE15-.LFB15
 4565 0088 00000000 		.4byte	.LFB16
 4566 008c 1A000000 		.4byte	.LFE16-.LFB16
 4567 0090 00000000 		.4byte	.LFB17
 4568 0094 14000000 		.4byte	.LFE17-.LFB17
 4569 0098 00000000 		.4byte	.LFB18
 4570 009c 74000000 		.4byte	.LFE18-.LFB18
 4571 00a0 00000000 		.4byte	.LFB19
 4572 00a4 24000000 		.4byte	.LFE19-.LFB19
 4573 00a8 00000000 		.4byte	.LFB5
 4574 00ac 54000000 		.4byte	.LFE5-.LFB5
 4575 00b0 00000000 		.4byte	.LFB21
 4576 00b4 40000000 		.4byte	.LFE21-.LFB21
 4577 00b8 00000000 		.4byte	.LFB22
 4578 00bc 0C000000 		.4byte	.LFE22-.LFB22
 4579 00c0 00000000 		.4byte	.LFB23
 4580 00c4 0C000000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 135


 4581 00c8 00000000 		.4byte	.LFB24
 4582 00cc 60000000 		.4byte	.LFE24-.LFB24
 4583 00d0 00000000 		.4byte	0
 4584 00d4 00000000 		.4byte	0
 4585              		.section	.debug_ranges,"",%progbits
 4586              	.Ldebug_ranges0:
 4587 0000 00000000 		.4byte	.LFB20
 4588 0004 06000000 		.4byte	.LFE20
 4589 0008 00000000 		.4byte	.LFB7
 4590 000c 24000000 		.4byte	.LFE7
 4591 0010 00000000 		.4byte	.LFB1
 4592 0014 10000000 		.4byte	.LFE1
 4593 0018 00000000 		.4byte	.LFB2
 4594 001c 40000000 		.4byte	.LFE2
 4595 0020 00000000 		.4byte	.LFB3
 4596 0024 2C000000 		.4byte	.LFE3
 4597 0028 00000000 		.4byte	.LFB4
 4598 002c 48000000 		.4byte	.LFE4
 4599 0030 00000000 		.4byte	.LFB6
 4600 0034 A0000000 		.4byte	.LFE6
 4601 0038 00000000 		.4byte	.LFB8
 4602 003c 3C000000 		.4byte	.LFE8
 4603 0040 00000000 		.4byte	.LFB9
 4604 0044 40000000 		.4byte	.LFE9
 4605 0048 00000000 		.4byte	.LFB10
 4606 004c 78000000 		.4byte	.LFE10
 4607 0050 00000000 		.4byte	.LFB11
 4608 0054 08000000 		.4byte	.LFE11
 4609 0058 00000000 		.4byte	.LFB12
 4610 005c 30000000 		.4byte	.LFE12
 4611 0060 00000000 		.4byte	.LFB13
 4612 0064 14000000 		.4byte	.LFE13
 4613 0068 00000000 		.4byte	.LFB14
 4614 006c 12000000 		.4byte	.LFE14
 4615 0070 00000000 		.4byte	.LFB15
 4616 0074 1C000000 		.4byte	.LFE15
 4617 0078 00000000 		.4byte	.LFB16
 4618 007c 1A000000 		.4byte	.LFE16
 4619 0080 00000000 		.4byte	.LFB17
 4620 0084 14000000 		.4byte	.LFE17
 4621 0088 00000000 		.4byte	.LFB18
 4622 008c 74000000 		.4byte	.LFE18
 4623 0090 00000000 		.4byte	.LFB19
 4624 0094 24000000 		.4byte	.LFE19
 4625 0098 00000000 		.4byte	.LFB5
 4626 009c 54000000 		.4byte	.LFE5
 4627 00a0 00000000 		.4byte	.LFB21
 4628 00a4 40000000 		.4byte	.LFE21
 4629 00a8 00000000 		.4byte	.LFB22
 4630 00ac 0C000000 		.4byte	.LFE22
 4631 00b0 00000000 		.4byte	.LFB23
 4632 00b4 0C000000 		.4byte	.LFE23
 4633 00b8 00000000 		.4byte	.LFB24
 4634 00bc 60000000 		.4byte	.LFE24
 4635 00c0 00000000 		.4byte	0
 4636 00c4 00000000 		.4byte	0
 4637              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 136


 4638              	.Ldebug_line0:
 4639 0000 12040000 		.section	.debug_str,"MS",%progbits,1
 4639      0200C400 
 4639      00000201 
 4639      FB0E0D00 
 4639      01010101 
 4640              	.LASF69:
 4641 0000 736E7343 		.ascii	"snsCsdClk\000"
 4641      7364436C 
 4641      6B00
 4642              	.LASF113:
 4643 000a 73656E73 		.ascii	"sensorElement\000"
 4643      6F72456C 
 4643      656D656E 
 4643      7400
 4644              	.LASF157:
 4645 0018 43617053 		.ascii	"CapSense_1_BistDischargeExtCapacitors\000"
 4645      656E7365 
 4645      5F315F42 
 4645      69737444 
 4645      69736368 
 4646              	.LASF178:
 4647 003e 43617053 		.ascii	"CapSense_1_SsCSDGetNumberOfConversions\000"
 4647      656E7365 
 4647      5F315F53 
 4647      73435344 
 4647      4765744E 
 4648              	.LASF105:
 4649 0065 43617053 		.ascii	"CapSense_1_SsCSDDisableMode\000"
 4649      656E7365 
 4649      5F315F53 
 4649      73435344 
 4649      44697361 
 4650              	.LASF96:
 4651 0081 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 4651      656E7365 
 4651      5F315F46 
 4651      4C415348 
 4651      5F57445F 
 4652              	.LASF111:
 4653 009c 7363616E 		.ascii	"scanStatus\000"
 4653      53746174 
 4653      757300
 4654              	.LASF164:
 4655 00a7 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 4655      656E7365 
 4655      5F315F63 
 4655      75725261 
 4655      6D536E73 
 4656              	.LASF72:
 4657 00bf 736E7254 		.ascii	"snrTestWidgetId\000"
 4657      65737457 
 4657      69646765 
 4657      74496400 
 4658              	.LASF139:
 4659 00cf 43617053 		.ascii	"CapSense_1_SsChangeClkFreq\000"
 4659      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 137


 4659      5F315F53 
 4659      73436861 
 4659      6E676543 
 4660              	.LASF149:
 4661 00ea 63656E74 		.ascii	"centerFreqTrim\000"
 4661      65724672 
 4661      65715472 
 4661      696D00
 4662              	.LASF171:
 4663 00f9 43617053 		.ascii	"CapSense_1_CSDScan\000"
 4663      656E7365 
 4663      5F315F43 
 4663      53445363 
 4663      616E00
 4664              	.LASF8:
 4665 010c 756E7369 		.ascii	"unsigned int\000"
 4665      676E6564 
 4665      20696E74 
 4665      00
 4666              	.LASF122:
 4667 0119 43617053 		.ascii	"CapSense_1_SsSetIOsInDefaultState\000"
 4667      656E7365 
 4667      5F315F53 
 4667      73536574 
 4667      494F7349 
 4668              	.LASF147:
 4669 013b 43617053 		.ascii	"CapSense_1_SsInitialize\000"
 4669      656E7365 
 4669      5F315F53 
 4669      73496E69 
 4669      7469616C 
 4670              	.LASF62:
 4671 0153 7363616E 		.ascii	"scanCounter\000"
 4671      436F756E 
 4671      74657200 
 4672              	.LASF60:
 4673 015f 6877436C 		.ascii	"hwClock\000"
 4673      6F636B00 
 4674              	.LASF168:
 4675 0167 43617053 		.ascii	"CapSense_1_curSnsIOPtr\000"
 4675      656E7365 
 4675      5F315F63 
 4675      7572536E 
 4675      73494F50 
 4676              	.LASF148:
 4677 017e 696E6974 		.ascii	"initStatus\000"
 4677      53746174 
 4677      757300
 4678              	.LASF124:
 4679 0189 72656756 		.ascii	"regValue\000"
 4679      616C7565 
 4679      00
 4680              	.LASF160:
 4681 0192 43617053 		.ascii	"CapSense_1_ioList\000"
 4681      656E7365 
 4681      5F315F69 
 4681      6F4C6973 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 138


 4681      7400
 4682              	.LASF117:
 4683 01a4 696E7465 		.ascii	"interruptState\000"
 4683      72727570 
 4683      74537461 
 4683      746500
 4684              	.LASF184:
 4685 01b3 43617053 		.ascii	"CapSense_1_IsBusy\000"
 4685      656E7365 
 4685      5F315F49 
 4685      73427573 
 4685      7900
 4686              	.LASF103:
 4687 01c5 6C667372 		.ascii	"lfsrScale\000"
 4687      5363616C 
 4687      6500
 4688              	.LASF174:
 4689 01cf 43617053 		.ascii	"CapSense_1_CSDConnectSns\000"
 4689      656E7365 
 4689      5F315F43 
 4689      5344436F 
 4689      6E6E6563 
 4690              	.LASF156:
 4691 01e8 64697669 		.ascii	"dividerVal\000"
 4691      64657256 
 4691      616C00
 4692              	.LASF134:
 4693 01f3 43617053 		.ascii	"CapSense_1_CalibrateWidget\000"
 4693      656E7365 
 4693      5F315F43 
 4693      616C6962 
 4693      72617465 
 4694              	.LASF121:
 4695 020e 6D6F6465 		.ascii	"mode\000"
 4695      00
 4696              	.LASF146:
 4697 0213 43617053 		.ascii	"CapSense_1_SsInitializeSourceSenseClk\000"
 4697      656E7365 
 4697      5F315F53 
 4697      73496E69 
 4697      7469616C 
 4698              	.LASF166:
 4699 0239 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 4699      656E7365 
 4699      5F315F73 
 4699      63616E46 
 4699      72657149 
 4700              	.LASF175:
 4701 0252 43617053 		.ascii	"CapSense_1_SsCSDInitialize\000"
 4701      656E7365 
 4701      5F315F53 
 4701      73435344 
 4701      496E6974 
 4702              	.LASF50:
 4703 026d 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 4703      656E7365 
 4703      5F315F52 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 139


 4703      414D5F57 
 4703      445F4C49 
 4704              	.LASF115:
 4705 028b 656C7464 		.ascii	"eltdNum\000"
 4705      4E756D00 
 4706              	.LASF101:
 4707 0293 70747257 		.ascii	"ptrWdgt\000"
 4707      64677400 
 4708              	.LASF163:
 4709 029b 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
 4709      656E7365 
 4709      5F315F72 
 4709      65717565 
 4709      73745363 
 4710              	.LASF123:
 4711 02bb 6C6F6F70 		.ascii	"loopIndex\000"
 4711      496E6465 
 4711      7800
 4712              	.LASF12:
 4713 02c5 666C6F61 		.ascii	"float\000"
 4713      7400
 4714              	.LASF85:
 4715 02cb 73686966 		.ascii	"shift\000"
 4715      7400
 4716              	.LASF97:
 4717 02d1 77646774 		.ascii	"wdgtArray\000"
 4717      41727261 
 4717      7900
 4718              	.LASF181:
 4719 02db 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4719      43313120 
 4719      352E342E 
 4719      31203230 
 4719      31363036 
 4720 030e 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4720      20726576 
 4720      6973696F 
 4720      6E203233 
 4720      37373135 
 4721 0341 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4721      67202D66 
 4721      66756E63 
 4721      74696F6E 
 4721      2D736563 
 4722              	.LASF145:
 4723 036d 736E7343 		.ascii	"snsClkSrc\000"
 4723      6C6B5372 
 4723      6300
 4724              	.LASF109:
 4725 0377 43617053 		.ascii	"CapSense_1_SetupWidget\000"
 4725      656E7365 
 4725      5F315F53 
 4725      65747570 
 4725      57696467 
 4726              	.LASF180:
 4727 038e 43794465 		.ascii	"CyDelayUs\000"
 4727      6C617955 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 140


 4727      7300
 4728              	.LASF71:
 4729 0398 736E734C 		.ascii	"snsList\000"
 4729      69737400 
 4730              	.LASF7:
 4731 03a0 6C6F6E67 		.ascii	"long long unsigned int\000"
 4731      206C6F6E 
 4731      6720756E 
 4731      7369676E 
 4731      65642069 
 4732              	.LASF73:
 4733 03b7 736E7254 		.ascii	"snrTestSensorId\000"
 4733      65737453 
 4733      656E736F 
 4733      72496400 
 4734              	.LASF94:
 4735 03c7 77646774 		.ascii	"wdgtType\000"
 4735      54797065 
 4735      00
 4736              	.LASF102:
 4737 03d0 6C667372 		.ascii	"lfsrSize\000"
 4737      53697A65 
 4737      00
 4738              	.LASF19:
 4739 03d9 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 4739      656E7365 
 4739      5F315F4C 
 4739      4F575F42 
 4739      534C4E5F 
 4740              	.LASF25:
 4741 03f6 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ENUM\000"
 4741      656E7365 
 4741      5F315F53 
 4741      454E5345 
 4741      5F4D4554 
 4742              	.LASF138:
 4743 0413 76616C75 		.ascii	"value\000"
 4743      6500
 4744              	.LASF68:
 4745 0419 6D6F6443 		.ascii	"modCsdClk\000"
 4745      7364436C 
 4745      6B00
 4746              	.LASF176:
 4747 0423 43617053 		.ascii	"CapSense_1_ISR_StartEx\000"
 4747      656E7365 
 4747      5F315F49 
 4747      53525F53 
 4747      74617274 
 4748              	.LASF79:
 4749 043a 64725074 		.ascii	"drPtr\000"
 4749      7200
 4750              	.LASF127:
 4751 0440 43617053 		.ascii	"CapSense_1_SsIsrInitialize\000"
 4751      656E7365 
 4751      5F315F53 
 4751      73497372 
 4751      496E6974 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 141


 4752              	.LASF23:
 4753 045b 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 4753      656E7365 
 4753      5F315F53 
 4753      454E5345 
 4753      5F4D4554 
 4754              	.LASF183:
 4755 047a 433A5C55 		.ascii	"C:\\Users\\michael.machate\\Desktop\\Cypress_Firstt"
 4755      73657273 
 4755      5C6D6963 
 4755      6861656C 
 4755      2E6D6163 
 4756 04a9 65737473 		.ascii	"ests\\FirstTest.cydsn\000"
 4756      5C466972 
 4756      73745465 
 4756      73742E63 
 4756      7964736E 
 4757              	.LASF32:
 4758 04be 6C6F7742 		.ascii	"lowBslnRst\000"
 4758      736C6E52 
 4758      737400
 4759              	.LASF119:
 4760 04c9 43617053 		.ascii	"CapSense_1_SetPinState\000"
 4760      656E7365 
 4760      5F315F53 
 4760      65745069 
 4760      6E537461 
 4761              	.LASF104:
 4762 04e0 43617053 		.ascii	"CapSense_1_SsSetWidgetSenseClkSrc\000"
 4762      656E7365 
 4762      5F315F53 
 4762      73536574 
 4762      57696467 
 4763              	.LASF129:
 4764 0502 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 4764      656E7365 
 4764      5F315F53 
 4764      73536574 
 4764      4D6F6443 
 4765              	.LASF93:
 4766 0525 746F7461 		.ascii	"totalNumSns\000"
 4766      6C4E756D 
 4766      536E7300 
 4767              	.LASF130:
 4768 0531 6D6F6443 		.ascii	"modClk\000"
 4768      6C6B00
 4769              	.LASF153:
 4770 0538 43617053 		.ascii	"CapSense_1_SsCSDGetColSnsClkDivider\000"
 4770      656E7365 
 4770      5F315F53 
 4770      73435344 
 4770      47657443 
 4771              	.LASF28:
 4772 055c 6E6F6973 		.ascii	"noiseTh\000"
 4772      65546800 
 4773              	.LASF120:
 4774 0564 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 142


 4774      656E7365 
 4774      5F315F53 
 4774      73537769 
 4774      74636853 
 4775              	.LASF14:
 4776 0583 63686172 		.ascii	"char\000"
 4776      00
 4777              	.LASF173:
 4778 0588 43794578 		.ascii	"CyExitCriticalSection\000"
 4778      69744372 
 4778      69746963 
 4778      616C5365 
 4778      6374696F 
 4779              	.LASF112:
 4780 059e 43617053 		.ascii	"CapSense_1_ScanAllWidgets\000"
 4780      656E7365 
 4780      5F315F53 
 4780      63616E41 
 4780      6C6C5769 
 4781              	.LASF83:
 4782 05b8 6873696F 		.ascii	"hsiomShift\000"
 4782      6D536869 
 4782      667400
 4783              	.LASF10:
 4784 05c3 75696E74 		.ascii	"uint16\000"
 4784      313600
 4785              	.LASF144:
 4786 05ca 636F6E76 		.ascii	"conversionsNum\000"
 4786      65727369 
 4786      6F6E734E 
 4786      756D00
 4787              	.LASF26:
 4788 05d9 7265736F 		.ascii	"resolution\000"
 4788      6C757469 
 4788      6F6E00
 4789              	.LASF76:
 4790 05e4 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 4790      656E7365 
 4790      5F315F52 
 4790      414D5F53 
 4790      54525543 
 4791              	.LASF63:
 4792 05fa 73746174 		.ascii	"status\000"
 4792      757300
 4793              	.LASF55:
 4794 0601 69646163 		.ascii	"idacComp\000"
 4794      436F6D70 
 4794      00
 4795              	.LASF78:
 4796 060a 70635074 		.ascii	"pcPtr\000"
 4796      7200
 4797              	.LASF6:
 4798 0610 6C6F6E67 		.ascii	"long long int\000"
 4798      206C6F6E 
 4798      6720696E 
 4798      7400
 4799              	.LASF18:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 143


 4800 061e 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 4800      656E7365 
 4800      5F315F54 
 4800      48524553 
 4800      484F4C44 
 4801              	.LASF31:
 4802 0638 6F6E4465 		.ascii	"onDebounce\000"
 4802      626F756E 
 4802      636500
 4803              	.LASF131:
 4804 0643 43617053 		.ascii	"CapSense_1_SsSetSnsClockDivider\000"
 4804      656E7365 
 4804      5F315F53 
 4804      73536574 
 4804      536E7343 
 4805              	.LASF135:
 4806 0663 63616C69 		.ascii	"calibrateStatus\000"
 4806      62726174 
 4806      65537461 
 4806      74757300 
 4807              	.LASF70:
 4808 0673 77646774 		.ascii	"wdgtList\000"
 4808      4C697374 
 4808      00
 4809              	.LASF87:
 4810 067c 70747232 		.ascii	"ptr2SnsFlash\000"
 4810      536E7346 
 4810      6C617368 
 4810      00
 4811              	.LASF75:
 4812 0689 736E7254 		.ascii	"snrTestRawCount\000"
 4812      65737452 
 4812      6177436F 
 4812      756E7400 
 4813              	.LASF142:
 4814 0699 66726571 		.ascii	"freqOffset1\000"
 4814      4F666673 
 4814      65743100 
 4815              	.LASF29:
 4816 06a5 6E4E6F69 		.ascii	"nNoiseTh\000"
 4816      73655468 
 4816      00
 4817              	.LASF67:
 4818 06ae 63736430 		.ascii	"csd0Config\000"
 4818      436F6E66 
 4818      696700
 4819              	.LASF17:
 4820 06b9 63796973 		.ascii	"cyisraddress\000"
 4820      72616464 
 4820      72657373 
 4820      00
 4821              	.LASF143:
 4822 06c6 66726571 		.ascii	"freqOffset2\000"
 4822      4F666673 
 4822      65743200 
 4823              	.LASF99:
 4824 06d2 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 144


 4824      20646F75 
 4824      626C6500 
 4825              	.LASF36:
 4826 06de 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 4826      656E7365 
 4826      5F315F52 
 4826      414D5F57 
 4826      445F4241 
 4827              	.LASF77:
 4828 06fc 6873696F 		.ascii	"hsiomPtr\000"
 4828      6D507472 
 4828      00
 4829              	.LASF11:
 4830 0705 75696E74 		.ascii	"uint32\000"
 4830      333200
 4831              	.LASF30:
 4832 070c 68797374 		.ascii	"hysteresis\000"
 4832      65726573 
 4832      697300
 4833              	.LASF90:
 4834 0717 70747232 		.ascii	"ptr2FltrHistory\000"
 4834      466C7472 
 4834      48697374 
 4834      6F727900 
 4835              	.LASF20:
 4836 0727 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 4836      656E7365 
 4836      5F315F55 
 4836      4E444546 
 4836      494E4544 
 4837              	.LASF57:
 4838 073e 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 4838      656E7365 
 4838      5F315F52 
 4838      414D5F53 
 4838      4E535F4C 
 4839              	.LASF82:
 4840 075d 6D61736B 		.ascii	"mask\000"
 4840      00
 4841              	.LASF182:
 4842 0762 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_Sensing.c\000"
 4842      72617465 
 4842      645F536F 
 4842      75726365 
 4842      5C50536F 
 4843              	.LASF137:
 4844 078e 43617053 		.ascii	"CapSense_1_SsChangeImoFreq\000"
 4844      656E7365 
 4844      5F315F53 
 4844      73436861 
 4844      6E676549 
 4845              	.LASF100:
 4846 07a9 77646774 		.ascii	"wdgtIndex\000"
 4846      496E6465 
 4846      7800
 4847              	.LASF151:
 4848 07b3 736E7349 		.ascii	"snsIndex\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 145


 4848      6E646578 
 4848      00
 4849              	.LASF158:
 4850 07bc 43617053 		.ascii	"CapSense_1_dsRam\000"
 4850      656E7365 
 4850      5F315F64 
 4850      7352616D 
 4850      00
 4851              	.LASF110:
 4852 07cd 43617053 		.ascii	"CapSense_1_Scan\000"
 4852      656E7365 
 4852      5F315F53 
 4852      63616E00 
 4853              	.LASF24:
 4854 07dd 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 4854      656E7365 
 4854      5F315F53 
 4854      454E5345 
 4854      5F4D4554 
 4855              	.LASF16:
 4856 07fb 72656733 		.ascii	"reg32\000"
 4856      3200
 4857              	.LASF74:
 4858 0801 736E7254 		.ascii	"snrTestScanCounter\000"
 4858      65737453 
 4858      63616E43 
 4858      6F756E74 
 4858      657200
 4859              	.LASF58:
 4860 0814 636F6E66 		.ascii	"configId\000"
 4860      69674964 
 4860      00
 4861              	.LASF89:
 4862 081d 70747232 		.ascii	"ptr2SnsRam\000"
 4862      536E7352 
 4862      616D00
 4863              	.LASF98:
 4864 0828 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 4864      656E7365 
 4864      5F315F46 
 4864      4C415348 
 4864      5F535452 
 4865              	.LASF66:
 4866 0840 736E7353 		.ascii	"snsStatus\000"
 4866      74617475 
 4866      7300
 4867              	.LASF126:
 4868 084a 706F7374 		.ascii	"postScanStatus\000"
 4868      5363616E 
 4868      53746174 
 4868      757300
 4869              	.LASF34:
 4870 0859 736E7343 		.ascii	"snsClkSource\000"
 4870      6C6B536F 
 4870      75726365 
 4870      00
 4871              	.LASF35:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 146


 4872 0866 73697A65 		.ascii	"sizetype\000"
 4872      74797065 
 4872      00
 4873              	.LASF179:
 4874 086f 43617053 		.ascii	"CapSense_1_CSDDisconnectSns\000"
 4874      656E7365 
 4874      5F315F43 
 4874      53444469 
 4874      73636F6E 
 4875              	.LASF2:
 4876 088b 73686F72 		.ascii	"short int\000"
 4876      7420696E 
 4876      7400
 4877              	.LASF155:
 4878 0895 43617053 		.ascii	"CapSense_1_SsCSDSetColSnsClkDivider\000"
 4878      656E7365 
 4878      5F315F53 
 4878      73435344 
 4878      53657443 
 4879              	.LASF4:
 4880 08b9 6C6F6E67 		.ascii	"long int\000"
 4880      20696E74 
 4880      00
 4881              	.LASF64:
 4882 08c2 77646774 		.ascii	"wdgtEnable\000"
 4882      456E6162 
 4882      6C6500
 4883              	.LASF133:
 4884 08cd 43617053 		.ascii	"CapSense_1_SsSetClockDividers\000"
 4884      656E7365 
 4884      5F315F53 
 4884      73536574 
 4884      436C6F63 
 4885              	.LASF159:
 4886 08eb 43617053 		.ascii	"CapSense_1_dsFlash\000"
 4886      656E7365 
 4886      5F315F64 
 4886      73466C61 
 4886      736800
 4887              	.LASF53:
 4888 08fe 64696666 		.ascii	"diff\000"
 4888      00
 4889              	.LASF61:
 4890 0903 74756E65 		.ascii	"tunerCmd\000"
 4890      72436D64 
 4890      00
 4891              	.LASF80:
 4892 090c 70735074 		.ascii	"psPtr\000"
 4892      7200
 4893              	.LASF22:
 4894 0912 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 4894      656E7365 
 4894      5F315F53 
 4894      454E5345 
 4894      5F4D4554 
 4895              	.LASF38:
 4896 0930 62757474 		.ascii	"button0\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 147


 4896      6F6E3000 
 4897              	.LASF39:
 4898 0938 62757474 		.ascii	"button1\000"
 4898      6F6E3100 
 4899              	.LASF40:
 4900 0940 62757474 		.ascii	"button2\000"
 4900      6F6E3200 
 4901              	.LASF41:
 4902 0948 62757474 		.ascii	"button3\000"
 4902      6F6E3300 
 4903              	.LASF42:
 4904 0950 62757474 		.ascii	"button4\000"
 4904      6F6E3400 
 4905              	.LASF43:
 4906 0958 62757474 		.ascii	"button5\000"
 4906      6F6E3500 
 4907              	.LASF44:
 4908 0960 62757474 		.ascii	"button6\000"
 4908      6F6E3600 
 4909              	.LASF45:
 4910 0968 62757474 		.ascii	"button7\000"
 4910      6F6E3700 
 4911              	.LASF46:
 4912 0970 62757474 		.ascii	"button8\000"
 4912      6F6E3800 
 4913              	.LASF47:
 4914 0978 62757474 		.ascii	"button9\000"
 4914      6F6E3900 
 4915              	.LASF177:
 4916 0980 43617053 		.ascii	"CapSense_1_CSDCalibrateWidget\000"
 4916      656E7365 
 4916      5F315F43 
 4916      53444361 
 4916      6C696272 
 4917              	.LASF95:
 4918 099e 6E756D43 		.ascii	"numCols\000"
 4918      6F6C7300 
 4919              	.LASF65:
 4920 09a6 77646774 		.ascii	"wdgtStatus\000"
 4920      53746174 
 4920      757300
 4921              	.LASF170:
 4922 09b1 43617053 		.ascii	"CapSense_1_CSDSetupWidget\000"
 4922      656E7365 
 4922      5F315F43 
 4922      53445365 
 4922      74757057 
 4923              	.LASF162:
 4924 09cb 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 4924      656E7365 
 4924      5F315F73 
 4924      656E736F 
 4924      72496E64 
 4925              	.LASF21:
 4926 09e2 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 4926      656E7365 
 4926      5F315F53 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 148


 4926      454E5345 
 4926      5F4D4554 
 4927              	.LASF84:
 4928 0a00 64725368 		.ascii	"drShift\000"
 4928      69667400 
 4929              	.LASF5:
 4930 0a08 6C6F6E67 		.ascii	"long unsigned int\000"
 4930      20756E73 
 4930      69676E65 
 4930      6420696E 
 4930      7400
 4931              	.LASF154:
 4932 0a1a 72657456 		.ascii	"retVal\000"
 4932      616C00
 4933              	.LASF128:
 4934 0a21 61646472 		.ascii	"address\000"
 4934      65737300 
 4935              	.LASF33:
 4936 0a29 69646163 		.ascii	"idacMod\000"
 4936      4D6F6400 
 4937              	.LASF91:
 4938 0a31 70747232 		.ascii	"ptr2DebounceArr\000"
 4938      4465626F 
 4938      756E6365 
 4938      41727200 
 4939              	.LASF169:
 4940 0a41 43617053 		.ascii	"CapSense_1_SsCSDElectrodeCheck\000"
 4940      656E7365 
 4940      5F315F53 
 4940      73435344 
 4940      456C6563 
 4941              	.LASF27:
 4942 0a60 66696E67 		.ascii	"fingerTh\000"
 4942      65725468 
 4942      00
 4943              	.LASF136:
 4944 0a69 43617053 		.ascii	"CapSense_1_CalibrateAllWidgets\000"
 4944      656E7365 
 4944      5F315F43 
 4944      616C6962 
 4944      72617465 
 4945              	.LASF52:
 4946 0a88 62736C6E 		.ascii	"bslnExt\000"
 4946      45787400 
 4947              	.LASF140:
 4948 0a90 63684964 		.ascii	"chId\000"
 4948      00
 4949              	.LASF15:
 4950 0a95 63797374 		.ascii	"cystatus\000"
 4950      61747573 
 4950      00
 4951              	.LASF1:
 4952 0a9e 756E7369 		.ascii	"unsigned char\000"
 4952      676E6564 
 4952      20636861 
 4952      7200
 4953              	.LASF185:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 149


 4954 0aac 70747246 		.ascii	"ptrFlashWdgt\000"
 4954      6C617368 
 4954      57646774 
 4954      00
 4955              	.LASF92:
 4956 0ab9 73746174 		.ascii	"staticConfig\000"
 4956      6963436F 
 4956      6E666967 
 4956      00
 4957              	.LASF118:
 4958 0ac6 696F5074 		.ascii	"ioPtr\000"
 4958      7200
 4959              	.LASF88:
 4960 0acc 70747232 		.ascii	"ptr2WdgtRam\000"
 4960      57646774 
 4960      52616D00 
 4961              	.LASF114:
 4962 0ad8 73746174 		.ascii	"state\000"
 4962      6500
 4963              	.LASF116:
 4964 0ade 656C7464 		.ascii	"eltdIndex\000"
 4964      496E6465 
 4964      7800
 4965              	.LASF81:
 4966 0ae8 6873696F 		.ascii	"hsiomMask\000"
 4966      6D4D6173 
 4966      6B00
 4967              	.LASF165:
 4968 0af2 43617053 		.ascii	"CapSense_1_currentSenseMethod\000"
 4968      656E7365 
 4968      5F315F63 
 4968      75727265 
 4968      6E745365 
 4969              	.LASF152:
 4970 0b10 63757253 		.ascii	"curSnsIOPtr\000"
 4970      6E73494F 
 4970      50747200 
 4971              	.LASF132:
 4972 0b1c 736E7343 		.ascii	"snsClk\000"
 4972      6C6B00
 4973              	.LASF172:
 4974 0b23 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4974      74657243 
 4974      72697469 
 4974      63616C53 
 4974      65637469 
 4975              	.LASF0:
 4976 0b3a 7369676E 		.ascii	"signed char\000"
 4976      65642063 
 4976      68617200 
 4977              	.LASF51:
 4978 0b46 62736C6E 		.ascii	"bsln\000"
 4978      00
 4979              	.LASF3:
 4980 0b4b 73686F72 		.ascii	"short unsigned int\000"
 4980      7420756E 
 4980      7369676E 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 150


 4980      65642069 
 4980      6E7400
 4981              	.LASF86:
 4982 0b5e 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 4982      656E7365 
 4982      5F315F46 
 4982      4C415348 
 4982      5F494F5F 
 4983              	.LASF167:
 4984 0b79 43617053 		.ascii	"CapSense_1_immunity\000"
 4984      656E7365 
 4984      5F315F69 
 4984      6D6D756E 
 4984      69747900 
 4985              	.LASF106:
 4986 0b8d 6E657752 		.ascii	"newRegValue\000"
 4986      65675661 
 4986      6C756500 
 4987              	.LASF150:
 4988 0b99 43617053 		.ascii	"CapSense_1_SsClearCSDSensors\000"
 4988      656E7365 
 4988      5F315F53 
 4988      73436C65 
 4988      61724353 
 4989              	.LASF9:
 4990 0bb6 75696E74 		.ascii	"uint8\000"
 4990      3800
 4991              	.LASF13:
 4992 0bbc 646F7562 		.ascii	"double\000"
 4992      6C6500
 4993              	.LASF54:
 4994 0bc3 6E656742 		.ascii	"negBslnRstCnt\000"
 4994      736C6E52 
 4994      7374436E 
 4994      7400
 4995              	.LASF56:
 4996 0bd1 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 4996      656E7365 
 4996      5F315F52 
 4996      414D5F53 
 4996      4E535F53 
 4997              	.LASF141:
 4998 0beb 736E7343 		.ascii	"snsClkDivider\000"
 4998      6C6B4469 
 4998      76696465 
 4998      7200
 4999              	.LASF59:
 5000 0bf9 64657669 		.ascii	"deviceId\000"
 5000      63654964 
 5000      00
 5001              	.LASF108:
 5002 0c02 77696467 		.ascii	"widgetStatus\000"
 5002      65745374 
 5002      61747573 
 5002      00
 5003              	.LASF37:
 5004 0c0f 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccrqHj9z.s 			page 151


 5004      656E7365 
 5004      5F315F52 
 5004      414D5F57 
 5004      445F4255 
 5005              	.LASF107:
 5006 0c2f 77696467 		.ascii	"widgetId\000"
 5006      65744964 
 5006      00
 5007              	.LASF125:
 5008 0c38 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 5008      656E7365 
 5008      5F315F53 
 5008      73506F73 
 5008      74416C6C 
 5009              	.LASF161:
 5010 0c58 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 5010      656E7365 
 5010      5F315F77 
 5010      69646765 
 5010      74496E64 
 5011              	.LASF48:
 5012 0c6f 62757474 		.ascii	"button10\000"
 5012      6F6E3130 
 5012      00
 5013              	.LASF49:
 5014 0c78 62757474 		.ascii	"button11\000"
 5014      6F6E3131 
 5014      00
 5015              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
