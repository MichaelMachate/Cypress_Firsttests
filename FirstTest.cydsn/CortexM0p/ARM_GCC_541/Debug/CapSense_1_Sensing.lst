ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsSetWidgetSenseClkSrc,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsSetWidgetSenseClkSrc, %function
  24              	CapSense_1_SsSetWidgetSenseClkSrc:
  25              	.LFB20:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \file CapSense_1_Sensing.c
   3:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \version 5.20
   4:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \see CapSense_1 v5.20 Datasheet
  10:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Structure.h"
  43:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_Adc.h"
  58:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (0u != CapSense_1_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #include "CapSense_1_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (0u != CapSense_1_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_1_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  85:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
 161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
 165:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_SENSE_METHOD_ENUM CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_immunity[CapSense_1_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     const uint8 CapSense_1_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint8 CapSense_1_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_RAM_SNS_STRUCT *CapSense_1_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_WD_STRUCT const *CapSense_1_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_IsBusy
 212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint32 CapSense_1_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetupWidget
 240:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDSetupWidgetExt(), CapSense_1_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 259:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_I_REP
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function does not start sensor scanning, the CapSense_1_Scan()
 264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if ((CapSense_1_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_Scan
 348:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function is called only after the CapSense_1_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_1_IsBusy()
 358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_Scan(void)
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXScan();
 384:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDScan();
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXScan();
 394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_SetupWidget() and CapSense_1_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  using the CapSense_1_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 430:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_ScanAllWidgets(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 9


 431:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CapSense_1_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (0u != (CapSense_1_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_ENABLE;
 462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (0u != (CapSense_1_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 scanStatus = CapSense_1_Scan();
 477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 487:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 10


 488:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitialize
 489:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling the CapSense_1_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1 Component at power-up. The CapSense_1_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (centerFreqTrim < CapSense_1_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_1_IMO_FREQUE
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (centerFreqTrim > (CapSense_1_IMO_FREQUENCY_OFFSET_MAX - CapSense_1_IMO_FREQUENCY_O
 534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 544:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 11


 545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****               ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 559:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_MANY_SENSE_MODES_EN)
 564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
 568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSX_E);
 570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ISX_E);
 572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 576:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (initStatus);
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 580:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 581:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetPinState
 583:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 585:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 586:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 587:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 589:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  associated with the ganged sensor is updated.
 590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 592:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 594:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 595:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 596:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 597:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 598:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function accepts the CapSense_1_SHIELD and
 599:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SENSOR states as an input only if there is at least
 600:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_1_TX_PIN
 601:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and CapSense_1_RX_PIN states as an input only if there is at least
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 12


 602:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSX widget in the project.
 603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling this function directly from the application layer is not
 605:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 606:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 607:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  automatically set the required pin states. They ignore changes
 608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  in the design made by the CapSense_1_SetPinState() function.
 609:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 610:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 611:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 612:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 613:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  sensor.
 614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration
 615:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  header file defined as CapSense_1_<WidgetName>_WDGT_ID.
 616:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param sensorElement
 618:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 619:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  its pin state.
 620:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 622:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 623:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_SNS<SensorNumber>_ID.
 624:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 625:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 627:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 628:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \endif
 629:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as:
 631:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_RX<RXNumber>_ID
 632:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_TX<TXNumber>_ID.
 633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 634:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param state
 635:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the state of the sensor to be set:
 636:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     1. CapSense_1_GROUND - The pin is connected to the ground.
 637:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     2. CapSense_1_HIGHZ - The drive mode of the pin is set to High-Z
 638:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        Analog.
 639:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     3. CapSense_1_SHIELD - The shield signal is routed to the pin
 640:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 641:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     4. CapSense_1_SENSOR - The pin is connected to the scanning bus
 642:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method is enabled).
 643:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     5. CapSense_1_TX_PIN - The Tx signal is routed to the sensor
 644:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     6. CapSense_1_RX_PIN - The pin is connected to the scanning bus
 646:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 647:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdIndex;
 653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8  interruptState;
 654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr;
 655:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 13


 659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check the ganged sns flag */
 662:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig & Ca
 663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr = CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 665:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr += sensorElement;
 666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinId];
 667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2
 672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = 1u;
 673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsF
 676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 678:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Reset HSIOM and PC registers */
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 687:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (state)
 689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_GROUND:
 691:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_HIGHZ:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSOR:
 706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Enable sensor */
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDConnectSns(ioPtr);
 708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 709:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 case CapSense_1_SHIELD:
 712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM
 715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 14


 716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     break;
 717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 719:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_TX_PIN:
 723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_GPIO_STRGDRV <<
 726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 728:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_RX_PIN:
 730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK <
 733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wrong state */
 739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 741:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
 743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 745:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 746:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDDisableMode
 749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSD mode.
 753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  4. Disable Shield Electrodes.
 760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void)
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 765:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 770:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 15


 773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)))
 774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Disconnect IDACA and IDACB */
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))) */
 781:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsCSDElectrodeCheck();
 784:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
 789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_1_CSH_TO_AMUXBUS_B_MASK << CapSense_1_CSH_HS
 790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, newRegValue);
 791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 793:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT))
 796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableShieldElectrodes();
 797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)) */
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 800:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 801:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 802:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableCSXMode
 806:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSX mode.
 810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void)
 818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 820:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 825:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 16


 830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_CSXElectrodeCheck();
 833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 834:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 836:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableISXMode
 839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables ISX mode.
 843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void)
 851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 853:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 858:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
 863:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXElectrodeCheck();
 866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_DigPrt2_Stop();
 867:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_USES_PORT_3)
 868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DigPrt3_Stop();
 869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* CapSense_1_USES_PORT_3 */
 870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 871:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 873:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 874:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSwitchSensingMode
 875:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 876:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 877:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 878:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanned.
 880:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 881:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 882:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 883:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 884:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSD mode.
 886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 17


 887:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 888:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 889:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 890:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSX mode.
 891:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 892:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param mode
 893:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the scan mode:
 894:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSD_E
 895:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSX_E
 896:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_ISX_E
 897:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_BIST_E
 898:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_UNDEFINED_E
 899:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 900:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 901:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ENUM mode)
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == CapSense_1_currentSenseMethod)
 907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDDisableMode();
 910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 911:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == CapSense_1_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableCSXMode();
 916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == CapSense_1_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableISXMode();
 922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == CapSense_1_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistDisableMode();
 928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
 933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Release ADC resources */
 934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_AdcReleaseResources();
 935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
 936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 937:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Enable the specified mode */
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == mode)
 940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDInitialize();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 18


 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == mode)
 948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXInitialize();
 952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSX_E;
 953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 954:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == mode)
 956:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 957:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXInitialize();
 960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_ISX_E;
 961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == mode)
 964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistInitialize();
 967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_BIST_E;
 968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 976:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 978:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetIOsInDefaultState
 980:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 981:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 982:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 983:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all electrodes into a default state.
 984:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 985:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 986:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 987:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 988:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - Strong drive.
 989:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 990:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the ADC channels into a default state:
 992:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 993:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - HiZ-Analog.
 994:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 995:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 996:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly from the application
 997:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  layer.
 998:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetIOsInDefaultState(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 19


1001:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
1003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
1004:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 regValue;
1005:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes */
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_1_TOTAL_ELECTRODES; loopIndex++)
1008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 1. Disconnect HSIOM.
1011:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 2. Set strong DM.
1012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 3. Set pin state to logic 0.
1013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1022:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1026:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get next electrode */
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
1029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1030:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ADC_EN)
1032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ClearAdcChannels();
1033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     
1035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ISX_EN)
1036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXSetDefaultDigital();
1037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1039:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
1041:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1042:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsReleaseResources()
1043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1044:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1045:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1046:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1047:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  default state.
1048:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1049:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1050:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The function performs following tasks:
1051:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1052:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1053:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     Cmod for CSD mode)
1054:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1055:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1056:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
1057:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 20


1058:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Resources released successfully.
1059:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1060:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1062:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsReleaseResources(void)
1063:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1065:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
1067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1070:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
1072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableCSXMode();
1075:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1076:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableISXMode();
1079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1080:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableMode();
1083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
1084:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_BistDisableMode();
1087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1088:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) &&  \
1091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsSetIOsInDefaultState();
1093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1094:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE != CapSense_1_CSD_SHIELD_EN) &&  \
1095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION)) */
1096:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1100:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
1102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1103:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return busyStatus;
1105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1108:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1109:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsPostAllWidgetsScan
1111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 21


1115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is the function used by the CapSense_1 ISR to implement multiple widget
1118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanning.
1119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Should not be used by the application layer.
1120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsPostAllWidgetsScan(void)
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Increment widget index
1126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Check if all the widgets are scanned
1127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     */
1129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (1u != CapSense_1_TOTAL_WIDGETS)
1130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus postScanStatus;
1131:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_widgetIndex++;
1135:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             postScanStatus = CapSense_1_SetupWidget((uint32)CapSense_1_widgetIndex);
1137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
1144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_Scan();
1146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (CapSense_1_ENABLE == CapSense_1_CSD_EN))
1151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widget
1153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable the CSD block */
1155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
1156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1158:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                            (CapSense_1_ENABLE == CapSense_1_CSD_EN)) */
1159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update scan Counter */
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.scanCounter++;
1162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1164:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure */
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1169:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 22


1172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1173:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1174:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsIsrInitialize
1185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  proper working of the Component.
1194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1195:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param address
1196:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1197:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1198:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsIsrInitialize(cyisraddress address)
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1203:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetModClkClockDivider
1207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param modClk
1219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The divider value for the modulator clock.
1220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetModClkClockDivider(uint32 modClk)
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Stop modulator clock */
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
1228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CapSense_1_MODCLK_CMD_DIV_SHIFT)|
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 23


1229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_MODCLK_CMD_DISABLE_MASK));
1230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense modClk.
1233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) & CapSense_1_MODCLK_CMD_ENABLE_MASK))
1240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1242:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
1247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_MODCLK_CMD_PA_DIV_SHIFT) |
1248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   CapSense_1_MODCLK_CMD_ENABLE_MASK));
1249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1252:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) &
1255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(~CapSense_1_ModClk__ENABLE_MASK));
1256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Update ModClk clock divider.
1259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_ModClk__DI
1262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= (modClk - 1u);
1263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, newRegValue);
1264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set bit to enable ModClk clock. */
1266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) |
1268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ModClk__ENABLE_MASK);
1269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetSnsClockDivider
1275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the sense clock.
1280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 24


1286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1287:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1289:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1290:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetSnsClockDivider(uint32 snsClk)
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1292:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1294:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense clock.
1297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_SENSE_PERIOD_PTR);
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
1304:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Stop sense clock clock   */
1307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SnsClk__DIV_ID <<
1309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CapSense_1_SNSCLK_CMD_DIV_SHIFT)|
1310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SNSCLK_CMD_DISABLE_MASK));
1311:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Set divider value for sense clock.
1314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * to dividing by 1.
1316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) & CapSense_1_SNSCLK_CMD_ENABLE_MASK))
1321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1324:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_SHIFT
1328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_SNSCLK_CMD_PA_DIV_SHIFT) 
1329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       CapSense_1_SNSCLK_CMD_ENABLE_MASK));
1330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
1331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
1332:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
1336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(~(uint32)CapSense_1_SnsClk__ENABLE_MASK));
1337:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Update snsClk clock divider.
1340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_SnsClk
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 25


1343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (snsClk - 1u);
1344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, newRegValue);
1345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1346:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
1349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_SnsClk__ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetClockDividers
1357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  modClk The divider value for the modulator clock.
1372:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1373:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetModClkClockDivider(modClk);
1378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Sns clock */
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetSnsClockDivider(snsClk);
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ANYMODE_AUTOCAL)
1385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateWidget
1387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the
1392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget prior to calibration.
1393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function performs exactly the same tasks as
1396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_CalibrateAllWidgets, but only for a specified widget.
1397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 26


1400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1403:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
1413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  A macro for the widget ID can be found in the
1415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1 Configuration header file defined as
1416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_<WidgetName>_WDGT_ID.
1417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the specified widget calibration:
1420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateWidget(uint32 widgetId)
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_TOTAL_WIDGETS <= widgetId)
1433:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1435:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /*
1438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              */
1441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (0u != CapSense_1_GET_WIDGET_EN_STATUS(widgetId))
1443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 else
1447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif  /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1453:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Exit from the loop because of a fail */
1455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
1456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 27


1457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN)
1462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSX_E ==
1463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSX widget */
1466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                        CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN) */
1469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)
1471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1474:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSD widget */
1475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RA
1476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1477:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN) */
1478:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RAWCOUNT_C
1482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXCalibrateWidget(widgetId, CapSense_1_ISX_RAWCOUNT_CAL_LEVEL);
1490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
1492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
1494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              /* Update CRC */
1496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN)
1497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_DsUpdateWidgetCrc(widgetId);
1498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN) */
1499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (0u);
1501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateAllWidgets
1508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1511:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  prior to calibration.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 28


1514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1526:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endcond
1527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the calibration process:
1534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateAllWidgets(void)
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1543:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             calibrateStatus |= CapSense_1_CalibrateWidget(wdgtIndex);
1547:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1551:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
1552:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1554:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
1555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsAutoTune
1557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense_1 operation.
1561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the following:
1564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    2*5*R*Cp.
1567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the operation:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 29


1571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_SsAutoTune(void)
1576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cp = 0uL;
1581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1582:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 cpRow = 0uL;
1583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cpWidget[CapSense_1_TOTAL_WIDGETS];
1586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
1587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Configure common config variables */
1590:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_1_CSD_SNSCLK_R_CONST;
1591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.vRef = CapSense_1_CSD_VREF_MV;
1592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_1_CSD_IDAC_GAIN_VALUE_NA;
1593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif ((CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) && (CapSense_1_DISABLE == CY_PSO
1599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained */
1600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1603:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Initialize CSD mode */
1612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDInitialize();
1613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN) */
1614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #1:
1617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - performing the first calibration at fixed settings
1618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sensor Cp
1619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sense clock frequency based on Cp
1620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sense clock for all the widgets */
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1626:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 30


1628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = CapSense_1_CALIBRATION_RESOLUTION;
1633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_1_CAL
1637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
1645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_CAL_LEVEL);
1648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get IDAC */
1657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calculate achived calibration level */
1660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcountR
1661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Find correct sense clock value */
1664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cpRow)
1667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1670:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
1672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
1675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1680:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << Ca
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 31


1685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 {
1686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_1_dsRam.modCsdClk;
1687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 }
1688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #else
1689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #endif
1691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1694:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1700:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calculate achived calibration level */
1702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcount * CapSen
1703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1704:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find correct sense clock value */
1706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cp)
1709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1712:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
1714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1722:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_1_FL
1727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                              ptrWdgt->snsClk = CapSense_1_dsRam.modCsdClk;
1729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
1731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif
1733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1734:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (cpRow > cp)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 32


1742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1744:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Non-CSD widget */
1752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1756:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #2:
1759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with new sense clock frequency
1760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting resolution
1761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1762:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune resolution for all the widgets */
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1771:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1774:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1777:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set parasitic capacitance for columns */
1779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1780:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1787:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1794:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Set parasitic capacitance for rows */
1796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1797:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get IDAC */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 33


1799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get finger capacitance */
1805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Init pointer to sigPFC */
1808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1809:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find resolution */
1811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1814:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #3:
1817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - selecting a widget clock source if AUTO
1818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - updating sensitivity
1820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1821:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sensitivity for all the widgets */
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1832:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
1837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
1838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
1839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return autoTuneStatus;
1843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1844:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) */
1845:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1846:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1847:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
1848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) ||\
1850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
1851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSinking
1853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 34


1856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1863:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void)
1865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1867:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sinking Mode */
1869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM2_PTR) & ~CapSense_1_IDAC_TRIM2_MOD_SNK_MASK;
1870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1871:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK) ;
1872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1873:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1874:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1875:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM2_COMP_SNK_MASK;
1876:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1877:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1878:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1880:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1881:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM2_PTR, trimValue);
1882:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1883:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1884:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
1885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1887:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1888:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) || \
1889:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
1890:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1891:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSourcing
1892:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1893:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1894:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
1895:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1896:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1897:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1898:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1899:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1900:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1901:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void)
1904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1906:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM1_PTR) & ~CapSense_1_IDAC_TRIM1_MOD_SRC_MASK;
1909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK);
1911:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 35


1913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM1_COMP_SRC_MASK;
1915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1918:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM1_PTR, trimValue);
1921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
1924:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1925:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsTrimIdacs
1928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1937:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  source mode based on sink/source mode configuration.
1938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void)
1942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
1947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_
1953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1954:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
1955:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1957:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeImoFreq
1960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the IMO frequency.
1964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  trims are contained in the CapSense_1_immunity[value] array for each
1968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  frequency channel.
1969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 36


1970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param value The frequency channel ID.
1971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeImoFreq(uint32 value)
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1978:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1979:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeClkFreq
1980:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1981:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1982:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1983:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1984:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1985:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1986:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1987:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1988:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1989:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1990:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param chId
1991:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The frequency channel ID.
1992:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1993:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1994:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeClkFreq(uint32 chId)
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1996:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
1997:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset1 = 0u;
1998:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset2 = 0u;
1999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2000:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2004:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 snsClkSrc;
2009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2011:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((0u != CapSense_1_TOTAL_CSD_WIDGETS) || \
2013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_1_TOTAL_CS
2014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_1_dsFlash.wdgtArray[CapSense
2015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)ptrFlas
2016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch(CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex]))
2019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
2022:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get sensor clock divider value */
2023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
2024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsdClk;
2025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2026:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 37


2027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2030:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2038:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2039:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2041:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F1;
2042:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F2;
2043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2044:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2045:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2046:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2047:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Get sense clk source */
2048:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2049:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2050:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2051:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2052:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2053:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2054:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2055:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2056:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2057:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2058:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2059:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2060:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2062:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2063:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2065:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset1 <<= 1u;
2068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset2 <<= 1u;
2069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2070:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2075:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2076:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
2080:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 38


2084:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2088:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2094:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2096:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)
2098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM
2099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2105:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2106:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2107:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider >>= 1;
2110:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (snsClkDivider == 0u)
2111:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2112:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = 1u;
2113:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2114:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2116:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2117:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2118:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2119:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2121:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2122:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSD_WIDGETS) */
2126:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSX_WIDGETS)
2128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
2130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsxClk;
2131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F1;
2135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F2;
2136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2137:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 39


2141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2155:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2159:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSX_WIDGETS) */
2161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CYASSERT(0);
2164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2)))
2173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitializeSourceSenseClk
2175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2177:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2178:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2179:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  for all CSD widgets.
2183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsInitializeSourceSenseClk(void)
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2187:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
2188:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
2191:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2Wdgt
2193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2194:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 40


2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2199:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2204:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2205:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_IS
2206:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2207:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2208:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2209:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
2210:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
2211:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
2212:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2215:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
2216:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_ISX_EN)) && \
2217:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2))) */
2218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2221:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2222:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetSenseClkSrc
2223:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2224:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2230:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget.
2236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2237:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
2239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
  27              		.loc 1 2239 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2243:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 41


2249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2251:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             snsClkDivider = CapSense_1_SsCSDGetColSnsClkDivider(wdgtIndex);
2252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrW
2255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                              CapSen
2256:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /*
2260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * average PRS frequency through the argument.
2262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     */
2263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->r
2264:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
2268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2269:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * average PRS frequency through the argument.
2270:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
2271:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resol
2272:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2273:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2274:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2275:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2276:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2277:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2278:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2280:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
  33              		.loc 1 2280 0
  34 0000 0523     		movs	r3, #5
  35 0002 0B73     		strb	r3, [r1, #12]
2281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2283:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
2284:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
2285:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_SsCSDGetRowSnsClkDivider(wdgtIndex);
2288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /*
2294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * average PRS frequency through the argument.
2296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             */
2297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)pt
2298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
2302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 42


2303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * average PRS frequency through the argument.
2304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
2305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdg
2306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = 0u;
2307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
2309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrScale = 0u;
2311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LF
2313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
  36              		.loc 1 2315 0
  37              		@ sp needed
  38 0004 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE20:
  41              		.size	CapSense_1_SsSetWidgetSenseClkSrc, .-CapSense_1_SsSetWidgetSenseClkSrc
  42 0006 C046     		.section	.text.CapSense_1_SsCSDDisableMode,"ax",%progbits
  43              		.align	2
  44              		.code	16
  45              		.thumb_func
  46              		.type	CapSense_1_SsCSDDisableMode, %function
  47              	CapSense_1_SsCSDDisableMode:
  48              	.LFB7:
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
  49              		.loc 1 763 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53 0000 10B5     		push	{r4, lr}
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 4, -8
  56              		.cfi_offset 14, -4
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
  57              		.loc 1 767 0
  58 0002 064A     		ldr	r2, .L3
  59 0004 1368     		ldr	r3, [r2]
  60              	.LVL1:
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
  61              		.loc 1 768 0
  62 0006 F021     		movs	r1, #240
  63 0008 8B43     		bics	r3, r1
  64              	.LVL2:
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  65              		.loc 1 769 0
  66 000a 1360     		str	r3, [r2]
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
  67              		.loc 1 775 0
  68 000c 044A     		ldr	r2, .L3+4
  69 000e 1368     		ldr	r3, [r2]
  70              	.LVL3:
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
  71              		.loc 1 776 0
  72 0010 EF39     		subs	r1, r1, #239
  73 0012 8B43     		bics	r3, r1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 43


  74              	.LVL4:
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
  75              		.loc 1 777 0
  76 0014 1360     		str	r3, [r2]
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  77              		.loc 1 783 0
  78 0016 FFF7FEFF 		bl	CapSense_1_SsCSDElectrodeCheck
  79              	.LVL5:
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  80              		.loc 1 799 0
  81              		@ sp needed
  82 001a 10BD     		pop	{r4, pc}
  83              	.L4:
  84              		.align	2
  85              	.L3:
  86 001c 00040240 		.word	1073873920
  87 0020 A8020B40 		.word	1074463400
  88              		.cfi_endproc
  89              	.LFE7:
  90              		.size	CapSense_1_SsCSDDisableMode, .-CapSense_1_SsCSDDisableMode
  91              		.section	.text.CapSense_1_IsBusy,"ax",%progbits
  92              		.align	2
  93              		.global	CapSense_1_IsBusy
  94              		.code	16
  95              		.thumb_func
  96              		.type	CapSense_1_IsBusy, %function
  97              	CapSense_1_IsBusy:
  98              	.LFB1:
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
  99              		.loc 1 234 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 104              		.loc 1 235 0
 105 0000 024B     		ldr	r3, .L6
 106 0002 DB68     		ldr	r3, [r3, #12]
 107 0004 8020     		movs	r0, #128
 108 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 109              		.loc 1 236 0
 110              		@ sp needed
 111 0008 7047     		bx	lr
 112              	.L7:
 113 000a C046     		.align	2
 114              	.L6:
 115 000c 00000000 		.word	CapSense_1_dsRam
 116              		.cfi_endproc
 117              	.LFE1:
 118              		.size	CapSense_1_IsBusy, .-CapSense_1_IsBusy
 119              		.section	.text.CapSense_1_SetupWidget,"ax",%progbits
 120              		.align	2
 121              		.global	CapSense_1_SetupWidget
 122              		.code	16
 123              		.thumb_func
 124              		.type	CapSense_1_SetupWidget, %function
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 44


 125              	CapSense_1_SetupWidget:
 126              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 127              		.loc 1 286 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              	.LVL6:
 132 0000 10B5     		push	{r4, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 4, -8
 135              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 136              		.loc 1 289 0
 137 0002 0E4B     		ldr	r3, .L14
 138 0004 DB68     		ldr	r3, [r3, #12]
 139 0006 DB03     		lsls	r3, r3, #15
 140 0008 0DD4     		bmi	.L11
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 141              		.loc 1 299 0
 142 000a 0428     		cmp	r0, #4
 143 000c 0DD8     		bhi	.L12
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 144              		.loc 1 300 0 discriminator 1
 145 000e 4309     		lsrs	r3, r0, #5
 146 0010 0433     		adds	r3, r3, #4
 147 0012 9B00     		lsls	r3, r3, #2
 148 0014 094A     		ldr	r2, .L14
 149 0016 9B58     		ldr	r3, [r3, r2]
 150 0018 1F22     		movs	r2, #31
 151 001a 0240     		ands	r2, r0
 152 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 153              		.loc 1 299 0 discriminator 1
 154 001e DB07     		lsls	r3, r3, #31
 155 0020 05D4     		bmi	.L13
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 156              		.loc 1 307 0
 157 0022 0124     		movs	r4, #1
 158 0024 04E0     		b	.L9
 159              	.L11:
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 160              		.loc 1 292 0
 161 0026 1124     		movs	r4, #17
 162 0028 02E0     		b	.L9
 163              	.L12:
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 164              		.loc 1 307 0
 165 002a 0124     		movs	r4, #1
 166 002c 00E0     		b	.L9
 167              	.L13:
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 168              		.loc 1 303 0
 169 002e 0024     		movs	r4, #0
 170              	.L9:
 171              	.LVL7:
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 45


 172              		.loc 1 314 0
 173 0030 002C     		cmp	r4, #0
 174 0032 01D1     		bne	.L10
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 175              		.loc 1 327 0
 176 0034 FFF7FEFF 		bl	CapSense_1_CSDSetupWidget
 177              	.LVL8:
 178              	.L10:
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 179              		.loc 1 343 0
 180 0038 2000     		movs	r0, r4
 181              		@ sp needed
 182              	.LVL9:
 183 003a 10BD     		pop	{r4, pc}
 184              	.L15:
 185              		.align	2
 186              	.L14:
 187 003c 00000000 		.word	CapSense_1_dsRam
 188              		.cfi_endproc
 189              	.LFE2:
 190              		.size	CapSense_1_SetupWidget, .-CapSense_1_SetupWidget
 191              		.section	.text.CapSense_1_Scan,"ax",%progbits
 192              		.align	2
 193              		.global	CapSense_1_Scan
 194              		.code	16
 195              		.thumb_func
 196              		.type	CapSense_1_Scan, %function
 197              	CapSense_1_Scan:
 198              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 199              		.loc 1 369 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 10B5     		push	{r4, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 4, -8
 206              		.cfi_offset 14, -4
 207              	.LVL10:
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 208              		.loc 1 372 0
 209 0002 084B     		ldr	r3, .L22
 210 0004 DB68     		ldr	r3, [r3, #12]
 211 0006 DB03     		lsls	r3, r3, #15
 212 0008 07D4     		bmi	.L19
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 213              		.loc 1 379 0
 214 000a 074B     		ldr	r3, .L22+4
 215 000c 1B78     		ldrb	r3, [r3]
 216 000e 012B     		cmp	r3, #1
 217 0010 05D1     		bne	.L21
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 218              		.loc 1 388 0
 219 0012 FFF7FEFF 		bl	CapSense_1_CSDScan
 220              	.LVL11:
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 221              		.loc 1 370 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 46


 222 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 223              		.loc 1 389 0
 224 0018 03E0     		b	.L17
 225              	.L19:
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 226              		.loc 1 375 0
 227 001a 1120     		movs	r0, #17
 228 001c 01E0     		b	.L17
 229              	.L21:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 230              		.loc 1 397 0
 231 001e 0120     		movs	r0, #1
 232 0020 4042     		rsbs	r0, r0, #0
 233              	.L17:
 234              	.LVL12:
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 235              		.loc 1 402 0
 236              		@ sp needed
 237 0022 10BD     		pop	{r4, pc}
 238              	.L23:
 239              		.align	2
 240              	.L22:
 241 0024 00000000 		.word	CapSense_1_dsRam
 242 0028 00000000 		.word	.LANCHOR0
 243              		.cfi_endproc
 244              	.LFE3:
 245              		.size	CapSense_1_Scan, .-CapSense_1_Scan
 246              		.section	.text.CapSense_1_ScanAllWidgets,"ax",%progbits
 247              		.align	2
 248              		.global	CapSense_1_ScanAllWidgets
 249              		.code	16
 250              		.thumb_func
 251              		.type	CapSense_1_ScanAllWidgets, %function
 252              	CapSense_1_ScanAllWidgets:
 253              	.LFB4:
 431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 254              		.loc 1 431 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 10B5     		push	{r4, lr}
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 4, -8
 261              		.cfi_offset 14, -4
 262              	.LVL13:
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 263              		.loc 1 436 0
 264 0002 0F4B     		ldr	r3, .L32
 265 0004 DB68     		ldr	r3, [r3, #12]
 266 0006 1B06     		lsls	r3, r3, #24
 267 0008 18D4     		bmi	.L31
 268 000a 0024     		movs	r4, #0
 269 000c 0120     		movs	r0, #1
 270 000e 4042     		rsbs	r0, r0, #0
 271 0010 11E0     		b	.L26
 272              	.LVL14:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 47


 273              	.L30:
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 274              		.loc 1 452 0
 275 0012 2000     		movs	r0, r4
 276              	.LVL15:
 277 0014 FFF7FEFF 		bl	CapSense_1_SetupWidget
 278              	.LVL16:
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 279              		.loc 1 454 0
 280 0018 0028     		cmp	r0, #0
 281 001a 0BD1     		bne	.L27
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 282              		.loc 1 458 0
 283 001c 032C     		cmp	r4, #3
 284 001e 03D8     		bhi	.L28
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 285              		.loc 1 461 0
 286 0020 0122     		movs	r2, #1
 287 0022 084B     		ldr	r3, .L32+4
 288 0024 5A70     		strb	r2, [r3, #1]
 289 0026 02E0     		b	.L29
 290              	.L28:
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 291              		.loc 1 466 0
 292 0028 0022     		movs	r2, #0
 293 002a 064B     		ldr	r3, .L32+4
 294 002c 5A70     		strb	r2, [r3, #1]
 295              	.L29:
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 296              		.loc 1 476 0
 297 002e FFF7FEFF 		bl	CapSense_1_Scan
 298              	.LVL17:
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 299              		.loc 1 478 0
 300 0032 04E0     		b	.L25
 301              	.L27:
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 302              		.loc 1 449 0
 303 0034 0134     		adds	r4, r4, #1
 304              	.LVL18:
 305              	.L26:
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 306              		.loc 1 447 0 discriminator 1
 307 0036 042C     		cmp	r4, #4
 308 0038 EBD9     		bls	.L30
 309 003a 00E0     		b	.L25
 310              	.LVL19:
 311              	.L31:
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 312              		.loc 1 439 0
 313 003c 1120     		movs	r0, #17
 314              	.LVL20:
 315              	.L25:
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 316              		.loc 1 484 0
 317              		@ sp needed
 318 003e 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 48


 319              	.L33:
 320              		.align	2
 321              	.L32:
 322 0040 00000000 		.word	CapSense_1_dsRam
 323 0044 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE4:
 326              		.size	CapSense_1_ScanAllWidgets, .-CapSense_1_ScanAllWidgets
 327              		.section	.text.CapSense_1_SetPinState,"ax",%progbits
 328              		.align	2
 329              		.global	CapSense_1_SetPinState
 330              		.code	16
 331              		.thumb_func
 332              		.type	CapSense_1_SetPinState, %function
 333              	CapSense_1_SetPinState:
 334              	.LFB6:
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 335              		.loc 1 650 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              	.LVL21:
 340 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 341              		.cfi_def_cfa_offset 24
 342              		.cfi_offset 3, -24
 343              		.cfi_offset 4, -20
 344              		.cfi_offset 5, -16
 345              		.cfi_offset 6, -12
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 1600     		movs	r6, r2
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 349              		.loc 1 675 0
 350 0004 C300     		lsls	r3, r0, #3
 351 0006 181A     		subs	r0, r3, r0
 352              	.LVL22:
 353 0008 8300     		lsls	r3, r0, #2
 354 000a 244A     		ldr	r2, .L41
 355              	.LVL23:
 356 000c 9C58     		ldr	r4, [r3, r2]
 357 000e CB00     		lsls	r3, r1, #3
 358 0010 591A     		subs	r1, r3, r1
 359              	.LVL24:
 360 0012 8B00     		lsls	r3, r1, #2
 361 0014 E418     		adds	r4, r4, r3
 362              	.LVL25:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 363              		.loc 1 680 0
 364 0016 0025     		movs	r5, #0
 365 0018 3CE0     		b	.L35
 366              	.LVL26:
 367              	.L40:
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 368              		.loc 1 683 0
 369 001a FFF7FEFF 		bl	CyEnterCriticalSection
 370              	.LVL27:
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 49


 371              		.loc 1 684 0
 372 001e 2168     		ldr	r1, [r4]
 373 0020 0B68     		ldr	r3, [r1]
 374 0022 277E     		ldrb	r7, [r4, #24]
 375 0024 0F22     		movs	r2, #15
 376 0026 BA40     		lsls	r2, r2, r7
 377 0028 9343     		bics	r3, r2
 378 002a 0B60     		str	r3, [r1]
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 379              		.loc 1 685 0
 380 002c 6168     		ldr	r1, [r4, #4]
 381 002e 0B68     		ldr	r3, [r1]
 382 0030 A77E     		ldrb	r7, [r4, #26]
 383 0032 0722     		movs	r2, #7
 384 0034 BA40     		lsls	r2, r2, r7
 385 0036 9343     		bics	r3, r2
 386 0038 0B60     		str	r3, [r1]
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 387              		.loc 1 686 0
 388 003a FFF7FEFF 		bl	CyExitCriticalSection
 389              	.LVL28:
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 390              		.loc 1 688 0
 391 003e 012E     		cmp	r6, #1
 392 0040 17D0     		beq	.L37
 393 0042 002E     		cmp	r6, #0
 394 0044 02D0     		beq	.L38
 395 0046 032E     		cmp	r6, #3
 396 0048 1FD0     		beq	.L39
 397 004a 21E0     		b	.L36
 398              	.L38:
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 399              		.loc 1 692 0
 400 004c FFF7FEFF 		bl	CyEnterCriticalSection
 401              	.LVL29:
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 402              		.loc 1 693 0
 403 0050 6268     		ldr	r2, [r4, #4]
 404 0052 1168     		ldr	r1, [r2]
 405 0054 A77E     		ldrb	r7, [r4, #26]
 406 0056 0623     		movs	r3, #6
 407 0058 BB40     		lsls	r3, r3, r7
 408 005a 0B43     		orrs	r3, r1
 409 005c 1360     		str	r3, [r2]
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 410              		.loc 1 694 0
 411 005e A168     		ldr	r1, [r4, #8]
 412 0060 0B68     		ldr	r3, [r1]
 413 0062 677E     		ldrb	r7, [r4, #25]
 414 0064 0122     		movs	r2, #1
 415 0066 BA40     		lsls	r2, r2, r7
 416 0068 9343     		bics	r3, r2
 417 006a 0B60     		str	r3, [r1]
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 418              		.loc 1 695 0
 419 006c FFF7FEFF 		bl	CyExitCriticalSection
 420              	.LVL30:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 50


 696:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 421              		.loc 1 696 0
 422 0070 0EE0     		b	.L36
 423              	.L37:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 424              		.loc 1 699 0
 425 0072 FFF7FEFF 		bl	CyEnterCriticalSection
 426              	.LVL31:
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 427              		.loc 1 700 0
 428 0076 A168     		ldr	r1, [r4, #8]
 429 0078 0B68     		ldr	r3, [r1]
 430 007a 677E     		ldrb	r7, [r4, #25]
 431 007c 0122     		movs	r2, #1
 432 007e BA40     		lsls	r2, r2, r7
 433 0080 9343     		bics	r3, r2
 434 0082 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 435              		.loc 1 701 0
 436 0084 FFF7FEFF 		bl	CyExitCriticalSection
 437              	.LVL32:
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 438              		.loc 1 702 0
 439 0088 02E0     		b	.L36
 440              	.L39:
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 441              		.loc 1 707 0
 442 008a 2000     		movs	r0, r4
 443 008c FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 444              	.LVL33:
 445              	.L36:
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 446              		.loc 1 742 0 discriminator 2
 447 0090 1C34     		adds	r4, r4, #28
 448              	.LVL34:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 449              		.loc 1 680 0 discriminator 2
 450 0092 0135     		adds	r5, r5, #1
 451              	.LVL35:
 452              	.L35:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 453              		.loc 1 680 0 is_stmt 0 discriminator 1
 454 0094 002D     		cmp	r5, #0
 455 0096 C0D0     		beq	.L40
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 456              		.loc 1 744 0 is_stmt 1
 457              		@ sp needed
 458              	.LVL36:
 459              	.LVL37:
 460              	.LVL38:
 461 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 462              	.L42:
 463 009a C046     		.align	2
 464              	.L41:
 465 009c 00000000 		.word	CapSense_1_dsFlash
 466              		.cfi_endproc
 467              	.LFE6:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 51


 468              		.size	CapSense_1_SetPinState, .-CapSense_1_SetPinState
 469              		.section	.text.CapSense_1_SsSwitchSensingMode,"ax",%progbits
 470              		.align	2
 471              		.global	CapSense_1_SsSwitchSensingMode
 472              		.code	16
 473              		.thumb_func
 474              		.type	CapSense_1_SsSwitchSensingMode, %function
 475              	CapSense_1_SsSwitchSensingMode:
 476              	.LFB8:
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 477              		.loc 1 902 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              	.LVL39:
 482 0000 10B5     		push	{r4, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 4, -8
 485              		.cfi_offset 14, -4
 486 0002 0400     		movs	r4, r0
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 487              		.loc 1 903 0
 488 0004 0C4B     		ldr	r3, .L47
 489 0006 1B78     		ldrb	r3, [r3]
 490 0008 8342     		cmp	r3, r0
 491 000a 14D0     		beq	.L43
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 492              		.loc 1 906 0
 493 000c 012B     		cmp	r3, #1
 494 000e 01D1     		bne	.L45
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 495              		.loc 1 909 0
 496 0010 FFF7FEFF 		bl	CapSense_1_SsCSDDisableMode
 497              	.LVL40:
 498              	.L45:
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 499              		.loc 1 939 0
 500 0014 012C     		cmp	r4, #1
 501 0016 05D1     		bne	.L46
 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 502              		.loc 1 943 0
 503 0018 FFF7FEFF 		bl	CapSense_1_SsCSDInitialize
 504              	.LVL41:
 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 505              		.loc 1 944 0
 506 001c 0122     		movs	r2, #1
 507 001e 064B     		ldr	r3, .L47
 508 0020 1A70     		strb	r2, [r3]
 509 0022 08E0     		b	.L43
 510              	.L46:
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 511              		.loc 1 947 0
 512 0024 022C     		cmp	r4, #2
 513 0026 06D0     		beq	.L43
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 514              		.loc 1 955 0
 515 0028 042C     		cmp	r4, #4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 52


 516 002a 04D0     		beq	.L43
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 517              		.loc 1 963 0
 518 002c 032C     		cmp	r4, #3
 519 002e 02D0     		beq	.L43
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 520              		.loc 1 972 0
 521 0030 0022     		movs	r2, #0
 522 0032 014B     		ldr	r3, .L47
 523 0034 1A70     		strb	r2, [r3]
 524              	.L43:
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 525              		.loc 1 975 0
 526              		@ sp needed
 527 0036 10BD     		pop	{r4, pc}
 528              	.L48:
 529              		.align	2
 530              	.L47:
 531 0038 00000000 		.word	.LANCHOR0
 532              		.cfi_endproc
 533              	.LFE8:
 534              		.size	CapSense_1_SsSwitchSensingMode, .-CapSense_1_SsSwitchSensingMode
 535              		.section	.text.CapSense_1_SsSetIOsInDefaultState,"ax",%progbits
 536              		.align	2
 537              		.global	CapSense_1_SsSetIOsInDefaultState
 538              		.code	16
 539              		.thumb_func
 540              		.type	CapSense_1_SsSetIOsInDefaultState, %function
 541              	CapSense_1_SsSetIOsInDefaultState:
 542              	.LFB9:
1001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
 543              		.loc 1 1001 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547 0000 30B5     		push	{r4, r5, lr}
 548              		.cfi_def_cfa_offset 12
 549              		.cfi_offset 4, -12
 550              		.cfi_offset 5, -8
 551              		.cfi_offset 14, -4
 552              	.LVL42:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 553              		.loc 1 1007 0
 554 0002 0020     		movs	r0, #0
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
 555              		.loc 1 1002 0
 556 0004 0D4B     		ldr	r3, .L52
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 557              		.loc 1 1007 0
 558 0006 16E0     		b	.L50
 559              	.LVL43:
 560              	.L51:
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 561              		.loc 1 1014 0 discriminator 3
 562 0008 1968     		ldr	r1, [r3]
 563 000a 0A68     		ldr	r2, [r1]
 564              	.LVL44:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 53


1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 565              		.loc 1 1015 0 discriminator 3
 566 000c 1C69     		ldr	r4, [r3, #16]
 567 000e A243     		bics	r2, r4
 568              	.LVL45:
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 569              		.loc 1 1016 0 discriminator 3
 570 0010 0A60     		str	r2, [r1]
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
 571              		.loc 1 1018 0 discriminator 3
 572 0012 5C68     		ldr	r4, [r3, #4]
 573 0014 2268     		ldr	r2, [r4]
 574              	.LVL46:
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
 575              		.loc 1 1019 0 discriminator 3
 576 0016 9D7E     		ldrb	r5, [r3, #26]
 577 0018 0721     		movs	r1, #7
 578 001a A940     		lsls	r1, r1, r5
 579 001c 8A43     		bics	r2, r1
 580              	.LVL47:
 581 001e 1100     		movs	r1, r2
 582              	.LVL48:
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 583              		.loc 1 1020 0 discriminator 3
 584 0020 0622     		movs	r2, #6
 585 0022 AA40     		lsls	r2, r2, r5
 586 0024 0A43     		orrs	r2, r1
 587              	.LVL49:
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 588              		.loc 1 1021 0 discriminator 3
 589 0026 2260     		str	r2, [r4]
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
 590              		.loc 1 1023 0 discriminator 3
 591 0028 9968     		ldr	r1, [r3, #8]
 592 002a 0A68     		ldr	r2, [r1]
 593              	.LVL50:
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 594              		.loc 1 1024 0 discriminator 3
 595 002c 5C69     		ldr	r4, [r3, #20]
 596 002e A243     		bics	r2, r4
 597              	.LVL51:
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 598              		.loc 1 1025 0 discriminator 3
 599 0030 0A60     		str	r2, [r1]
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 600              		.loc 1 1028 0 discriminator 3
 601 0032 1C33     		adds	r3, r3, #28
 602              	.LVL52:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 603              		.loc 1 1007 0 discriminator 3
 604 0034 0130     		adds	r0, r0, #1
 605              	.LVL53:
 606              	.L50:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 607              		.loc 1 1007 0 is_stmt 0 discriminator 1
 608 0036 0428     		cmp	r0, #4
 609 0038 E6D9     		bls	.L51
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 54


1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 610              		.loc 1 1038 0 is_stmt 1
 611              		@ sp needed
 612 003a 30BD     		pop	{r4, r5, pc}
 613              	.L53:
 614              		.align	2
 615              	.L52:
 616 003c 00000000 		.word	CapSense_1_ioList
 617              		.cfi_endproc
 618              	.LFE9:
 619              		.size	CapSense_1_SsSetIOsInDefaultState, .-CapSense_1_SsSetIOsInDefaultState
 620              		.section	.text.CapSense_1_SsPostAllWidgetsScan,"ax",%progbits
 621              		.align	2
 622              		.global	CapSense_1_SsPostAllWidgetsScan
 623              		.code	16
 624              		.thumb_func
 625              		.type	CapSense_1_SsPostAllWidgetsScan, %function
 626              	CapSense_1_SsPostAllWidgetsScan:
 627              	.LFB10:
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 628              		.loc 1 1123 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632 0000 10B5     		push	{r4, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 4, -8
 635              		.cfi_offset 14, -4
 636              	.L59:
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 637              		.loc 1 1134 0
 638 0002 1B4A     		ldr	r2, .L60
 639 0004 9378     		ldrb	r3, [r2, #2]
 640 0006 0133     		adds	r3, r3, #1
 641 0008 DBB2     		uxtb	r3, r3
 642 000a 9370     		strb	r3, [r2, #2]
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 643              		.loc 1 1136 0
 644 000c 9078     		ldrb	r0, [r2, #2]
 645 000e C0B2     		uxtb	r0, r0
 646 0010 FFF7FEFF 		bl	CapSense_1_SetupWidget
 647              	.LVL54:
 648 0014 041E     		subs	r4, r0, #0
 649              	.LVL55:
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 650              		.loc 1 1138 0
 651 0016 09D1     		bne	.L55
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 652              		.loc 1 1140 0
 653 0018 154B     		ldr	r3, .L60
 654 001a 9B78     		ldrb	r3, [r3, #2]
 655 001c 042B     		cmp	r3, #4
 656 001e 02D1     		bne	.L56
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 657              		.loc 1 1143 0
 658 0020 0022     		movs	r2, #0
 659 0022 134B     		ldr	r3, .L60
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 55


 660 0024 5A70     		strb	r2, [r3, #1]
 661              	.L56:
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 662              		.loc 1 1145 0
 663 0026 FFF7FEFF 		bl	CapSense_1_Scan
 664              	.LVL56:
 665 002a 1EE0     		b	.L57
 666              	.LVL57:
 667              	.L55:
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 668              		.loc 1 1147 0
 669 002c 104B     		ldr	r3, .L60
 670 002e 9B78     		ldrb	r3, [r3, #2]
 671 0030 042B     		cmp	r3, #4
 672 0032 11D1     		bne	.L58
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 673              		.loc 1 1161 0
 674 0034 0F4B     		ldr	r3, .L60+4
 675 0036 1A89     		ldrh	r2, [r3, #8]
 676 0038 0132     		adds	r2, r2, #1
 677 003a 1A81     		strh	r2, [r3, #8]
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 678              		.loc 1 1163 0
 679 003c DA68     		ldr	r2, [r3, #12]
 680 003e 8021     		movs	r1, #128
 681 0040 8A43     		bics	r2, r1
 682 0042 DA60     		str	r2, [r3, #12]
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
 683              		.loc 1 1166 0
 684 0044 DA68     		ldr	r2, [r3, #12]
 685 0046 1202     		lsls	r2, r2, #8
 686 0048 120A     		lsrs	r2, r2, #8
 687 004a DA60     		str	r2, [r3, #12]
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 688              		.loc 1 1167 0
 689 004c DA68     		ldr	r2, [r3, #12]
 690 004e 0406     		lsls	r4, r0, #24
 691 0050 1443     		orrs	r4, r2
 692 0052 DC60     		str	r4, [r3, #12]
 693              	.LVL58:
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 694              		.loc 1 1170 0
 695 0054 0024     		movs	r4, #0
 696 0056 08E0     		b	.L57
 697              	.LVL59:
 698              	.L58:
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
 699              		.loc 1 1175 0
 700 0058 064A     		ldr	r2, .L60+4
 701 005a D368     		ldr	r3, [r2, #12]
 702 005c 1B02     		lsls	r3, r3, #8
 703 005e 1B0A     		lsrs	r3, r3, #8
 704 0060 D360     		str	r3, [r2, #12]
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 705              		.loc 1 1176 0
 706 0062 D168     		ldr	r1, [r2, #12]
 707 0064 0306     		lsls	r3, r0, #24
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 56


 708 0066 0B43     		orrs	r3, r1
 709 0068 D360     		str	r3, [r2, #12]
 710              	.LVL60:
 711              	.L57:
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
 712              		.loc 1 1178 0
 713 006a 002C     		cmp	r4, #0
 714 006c C9D1     		bne	.L59
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 715              		.loc 1 1180 0
 716              		@ sp needed
 717              	.LVL61:
 718 006e 10BD     		pop	{r4, pc}
 719              	.L61:
 720              		.align	2
 721              	.L60:
 722 0070 00000000 		.word	.LANCHOR0
 723 0074 00000000 		.word	CapSense_1_dsRam
 724              		.cfi_endproc
 725              	.LFE10:
 726              		.size	CapSense_1_SsPostAllWidgetsScan, .-CapSense_1_SsPostAllWidgetsScan
 727              		.section	.text.CapSense_1_SsIsrInitialize,"ax",%progbits
 728              		.align	2
 729              		.global	CapSense_1_SsIsrInitialize
 730              		.code	16
 731              		.thumb_func
 732              		.type	CapSense_1_SsIsrInitialize, %function
 733              	CapSense_1_SsIsrInitialize:
 734              	.LFB11:
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
 735              		.loc 1 1200 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739              	.LVL62:
 740 0000 10B5     		push	{r4, lr}
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 4, -8
 743              		.cfi_offset 14, -4
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 744              		.loc 1 1201 0
 745 0002 FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 746              	.LVL63:
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 747              		.loc 1 1202 0
 748              		@ sp needed
 749 0006 10BD     		pop	{r4, pc}
 750              		.cfi_endproc
 751              	.LFE11:
 752              		.size	CapSense_1_SsIsrInitialize, .-CapSense_1_SsIsrInitialize
 753              		.section	.text.CapSense_1_SsSetModClkClockDivider,"ax",%progbits
 754              		.align	2
 755              		.global	CapSense_1_SsSetModClkClockDivider
 756              		.code	16
 757              		.thumb_func
 758              		.type	CapSense_1_SsSetModClkClockDivider, %function
 759              	CapSense_1_SsSetModClkClockDivider:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 57


 760              	.LFB12:
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
 761              		.loc 1 1223 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              		@ link register save eliminated.
 766              	.LVL64:
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
 767              		.loc 1 1226 0
 768 0000 074A     		ldr	r2, .L65
 769 0002 084B     		ldr	r3, .L65+4
 770 0004 1A60     		str	r2, [r3]
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 771              		.loc 1 1236 0
 772 0006 0138     		subs	r0, r0, #1
 773              	.LVL65:
 774 0008 0002     		lsls	r0, r0, #8
 775              	.LVL66:
 776 000a 074B     		ldr	r3, .L65+8
 777 000c 1860     		str	r0, [r3]
 778              	.L64:
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 779              		.loc 1 1239 0 discriminator 1
 780 000e 054B     		ldr	r3, .L65+4
 781 0010 1B68     		ldr	r3, [r3]
 782 0012 002B     		cmp	r3, #0
 783 0014 FBDB     		blt	.L64
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
 784              		.loc 1 1245 0
 785 0016 054A     		ldr	r2, .L65+12
 786 0018 024B     		ldr	r3, .L65+4
 787 001a 1A60     		str	r2, [r3]
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 788              		.loc 1 1270 0
 789              		@ sp needed
 790 001c 7047     		bx	lr
 791              	.L66:
 792 001e C046     		.align	2
 793              	.L65:
 794 0020 40000040 		.word	1073741888
 795 0024 00000140 		.word	1073807360
 796 0028 00030140 		.word	1073808128
 797 002c 40FF0080 		.word	-2147418304
 798              		.cfi_endproc
 799              	.LFE12:
 800              		.size	CapSense_1_SsSetModClkClockDivider, .-CapSense_1_SsSetModClkClockDivider
 801              		.section	.text.CapSense_1_SsSetSnsClockDivider,"ax",%progbits
 802              		.align	2
 803              		.global	CapSense_1_SsSetSnsClockDivider
 804              		.code	16
 805              		.thumb_func
 806              		.type	CapSense_1_SsSetSnsClockDivider, %function
 807              	CapSense_1_SsSetSnsClockDivider:
 808              	.LFB13:
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 809              		.loc 1 1291 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 58


 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814              	.LVL67:
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
 815              		.loc 1 1300 0
 816 0000 034A     		ldr	r2, .L68
 817 0002 1368     		ldr	r3, [r2]
 818              	.LVL68:
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
 819              		.loc 1 1301 0
 820 0004 1B0B     		lsrs	r3, r3, #12
 821              	.LVL69:
 822 0006 1B03     		lsls	r3, r3, #12
 823              	.LVL70:
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
 824              		.loc 1 1302 0
 825 0008 0138     		subs	r0, r0, #1
 826              	.LVL71:
 827 000a 1843     		orrs	r0, r3
 828              	.LVL72:
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 829              		.loc 1 1303 0
 830 000c 1060     		str	r0, [r2]
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 831              		.loc 1 1352 0
 832              		@ sp needed
 833 000e 7047     		bx	lr
 834              	.L69:
 835              		.align	2
 836              	.L68:
 837 0010 00020B40 		.word	1074463232
 838              		.cfi_endproc
 839              	.LFE13:
 840              		.size	CapSense_1_SsSetSnsClockDivider, .-CapSense_1_SsSetSnsClockDivider
 841              		.section	.text.CapSense_1_SsSetClockDividers,"ax",%progbits
 842              		.align	2
 843              		.global	CapSense_1_SsSetClockDividers
 844              		.code	16
 845              		.thumb_func
 846              		.type	CapSense_1_SsSetClockDividers, %function
 847              	CapSense_1_SsSetClockDividers:
 848              	.LFB14:
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
 849              		.loc 1 1375 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853              	.LVL73:
 854 0000 10B5     		push	{r4, lr}
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 4, -8
 857              		.cfi_offset 14, -4
 858 0002 0400     		movs	r4, r0
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 859              		.loc 1 1377 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 59


 860 0004 0800     		movs	r0, r1
 861              	.LVL74:
 862 0006 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 863              	.LVL75:
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 864              		.loc 1 1380 0
 865 000a 2000     		movs	r0, r4
 866 000c FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 867              	.LVL76:
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 868              		.loc 1 1381 0
 869              		@ sp needed
 870              	.LVL77:
 871 0010 10BD     		pop	{r4, pc}
 872              		.cfi_endproc
 873              	.LFE14:
 874              		.size	CapSense_1_SsSetClockDividers, .-CapSense_1_SsSetClockDividers
 875 0012 C046     		.section	.text.CapSense_1_CalibrateWidget,"ax",%progbits
 876              		.align	2
 877              		.global	CapSense_1_CalibrateWidget
 878              		.code	16
 879              		.thumb_func
 880              		.type	CapSense_1_CalibrateWidget, %function
 881              	CapSense_1_CalibrateWidget:
 882              	.LFB15:
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 883              		.loc 1 1427 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              	.LVL78:
 888 0000 10B5     		push	{r4, lr}
 889              		.cfi_def_cfa_offset 8
 890              		.cfi_offset 4, -8
 891              		.cfi_offset 14, -4
 892 0002 0300     		movs	r3, r0
 893              	.LVL79:
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 894              		.loc 1 1432 0
 895 0004 0428     		cmp	r0, #4
 896 0006 01D8     		bhi	.L74
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 897              		.loc 1 1428 0
 898 0008 0020     		movs	r0, #0
 899              	.LVL80:
 900 000a 00E0     		b	.L72
 901              	.LVL81:
 902              	.L74:
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 903              		.loc 1 1434 0
 904 000c 0120     		movs	r0, #1
 905              	.LVL82:
 906              	.L72:
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 907              		.loc 1 1452 0
 908 000e 0028     		cmp	r0, #0
 909 0010 03D1     		bne	.L73
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 60


1481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 910              		.loc 1 1481 0
 911 0012 5521     		movs	r1, #85
 912 0014 1800     		movs	r0, r3
 913              	.LVL83:
 914 0016 FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 915              	.LVL84:
 916              	.L73:
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 917              		.loc 1 1503 0
 918              		@ sp needed
 919 001a 10BD     		pop	{r4, pc}
 920              		.cfi_endproc
 921              	.LFE15:
 922              		.size	CapSense_1_CalibrateWidget, .-CapSense_1_CalibrateWidget
 923              		.section	.text.CapSense_1_CalibrateAllWidgets,"ax",%progbits
 924              		.align	2
 925              		.global	CapSense_1_CalibrateAllWidgets
 926              		.code	16
 927              		.thumb_func
 928              		.type	CapSense_1_CalibrateAllWidgets, %function
 929              	CapSense_1_CalibrateAllWidgets:
 930              	.LFB16:
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 931              		.loc 1 1540 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935 0000 70B5     		push	{r4, r5, r6, lr}
 936              		.cfi_def_cfa_offset 16
 937              		.cfi_offset 4, -16
 938              		.cfi_offset 5, -12
 939              		.cfi_offset 6, -8
 940              		.cfi_offset 14, -4
 941              	.LVL85:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 942              		.loc 1 1544 0
 943 0002 0024     		movs	r4, #0
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
 944              		.loc 1 1541 0
 945 0004 0025     		movs	r5, #0
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 946              		.loc 1 1544 0
 947 0006 04E0     		b	.L76
 948              	.LVL86:
 949              	.L77:
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 950              		.loc 1 1546 0 discriminator 3
 951 0008 2000     		movs	r0, r4
 952 000a FFF7FEFF 		bl	CapSense_1_CalibrateWidget
 953              	.LVL87:
 954 000e 0543     		orrs	r5, r0
 955              	.LVL88:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 956              		.loc 1 1544 0 discriminator 3
 957 0010 0134     		adds	r4, r4, #1
 958              	.LVL89:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 61


 959              	.L76:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 960              		.loc 1 1544 0 is_stmt 0 discriminator 1
 961 0012 042C     		cmp	r4, #4
 962 0014 F8D9     		bls	.L77
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
 963              		.loc 1 1550 0 is_stmt 1
 964 0016 2800     		movs	r0, r5
 965              		@ sp needed
 966              	.LVL90:
 967              	.LVL91:
 968 0018 70BD     		pop	{r4, r5, r6, pc}
 969              		.cfi_endproc
 970              	.LFE16:
 971              		.size	CapSense_1_CalibrateAllWidgets, .-CapSense_1_CalibrateAllWidgets
 972 001a C046     		.section	.text.CapSense_1_SsChangeImoFreq,"ax",%progbits
 973              		.align	2
 974              		.global	CapSense_1_SsChangeImoFreq
 975              		.code	16
 976              		.thumb_func
 977              		.type	CapSense_1_SsChangeImoFreq, %function
 978              	CapSense_1_SsChangeImoFreq:
 979              	.LFB17:
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
 980              		.loc 1 1974 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984              		@ link register save eliminated.
 985              	.LVL92:
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 986              		.loc 1 1975 0
 987 0000 024B     		ldr	r3, .L79
 988 0002 1818     		adds	r0, r3, r0
 989              	.LVL93:
 990 0004 0279     		ldrb	r2, [r0, #4]
 991 0006 024B     		ldr	r3, .L79+4
 992 0008 1A60     		str	r2, [r3]
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 993              		.loc 1 1976 0
 994              		@ sp needed
 995 000a 7047     		bx	lr
 996              	.L80:
 997              		.align	2
 998              	.L79:
 999 000c 00000000 		.word	.LANCHOR0
 1000 0010 0C0F0340 		.word	1073942284
 1001              		.cfi_endproc
 1002              	.LFE17:
 1003              		.size	CapSense_1_SsChangeImoFreq, .-CapSense_1_SsChangeImoFreq
 1004              		.section	.text.CapSense_1_SsChangeClkFreq,"ax",%progbits
 1005              		.align	2
 1006              		.global	CapSense_1_SsChangeClkFreq
 1007              		.code	16
 1008              		.thumb_func
 1009              		.type	CapSense_1_SsChangeClkFreq, %function
 1010              	CapSense_1_SsChangeClkFreq:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 62


 1011              	.LFB18:
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
 1012              		.loc 1 1995 0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 0
 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 1016              	.LVL94:
 1017 0000 70B5     		push	{r4, r5, r6, lr}
 1018              		.cfi_def_cfa_offset 16
 1019              		.cfi_offset 4, -16
 1020              		.cfi_offset 5, -12
 1021              		.cfi_offset 6, -8
 1022              		.cfi_offset 14, -4
 1023              	.LVL95:
2014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)ptrFlas
 1024              		.loc 1 2014 0
 1025 0002 184B     		ldr	r3, .L92
 1026 0004 9A78     		ldrb	r2, [r3, #2]
 1027 0006 D2B2     		uxtb	r2, r2
 1028              	.LVL96:
2015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 1029              		.loc 1 2015 0
 1030 0008 D300     		lsls	r3, r2, #3
 1031 000a 9A1A     		subs	r2, r3, r2
 1032              	.LVL97:
 1033 000c 9300     		lsls	r3, r2, #2
 1034 000e 164A     		ldr	r2, .L92+4
 1035 0010 D318     		adds	r3, r2, r3
 1036 0012 5A68     		ldr	r2, [r3, #4]
 1037              	.LVL98:
2024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
 1038              		.loc 1 2024 0
 1039 0014 154B     		ldr	r3, .L92+8
 1040 0016 5D8C     		ldrh	r5, [r3, #34]
 1041              	.LVL99:
2059:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
 1042              		.loc 1 2059 0
 1043 0018 147B     		ldrb	r4, [r2, #12]
 1044              	.LVL100:
2062:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 1045              		.loc 1 2062 0
 1046 001a 631F     		subs	r3, r4, #5
 1047 001c DBB2     		uxtb	r3, r3
 1048 001e 012B     		cmp	r3, #1
 1049 0020 02D9     		bls	.L91
2042:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1050              		.loc 1 2042 0
 1051 0022 0223     		movs	r3, #2
2041:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F2;
 1052              		.loc 1 2041 0
 1053 0024 0121     		movs	r1, #1
 1054 0026 01E0     		b	.L83
 1055              	.L91:
2068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
 1056              		.loc 1 2068 0
 1057 0028 0423     		movs	r3, #4
2067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset2 <<= 1u;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 63


 1058              		.loc 1 2067 0
 1059 002a 0221     		movs	r1, #2
 1060              	.L83:
 1061              	.LVL101:
2077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1062              		.loc 1 2077 0
 1063 002c 0128     		cmp	r0, #1
 1064 002e 02D0     		beq	.L85
 1065 0030 0228     		cmp	r0, #2
 1066 0032 02D0     		beq	.L86
 1067 0034 02E0     		b	.L84
 1068              	.L85:
2081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
 1069              		.loc 1 2081 0
 1070 0036 6D18     		adds	r5, r5, r1
 1071              	.LVL102:
2082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 1072              		.loc 1 2082 0
 1073 0038 00E0     		b	.L84
 1074              	.L86:
2086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
 1075              		.loc 1 2086 0
 1076 003a ED18     		adds	r5, r5, r3
 1077              	.LVL103:
 1078              	.L84:
2097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM
 1079              		.loc 1 2097 0
 1080 003c 1188     		ldrh	r1, [r2]
 1081              	.LVL104:
 1082 003e 2200     		movs	r2, r4
 1083              	.LVL105:
 1084 0040 2800     		movs	r0, r5
 1085              	.LVL106:
 1086 0042 FFF7FEFF 		bl	CapSense_1_SsCSDGetNumberOfConversions
 1087              	.LVL107:
2098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 1088              		.loc 1 2098 0
 1089 0046 0004     		lsls	r0, r0, #16
 1090              	.LVL108:
 1091 0048 000C     		lsrs	r0, r0, #16
 1092 004a 094B     		ldr	r3, .L92+12
 1093 004c 1860     		str	r0, [r3]
2104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 1094              		.loc 1 2104 0
 1095 004e 053C     		subs	r4, r4, #5
 1096              	.LVL109:
 1097 0050 E4B2     		uxtb	r4, r4
 1098              	.LVL110:
 1099 0052 012C     		cmp	r4, #1
 1100 0054 02D8     		bhi	.L87
2109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (snsClkDivider == 0u)
 1101              		.loc 1 2109 0
 1102 0056 6D08     		lsrs	r5, r5, #1
 1103              	.LVL111:
2110:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
 1104              		.loc 1 2110 0
 1105 0058 00D1     		bne	.L87
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 64


2112:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
 1106              		.loc 1 2112 0
 1107 005a 0135     		adds	r5, r5, #1
 1108              	.LVL112:
 1109              	.L87:
2122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1110              		.loc 1 2122 0
 1111 005c 2800     		movs	r0, r5
 1112 005e FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 1113              	.LVL113:
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 1114              		.loc 1 2166 0
 1115              		@ sp needed
 1116              	.LVL114:
 1117 0062 70BD     		pop	{r4, r5, r6, pc}
 1118              	.L93:
 1119              		.align	2
 1120              	.L92:
 1121 0064 00000000 		.word	.LANCHOR0
 1122 0068 00000000 		.word	CapSense_1_dsFlash
 1123 006c 00000000 		.word	CapSense_1_dsRam
 1124 0070 14030B40 		.word	1074463508
 1125              		.cfi_endproc
 1126              	.LFE18:
 1127              		.size	CapSense_1_SsChangeClkFreq, .-CapSense_1_SsChangeClkFreq
 1128              		.section	.text.CapSense_1_SsInitializeSourceSenseClk,"ax",%progbits
 1129              		.align	2
 1130              		.global	CapSense_1_SsInitializeSourceSenseClk
 1131              		.code	16
 1132              		.thumb_func
 1133              		.type	CapSense_1_SsInitializeSourceSenseClk, %function
 1134              	CapSense_1_SsInitializeSourceSenseClk:
 1135              	.LFB19:
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 1136              		.loc 1 2186 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140 0000 10B5     		push	{r4, lr}
 1141              		.cfi_def_cfa_offset 8
 1142              		.cfi_offset 4, -8
 1143              		.cfi_offset 14, -4
 1144              	.LVL115:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1145              		.loc 1 2190 0
 1146 0002 0024     		movs	r4, #0
 1147 0004 09E0     		b	.L95
 1148              	.LVL116:
 1149              	.L96:
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1150              		.loc 1 2192 0
 1151 0006 E200     		lsls	r2, r4, #3
 1152 0008 121B     		subs	r2, r2, r4
 1153 000a 9300     		lsls	r3, r2, #2
 1154 000c 044A     		ldr	r2, .L97
 1155 000e D318     		adds	r3, r2, r3
 1156 0010 5968     		ldr	r1, [r3, #4]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 65


 1157              	.LVL117:
2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 1158              		.loc 1 2198 0
 1159 0012 2000     		movs	r0, r4
 1160 0014 FFF7FEFF 		bl	CapSense_1_SsSetWidgetSenseClkSrc
 1161              	.LVL118:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1162              		.loc 1 2190 0
 1163 0018 0134     		adds	r4, r4, #1
 1164              	.LVL119:
 1165              	.L95:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1166              		.loc 1 2190 0 is_stmt 0 discriminator 1
 1167 001a 042C     		cmp	r4, #4
 1168 001c F3D9     		bls	.L96
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
 1169              		.loc 1 2213 0 is_stmt 1
 1170              		@ sp needed
 1171              	.LVL120:
 1172 001e 10BD     		pop	{r4, pc}
 1173              	.L98:
 1174              		.align	2
 1175              	.L97:
 1176 0020 00000000 		.word	CapSense_1_dsFlash
 1177              		.cfi_endproc
 1178              	.LFE19:
 1179              		.size	CapSense_1_SsInitializeSourceSenseClk, .-CapSense_1_SsInitializeSourceSenseClk
 1180              		.section	.text.CapSense_1_SsInitialize,"ax",%progbits
 1181              		.align	2
 1182              		.global	CapSense_1_SsInitialize
 1183              		.code	16
 1184              		.thumb_func
 1185              		.type	CapSense_1_SsInitialize, %function
 1186              	CapSense_1_SsInitialize:
 1187              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 1188              		.loc 1 517 0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 0
 1191              		@ frame_needed = 0, uses_anonymous_args = 0
 1192 0000 10B5     		push	{r4, lr}
 1193              		.cfi_def_cfa_offset 8
 1194              		.cfi_offset 4, -8
 1195              		.cfi_offset 14, -4
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 1196              		.loc 1 524 0
 1197 0002 124B     		ldr	r3, .L103
 1198 0004 1B68     		ldr	r3, [r3]
 1199 0006 DBB2     		uxtb	r3, r3
 1200              	.LVL121:
 525:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1201              		.loc 1 525 0
 1202 0008 114A     		ldr	r2, .L103+4
 1203 000a 1371     		strb	r3, [r2, #4]
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1204              		.loc 1 527 0
 1205 000c 132B     		cmp	r3, #19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 66


 1206 000e 05D8     		bhi	.L100
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 1207              		.loc 1 529 0
 1208 0010 1900     		movs	r1, r3
 1209 0012 1431     		adds	r1, r1, #20
 1210 0014 5171     		strb	r1, [r2, #5]
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 1211              		.loc 1 530 0
 1212 0016 2833     		adds	r3, r3, #40
 1213              	.LVL122:
 1214 0018 9371     		strb	r3, [r2, #6]
 1215 001a 0EE0     		b	.L101
 1216              	.LVL123:
 1217              	.L100:
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1218              		.loc 1 533 0
 1219 001c EB2B     		cmp	r3, #235
 1220 001e 06D9     		bls	.L102
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 1221              		.loc 1 535 0
 1222 0020 0B4A     		ldr	r2, .L103+4
 1223 0022 1900     		movs	r1, r3
 1224 0024 1439     		subs	r1, r1, #20
 1225 0026 5171     		strb	r1, [r2, #5]
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 1226              		.loc 1 536 0
 1227 0028 283B     		subs	r3, r3, #40
 1228              	.LVL124:
 1229 002a 9371     		strb	r3, [r2, #6]
 1230 002c 05E0     		b	.L101
 1231              	.LVL125:
 1232              	.L102:
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 1233              		.loc 1 541 0
 1234 002e 084A     		ldr	r2, .L103+4
 1235 0030 1900     		movs	r1, r3
 1236 0032 1439     		subs	r1, r1, #20
 1237 0034 5171     		strb	r1, [r2, #5]
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 1238              		.loc 1 542 0
 1239 0036 1433     		adds	r3, r3, #20
 1240              	.LVL126:
 1241 0038 9371     		strb	r3, [r2, #6]
 1242              	.L101:
 1243              	.LVL127:
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 1244              		.loc 1 556 0
 1245 003a FFF7FEFF 		bl	CapSense_1_SsInitializeSourceSenseClk
 1246              	.LVL128:
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1247              		.loc 1 561 0
 1248 003e FFF7FEFF 		bl	CapSense_1_SsSetIOsInDefaultState
 1249              	.LVL129:
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 1250              		.loc 1 567 0
 1251 0042 0120     		movs	r0, #1
 1252 0044 FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 67


 1253              	.LVL130:
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1254              		.loc 1 578 0
 1255 0048 0020     		movs	r0, #0
 1256              		@ sp needed
 1257 004a 10BD     		pop	{r4, pc}
 1258              	.L104:
 1259              		.align	2
 1260              	.L103:
 1261 004c 0C0F0340 		.word	1073942284
 1262 0050 00000000 		.word	.LANCHOR0
 1263              		.cfi_endproc
 1264              	.LFE5:
 1265              		.size	CapSense_1_SsInitialize, .-CapSense_1_SsInitialize
 1266              		.section	.text.CapSense_1_SsClearCSDSensors,"ax",%progbits
 1267              		.align	2
 1268              		.global	CapSense_1_SsClearCSDSensors
 1269              		.code	16
 1270              		.thumb_func
 1271              		.type	CapSense_1_SsClearCSDSensors, %function
 1272              	CapSense_1_SsClearCSDSensors:
 1273              	.LFB21:
2316:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2317:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2319:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetTxClkSrc
2322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
2337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2340:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
2342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 conversionsNum;
2344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2345:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)
2348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 snsClkDivider = CapSense_1_SsCSXGetTxClkDivider(wdgtIndex);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 68


2351:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2352:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2353:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2354:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2355:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2356:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Unused function argument */
2357:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)wdgtIndex;
2358:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2359:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2360:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_CSX_TX_CLK_SOURCE;
2361:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2362:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Unused function argument */
2363:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex;
2364:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) */
2365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2366:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
2367:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)) */
2369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
2378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2379:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrSize
2380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2385:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2386:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2387:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  requirements:
2388:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2389:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2390:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2391:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2392:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2393:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2394:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2395:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  resolution The widget resolution.
2396:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2397:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2398:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2400:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2401:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 lfsrSize = 0u;
2403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Find LFSR value */
2405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((CapSense_1_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (CapSense_1_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC4_PERIOD)))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 69


2408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC4;
2410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC3_PERIOD)))
2414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC3;
2416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC2_PERIOD)))
2420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC2;
2422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC1_PERIOD)))
2426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC1;
2428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2429:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (lfsrSize);
2435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2437:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2439:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrScale
2440:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2441:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2442:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2443:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2444:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2445:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2446:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2447:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2448:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  period.
2449:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2450:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  range +/-10%.
2452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2454:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2455:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2456:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2458:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2459:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2460:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2461:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2462:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2463:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2464:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 70


2465:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2466:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2467:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2468:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2470:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2471:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2472:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
2473:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2475:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrScale;
2479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrRange;
2480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrDither;
2481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2482:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     switch(lfsrSize)
2484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC1:
2486:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC1_RANGE;
2488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2490:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC2:
2491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC2_RANGE;
2493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2494:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC3:
2496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC3_RANGE;
2498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2499:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC4:
2501:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC4_RANGE;
2503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2504:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2505:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = 0u;
2508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
2515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((lfsrSize != CapSense_1_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2520:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(lfsrDither < CapSense_1_LFSR_DITHER_PERCENTAGE)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 71


2522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale++;
2524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrDither <<=1uL;
2525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if(lfsrDither > CapSense_1_LFSR_DITHER_PERCENTAGE)
2528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale--;
2530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2536:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return ((uint8)lfsrScale);
2538:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2539:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2540:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****           ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))) */
2547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsClearCSDSensors
2552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  an inactive state.
2558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  connection is Ground or Hi-Z.
2564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsClearCSDSensors(void)
2567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1274              		.loc 1 2567 0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 1278 0000 70B5     		push	{r4, r5, r6, lr}
 1279              		.cfi_def_cfa_offset 16
 1280              		.cfi_offset 4, -16
 1281              		.cfi_offset 5, -12
 1282              		.cfi_offset 6, -8
 1283              		.cfi_offset 14, -4
 1284              	.LVL131:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 72


2568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
2569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsIndex;
2570:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 pinIndex;
2573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2574:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Declare ptr to sensor IO structure */
2577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2579:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_IO_STRUCT const *curSnsIOPtr;
2582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
 1285              		.loc 1 2583 0
 1286 0002 0025     		movs	r5, #0
 1287 0004 16E0     		b	.L106
 1288              	.LVL132:
 1289              	.L109:
2584:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
2586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2588:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
 1290              		.loc 1 2588 0
 1291 0006 EB00     		lsls	r3, r5, #3
 1292 0008 5B1B     		subs	r3, r3, r5
 1293 000a 9A00     		lsls	r2, r3, #2
 1294 000c 0B4B     		ldr	r3, .L110
 1295 000e D658     		ldr	r6, [r2, r3]
 1296              	.LVL133:
2589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                 CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlas
2590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Go through all the sensors in widget */
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_1_dsFlash.wdgtArray[wdgtIndex].total
 1297              		.loc 1 2592 0
 1298 0010 0024     		movs	r4, #0
 1299 0012 06E0     		b	.L107
 1300              	.LVL134:
 1301              	.L108:
2593:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Check ganged sns flag */
2596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[wdgtIndex].
2597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                  CapSense_1_GANGED_SNS_MASK))
2598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get sns pointer */
2600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
2601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                CapSense_1_dsFlash.wdgtArray[wdgtInd
2602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                snsIndex;
2603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             {
2606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinI
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 73


2608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Disconnect dedicated pin */
2610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 CapSense_1_CSDDisconnectSns(curDedicatedSnsIOPtr);
2611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             }
2612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2614:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Disable sensor */
2616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable sensor */
2620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 1302              		.loc 1 2620 0 discriminator 3
 1303 0014 E300     		lsls	r3, r4, #3
 1304 0016 1B1B     		subs	r3, r3, r4
 1305 0018 9800     		lsls	r0, r3, #2
 1306 001a 3018     		adds	r0, r6, r0
 1307 001c FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1308              	.LVL135:
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1309              		.loc 1 2592 0 discriminator 3
 1310 0020 0134     		adds	r4, r4, #1
 1311              	.LVL136:
 1312              	.L107:
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1313              		.loc 1 2592 0 is_stmt 0 discriminator 1
 1314 0022 EA00     		lsls	r2, r5, #3
 1315 0024 521B     		subs	r2, r2, r5
 1316 0026 9300     		lsls	r3, r2, #2
 1317 0028 044A     		ldr	r2, .L110
 1318 002a D318     		adds	r3, r2, r3
 1319 002c 1B7E     		ldrb	r3, [r3, #24]
 1320 002e 9C42     		cmp	r4, r3
 1321 0030 F0D3     		bcc	.L108
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1322              		.loc 1 2583 0 is_stmt 1 discriminator 2
 1323 0032 0135     		adds	r5, r5, #1
 1324              	.LVL137:
 1325              	.L106:
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1326              		.loc 1 2583 0 is_stmt 0 discriminator 1
 1327 0034 042D     		cmp	r5, #4
 1328 0036 E6D9     		bls	.L109
2621:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1329              		.loc 1 2625 0 is_stmt 1
 1330              		@ sp needed
 1331              	.LVL138:
 1332 0038 70BD     		pop	{r4, r5, r6, pc}
 1333              	.L111:
 1334 003a C046     		.align	2
 1335              	.L110:
 1336 003c 00000000 		.word	CapSense_1_dsFlash
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 74


 1337              		.cfi_endproc
 1338              	.LFE21:
 1339              		.size	CapSense_1_SsClearCSDSensors, .-CapSense_1_SsClearCSDSensors
 1340              		.section	.text.CapSense_1_SsCSDGetColSnsClkDivider,"ax",%progbits
 1341              		.align	2
 1342              		.global	CapSense_1_SsCSDGetColSnsClkDivider
 1343              		.code	16
 1344              		.thumb_func
 1345              		.type	CapSense_1_SsCSDGetColSnsClkDivider, %function
 1346              	CapSense_1_SsCSDGetColSnsClkDivider:
 1347              	.LFB22:
2626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDGetColSnsClkDivider
2629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2630:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2633:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
2641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
2644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2645:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2648:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 CapSense_1_SsCSDGetColSnsClkDivider(uint32 widgetId)
2649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1348              		.loc 1 2649 0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 0
 1351              		@ frame_needed = 0, uses_anonymous_args = 0
 1352              		@ link register save eliminated.
 1353              	.LVL139:
2650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 retVal;
2651:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
2660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
 1354              		.loc 1 2661 0
 1355 0000 014B     		ldr	r3, .L113
 1356 0002 588C     		ldrh	r0, [r3, #34]
 1357              	.LVL140:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 75


2662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return (retVal);
2667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1358              		.loc 1 2667 0
 1359              		@ sp needed
 1360 0004 7047     		bx	lr
 1361              	.L114:
 1362 0006 C046     		.align	2
 1363              	.L113:
 1364 0008 00000000 		.word	CapSense_1_dsRam
 1365              		.cfi_endproc
 1366              	.LFE22:
 1367              		.size	CapSense_1_SsCSDGetColSnsClkDivider, .-CapSense_1_SsCSDGetColSnsClkDivider
 1368              		.section	.text.CapSense_1_SsCSDSetColSnsClkDivider,"ax",%progbits
 1369              		.align	2
 1370              		.global	CapSense_1_SsCSDSetColSnsClkDivider
 1371              		.code	16
 1372              		.thumb_func
 1373              		.type	CapSense_1_SsCSDSetColSnsClkDivider, %function
 1374              	CapSense_1_SsCSDSetColSnsClkDivider:
 1375              	.LFB23:
2668:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2669:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDSetColSnsClkDivider
2672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value for one-dimension widgets
2676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value based on the Component
2680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param
2684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widgetId Specifies the ID of the widget.
2685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return The Sense Clock Divider value for one-dimension widgets
2687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *        and the Column Sense Clock divider value for two-dimension widgets.
2688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsCSDSetColSnsClkDivider(uint32 widgetId, uint32 dividerVal)
2691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1376              		.loc 1 2691 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380              		@ link register save eliminated.
 1381              	.LVL141:
2692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 76


2695:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2697:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2698:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt->snsClk = (uint16)dividerVal;
2700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsRam.snsCsdClk = (uint16)dividerVal;
 1382              		.loc 1 2701 0
 1383 0000 014B     		ldr	r3, .L116
 1384 0002 5984     		strh	r1, [r3, #34]
2702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1385              		.loc 1 2705 0
 1386              		@ sp needed
 1387 0004 7047     		bx	lr
 1388              	.L117:
 1389 0006 C046     		.align	2
 1390              	.L116:
 1391 0008 00000000 		.word	CapSense_1_dsRam
 1392              		.cfi_endproc
 1393              	.LFE23:
 1394              		.size	CapSense_1_SsCSDSetColSnsClkDivider, .-CapSense_1_SsCSDSetColSnsClkDivider
 1395              		.section	.text.CapSense_1_BistDischargeExtCapacitors,"ax",%progbits
 1396              		.align	2
 1397              		.global	CapSense_1_BistDischargeExtCapacitors
 1398              		.code	16
 1399              		.thumb_func
 1400              		.type	CapSense_1_BistDischargeExtCapacitors, %function
 1401              	CapSense_1_BistDischargeExtCapacitors:
 1402              	.LFB24:
2706:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDGetRowSnsClkDivider
2711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  two-dimension widgets.
2721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return
2726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 CapSense_1_SsCSDGetRowSnsClkDivider(uint32 widgetId)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 77


2731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 retVal;
2733:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Get sense divider based on configuration */
2735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2736:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2737:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2740:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2747:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (retVal);
2749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2752:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2753:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDCalcPrsSize
2757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  requirements:
2765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  resolution The widget resolution.
2770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 CapSense_1_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 prsSize;
2777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 modClkDivider = 1u;
2778:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if ((CapSense_1_ENABLE != CapSense_1_CSDV2) && \
2780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK))
2781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     modClkDivider = (uint32)CapSense_1_dsRam.modCsdClk;
2782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((snsClkDivider * CapSense_1_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu 
2785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS12 mode */
2787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_12_CONFIG;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 78


2788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if ((snsClkDivider * CapSense_1_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x0000000
2790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS8 mode */
2792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_8_CONFIG;
2793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
2795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set Direct clock mode */
2797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_CLK_SOURCE_DIRECT;
2798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (uint8)prsSize;
2801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2804:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2805:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_BistDischargeExtCapacitors
2809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors.
2813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors by connection them
2816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects 
2817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses 
2819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_BistDischargeExtCapacitors(void)
2823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1403              		.loc 1 2823 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407 0000 70B5     		push	{r4, r5, r6, lr}
 1408              		.cfi_def_cfa_offset 16
 1409              		.cfi_offset 4, -16
 1410              		.cfi_offset 5, -12
 1411              		.cfi_offset 6, -8
 1412              		.cfi_offset 14, -4
2824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
2825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8  interruptState;
2826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         
2827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1413              		.loc 1 2828 0
 1414 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1415              	.LVL142:
2829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR);
 1416              		.loc 1 2829 0
 1417 0006 134A     		ldr	r2, .L119
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 79


 1418 0008 1368     		ldr	r3, [r2]
 1419              	.LVL143:
2830:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_HSIOM_MASK);
 1420              		.loc 1 2830 0
 1421 000a F021     		movs	r1, #240
 1422 000c 8B43     		bics	r3, r1
 1423              	.LVL144:
2831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR, newRegValue);
 1424              		.loc 1 2831 0
 1425 000e 1360     		str	r3, [r2]
2832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1426              		.loc 1 2832 0
 1427 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1428              	.LVL145:
2833:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2835:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1429              		.loc 1 2835 0
 1430 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1431              	.LVL146:
2836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_DR_PTR);
 1432              		.loc 1 2836 0
 1433 0018 0F4A     		ldr	r2, .L119+4
 1434 001a 1368     		ldr	r3, [r2]
 1435              	.LVL147:
2837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_DR_MASK);
 1436              		.loc 1 2837 0
 1437 001c 0221     		movs	r1, #2
 1438 001e 8B43     		bics	r3, r1
 1439              	.LVL148:
2838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_DR_PTR, newRegValue);
 1440              		.loc 1 2838 0
 1441 0020 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1442              		.loc 1 2839 0
 1443 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1444              	.LVL149:
2840:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1445              		.loc 1 2842 0
 1446 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 1447              	.LVL150:
2843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1448              		.loc 1 2843 0
 1449 002a 0C4C     		ldr	r4, .L119+8
 1450 002c 2368     		ldr	r3, [r4]
 1451              	.LVL151:
2844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1452              		.loc 1 2844 0
 1453 002e 3825     		movs	r5, #56
 1454 0030 AB43     		bics	r3, r5
 1455              	.LVL152:
2845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (CapSense_1_EXT_CAP_PC_STRONG_CFG);
 1456              		.loc 1 2845 0
 1457 0032 3022     		movs	r2, #48
 1458 0034 1343     		orrs	r3, r2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 80


 1459              	.LVL153:
2846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1460              		.loc 1 2846 0
 1461 0036 2360     		str	r3, [r4]
2847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1462              		.loc 1 2847 0
 1463 0038 FFF7FEFF 		bl	CyExitCriticalSection
 1464              	.LVL154:
2848:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Delay to discharge external capacitors */
2850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyDelayUs(CapSense_1_EXT_CAP_DISCHARGE_TIME);
 1465              		.loc 1 2850 0
 1466 003c 0120     		movs	r0, #1
 1467 003e FFF7FEFF 		bl	CyDelayUs
 1468              	.LVL155:
2851:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1469              		.loc 1 2853 0
 1470 0042 FFF7FEFF 		bl	CyEnterCriticalSection
 1471              	.LVL156:
2854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1472              		.loc 1 2854 0
 1473 0046 2368     		ldr	r3, [r4]
 1474              	.LVL157:
2855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1475              		.loc 1 2855 0
 1476 0048 AB43     		bics	r3, r5
 1477              	.LVL158:
2856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1478              		.loc 1 2856 0
 1479 004a 2360     		str	r3, [r4]
2857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1480              		.loc 1 2857 0
 1481 004c FFF7FEFF 		bl	CyExitCriticalSection
 1482              	.LVL159:
2858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1483              		.loc 1 2858 0
 1484              		@ sp needed
 1485 0050 70BD     		pop	{r4, r5, r6, pc}
 1486              	.L120:
 1487 0052 C046     		.align	2
 1488              	.L119:
 1489 0054 00040240 		.word	1073873920
 1490 0058 00040440 		.word	1074004992
 1491 005c 08040440 		.word	1074005000
 1492              		.cfi_endproc
 1493              	.LFE24:
 1494              		.size	CapSense_1_BistDischargeExtCapacitors, .-CapSense_1_BistDischargeExtCapacitors
 1495              		.comm	CapSense_1_curSnsIOPtr,4,4
 1496              		.comm	CapSense_1_curRamSnsPtr,4,4
 1497              		.global	CapSense_1_requestScanAllWidget
 1498              		.global	CapSense_1_sensorIndex
 1499              		.global	CapSense_1_widgetIndex
 1500              		.global	CapSense_1_immunity
 1501              		.global	CapSense_1_scanFreqIndex
 1502              		.global	CapSense_1_currentSenseMethod
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 81


 1503              		.bss
 1504              		.align	2
 1505              		.set	.LANCHOR0,. + 0
 1506              		.type	CapSense_1_currentSenseMethod, %object
 1507              		.size	CapSense_1_currentSenseMethod, 1
 1508              	CapSense_1_currentSenseMethod:
 1509 0000 00       		.space	1
 1510              		.type	CapSense_1_requestScanAllWidget, %object
 1511              		.size	CapSense_1_requestScanAllWidget, 1
 1512              	CapSense_1_requestScanAllWidget:
 1513 0001 00       		.space	1
 1514              		.type	CapSense_1_widgetIndex, %object
 1515              		.size	CapSense_1_widgetIndex, 1
 1516              	CapSense_1_widgetIndex:
 1517 0002 00       		.space	1
 1518 0003 00       		.space	1
 1519              		.type	CapSense_1_immunity, %object
 1520              		.size	CapSense_1_immunity, 3
 1521              	CapSense_1_immunity:
 1522 0004 000000   		.space	3
 1523              		.type	CapSense_1_sensorIndex, %object
 1524              		.size	CapSense_1_sensorIndex, 1
 1525              	CapSense_1_sensorIndex:
 1526 0007 00       		.space	1
 1527              		.type	CapSense_1_scanFreqIndex, %object
 1528              		.size	CapSense_1_scanFreqIndex, 1
 1529              	CapSense_1_scanFreqIndex:
 1530 0008 00       		.space	1
 1531              		.text
 1532              	.Letext0:
 1533              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1534              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1535              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1536              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.h"
 1537              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 1538              		.file 7 "Generated_Source\\PSoC4\\CapSense_1_ISR.h"
 1539              		.section	.debug_info,"",%progbits
 1540              	.Ldebug_info0:
 1541 0000 D80E0000 		.4byte	0xed8
 1542 0004 0400     		.2byte	0x4
 1543 0006 00000000 		.4byte	.Ldebug_abbrev0
 1544 000a 04       		.byte	0x4
 1545 000b 01       		.uleb128 0x1
 1546 000c D1020000 		.4byte	.LASF174
 1547 0010 0C       		.byte	0xc
 1548 0011 58070000 		.4byte	.LASF175
 1549 0015 70040000 		.4byte	.LASF176
 1550 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1551 001d 00000000 		.4byte	0
 1552 0021 00000000 		.4byte	.Ldebug_line0
 1553 0025 02       		.uleb128 0x2
 1554 0026 01       		.byte	0x1
 1555 0027 06       		.byte	0x6
 1556 0028 080B0000 		.4byte	.LASF0
 1557 002c 02       		.uleb128 0x2
 1558 002d 01       		.byte	0x1
 1559 002e 08       		.byte	0x8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 82


 1560 002f 6C0A0000 		.4byte	.LASF1
 1561 0033 02       		.uleb128 0x2
 1562 0034 02       		.byte	0x2
 1563 0035 05       		.byte	0x5
 1564 0036 81080000 		.4byte	.LASF2
 1565 003a 02       		.uleb128 0x2
 1566 003b 02       		.byte	0x2
 1567 003c 07       		.byte	0x7
 1568 003d 190B0000 		.4byte	.LASF3
 1569 0041 02       		.uleb128 0x2
 1570 0042 04       		.byte	0x4
 1571 0043 05       		.byte	0x5
 1572 0044 AF080000 		.4byte	.LASF4
 1573 0048 02       		.uleb128 0x2
 1574 0049 04       		.byte	0x4
 1575 004a 07       		.byte	0x7
 1576 004b D6090000 		.4byte	.LASF5
 1577 004f 02       		.uleb128 0x2
 1578 0050 08       		.byte	0x8
 1579 0051 05       		.byte	0x5
 1580 0052 06060000 		.4byte	.LASF6
 1581 0056 02       		.uleb128 0x2
 1582 0057 08       		.byte	0x8
 1583 0058 07       		.byte	0x7
 1584 0059 96030000 		.4byte	.LASF7
 1585 005d 03       		.uleb128 0x3
 1586 005e 04       		.byte	0x4
 1587 005f 05       		.byte	0x5
 1588 0060 696E7400 		.ascii	"int\000"
 1589 0064 02       		.uleb128 0x2
 1590 0065 04       		.byte	0x4
 1591 0066 07       		.byte	0x7
 1592 0067 0C010000 		.4byte	.LASF8
 1593 006b 04       		.uleb128 0x4
 1594 006c 840B0000 		.4byte	.LASF9
 1595 0070 02       		.byte	0x2
 1596 0071 E401     		.2byte	0x1e4
 1597 0073 2C000000 		.4byte	0x2c
 1598 0077 04       		.uleb128 0x4
 1599 0078 B9050000 		.4byte	.LASF10
 1600 007c 02       		.byte	0x2
 1601 007d E501     		.2byte	0x1e5
 1602 007f 3A000000 		.4byte	0x3a
 1603 0083 04       		.uleb128 0x4
 1604 0084 FB060000 		.4byte	.LASF11
 1605 0088 02       		.byte	0x2
 1606 0089 E601     		.2byte	0x1e6
 1607 008b 48000000 		.4byte	0x48
 1608 008f 02       		.uleb128 0x2
 1609 0090 04       		.byte	0x4
 1610 0091 04       		.byte	0x4
 1611 0092 C5020000 		.4byte	.LASF12
 1612 0096 02       		.uleb128 0x2
 1613 0097 08       		.byte	0x8
 1614 0098 04       		.byte	0x4
 1615 0099 8A0B0000 		.4byte	.LASF13
 1616 009d 02       		.uleb128 0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 83


 1617 009e 01       		.byte	0x1
 1618 009f 08       		.byte	0x8
 1619 00a0 79050000 		.4byte	.LASF14
 1620 00a4 04       		.uleb128 0x4
 1621 00a5 630A0000 		.4byte	.LASF15
 1622 00a9 02       		.byte	0x2
 1623 00aa 8602     		.2byte	0x286
 1624 00ac 48000000 		.4byte	0x48
 1625 00b0 05       		.uleb128 0x5
 1626 00b1 6B000000 		.4byte	0x6b
 1627 00b5 04       		.uleb128 0x4
 1628 00b6 F1070000 		.4byte	.LASF16
 1629 00ba 02       		.byte	0x2
 1630 00bb 9002     		.2byte	0x290
 1631 00bd C1000000 		.4byte	0xc1
 1632 00c1 05       		.uleb128 0x5
 1633 00c2 83000000 		.4byte	0x83
 1634 00c6 04       		.uleb128 0x4
 1635 00c7 AF060000 		.4byte	.LASF17
 1636 00cb 02       		.byte	0x2
 1637 00cc A002     		.2byte	0x2a0
 1638 00ce D2000000 		.4byte	0xd2
 1639 00d2 06       		.uleb128 0x6
 1640 00d3 04       		.byte	0x4
 1641 00d4 D8000000 		.4byte	0xd8
 1642 00d8 07       		.uleb128 0x7
 1643 00d9 04       		.uleb128 0x4
 1644 00da 14060000 		.4byte	.LASF18
 1645 00de 03       		.byte	0x3
 1646 00df 2D01     		.2byte	0x12d
 1647 00e1 77000000 		.4byte	0x77
 1648 00e5 04       		.uleb128 0x4
 1649 00e6 CF030000 		.4byte	.LASF19
 1650 00ea 03       		.byte	0x3
 1651 00eb 3101     		.2byte	0x131
 1652 00ed 6B000000 		.4byte	0x6b
 1653 00f1 08       		.uleb128 0x8
 1654 00f2 01       		.byte	0x1
 1655 00f3 2C000000 		.4byte	0x2c
 1656 00f7 04       		.byte	0x4
 1657 00f8 70       		.byte	0x70
 1658 00f9 1C010000 		.4byte	0x11c
 1659 00fd 09       		.uleb128 0x9
 1660 00fe 1D070000 		.4byte	.LASF20
 1661 0102 00       		.byte	0
 1662 0103 09       		.uleb128 0x9
 1663 0104 B0090000 		.4byte	.LASF21
 1664 0108 01       		.byte	0x1
 1665 0109 09       		.uleb128 0x9
 1666 010a 08090000 		.4byte	.LASF22
 1667 010e 02       		.byte	0x2
 1668 010f 09       		.uleb128 0x9
 1669 0110 51040000 		.4byte	.LASF23
 1670 0114 03       		.byte	0x3
 1671 0115 09       		.uleb128 0x9
 1672 0116 D3070000 		.4byte	.LASF24
 1673 011a 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 84


 1674 011b 00       		.byte	0
 1675 011c 0A       		.uleb128 0xa
 1676 011d EC030000 		.4byte	.LASF25
 1677 0121 04       		.byte	0x4
 1678 0122 76       		.byte	0x76
 1679 0123 F1000000 		.4byte	0xf1
 1680 0127 0B       		.uleb128 0xb
 1681 0128 0E       		.byte	0xe
 1682 0129 04       		.byte	0x4
 1683 012a 8E       		.byte	0x8e
 1684 012b 9C010000 		.4byte	0x19c
 1685 012f 0C       		.uleb128 0xc
 1686 0130 CF050000 		.4byte	.LASF26
 1687 0134 04       		.byte	0x4
 1688 0135 93       		.byte	0x93
 1689 0136 77000000 		.4byte	0x77
 1690 013a 00       		.byte	0
 1691 013b 0C       		.uleb128 0xc
 1692 013c 2E0A0000 		.4byte	.LASF27
 1693 0140 04       		.byte	0x4
 1694 0141 98       		.byte	0x98
 1695 0142 D9000000 		.4byte	0xd9
 1696 0146 02       		.byte	0x2
 1697 0147 0C       		.uleb128 0xc
 1698 0148 52050000 		.4byte	.LASF28
 1699 014c 04       		.byte	0x4
 1700 014d 9D       		.byte	0x9d
 1701 014e 6B000000 		.4byte	0x6b
 1702 0152 04       		.byte	0x4
 1703 0153 0C       		.uleb128 0xc
 1704 0154 9B060000 		.4byte	.LASF29
 1705 0158 04       		.byte	0x4
 1706 0159 A2       		.byte	0xa2
 1707 015a 6B000000 		.4byte	0x6b
 1708 015e 05       		.byte	0x5
 1709 015f 0C       		.uleb128 0xc
 1710 0160 02070000 		.4byte	.LASF30
 1711 0164 04       		.byte	0x4
 1712 0165 A8       		.byte	0xa8
 1713 0166 6B000000 		.4byte	0x6b
 1714 016a 06       		.byte	0x6
 1715 016b 0C       		.uleb128 0xc
 1716 016c 2E060000 		.4byte	.LASF31
 1717 0170 04       		.byte	0x4
 1718 0171 AE       		.byte	0xae
 1719 0172 6B000000 		.4byte	0x6b
 1720 0176 07       		.byte	0x7
 1721 0177 0C       		.uleb128 0xc
 1722 0178 B4040000 		.4byte	.LASF32
 1723 017c 04       		.byte	0x4
 1724 017d B5       		.byte	0xb5
 1725 017e E5000000 		.4byte	0xe5
 1726 0182 08       		.byte	0x8
 1727 0183 0C       		.uleb128 0xc
 1728 0184 F7090000 		.4byte	.LASF33
 1729 0188 04       		.byte	0x4
 1730 0189 BC       		.byte	0xbc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 85


 1731 018a 9C010000 		.4byte	0x19c
 1732 018e 09       		.byte	0x9
 1733 018f 0C       		.uleb128 0xc
 1734 0190 4F080000 		.4byte	.LASF34
 1735 0194 04       		.byte	0x4
 1736 0195 C1       		.byte	0xc1
 1737 0196 6B000000 		.4byte	0x6b
 1738 019a 0C       		.byte	0xc
 1739 019b 00       		.byte	0
 1740 019c 0D       		.uleb128 0xd
 1741 019d 6B000000 		.4byte	0x6b
 1742 01a1 AC010000 		.4byte	0x1ac
 1743 01a5 0E       		.uleb128 0xe
 1744 01a6 AC010000 		.4byte	0x1ac
 1745 01aa 02       		.byte	0x2
 1746 01ab 00       		.byte	0
 1747 01ac 02       		.uleb128 0x2
 1748 01ad 04       		.byte	0x4
 1749 01ae 07       		.byte	0x7
 1750 01af 5C080000 		.4byte	.LASF35
 1751 01b3 0A       		.uleb128 0xa
 1752 01b4 D4060000 		.4byte	.LASF36
 1753 01b8 04       		.byte	0x4
 1754 01b9 C2       		.byte	0xc2
 1755 01ba 27010000 		.4byte	0x127
 1756 01be 0B       		.uleb128 0xb
 1757 01bf 0E       		.byte	0xe
 1758 01c0 04       		.byte	0x4
 1759 01c1 C7       		.byte	0xc7
 1760 01c2 33020000 		.4byte	0x233
 1761 01c6 0C       		.uleb128 0xc
 1762 01c7 CF050000 		.4byte	.LASF26
 1763 01cb 04       		.byte	0x4
 1764 01cc CC       		.byte	0xcc
 1765 01cd 77000000 		.4byte	0x77
 1766 01d1 00       		.byte	0
 1767 01d2 0C       		.uleb128 0xc
 1768 01d3 2E0A0000 		.4byte	.LASF27
 1769 01d7 04       		.byte	0x4
 1770 01d8 D1       		.byte	0xd1
 1771 01d9 D9000000 		.4byte	0xd9
 1772 01dd 02       		.byte	0x2
 1773 01de 0C       		.uleb128 0xc
 1774 01df 52050000 		.4byte	.LASF28
 1775 01e3 04       		.byte	0x4
 1776 01e4 D6       		.byte	0xd6
 1777 01e5 6B000000 		.4byte	0x6b
 1778 01e9 04       		.byte	0x4
 1779 01ea 0C       		.uleb128 0xc
 1780 01eb 9B060000 		.4byte	.LASF29
 1781 01ef 04       		.byte	0x4
 1782 01f0 DB       		.byte	0xdb
 1783 01f1 6B000000 		.4byte	0x6b
 1784 01f5 05       		.byte	0x5
 1785 01f6 0C       		.uleb128 0xc
 1786 01f7 02070000 		.4byte	.LASF30
 1787 01fb 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 86


 1788 01fc E1       		.byte	0xe1
 1789 01fd 6B000000 		.4byte	0x6b
 1790 0201 06       		.byte	0x6
 1791 0202 0C       		.uleb128 0xc
 1792 0203 2E060000 		.4byte	.LASF31
 1793 0207 04       		.byte	0x4
 1794 0208 E7       		.byte	0xe7
 1795 0209 6B000000 		.4byte	0x6b
 1796 020d 07       		.byte	0x7
 1797 020e 0C       		.uleb128 0xc
 1798 020f B4040000 		.4byte	.LASF32
 1799 0213 04       		.byte	0x4
 1800 0214 EE       		.byte	0xee
 1801 0215 E5000000 		.4byte	0xe5
 1802 0219 08       		.byte	0x8
 1803 021a 0C       		.uleb128 0xc
 1804 021b F7090000 		.4byte	.LASF33
 1805 021f 04       		.byte	0x4
 1806 0220 F5       		.byte	0xf5
 1807 0221 9C010000 		.4byte	0x19c
 1808 0225 09       		.byte	0x9
 1809 0226 0C       		.uleb128 0xc
 1810 0227 4F080000 		.4byte	.LASF34
 1811 022b 04       		.byte	0x4
 1812 022c FA       		.byte	0xfa
 1813 022d 6B000000 		.4byte	0x6b
 1814 0231 0C       		.byte	0xc
 1815 0232 00       		.byte	0
 1816 0233 0A       		.uleb128 0xa
 1817 0234 DD0B0000 		.4byte	.LASF37
 1818 0238 04       		.byte	0x4
 1819 0239 FB       		.byte	0xfb
 1820 023a BE010000 		.4byte	0x1be
 1821 023e 0F       		.uleb128 0xf
 1822 023f 46       		.byte	0x46
 1823 0240 04       		.byte	0x4
 1824 0241 0101     		.2byte	0x101
 1825 0243 89020000 		.4byte	0x289
 1826 0247 10       		.uleb128 0x10
 1827 0248 26090000 		.4byte	.LASF38
 1828 024c 04       		.byte	0x4
 1829 024d 0601     		.2byte	0x106
 1830 024f 33020000 		.4byte	0x233
 1831 0253 00       		.byte	0
 1832 0254 10       		.uleb128 0x10
 1833 0255 2E090000 		.4byte	.LASF39
 1834 0259 04       		.byte	0x4
 1835 025a 0B01     		.2byte	0x10b
 1836 025c 33020000 		.4byte	0x233
 1837 0260 0E       		.byte	0xe
 1838 0261 10       		.uleb128 0x10
 1839 0262 36090000 		.4byte	.LASF40
 1840 0266 04       		.byte	0x4
 1841 0267 1001     		.2byte	0x110
 1842 0269 33020000 		.4byte	0x233
 1843 026d 1C       		.byte	0x1c
 1844 026e 10       		.uleb128 0x10
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 87


 1845 026f 3E090000 		.4byte	.LASF41
 1846 0273 04       		.byte	0x4
 1847 0274 1501     		.2byte	0x115
 1848 0276 33020000 		.4byte	0x233
 1849 027a 2A       		.byte	0x2a
 1850 027b 10       		.uleb128 0x10
 1851 027c 46090000 		.4byte	.LASF42
 1852 0280 04       		.byte	0x4
 1853 0281 1A01     		.2byte	0x11a
 1854 0283 33020000 		.4byte	0x233
 1855 0287 38       		.byte	0x38
 1856 0288 00       		.byte	0
 1857 0289 04       		.uleb128 0x4
 1858 028a 6D020000 		.4byte	.LASF43
 1859 028e 04       		.byte	0x4
 1860 028f 1B01     		.2byte	0x11b
 1861 0291 3E020000 		.4byte	0x23e
 1862 0295 0F       		.uleb128 0xf
 1863 0296 18       		.byte	0x18
 1864 0297 04       		.byte	0x4
 1865 0298 2101     		.2byte	0x121
 1866 029a ED020000 		.4byte	0x2ed
 1867 029e 11       		.uleb128 0x11
 1868 029f 72617700 		.ascii	"raw\000"
 1869 02a3 04       		.byte	0x4
 1870 02a4 2601     		.2byte	0x126
 1871 02a6 ED020000 		.4byte	0x2ed
 1872 02aa 00       		.byte	0
 1873 02ab 10       		.uleb128 0x10
 1874 02ac 140B0000 		.4byte	.LASF44
 1875 02b0 04       		.byte	0x4
 1876 02b1 2B01     		.2byte	0x12b
 1877 02b3 ED020000 		.4byte	0x2ed
 1878 02b7 06       		.byte	0x6
 1879 02b8 10       		.uleb128 0x10
 1880 02b9 560A0000 		.4byte	.LASF45
 1881 02bd 04       		.byte	0x4
 1882 02be 3101     		.2byte	0x131
 1883 02c0 9C010000 		.4byte	0x19c
 1884 02c4 0C       		.byte	0xc
 1885 02c5 10       		.uleb128 0x10
 1886 02c6 F4080000 		.4byte	.LASF46
 1887 02ca 04       		.byte	0x4
 1888 02cb 3601     		.2byte	0x136
 1889 02cd D9000000 		.4byte	0xd9
 1890 02d1 10       		.byte	0x10
 1891 02d2 10       		.uleb128 0x10
 1892 02d3 910B0000 		.4byte	.LASF47
 1893 02d7 04       		.byte	0x4
 1894 02d8 3B01     		.2byte	0x13b
 1895 02da FD020000 		.4byte	0x2fd
 1896 02de 12       		.byte	0x12
 1897 02df 10       		.uleb128 0x10
 1898 02e0 F7050000 		.4byte	.LASF48
 1899 02e4 04       		.byte	0x4
 1900 02e5 4001     		.2byte	0x140
 1901 02e7 9C010000 		.4byte	0x19c
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 88


 1902 02eb 15       		.byte	0x15
 1903 02ec 00       		.byte	0
 1904 02ed 0D       		.uleb128 0xd
 1905 02ee 77000000 		.4byte	0x77
 1906 02f2 FD020000 		.4byte	0x2fd
 1907 02f6 0E       		.uleb128 0xe
 1908 02f7 AC010000 		.4byte	0x1ac
 1909 02fb 02       		.byte	0x2
 1910 02fc 00       		.byte	0
 1911 02fd 0D       		.uleb128 0xd
 1912 02fe E5000000 		.4byte	0xe5
 1913 0302 0D030000 		.4byte	0x30d
 1914 0306 0E       		.uleb128 0xe
 1915 0307 AC010000 		.4byte	0x1ac
 1916 030b 02       		.byte	0x2
 1917 030c 00       		.byte	0
 1918 030d 04       		.uleb128 0x4
 1919 030e 9F0B0000 		.4byte	.LASF49
 1920 0312 04       		.byte	0x4
 1921 0313 4101     		.2byte	0x141
 1922 0315 95020000 		.4byte	0x295
 1923 0319 0F       		.uleb128 0xf
 1924 031a 78       		.byte	0x78
 1925 031b 04       		.byte	0x4
 1926 031c 4701     		.2byte	0x147
 1927 031e 64030000 		.4byte	0x364
 1928 0322 10       		.uleb128 0x10
 1929 0323 26090000 		.4byte	.LASF38
 1930 0327 04       		.byte	0x4
 1931 0328 4C01     		.2byte	0x14c
 1932 032a 64030000 		.4byte	0x364
 1933 032e 00       		.byte	0
 1934 032f 10       		.uleb128 0x10
 1935 0330 2E090000 		.4byte	.LASF39
 1936 0334 04       		.byte	0x4
 1937 0335 5101     		.2byte	0x151
 1938 0337 64030000 		.4byte	0x364
 1939 033b 18       		.byte	0x18
 1940 033c 10       		.uleb128 0x10
 1941 033d 36090000 		.4byte	.LASF40
 1942 0341 04       		.byte	0x4
 1943 0342 5601     		.2byte	0x156
 1944 0344 64030000 		.4byte	0x364
 1945 0348 30       		.byte	0x30
 1946 0349 10       		.uleb128 0x10
 1947 034a 3E090000 		.4byte	.LASF41
 1948 034e 04       		.byte	0x4
 1949 034f 5B01     		.2byte	0x15b
 1950 0351 64030000 		.4byte	0x364
 1951 0355 48       		.byte	0x48
 1952 0356 10       		.uleb128 0x10
 1953 0357 46090000 		.4byte	.LASF42
 1954 035b 04       		.byte	0x4
 1955 035c 6001     		.2byte	0x160
 1956 035e 64030000 		.4byte	0x364
 1957 0362 60       		.byte	0x60
 1958 0363 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 89


 1959 0364 0D       		.uleb128 0xd
 1960 0365 0D030000 		.4byte	0x30d
 1961 0369 74030000 		.4byte	0x374
 1962 036d 0E       		.uleb128 0xe
 1963 036e AC010000 		.4byte	0x1ac
 1964 0372 00       		.byte	0
 1965 0373 00       		.byte	0
 1966 0374 04       		.uleb128 0x4
 1967 0375 34070000 		.4byte	.LASF50
 1968 0379 04       		.byte	0x4
 1969 037a 6101     		.2byte	0x161
 1970 037c 19030000 		.4byte	0x319
 1971 0380 0F       		.uleb128 0xf
 1972 0381 EC       		.byte	0xec
 1973 0382 04       		.byte	0x4
 1974 0383 6701     		.2byte	0x167
 1975 0385 74040000 		.4byte	0x474
 1976 0389 10       		.uleb128 0x10
 1977 038a 0A080000 		.4byte	.LASF51
 1978 038e 04       		.byte	0x4
 1979 038f 6E01     		.2byte	0x16e
 1980 0391 77000000 		.4byte	0x77
 1981 0395 00       		.byte	0
 1982 0396 10       		.uleb128 0x10
 1983 0397 C70B0000 		.4byte	.LASF52
 1984 039b 04       		.byte	0x4
 1985 039c 7301     		.2byte	0x173
 1986 039e 77000000 		.4byte	0x77
 1987 03a2 02       		.byte	0x2
 1988 03a3 10       		.uleb128 0x10
 1989 03a4 5F010000 		.4byte	.LASF53
 1990 03a8 04       		.byte	0x4
 1991 03a9 7801     		.2byte	0x178
 1992 03ab 77000000 		.4byte	0x77
 1993 03af 04       		.byte	0x4
 1994 03b0 10       		.uleb128 0x10
 1995 03b1 F9080000 		.4byte	.LASF54
 1996 03b5 04       		.byte	0x4
 1997 03b6 7E01     		.2byte	0x17e
 1998 03b8 77000000 		.4byte	0x77
 1999 03bc 06       		.byte	0x6
 2000 03bd 10       		.uleb128 0x10
 2001 03be 53010000 		.4byte	.LASF55
 2002 03c2 04       		.byte	0x4
 2003 03c3 8301     		.2byte	0x183
 2004 03c5 77000000 		.4byte	0x77
 2005 03c9 08       		.byte	0x8
 2006 03ca 10       		.uleb128 0x10
 2007 03cb F0050000 		.4byte	.LASF56
 2008 03cf 04       		.byte	0x4
 2009 03d0 8801     		.2byte	0x188
 2010 03d2 C1000000 		.4byte	0xc1
 2011 03d6 0C       		.byte	0xc
 2012 03d7 10       		.uleb128 0x10
 2013 03d8 B8080000 		.4byte	.LASF57
 2014 03dc 04       		.byte	0x4
 2015 03dd 8E01     		.2byte	0x18e
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 90


 2016 03df 74040000 		.4byte	0x474
 2017 03e3 10       		.byte	0x10
 2018 03e4 10       		.uleb128 0x10
 2019 03e5 74090000 		.4byte	.LASF58
 2020 03e9 04       		.byte	0x4
 2021 03ea 9501     		.2byte	0x195
 2022 03ec 74040000 		.4byte	0x474
 2023 03f0 14       		.byte	0x14
 2024 03f1 10       		.uleb128 0x10
 2025 03f2 36080000 		.4byte	.LASF59
 2026 03f6 04       		.byte	0x4
 2027 03f7 A501     		.2byte	0x1a5
 2028 03f9 84040000 		.4byte	0x484
 2029 03fd 18       		.byte	0x18
 2030 03fe 10       		.uleb128 0x10
 2031 03ff A4060000 		.4byte	.LASF60
 2032 0403 04       		.byte	0x4
 2033 0404 AB01     		.2byte	0x1ab
 2034 0406 77000000 		.4byte	0x77
 2035 040a 1E       		.byte	0x1e
 2036 040b 10       		.uleb128 0x10
 2037 040c 0F040000 		.4byte	.LASF61
 2038 0410 04       		.byte	0x4
 2039 0411 B001     		.2byte	0x1b0
 2040 0413 6B000000 		.4byte	0x6b
 2041 0417 20       		.byte	0x20
 2042 0418 10       		.uleb128 0x10
 2043 0419 00000000 		.4byte	.LASF62
 2044 041d 04       		.byte	0x4
 2045 041e B501     		.2byte	0x1b5
 2046 0420 77000000 		.4byte	0x77
 2047 0424 22       		.byte	0x22
 2048 0425 10       		.uleb128 0x10
 2049 0426 69060000 		.4byte	.LASF63
 2050 042a 04       		.byte	0x4
 2051 042b BA01     		.2byte	0x1ba
 2052 042d 89020000 		.4byte	0x289
 2053 0431 24       		.byte	0x24
 2054 0432 10       		.uleb128 0x10
 2055 0433 8E030000 		.4byte	.LASF64
 2056 0437 04       		.byte	0x4
 2057 0438 BF01     		.2byte	0x1bf
 2058 043a 74030000 		.4byte	0x374
 2059 043e 6A       		.byte	0x6a
 2060 043f 10       		.uleb128 0x10
 2061 0440 BF000000 		.4byte	.LASF65
 2062 0444 04       		.byte	0x4
 2063 0445 C401     		.2byte	0x1c4
 2064 0447 6B000000 		.4byte	0x6b
 2065 044b E2       		.byte	0xe2
 2066 044c 10       		.uleb128 0x10
 2067 044d AD030000 		.4byte	.LASF66
 2068 0451 04       		.byte	0x4
 2069 0452 C901     		.2byte	0x1c9
 2070 0454 6B000000 		.4byte	0x6b
 2071 0458 E3       		.byte	0xe3
 2072 0459 10       		.uleb128 0x10
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 91


 2073 045a F7070000 		.4byte	.LASF67
 2074 045e 04       		.byte	0x4
 2075 045f CE01     		.2byte	0x1ce
 2076 0461 77000000 		.4byte	0x77
 2077 0465 E4       		.byte	0xe4
 2078 0466 10       		.uleb128 0x10
 2079 0467 7F060000 		.4byte	.LASF68
 2080 046b 04       		.byte	0x4
 2081 046c D301     		.2byte	0x1d3
 2082 046e ED020000 		.4byte	0x2ed
 2083 0472 E6       		.byte	0xe6
 2084 0473 00       		.byte	0
 2085 0474 0D       		.uleb128 0xd
 2086 0475 83000000 		.4byte	0x83
 2087 0479 84040000 		.4byte	0x484
 2088 047d 0E       		.uleb128 0xe
 2089 047e AC010000 		.4byte	0x1ac
 2090 0482 00       		.byte	0
 2091 0483 00       		.byte	0
 2092 0484 0D       		.uleb128 0xd
 2093 0485 6B000000 		.4byte	0x6b
 2094 0489 94040000 		.4byte	0x494
 2095 048d 0E       		.uleb128 0xe
 2096 048e AC010000 		.4byte	0x1ac
 2097 0492 04       		.byte	0x4
 2098 0493 00       		.byte	0
 2099 0494 04       		.uleb128 0x4
 2100 0495 DA050000 		.4byte	.LASF69
 2101 0499 04       		.byte	0x4
 2102 049a D401     		.2byte	0x1d4
 2103 049c 80030000 		.4byte	0x380
 2104 04a0 0F       		.uleb128 0xf
 2105 04a1 1C       		.byte	0x1c
 2106 04a2 04       		.byte	0x4
 2107 04a3 DA01     		.2byte	0x1da
 2108 04a5 1F050000 		.4byte	0x51f
 2109 04a9 10       		.uleb128 0x10
 2110 04aa F2060000 		.4byte	.LASF70
 2111 04ae 04       		.byte	0x4
 2112 04af DF01     		.2byte	0x1df
 2113 04b1 1F050000 		.4byte	0x51f
 2114 04b5 00       		.byte	0
 2115 04b6 10       		.uleb128 0x10
 2116 04b7 00060000 		.4byte	.LASF71
 2117 04bb 04       		.byte	0x4
 2118 04bc E401     		.2byte	0x1e4
 2119 04be 1F050000 		.4byte	0x51f
 2120 04c2 04       		.byte	0x4
 2121 04c3 10       		.uleb128 0x10
 2122 04c4 30040000 		.4byte	.LASF72
 2123 04c8 04       		.byte	0x4
 2124 04c9 E901     		.2byte	0x1e9
 2125 04cb 1F050000 		.4byte	0x51f
 2126 04cf 08       		.byte	0x8
 2127 04d0 10       		.uleb128 0x10
 2128 04d1 02090000 		.4byte	.LASF73
 2129 04d5 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 92


 2130 04d6 EE01     		.2byte	0x1ee
 2131 04d8 1F050000 		.4byte	0x51f
 2132 04dc 0C       		.byte	0xc
 2133 04dd 10       		.uleb128 0x10
 2134 04de B60A0000 		.4byte	.LASF74
 2135 04e2 04       		.byte	0x4
 2136 04e3 F301     		.2byte	0x1f3
 2137 04e5 83000000 		.4byte	0x83
 2138 04e9 10       		.byte	0x10
 2139 04ea 10       		.uleb128 0x10
 2140 04eb 53070000 		.4byte	.LASF75
 2141 04ef 04       		.byte	0x4
 2142 04f0 F801     		.2byte	0x1f8
 2143 04f2 83000000 		.4byte	0x83
 2144 04f6 14       		.byte	0x14
 2145 04f7 10       		.uleb128 0x10
 2146 04f8 AE050000 		.4byte	.LASF76
 2147 04fc 04       		.byte	0x4
 2148 04fd FD01     		.2byte	0x1fd
 2149 04ff 6B000000 		.4byte	0x6b
 2150 0503 18       		.byte	0x18
 2151 0504 10       		.uleb128 0x10
 2152 0505 CE090000 		.4byte	.LASF77
 2153 0509 04       		.byte	0x4
 2154 050a 0202     		.2byte	0x202
 2155 050c 6B000000 		.4byte	0x6b
 2156 0510 19       		.byte	0x19
 2157 0511 10       		.uleb128 0x10
 2158 0512 CB020000 		.4byte	.LASF78
 2159 0516 04       		.byte	0x4
 2160 0517 0702     		.2byte	0x207
 2161 0519 6B000000 		.4byte	0x6b
 2162 051d 1A       		.byte	0x1a
 2163 051e 00       		.byte	0
 2164 051f 06       		.uleb128 0x6
 2165 0520 04       		.byte	0x4
 2166 0521 B5000000 		.4byte	0xb5
 2167 0525 04       		.uleb128 0x4
 2168 0526 2C0B0000 		.4byte	.LASF79
 2169 052a 04       		.byte	0x4
 2170 052b 0802     		.2byte	0x208
 2171 052d A0040000 		.4byte	0x4a0
 2172 0531 0F       		.uleb128 0xf
 2173 0532 1C       		.byte	0x1c
 2174 0533 04       		.byte	0x4
 2175 0534 3B02     		.2byte	0x23b
 2176 0536 B0050000 		.4byte	0x5b0
 2177 053a 10       		.uleb128 0x10
 2178 053b 72060000 		.4byte	.LASF80
 2179 053f 04       		.byte	0x4
 2180 0540 4402     		.2byte	0x244
 2181 0542 B0050000 		.4byte	0x5b0
 2182 0546 00       		.byte	0
 2183 0547 10       		.uleb128 0x10
 2184 0548 9A0A0000 		.4byte	.LASF81
 2185 054c 04       		.byte	0x4
 2186 054d 4B02     		.2byte	0x24b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 93


 2187 054f B7050000 		.4byte	0x5b7
 2188 0553 04       		.byte	0x4
 2189 0554 10       		.uleb128 0x10
 2190 0555 13080000 		.4byte	.LASF82
 2191 0559 04       		.byte	0x4
 2192 055a 5102     		.2byte	0x251
 2193 055c B9050000 		.4byte	0x5b9
 2194 0560 08       		.byte	0x8
 2195 0561 10       		.uleb128 0x10
 2196 0562 0D070000 		.4byte	.LASF83
 2197 0566 04       		.byte	0x4
 2198 0567 5702     		.2byte	0x257
 2199 0569 B7050000 		.4byte	0x5b7
 2200 056d 0C       		.byte	0xc
 2201 056e 10       		.uleb128 0x10
 2202 056f FF090000 		.4byte	.LASF84
 2203 0573 04       		.byte	0x4
 2204 0574 5E02     		.2byte	0x25e
 2205 0576 BF050000 		.4byte	0x5bf
 2206 057a 10       		.byte	0x10
 2207 057b 10       		.uleb128 0x10
 2208 057c 870A0000 		.4byte	.LASF85
 2209 0580 04       		.byte	0x4
 2210 0581 6302     		.2byte	0x263
 2211 0583 83000000 		.4byte	0x83
 2212 0587 14       		.byte	0x14
 2213 0588 10       		.uleb128 0x10
 2214 0589 1B050000 		.4byte	.LASF86
 2215 058d 04       		.byte	0x4
 2216 058e 6A02     		.2byte	0x26a
 2217 0590 77000000 		.4byte	0x77
 2218 0594 18       		.byte	0x18
 2219 0595 10       		.uleb128 0x10
 2220 0596 BD030000 		.4byte	.LASF87
 2221 059a 04       		.byte	0x4
 2222 059b 7102     		.2byte	0x271
 2223 059d 6B000000 		.4byte	0x6b
 2224 05a1 1A       		.byte	0x1a
 2225 05a2 10       		.uleb128 0x10
 2226 05a3 6C090000 		.4byte	.LASF88
 2227 05a7 04       		.byte	0x4
 2228 05a8 7B02     		.2byte	0x27b
 2229 05aa 6B000000 		.4byte	0x6b
 2230 05ae 1B       		.byte	0x1b
 2231 05af 00       		.byte	0
 2232 05b0 06       		.uleb128 0x6
 2233 05b1 04       		.byte	0x4
 2234 05b2 B6050000 		.4byte	0x5b6
 2235 05b6 12       		.uleb128 0x12
 2236 05b7 13       		.uleb128 0x13
 2237 05b8 04       		.byte	0x4
 2238 05b9 06       		.uleb128 0x6
 2239 05ba 04       		.byte	0x4
 2240 05bb 0D030000 		.4byte	0x30d
 2241 05bf 06       		.uleb128 0x6
 2242 05c0 04       		.byte	0x4
 2243 05c1 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 94


 2244 05c5 04       		.uleb128 0x4
 2245 05c6 81000000 		.4byte	.LASF89
 2246 05ca 04       		.byte	0x4
 2247 05cb 7C02     		.2byte	0x27c
 2248 05cd 31050000 		.4byte	0x531
 2249 05d1 0F       		.uleb128 0xf
 2250 05d2 8C       		.byte	0x8c
 2251 05d3 04       		.byte	0x4
 2252 05d4 8202     		.2byte	0x282
 2253 05d6 E8050000 		.4byte	0x5e8
 2254 05da 10       		.uleb128 0x10
 2255 05db 3D0C0000 		.4byte	.LASF90
 2256 05df 04       		.byte	0x4
 2257 05e0 8702     		.2byte	0x287
 2258 05e2 E8050000 		.4byte	0x5e8
 2259 05e6 00       		.byte	0
 2260 05e7 00       		.byte	0
 2261 05e8 0D       		.uleb128 0xd
 2262 05e9 C5050000 		.4byte	0x5c5
 2263 05ed F8050000 		.4byte	0x5f8
 2264 05f1 0E       		.uleb128 0xe
 2265 05f2 AC010000 		.4byte	0x1ac
 2266 05f6 04       		.byte	0x4
 2267 05f7 00       		.byte	0
 2268 05f8 04       		.uleb128 0x4
 2269 05f9 1E080000 		.4byte	.LASF91
 2270 05fd 04       		.byte	0x4
 2271 05fe 8802     		.2byte	0x288
 2272 0600 D1050000 		.4byte	0x5d1
 2273 0604 02       		.uleb128 0x2
 2274 0605 08       		.byte	0x8
 2275 0606 04       		.byte	0x4
 2276 0607 C8060000 		.4byte	.LASF92
 2277 060b 14       		.uleb128 0x14
 2278 060c D6040000 		.4byte	.LASF97
 2279 0610 01       		.byte	0x1
 2280 0611 BE08     		.2byte	0x8be
 2281 0613 00000000 		.4byte	.LFB20
 2282 0617 06000000 		.4byte	.LFE20-.LFB20
 2283 061b 01       		.uleb128 0x1
 2284 061c 9C       		.byte	0x9c
 2285 061d 58060000 		.4byte	0x658
 2286 0621 15       		.uleb128 0x15
 2287 0622 9F070000 		.4byte	.LASF93
 2288 0626 01       		.byte	0x1
 2289 0627 BE08     		.2byte	0x8be
 2290 0629 83000000 		.4byte	0x83
 2291 062d 01       		.uleb128 0x1
 2292 062e 50       		.byte	0x50
 2293 062f 15       		.uleb128 0x15
 2294 0630 93020000 		.4byte	.LASF94
 2295 0634 01       		.byte	0x1
 2296 0635 BE08     		.2byte	0x8be
 2297 0637 58060000 		.4byte	0x658
 2298 063b 01       		.uleb128 0x1
 2299 063c 51       		.byte	0x51
 2300 063d 16       		.uleb128 0x16
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 95


 2301 063e C6030000 		.4byte	.LASF95
 2302 0642 01       		.byte	0x1
 2303 0643 C008     		.2byte	0x8c0
 2304 0645 6B000000 		.4byte	0x6b
 2305 0649 05       		.byte	0x5
 2306 064a 16       		.uleb128 0x16
 2307 064b C5010000 		.4byte	.LASF96
 2308 064f 01       		.byte	0x1
 2309 0650 C108     		.2byte	0x8c1
 2310 0652 6B000000 		.4byte	0x6b
 2311 0656 00       		.byte	0
 2312 0657 00       		.byte	0
 2313 0658 06       		.uleb128 0x6
 2314 0659 04       		.byte	0x4
 2315 065a B3010000 		.4byte	0x1b3
 2316 065e 14       		.uleb128 0x14
 2317 065f 65000000 		.4byte	.LASF98
 2318 0663 01       		.byte	0x1
 2319 0664 FA02     		.2byte	0x2fa
 2320 0666 00000000 		.4byte	.LFB7
 2321 066a 24000000 		.4byte	.LFE7-.LFB7
 2322 066e 01       		.uleb128 0x1
 2323 066f 9C       		.byte	0x9c
 2324 0670 8E060000 		.4byte	0x68e
 2325 0674 17       		.uleb128 0x17
 2326 0675 5B0B0000 		.4byte	.LASF99
 2327 0679 01       		.byte	0x1
 2328 067a FC02     		.2byte	0x2fc
 2329 067c 83000000 		.4byte	0x83
 2330 0680 00000000 		.4byte	.LLST0
 2331 0684 18       		.uleb128 0x18
 2332 0685 1A000000 		.4byte	.LVL5
 2333 0689 4F0E0000 		.4byte	0xe4f
 2334 068d 00       		.byte	0
 2335 068e 19       		.uleb128 0x19
 2336 068f B3010000 		.4byte	.LASF177
 2337 0693 01       		.byte	0x1
 2338 0694 E9       		.byte	0xe9
 2339 0695 83000000 		.4byte	0x83
 2340 0699 00000000 		.4byte	.LFB1
 2341 069d 10000000 		.4byte	.LFE1-.LFB1
 2342 06a1 01       		.uleb128 0x1
 2343 06a2 9C       		.byte	0x9c
 2344 06a3 1A       		.uleb128 0x1a
 2345 06a4 6D030000 		.4byte	.LASF102
 2346 06a8 01       		.byte	0x1
 2347 06a9 1D01     		.2byte	0x11d
 2348 06ab A4000000 		.4byte	0xa4
 2349 06af 00000000 		.4byte	.LFB2
 2350 06b3 40000000 		.4byte	.LFE2-.LFB2
 2351 06b7 01       		.uleb128 0x1
 2352 06b8 9C       		.byte	0x9c
 2353 06b9 E7060000 		.4byte	0x6e7
 2354 06bd 1B       		.uleb128 0x1b
 2355 06be FD0B0000 		.4byte	.LASF100
 2356 06c2 01       		.byte	0x1
 2357 06c3 1D01     		.2byte	0x11d
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 96


 2358 06c5 83000000 		.4byte	0x83
 2359 06c9 13000000 		.4byte	.LLST1
 2360 06cd 17       		.uleb128 0x17
 2361 06ce D00B0000 		.4byte	.LASF101
 2362 06d2 01       		.byte	0x1
 2363 06d3 1F01     		.2byte	0x11f
 2364 06d5 A4000000 		.4byte	0xa4
 2365 06d9 34000000 		.4byte	.LLST2
 2366 06dd 18       		.uleb128 0x18
 2367 06de 38000000 		.4byte	.LVL8
 2368 06e2 5B0E0000 		.4byte	0xe5b
 2369 06e6 00       		.byte	0
 2370 06e7 1A       		.uleb128 0x1a
 2371 06e8 C3070000 		.4byte	.LASF103
 2372 06ec 01       		.byte	0x1
 2373 06ed 7001     		.2byte	0x170
 2374 06ef A4000000 		.4byte	0xa4
 2375 06f3 00000000 		.4byte	.LFB3
 2376 06f7 2C000000 		.4byte	.LFE3-.LFB3
 2377 06fb 01       		.uleb128 0x1
 2378 06fc 9C       		.byte	0x9c
 2379 06fd 1B070000 		.4byte	0x71b
 2380 0701 17       		.uleb128 0x17
 2381 0702 9C000000 		.4byte	.LASF104
 2382 0706 01       		.byte	0x1
 2383 0707 7201     		.2byte	0x172
 2384 0709 A4000000 		.4byte	0xa4
 2385 070d 52000000 		.4byte	.LLST3
 2386 0711 18       		.uleb128 0x18
 2387 0712 16000000 		.4byte	.LVL11
 2388 0716 670E0000 		.4byte	0xe67
 2389 071a 00       		.byte	0
 2390 071b 1A       		.uleb128 0x1a
 2391 071c 94050000 		.4byte	.LASF105
 2392 0720 01       		.byte	0x1
 2393 0721 AE01     		.2byte	0x1ae
 2394 0723 A4000000 		.4byte	0xa4
 2395 0727 00000000 		.4byte	.LFB4
 2396 072b 48000000 		.4byte	.LFE4-.LFB4
 2397 072f 01       		.uleb128 0x1
 2398 0730 9C       		.byte	0x9c
 2399 0731 73070000 		.4byte	0x773
 2400 0735 17       		.uleb128 0x17
 2401 0736 9C000000 		.4byte	.LASF104
 2402 073a 01       		.byte	0x1
 2403 073b B001     		.2byte	0x1b0
 2404 073d A4000000 		.4byte	0xa4
 2405 0741 71000000 		.4byte	.LLST4
 2406 0745 17       		.uleb128 0x17
 2407 0746 9F070000 		.4byte	.LASF93
 2408 074a 01       		.byte	0x1
 2409 074b B201     		.2byte	0x1b2
 2410 074d 83000000 		.4byte	0x83
 2411 0751 BF000000 		.4byte	.LLST5
 2412 0755 1C       		.uleb128 0x1c
 2413 0756 18000000 		.4byte	.LVL16
 2414 075a A3060000 		.4byte	0x6a3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 97


 2415 075e 69070000 		.4byte	0x769
 2416 0762 1D       		.uleb128 0x1d
 2417 0763 01       		.uleb128 0x1
 2418 0764 50       		.byte	0x50
 2419 0765 02       		.uleb128 0x2
 2420 0766 74       		.byte	0x74
 2421 0767 00       		.sleb128 0
 2422 0768 00       		.byte	0
 2423 0769 18       		.uleb128 0x18
 2424 076a 32000000 		.4byte	.LVL17
 2425 076e E7060000 		.4byte	0x6e7
 2426 0772 00       		.byte	0
 2427 0773 1E       		.uleb128 0x1e
 2428 0774 BF040000 		.4byte	.LASF112
 2429 0778 01       		.byte	0x1
 2430 0779 8902     		.2byte	0x289
 2431 077b 00000000 		.4byte	.LFB6
 2432 077f A0000000 		.4byte	.LFE6-.LFB6
 2433 0783 01       		.uleb128 0x1
 2434 0784 9C       		.byte	0x9c
 2435 0785 3D080000 		.4byte	0x83d
 2436 0789 1B       		.uleb128 0x1b
 2437 078a FD0B0000 		.4byte	.LASF100
 2438 078e 01       		.byte	0x1
 2439 078f 8902     		.2byte	0x289
 2440 0791 83000000 		.4byte	0x83
 2441 0795 D2000000 		.4byte	.LLST6
 2442 0799 1B       		.uleb128 0x1b
 2443 079a 0A000000 		.4byte	.LASF106
 2444 079e 01       		.byte	0x1
 2445 079f 8902     		.2byte	0x289
 2446 07a1 83000000 		.4byte	0x83
 2447 07a5 F3000000 		.4byte	.LLST7
 2448 07a9 1B       		.uleb128 0x1b
 2449 07aa A60A0000 		.4byte	.LASF107
 2450 07ae 01       		.byte	0x1
 2451 07af 8902     		.2byte	0x289
 2452 07b1 83000000 		.4byte	0x83
 2453 07b5 14010000 		.4byte	.LLST8
 2454 07b9 16       		.uleb128 0x16
 2455 07ba 8B020000 		.4byte	.LASF108
 2456 07be 01       		.byte	0x1
 2457 07bf 8B02     		.2byte	0x28b
 2458 07c1 83000000 		.4byte	0x83
 2459 07c5 01       		.byte	0x1
 2460 07c6 17       		.uleb128 0x17
 2461 07c7 AC0A0000 		.4byte	.LASF109
 2462 07cb 01       		.byte	0x1
 2463 07cc 8C02     		.2byte	0x28c
 2464 07ce 83000000 		.4byte	0x83
 2465 07d2 40010000 		.4byte	.LLST9
 2466 07d6 17       		.uleb128 0x17
 2467 07d7 A4010000 		.4byte	.LASF110
 2468 07db 01       		.byte	0x1
 2469 07dc 8D02     		.2byte	0x28d
 2470 07de 6B000000 		.4byte	0x6b
 2471 07e2 5F010000 		.4byte	.LLST10
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 98


 2472 07e6 17       		.uleb128 0x17
 2473 07e7 940A0000 		.4byte	.LASF111
 2474 07eb 01       		.byte	0x1
 2475 07ec 8E02     		.2byte	0x28e
 2476 07ee 3D080000 		.4byte	0x83d
 2477 07f2 88010000 		.4byte	.LLST11
 2478 07f6 18       		.uleb128 0x18
 2479 07f7 1E000000 		.4byte	.LVL27
 2480 07fb 730E0000 		.4byte	0xe73
 2481 07ff 18       		.uleb128 0x18
 2482 0800 3E000000 		.4byte	.LVL28
 2483 0804 7E0E0000 		.4byte	0xe7e
 2484 0808 18       		.uleb128 0x18
 2485 0809 50000000 		.4byte	.LVL29
 2486 080d 730E0000 		.4byte	0xe73
 2487 0811 18       		.uleb128 0x18
 2488 0812 70000000 		.4byte	.LVL30
 2489 0816 7E0E0000 		.4byte	0xe7e
 2490 081a 18       		.uleb128 0x18
 2491 081b 76000000 		.4byte	.LVL31
 2492 081f 730E0000 		.4byte	0xe73
 2493 0823 18       		.uleb128 0x18
 2494 0824 88000000 		.4byte	.LVL32
 2495 0828 7E0E0000 		.4byte	0xe7e
 2496 082c 1F       		.uleb128 0x1f
 2497 082d 90000000 		.4byte	.LVL33
 2498 0831 890E0000 		.4byte	0xe89
 2499 0835 1D       		.uleb128 0x1d
 2500 0836 01       		.uleb128 0x1
 2501 0837 50       		.byte	0x50
 2502 0838 02       		.uleb128 0x2
 2503 0839 74       		.byte	0x74
 2504 083a 00       		.sleb128 0
 2505 083b 00       		.byte	0
 2506 083c 00       		.byte	0
 2507 083d 06       		.uleb128 0x6
 2508 083e 04       		.byte	0x4
 2509 083f 43080000 		.4byte	0x843
 2510 0843 20       		.uleb128 0x20
 2511 0844 25050000 		.4byte	0x525
 2512 0848 1E       		.uleb128 0x1e
 2513 0849 5A050000 		.4byte	.LASF113
 2514 084d 01       		.byte	0x1
 2515 084e 8503     		.2byte	0x385
 2516 0850 00000000 		.4byte	.LFB8
 2517 0854 3C000000 		.4byte	.LFE8-.LFB8
 2518 0858 01       		.uleb128 0x1
 2519 0859 9C       		.byte	0x9c
 2520 085a 81080000 		.4byte	0x881
 2521 085e 1B       		.uleb128 0x1b
 2522 085f 0E020000 		.4byte	.LASF114
 2523 0863 01       		.byte	0x1
 2524 0864 8503     		.2byte	0x385
 2525 0866 1C010000 		.4byte	0x11c
 2526 086a 9B010000 		.4byte	.LLST12
 2527 086e 18       		.uleb128 0x18
 2528 086f 14000000 		.4byte	.LVL40
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 99


 2529 0873 5E060000 		.4byte	0x65e
 2530 0877 18       		.uleb128 0x18
 2531 0878 1C000000 		.4byte	.LVL41
 2532 087c 950E0000 		.4byte	0xe95
 2533 0880 00       		.byte	0
 2534 0881 1E       		.uleb128 0x1e
 2535 0882 19010000 		.4byte	.LASF115
 2536 0886 01       		.byte	0x1
 2537 0887 E803     		.2byte	0x3e8
 2538 0889 00000000 		.4byte	.LFB9
 2539 088d 40000000 		.4byte	.LFE9-.LFB9
 2540 0891 01       		.uleb128 0x1
 2541 0892 9C       		.byte	0x9c
 2542 0893 C8080000 		.4byte	0x8c8
 2543 0897 17       		.uleb128 0x17
 2544 0898 940A0000 		.4byte	.LASF111
 2545 089c 01       		.byte	0x1
 2546 089d EA03     		.2byte	0x3ea
 2547 089f 3D080000 		.4byte	0x83d
 2548 08a3 BC010000 		.4byte	.LLST13
 2549 08a7 17       		.uleb128 0x17
 2550 08a8 BB020000 		.4byte	.LASF116
 2551 08ac 01       		.byte	0x1
 2552 08ad EB03     		.2byte	0x3eb
 2553 08af 83000000 		.4byte	0x83
 2554 08b3 CF010000 		.4byte	.LLST14
 2555 08b7 17       		.uleb128 0x17
 2556 08b8 89010000 		.4byte	.LASF117
 2557 08bc 01       		.byte	0x1
 2558 08bd EC03     		.2byte	0x3ec
 2559 08bf 83000000 		.4byte	0x83
 2560 08c3 EE010000 		.4byte	.LLST15
 2561 08c7 00       		.byte	0
 2562 08c8 1E       		.uleb128 0x1e
 2563 08c9 060C0000 		.4byte	.LASF118
 2564 08cd 01       		.byte	0x1
 2565 08ce 6204     		.2byte	0x462
 2566 08d0 00000000 		.4byte	.LFB10
 2567 08d4 78000000 		.4byte	.LFE10-.LFB10
 2568 08d8 01       		.uleb128 0x1
 2569 08d9 9C       		.byte	0x9c
 2570 08da 01090000 		.4byte	0x901
 2571 08de 17       		.uleb128 0x17
 2572 08df 40080000 		.4byte	.LASF119
 2573 08e3 01       		.byte	0x1
 2574 08e4 6A04     		.2byte	0x46a
 2575 08e6 A4000000 		.4byte	0xa4
 2576 08ea 17020000 		.4byte	.LLST16
 2577 08ee 18       		.uleb128 0x18
 2578 08ef 14000000 		.4byte	.LVL54
 2579 08f3 A3060000 		.4byte	0x6a3
 2580 08f7 18       		.uleb128 0x18
 2581 08f8 2A000000 		.4byte	.LVL56
 2582 08fc E7060000 		.4byte	0x6e7
 2583 0900 00       		.byte	0
 2584 0901 1E       		.uleb128 0x1e
 2585 0902 36040000 		.4byte	.LASF120
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 100


 2586 0906 01       		.byte	0x1
 2587 0907 AF04     		.2byte	0x4af
 2588 0909 00000000 		.4byte	.LFB11
 2589 090d 08000000 		.4byte	.LFE11-.LFB11
 2590 0911 01       		.uleb128 0x1
 2591 0912 9C       		.byte	0x9c
 2592 0913 39090000 		.4byte	0x939
 2593 0917 1B       		.uleb128 0x1b
 2594 0918 EF090000 		.4byte	.LASF121
 2595 091c 01       		.byte	0x1
 2596 091d AF04     		.2byte	0x4af
 2597 091f C6000000 		.4byte	0xc6
 2598 0923 62020000 		.4byte	.LLST17
 2599 0927 1F       		.uleb128 0x1f
 2600 0928 06000000 		.4byte	.LVL63
 2601 092c A10E0000 		.4byte	0xea1
 2602 0930 1D       		.uleb128 0x1d
 2603 0931 01       		.uleb128 0x1
 2604 0932 50       		.byte	0x50
 2605 0933 03       		.uleb128 0x3
 2606 0934 F3       		.byte	0xf3
 2607 0935 01       		.uleb128 0x1
 2608 0936 50       		.byte	0x50
 2609 0937 00       		.byte	0
 2610 0938 00       		.byte	0
 2611 0939 1E       		.uleb128 0x1e
 2612 093a F8040000 		.4byte	.LASF122
 2613 093e 01       		.byte	0x1
 2614 093f C604     		.2byte	0x4c6
 2615 0941 00000000 		.4byte	.LFB12
 2616 0945 30000000 		.4byte	.LFE12-.LFB12
 2617 0949 01       		.uleb128 0x1
 2618 094a 9C       		.byte	0x9c
 2619 094b 60090000 		.4byte	0x960
 2620 094f 1B       		.uleb128 0x1b
 2621 0950 27050000 		.4byte	.LASF123
 2622 0954 01       		.byte	0x1
 2623 0955 C604     		.2byte	0x4c6
 2624 0957 83000000 		.4byte	0x83
 2625 095b 83020000 		.4byte	.LLST18
 2626 095f 00       		.byte	0
 2627 0960 1E       		.uleb128 0x1e
 2628 0961 39060000 		.4byte	.LASF124
 2629 0965 01       		.byte	0x1
 2630 0966 0A05     		.2byte	0x50a
 2631 0968 00000000 		.4byte	.LFB13
 2632 096c 14000000 		.4byte	.LFE13-.LFB13
 2633 0970 01       		.uleb128 0x1
 2634 0971 9C       		.byte	0x9c
 2635 0972 97090000 		.4byte	0x997
 2636 0976 1B       		.uleb128 0x1b
 2637 0977 EA0A0000 		.4byte	.LASF125
 2638 097b 01       		.byte	0x1
 2639 097c 0A05     		.2byte	0x50a
 2640 097e 83000000 		.4byte	0x83
 2641 0982 B1020000 		.4byte	.LLST19
 2642 0986 17       		.uleb128 0x17
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 101


 2643 0987 5B0B0000 		.4byte	.LASF99
 2644 098b 01       		.byte	0x1
 2645 098c 0D05     		.2byte	0x50d
 2646 098e 83000000 		.4byte	0x83
 2647 0992 DF020000 		.4byte	.LLST20
 2648 0996 00       		.byte	0
 2649 0997 1E       		.uleb128 0x1e
 2650 0998 C3080000 		.4byte	.LASF126
 2651 099c 01       		.byte	0x1
 2652 099d 5E05     		.2byte	0x55e
 2653 099f 00000000 		.4byte	.LFB14
 2654 09a3 12000000 		.4byte	.LFE14-.LFB14
 2655 09a7 01       		.uleb128 0x1
 2656 09a8 9C       		.byte	0x9c
 2657 09a9 F3090000 		.4byte	0x9f3
 2658 09ad 1B       		.uleb128 0x1b
 2659 09ae EA0A0000 		.4byte	.LASF125
 2660 09b2 01       		.byte	0x1
 2661 09b3 5E05     		.2byte	0x55e
 2662 09b5 83000000 		.4byte	0x83
 2663 09b9 08030000 		.4byte	.LLST21
 2664 09bd 1B       		.uleb128 0x1b
 2665 09be 27050000 		.4byte	.LASF123
 2666 09c2 01       		.byte	0x1
 2667 09c3 5E05     		.2byte	0x55e
 2668 09c5 83000000 		.4byte	0x83
 2669 09c9 34030000 		.4byte	.LLST22
 2670 09cd 1C       		.uleb128 0x1c
 2671 09ce 0A000000 		.4byte	.LVL75
 2672 09d2 39090000 		.4byte	0x939
 2673 09d6 E2090000 		.4byte	0x9e2
 2674 09da 1D       		.uleb128 0x1d
 2675 09db 01       		.uleb128 0x1
 2676 09dc 50       		.byte	0x50
 2677 09dd 03       		.uleb128 0x3
 2678 09de F3       		.byte	0xf3
 2679 09df 01       		.uleb128 0x1
 2680 09e0 51       		.byte	0x51
 2681 09e1 00       		.byte	0
 2682 09e2 1F       		.uleb128 0x1f
 2683 09e3 10000000 		.4byte	.LVL76
 2684 09e7 60090000 		.4byte	0x960
 2685 09eb 1D       		.uleb128 0x1d
 2686 09ec 01       		.uleb128 0x1
 2687 09ed 50       		.byte	0x50
 2688 09ee 02       		.uleb128 0x2
 2689 09ef 74       		.byte	0x74
 2690 09f0 00       		.sleb128 0
 2691 09f1 00       		.byte	0
 2692 09f2 00       		.byte	0
 2693 09f3 1A       		.uleb128 0x1a
 2694 09f4 F3010000 		.4byte	.LASF127
 2695 09f8 01       		.byte	0x1
 2696 09f9 9205     		.2byte	0x592
 2697 09fb A4000000 		.4byte	0xa4
 2698 09ff 00000000 		.4byte	.LFB15
 2699 0a03 1C000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 102


 2700 0a07 01       		.uleb128 0x1
 2701 0a08 9C       		.byte	0x9c
 2702 0a09 450A0000 		.4byte	0xa45
 2703 0a0d 1B       		.uleb128 0x1b
 2704 0a0e FD0B0000 		.4byte	.LASF100
 2705 0a12 01       		.byte	0x1
 2706 0a13 9205     		.2byte	0x592
 2707 0a15 83000000 		.4byte	0x83
 2708 0a19 55030000 		.4byte	.LLST23
 2709 0a1d 17       		.uleb128 0x17
 2710 0a1e 59060000 		.4byte	.LASF128
 2711 0a22 01       		.byte	0x1
 2712 0a23 9405     		.2byte	0x594
 2713 0a25 A4000000 		.4byte	0xa4
 2714 0a29 97030000 		.4byte	.LLST24
 2715 0a2d 1F       		.uleb128 0x1f
 2716 0a2e 1A000000 		.4byte	.LVL84
 2717 0a32 AC0E0000 		.4byte	0xeac
 2718 0a36 1D       		.uleb128 0x1d
 2719 0a37 01       		.uleb128 0x1
 2720 0a38 50       		.byte	0x50
 2721 0a39 03       		.uleb128 0x3
 2722 0a3a F3       		.byte	0xf3
 2723 0a3b 01       		.uleb128 0x1
 2724 0a3c 50       		.byte	0x50
 2725 0a3d 1D       		.uleb128 0x1d
 2726 0a3e 01       		.uleb128 0x1
 2727 0a3f 51       		.byte	0x51
 2728 0a40 02       		.uleb128 0x2
 2729 0a41 08       		.byte	0x8
 2730 0a42 55       		.byte	0x55
 2731 0a43 00       		.byte	0
 2732 0a44 00       		.byte	0
 2733 0a45 1A       		.uleb128 0x1a
 2734 0a46 370A0000 		.4byte	.LASF129
 2735 0a4a 01       		.byte	0x1
 2736 0a4b 0306     		.2byte	0x603
 2737 0a4d A4000000 		.4byte	0xa4
 2738 0a51 00000000 		.4byte	.LFB16
 2739 0a55 1A000000 		.4byte	.LFE16-.LFB16
 2740 0a59 01       		.uleb128 0x1
 2741 0a5a 9C       		.byte	0x9c
 2742 0a5b 900A0000 		.4byte	0xa90
 2743 0a5f 17       		.uleb128 0x17
 2744 0a60 59060000 		.4byte	.LASF128
 2745 0a64 01       		.byte	0x1
 2746 0a65 0506     		.2byte	0x605
 2747 0a67 A4000000 		.4byte	0xa4
 2748 0a6b C1030000 		.4byte	.LLST25
 2749 0a6f 17       		.uleb128 0x17
 2750 0a70 9F070000 		.4byte	.LASF93
 2751 0a74 01       		.byte	0x1
 2752 0a75 0606     		.2byte	0x606
 2753 0a77 83000000 		.4byte	0x83
 2754 0a7b EB030000 		.4byte	.LLST26
 2755 0a7f 1F       		.uleb128 0x1f
 2756 0a80 0E000000 		.4byte	.LVL87
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 103


 2757 0a84 F3090000 		.4byte	0x9f3
 2758 0a88 1D       		.uleb128 0x1d
 2759 0a89 01       		.uleb128 0x1
 2760 0a8a 50       		.byte	0x50
 2761 0a8b 02       		.uleb128 0x2
 2762 0a8c 74       		.byte	0x74
 2763 0a8d 00       		.sleb128 0
 2764 0a8e 00       		.byte	0
 2765 0a8f 00       		.byte	0
 2766 0a90 1E       		.uleb128 0x1e
 2767 0a91 84070000 		.4byte	.LASF130
 2768 0a95 01       		.byte	0x1
 2769 0a96 B507     		.2byte	0x7b5
 2770 0a98 00000000 		.4byte	.LFB17
 2771 0a9c 14000000 		.4byte	.LFE17-.LFB17
 2772 0aa0 01       		.uleb128 0x1
 2773 0aa1 9C       		.byte	0x9c
 2774 0aa2 B70A0000 		.4byte	0xab7
 2775 0aa6 1B       		.uleb128 0x1b
 2776 0aa7 09040000 		.4byte	.LASF131
 2777 0aab 01       		.byte	0x1
 2778 0aac B507     		.2byte	0x7b5
 2779 0aae 83000000 		.4byte	0x83
 2780 0ab2 0A040000 		.4byte	.LLST27
 2781 0ab6 00       		.byte	0
 2782 0ab7 1E       		.uleb128 0x1e
 2783 0ab8 CF000000 		.4byte	.LASF132
 2784 0abc 01       		.byte	0x1
 2785 0abd CA07     		.2byte	0x7ca
 2786 0abf 00000000 		.4byte	.LFB18
 2787 0ac3 74000000 		.4byte	.LFE18-.LFB18
 2788 0ac7 01       		.uleb128 0x1
 2789 0ac8 9C       		.byte	0x9c
 2790 0ac9 740B0000 		.4byte	0xb74
 2791 0acd 1B       		.uleb128 0x1b
 2792 0ace 5E0A0000 		.4byte	.LASF133
 2793 0ad2 01       		.byte	0x1
 2794 0ad3 CA07     		.2byte	0x7ca
 2795 0ad5 83000000 		.4byte	0x83
 2796 0ad9 2B040000 		.4byte	.LLST28
 2797 0add 17       		.uleb128 0x17
 2798 0ade B90B0000 		.4byte	.LASF134
 2799 0ae2 01       		.byte	0x1
 2800 0ae3 CC07     		.2byte	0x7cc
 2801 0ae5 83000000 		.4byte	0x83
 2802 0ae9 4C040000 		.4byte	.LLST29
 2803 0aed 17       		.uleb128 0x17
 2804 0aee 8F060000 		.4byte	.LASF135
 2805 0af2 01       		.byte	0x1
 2806 0af3 CD07     		.2byte	0x7cd
 2807 0af5 83000000 		.4byte	0x83
 2808 0af9 5F040000 		.4byte	.LLST30
 2809 0afd 17       		.uleb128 0x17
 2810 0afe BC060000 		.4byte	.LASF136
 2811 0b02 01       		.byte	0x1
 2812 0b03 CE07     		.2byte	0x7ce
 2813 0b05 83000000 		.4byte	0x83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 104


 2814 0b09 8A040000 		.4byte	.LLST31
 2815 0b0d 17       		.uleb128 0x17
 2816 0b0e C0050000 		.4byte	.LASF137
 2817 0b12 01       		.byte	0x1
 2818 0b13 D207     		.2byte	0x7d2
 2819 0b15 83000000 		.4byte	0x83
 2820 0b19 B5040000 		.4byte	.LLST32
 2821 0b1d 17       		.uleb128 0x17
 2822 0b1e 63030000 		.4byte	.LASF138
 2823 0b22 01       		.byte	0x1
 2824 0b23 D807     		.2byte	0x7d8
 2825 0b25 83000000 		.4byte	0x83
 2826 0b29 C8040000 		.4byte	.LLST33
 2827 0b2d 21       		.uleb128 0x21
 2828 0b2e 7A0A0000 		.4byte	.LASF178
 2829 0b32 01       		.byte	0x1
 2830 0b33 DE07     		.2byte	0x7de
 2831 0b35 740B0000 		.4byte	0xb74
 2832 0b39 17       		.uleb128 0x17
 2833 0b3a 93020000 		.4byte	.LASF94
 2834 0b3e 01       		.byte	0x1
 2835 0b3f DF07     		.2byte	0x7df
 2836 0b41 7F0B0000 		.4byte	0xb7f
 2837 0b45 F0040000 		.4byte	.LLST34
 2838 0b49 1C       		.uleb128 0x1c
 2839 0b4a 46000000 		.4byte	.LVL107
 2840 0b4e B80E0000 		.4byte	0xeb8
 2841 0b52 630B0000 		.4byte	0xb63
 2842 0b56 1D       		.uleb128 0x1d
 2843 0b57 01       		.uleb128 0x1
 2844 0b58 50       		.byte	0x50
 2845 0b59 02       		.uleb128 0x2
 2846 0b5a 75       		.byte	0x75
 2847 0b5b 00       		.sleb128 0
 2848 0b5c 1D       		.uleb128 0x1d
 2849 0b5d 01       		.uleb128 0x1
 2850 0b5e 52       		.byte	0x52
 2851 0b5f 02       		.uleb128 0x2
 2852 0b60 74       		.byte	0x74
 2853 0b61 00       		.sleb128 0
 2854 0b62 00       		.byte	0
 2855 0b63 1F       		.uleb128 0x1f
 2856 0b64 62000000 		.4byte	.LVL113
 2857 0b68 60090000 		.4byte	0x960
 2858 0b6c 1D       		.uleb128 0x1d
 2859 0b6d 01       		.uleb128 0x1
 2860 0b6e 50       		.byte	0x50
 2861 0b6f 02       		.uleb128 0x2
 2862 0b70 75       		.byte	0x75
 2863 0b71 00       		.sleb128 0
 2864 0b72 00       		.byte	0
 2865 0b73 00       		.byte	0
 2866 0b74 06       		.uleb128 0x6
 2867 0b75 04       		.byte	0x4
 2868 0b76 7A0B0000 		.4byte	0xb7a
 2869 0b7a 20       		.uleb128 0x20
 2870 0b7b C5050000 		.4byte	0x5c5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 105


 2871 0b7f 06       		.uleb128 0x6
 2872 0b80 04       		.byte	0x4
 2873 0b81 850B0000 		.4byte	0xb85
 2874 0b85 20       		.uleb128 0x20
 2875 0b86 B3010000 		.4byte	0x1b3
 2876 0b8a 1E       		.uleb128 0x1e
 2877 0b8b 13020000 		.4byte	.LASF139
 2878 0b8f 01       		.byte	0x1
 2879 0b90 8908     		.2byte	0x889
 2880 0b92 00000000 		.4byte	.LFB19
 2881 0b96 24000000 		.4byte	.LFE19-.LFB19
 2882 0b9a 01       		.uleb128 0x1
 2883 0b9b 9C       		.byte	0x9c
 2884 0b9c D10B0000 		.4byte	0xbd1
 2885 0ba0 17       		.uleb128 0x17
 2886 0ba1 9F070000 		.4byte	.LASF93
 2887 0ba5 01       		.byte	0x1
 2888 0ba6 8B08     		.2byte	0x88b
 2889 0ba8 83000000 		.4byte	0x83
 2890 0bac 03050000 		.4byte	.LLST35
 2891 0bb0 17       		.uleb128 0x17
 2892 0bb1 93020000 		.4byte	.LASF94
 2893 0bb5 01       		.byte	0x1
 2894 0bb6 8C08     		.2byte	0x88c
 2895 0bb8 58060000 		.4byte	0x658
 2896 0bbc 22050000 		.4byte	.LLST36
 2897 0bc0 1F       		.uleb128 0x1f
 2898 0bc1 18000000 		.4byte	.LVL118
 2899 0bc5 0B060000 		.4byte	0x60b
 2900 0bc9 1D       		.uleb128 0x1d
 2901 0bca 01       		.uleb128 0x1
 2902 0bcb 50       		.byte	0x50
 2903 0bcc 02       		.uleb128 0x2
 2904 0bcd 74       		.byte	0x74
 2905 0bce 00       		.sleb128 0
 2906 0bcf 00       		.byte	0
 2907 0bd0 00       		.byte	0
 2908 0bd1 1A       		.uleb128 0x1a
 2909 0bd2 3B010000 		.4byte	.LASF140
 2910 0bd6 01       		.byte	0x1
 2911 0bd7 0402     		.2byte	0x204
 2912 0bd9 A4000000 		.4byte	0xa4
 2913 0bdd 00000000 		.4byte	.LFB5
 2914 0be1 54000000 		.4byte	.LFE5-.LFB5
 2915 0be5 01       		.uleb128 0x1
 2916 0be6 9C       		.byte	0x9c
 2917 0be7 2A0C0000 		.4byte	0xc2a
 2918 0beb 16       		.uleb128 0x16
 2919 0bec 7E010000 		.4byte	.LASF141
 2920 0bf0 01       		.byte	0x1
 2921 0bf1 0602     		.2byte	0x206
 2922 0bf3 A4000000 		.4byte	0xa4
 2923 0bf7 00       		.byte	0
 2924 0bf8 17       		.uleb128 0x17
 2925 0bf9 EA000000 		.4byte	.LASF142
 2926 0bfd 01       		.byte	0x1
 2927 0bfe 0A02     		.2byte	0x20a
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 106


 2928 0c00 6B000000 		.4byte	0x6b
 2929 0c04 35050000 		.4byte	.LLST37
 2930 0c08 18       		.uleb128 0x18
 2931 0c09 3E000000 		.4byte	.LVL128
 2932 0c0d 8A0B0000 		.4byte	0xb8a
 2933 0c11 18       		.uleb128 0x18
 2934 0c12 42000000 		.4byte	.LVL129
 2935 0c16 81080000 		.4byte	0x881
 2936 0c1a 1F       		.uleb128 0x1f
 2937 0c1b 48000000 		.4byte	.LVL130
 2938 0c1f 48080000 		.4byte	0x848
 2939 0c23 1D       		.uleb128 0x1d
 2940 0c24 01       		.uleb128 0x1
 2941 0c25 50       		.byte	0x50
 2942 0c26 01       		.uleb128 0x1
 2943 0c27 31       		.byte	0x31
 2944 0c28 00       		.byte	0
 2945 0c29 00       		.byte	0
 2946 0c2a 1E       		.uleb128 0x1e
 2947 0c2b 670B0000 		.4byte	.LASF143
 2948 0c2f 01       		.byte	0x1
 2949 0c30 060A     		.2byte	0xa06
 2950 0c32 00000000 		.4byte	.LFB21
 2951 0c36 40000000 		.4byte	.LFE21-.LFB21
 2952 0c3a 01       		.uleb128 0x1
 2953 0c3b 9C       		.byte	0x9c
 2954 0c3c 8B0C0000 		.4byte	0xc8b
 2955 0c40 17       		.uleb128 0x17
 2956 0c41 9F070000 		.4byte	.LASF93
 2957 0c45 01       		.byte	0x1
 2958 0c46 080A     		.2byte	0xa08
 2959 0c48 83000000 		.4byte	0x83
 2960 0c4c 8B050000 		.4byte	.LLST38
 2961 0c50 17       		.uleb128 0x17
 2962 0c51 A9070000 		.4byte	.LASF144
 2963 0c55 01       		.byte	0x1
 2964 0c56 090A     		.2byte	0xa09
 2965 0c58 83000000 		.4byte	0x83
 2966 0c5c AA050000 		.4byte	.LLST39
 2967 0c60 17       		.uleb128 0x17
 2968 0c61 DE0A0000 		.4byte	.LASF145
 2969 0c65 01       		.byte	0x1
 2970 0c66 150A     		.2byte	0xa15
 2971 0c68 3D080000 		.4byte	0x83d
 2972 0c6c C9050000 		.4byte	.LLST40
 2973 0c70 1F       		.uleb128 0x1f
 2974 0c71 20000000 		.4byte	.LVL135
 2975 0c75 C40E0000 		.4byte	0xec4
 2976 0c79 1D       		.uleb128 0x1d
 2977 0c7a 01       		.uleb128 0x1
 2978 0c7b 50       		.byte	0x50
 2979 0c7c 0C       		.uleb128 0xc
 2980 0c7d 74       		.byte	0x74
 2981 0c7e 00       		.sleb128 0
 2982 0c7f 33       		.byte	0x33
 2983 0c80 24       		.byte	0x24
 2984 0c81 74       		.byte	0x74
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 107


 2985 0c82 00       		.sleb128 0
 2986 0c83 1C       		.byte	0x1c
 2987 0c84 32       		.byte	0x32
 2988 0c85 24       		.byte	0x24
 2989 0c86 76       		.byte	0x76
 2990 0c87 00       		.sleb128 0
 2991 0c88 22       		.byte	0x22
 2992 0c89 00       		.byte	0
 2993 0c8a 00       		.byte	0
 2994 0c8b 1A       		.uleb128 0x1a
 2995 0c8c 2E050000 		.4byte	.LASF146
 2996 0c90 01       		.byte	0x1
 2997 0c91 580A     		.2byte	0xa58
 2998 0c93 83000000 		.4byte	0x83
 2999 0c97 00000000 		.4byte	.LFB22
 3000 0c9b 0C000000 		.4byte	.LFE22-.LFB22
 3001 0c9f 01       		.uleb128 0x1
 3002 0ca0 9C       		.byte	0x9c
 3003 0ca1 C40C0000 		.4byte	0xcc4
 3004 0ca5 1B       		.uleb128 0x1b
 3005 0ca6 FD0B0000 		.4byte	.LASF100
 3006 0caa 01       		.byte	0x1
 3007 0cab 580A     		.2byte	0xa58
 3008 0cad 83000000 		.4byte	0x83
 3009 0cb1 DC050000 		.4byte	.LLST41
 3010 0cb5 22       		.uleb128 0x22
 3011 0cb6 E8090000 		.4byte	.LASF147
 3012 0cba 01       		.byte	0x1
 3013 0cbb 5A0A     		.2byte	0xa5a
 3014 0cbd 83000000 		.4byte	0x83
 3015 0cc1 01       		.uleb128 0x1
 3016 0cc2 50       		.byte	0x50
 3017 0cc3 00       		.byte	0
 3018 0cc4 1E       		.uleb128 0x1e
 3019 0cc5 8B080000 		.4byte	.LASF148
 3020 0cc9 01       		.byte	0x1
 3021 0cca 820A     		.2byte	0xa82
 3022 0ccc 00000000 		.4byte	.LFB23
 3023 0cd0 0C000000 		.4byte	.LFE23-.LFB23
 3024 0cd4 01       		.uleb128 0x1
 3025 0cd5 9C       		.byte	0x9c
 3026 0cd6 F70C0000 		.4byte	0xcf7
 3027 0cda 15       		.uleb128 0x15
 3028 0cdb FD0B0000 		.4byte	.LASF100
 3029 0cdf 01       		.byte	0x1
 3030 0ce0 820A     		.2byte	0xa82
 3031 0ce2 83000000 		.4byte	0x83
 3032 0ce6 01       		.uleb128 0x1
 3033 0ce7 50       		.byte	0x50
 3034 0ce8 15       		.uleb128 0x15
 3035 0ce9 E8010000 		.4byte	.LASF149
 3036 0ced 01       		.byte	0x1
 3037 0cee 820A     		.2byte	0xa82
 3038 0cf0 83000000 		.4byte	0x83
 3039 0cf4 01       		.uleb128 0x1
 3040 0cf5 51       		.byte	0x51
 3041 0cf6 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 108


 3042 0cf7 1E       		.uleb128 0x1e
 3043 0cf8 18000000 		.4byte	.LASF150
 3044 0cfc 01       		.byte	0x1
 3045 0cfd 060B     		.2byte	0xb06
 3046 0cff 00000000 		.4byte	.LFB24
 3047 0d03 60000000 		.4byte	.LFE24-.LFB24
 3048 0d07 01       		.uleb128 0x1
 3049 0d08 9C       		.byte	0x9c
 3050 0d09 890D0000 		.4byte	0xd89
 3051 0d0d 17       		.uleb128 0x17
 3052 0d0e 5B0B0000 		.4byte	.LASF99
 3053 0d12 01       		.byte	0x1
 3054 0d13 080B     		.2byte	0xb08
 3055 0d15 83000000 		.4byte	0x83
 3056 0d19 FD050000 		.4byte	.LLST42
 3057 0d1d 17       		.uleb128 0x17
 3058 0d1e A4010000 		.4byte	.LASF110
 3059 0d22 01       		.byte	0x1
 3060 0d23 090B     		.2byte	0xb09
 3061 0d25 6B000000 		.4byte	0x6b
 3062 0d29 31060000 		.4byte	.LLST43
 3063 0d2d 18       		.uleb128 0x18
 3064 0d2e 06000000 		.4byte	.LVL142
 3065 0d32 730E0000 		.4byte	0xe73
 3066 0d36 18       		.uleb128 0x18
 3067 0d37 14000000 		.4byte	.LVL145
 3068 0d3b 7E0E0000 		.4byte	0xe7e
 3069 0d3f 18       		.uleb128 0x18
 3070 0d40 18000000 		.4byte	.LVL146
 3071 0d44 730E0000 		.4byte	0xe73
 3072 0d48 18       		.uleb128 0x18
 3073 0d49 26000000 		.4byte	.LVL149
 3074 0d4d 7E0E0000 		.4byte	0xe7e
 3075 0d51 18       		.uleb128 0x18
 3076 0d52 2A000000 		.4byte	.LVL150
 3077 0d56 730E0000 		.4byte	0xe73
 3078 0d5a 18       		.uleb128 0x18
 3079 0d5b 3C000000 		.4byte	.LVL154
 3080 0d5f 7E0E0000 		.4byte	0xe7e
 3081 0d63 1C       		.uleb128 0x1c
 3082 0d64 42000000 		.4byte	.LVL155
 3083 0d68 D00E0000 		.4byte	0xed0
 3084 0d6c 760D0000 		.4byte	0xd76
 3085 0d70 1D       		.uleb128 0x1d
 3086 0d71 01       		.uleb128 0x1
 3087 0d72 50       		.byte	0x50
 3088 0d73 01       		.uleb128 0x1
 3089 0d74 31       		.byte	0x31
 3090 0d75 00       		.byte	0
 3091 0d76 18       		.uleb128 0x18
 3092 0d77 46000000 		.4byte	.LVL156
 3093 0d7b 730E0000 		.4byte	0xe73
 3094 0d7f 18       		.uleb128 0x18
 3095 0d80 50000000 		.4byte	.LVL159
 3096 0d84 7E0E0000 		.4byte	0xe7e
 3097 0d88 00       		.byte	0
 3098 0d89 23       		.uleb128 0x23
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 109


 3099 0d8a B2070000 		.4byte	.LASF151
 3100 0d8e 04       		.byte	0x4
 3101 0d8f 2A04     		.2byte	0x42a
 3102 0d91 94040000 		.4byte	0x494
 3103 0d95 23       		.uleb128 0x23
 3104 0d96 E1080000 		.4byte	.LASF152
 3105 0d9a 04       		.byte	0x4
 3106 0d9b 2B04     		.2byte	0x42b
 3107 0d9d A10D0000 		.4byte	0xda1
 3108 0da1 20       		.uleb128 0x20
 3109 0da2 F8050000 		.4byte	0x5f8
 3110 0da6 0D       		.uleb128 0xd
 3111 0da7 43080000 		.4byte	0x843
 3112 0dab B60D0000 		.4byte	0xdb6
 3113 0daf 0E       		.uleb128 0xe
 3114 0db0 AC010000 		.4byte	0x1ac
 3115 0db4 04       		.byte	0x4
 3116 0db5 00       		.byte	0
 3117 0db6 23       		.uleb128 0x23
 3118 0db7 92010000 		.4byte	.LASF153
 3119 0dbb 04       		.byte	0x4
 3120 0dbc 2C04     		.2byte	0x42c
 3121 0dbe C20D0000 		.4byte	0xdc2
 3122 0dc2 20       		.uleb128 0x20
 3123 0dc3 A60D0000 		.4byte	0xda6
 3124 0dc7 24       		.uleb128 0x24
 3125 0dc8 260C0000 		.4byte	.LASF154
 3126 0dcc 01       		.byte	0x1
 3127 0dcd BB       		.byte	0xbb
 3128 0dce B0000000 		.4byte	0xb0
 3129 0dd2 05       		.uleb128 0x5
 3130 0dd3 03       		.byte	0x3
 3131 0dd4 00000000 		.4byte	CapSense_1_widgetIndex
 3132 0dd8 24       		.uleb128 0x24
 3133 0dd9 99090000 		.4byte	.LASF155
 3134 0ddd 01       		.byte	0x1
 3135 0dde BC       		.byte	0xbc
 3136 0ddf B0000000 		.4byte	0xb0
 3137 0de3 05       		.uleb128 0x5
 3138 0de4 03       		.byte	0x3
 3139 0de5 00000000 		.4byte	CapSense_1_sensorIndex
 3140 0de9 24       		.uleb128 0x24
 3141 0dea 9B020000 		.4byte	.LASF156
 3142 0dee 01       		.byte	0x1
 3143 0def BD       		.byte	0xbd
 3144 0df0 6B000000 		.4byte	0x6b
 3145 0df4 05       		.uleb128 0x5
 3146 0df5 03       		.byte	0x3
 3147 0df6 00000000 		.4byte	CapSense_1_requestScanAllWidget
 3148 0dfa 24       		.uleb128 0x24
 3149 0dfb A7000000 		.4byte	.LASF157
 3150 0dff 01       		.byte	0x1
 3151 0e00 C0       		.byte	0xc0
 3152 0e01 B9050000 		.4byte	0x5b9
 3153 0e05 05       		.uleb128 0x5
 3154 0e06 03       		.byte	0x3
 3155 0e07 00000000 		.4byte	CapSense_1_curRamSnsPtr
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 110


 3156 0e0b 24       		.uleb128 0x24
 3157 0e0c C00A0000 		.4byte	.LASF158
 3158 0e10 01       		.byte	0x1
 3159 0e11 AE       		.byte	0xae
 3160 0e12 1C010000 		.4byte	0x11c
 3161 0e16 05       		.uleb128 0x5
 3162 0e17 03       		.byte	0x3
 3163 0e18 00000000 		.4byte	CapSense_1_currentSenseMethod
 3164 0e1c 24       		.uleb128 0x24
 3165 0e1d 39020000 		.4byte	.LASF159
 3166 0e21 01       		.byte	0x1
 3167 0e22 B2       		.byte	0xb2
 3168 0e23 6B000000 		.4byte	0x6b
 3169 0e27 05       		.uleb128 0x5
 3170 0e28 03       		.byte	0x3
 3171 0e29 00000000 		.4byte	CapSense_1_scanFreqIndex
 3172 0e2d 24       		.uleb128 0x24
 3173 0e2e 470B0000 		.4byte	.LASF160
 3174 0e32 01       		.byte	0x1
 3175 0e33 B4       		.byte	0xb4
 3176 0e34 9C010000 		.4byte	0x19c
 3177 0e38 05       		.uleb128 0x5
 3178 0e39 03       		.byte	0x3
 3179 0e3a 00000000 		.4byte	CapSense_1_immunity
 3180 0e3e 24       		.uleb128 0x24
 3181 0e3f 67010000 		.4byte	.LASF161
 3182 0e43 01       		.byte	0x1
 3183 0e44 CF       		.byte	0xcf
 3184 0e45 3D080000 		.4byte	0x83d
 3185 0e49 05       		.uleb128 0x5
 3186 0e4a 03       		.byte	0x3
 3187 0e4b 00000000 		.4byte	CapSense_1_curSnsIOPtr
 3188 0e4f 25       		.uleb128 0x25
 3189 0e50 0F0A0000 		.4byte	.LASF162
 3190 0e54 0F0A0000 		.4byte	.LASF162
 3191 0e58 05       		.byte	0x5
 3192 0e59 D401     		.2byte	0x1d4
 3193 0e5b 25       		.uleb128 0x25
 3194 0e5c 7F090000 		.4byte	.LASF163
 3195 0e60 7F090000 		.4byte	.LASF163
 3196 0e64 05       		.byte	0x5
 3197 0e65 B701     		.2byte	0x1b7
 3198 0e67 25       		.uleb128 0x25
 3199 0e68 F9000000 		.4byte	.LASF164
 3200 0e6c F9000000 		.4byte	.LASF164
 3201 0e70 05       		.byte	0x5
 3202 0e71 B901     		.2byte	0x1b9
 3203 0e73 26       		.uleb128 0x26
 3204 0e74 F10A0000 		.4byte	.LASF165
 3205 0e78 F10A0000 		.4byte	.LASF165
 3206 0e7c 06       		.byte	0x6
 3207 0e7d E5       		.byte	0xe5
 3208 0e7e 26       		.uleb128 0x26
 3209 0e7f 7E050000 		.4byte	.LASF166
 3210 0e83 7E050000 		.4byte	.LASF166
 3211 0e87 06       		.byte	0x6
 3212 0e88 E6       		.byte	0xe6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 111


 3213 0e89 25       		.uleb128 0x25
 3214 0e8a CF010000 		.4byte	.LASF167
 3215 0e8e CF010000 		.4byte	.LASF167
 3216 0e92 05       		.byte	0x5
 3217 0e93 C001     		.2byte	0x1c0
 3218 0e95 25       		.uleb128 0x25
 3219 0e96 52020000 		.4byte	.LASF168
 3220 0e9a 52020000 		.4byte	.LASF168
 3221 0e9e 05       		.byte	0x5
 3222 0e9f D001     		.2byte	0x1d0
 3223 0ea1 26       		.uleb128 0x26
 3224 0ea2 19040000 		.4byte	.LASF169
 3225 0ea6 19040000 		.4byte	.LASF169
 3226 0eaa 07       		.byte	0x7
 3227 0eab 18       		.byte	0x18
 3228 0eac 25       		.uleb128 0x25
 3229 0ead 4E090000 		.4byte	.LASF170
 3230 0eb1 4E090000 		.4byte	.LASF170
 3231 0eb5 05       		.byte	0x5
 3232 0eb6 BD01     		.2byte	0x1bd
 3233 0eb8 25       		.uleb128 0x25
 3234 0eb9 3E000000 		.4byte	.LASF171
 3235 0ebd 3E000000 		.4byte	.LASF171
 3236 0ec1 05       		.byte	0x5
 3237 0ec2 DB01     		.2byte	0x1db
 3238 0ec4 25       		.uleb128 0x25
 3239 0ec5 65080000 		.4byte	.LASF172
 3240 0ec9 65080000 		.4byte	.LASF172
 3241 0ecd 05       		.byte	0x5
 3242 0ece C101     		.2byte	0x1c1
 3243 0ed0 26       		.uleb128 0x26
 3244 0ed1 84030000 		.4byte	.LASF173
 3245 0ed5 84030000 		.4byte	.LASF173
 3246 0ed9 06       		.byte	0x6
 3247 0eda DA       		.byte	0xda
 3248 0edb 00       		.byte	0
 3249              		.section	.debug_abbrev,"",%progbits
 3250              	.Ldebug_abbrev0:
 3251 0000 01       		.uleb128 0x1
 3252 0001 11       		.uleb128 0x11
 3253 0002 01       		.byte	0x1
 3254 0003 25       		.uleb128 0x25
 3255 0004 0E       		.uleb128 0xe
 3256 0005 13       		.uleb128 0x13
 3257 0006 0B       		.uleb128 0xb
 3258 0007 03       		.uleb128 0x3
 3259 0008 0E       		.uleb128 0xe
 3260 0009 1B       		.uleb128 0x1b
 3261 000a 0E       		.uleb128 0xe
 3262 000b 55       		.uleb128 0x55
 3263 000c 17       		.uleb128 0x17
 3264 000d 11       		.uleb128 0x11
 3265 000e 01       		.uleb128 0x1
 3266 000f 10       		.uleb128 0x10
 3267 0010 17       		.uleb128 0x17
 3268 0011 00       		.byte	0
 3269 0012 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 112


 3270 0013 02       		.uleb128 0x2
 3271 0014 24       		.uleb128 0x24
 3272 0015 00       		.byte	0
 3273 0016 0B       		.uleb128 0xb
 3274 0017 0B       		.uleb128 0xb
 3275 0018 3E       		.uleb128 0x3e
 3276 0019 0B       		.uleb128 0xb
 3277 001a 03       		.uleb128 0x3
 3278 001b 0E       		.uleb128 0xe
 3279 001c 00       		.byte	0
 3280 001d 00       		.byte	0
 3281 001e 03       		.uleb128 0x3
 3282 001f 24       		.uleb128 0x24
 3283 0020 00       		.byte	0
 3284 0021 0B       		.uleb128 0xb
 3285 0022 0B       		.uleb128 0xb
 3286 0023 3E       		.uleb128 0x3e
 3287 0024 0B       		.uleb128 0xb
 3288 0025 03       		.uleb128 0x3
 3289 0026 08       		.uleb128 0x8
 3290 0027 00       		.byte	0
 3291 0028 00       		.byte	0
 3292 0029 04       		.uleb128 0x4
 3293 002a 16       		.uleb128 0x16
 3294 002b 00       		.byte	0
 3295 002c 03       		.uleb128 0x3
 3296 002d 0E       		.uleb128 0xe
 3297 002e 3A       		.uleb128 0x3a
 3298 002f 0B       		.uleb128 0xb
 3299 0030 3B       		.uleb128 0x3b
 3300 0031 05       		.uleb128 0x5
 3301 0032 49       		.uleb128 0x49
 3302 0033 13       		.uleb128 0x13
 3303 0034 00       		.byte	0
 3304 0035 00       		.byte	0
 3305 0036 05       		.uleb128 0x5
 3306 0037 35       		.uleb128 0x35
 3307 0038 00       		.byte	0
 3308 0039 49       		.uleb128 0x49
 3309 003a 13       		.uleb128 0x13
 3310 003b 00       		.byte	0
 3311 003c 00       		.byte	0
 3312 003d 06       		.uleb128 0x6
 3313 003e 0F       		.uleb128 0xf
 3314 003f 00       		.byte	0
 3315 0040 0B       		.uleb128 0xb
 3316 0041 0B       		.uleb128 0xb
 3317 0042 49       		.uleb128 0x49
 3318 0043 13       		.uleb128 0x13
 3319 0044 00       		.byte	0
 3320 0045 00       		.byte	0
 3321 0046 07       		.uleb128 0x7
 3322 0047 15       		.uleb128 0x15
 3323 0048 00       		.byte	0
 3324 0049 27       		.uleb128 0x27
 3325 004a 19       		.uleb128 0x19
 3326 004b 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 113


 3327 004c 00       		.byte	0
 3328 004d 08       		.uleb128 0x8
 3329 004e 04       		.uleb128 0x4
 3330 004f 01       		.byte	0x1
 3331 0050 0B       		.uleb128 0xb
 3332 0051 0B       		.uleb128 0xb
 3333 0052 49       		.uleb128 0x49
 3334 0053 13       		.uleb128 0x13
 3335 0054 3A       		.uleb128 0x3a
 3336 0055 0B       		.uleb128 0xb
 3337 0056 3B       		.uleb128 0x3b
 3338 0057 0B       		.uleb128 0xb
 3339 0058 01       		.uleb128 0x1
 3340 0059 13       		.uleb128 0x13
 3341 005a 00       		.byte	0
 3342 005b 00       		.byte	0
 3343 005c 09       		.uleb128 0x9
 3344 005d 28       		.uleb128 0x28
 3345 005e 00       		.byte	0
 3346 005f 03       		.uleb128 0x3
 3347 0060 0E       		.uleb128 0xe
 3348 0061 1C       		.uleb128 0x1c
 3349 0062 0B       		.uleb128 0xb
 3350 0063 00       		.byte	0
 3351 0064 00       		.byte	0
 3352 0065 0A       		.uleb128 0xa
 3353 0066 16       		.uleb128 0x16
 3354 0067 00       		.byte	0
 3355 0068 03       		.uleb128 0x3
 3356 0069 0E       		.uleb128 0xe
 3357 006a 3A       		.uleb128 0x3a
 3358 006b 0B       		.uleb128 0xb
 3359 006c 3B       		.uleb128 0x3b
 3360 006d 0B       		.uleb128 0xb
 3361 006e 49       		.uleb128 0x49
 3362 006f 13       		.uleb128 0x13
 3363 0070 00       		.byte	0
 3364 0071 00       		.byte	0
 3365 0072 0B       		.uleb128 0xb
 3366 0073 13       		.uleb128 0x13
 3367 0074 01       		.byte	0x1
 3368 0075 0B       		.uleb128 0xb
 3369 0076 0B       		.uleb128 0xb
 3370 0077 3A       		.uleb128 0x3a
 3371 0078 0B       		.uleb128 0xb
 3372 0079 3B       		.uleb128 0x3b
 3373 007a 0B       		.uleb128 0xb
 3374 007b 01       		.uleb128 0x1
 3375 007c 13       		.uleb128 0x13
 3376 007d 00       		.byte	0
 3377 007e 00       		.byte	0
 3378 007f 0C       		.uleb128 0xc
 3379 0080 0D       		.uleb128 0xd
 3380 0081 00       		.byte	0
 3381 0082 03       		.uleb128 0x3
 3382 0083 0E       		.uleb128 0xe
 3383 0084 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 114


 3384 0085 0B       		.uleb128 0xb
 3385 0086 3B       		.uleb128 0x3b
 3386 0087 0B       		.uleb128 0xb
 3387 0088 49       		.uleb128 0x49
 3388 0089 13       		.uleb128 0x13
 3389 008a 38       		.uleb128 0x38
 3390 008b 0B       		.uleb128 0xb
 3391 008c 00       		.byte	0
 3392 008d 00       		.byte	0
 3393 008e 0D       		.uleb128 0xd
 3394 008f 01       		.uleb128 0x1
 3395 0090 01       		.byte	0x1
 3396 0091 49       		.uleb128 0x49
 3397 0092 13       		.uleb128 0x13
 3398 0093 01       		.uleb128 0x1
 3399 0094 13       		.uleb128 0x13
 3400 0095 00       		.byte	0
 3401 0096 00       		.byte	0
 3402 0097 0E       		.uleb128 0xe
 3403 0098 21       		.uleb128 0x21
 3404 0099 00       		.byte	0
 3405 009a 49       		.uleb128 0x49
 3406 009b 13       		.uleb128 0x13
 3407 009c 2F       		.uleb128 0x2f
 3408 009d 0B       		.uleb128 0xb
 3409 009e 00       		.byte	0
 3410 009f 00       		.byte	0
 3411 00a0 0F       		.uleb128 0xf
 3412 00a1 13       		.uleb128 0x13
 3413 00a2 01       		.byte	0x1
 3414 00a3 0B       		.uleb128 0xb
 3415 00a4 0B       		.uleb128 0xb
 3416 00a5 3A       		.uleb128 0x3a
 3417 00a6 0B       		.uleb128 0xb
 3418 00a7 3B       		.uleb128 0x3b
 3419 00a8 05       		.uleb128 0x5
 3420 00a9 01       		.uleb128 0x1
 3421 00aa 13       		.uleb128 0x13
 3422 00ab 00       		.byte	0
 3423 00ac 00       		.byte	0
 3424 00ad 10       		.uleb128 0x10
 3425 00ae 0D       		.uleb128 0xd
 3426 00af 00       		.byte	0
 3427 00b0 03       		.uleb128 0x3
 3428 00b1 0E       		.uleb128 0xe
 3429 00b2 3A       		.uleb128 0x3a
 3430 00b3 0B       		.uleb128 0xb
 3431 00b4 3B       		.uleb128 0x3b
 3432 00b5 05       		.uleb128 0x5
 3433 00b6 49       		.uleb128 0x49
 3434 00b7 13       		.uleb128 0x13
 3435 00b8 38       		.uleb128 0x38
 3436 00b9 0B       		.uleb128 0xb
 3437 00ba 00       		.byte	0
 3438 00bb 00       		.byte	0
 3439 00bc 11       		.uleb128 0x11
 3440 00bd 0D       		.uleb128 0xd
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 115


 3441 00be 00       		.byte	0
 3442 00bf 03       		.uleb128 0x3
 3443 00c0 08       		.uleb128 0x8
 3444 00c1 3A       		.uleb128 0x3a
 3445 00c2 0B       		.uleb128 0xb
 3446 00c3 3B       		.uleb128 0x3b
 3447 00c4 05       		.uleb128 0x5
 3448 00c5 49       		.uleb128 0x49
 3449 00c6 13       		.uleb128 0x13
 3450 00c7 38       		.uleb128 0x38
 3451 00c8 0B       		.uleb128 0xb
 3452 00c9 00       		.byte	0
 3453 00ca 00       		.byte	0
 3454 00cb 12       		.uleb128 0x12
 3455 00cc 26       		.uleb128 0x26
 3456 00cd 00       		.byte	0
 3457 00ce 00       		.byte	0
 3458 00cf 00       		.byte	0
 3459 00d0 13       		.uleb128 0x13
 3460 00d1 0F       		.uleb128 0xf
 3461 00d2 00       		.byte	0
 3462 00d3 0B       		.uleb128 0xb
 3463 00d4 0B       		.uleb128 0xb
 3464 00d5 00       		.byte	0
 3465 00d6 00       		.byte	0
 3466 00d7 14       		.uleb128 0x14
 3467 00d8 2E       		.uleb128 0x2e
 3468 00d9 01       		.byte	0x1
 3469 00da 03       		.uleb128 0x3
 3470 00db 0E       		.uleb128 0xe
 3471 00dc 3A       		.uleb128 0x3a
 3472 00dd 0B       		.uleb128 0xb
 3473 00de 3B       		.uleb128 0x3b
 3474 00df 05       		.uleb128 0x5
 3475 00e0 27       		.uleb128 0x27
 3476 00e1 19       		.uleb128 0x19
 3477 00e2 11       		.uleb128 0x11
 3478 00e3 01       		.uleb128 0x1
 3479 00e4 12       		.uleb128 0x12
 3480 00e5 06       		.uleb128 0x6
 3481 00e6 40       		.uleb128 0x40
 3482 00e7 18       		.uleb128 0x18
 3483 00e8 9742     		.uleb128 0x2117
 3484 00ea 19       		.uleb128 0x19
 3485 00eb 01       		.uleb128 0x1
 3486 00ec 13       		.uleb128 0x13
 3487 00ed 00       		.byte	0
 3488 00ee 00       		.byte	0
 3489 00ef 15       		.uleb128 0x15
 3490 00f0 05       		.uleb128 0x5
 3491 00f1 00       		.byte	0
 3492 00f2 03       		.uleb128 0x3
 3493 00f3 0E       		.uleb128 0xe
 3494 00f4 3A       		.uleb128 0x3a
 3495 00f5 0B       		.uleb128 0xb
 3496 00f6 3B       		.uleb128 0x3b
 3497 00f7 05       		.uleb128 0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 116


 3498 00f8 49       		.uleb128 0x49
 3499 00f9 13       		.uleb128 0x13
 3500 00fa 02       		.uleb128 0x2
 3501 00fb 18       		.uleb128 0x18
 3502 00fc 00       		.byte	0
 3503 00fd 00       		.byte	0
 3504 00fe 16       		.uleb128 0x16
 3505 00ff 34       		.uleb128 0x34
 3506 0100 00       		.byte	0
 3507 0101 03       		.uleb128 0x3
 3508 0102 0E       		.uleb128 0xe
 3509 0103 3A       		.uleb128 0x3a
 3510 0104 0B       		.uleb128 0xb
 3511 0105 3B       		.uleb128 0x3b
 3512 0106 05       		.uleb128 0x5
 3513 0107 49       		.uleb128 0x49
 3514 0108 13       		.uleb128 0x13
 3515 0109 1C       		.uleb128 0x1c
 3516 010a 0B       		.uleb128 0xb
 3517 010b 00       		.byte	0
 3518 010c 00       		.byte	0
 3519 010d 17       		.uleb128 0x17
 3520 010e 34       		.uleb128 0x34
 3521 010f 00       		.byte	0
 3522 0110 03       		.uleb128 0x3
 3523 0111 0E       		.uleb128 0xe
 3524 0112 3A       		.uleb128 0x3a
 3525 0113 0B       		.uleb128 0xb
 3526 0114 3B       		.uleb128 0x3b
 3527 0115 05       		.uleb128 0x5
 3528 0116 49       		.uleb128 0x49
 3529 0117 13       		.uleb128 0x13
 3530 0118 02       		.uleb128 0x2
 3531 0119 17       		.uleb128 0x17
 3532 011a 00       		.byte	0
 3533 011b 00       		.byte	0
 3534 011c 18       		.uleb128 0x18
 3535 011d 898201   		.uleb128 0x4109
 3536 0120 00       		.byte	0
 3537 0121 11       		.uleb128 0x11
 3538 0122 01       		.uleb128 0x1
 3539 0123 31       		.uleb128 0x31
 3540 0124 13       		.uleb128 0x13
 3541 0125 00       		.byte	0
 3542 0126 00       		.byte	0
 3543 0127 19       		.uleb128 0x19
 3544 0128 2E       		.uleb128 0x2e
 3545 0129 00       		.byte	0
 3546 012a 3F       		.uleb128 0x3f
 3547 012b 19       		.uleb128 0x19
 3548 012c 03       		.uleb128 0x3
 3549 012d 0E       		.uleb128 0xe
 3550 012e 3A       		.uleb128 0x3a
 3551 012f 0B       		.uleb128 0xb
 3552 0130 3B       		.uleb128 0x3b
 3553 0131 0B       		.uleb128 0xb
 3554 0132 27       		.uleb128 0x27
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 117


 3555 0133 19       		.uleb128 0x19
 3556 0134 49       		.uleb128 0x49
 3557 0135 13       		.uleb128 0x13
 3558 0136 11       		.uleb128 0x11
 3559 0137 01       		.uleb128 0x1
 3560 0138 12       		.uleb128 0x12
 3561 0139 06       		.uleb128 0x6
 3562 013a 40       		.uleb128 0x40
 3563 013b 18       		.uleb128 0x18
 3564 013c 9742     		.uleb128 0x2117
 3565 013e 19       		.uleb128 0x19
 3566 013f 00       		.byte	0
 3567 0140 00       		.byte	0
 3568 0141 1A       		.uleb128 0x1a
 3569 0142 2E       		.uleb128 0x2e
 3570 0143 01       		.byte	0x1
 3571 0144 3F       		.uleb128 0x3f
 3572 0145 19       		.uleb128 0x19
 3573 0146 03       		.uleb128 0x3
 3574 0147 0E       		.uleb128 0xe
 3575 0148 3A       		.uleb128 0x3a
 3576 0149 0B       		.uleb128 0xb
 3577 014a 3B       		.uleb128 0x3b
 3578 014b 05       		.uleb128 0x5
 3579 014c 27       		.uleb128 0x27
 3580 014d 19       		.uleb128 0x19
 3581 014e 49       		.uleb128 0x49
 3582 014f 13       		.uleb128 0x13
 3583 0150 11       		.uleb128 0x11
 3584 0151 01       		.uleb128 0x1
 3585 0152 12       		.uleb128 0x12
 3586 0153 06       		.uleb128 0x6
 3587 0154 40       		.uleb128 0x40
 3588 0155 18       		.uleb128 0x18
 3589 0156 9742     		.uleb128 0x2117
 3590 0158 19       		.uleb128 0x19
 3591 0159 01       		.uleb128 0x1
 3592 015a 13       		.uleb128 0x13
 3593 015b 00       		.byte	0
 3594 015c 00       		.byte	0
 3595 015d 1B       		.uleb128 0x1b
 3596 015e 05       		.uleb128 0x5
 3597 015f 00       		.byte	0
 3598 0160 03       		.uleb128 0x3
 3599 0161 0E       		.uleb128 0xe
 3600 0162 3A       		.uleb128 0x3a
 3601 0163 0B       		.uleb128 0xb
 3602 0164 3B       		.uleb128 0x3b
 3603 0165 05       		.uleb128 0x5
 3604 0166 49       		.uleb128 0x49
 3605 0167 13       		.uleb128 0x13
 3606 0168 02       		.uleb128 0x2
 3607 0169 17       		.uleb128 0x17
 3608 016a 00       		.byte	0
 3609 016b 00       		.byte	0
 3610 016c 1C       		.uleb128 0x1c
 3611 016d 898201   		.uleb128 0x4109
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 118


 3612 0170 01       		.byte	0x1
 3613 0171 11       		.uleb128 0x11
 3614 0172 01       		.uleb128 0x1
 3615 0173 31       		.uleb128 0x31
 3616 0174 13       		.uleb128 0x13
 3617 0175 01       		.uleb128 0x1
 3618 0176 13       		.uleb128 0x13
 3619 0177 00       		.byte	0
 3620 0178 00       		.byte	0
 3621 0179 1D       		.uleb128 0x1d
 3622 017a 8A8201   		.uleb128 0x410a
 3623 017d 00       		.byte	0
 3624 017e 02       		.uleb128 0x2
 3625 017f 18       		.uleb128 0x18
 3626 0180 9142     		.uleb128 0x2111
 3627 0182 18       		.uleb128 0x18
 3628 0183 00       		.byte	0
 3629 0184 00       		.byte	0
 3630 0185 1E       		.uleb128 0x1e
 3631 0186 2E       		.uleb128 0x2e
 3632 0187 01       		.byte	0x1
 3633 0188 3F       		.uleb128 0x3f
 3634 0189 19       		.uleb128 0x19
 3635 018a 03       		.uleb128 0x3
 3636 018b 0E       		.uleb128 0xe
 3637 018c 3A       		.uleb128 0x3a
 3638 018d 0B       		.uleb128 0xb
 3639 018e 3B       		.uleb128 0x3b
 3640 018f 05       		.uleb128 0x5
 3641 0190 27       		.uleb128 0x27
 3642 0191 19       		.uleb128 0x19
 3643 0192 11       		.uleb128 0x11
 3644 0193 01       		.uleb128 0x1
 3645 0194 12       		.uleb128 0x12
 3646 0195 06       		.uleb128 0x6
 3647 0196 40       		.uleb128 0x40
 3648 0197 18       		.uleb128 0x18
 3649 0198 9742     		.uleb128 0x2117
 3650 019a 19       		.uleb128 0x19
 3651 019b 01       		.uleb128 0x1
 3652 019c 13       		.uleb128 0x13
 3653 019d 00       		.byte	0
 3654 019e 00       		.byte	0
 3655 019f 1F       		.uleb128 0x1f
 3656 01a0 898201   		.uleb128 0x4109
 3657 01a3 01       		.byte	0x1
 3658 01a4 11       		.uleb128 0x11
 3659 01a5 01       		.uleb128 0x1
 3660 01a6 31       		.uleb128 0x31
 3661 01a7 13       		.uleb128 0x13
 3662 01a8 00       		.byte	0
 3663 01a9 00       		.byte	0
 3664 01aa 20       		.uleb128 0x20
 3665 01ab 26       		.uleb128 0x26
 3666 01ac 00       		.byte	0
 3667 01ad 49       		.uleb128 0x49
 3668 01ae 13       		.uleb128 0x13
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 119


 3669 01af 00       		.byte	0
 3670 01b0 00       		.byte	0
 3671 01b1 21       		.uleb128 0x21
 3672 01b2 34       		.uleb128 0x34
 3673 01b3 00       		.byte	0
 3674 01b4 03       		.uleb128 0x3
 3675 01b5 0E       		.uleb128 0xe
 3676 01b6 3A       		.uleb128 0x3a
 3677 01b7 0B       		.uleb128 0xb
 3678 01b8 3B       		.uleb128 0x3b
 3679 01b9 05       		.uleb128 0x5
 3680 01ba 49       		.uleb128 0x49
 3681 01bb 13       		.uleb128 0x13
 3682 01bc 00       		.byte	0
 3683 01bd 00       		.byte	0
 3684 01be 22       		.uleb128 0x22
 3685 01bf 34       		.uleb128 0x34
 3686 01c0 00       		.byte	0
 3687 01c1 03       		.uleb128 0x3
 3688 01c2 0E       		.uleb128 0xe
 3689 01c3 3A       		.uleb128 0x3a
 3690 01c4 0B       		.uleb128 0xb
 3691 01c5 3B       		.uleb128 0x3b
 3692 01c6 05       		.uleb128 0x5
 3693 01c7 49       		.uleb128 0x49
 3694 01c8 13       		.uleb128 0x13
 3695 01c9 02       		.uleb128 0x2
 3696 01ca 18       		.uleb128 0x18
 3697 01cb 00       		.byte	0
 3698 01cc 00       		.byte	0
 3699 01cd 23       		.uleb128 0x23
 3700 01ce 34       		.uleb128 0x34
 3701 01cf 00       		.byte	0
 3702 01d0 03       		.uleb128 0x3
 3703 01d1 0E       		.uleb128 0xe
 3704 01d2 3A       		.uleb128 0x3a
 3705 01d3 0B       		.uleb128 0xb
 3706 01d4 3B       		.uleb128 0x3b
 3707 01d5 05       		.uleb128 0x5
 3708 01d6 49       		.uleb128 0x49
 3709 01d7 13       		.uleb128 0x13
 3710 01d8 3F       		.uleb128 0x3f
 3711 01d9 19       		.uleb128 0x19
 3712 01da 3C       		.uleb128 0x3c
 3713 01db 19       		.uleb128 0x19
 3714 01dc 00       		.byte	0
 3715 01dd 00       		.byte	0
 3716 01de 24       		.uleb128 0x24
 3717 01df 34       		.uleb128 0x34
 3718 01e0 00       		.byte	0
 3719 01e1 03       		.uleb128 0x3
 3720 01e2 0E       		.uleb128 0xe
 3721 01e3 3A       		.uleb128 0x3a
 3722 01e4 0B       		.uleb128 0xb
 3723 01e5 3B       		.uleb128 0x3b
 3724 01e6 0B       		.uleb128 0xb
 3725 01e7 49       		.uleb128 0x49
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 120


 3726 01e8 13       		.uleb128 0x13
 3727 01e9 3F       		.uleb128 0x3f
 3728 01ea 19       		.uleb128 0x19
 3729 01eb 02       		.uleb128 0x2
 3730 01ec 18       		.uleb128 0x18
 3731 01ed 00       		.byte	0
 3732 01ee 00       		.byte	0
 3733 01ef 25       		.uleb128 0x25
 3734 01f0 2E       		.uleb128 0x2e
 3735 01f1 00       		.byte	0
 3736 01f2 3F       		.uleb128 0x3f
 3737 01f3 19       		.uleb128 0x19
 3738 01f4 3C       		.uleb128 0x3c
 3739 01f5 19       		.uleb128 0x19
 3740 01f6 6E       		.uleb128 0x6e
 3741 01f7 0E       		.uleb128 0xe
 3742 01f8 03       		.uleb128 0x3
 3743 01f9 0E       		.uleb128 0xe
 3744 01fa 3A       		.uleb128 0x3a
 3745 01fb 0B       		.uleb128 0xb
 3746 01fc 3B       		.uleb128 0x3b
 3747 01fd 05       		.uleb128 0x5
 3748 01fe 00       		.byte	0
 3749 01ff 00       		.byte	0
 3750 0200 26       		.uleb128 0x26
 3751 0201 2E       		.uleb128 0x2e
 3752 0202 00       		.byte	0
 3753 0203 3F       		.uleb128 0x3f
 3754 0204 19       		.uleb128 0x19
 3755 0205 3C       		.uleb128 0x3c
 3756 0206 19       		.uleb128 0x19
 3757 0207 6E       		.uleb128 0x6e
 3758 0208 0E       		.uleb128 0xe
 3759 0209 03       		.uleb128 0x3
 3760 020a 0E       		.uleb128 0xe
 3761 020b 3A       		.uleb128 0x3a
 3762 020c 0B       		.uleb128 0xb
 3763 020d 3B       		.uleb128 0x3b
 3764 020e 0B       		.uleb128 0xb
 3765 020f 00       		.byte	0
 3766 0210 00       		.byte	0
 3767 0211 00       		.byte	0
 3768              		.section	.debug_loc,"",%progbits
 3769              	.Ldebug_loc0:
 3770              	.LLST0:
 3771 0000 06000000 		.4byte	.LVL1
 3772 0004 19000000 		.4byte	.LVL5-1
 3773 0008 0100     		.2byte	0x1
 3774 000a 53       		.byte	0x53
 3775 000b 00000000 		.4byte	0
 3776 000f 00000000 		.4byte	0
 3777              	.LLST1:
 3778 0013 00000000 		.4byte	.LVL6
 3779 0017 37000000 		.4byte	.LVL8-1
 3780 001b 0100     		.2byte	0x1
 3781 001d 50       		.byte	0x50
 3782 001e 37000000 		.4byte	.LVL8-1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 121


 3783 0022 40000000 		.4byte	.LFE2
 3784 0026 0400     		.2byte	0x4
 3785 0028 F3       		.byte	0xf3
 3786 0029 01       		.uleb128 0x1
 3787 002a 50       		.byte	0x50
 3788 002b 9F       		.byte	0x9f
 3789 002c 00000000 		.4byte	0
 3790 0030 00000000 		.4byte	0
 3791              	.LLST2:
 3792 0034 30000000 		.4byte	.LVL7
 3793 0038 3A000000 		.4byte	.LVL9
 3794 003c 0100     		.2byte	0x1
 3795 003e 54       		.byte	0x54
 3796 003f 3A000000 		.4byte	.LVL9
 3797 0043 40000000 		.4byte	.LFE2
 3798 0047 0100     		.2byte	0x1
 3799 0049 50       		.byte	0x50
 3800 004a 00000000 		.4byte	0
 3801 004e 00000000 		.4byte	0
 3802              	.LLST3:
 3803 0052 02000000 		.4byte	.LVL10
 3804 0056 22000000 		.4byte	.LVL12
 3805 005a 0200     		.2byte	0x2
 3806 005c 30       		.byte	0x30
 3807 005d 9F       		.byte	0x9f
 3808 005e 22000000 		.4byte	.LVL12
 3809 0062 2C000000 		.4byte	.LFE3
 3810 0066 0100     		.2byte	0x1
 3811 0068 50       		.byte	0x50
 3812 0069 00000000 		.4byte	0
 3813 006d 00000000 		.4byte	0
 3814              	.LLST4:
 3815 0071 02000000 		.4byte	.LVL13
 3816 0075 12000000 		.4byte	.LVL14
 3817 0079 0300     		.2byte	0x3
 3818 007b 09       		.byte	0x9
 3819 007c FF       		.byte	0xff
 3820 007d 9F       		.byte	0x9f
 3821 007e 12000000 		.4byte	.LVL14
 3822 0082 14000000 		.4byte	.LVL15
 3823 0086 0100     		.2byte	0x1
 3824 0088 50       		.byte	0x50
 3825 0089 18000000 		.4byte	.LVL16
 3826 008d 31000000 		.4byte	.LVL17-1
 3827 0091 0100     		.2byte	0x1
 3828 0093 50       		.byte	0x50
 3829 0094 32000000 		.4byte	.LVL17
 3830 0098 3C000000 		.4byte	.LVL19
 3831 009c 0100     		.2byte	0x1
 3832 009e 50       		.byte	0x50
 3833 009f 3C000000 		.4byte	.LVL19
 3834 00a3 3E000000 		.4byte	.LVL20
 3835 00a7 0300     		.2byte	0x3
 3836 00a9 09       		.byte	0x9
 3837 00aa FF       		.byte	0xff
 3838 00ab 9F       		.byte	0x9f
 3839 00ac 3E000000 		.4byte	.LVL20
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 122


 3840 00b0 48000000 		.4byte	.LFE4
 3841 00b4 0100     		.2byte	0x1
 3842 00b6 50       		.byte	0x50
 3843 00b7 00000000 		.4byte	0
 3844 00bb 00000000 		.4byte	0
 3845              	.LLST5:
 3846 00bf 12000000 		.4byte	.LVL14
 3847 00c3 3C000000 		.4byte	.LVL19
 3848 00c7 0100     		.2byte	0x1
 3849 00c9 54       		.byte	0x54
 3850 00ca 00000000 		.4byte	0
 3851 00ce 00000000 		.4byte	0
 3852              	.LLST6:
 3853 00d2 00000000 		.4byte	.LVL21
 3854 00d6 08000000 		.4byte	.LVL22
 3855 00da 0100     		.2byte	0x1
 3856 00dc 50       		.byte	0x50
 3857 00dd 08000000 		.4byte	.LVL22
 3858 00e1 A0000000 		.4byte	.LFE6
 3859 00e5 0400     		.2byte	0x4
 3860 00e7 F3       		.byte	0xf3
 3861 00e8 01       		.uleb128 0x1
 3862 00e9 50       		.byte	0x50
 3863 00ea 9F       		.byte	0x9f
 3864 00eb 00000000 		.4byte	0
 3865 00ef 00000000 		.4byte	0
 3866              	.LLST7:
 3867 00f3 00000000 		.4byte	.LVL21
 3868 00f7 12000000 		.4byte	.LVL24
 3869 00fb 0100     		.2byte	0x1
 3870 00fd 51       		.byte	0x51
 3871 00fe 12000000 		.4byte	.LVL24
 3872 0102 A0000000 		.4byte	.LFE6
 3873 0106 0400     		.2byte	0x4
 3874 0108 F3       		.byte	0xf3
 3875 0109 01       		.uleb128 0x1
 3876 010a 51       		.byte	0x51
 3877 010b 9F       		.byte	0x9f
 3878 010c 00000000 		.4byte	0
 3879 0110 00000000 		.4byte	0
 3880              	.LLST8:
 3881 0114 00000000 		.4byte	.LVL21
 3882 0118 0C000000 		.4byte	.LVL23
 3883 011c 0100     		.2byte	0x1
 3884 011e 52       		.byte	0x52
 3885 011f 0C000000 		.4byte	.LVL23
 3886 0123 98000000 		.4byte	.LVL38
 3887 0127 0100     		.2byte	0x1
 3888 0129 56       		.byte	0x56
 3889 012a 98000000 		.4byte	.LVL38
 3890 012e A0000000 		.4byte	.LFE6
 3891 0132 0400     		.2byte	0x4
 3892 0134 F3       		.byte	0xf3
 3893 0135 01       		.uleb128 0x1
 3894 0136 52       		.byte	0x52
 3895 0137 9F       		.byte	0x9f
 3896 0138 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 123


 3897 013c 00000000 		.4byte	0
 3898              	.LLST9:
 3899 0140 16000000 		.4byte	.LVL25
 3900 0144 1A000000 		.4byte	.LVL26
 3901 0148 0200     		.2byte	0x2
 3902 014a 30       		.byte	0x30
 3903 014b 9F       		.byte	0x9f
 3904 014c 1A000000 		.4byte	.LVL26
 3905 0150 98000000 		.4byte	.LVL37
 3906 0154 0100     		.2byte	0x1
 3907 0156 55       		.byte	0x55
 3908 0157 00000000 		.4byte	0
 3909 015b 00000000 		.4byte	0
 3910              	.LLST10:
 3911 015f 1E000000 		.4byte	.LVL27
 3912 0163 3D000000 		.4byte	.LVL28-1
 3913 0167 0100     		.2byte	0x1
 3914 0169 50       		.byte	0x50
 3915 016a 50000000 		.4byte	.LVL29
 3916 016e 6F000000 		.4byte	.LVL30-1
 3917 0172 0100     		.2byte	0x1
 3918 0174 50       		.byte	0x50
 3919 0175 76000000 		.4byte	.LVL31
 3920 0179 87000000 		.4byte	.LVL32-1
 3921 017d 0100     		.2byte	0x1
 3922 017f 50       		.byte	0x50
 3923 0180 00000000 		.4byte	0
 3924 0184 00000000 		.4byte	0
 3925              	.LLST11:
 3926 0188 16000000 		.4byte	.LVL25
 3927 018c 98000000 		.4byte	.LVL36
 3928 0190 0100     		.2byte	0x1
 3929 0192 54       		.byte	0x54
 3930 0193 00000000 		.4byte	0
 3931 0197 00000000 		.4byte	0
 3932              	.LLST12:
 3933 019b 00000000 		.4byte	.LVL39
 3934 019f 13000000 		.4byte	.LVL40-1
 3935 01a3 0100     		.2byte	0x1
 3936 01a5 50       		.byte	0x50
 3937 01a6 13000000 		.4byte	.LVL40-1
 3938 01aa 3C000000 		.4byte	.LFE8
 3939 01ae 0400     		.2byte	0x4
 3940 01b0 F3       		.byte	0xf3
 3941 01b1 01       		.uleb128 0x1
 3942 01b2 50       		.byte	0x50
 3943 01b3 9F       		.byte	0x9f
 3944 01b4 00000000 		.4byte	0
 3945 01b8 00000000 		.4byte	0
 3946              	.LLST13:
 3947 01bc 08000000 		.4byte	.LVL43
 3948 01c0 40000000 		.4byte	.LFE9
 3949 01c4 0100     		.2byte	0x1
 3950 01c6 53       		.byte	0x53
 3951 01c7 00000000 		.4byte	0
 3952 01cb 00000000 		.4byte	0
 3953              	.LLST14:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 124


 3954 01cf 02000000 		.4byte	.LVL42
 3955 01d3 08000000 		.4byte	.LVL43
 3956 01d7 0200     		.2byte	0x2
 3957 01d9 30       		.byte	0x30
 3958 01da 9F       		.byte	0x9f
 3959 01db 08000000 		.4byte	.LVL43
 3960 01df 40000000 		.4byte	.LFE9
 3961 01e3 0100     		.2byte	0x1
 3962 01e5 50       		.byte	0x50
 3963 01e6 00000000 		.4byte	0
 3964 01ea 00000000 		.4byte	0
 3965              	.LLST15:
 3966 01ee 0C000000 		.4byte	.LVL44
 3967 01f2 1E000000 		.4byte	.LVL47
 3968 01f6 0100     		.2byte	0x1
 3969 01f8 52       		.byte	0x52
 3970 01f9 20000000 		.4byte	.LVL48
 3971 01fd 26000000 		.4byte	.LVL49
 3972 0201 0100     		.2byte	0x1
 3973 0203 51       		.byte	0x51
 3974 0204 26000000 		.4byte	.LVL49
 3975 0208 36000000 		.4byte	.LVL53
 3976 020c 0100     		.2byte	0x1
 3977 020e 52       		.byte	0x52
 3978 020f 00000000 		.4byte	0
 3979 0213 00000000 		.4byte	0
 3980              	.LLST16:
 3981 0217 16000000 		.4byte	.LVL55
 3982 021b 29000000 		.4byte	.LVL56-1
 3983 021f 0100     		.2byte	0x1
 3984 0221 50       		.byte	0x50
 3985 0222 29000000 		.4byte	.LVL56-1
 3986 0226 2C000000 		.4byte	.LVL57
 3987 022a 0100     		.2byte	0x1
 3988 022c 54       		.byte	0x54
 3989 022d 2C000000 		.4byte	.LVL57
 3990 0231 54000000 		.4byte	.LVL58
 3991 0235 0100     		.2byte	0x1
 3992 0237 50       		.byte	0x50
 3993 0238 54000000 		.4byte	.LVL58
 3994 023c 58000000 		.4byte	.LVL59
 3995 0240 0200     		.2byte	0x2
 3996 0242 30       		.byte	0x30
 3997 0243 9F       		.byte	0x9f
 3998 0244 58000000 		.4byte	.LVL59
 3999 0248 6A000000 		.4byte	.LVL60
 4000 024c 0100     		.2byte	0x1
 4001 024e 50       		.byte	0x50
 4002 024f 6A000000 		.4byte	.LVL60
 4003 0253 6E000000 		.4byte	.LVL61
 4004 0257 0100     		.2byte	0x1
 4005 0259 54       		.byte	0x54
 4006 025a 00000000 		.4byte	0
 4007 025e 00000000 		.4byte	0
 4008              	.LLST17:
 4009 0262 00000000 		.4byte	.LVL62
 4010 0266 05000000 		.4byte	.LVL63-1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 125


 4011 026a 0100     		.2byte	0x1
 4012 026c 50       		.byte	0x50
 4013 026d 05000000 		.4byte	.LVL63-1
 4014 0271 08000000 		.4byte	.LFE11
 4015 0275 0400     		.2byte	0x4
 4016 0277 F3       		.byte	0xf3
 4017 0278 01       		.uleb128 0x1
 4018 0279 50       		.byte	0x50
 4019 027a 9F       		.byte	0x9f
 4020 027b 00000000 		.4byte	0
 4021 027f 00000000 		.4byte	0
 4022              	.LLST18:
 4023 0283 00000000 		.4byte	.LVL64
 4024 0287 08000000 		.4byte	.LVL65
 4025 028b 0100     		.2byte	0x1
 4026 028d 50       		.byte	0x50
 4027 028e 08000000 		.4byte	.LVL65
 4028 0292 0A000000 		.4byte	.LVL66
 4029 0296 0300     		.2byte	0x3
 4030 0298 70       		.byte	0x70
 4031 0299 01       		.sleb128 1
 4032 029a 9F       		.byte	0x9f
 4033 029b 0A000000 		.4byte	.LVL66
 4034 029f 30000000 		.4byte	.LFE12
 4035 02a3 0400     		.2byte	0x4
 4036 02a5 F3       		.byte	0xf3
 4037 02a6 01       		.uleb128 0x1
 4038 02a7 50       		.byte	0x50
 4039 02a8 9F       		.byte	0x9f
 4040 02a9 00000000 		.4byte	0
 4041 02ad 00000000 		.4byte	0
 4042              	.LLST19:
 4043 02b1 00000000 		.4byte	.LVL67
 4044 02b5 0A000000 		.4byte	.LVL71
 4045 02b9 0100     		.2byte	0x1
 4046 02bb 50       		.byte	0x50
 4047 02bc 0A000000 		.4byte	.LVL71
 4048 02c0 0C000000 		.4byte	.LVL72
 4049 02c4 0300     		.2byte	0x3
 4050 02c6 70       		.byte	0x70
 4051 02c7 01       		.sleb128 1
 4052 02c8 9F       		.byte	0x9f
 4053 02c9 0C000000 		.4byte	.LVL72
 4054 02cd 14000000 		.4byte	.LFE13
 4055 02d1 0400     		.2byte	0x4
 4056 02d3 F3       		.byte	0xf3
 4057 02d4 01       		.uleb128 0x1
 4058 02d5 50       		.byte	0x50
 4059 02d6 9F       		.byte	0x9f
 4060 02d7 00000000 		.4byte	0
 4061 02db 00000000 		.4byte	0
 4062              	.LLST20:
 4063 02df 04000000 		.4byte	.LVL68
 4064 02e3 06000000 		.4byte	.LVL69
 4065 02e7 0100     		.2byte	0x1
 4066 02e9 53       		.byte	0x53
 4067 02ea 08000000 		.4byte	.LVL70
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 126


 4068 02ee 0C000000 		.4byte	.LVL72
 4069 02f2 0100     		.2byte	0x1
 4070 02f4 53       		.byte	0x53
 4071 02f5 0C000000 		.4byte	.LVL72
 4072 02f9 14000000 		.4byte	.LFE13
 4073 02fd 0100     		.2byte	0x1
 4074 02ff 50       		.byte	0x50
 4075 0300 00000000 		.4byte	0
 4076 0304 00000000 		.4byte	0
 4077              	.LLST21:
 4078 0308 00000000 		.4byte	.LVL73
 4079 030c 06000000 		.4byte	.LVL74
 4080 0310 0100     		.2byte	0x1
 4081 0312 50       		.byte	0x50
 4082 0313 06000000 		.4byte	.LVL74
 4083 0317 10000000 		.4byte	.LVL77
 4084 031b 0100     		.2byte	0x1
 4085 031d 54       		.byte	0x54
 4086 031e 10000000 		.4byte	.LVL77
 4087 0322 12000000 		.4byte	.LFE14
 4088 0326 0400     		.2byte	0x4
 4089 0328 F3       		.byte	0xf3
 4090 0329 01       		.uleb128 0x1
 4091 032a 50       		.byte	0x50
 4092 032b 9F       		.byte	0x9f
 4093 032c 00000000 		.4byte	0
 4094 0330 00000000 		.4byte	0
 4095              	.LLST22:
 4096 0334 00000000 		.4byte	.LVL73
 4097 0338 09000000 		.4byte	.LVL75-1
 4098 033c 0100     		.2byte	0x1
 4099 033e 51       		.byte	0x51
 4100 033f 09000000 		.4byte	.LVL75-1
 4101 0343 12000000 		.4byte	.LFE14
 4102 0347 0400     		.2byte	0x4
 4103 0349 F3       		.byte	0xf3
 4104 034a 01       		.uleb128 0x1
 4105 034b 51       		.byte	0x51
 4106 034c 9F       		.byte	0x9f
 4107 034d 00000000 		.4byte	0
 4108 0351 00000000 		.4byte	0
 4109              	.LLST23:
 4110 0355 00000000 		.4byte	.LVL78
 4111 0359 0A000000 		.4byte	.LVL80
 4112 035d 0100     		.2byte	0x1
 4113 035f 50       		.byte	0x50
 4114 0360 0A000000 		.4byte	.LVL80
 4115 0364 0C000000 		.4byte	.LVL81
 4116 0368 0100     		.2byte	0x1
 4117 036a 53       		.byte	0x53
 4118 036b 0C000000 		.4byte	.LVL81
 4119 036f 0E000000 		.4byte	.LVL82
 4120 0373 0100     		.2byte	0x1
 4121 0375 50       		.byte	0x50
 4122 0376 0E000000 		.4byte	.LVL82
 4123 037a 19000000 		.4byte	.LVL84-1
 4124 037e 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 127


 4125 0380 53       		.byte	0x53
 4126 0381 19000000 		.4byte	.LVL84-1
 4127 0385 1C000000 		.4byte	.LFE15
 4128 0389 0400     		.2byte	0x4
 4129 038b F3       		.byte	0xf3
 4130 038c 01       		.uleb128 0x1
 4131 038d 50       		.byte	0x50
 4132 038e 9F       		.byte	0x9f
 4133 038f 00000000 		.4byte	0
 4134 0393 00000000 		.4byte	0
 4135              	.LLST24:
 4136 0397 04000000 		.4byte	.LVL79
 4137 039b 0E000000 		.4byte	.LVL82
 4138 039f 0200     		.2byte	0x2
 4139 03a1 30       		.byte	0x30
 4140 03a2 9F       		.byte	0x9f
 4141 03a3 0E000000 		.4byte	.LVL82
 4142 03a7 16000000 		.4byte	.LVL83
 4143 03ab 0100     		.2byte	0x1
 4144 03ad 50       		.byte	0x50
 4145 03ae 1A000000 		.4byte	.LVL84
 4146 03b2 1C000000 		.4byte	.LFE15
 4147 03b6 0100     		.2byte	0x1
 4148 03b8 50       		.byte	0x50
 4149 03b9 00000000 		.4byte	0
 4150 03bd 00000000 		.4byte	0
 4151              	.LLST25:
 4152 03c1 02000000 		.4byte	.LVL85
 4153 03c5 08000000 		.4byte	.LVL86
 4154 03c9 0200     		.2byte	0x2
 4155 03cb 30       		.byte	0x30
 4156 03cc 9F       		.byte	0x9f
 4157 03cd 08000000 		.4byte	.LVL86
 4158 03d1 18000000 		.4byte	.LVL91
 4159 03d5 0100     		.2byte	0x1
 4160 03d7 55       		.byte	0x55
 4161 03d8 18000000 		.4byte	.LVL91
 4162 03dc 1A000000 		.4byte	.LFE16
 4163 03e0 0100     		.2byte	0x1
 4164 03e2 50       		.byte	0x50
 4165 03e3 00000000 		.4byte	0
 4166 03e7 00000000 		.4byte	0
 4167              	.LLST26:
 4168 03eb 02000000 		.4byte	.LVL85
 4169 03ef 08000000 		.4byte	.LVL86
 4170 03f3 0200     		.2byte	0x2
 4171 03f5 30       		.byte	0x30
 4172 03f6 9F       		.byte	0x9f
 4173 03f7 08000000 		.4byte	.LVL86
 4174 03fb 18000000 		.4byte	.LVL90
 4175 03ff 0100     		.2byte	0x1
 4176 0401 54       		.byte	0x54
 4177 0402 00000000 		.4byte	0
 4178 0406 00000000 		.4byte	0
 4179              	.LLST27:
 4180 040a 00000000 		.4byte	.LVL92
 4181 040e 04000000 		.4byte	.LVL93
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 128


 4182 0412 0100     		.2byte	0x1
 4183 0414 50       		.byte	0x50
 4184 0415 04000000 		.4byte	.LVL93
 4185 0419 14000000 		.4byte	.LFE17
 4186 041d 0400     		.2byte	0x4
 4187 041f F3       		.byte	0xf3
 4188 0420 01       		.uleb128 0x1
 4189 0421 50       		.byte	0x50
 4190 0422 9F       		.byte	0x9f
 4191 0423 00000000 		.4byte	0
 4192 0427 00000000 		.4byte	0
 4193              	.LLST28:
 4194 042b 00000000 		.4byte	.LVL94
 4195 042f 42000000 		.4byte	.LVL106
 4196 0433 0100     		.2byte	0x1
 4197 0435 50       		.byte	0x50
 4198 0436 42000000 		.4byte	.LVL106
 4199 043a 74000000 		.4byte	.LFE18
 4200 043e 0400     		.2byte	0x4
 4201 0440 F3       		.byte	0xf3
 4202 0441 01       		.uleb128 0x1
 4203 0442 50       		.byte	0x50
 4204 0443 9F       		.byte	0x9f
 4205 0444 00000000 		.4byte	0
 4206 0448 00000000 		.4byte	0
 4207              	.LLST29:
 4208 044c 18000000 		.4byte	.LVL99
 4209 0450 62000000 		.4byte	.LVL114
 4210 0454 0100     		.2byte	0x1
 4211 0456 55       		.byte	0x55
 4212 0457 00000000 		.4byte	0
 4213 045b 00000000 		.4byte	0
 4214              	.LLST30:
 4215 045f 02000000 		.4byte	.LVL95
 4216 0463 18000000 		.4byte	.LVL99
 4217 0467 0200     		.2byte	0x2
 4218 0469 30       		.byte	0x30
 4219 046a 9F       		.byte	0x9f
 4220 046b 18000000 		.4byte	.LVL99
 4221 046f 2C000000 		.4byte	.LVL101
 4222 0473 0200     		.2byte	0x2
 4223 0475 31       		.byte	0x31
 4224 0476 9F       		.byte	0x9f
 4225 0477 2C000000 		.4byte	.LVL101
 4226 047b 3E000000 		.4byte	.LVL104
 4227 047f 0100     		.2byte	0x1
 4228 0481 51       		.byte	0x51
 4229 0482 00000000 		.4byte	0
 4230 0486 00000000 		.4byte	0
 4231              	.LLST31:
 4232 048a 02000000 		.4byte	.LVL95
 4233 048e 18000000 		.4byte	.LVL99
 4234 0492 0200     		.2byte	0x2
 4235 0494 30       		.byte	0x30
 4236 0495 9F       		.byte	0x9f
 4237 0496 18000000 		.4byte	.LVL99
 4238 049a 2C000000 		.4byte	.LVL101
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 129


 4239 049e 0200     		.2byte	0x2
 4240 04a0 32       		.byte	0x32
 4241 04a1 9F       		.byte	0x9f
 4242 04a2 2C000000 		.4byte	.LVL101
 4243 04a6 45000000 		.4byte	.LVL107-1
 4244 04aa 0100     		.2byte	0x1
 4245 04ac 53       		.byte	0x53
 4246 04ad 00000000 		.4byte	0
 4247 04b1 00000000 		.4byte	0
 4248              	.LLST32:
 4249 04b5 46000000 		.4byte	.LVL107
 4250 04b9 48000000 		.4byte	.LVL108
 4251 04bd 0100     		.2byte	0x1
 4252 04bf 50       		.byte	0x50
 4253 04c0 00000000 		.4byte	0
 4254 04c4 00000000 		.4byte	0
 4255              	.LLST33:
 4256 04c8 1A000000 		.4byte	.LVL100
 4257 04cc 50000000 		.4byte	.LVL109
 4258 04d0 0600     		.2byte	0x6
 4259 04d2 74       		.byte	0x74
 4260 04d3 00       		.sleb128 0
 4261 04d4 08       		.byte	0x8
 4262 04d5 FF       		.byte	0xff
 4263 04d6 1A       		.byte	0x1a
 4264 04d7 9F       		.byte	0x9f
 4265 04d8 50000000 		.4byte	.LVL109
 4266 04dc 52000000 		.4byte	.LVL110
 4267 04e0 0600     		.2byte	0x6
 4268 04e2 74       		.byte	0x74
 4269 04e3 05       		.sleb128 5
 4270 04e4 08       		.byte	0x8
 4271 04e5 FF       		.byte	0xff
 4272 04e6 1A       		.byte	0x1a
 4273 04e7 9F       		.byte	0x9f
 4274 04e8 00000000 		.4byte	0
 4275 04ec 00000000 		.4byte	0
 4276              	.LLST34:
 4277 04f0 14000000 		.4byte	.LVL98
 4278 04f4 40000000 		.4byte	.LVL105
 4279 04f8 0100     		.2byte	0x1
 4280 04fa 52       		.byte	0x52
 4281 04fb 00000000 		.4byte	0
 4282 04ff 00000000 		.4byte	0
 4283              	.LLST35:
 4284 0503 02000000 		.4byte	.LVL115
 4285 0507 06000000 		.4byte	.LVL116
 4286 050b 0200     		.2byte	0x2
 4287 050d 30       		.byte	0x30
 4288 050e 9F       		.byte	0x9f
 4289 050f 06000000 		.4byte	.LVL116
 4290 0513 1E000000 		.4byte	.LVL120
 4291 0517 0100     		.2byte	0x1
 4292 0519 54       		.byte	0x54
 4293 051a 00000000 		.4byte	0
 4294 051e 00000000 		.4byte	0
 4295              	.LLST36:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 130


 4296 0522 12000000 		.4byte	.LVL117
 4297 0526 17000000 		.4byte	.LVL118-1
 4298 052a 0100     		.2byte	0x1
 4299 052c 51       		.byte	0x51
 4300 052d 00000000 		.4byte	0
 4301 0531 00000000 		.4byte	0
 4302              	.LLST37:
 4303 0535 08000000 		.4byte	.LVL121
 4304 0539 18000000 		.4byte	.LVL122
 4305 053d 0100     		.2byte	0x1
 4306 053f 53       		.byte	0x53
 4307 0540 18000000 		.4byte	.LVL122
 4308 0544 1C000000 		.4byte	.LVL123
 4309 0548 0500     		.2byte	0x5
 4310 054a 03       		.byte	0x3
 4311 054b 00000000 		.4byte	CapSense_1_immunity
 4312 054f 1C000000 		.4byte	.LVL123
 4313 0553 2A000000 		.4byte	.LVL124
 4314 0557 0100     		.2byte	0x1
 4315 0559 53       		.byte	0x53
 4316 055a 2A000000 		.4byte	.LVL124
 4317 055e 2E000000 		.4byte	.LVL125
 4318 0562 0500     		.2byte	0x5
 4319 0564 03       		.byte	0x3
 4320 0565 00000000 		.4byte	CapSense_1_immunity
 4321 0569 2E000000 		.4byte	.LVL125
 4322 056d 38000000 		.4byte	.LVL126
 4323 0571 0100     		.2byte	0x1
 4324 0573 53       		.byte	0x53
 4325 0574 38000000 		.4byte	.LVL126
 4326 0578 3D000000 		.4byte	.LVL128-1
 4327 057c 0500     		.2byte	0x5
 4328 057e 03       		.byte	0x3
 4329 057f 00000000 		.4byte	CapSense_1_immunity
 4330 0583 00000000 		.4byte	0
 4331 0587 00000000 		.4byte	0
 4332              	.LLST38:
 4333 058b 02000000 		.4byte	.LVL131
 4334 058f 06000000 		.4byte	.LVL132
 4335 0593 0200     		.2byte	0x2
 4336 0595 30       		.byte	0x30
 4337 0596 9F       		.byte	0x9f
 4338 0597 06000000 		.4byte	.LVL132
 4339 059b 38000000 		.4byte	.LVL138
 4340 059f 0100     		.2byte	0x1
 4341 05a1 55       		.byte	0x55
 4342 05a2 00000000 		.4byte	0
 4343 05a6 00000000 		.4byte	0
 4344              	.LLST39:
 4345 05aa 10000000 		.4byte	.LVL133
 4346 05ae 14000000 		.4byte	.LVL134
 4347 05b2 0200     		.2byte	0x2
 4348 05b4 30       		.byte	0x30
 4349 05b5 9F       		.byte	0x9f
 4350 05b6 14000000 		.4byte	.LVL134
 4351 05ba 34000000 		.4byte	.LVL137
 4352 05be 0100     		.2byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 131


 4353 05c0 54       		.byte	0x54
 4354 05c1 00000000 		.4byte	0
 4355 05c5 00000000 		.4byte	0
 4356              	.LLST40:
 4357 05c9 10000000 		.4byte	.LVL133
 4358 05cd 34000000 		.4byte	.LVL137
 4359 05d1 0100     		.2byte	0x1
 4360 05d3 56       		.byte	0x56
 4361 05d4 00000000 		.4byte	0
 4362 05d8 00000000 		.4byte	0
 4363              	.LLST41:
 4364 05dc 00000000 		.4byte	.LVL139
 4365 05e0 04000000 		.4byte	.LVL140
 4366 05e4 0100     		.2byte	0x1
 4367 05e6 50       		.byte	0x50
 4368 05e7 04000000 		.4byte	.LVL140
 4369 05eb 0C000000 		.4byte	.LFE22
 4370 05ef 0400     		.2byte	0x4
 4371 05f1 F3       		.byte	0xf3
 4372 05f2 01       		.uleb128 0x1
 4373 05f3 50       		.byte	0x50
 4374 05f4 9F       		.byte	0x9f
 4375 05f5 00000000 		.4byte	0
 4376 05f9 00000000 		.4byte	0
 4377              	.LLST42:
 4378 05fd 0A000000 		.4byte	.LVL143
 4379 0601 13000000 		.4byte	.LVL145-1
 4380 0605 0100     		.2byte	0x1
 4381 0607 53       		.byte	0x53
 4382 0608 1C000000 		.4byte	.LVL147
 4383 060c 25000000 		.4byte	.LVL149-1
 4384 0610 0100     		.2byte	0x1
 4385 0612 53       		.byte	0x53
 4386 0613 2E000000 		.4byte	.LVL151
 4387 0617 3B000000 		.4byte	.LVL154-1
 4388 061b 0100     		.2byte	0x1
 4389 061d 53       		.byte	0x53
 4390 061e 48000000 		.4byte	.LVL157
 4391 0622 4F000000 		.4byte	.LVL159-1
 4392 0626 0100     		.2byte	0x1
 4393 0628 53       		.byte	0x53
 4394 0629 00000000 		.4byte	0
 4395 062d 00000000 		.4byte	0
 4396              	.LLST43:
 4397 0631 06000000 		.4byte	.LVL142
 4398 0635 13000000 		.4byte	.LVL145-1
 4399 0639 0100     		.2byte	0x1
 4400 063b 50       		.byte	0x50
 4401 063c 18000000 		.4byte	.LVL146
 4402 0640 25000000 		.4byte	.LVL149-1
 4403 0644 0100     		.2byte	0x1
 4404 0646 50       		.byte	0x50
 4405 0647 2A000000 		.4byte	.LVL150
 4406 064b 3B000000 		.4byte	.LVL154-1
 4407 064f 0100     		.2byte	0x1
 4408 0651 50       		.byte	0x50
 4409 0652 46000000 		.4byte	.LVL156
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 132


 4410 0656 4F000000 		.4byte	.LVL159-1
 4411 065a 0100     		.2byte	0x1
 4412 065c 50       		.byte	0x50
 4413 065d 00000000 		.4byte	0
 4414 0661 00000000 		.4byte	0
 4415              		.section	.debug_aranges,"",%progbits
 4416 0000 D4000000 		.4byte	0xd4
 4417 0004 0200     		.2byte	0x2
 4418 0006 00000000 		.4byte	.Ldebug_info0
 4419 000a 04       		.byte	0x4
 4420 000b 00       		.byte	0
 4421 000c 0000     		.2byte	0
 4422 000e 0000     		.2byte	0
 4423 0010 00000000 		.4byte	.LFB20
 4424 0014 06000000 		.4byte	.LFE20-.LFB20
 4425 0018 00000000 		.4byte	.LFB7
 4426 001c 24000000 		.4byte	.LFE7-.LFB7
 4427 0020 00000000 		.4byte	.LFB1
 4428 0024 10000000 		.4byte	.LFE1-.LFB1
 4429 0028 00000000 		.4byte	.LFB2
 4430 002c 40000000 		.4byte	.LFE2-.LFB2
 4431 0030 00000000 		.4byte	.LFB3
 4432 0034 2C000000 		.4byte	.LFE3-.LFB3
 4433 0038 00000000 		.4byte	.LFB4
 4434 003c 48000000 		.4byte	.LFE4-.LFB4
 4435 0040 00000000 		.4byte	.LFB6
 4436 0044 A0000000 		.4byte	.LFE6-.LFB6
 4437 0048 00000000 		.4byte	.LFB8
 4438 004c 3C000000 		.4byte	.LFE8-.LFB8
 4439 0050 00000000 		.4byte	.LFB9
 4440 0054 40000000 		.4byte	.LFE9-.LFB9
 4441 0058 00000000 		.4byte	.LFB10
 4442 005c 78000000 		.4byte	.LFE10-.LFB10
 4443 0060 00000000 		.4byte	.LFB11
 4444 0064 08000000 		.4byte	.LFE11-.LFB11
 4445 0068 00000000 		.4byte	.LFB12
 4446 006c 30000000 		.4byte	.LFE12-.LFB12
 4447 0070 00000000 		.4byte	.LFB13
 4448 0074 14000000 		.4byte	.LFE13-.LFB13
 4449 0078 00000000 		.4byte	.LFB14
 4450 007c 12000000 		.4byte	.LFE14-.LFB14
 4451 0080 00000000 		.4byte	.LFB15
 4452 0084 1C000000 		.4byte	.LFE15-.LFB15
 4453 0088 00000000 		.4byte	.LFB16
 4454 008c 1A000000 		.4byte	.LFE16-.LFB16
 4455 0090 00000000 		.4byte	.LFB17
 4456 0094 14000000 		.4byte	.LFE17-.LFB17
 4457 0098 00000000 		.4byte	.LFB18
 4458 009c 74000000 		.4byte	.LFE18-.LFB18
 4459 00a0 00000000 		.4byte	.LFB19
 4460 00a4 24000000 		.4byte	.LFE19-.LFB19
 4461 00a8 00000000 		.4byte	.LFB5
 4462 00ac 54000000 		.4byte	.LFE5-.LFB5
 4463 00b0 00000000 		.4byte	.LFB21
 4464 00b4 40000000 		.4byte	.LFE21-.LFB21
 4465 00b8 00000000 		.4byte	.LFB22
 4466 00bc 0C000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 133


 4467 00c0 00000000 		.4byte	.LFB23
 4468 00c4 0C000000 		.4byte	.LFE23-.LFB23
 4469 00c8 00000000 		.4byte	.LFB24
 4470 00cc 60000000 		.4byte	.LFE24-.LFB24
 4471 00d0 00000000 		.4byte	0
 4472 00d4 00000000 		.4byte	0
 4473              		.section	.debug_ranges,"",%progbits
 4474              	.Ldebug_ranges0:
 4475 0000 00000000 		.4byte	.LFB20
 4476 0004 06000000 		.4byte	.LFE20
 4477 0008 00000000 		.4byte	.LFB7
 4478 000c 24000000 		.4byte	.LFE7
 4479 0010 00000000 		.4byte	.LFB1
 4480 0014 10000000 		.4byte	.LFE1
 4481 0018 00000000 		.4byte	.LFB2
 4482 001c 40000000 		.4byte	.LFE2
 4483 0020 00000000 		.4byte	.LFB3
 4484 0024 2C000000 		.4byte	.LFE3
 4485 0028 00000000 		.4byte	.LFB4
 4486 002c 48000000 		.4byte	.LFE4
 4487 0030 00000000 		.4byte	.LFB6
 4488 0034 A0000000 		.4byte	.LFE6
 4489 0038 00000000 		.4byte	.LFB8
 4490 003c 3C000000 		.4byte	.LFE8
 4491 0040 00000000 		.4byte	.LFB9
 4492 0044 40000000 		.4byte	.LFE9
 4493 0048 00000000 		.4byte	.LFB10
 4494 004c 78000000 		.4byte	.LFE10
 4495 0050 00000000 		.4byte	.LFB11
 4496 0054 08000000 		.4byte	.LFE11
 4497 0058 00000000 		.4byte	.LFB12
 4498 005c 30000000 		.4byte	.LFE12
 4499 0060 00000000 		.4byte	.LFB13
 4500 0064 14000000 		.4byte	.LFE13
 4501 0068 00000000 		.4byte	.LFB14
 4502 006c 12000000 		.4byte	.LFE14
 4503 0070 00000000 		.4byte	.LFB15
 4504 0074 1C000000 		.4byte	.LFE15
 4505 0078 00000000 		.4byte	.LFB16
 4506 007c 1A000000 		.4byte	.LFE16
 4507 0080 00000000 		.4byte	.LFB17
 4508 0084 14000000 		.4byte	.LFE17
 4509 0088 00000000 		.4byte	.LFB18
 4510 008c 74000000 		.4byte	.LFE18
 4511 0090 00000000 		.4byte	.LFB19
 4512 0094 24000000 		.4byte	.LFE19
 4513 0098 00000000 		.4byte	.LFB5
 4514 009c 54000000 		.4byte	.LFE5
 4515 00a0 00000000 		.4byte	.LFB21
 4516 00a4 40000000 		.4byte	.LFE21
 4517 00a8 00000000 		.4byte	.LFB22
 4518 00ac 0C000000 		.4byte	.LFE22
 4519 00b0 00000000 		.4byte	.LFB23
 4520 00b4 0C000000 		.4byte	.LFE23
 4521 00b8 00000000 		.4byte	.LFB24
 4522 00bc 60000000 		.4byte	.LFE24
 4523 00c0 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 134


 4524 00c4 00000000 		.4byte	0
 4525              		.section	.debug_line,"",%progbits
 4526              	.Ldebug_line0:
 4527 0000 12040000 		.section	.debug_str,"MS",%progbits,1
 4527      0200C400 
 4527      00000201 
 4527      FB0E0D00 
 4527      01010101 
 4528              	.LASF62:
 4529 0000 736E7343 		.ascii	"snsCsdClk\000"
 4529      7364436C 
 4529      6B00
 4530              	.LASF106:
 4531 000a 73656E73 		.ascii	"sensorElement\000"
 4531      6F72456C 
 4531      656D656E 
 4531      7400
 4532              	.LASF150:
 4533 0018 43617053 		.ascii	"CapSense_1_BistDischargeExtCapacitors\000"
 4533      656E7365 
 4533      5F315F42 
 4533      69737444 
 4533      69736368 
 4534              	.LASF171:
 4535 003e 43617053 		.ascii	"CapSense_1_SsCSDGetNumberOfConversions\000"
 4535      656E7365 
 4535      5F315F53 
 4535      73435344 
 4535      4765744E 
 4536              	.LASF98:
 4537 0065 43617053 		.ascii	"CapSense_1_SsCSDDisableMode\000"
 4537      656E7365 
 4537      5F315F53 
 4537      73435344 
 4537      44697361 
 4538              	.LASF89:
 4539 0081 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 4539      656E7365 
 4539      5F315F46 
 4539      4C415348 
 4539      5F57445F 
 4540              	.LASF104:
 4541 009c 7363616E 		.ascii	"scanStatus\000"
 4541      53746174 
 4541      757300
 4542              	.LASF157:
 4543 00a7 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 4543      656E7365 
 4543      5F315F63 
 4543      75725261 
 4543      6D536E73 
 4544              	.LASF65:
 4545 00bf 736E7254 		.ascii	"snrTestWidgetId\000"
 4545      65737457 
 4545      69646765 
 4545      74496400 
 4546              	.LASF132:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 135


 4547 00cf 43617053 		.ascii	"CapSense_1_SsChangeClkFreq\000"
 4547      656E7365 
 4547      5F315F53 
 4547      73436861 
 4547      6E676543 
 4548              	.LASF142:
 4549 00ea 63656E74 		.ascii	"centerFreqTrim\000"
 4549      65724672 
 4549      65715472 
 4549      696D00
 4550              	.LASF164:
 4551 00f9 43617053 		.ascii	"CapSense_1_CSDScan\000"
 4551      656E7365 
 4551      5F315F43 
 4551      53445363 
 4551      616E00
 4552              	.LASF8:
 4553 010c 756E7369 		.ascii	"unsigned int\000"
 4553      676E6564 
 4553      20696E74 
 4553      00
 4554              	.LASF115:
 4555 0119 43617053 		.ascii	"CapSense_1_SsSetIOsInDefaultState\000"
 4555      656E7365 
 4555      5F315F53 
 4555      73536574 
 4555      494F7349 
 4556              	.LASF140:
 4557 013b 43617053 		.ascii	"CapSense_1_SsInitialize\000"
 4557      656E7365 
 4557      5F315F53 
 4557      73496E69 
 4557      7469616C 
 4558              	.LASF55:
 4559 0153 7363616E 		.ascii	"scanCounter\000"
 4559      436F756E 
 4559      74657200 
 4560              	.LASF53:
 4561 015f 6877436C 		.ascii	"hwClock\000"
 4561      6F636B00 
 4562              	.LASF161:
 4563 0167 43617053 		.ascii	"CapSense_1_curSnsIOPtr\000"
 4563      656E7365 
 4563      5F315F63 
 4563      7572536E 
 4563      73494F50 
 4564              	.LASF141:
 4565 017e 696E6974 		.ascii	"initStatus\000"
 4565      53746174 
 4565      757300
 4566              	.LASF117:
 4567 0189 72656756 		.ascii	"regValue\000"
 4567      616C7565 
 4567      00
 4568              	.LASF153:
 4569 0192 43617053 		.ascii	"CapSense_1_ioList\000"
 4569      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 136


 4569      5F315F69 
 4569      6F4C6973 
 4569      7400
 4570              	.LASF110:
 4571 01a4 696E7465 		.ascii	"interruptState\000"
 4571      72727570 
 4571      74537461 
 4571      746500
 4572              	.LASF177:
 4573 01b3 43617053 		.ascii	"CapSense_1_IsBusy\000"
 4573      656E7365 
 4573      5F315F49 
 4573      73427573 
 4573      7900
 4574              	.LASF96:
 4575 01c5 6C667372 		.ascii	"lfsrScale\000"
 4575      5363616C 
 4575      6500
 4576              	.LASF167:
 4577 01cf 43617053 		.ascii	"CapSense_1_CSDConnectSns\000"
 4577      656E7365 
 4577      5F315F43 
 4577      5344436F 
 4577      6E6E6563 
 4578              	.LASF149:
 4579 01e8 64697669 		.ascii	"dividerVal\000"
 4579      64657256 
 4579      616C00
 4580              	.LASF127:
 4581 01f3 43617053 		.ascii	"CapSense_1_CalibrateWidget\000"
 4581      656E7365 
 4581      5F315F43 
 4581      616C6962 
 4581      72617465 
 4582              	.LASF114:
 4583 020e 6D6F6465 		.ascii	"mode\000"
 4583      00
 4584              	.LASF139:
 4585 0213 43617053 		.ascii	"CapSense_1_SsInitializeSourceSenseClk\000"
 4585      656E7365 
 4585      5F315F53 
 4585      73496E69 
 4585      7469616C 
 4586              	.LASF159:
 4587 0239 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 4587      656E7365 
 4587      5F315F73 
 4587      63616E46 
 4587      72657149 
 4588              	.LASF168:
 4589 0252 43617053 		.ascii	"CapSense_1_SsCSDInitialize\000"
 4589      656E7365 
 4589      5F315F53 
 4589      73435344 
 4589      496E6974 
 4590              	.LASF43:
 4591 026d 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 137


 4591      656E7365 
 4591      5F315F52 
 4591      414D5F57 
 4591      445F4C49 
 4592              	.LASF108:
 4593 028b 656C7464 		.ascii	"eltdNum\000"
 4593      4E756D00 
 4594              	.LASF94:
 4595 0293 70747257 		.ascii	"ptrWdgt\000"
 4595      64677400 
 4596              	.LASF156:
 4597 029b 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
 4597      656E7365 
 4597      5F315F72 
 4597      65717565 
 4597      73745363 
 4598              	.LASF116:
 4599 02bb 6C6F6F70 		.ascii	"loopIndex\000"
 4599      496E6465 
 4599      7800
 4600              	.LASF12:
 4601 02c5 666C6F61 		.ascii	"float\000"
 4601      7400
 4602              	.LASF78:
 4603 02cb 73686966 		.ascii	"shift\000"
 4603      7400
 4604              	.LASF174:
 4605 02d1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4605      43313120 
 4605      352E342E 
 4605      31203230 
 4605      31363036 
 4606 0304 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4606      20726576 
 4606      6973696F 
 4606      6E203233 
 4606      37373135 
 4607 0337 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4607      67202D66 
 4607      66756E63 
 4607      74696F6E 
 4607      2D736563 
 4608              	.LASF138:
 4609 0363 736E7343 		.ascii	"snsClkSrc\000"
 4609      6C6B5372 
 4609      6300
 4610              	.LASF102:
 4611 036d 43617053 		.ascii	"CapSense_1_SetupWidget\000"
 4611      656E7365 
 4611      5F315F53 
 4611      65747570 
 4611      57696467 
 4612              	.LASF173:
 4613 0384 43794465 		.ascii	"CyDelayUs\000"
 4613      6C617955 
 4613      7300
 4614              	.LASF64:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 138


 4615 038e 736E734C 		.ascii	"snsList\000"
 4615      69737400 
 4616              	.LASF7:
 4617 0396 6C6F6E67 		.ascii	"long long unsigned int\000"
 4617      206C6F6E 
 4617      6720756E 
 4617      7369676E 
 4617      65642069 
 4618              	.LASF66:
 4619 03ad 736E7254 		.ascii	"snrTestSensorId\000"
 4619      65737453 
 4619      656E736F 
 4619      72496400 
 4620              	.LASF87:
 4621 03bd 77646774 		.ascii	"wdgtType\000"
 4621      54797065 
 4621      00
 4622              	.LASF95:
 4623 03c6 6C667372 		.ascii	"lfsrSize\000"
 4623      53697A65 
 4623      00
 4624              	.LASF19:
 4625 03cf 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 4625      656E7365 
 4625      5F315F4C 
 4625      4F575F42 
 4625      534C4E5F 
 4626              	.LASF25:
 4627 03ec 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ENUM\000"
 4627      656E7365 
 4627      5F315F53 
 4627      454E5345 
 4627      5F4D4554 
 4628              	.LASF131:
 4629 0409 76616C75 		.ascii	"value\000"
 4629      6500
 4630              	.LASF61:
 4631 040f 6D6F6443 		.ascii	"modCsdClk\000"
 4631      7364436C 
 4631      6B00
 4632              	.LASF169:
 4633 0419 43617053 		.ascii	"CapSense_1_ISR_StartEx\000"
 4633      656E7365 
 4633      5F315F49 
 4633      53525F53 
 4633      74617274 
 4634              	.LASF72:
 4635 0430 64725074 		.ascii	"drPtr\000"
 4635      7200
 4636              	.LASF120:
 4637 0436 43617053 		.ascii	"CapSense_1_SsIsrInitialize\000"
 4637      656E7365 
 4637      5F315F53 
 4637      73497372 
 4637      496E6974 
 4638              	.LASF23:
 4639 0451 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 139


 4639      656E7365 
 4639      5F315F53 
 4639      454E5345 
 4639      5F4D4554 
 4640              	.LASF176:
 4641 0470 433A5C55 		.ascii	"C:\\Users\\michael.machate\\Desktop\\Cypress_Firstt"
 4641      73657273 
 4641      5C6D6963 
 4641      6861656C 
 4641      2E6D6163 
 4642 049f 65737473 		.ascii	"ests\\FirstTest.cydsn\000"
 4642      5C466972 
 4642      73745465 
 4642      73742E63 
 4642      7964736E 
 4643              	.LASF32:
 4644 04b4 6C6F7742 		.ascii	"lowBslnRst\000"
 4644      736C6E52 
 4644      737400
 4645              	.LASF112:
 4646 04bf 43617053 		.ascii	"CapSense_1_SetPinState\000"
 4646      656E7365 
 4646      5F315F53 
 4646      65745069 
 4646      6E537461 
 4647              	.LASF97:
 4648 04d6 43617053 		.ascii	"CapSense_1_SsSetWidgetSenseClkSrc\000"
 4648      656E7365 
 4648      5F315F53 
 4648      73536574 
 4648      57696467 
 4649              	.LASF122:
 4650 04f8 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 4650      656E7365 
 4650      5F315F53 
 4650      73536574 
 4650      4D6F6443 
 4651              	.LASF86:
 4652 051b 746F7461 		.ascii	"totalNumSns\000"
 4652      6C4E756D 
 4652      536E7300 
 4653              	.LASF123:
 4654 0527 6D6F6443 		.ascii	"modClk\000"
 4654      6C6B00
 4655              	.LASF146:
 4656 052e 43617053 		.ascii	"CapSense_1_SsCSDGetColSnsClkDivider\000"
 4656      656E7365 
 4656      5F315F53 
 4656      73435344 
 4656      47657443 
 4657              	.LASF28:
 4658 0552 6E6F6973 		.ascii	"noiseTh\000"
 4658      65546800 
 4659              	.LASF113:
 4660 055a 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 4660      656E7365 
 4660      5F315F53 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 140


 4660      73537769 
 4660      74636853 
 4661              	.LASF14:
 4662 0579 63686172 		.ascii	"char\000"
 4662      00
 4663              	.LASF166:
 4664 057e 43794578 		.ascii	"CyExitCriticalSection\000"
 4664      69744372 
 4664      69746963 
 4664      616C5365 
 4664      6374696F 
 4665              	.LASF105:
 4666 0594 43617053 		.ascii	"CapSense_1_ScanAllWidgets\000"
 4666      656E7365 
 4666      5F315F53 
 4666      63616E41 
 4666      6C6C5769 
 4667              	.LASF76:
 4668 05ae 6873696F 		.ascii	"hsiomShift\000"
 4668      6D536869 
 4668      667400
 4669              	.LASF10:
 4670 05b9 75696E74 		.ascii	"uint16\000"
 4670      313600
 4671              	.LASF137:
 4672 05c0 636F6E76 		.ascii	"conversionsNum\000"
 4672      65727369 
 4672      6F6E734E 
 4672      756D00
 4673              	.LASF26:
 4674 05cf 7265736F 		.ascii	"resolution\000"
 4674      6C757469 
 4674      6F6E00
 4675              	.LASF69:
 4676 05da 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 4676      656E7365 
 4676      5F315F52 
 4676      414D5F53 
 4676      54525543 
 4677              	.LASF56:
 4678 05f0 73746174 		.ascii	"status\000"
 4678      757300
 4679              	.LASF48:
 4680 05f7 69646163 		.ascii	"idacComp\000"
 4680      436F6D70 
 4680      00
 4681              	.LASF71:
 4682 0600 70635074 		.ascii	"pcPtr\000"
 4682      7200
 4683              	.LASF6:
 4684 0606 6C6F6E67 		.ascii	"long long int\000"
 4684      206C6F6E 
 4684      6720696E 
 4684      7400
 4685              	.LASF18:
 4686 0614 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 4686      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 141


 4686      5F315F54 
 4686      48524553 
 4686      484F4C44 
 4687              	.LASF31:
 4688 062e 6F6E4465 		.ascii	"onDebounce\000"
 4688      626F756E 
 4688      636500
 4689              	.LASF124:
 4690 0639 43617053 		.ascii	"CapSense_1_SsSetSnsClockDivider\000"
 4690      656E7365 
 4690      5F315F53 
 4690      73536574 
 4690      536E7343 
 4691              	.LASF128:
 4692 0659 63616C69 		.ascii	"calibrateStatus\000"
 4692      62726174 
 4692      65537461 
 4692      74757300 
 4693              	.LASF63:
 4694 0669 77646774 		.ascii	"wdgtList\000"
 4694      4C697374 
 4694      00
 4695              	.LASF80:
 4696 0672 70747232 		.ascii	"ptr2SnsFlash\000"
 4696      536E7346 
 4696      6C617368 
 4696      00
 4697              	.LASF68:
 4698 067f 736E7254 		.ascii	"snrTestRawCount\000"
 4698      65737452 
 4698      6177436F 
 4698      756E7400 
 4699              	.LASF135:
 4700 068f 66726571 		.ascii	"freqOffset1\000"
 4700      4F666673 
 4700      65743100 
 4701              	.LASF29:
 4702 069b 6E4E6F69 		.ascii	"nNoiseTh\000"
 4702      73655468 
 4702      00
 4703              	.LASF60:
 4704 06a4 63736430 		.ascii	"csd0Config\000"
 4704      436F6E66 
 4704      696700
 4705              	.LASF17:
 4706 06af 63796973 		.ascii	"cyisraddress\000"
 4706      72616464 
 4706      72657373 
 4706      00
 4707              	.LASF136:
 4708 06bc 66726571 		.ascii	"freqOffset2\000"
 4708      4F666673 
 4708      65743200 
 4709              	.LASF92:
 4710 06c8 6C6F6E67 		.ascii	"long double\000"
 4710      20646F75 
 4710      626C6500 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 142


 4711              	.LASF36:
 4712 06d4 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 4712      656E7365 
 4712      5F315F52 
 4712      414D5F57 
 4712      445F4241 
 4713              	.LASF70:
 4714 06f2 6873696F 		.ascii	"hsiomPtr\000"
 4714      6D507472 
 4714      00
 4715              	.LASF11:
 4716 06fb 75696E74 		.ascii	"uint32\000"
 4716      333200
 4717              	.LASF30:
 4718 0702 68797374 		.ascii	"hysteresis\000"
 4718      65726573 
 4718      697300
 4719              	.LASF83:
 4720 070d 70747232 		.ascii	"ptr2FltrHistory\000"
 4720      466C7472 
 4720      48697374 
 4720      6F727900 
 4721              	.LASF20:
 4722 071d 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 4722      656E7365 
 4722      5F315F55 
 4722      4E444546 
 4722      494E4544 
 4723              	.LASF50:
 4724 0734 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 4724      656E7365 
 4724      5F315F52 
 4724      414D5F53 
 4724      4E535F4C 
 4725              	.LASF75:
 4726 0753 6D61736B 		.ascii	"mask\000"
 4726      00
 4727              	.LASF175:
 4728 0758 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_Sensing.c\000"
 4728      72617465 
 4728      645F536F 
 4728      75726365 
 4728      5C50536F 
 4729              	.LASF130:
 4730 0784 43617053 		.ascii	"CapSense_1_SsChangeImoFreq\000"
 4730      656E7365 
 4730      5F315F53 
 4730      73436861 
 4730      6E676549 
 4731              	.LASF93:
 4732 079f 77646774 		.ascii	"wdgtIndex\000"
 4732      496E6465 
 4732      7800
 4733              	.LASF144:
 4734 07a9 736E7349 		.ascii	"snsIndex\000"
 4734      6E646578 
 4734      00
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 143


 4735              	.LASF151:
 4736 07b2 43617053 		.ascii	"CapSense_1_dsRam\000"
 4736      656E7365 
 4736      5F315F64 
 4736      7352616D 
 4736      00
 4737              	.LASF103:
 4738 07c3 43617053 		.ascii	"CapSense_1_Scan\000"
 4738      656E7365 
 4738      5F315F53 
 4738      63616E00 
 4739              	.LASF24:
 4740 07d3 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 4740      656E7365 
 4740      5F315F53 
 4740      454E5345 
 4740      5F4D4554 
 4741              	.LASF16:
 4742 07f1 72656733 		.ascii	"reg32\000"
 4742      3200
 4743              	.LASF67:
 4744 07f7 736E7254 		.ascii	"snrTestScanCounter\000"
 4744      65737453 
 4744      63616E43 
 4744      6F756E74 
 4744      657200
 4745              	.LASF51:
 4746 080a 636F6E66 		.ascii	"configId\000"
 4746      69674964 
 4746      00
 4747              	.LASF82:
 4748 0813 70747232 		.ascii	"ptr2SnsRam\000"
 4748      536E7352 
 4748      616D00
 4749              	.LASF91:
 4750 081e 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 4750      656E7365 
 4750      5F315F46 
 4750      4C415348 
 4750      5F535452 
 4751              	.LASF59:
 4752 0836 736E7353 		.ascii	"snsStatus\000"
 4752      74617475 
 4752      7300
 4753              	.LASF119:
 4754 0840 706F7374 		.ascii	"postScanStatus\000"
 4754      5363616E 
 4754      53746174 
 4754      757300
 4755              	.LASF34:
 4756 084f 736E7343 		.ascii	"snsClkSource\000"
 4756      6C6B536F 
 4756      75726365 
 4756      00
 4757              	.LASF35:
 4758 085c 73697A65 		.ascii	"sizetype\000"
 4758      74797065 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 144


 4758      00
 4759              	.LASF172:
 4760 0865 43617053 		.ascii	"CapSense_1_CSDDisconnectSns\000"
 4760      656E7365 
 4760      5F315F43 
 4760      53444469 
 4760      73636F6E 
 4761              	.LASF2:
 4762 0881 73686F72 		.ascii	"short int\000"
 4762      7420696E 
 4762      7400
 4763              	.LASF148:
 4764 088b 43617053 		.ascii	"CapSense_1_SsCSDSetColSnsClkDivider\000"
 4764      656E7365 
 4764      5F315F53 
 4764      73435344 
 4764      53657443 
 4765              	.LASF4:
 4766 08af 6C6F6E67 		.ascii	"long int\000"
 4766      20696E74 
 4766      00
 4767              	.LASF57:
 4768 08b8 77646774 		.ascii	"wdgtEnable\000"
 4768      456E6162 
 4768      6C6500
 4769              	.LASF126:
 4770 08c3 43617053 		.ascii	"CapSense_1_SsSetClockDividers\000"
 4770      656E7365 
 4770      5F315F53 
 4770      73536574 
 4770      436C6F63 
 4771              	.LASF152:
 4772 08e1 43617053 		.ascii	"CapSense_1_dsFlash\000"
 4772      656E7365 
 4772      5F315F64 
 4772      73466C61 
 4772      736800
 4773              	.LASF46:
 4774 08f4 64696666 		.ascii	"diff\000"
 4774      00
 4775              	.LASF54:
 4776 08f9 74756E65 		.ascii	"tunerCmd\000"
 4776      72436D64 
 4776      00
 4777              	.LASF73:
 4778 0902 70735074 		.ascii	"psPtr\000"
 4778      7200
 4779              	.LASF22:
 4780 0908 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 4780      656E7365 
 4780      5F315F53 
 4780      454E5345 
 4780      5F4D4554 
 4781              	.LASF38:
 4782 0926 62757474 		.ascii	"button0\000"
 4782      6F6E3000 
 4783              	.LASF39:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 145


 4784 092e 62757474 		.ascii	"button1\000"
 4784      6F6E3100 
 4785              	.LASF40:
 4786 0936 62757474 		.ascii	"button2\000"
 4786      6F6E3200 
 4787              	.LASF41:
 4788 093e 62757474 		.ascii	"button3\000"
 4788      6F6E3300 
 4789              	.LASF42:
 4790 0946 62757474 		.ascii	"button4\000"
 4790      6F6E3400 
 4791              	.LASF170:
 4792 094e 43617053 		.ascii	"CapSense_1_CSDCalibrateWidget\000"
 4792      656E7365 
 4792      5F315F43 
 4792      53444361 
 4792      6C696272 
 4793              	.LASF88:
 4794 096c 6E756D43 		.ascii	"numCols\000"
 4794      6F6C7300 
 4795              	.LASF58:
 4796 0974 77646774 		.ascii	"wdgtStatus\000"
 4796      53746174 
 4796      757300
 4797              	.LASF163:
 4798 097f 43617053 		.ascii	"CapSense_1_CSDSetupWidget\000"
 4798      656E7365 
 4798      5F315F43 
 4798      53445365 
 4798      74757057 
 4799              	.LASF155:
 4800 0999 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 4800      656E7365 
 4800      5F315F73 
 4800      656E736F 
 4800      72496E64 
 4801              	.LASF21:
 4802 09b0 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 4802      656E7365 
 4802      5F315F53 
 4802      454E5345 
 4802      5F4D4554 
 4803              	.LASF77:
 4804 09ce 64725368 		.ascii	"drShift\000"
 4804      69667400 
 4805              	.LASF5:
 4806 09d6 6C6F6E67 		.ascii	"long unsigned int\000"
 4806      20756E73 
 4806      69676E65 
 4806      6420696E 
 4806      7400
 4807              	.LASF147:
 4808 09e8 72657456 		.ascii	"retVal\000"
 4808      616C00
 4809              	.LASF121:
 4810 09ef 61646472 		.ascii	"address\000"
 4810      65737300 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 146


 4811              	.LASF33:
 4812 09f7 69646163 		.ascii	"idacMod\000"
 4812      4D6F6400 
 4813              	.LASF84:
 4814 09ff 70747232 		.ascii	"ptr2DebounceArr\000"
 4814      4465626F 
 4814      756E6365 
 4814      41727200 
 4815              	.LASF162:
 4816 0a0f 43617053 		.ascii	"CapSense_1_SsCSDElectrodeCheck\000"
 4816      656E7365 
 4816      5F315F53 
 4816      73435344 
 4816      456C6563 
 4817              	.LASF27:
 4818 0a2e 66696E67 		.ascii	"fingerTh\000"
 4818      65725468 
 4818      00
 4819              	.LASF129:
 4820 0a37 43617053 		.ascii	"CapSense_1_CalibrateAllWidgets\000"
 4820      656E7365 
 4820      5F315F43 
 4820      616C6962 
 4820      72617465 
 4821              	.LASF45:
 4822 0a56 62736C6E 		.ascii	"bslnExt\000"
 4822      45787400 
 4823              	.LASF133:
 4824 0a5e 63684964 		.ascii	"chId\000"
 4824      00
 4825              	.LASF15:
 4826 0a63 63797374 		.ascii	"cystatus\000"
 4826      61747573 
 4826      00
 4827              	.LASF1:
 4828 0a6c 756E7369 		.ascii	"unsigned char\000"
 4828      676E6564 
 4828      20636861 
 4828      7200
 4829              	.LASF178:
 4830 0a7a 70747246 		.ascii	"ptrFlashWdgt\000"
 4830      6C617368 
 4830      57646774 
 4830      00
 4831              	.LASF85:
 4832 0a87 73746174 		.ascii	"staticConfig\000"
 4832      6963436F 
 4832      6E666967 
 4832      00
 4833              	.LASF111:
 4834 0a94 696F5074 		.ascii	"ioPtr\000"
 4834      7200
 4835              	.LASF81:
 4836 0a9a 70747232 		.ascii	"ptr2WdgtRam\000"
 4836      57646774 
 4836      52616D00 
 4837              	.LASF107:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 147


 4838 0aa6 73746174 		.ascii	"state\000"
 4838      6500
 4839              	.LASF109:
 4840 0aac 656C7464 		.ascii	"eltdIndex\000"
 4840      496E6465 
 4840      7800
 4841              	.LASF74:
 4842 0ab6 6873696F 		.ascii	"hsiomMask\000"
 4842      6D4D6173 
 4842      6B00
 4843              	.LASF158:
 4844 0ac0 43617053 		.ascii	"CapSense_1_currentSenseMethod\000"
 4844      656E7365 
 4844      5F315F63 
 4844      75727265 
 4844      6E745365 
 4845              	.LASF145:
 4846 0ade 63757253 		.ascii	"curSnsIOPtr\000"
 4846      6E73494F 
 4846      50747200 
 4847              	.LASF125:
 4848 0aea 736E7343 		.ascii	"snsClk\000"
 4848      6C6B00
 4849              	.LASF165:
 4850 0af1 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4850      74657243 
 4850      72697469 
 4850      63616C53 
 4850      65637469 
 4851              	.LASF0:
 4852 0b08 7369676E 		.ascii	"signed char\000"
 4852      65642063 
 4852      68617200 
 4853              	.LASF44:
 4854 0b14 62736C6E 		.ascii	"bsln\000"
 4854      00
 4855              	.LASF3:
 4856 0b19 73686F72 		.ascii	"short unsigned int\000"
 4856      7420756E 
 4856      7369676E 
 4856      65642069 
 4856      6E7400
 4857              	.LASF79:
 4858 0b2c 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 4858      656E7365 
 4858      5F315F46 
 4858      4C415348 
 4858      5F494F5F 
 4859              	.LASF160:
 4860 0b47 43617053 		.ascii	"CapSense_1_immunity\000"
 4860      656E7365 
 4860      5F315F69 
 4860      6D6D756E 
 4860      69747900 
 4861              	.LASF99:
 4862 0b5b 6E657752 		.ascii	"newRegValue\000"
 4862      65675661 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 148


 4862      6C756500 
 4863              	.LASF143:
 4864 0b67 43617053 		.ascii	"CapSense_1_SsClearCSDSensors\000"
 4864      656E7365 
 4864      5F315F53 
 4864      73436C65 
 4864      61724353 
 4865              	.LASF9:
 4866 0b84 75696E74 		.ascii	"uint8\000"
 4866      3800
 4867              	.LASF13:
 4868 0b8a 646F7562 		.ascii	"double\000"
 4868      6C6500
 4869              	.LASF47:
 4870 0b91 6E656742 		.ascii	"negBslnRstCnt\000"
 4870      736C6E52 
 4870      7374436E 
 4870      7400
 4871              	.LASF49:
 4872 0b9f 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 4872      656E7365 
 4872      5F315F52 
 4872      414D5F53 
 4872      4E535F53 
 4873              	.LASF134:
 4874 0bb9 736E7343 		.ascii	"snsClkDivider\000"
 4874      6C6B4469 
 4874      76696465 
 4874      7200
 4875              	.LASF52:
 4876 0bc7 64657669 		.ascii	"deviceId\000"
 4876      63654964 
 4876      00
 4877              	.LASF101:
 4878 0bd0 77696467 		.ascii	"widgetStatus\000"
 4878      65745374 
 4878      61747573 
 4878      00
 4879              	.LASF37:
 4880 0bdd 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 4880      656E7365 
 4880      5F315F52 
 4880      414D5F57 
 4880      445F4255 
 4881              	.LASF100:
 4882 0bfd 77696467 		.ascii	"widgetId\000"
 4882      65744964 
 4882      00
 4883              	.LASF118:
 4884 0c06 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 4884      656E7365 
 4884      5F315F53 
 4884      73506F73 
 4884      74416C6C 
 4885              	.LASF154:
 4886 0c26 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 4886      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccCEuEyY.s 			page 149


 4886      5F315F77 
 4886      69646765 
 4886      74496E64 
 4887              	.LASF90:
 4888 0c3d 77646774 		.ascii	"wdgtArray\000"
 4888      41727261 
 4888      7900
 4889              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
