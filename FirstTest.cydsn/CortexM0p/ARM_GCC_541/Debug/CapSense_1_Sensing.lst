ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidivmod
  20              		.section	.text.CapSense_1_SsCalcLfsrSize,"ax",%progbits
  21              		.align	2
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_1_SsCalcLfsrSize, %function
  25              	CapSense_1_SsCalcLfsrSize:
  26              	.LFB20:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \file CapSense_1_Sensing.c
   3:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \version 5.20
   4:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \see CapSense_1 v5.20 Datasheet
  10:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 2


  31:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Structure.h"
  43:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_Adc.h"
  58:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (0u != CapSense_1_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #include "CapSense_1_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (0u != CapSense_1_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_1_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  85:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 3


  88:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 4


 145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
 161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
 165:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_SENSE_METHOD_ENUM CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_immunity[CapSense_1_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     const uint8 CapSense_1_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint8 CapSense_1_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_RAM_SNS_STRUCT *CapSense_1_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_WD_STRUCT const *CapSense_1_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 5


 202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_IsBusy
 212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint32 CapSense_1_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetupWidget
 240:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDSetupWidgetExt(), CapSense_1_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 6


 259:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_I_REP
 260:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function does not start sensor scanning, the CapSense_1_Scan()
 264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if ((CapSense_1_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 7


 316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
 317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_Scan
 348:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function is called only after the CapSense_1_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_1_IsBusy()
 358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_Scan(void)
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 8


 373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXScan();
 384:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDScan();
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXScan();
 394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_SetupWidget() and CapSense_1_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  using the CapSense_1_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 9


 430:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_ScanAllWidgets(void)
 431:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CapSense_1_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (0u != (CapSense_1_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_ENABLE;
 462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (0u != (CapSense_1_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 scanStatus = CapSense_1_Scan();
 477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 10


 487:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 488:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitialize
 489:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling the CapSense_1_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1 Component at power-up. The CapSense_1_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (centerFreqTrim < CapSense_1_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_1_IMO_FREQUE
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (centerFreqTrim > (CapSense_1_IMO_FREQUENCY_OFFSET_MAX - CapSense_1_IMO_FREQUENCY_O
 534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 11


 544:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****               ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 559:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_MANY_SENSE_MODES_EN)
 564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
 568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSX_E);
 570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ISX_E);
 572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 576:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (initStatus);
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 580:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 581:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetPinState
 583:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 585:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 586:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 587:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 589:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  associated with the ganged sensor is updated.
 590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 592:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 594:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 595:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 596:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 597:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 598:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function accepts the CapSense_1_SHIELD and
 599:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SENSOR states as an input only if there is at least
 600:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_1_TX_PIN
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 12


 601:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and CapSense_1_RX_PIN states as an input only if there is at least
 602:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSX widget in the project.
 603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling this function directly from the application layer is not
 605:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 606:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 607:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  automatically set the required pin states. They ignore changes
 608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  in the design made by the CapSense_1_SetPinState() function.
 609:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 610:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 611:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 612:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 613:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  sensor.
 614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration
 615:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  header file defined as CapSense_1_<WidgetName>_WDGT_ID.
 616:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param sensorElement
 618:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 619:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  its pin state.
 620:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 622:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 623:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_SNS<SensorNumber>_ID.
 624:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 625:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 627:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 628:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \endif
 629:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as:
 631:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_RX<RXNumber>_ID
 632:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_TX<TXNumber>_ID.
 633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 634:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param state
 635:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the state of the sensor to be set:
 636:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     1. CapSense_1_GROUND - The pin is connected to the ground.
 637:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     2. CapSense_1_HIGHZ - The drive mode of the pin is set to High-Z
 638:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        Analog.
 639:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     3. CapSense_1_SHIELD - The shield signal is routed to the pin
 640:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 641:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     4. CapSense_1_SENSOR - The pin is connected to the scanning bus
 642:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method is enabled).
 643:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     5. CapSense_1_TX_PIN - The Tx signal is routed to the sensor
 644:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     6. CapSense_1_RX_PIN - The pin is connected to the scanning bus
 646:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 647:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdIndex;
 653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8  interruptState;
 654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr;
 655:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 13


 658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check the ganged sns flag */
 662:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig & Ca
 663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr = CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 665:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr += sensorElement;
 666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinId];
 667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2
 672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = 1u;
 673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsF
 676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 678:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Reset HSIOM and PC registers */
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 687:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (state)
 689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_GROUND:
 691:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_HIGHZ:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSOR:
 706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Enable sensor */
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDConnectSns(ioPtr);
 708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 709:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 case CapSense_1_SHIELD:
 712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 14


 715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CyExitCriticalSection(interruptState);
 716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     break;
 717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 719:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_TX_PIN:
 723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_GPIO_STRGDRV <<
 726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 728:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_RX_PIN:
 730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK <
 733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wrong state */
 739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 741:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
 743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 745:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 746:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDDisableMode
 749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSD mode.
 753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  4. Disable Shield Electrodes.
 760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void)
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 765:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 770:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 15


 772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)))
 774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Disconnect IDACA and IDACB */
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))) */
 781:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsCSDElectrodeCheck();
 784:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
 789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_1_CSH_TO_AMUXBUS_B_MASK << CapSense_1_CSH_HS
 790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, newRegValue);
 791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 793:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT))
 796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableShieldElectrodes();
 797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)) */
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 800:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 801:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 802:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableCSXMode
 806:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSX mode.
 810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void)
 818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 820:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 825:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 16


 829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
 830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_CSXElectrodeCheck();
 833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 834:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 836:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableISXMode
 839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables ISX mode.
 843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void)
 851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 853:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 858:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
 863:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXElectrodeCheck();
 866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_DigPrt2_Stop();
 867:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_USES_PORT_3)
 868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DigPrt3_Stop();
 869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* CapSense_1_USES_PORT_3 */
 870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 871:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 873:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 874:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSwitchSensingMode
 875:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 876:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 877:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 878:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanned.
 880:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 881:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 882:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 883:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 884:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSD mode.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 17


 886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 887:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 888:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 889:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 890:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSX mode.
 891:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 892:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param mode
 893:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the scan mode:
 894:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSD_E
 895:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSX_E
 896:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_ISX_E
 897:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_BIST_E
 898:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_UNDEFINED_E
 899:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 900:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 901:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ENUM mode)
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == CapSense_1_currentSenseMethod)
 907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDDisableMode();
 910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 911:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == CapSense_1_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableCSXMode();
 916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == CapSense_1_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableISXMode();
 922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == CapSense_1_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistDisableMode();
 928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
 933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Release ADC resources */
 934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_AdcReleaseResources();
 935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
 936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 937:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Enable the specified mode */
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == mode)
 940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 18


 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDInitialize();
 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == mode)
 948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXInitialize();
 952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSX_E;
 953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 954:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == mode)
 956:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 957:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXInitialize();
 960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_ISX_E;
 961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == mode)
 964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistInitialize();
 967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_BIST_E;
 968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 976:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 978:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetIOsInDefaultState
 980:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 981:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 982:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 983:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all electrodes into a default state.
 984:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 985:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 986:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 987:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 988:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - Strong drive.
 989:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 990:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the ADC channels into a default state:
 992:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 993:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - HiZ-Analog.
 994:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 995:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 996:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly from the application
 997:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  layer.
 998:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 19


1000:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetIOsInDefaultState(void)
1001:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
1003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
1004:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 regValue;
1005:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes */
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_1_TOTAL_ELECTRODES; loopIndex++)
1008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 1. Disconnect HSIOM.
1011:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 2. Set strong DM.
1012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 3. Set pin state to logic 0.
1013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1022:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1026:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get next electrode */
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
1029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1030:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ADC_EN)
1032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ClearAdcChannels();
1033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     
1035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ISX_EN)
1036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXSetDefaultDigital();
1037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1039:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
1041:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1042:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsReleaseResources()
1043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1044:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1045:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1046:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1047:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  default state.
1048:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1049:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1050:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The function performs following tasks:
1051:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1052:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1053:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     Cmod for CSD mode)
1054:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1055:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1056:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 20


1057:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
1058:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Resources released successfully.
1059:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1060:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1062:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsReleaseResources(void)
1063:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1065:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
1067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1070:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
1072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableCSXMode();
1075:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1076:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableISXMode();
1079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1080:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableMode();
1083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
1084:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_BistDisableMode();
1087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1088:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) &&  \
1091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsSetIOsInDefaultState();
1093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1094:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE != CapSense_1_CSD_SHIELD_EN) &&  \
1095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION)) */
1096:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1100:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
1102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1103:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return busyStatus;
1105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1108:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1109:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsPostAllWidgetsScan
1111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 21


1114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is the function used by the CapSense_1 ISR to implement multiple widget
1118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanning.
1119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Should not be used by the application layer.
1120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsPostAllWidgetsScan(void)
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Increment widget index
1126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Check if all the widgets are scanned
1127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     */
1129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (1u != CapSense_1_TOTAL_WIDGETS)
1130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus postScanStatus;
1131:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_widgetIndex++;
1135:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             postScanStatus = CapSense_1_SetupWidget((uint32)CapSense_1_widgetIndex);
1137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
1144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_Scan();
1146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (CapSense_1_ENABLE == CapSense_1_CSD_EN))
1151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widget
1153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable the CSD block */
1155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
1156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1158:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                            (CapSense_1_ENABLE == CapSense_1_CSD_EN)) */
1159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update scan Counter */
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.scanCounter++;
1162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1164:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure */
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1169:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 22


1171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1173:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1174:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsIsrInitialize
1185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  proper working of the Component.
1194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1195:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param address
1196:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1197:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1198:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsIsrInitialize(cyisraddress address)
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1203:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetModClkClockDivider
1207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param modClk
1219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The divider value for the modulator clock.
1220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetModClkClockDivider(uint32 modClk)
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Stop modulator clock */
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 23


1228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CapSense_1_MODCLK_CMD_DIV_SHIFT)|
1229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_MODCLK_CMD_DISABLE_MASK));
1230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense modClk.
1233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) & CapSense_1_MODCLK_CMD_ENABLE_MASK))
1240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1242:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
1247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_MODCLK_CMD_PA_DIV_SHIFT) |
1248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   CapSense_1_MODCLK_CMD_ENABLE_MASK));
1249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1252:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) &
1255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(~CapSense_1_ModClk__ENABLE_MASK));
1256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Update ModClk clock divider.
1259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_ModClk__DI
1262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= (modClk - 1u);
1263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, newRegValue);
1264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set bit to enable ModClk clock. */
1266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) |
1268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ModClk__ENABLE_MASK);
1269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetSnsClockDivider
1275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the sense clock.
1280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 24


1285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1287:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1289:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1290:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetSnsClockDivider(uint32 snsClk)
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1292:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1294:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense clock.
1297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_SENSE_PERIOD_PTR);
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
1304:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Stop sense clock clock   */
1307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SnsClk__DIV_ID <<
1309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CapSense_1_SNSCLK_CMD_DIV_SHIFT)|
1310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SNSCLK_CMD_DISABLE_MASK));
1311:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Set divider value for sense clock.
1314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * to dividing by 1.
1316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) & CapSense_1_SNSCLK_CMD_ENABLE_MASK))
1321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1324:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_SHIFT
1328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_SNSCLK_CMD_PA_DIV_SHIFT) 
1329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       CapSense_1_SNSCLK_CMD_ENABLE_MASK));
1330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
1331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
1332:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
1336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(~(uint32)CapSense_1_SnsClk__ENABLE_MASK));
1337:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Update snsClk clock divider.
1340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 25


1342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_SnsClk
1343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (snsClk - 1u);
1344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, newRegValue);
1345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1346:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
1349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_SnsClk__ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetClockDividers
1357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  modClk The divider value for the modulator clock.
1372:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1373:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetModClkClockDivider(modClk);
1378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Sns clock */
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetSnsClockDivider(snsClk);
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ANYMODE_AUTOCAL)
1385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateWidget
1387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the
1392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget prior to calibration.
1393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function performs exactly the same tasks as
1396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_CalibrateAllWidgets, but only for a specified widget.
1397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the Enable compensation IDAC parameter. 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 26


1399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1403:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
1413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  A macro for the widget ID can be found in the
1415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1 Configuration header file defined as
1416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_<WidgetName>_WDGT_ID.
1417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the specified widget calibration:
1420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateWidget(uint32 widgetId)
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_TOTAL_WIDGETS <= widgetId)
1433:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1435:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /*
1438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              */
1441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (0u != CapSense_1_GET_WIDGET_EN_STATUS(widgetId))
1443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 else
1447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif  /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1453:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Exit from the loop because of a fail */
1455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 27


1456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN)
1462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSX_E ==
1463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSX widget */
1466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                        CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN) */
1469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)
1471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1474:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSD widget */
1475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RA
1476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1477:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN) */
1478:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RAWCOUNT_C
1482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXCalibrateWidget(widgetId, CapSense_1_ISX_RAWCOUNT_CAL_LEVEL);
1490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
1492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
1494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              /* Update CRC */
1496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN)
1497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_DsUpdateWidgetCrc(widgetId);
1498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN) */
1499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (0u);
1501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateAllWidgets
1508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1511:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 28


1513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  prior to calibration.
1514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1526:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endcond
1527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the calibration process:
1534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateAllWidgets(void)
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1543:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             calibrateStatus |= CapSense_1_CalibrateWidget(wdgtIndex);
1547:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1551:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
1552:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1554:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
1555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsAutoTune
1557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense_1 operation.
1561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the following:
1564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    2*5*R*Cp.
1567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 29


1570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the operation:
1571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_SsAutoTune(void)
1576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cp = 0uL;
1581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1582:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 cpRow = 0uL;
1583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cpWidget[CapSense_1_TOTAL_WIDGETS];
1586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
1587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Configure common config variables */
1590:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_1_CSD_SNSCLK_R_CONST;
1591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.vRef = CapSense_1_CSD_VREF_MV;
1592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_1_CSD_IDAC_GAIN_VALUE_NA;
1593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif ((CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) && (CapSense_1_DISABLE == CY_PSO
1599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained */
1600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1603:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Initialize CSD mode */
1612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDInitialize();
1613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN) */
1614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #1:
1617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - performing the first calibration at fixed settings
1618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sensor Cp
1619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sense clock frequency based on Cp
1620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sense clock for all the widgets */
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1626:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 30


1627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = CapSense_1_CALIBRATION_RESOLUTION;
1633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_1_CAL
1637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
1645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_CAL_LEVEL);
1648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get IDAC */
1657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calculate achived calibration level */
1660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcountR
1661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Find correct sense clock value */
1664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cpRow)
1667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1670:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
1672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
1675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1680:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 31


1684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << Ca
1685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 {
1686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_1_dsRam.modCsdClk;
1687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 }
1688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #else
1689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #endif
1691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1694:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1700:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calculate achived calibration level */
1702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcount * CapSen
1703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1704:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find correct sense clock value */
1706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cp)
1709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1712:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
1714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1722:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_1_FL
1727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                              ptrWdgt->snsClk = CapSense_1_dsRam.modCsdClk;
1729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
1731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif
1733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1734:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 32


1741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (cpRow > cp)
1742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1744:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Non-CSD widget */
1752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1756:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #2:
1759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with new sense clock frequency
1760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting resolution
1761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1762:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune resolution for all the widgets */
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1771:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1774:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1777:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set parasitic capacitance for columns */
1779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1780:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1787:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1794:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Set parasitic capacitance for rows */
1796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1797:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 33


1798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get IDAC */
1799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get finger capacitance */
1805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Init pointer to sigPFC */
1808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1809:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find resolution */
1811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1814:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #3:
1817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - selecting a widget clock source if AUTO
1818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - updating sensitivity
1820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1821:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sensitivity for all the widgets */
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1832:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
1837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
1838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
1839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return autoTuneStatus;
1843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1844:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) */
1845:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1846:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1847:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
1848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) ||\
1850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
1851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSinking
1853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 34


1855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
1856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1863:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void)
1865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1867:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sinking Mode */
1869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM2_PTR) & ~CapSense_1_IDAC_TRIM2_MOD_SNK_MASK;
1870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1871:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK) ;
1872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1873:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1874:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1875:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM2_COMP_SNK_MASK;
1876:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1877:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1878:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1880:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1881:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM2_PTR, trimValue);
1882:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1883:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1884:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
1885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1887:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1888:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) || \
1889:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
1890:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1891:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSourcing
1892:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1893:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1894:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
1895:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1896:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1897:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1898:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1899:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1900:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1901:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void)
1904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1906:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM1_PTR) & ~CapSense_1_IDAC_TRIM1_MOD_SRC_MASK;
1909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK);
1911:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 35


1912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM1_COMP_SRC_MASK;
1915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1918:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM1_PTR, trimValue);
1921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
1924:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1925:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsTrimIdacs
1928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1937:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  source mode based on sink/source mode configuration.
1938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void)
1942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
1947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_
1953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1954:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
1955:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1957:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeImoFreq
1960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the IMO frequency.
1964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  trims are contained in the CapSense_1_immunity[value] array for each
1968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  frequency channel.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 36


1969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param value The frequency channel ID.
1971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeImoFreq(uint32 value)
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1978:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1979:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeClkFreq
1980:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1981:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1982:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1983:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1984:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1985:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1986:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1987:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1988:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1989:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1990:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param chId
1991:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The frequency channel ID.
1992:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1993:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1994:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeClkFreq(uint32 chId)
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1996:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
1997:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset1 = 0u;
1998:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset2 = 0u;
1999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2000:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2004:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 snsClkSrc;
2009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2011:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((0u != CapSense_1_TOTAL_CSD_WIDGETS) || \
2013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_1_TOTAL_CS
2014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_1_dsFlash.wdgtArray[CapSense
2015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)ptrFlas
2016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch(CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex]))
2019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
2022:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get sensor clock divider value */
2023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
2024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsdClk;
2025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 37


2026:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2030:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2038:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2039:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2041:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F1;
2042:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F2;
2043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2044:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2045:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2046:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2047:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Get sense clk source */
2048:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2049:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2050:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2051:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2052:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2053:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2054:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2055:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2056:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2057:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2058:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2059:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2060:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2062:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2063:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2065:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset1 <<= 1u;
2068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset2 <<= 1u;
2069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2070:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2075:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2076:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
2080:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 38


2083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2084:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2088:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2094:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2096:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)
2098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM
2099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2105:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2106:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2107:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider >>= 1;
2110:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (snsClkDivider == 0u)
2111:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2112:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = 1u;
2113:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2114:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2116:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2117:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2118:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2119:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2121:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2122:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSD_WIDGETS) */
2126:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSX_WIDGETS)
2128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
2130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsxClk;
2131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F1;
2135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F2;
2136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2137:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 39


2140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
2141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2155:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2159:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSX_WIDGETS) */
2161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CYASSERT(0);
2164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2)))
2173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitializeSourceSenseClk
2175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2177:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2178:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2179:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  for all CSD widgets.
2183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsInitializeSourceSenseClk(void)
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2187:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
2188:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
2191:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2Wdgt
2193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2194:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 40


2197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2199:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2204:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2205:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_IS
2206:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2207:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2208:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2209:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
2210:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
2211:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
2212:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2215:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
2216:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_ISX_EN)) && \
2217:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2))) */
2218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2221:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2222:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetSenseClkSrc
2223:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2224:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2230:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget.
2236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2237:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
2239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2243:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2251:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             snsClkDivider = CapSense_1_SsCSDGetColSnsClkDivider(wdgtIndex);
2252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 41


2254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrW
2255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                              CapSen
2256:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /*
2260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * average PRS frequency through the argument.
2262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     */
2263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->r
2264:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
2268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2269:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * average PRS frequency through the argument.
2270:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
2271:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resol
2272:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2273:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2274:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2275:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2276:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2277:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2278:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2280:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
2281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2283:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
2284:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
2285:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_SsCSDGetRowSnsClkDivider(wdgtIndex);
2288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /*
2294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * average PRS frequency through the argument.
2296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             */
2297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)pt
2298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
2302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * average PRS frequency through the argument.
2304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
2305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdg
2306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = 0u;
2307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
2309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrScale = 0u;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 42


2311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LF
2313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2316:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2317:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2319:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetTxClkSrc
2322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
2337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2340:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
2342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 conversionsNum;
2344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2345:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)
2348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 snsClkDivider = CapSense_1_SsCSXGetTxClkDivider(wdgtIndex);
2351:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2352:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2353:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2354:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2355:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2356:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Unused function argument */
2357:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)wdgtIndex;
2358:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2359:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2360:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_CSX_TX_CLK_SOURCE;
2361:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2362:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Unused function argument */
2363:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex;
2364:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) */
2365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2366:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
2367:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 43


2368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)) */
2369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
2378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2379:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrSize
2380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2385:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2386:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2387:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  requirements:
2388:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2389:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2390:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2391:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2392:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2393:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2394:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2395:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  resolution The widget resolution.
2396:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2397:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2398:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2400:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2401:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
  28              		.loc 1 2401 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
2402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 lfsrSize = 0u;
2403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Find LFSR value */
2405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((CapSense_1_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
  42              		.loc 1 2405 0
  43 0006 9F28     		cmp	r0, #159
  44 0008 08D9     		bls	.L2
  45              		.loc 1 2405 0 is_stmt 0 discriminator 1
  46 000a 1B4B     		ldr	r3, .L12
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 44


  47 000c 9942     		cmp	r1, r3
  48 000e 05D9     		bls	.L2
2406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (CapSense_1_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC4_PERIOD)))
  49              		.loc 1 2407 0 is_stmt 1
  50 0010 1A49     		ldr	r1, .L12+4
  51              	.LVL2:
  52 0012 2800     		movs	r0, r5
  53              	.LVL3:
  54 0014 FFF7FEFF 		bl	__aeabi_uidivmod
  55              	.LVL4:
2406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (CapSense_1_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
  56              		.loc 1 2406 0
  57 0018 0029     		cmp	r1, #0
  58 001a 21D0     		beq	.L6
  59              	.L2:
2408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC4;
2410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
  60              		.loc 1 2411 0
  61 001c 9F2C     		cmp	r4, #159
  62 001e 09D9     		bls	.L4
  63              		.loc 1 2411 0 is_stmt 0 discriminator 1
  64 0020 FF23     		movs	r3, #255
  65 0022 5B00     		lsls	r3, r3, #1
  66 0024 9D42     		cmp	r5, r3
  67 0026 05D9     		bls	.L4
2412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC3_PERIOD)))
  68              		.loc 1 2413 0 is_stmt 1
  69 0028 1549     		ldr	r1, .L12+8
  70 002a 2800     		movs	r0, r5
  71 002c FFF7FEFF 		bl	__aeabi_uidivmod
  72              	.LVL5:
2412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
  73              		.loc 1 2412 0
  74 0030 0029     		cmp	r1, #0
  75 0032 17D0     		beq	.L7
  76              	.L4:
2414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC3;
2416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
  77              		.loc 1 2417 0
  78 0034 9F2C     		cmp	r4, #159
  79 0036 07D9     		bls	.L5
  80              		.loc 1 2417 0 is_stmt 0 discriminator 1
  81 0038 7E2D     		cmp	r5, #126
  82 003a 05D9     		bls	.L5
2418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC2_PERIOD)))
  83              		.loc 1 2419 0 is_stmt 1
  84 003c 7F21     		movs	r1, #127
  85 003e 2800     		movs	r0, r5
  86 0040 FFF7FEFF 		bl	__aeabi_uidivmod
  87              	.LVL6:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 45


2418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
  88              		.loc 1 2418 0
  89 0044 0029     		cmp	r1, #0
  90 0046 0FD0     		beq	.L8
  91              	.L5:
2420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC2;
2422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
  92              		.loc 1 2423 0
  93 0048 9F2C     		cmp	r4, #159
  94 004a 0FD9     		bls	.L9
  95              		.loc 1 2423 0 is_stmt 0 discriminator 1
  96 004c 3E2D     		cmp	r5, #62
  97 004e 0FD9     		bls	.L10
2424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC1_PERIOD)))
  98              		.loc 1 2425 0 is_stmt 1
  99 0050 3F21     		movs	r1, #63
 100 0052 2800     		movs	r0, r5
 101 0054 FFF7FEFF 		bl	__aeabi_uidivmod
 102              	.LVL7:
2424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 103              		.loc 1 2424 0
 104 0058 0029     		cmp	r1, #0
 105 005a 0BD0     		beq	.L11
2426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC1;
2428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2429:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
 106              		.loc 1 2431 0
 107 005c 0020     		movs	r0, #0
 108 005e 0AE0     		b	.L3
 109              	.L6:
2409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 110              		.loc 1 2409 0
 111 0060 0420     		movs	r0, #4
 112 0062 08E0     		b	.L3
 113              	.L7:
2415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 114              		.loc 1 2415 0
 115 0064 0320     		movs	r0, #3
 116 0066 06E0     		b	.L3
 117              	.L8:
2421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 118              		.loc 1 2421 0
 119 0068 0220     		movs	r0, #2
 120 006a 04E0     		b	.L3
 121              	.L9:
 122              		.loc 1 2431 0
 123 006c 0020     		movs	r0, #0
 124 006e 02E0     		b	.L3
 125              	.L10:
 126 0070 0020     		movs	r0, #0
 127 0072 00E0     		b	.L3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 46


 128              	.L11:
2427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 129              		.loc 1 2427 0
 130 0074 0120     		movs	r0, #1
 131              	.L3:
 132              	.LVL8:
2432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (lfsrSize);
2435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 133              		.loc 1 2435 0
 134              		@ sp needed
 135              	.LVL9:
 136              	.LVL10:
 137 0076 70BD     		pop	{r4, r5, r6, pc}
 138              	.L13:
 139              		.align	2
 140              	.L12:
 141 0078 FE030000 		.word	1022
 142 007c FF030000 		.word	1023
 143 0080 FF010000 		.word	511
 144              		.cfi_endproc
 145              	.LFE20:
 146              		.size	CapSense_1_SsCalcLfsrSize, .-CapSense_1_SsCalcLfsrSize
 147              		.global	__aeabi_uidiv
 148              		.section	.text.CapSense_1_SsCalcLfsrScale,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	CapSense_1_SsCalcLfsrScale, %function
 153              	CapSense_1_SsCalcLfsrScale:
 154              	.LFB21:
2436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2437:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2439:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrScale
2440:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2441:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2442:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2443:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2444:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2445:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2446:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2447:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2448:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  period.
2449:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2450:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  range +/-10%.
2452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2454:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2455:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2456:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2458:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2459:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2460:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 47


2461:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2462:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2463:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2464:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2465:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2466:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2467:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2468:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2470:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2471:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2472:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
2473:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2475:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 155              		.loc 1 2477 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL11:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
2478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrScale;
2479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrRange;
2480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrDither;
2481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2482:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     switch(lfsrSize)
 164              		.loc 1 2483 0
 165 0002 4B1E     		subs	r3, r1, #1
 166 0004 DBB2     		uxtb	r3, r3
 167 0006 032B     		cmp	r3, #3
 168 0008 01D8     		bhi	.L20
2484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC1:
2486:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC1_RANGE;
 169              		.loc 1 2487 0
 170 000a 1023     		movs	r3, #16
 171 000c 00E0     		b	.L15
 172              	.L20:
2488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2490:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC2:
2491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC2_RANGE;
2493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2494:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC3:
2496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC3_RANGE;
2498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2499:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 48


2500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC4:
2501:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC4_RANGE;
2503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2504:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2505:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = 0u;
 173              		.loc 1 2507 0
 174 000e 0023     		movs	r3, #0
 175              	.L15:
 176              	.LVL12:
2508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
2515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((lfsrSize != CapSense_1_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
 177              		.loc 1 2515 0
 178 0010 0029     		cmp	r1, #0
 179 0012 11D0     		beq	.L21
 180              		.loc 1 2515 0 is_stmt 0 discriminator 1
 181 0014 002B     		cmp	r3, #0
 182 0016 11D0     		beq	.L22
2516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
 183              		.loc 1 2518 0 is_stmt 1
 184 0018 6422     		movs	r2, #100
 185 001a 5343     		muls	r3, r2
 186              	.LVL13:
 187 001c 0100     		movs	r1, r0
 188              	.LVL14:
 189 001e 1800     		movs	r0, r3
 190              	.LVL15:
 191 0020 FFF7FEFF 		bl	__aeabi_uidiv
 192              	.LVL16:
2519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
 193              		.loc 1 2519 0
 194 0024 0023     		movs	r3, #0
2520:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(lfsrDither < CapSense_1_LFSR_DITHER_PERCENTAGE)
 195              		.loc 1 2521 0
 196 0026 01E0     		b	.L18
 197              	.LVL17:
 198              	.L19:
2522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale++;
 199              		.loc 1 2523 0
 200 0028 0133     		adds	r3, r3, #1
 201              	.LVL18:
2524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrDither <<=1uL;
 202              		.loc 1 2524 0
 203 002a 4000     		lsls	r0, r0, #1
 204              	.LVL19:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 49


 205              	.L18:
2521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 206              		.loc 1 2521 0
 207 002c 0928     		cmp	r0, #9
 208 002e FBD9     		bls	.L19
2525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if(lfsrDither > CapSense_1_LFSR_DITHER_PERCENTAGE)
 209              		.loc 1 2527 0
 210 0030 0A28     		cmp	r0, #10
 211 0032 04D9     		bls	.L17
2528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale--;
 212              		.loc 1 2529 0
 213 0034 013B     		subs	r3, r3, #1
 214              	.LVL20:
 215 0036 02E0     		b	.L17
 216              	.LVL21:
 217              	.L21:
2530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
 218              		.loc 1 2534 0
 219 0038 0023     		movs	r3, #0
 220              	.LVL22:
 221 003a 00E0     		b	.L17
 222              	.LVL23:
 223              	.L22:
 224 003c 0023     		movs	r3, #0
 225              	.LVL24:
 226              	.L17:
2535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2536:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return ((uint8)lfsrScale);
 227              		.loc 1 2537 0
 228 003e D8B2     		uxtb	r0, r3
2538:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 229              		.loc 1 2538 0
 230              		@ sp needed
 231 0040 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE21:
 234              		.size	CapSense_1_SsCalcLfsrScale, .-CapSense_1_SsCalcLfsrScale
 235 0042 C046     		.section	.text.CapSense_1_SsCSDDisableMode,"ax",%progbits
 236              		.align	2
 237              		.code	16
 238              		.thumb_func
 239              		.type	CapSense_1_SsCSDDisableMode, %function
 240              	CapSense_1_SsCSDDisableMode:
 241              	.LFB7:
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 242              		.loc 1 763 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 50


 246 0000 10B5     		push	{r4, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 4, -8
 249              		.cfi_offset 14, -4
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 250              		.loc 1 767 0
 251 0002 064A     		ldr	r2, .L24
 252 0004 1368     		ldr	r3, [r2]
 253              	.LVL25:
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 254              		.loc 1 768 0
 255 0006 F021     		movs	r1, #240
 256 0008 8B43     		bics	r3, r1
 257              	.LVL26:
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 258              		.loc 1 769 0
 259 000a 1360     		str	r3, [r2]
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
 260              		.loc 1 775 0
 261 000c 044A     		ldr	r2, .L24+4
 262 000e 1368     		ldr	r3, [r2]
 263              	.LVL27:
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 264              		.loc 1 776 0
 265 0010 EF39     		subs	r1, r1, #239
 266 0012 8B43     		bics	r3, r1
 267              	.LVL28:
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 268              		.loc 1 777 0
 269 0014 1360     		str	r3, [r2]
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 270              		.loc 1 783 0
 271 0016 FFF7FEFF 		bl	CapSense_1_SsCSDElectrodeCheck
 272              	.LVL29:
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 273              		.loc 1 799 0
 274              		@ sp needed
 275 001a 10BD     		pop	{r4, pc}
 276              	.L25:
 277              		.align	2
 278              	.L24:
 279 001c 00040240 		.word	1073873920
 280 0020 A8020B40 		.word	1074463400
 281              		.cfi_endproc
 282              	.LFE7:
 283              		.size	CapSense_1_SsCSDDisableMode, .-CapSense_1_SsCSDDisableMode
 284              		.section	.text.CapSense_1_IsBusy,"ax",%progbits
 285              		.align	2
 286              		.global	CapSense_1_IsBusy
 287              		.code	16
 288              		.thumb_func
 289              		.type	CapSense_1_IsBusy, %function
 290              	CapSense_1_IsBusy:
 291              	.LFB1:
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
 292              		.loc 1 234 0
 293              		.cfi_startproc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 51


 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 297              		.loc 1 235 0
 298 0000 024B     		ldr	r3, .L27
 299 0002 DB68     		ldr	r3, [r3, #12]
 300 0004 8020     		movs	r0, #128
 301 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 302              		.loc 1 236 0
 303              		@ sp needed
 304 0008 7047     		bx	lr
 305              	.L28:
 306 000a C046     		.align	2
 307              	.L27:
 308 000c 00000000 		.word	CapSense_1_dsRam
 309              		.cfi_endproc
 310              	.LFE1:
 311              		.size	CapSense_1_IsBusy, .-CapSense_1_IsBusy
 312              		.section	.text.CapSense_1_SetupWidget,"ax",%progbits
 313              		.align	2
 314              		.global	CapSense_1_SetupWidget
 315              		.code	16
 316              		.thumb_func
 317              		.type	CapSense_1_SetupWidget, %function
 318              	CapSense_1_SetupWidget:
 319              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 320              		.loc 1 286 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              	.LVL30:
 325 0000 10B5     		push	{r4, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 4, -8
 328              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 329              		.loc 1 289 0
 330 0002 0E4B     		ldr	r3, .L35
 331 0004 DB68     		ldr	r3, [r3, #12]
 332 0006 DB03     		lsls	r3, r3, #15
 333 0008 0DD4     		bmi	.L32
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 334              		.loc 1 299 0
 335 000a 0028     		cmp	r0, #0
 336 000c 0DD1     		bne	.L33
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 337              		.loc 1 300 0 discriminator 1
 338 000e 4309     		lsrs	r3, r0, #5
 339 0010 0433     		adds	r3, r3, #4
 340 0012 9B00     		lsls	r3, r3, #2
 341 0014 094A     		ldr	r2, .L35
 342 0016 9B58     		ldr	r3, [r3, r2]
 343 0018 1F22     		movs	r2, #31
 344 001a 0240     		ands	r2, r0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 52


 345 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 346              		.loc 1 299 0 discriminator 1
 347 001e DB07     		lsls	r3, r3, #31
 348 0020 05D4     		bmi	.L34
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 349              		.loc 1 307 0
 350 0022 0124     		movs	r4, #1
 351 0024 04E0     		b	.L30
 352              	.L32:
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 353              		.loc 1 292 0
 354 0026 1124     		movs	r4, #17
 355 0028 02E0     		b	.L30
 356              	.L33:
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 357              		.loc 1 307 0
 358 002a 0124     		movs	r4, #1
 359 002c 00E0     		b	.L30
 360              	.L34:
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 361              		.loc 1 303 0
 362 002e 0024     		movs	r4, #0
 363              	.L30:
 364              	.LVL31:
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 365              		.loc 1 314 0
 366 0030 002C     		cmp	r4, #0
 367 0032 01D1     		bne	.L31
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 368              		.loc 1 327 0
 369 0034 FFF7FEFF 		bl	CapSense_1_CSDSetupWidget
 370              	.LVL32:
 371              	.L31:
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 372              		.loc 1 343 0
 373 0038 2000     		movs	r0, r4
 374              		@ sp needed
 375              	.LVL33:
 376 003a 10BD     		pop	{r4, pc}
 377              	.L36:
 378              		.align	2
 379              	.L35:
 380 003c 00000000 		.word	CapSense_1_dsRam
 381              		.cfi_endproc
 382              	.LFE2:
 383              		.size	CapSense_1_SetupWidget, .-CapSense_1_SetupWidget
 384              		.section	.text.CapSense_1_Scan,"ax",%progbits
 385              		.align	2
 386              		.global	CapSense_1_Scan
 387              		.code	16
 388              		.thumb_func
 389              		.type	CapSense_1_Scan, %function
 390              	CapSense_1_Scan:
 391              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 392              		.loc 1 369 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 53


 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396 0000 10B5     		push	{r4, lr}
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 4, -8
 399              		.cfi_offset 14, -4
 400              	.LVL34:
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 401              		.loc 1 372 0
 402 0002 084B     		ldr	r3, .L43
 403 0004 DB68     		ldr	r3, [r3, #12]
 404 0006 DB03     		lsls	r3, r3, #15
 405 0008 07D4     		bmi	.L40
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 406              		.loc 1 379 0
 407 000a 074B     		ldr	r3, .L43+4
 408 000c 1B78     		ldrb	r3, [r3]
 409 000e 012B     		cmp	r3, #1
 410 0010 05D1     		bne	.L42
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 411              		.loc 1 388 0
 412 0012 FFF7FEFF 		bl	CapSense_1_CSDScan
 413              	.LVL35:
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 414              		.loc 1 370 0
 415 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 416              		.loc 1 389 0
 417 0018 03E0     		b	.L38
 418              	.L40:
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 419              		.loc 1 375 0
 420 001a 1120     		movs	r0, #17
 421 001c 01E0     		b	.L38
 422              	.L42:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 423              		.loc 1 397 0
 424 001e 0120     		movs	r0, #1
 425 0020 4042     		rsbs	r0, r0, #0
 426              	.L38:
 427              	.LVL36:
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 428              		.loc 1 402 0
 429              		@ sp needed
 430 0022 10BD     		pop	{r4, pc}
 431              	.L44:
 432              		.align	2
 433              	.L43:
 434 0024 00000000 		.word	CapSense_1_dsRam
 435 0028 00000000 		.word	.LANCHOR0
 436              		.cfi_endproc
 437              	.LFE3:
 438              		.size	CapSense_1_Scan, .-CapSense_1_Scan
 439              		.section	.text.CapSense_1_ScanAllWidgets,"ax",%progbits
 440              		.align	2
 441              		.global	CapSense_1_ScanAllWidgets
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 54


 442              		.code	16
 443              		.thumb_func
 444              		.type	CapSense_1_ScanAllWidgets, %function
 445              	CapSense_1_ScanAllWidgets:
 446              	.LFB4:
 431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 447              		.loc 1 431 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 0, uses_anonymous_args = 0
 451 0000 10B5     		push	{r4, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 4, -8
 454              		.cfi_offset 14, -4
 455              	.LVL37:
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 456              		.loc 1 436 0
 457 0002 0C4B     		ldr	r3, .L51
 458 0004 DB68     		ldr	r3, [r3, #12]
 459 0006 1B06     		lsls	r3, r3, #24
 460 0008 12D4     		bmi	.L50
 461 000a 0024     		movs	r4, #0
 462 000c 0120     		movs	r0, #1
 463 000e 4042     		rsbs	r0, r0, #0
 464 0010 0BE0     		b	.L47
 465              	.LVL38:
 466              	.L49:
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 467              		.loc 1 452 0
 468 0012 2000     		movs	r0, r4
 469              	.LVL39:
 470 0014 FFF7FEFF 		bl	CapSense_1_SetupWidget
 471              	.LVL40:
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 472              		.loc 1 454 0
 473 0018 0028     		cmp	r0, #0
 474 001a 05D1     		bne	.L48
 471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 475              		.loc 1 471 0
 476 001c 0022     		movs	r2, #0
 477 001e 064B     		ldr	r3, .L51+4
 478 0020 5A70     		strb	r2, [r3, #1]
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 479              		.loc 1 476 0
 480 0022 FFF7FEFF 		bl	CapSense_1_Scan
 481              	.LVL41:
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 482              		.loc 1 478 0
 483 0026 04E0     		b	.L46
 484              	.L48:
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 485              		.loc 1 449 0
 486 0028 0134     		adds	r4, r4, #1
 487              	.LVL42:
 488              	.L47:
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 489              		.loc 1 447 0 discriminator 1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 55


 490 002a 002C     		cmp	r4, #0
 491 002c F1D0     		beq	.L49
 492 002e 00E0     		b	.L46
 493              	.LVL43:
 494              	.L50:
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 495              		.loc 1 439 0
 496 0030 1120     		movs	r0, #17
 497              	.LVL44:
 498              	.L46:
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 499              		.loc 1 484 0
 500              		@ sp needed
 501 0032 10BD     		pop	{r4, pc}
 502              	.L52:
 503              		.align	2
 504              	.L51:
 505 0034 00000000 		.word	CapSense_1_dsRam
 506 0038 00000000 		.word	.LANCHOR0
 507              		.cfi_endproc
 508              	.LFE4:
 509              		.size	CapSense_1_ScanAllWidgets, .-CapSense_1_ScanAllWidgets
 510              		.section	.text.CapSense_1_SetPinState,"ax",%progbits
 511              		.align	2
 512              		.global	CapSense_1_SetPinState
 513              		.code	16
 514              		.thumb_func
 515              		.type	CapSense_1_SetPinState, %function
 516              	CapSense_1_SetPinState:
 517              	.LFB6:
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 518              		.loc 1 650 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 0
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 522              	.LVL45:
 523 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 524              		.cfi_def_cfa_offset 24
 525              		.cfi_offset 3, -24
 526              		.cfi_offset 4, -20
 527              		.cfi_offset 5, -16
 528              		.cfi_offset 6, -12
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0002 1600     		movs	r6, r2
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 532              		.loc 1 675 0
 533 0004 4001     		lsls	r0, r0, #5
 534              	.LVL46:
 535 0006 244B     		ldr	r3, .L60
 536 0008 C458     		ldr	r4, [r0, r3]
 537 000a CB00     		lsls	r3, r1, #3
 538 000c 591A     		subs	r1, r3, r1
 539              	.LVL47:
 540 000e 8B00     		lsls	r3, r1, #2
 541 0010 E418     		adds	r4, r4, r3
 542              	.LVL48:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 56


 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 543              		.loc 1 680 0
 544 0012 0025     		movs	r5, #0
 545 0014 3CE0     		b	.L54
 546              	.LVL49:
 547              	.L59:
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 548              		.loc 1 683 0
 549 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 550              	.LVL50:
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 551              		.loc 1 684 0
 552 001a 2168     		ldr	r1, [r4]
 553 001c 0B68     		ldr	r3, [r1]
 554 001e 277E     		ldrb	r7, [r4, #24]
 555 0020 0F22     		movs	r2, #15
 556 0022 BA40     		lsls	r2, r2, r7
 557 0024 9343     		bics	r3, r2
 558 0026 0B60     		str	r3, [r1]
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 559              		.loc 1 685 0
 560 0028 6168     		ldr	r1, [r4, #4]
 561 002a 0B68     		ldr	r3, [r1]
 562 002c A77E     		ldrb	r7, [r4, #26]
 563 002e 0722     		movs	r2, #7
 564 0030 BA40     		lsls	r2, r2, r7
 565 0032 9343     		bics	r3, r2
 566 0034 0B60     		str	r3, [r1]
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 567              		.loc 1 686 0
 568 0036 FFF7FEFF 		bl	CyExitCriticalSection
 569              	.LVL51:
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 570              		.loc 1 688 0
 571 003a 012E     		cmp	r6, #1
 572 003c 17D0     		beq	.L56
 573 003e 002E     		cmp	r6, #0
 574 0040 02D0     		beq	.L57
 575 0042 032E     		cmp	r6, #3
 576 0044 1FD0     		beq	.L58
 577 0046 21E0     		b	.L55
 578              	.L57:
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 579              		.loc 1 692 0
 580 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 581              	.LVL52:
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 582              		.loc 1 693 0
 583 004c 6268     		ldr	r2, [r4, #4]
 584 004e 1168     		ldr	r1, [r2]
 585 0050 A77E     		ldrb	r7, [r4, #26]
 586 0052 0623     		movs	r3, #6
 587 0054 BB40     		lsls	r3, r3, r7
 588 0056 0B43     		orrs	r3, r1
 589 0058 1360     		str	r3, [r2]
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 590              		.loc 1 694 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 57


 591 005a A168     		ldr	r1, [r4, #8]
 592 005c 0B68     		ldr	r3, [r1]
 593 005e 677E     		ldrb	r7, [r4, #25]
 594 0060 0122     		movs	r2, #1
 595 0062 BA40     		lsls	r2, r2, r7
 596 0064 9343     		bics	r3, r2
 597 0066 0B60     		str	r3, [r1]
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 598              		.loc 1 695 0
 599 0068 FFF7FEFF 		bl	CyExitCriticalSection
 600              	.LVL53:
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 601              		.loc 1 696 0
 602 006c 0EE0     		b	.L55
 603              	.L56:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 604              		.loc 1 699 0
 605 006e FFF7FEFF 		bl	CyEnterCriticalSection
 606              	.LVL54:
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 607              		.loc 1 700 0
 608 0072 A168     		ldr	r1, [r4, #8]
 609 0074 0B68     		ldr	r3, [r1]
 610 0076 677E     		ldrb	r7, [r4, #25]
 611 0078 0122     		movs	r2, #1
 612 007a BA40     		lsls	r2, r2, r7
 613 007c 9343     		bics	r3, r2
 614 007e 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 615              		.loc 1 701 0
 616 0080 FFF7FEFF 		bl	CyExitCriticalSection
 617              	.LVL55:
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 618              		.loc 1 702 0
 619 0084 02E0     		b	.L55
 620              	.L58:
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 621              		.loc 1 707 0
 622 0086 2000     		movs	r0, r4
 623 0088 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 624              	.LVL56:
 625              	.L55:
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 626              		.loc 1 742 0 discriminator 2
 627 008c 1C34     		adds	r4, r4, #28
 628              	.LVL57:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 629              		.loc 1 680 0 discriminator 2
 630 008e 0135     		adds	r5, r5, #1
 631              	.LVL58:
 632              	.L54:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 633              		.loc 1 680 0 is_stmt 0 discriminator 1
 634 0090 002D     		cmp	r5, #0
 635 0092 C0D0     		beq	.L59
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 636              		.loc 1 744 0 is_stmt 1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 58


 637              		@ sp needed
 638              	.LVL59:
 639              	.LVL60:
 640              	.LVL61:
 641 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 642              	.L61:
 643 0096 C046     		.align	2
 644              	.L60:
 645 0098 00000000 		.word	CapSense_1_dsFlash
 646              		.cfi_endproc
 647              	.LFE6:
 648              		.size	CapSense_1_SetPinState, .-CapSense_1_SetPinState
 649              		.section	.text.CapSense_1_SsSwitchSensingMode,"ax",%progbits
 650              		.align	2
 651              		.global	CapSense_1_SsSwitchSensingMode
 652              		.code	16
 653              		.thumb_func
 654              		.type	CapSense_1_SsSwitchSensingMode, %function
 655              	CapSense_1_SsSwitchSensingMode:
 656              	.LFB8:
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 657              		.loc 1 902 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 0
 660              		@ frame_needed = 0, uses_anonymous_args = 0
 661              	.LVL62:
 662 0000 10B5     		push	{r4, lr}
 663              		.cfi_def_cfa_offset 8
 664              		.cfi_offset 4, -8
 665              		.cfi_offset 14, -4
 666 0002 0400     		movs	r4, r0
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 667              		.loc 1 903 0
 668 0004 0C4B     		ldr	r3, .L66
 669 0006 1B78     		ldrb	r3, [r3]
 670 0008 8342     		cmp	r3, r0
 671 000a 14D0     		beq	.L62
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 672              		.loc 1 906 0
 673 000c 012B     		cmp	r3, #1
 674 000e 01D1     		bne	.L64
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 675              		.loc 1 909 0
 676 0010 FFF7FEFF 		bl	CapSense_1_SsCSDDisableMode
 677              	.LVL63:
 678              	.L64:
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 679              		.loc 1 939 0
 680 0014 012C     		cmp	r4, #1
 681 0016 05D1     		bne	.L65
 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 682              		.loc 1 943 0
 683 0018 FFF7FEFF 		bl	CapSense_1_SsCSDInitialize
 684              	.LVL64:
 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 685              		.loc 1 944 0
 686 001c 0122     		movs	r2, #1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 59


 687 001e 064B     		ldr	r3, .L66
 688 0020 1A70     		strb	r2, [r3]
 689 0022 08E0     		b	.L62
 690              	.L65:
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 691              		.loc 1 947 0
 692 0024 022C     		cmp	r4, #2
 693 0026 06D0     		beq	.L62
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 694              		.loc 1 955 0
 695 0028 042C     		cmp	r4, #4
 696 002a 04D0     		beq	.L62
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 697              		.loc 1 963 0
 698 002c 032C     		cmp	r4, #3
 699 002e 02D0     		beq	.L62
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 700              		.loc 1 972 0
 701 0030 0022     		movs	r2, #0
 702 0032 014B     		ldr	r3, .L66
 703 0034 1A70     		strb	r2, [r3]
 704              	.L62:
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 705              		.loc 1 975 0
 706              		@ sp needed
 707 0036 10BD     		pop	{r4, pc}
 708              	.L67:
 709              		.align	2
 710              	.L66:
 711 0038 00000000 		.word	.LANCHOR0
 712              		.cfi_endproc
 713              	.LFE8:
 714              		.size	CapSense_1_SsSwitchSensingMode, .-CapSense_1_SsSwitchSensingMode
 715              		.section	.text.CapSense_1_SsSetIOsInDefaultState,"ax",%progbits
 716              		.align	2
 717              		.global	CapSense_1_SsSetIOsInDefaultState
 718              		.code	16
 719              		.thumb_func
 720              		.type	CapSense_1_SsSetIOsInDefaultState, %function
 721              	CapSense_1_SsSetIOsInDefaultState:
 722              	.LFB9:
1001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
 723              		.loc 1 1001 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727 0000 30B5     		push	{r4, r5, lr}
 728              		.cfi_def_cfa_offset 12
 729              		.cfi_offset 4, -12
 730              		.cfi_offset 5, -8
 731              		.cfi_offset 14, -4
 732              	.LVL65:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 733              		.loc 1 1007 0
 734 0002 0021     		movs	r1, #0
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
 735              		.loc 1 1002 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 60


 736 0004 0D4B     		ldr	r3, .L71
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 737              		.loc 1 1007 0
 738 0006 16E0     		b	.L69
 739              	.LVL66:
 740              	.L70:
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 741              		.loc 1 1014 0 discriminator 3
 742 0008 1868     		ldr	r0, [r3]
 743 000a 0268     		ldr	r2, [r0]
 744              	.LVL67:
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 745              		.loc 1 1015 0 discriminator 3
 746 000c 1C69     		ldr	r4, [r3, #16]
 747 000e A243     		bics	r2, r4
 748              	.LVL68:
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 749              		.loc 1 1016 0 discriminator 3
 750 0010 0260     		str	r2, [r0]
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
 751              		.loc 1 1018 0 discriminator 3
 752 0012 5C68     		ldr	r4, [r3, #4]
 753 0014 2268     		ldr	r2, [r4]
 754              	.LVL69:
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
 755              		.loc 1 1019 0 discriminator 3
 756 0016 9D7E     		ldrb	r5, [r3, #26]
 757 0018 0720     		movs	r0, #7
 758 001a A840     		lsls	r0, r0, r5
 759 001c 8243     		bics	r2, r0
 760              	.LVL70:
 761 001e 1000     		movs	r0, r2
 762              	.LVL71:
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 763              		.loc 1 1020 0 discriminator 3
 764 0020 0622     		movs	r2, #6
 765 0022 AA40     		lsls	r2, r2, r5
 766 0024 0243     		orrs	r2, r0
 767              	.LVL72:
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 768              		.loc 1 1021 0 discriminator 3
 769 0026 2260     		str	r2, [r4]
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
 770              		.loc 1 1023 0 discriminator 3
 771 0028 9868     		ldr	r0, [r3, #8]
 772 002a 0268     		ldr	r2, [r0]
 773              	.LVL73:
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 774              		.loc 1 1024 0 discriminator 3
 775 002c 5C69     		ldr	r4, [r3, #20]
 776 002e A243     		bics	r2, r4
 777              	.LVL74:
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 778              		.loc 1 1025 0 discriminator 3
 779 0030 0260     		str	r2, [r0]
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 780              		.loc 1 1028 0 discriminator 3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 61


 781 0032 1C33     		adds	r3, r3, #28
 782              	.LVL75:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 783              		.loc 1 1007 0 discriminator 3
 784 0034 0131     		adds	r1, r1, #1
 785              	.LVL76:
 786              	.L69:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 787              		.loc 1 1007 0 is_stmt 0 discriminator 1
 788 0036 0029     		cmp	r1, #0
 789 0038 E6D0     		beq	.L70
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 790              		.loc 1 1038 0 is_stmt 1
 791              		@ sp needed
 792 003a 30BD     		pop	{r4, r5, pc}
 793              	.L72:
 794              		.align	2
 795              	.L71:
 796 003c 00000000 		.word	CapSense_1_ioList
 797              		.cfi_endproc
 798              	.LFE9:
 799              		.size	CapSense_1_SsSetIOsInDefaultState, .-CapSense_1_SsSetIOsInDefaultState
 800              		.section	.text.CapSense_1_SsPostAllWidgetsScan,"ax",%progbits
 801              		.align	2
 802              		.global	CapSense_1_SsPostAllWidgetsScan
 803              		.code	16
 804              		.thumb_func
 805              		.type	CapSense_1_SsPostAllWidgetsScan, %function
 806              	CapSense_1_SsPostAllWidgetsScan:
 807              	.LFB10:
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 808              		.loc 1 1123 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812              		@ link register save eliminated.
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 813              		.loc 1 1180 0
 814              		@ sp needed
 815 0000 7047     		bx	lr
 816              		.cfi_endproc
 817              	.LFE10:
 818              		.size	CapSense_1_SsPostAllWidgetsScan, .-CapSense_1_SsPostAllWidgetsScan
 819 0002 C046     		.section	.text.CapSense_1_SsIsrInitialize,"ax",%progbits
 820              		.align	2
 821              		.global	CapSense_1_SsIsrInitialize
 822              		.code	16
 823              		.thumb_func
 824              		.type	CapSense_1_SsIsrInitialize, %function
 825              	CapSense_1_SsIsrInitialize:
 826              	.LFB11:
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
 827              		.loc 1 1200 0
 828              		.cfi_startproc
 829              		@ args = 0, pretend = 0, frame = 0
 830              		@ frame_needed = 0, uses_anonymous_args = 0
 831              	.LVL77:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 62


 832 0000 10B5     		push	{r4, lr}
 833              		.cfi_def_cfa_offset 8
 834              		.cfi_offset 4, -8
 835              		.cfi_offset 14, -4
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 836              		.loc 1 1201 0
 837 0002 FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 838              	.LVL78:
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 839              		.loc 1 1202 0
 840              		@ sp needed
 841 0006 10BD     		pop	{r4, pc}
 842              		.cfi_endproc
 843              	.LFE11:
 844              		.size	CapSense_1_SsIsrInitialize, .-CapSense_1_SsIsrInitialize
 845              		.section	.text.CapSense_1_SsSetModClkClockDivider,"ax",%progbits
 846              		.align	2
 847              		.global	CapSense_1_SsSetModClkClockDivider
 848              		.code	16
 849              		.thumb_func
 850              		.type	CapSense_1_SsSetModClkClockDivider, %function
 851              	CapSense_1_SsSetModClkClockDivider:
 852              	.LFB12:
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
 853              		.loc 1 1223 0
 854              		.cfi_startproc
 855              		@ args = 0, pretend = 0, frame = 0
 856              		@ frame_needed = 0, uses_anonymous_args = 0
 857              		@ link register save eliminated.
 858              	.LVL79:
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
 859              		.loc 1 1226 0
 860 0000 074A     		ldr	r2, .L77
 861 0002 084B     		ldr	r3, .L77+4
 862 0004 1A60     		str	r2, [r3]
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 863              		.loc 1 1236 0
 864 0006 0138     		subs	r0, r0, #1
 865              	.LVL80:
 866 0008 0002     		lsls	r0, r0, #8
 867              	.LVL81:
 868 000a 074B     		ldr	r3, .L77+8
 869 000c 1860     		str	r0, [r3]
 870              	.L76:
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 871              		.loc 1 1239 0 discriminator 1
 872 000e 054B     		ldr	r3, .L77+4
 873 0010 1B68     		ldr	r3, [r3]
 874 0012 002B     		cmp	r3, #0
 875 0014 FBDB     		blt	.L76
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
 876              		.loc 1 1245 0
 877 0016 054A     		ldr	r2, .L77+12
 878 0018 024B     		ldr	r3, .L77+4
 879 001a 1A60     		str	r2, [r3]
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 880              		.loc 1 1270 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 63


 881              		@ sp needed
 882 001c 7047     		bx	lr
 883              	.L78:
 884 001e C046     		.align	2
 885              	.L77:
 886 0020 40000040 		.word	1073741888
 887 0024 00000140 		.word	1073807360
 888 0028 00030140 		.word	1073808128
 889 002c 40FF0080 		.word	-2147418304
 890              		.cfi_endproc
 891              	.LFE12:
 892              		.size	CapSense_1_SsSetModClkClockDivider, .-CapSense_1_SsSetModClkClockDivider
 893              		.section	.text.CapSense_1_SsSetSnsClockDivider,"ax",%progbits
 894              		.align	2
 895              		.global	CapSense_1_SsSetSnsClockDivider
 896              		.code	16
 897              		.thumb_func
 898              		.type	CapSense_1_SsSetSnsClockDivider, %function
 899              	CapSense_1_SsSetSnsClockDivider:
 900              	.LFB13:
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 901              		.loc 1 1291 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 906              	.LVL82:
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
 907              		.loc 1 1300 0
 908 0000 034A     		ldr	r2, .L80
 909 0002 1368     		ldr	r3, [r2]
 910              	.LVL83:
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
 911              		.loc 1 1301 0
 912 0004 1B0B     		lsrs	r3, r3, #12
 913              	.LVL84:
 914 0006 1B03     		lsls	r3, r3, #12
 915              	.LVL85:
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
 916              		.loc 1 1302 0
 917 0008 0138     		subs	r0, r0, #1
 918              	.LVL86:
 919 000a 1843     		orrs	r0, r3
 920              	.LVL87:
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 921              		.loc 1 1303 0
 922 000c 1060     		str	r0, [r2]
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 923              		.loc 1 1352 0
 924              		@ sp needed
 925 000e 7047     		bx	lr
 926              	.L81:
 927              		.align	2
 928              	.L80:
 929 0010 00020B40 		.word	1074463232
 930              		.cfi_endproc
 931              	.LFE13:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 64


 932              		.size	CapSense_1_SsSetSnsClockDivider, .-CapSense_1_SsSetSnsClockDivider
 933              		.section	.text.CapSense_1_SsSetClockDividers,"ax",%progbits
 934              		.align	2
 935              		.global	CapSense_1_SsSetClockDividers
 936              		.code	16
 937              		.thumb_func
 938              		.type	CapSense_1_SsSetClockDividers, %function
 939              	CapSense_1_SsSetClockDividers:
 940              	.LFB14:
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
 941              		.loc 1 1375 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945              	.LVL88:
 946 0000 10B5     		push	{r4, lr}
 947              		.cfi_def_cfa_offset 8
 948              		.cfi_offset 4, -8
 949              		.cfi_offset 14, -4
 950 0002 0400     		movs	r4, r0
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 951              		.loc 1 1377 0
 952 0004 0800     		movs	r0, r1
 953              	.LVL89:
 954 0006 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 955              	.LVL90:
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 956              		.loc 1 1380 0
 957 000a 2000     		movs	r0, r4
 958 000c FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 959              	.LVL91:
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 960              		.loc 1 1381 0
 961              		@ sp needed
 962              	.LVL92:
 963 0010 10BD     		pop	{r4, pc}
 964              		.cfi_endproc
 965              	.LFE14:
 966              		.size	CapSense_1_SsSetClockDividers, .-CapSense_1_SsSetClockDividers
 967 0012 C046     		.section	.text.CapSense_1_CalibrateWidget,"ax",%progbits
 968              		.align	2
 969              		.global	CapSense_1_CalibrateWidget
 970              		.code	16
 971              		.thumb_func
 972              		.type	CapSense_1_CalibrateWidget, %function
 973              	CapSense_1_CalibrateWidget:
 974              	.LFB15:
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 975              		.loc 1 1427 0
 976              		.cfi_startproc
 977              		@ args = 0, pretend = 0, frame = 0
 978              		@ frame_needed = 0, uses_anonymous_args = 0
 979              	.LVL93:
 980 0000 10B5     		push	{r4, lr}
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 4, -8
 983              		.cfi_offset 14, -4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 65


 984 0002 031E     		subs	r3, r0, #0
 985              	.LVL94:
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 986              		.loc 1 1432 0
 987 0004 01D1     		bne	.L86
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 988              		.loc 1 1428 0
 989 0006 0020     		movs	r0, #0
 990              	.LVL95:
 991 0008 00E0     		b	.L84
 992              	.LVL96:
 993              	.L86:
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 994              		.loc 1 1434 0
 995 000a 0120     		movs	r0, #1
 996              	.LVL97:
 997              	.L84:
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 998              		.loc 1 1452 0
 999 000c 0028     		cmp	r0, #0
 1000 000e 03D1     		bne	.L85
1481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1001              		.loc 1 1481 0
 1002 0010 5521     		movs	r1, #85
 1003 0012 1800     		movs	r0, r3
 1004              	.LVL98:
 1005 0014 FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 1006              	.LVL99:
 1007              	.L85:
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1008              		.loc 1 1503 0
 1009              		@ sp needed
 1010 0018 10BD     		pop	{r4, pc}
 1011              		.cfi_endproc
 1012              	.LFE15:
 1013              		.size	CapSense_1_CalibrateWidget, .-CapSense_1_CalibrateWidget
 1014 001a C046     		.section	.text.CapSense_1_CalibrateAllWidgets,"ax",%progbits
 1015              		.align	2
 1016              		.global	CapSense_1_CalibrateAllWidgets
 1017              		.code	16
 1018              		.thumb_func
 1019              		.type	CapSense_1_CalibrateAllWidgets, %function
 1020              	CapSense_1_CalibrateAllWidgets:
 1021              	.LFB16:
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1022              		.loc 1 1540 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 0
 1025              		@ frame_needed = 0, uses_anonymous_args = 0
 1026 0000 70B5     		push	{r4, r5, r6, lr}
 1027              		.cfi_def_cfa_offset 16
 1028              		.cfi_offset 4, -16
 1029              		.cfi_offset 5, -12
 1030              		.cfi_offset 6, -8
 1031              		.cfi_offset 14, -4
 1032              	.LVL100:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 66


 1033              		.loc 1 1544 0
 1034 0002 0024     		movs	r4, #0
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
 1035              		.loc 1 1541 0
 1036 0004 0025     		movs	r5, #0
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1037              		.loc 1 1544 0
 1038 0006 04E0     		b	.L88
 1039              	.LVL101:
 1040              	.L89:
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 1041              		.loc 1 1546 0 discriminator 3
 1042 0008 2000     		movs	r0, r4
 1043 000a FFF7FEFF 		bl	CapSense_1_CalibrateWidget
 1044              	.LVL102:
 1045 000e 0543     		orrs	r5, r0
 1046              	.LVL103:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1047              		.loc 1 1544 0 discriminator 3
 1048 0010 0134     		adds	r4, r4, #1
 1049              	.LVL104:
 1050              	.L88:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1051              		.loc 1 1544 0 is_stmt 0 discriminator 1
 1052 0012 002C     		cmp	r4, #0
 1053 0014 F8D0     		beq	.L89
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
 1054              		.loc 1 1550 0 is_stmt 1
 1055 0016 2800     		movs	r0, r5
 1056              		@ sp needed
 1057              	.LVL105:
 1058              	.LVL106:
 1059 0018 70BD     		pop	{r4, r5, r6, pc}
 1060              		.cfi_endproc
 1061              	.LFE16:
 1062              		.size	CapSense_1_CalibrateAllWidgets, .-CapSense_1_CalibrateAllWidgets
 1063 001a C046     		.section	.text.CapSense_1_SsClearCSDSensors,"ax",%progbits
 1064              		.align	2
 1065              		.global	CapSense_1_SsClearCSDSensors
 1066              		.code	16
 1067              		.thumb_func
 1068              		.type	CapSense_1_SsClearCSDSensors, %function
 1069              	CapSense_1_SsClearCSDSensors:
 1070              	.LFB22:
2539:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2540:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****           ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))) */
2547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsClearCSDSensors
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 67


2552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  an inactive state.
2558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  connection is Ground or Hi-Z.
2564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsClearCSDSensors(void)
2567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1071              		.loc 1 2567 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 0
 1074              		@ frame_needed = 0, uses_anonymous_args = 0
 1075 0000 70B5     		push	{r4, r5, r6, lr}
 1076              		.cfi_def_cfa_offset 16
 1077              		.cfi_offset 4, -16
 1078              		.cfi_offset 5, -12
 1079              		.cfi_offset 6, -8
 1080              		.cfi_offset 14, -4
 1081              	.LVL107:
2568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
2569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsIndex;
2570:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 pinIndex;
2573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2574:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Declare ptr to sensor IO structure */
2577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2579:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_IO_STRUCT const *curSnsIOPtr;
2582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
 1082              		.loc 1 2583 0
 1083 0002 0025     		movs	r5, #0
 1084 0004 12E0     		b	.L91
 1085              	.LVL108:
 1086              	.L94:
2584:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
2586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2588:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
 1087              		.loc 1 2588 0
 1088 0006 6B01     		lsls	r3, r5, #5
 1089 0008 0A4A     		ldr	r2, .L95
 1090 000a 9E58     		ldr	r6, [r3, r2]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 68


 1091              	.LVL109:
2589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                 CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlas
2590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Go through all the sensors in widget */
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_1_dsFlash.wdgtArray[wdgtIndex].total
 1092              		.loc 1 2592 0
 1093 000c 0024     		movs	r4, #0
 1094 000e 06E0     		b	.L92
 1095              	.LVL110:
 1096              	.L93:
2593:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Check ganged sns flag */
2596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[wdgtIndex].
2597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                  CapSense_1_GANGED_SNS_MASK))
2598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get sns pointer */
2600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
2601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                CapSense_1_dsFlash.wdgtArray[wdgtInd
2602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                snsIndex;
2603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             {
2606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinI
2608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Disconnect dedicated pin */
2610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 CapSense_1_CSDDisconnectSns(curDedicatedSnsIOPtr);
2611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             }
2612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2614:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Disable sensor */
2616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable sensor */
2620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 1097              		.loc 1 2620 0 discriminator 3
 1098 0010 E300     		lsls	r3, r4, #3
 1099 0012 1B1B     		subs	r3, r3, r4
 1100 0014 9800     		lsls	r0, r3, #2
 1101 0016 3018     		adds	r0, r6, r0
 1102 0018 FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1103              	.LVL111:
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1104              		.loc 1 2592 0 discriminator 3
 1105 001c 0134     		adds	r4, r4, #1
 1106              	.LVL112:
 1107              	.L92:
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1108              		.loc 1 2592 0 is_stmt 0 discriminator 1
 1109 001e 6B01     		lsls	r3, r5, #5
 1110 0020 044A     		ldr	r2, .L95
 1111 0022 D318     		adds	r3, r2, r3
 1112 0024 1B7E     		ldrb	r3, [r3, #24]
 1113 0026 9C42     		cmp	r4, r3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 69


 1114 0028 F2D3     		bcc	.L93
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1115              		.loc 1 2583 0 is_stmt 1 discriminator 2
 1116 002a 0135     		adds	r5, r5, #1
 1117              	.LVL113:
 1118              	.L91:
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1119              		.loc 1 2583 0 is_stmt 0 discriminator 1
 1120 002c 002D     		cmp	r5, #0
 1121 002e EAD0     		beq	.L94
2621:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1122              		.loc 1 2625 0 is_stmt 1
 1123              		@ sp needed
 1124              	.LVL114:
 1125 0030 70BD     		pop	{r4, r5, r6, pc}
 1126              	.L96:
 1127 0032 C046     		.align	2
 1128              	.L95:
 1129 0034 00000000 		.word	CapSense_1_dsFlash
 1130              		.cfi_endproc
 1131              	.LFE22:
 1132              		.size	CapSense_1_SsClearCSDSensors, .-CapSense_1_SsClearCSDSensors
 1133              		.section	.text.CapSense_1_SsCSDGetColSnsClkDivider,"ax",%progbits
 1134              		.align	2
 1135              		.global	CapSense_1_SsCSDGetColSnsClkDivider
 1136              		.code	16
 1137              		.thumb_func
 1138              		.type	CapSense_1_SsCSDGetColSnsClkDivider, %function
 1139              	CapSense_1_SsCSDGetColSnsClkDivider:
 1140              	.LFB23:
2626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDGetColSnsClkDivider
2629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2630:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2633:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
2641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
2644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2645:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2648:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 CapSense_1_SsCSDGetColSnsClkDivider(uint32 widgetId)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 70


2649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1141              		.loc 1 2649 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 0
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 1145              		@ link register save eliminated.
 1146              	.LVL115:
2650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 retVal;
2651:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 1147              		.loc 1 2656 0
 1148 0000 4001     		lsls	r0, r0, #5
 1149              	.LVL116:
 1150 0002 024B     		ldr	r3, .L98
 1151 0004 1818     		adds	r0, r3, r0
 1152 0006 4368     		ldr	r3, [r0, #4]
 1153              	.LVL117:
2657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1154              		.loc 1 2659 0
 1155 0008 5889     		ldrh	r0, [r3, #10]
 1156              	.LVL118:
2660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return (retVal);
2667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1157              		.loc 1 2667 0
 1158              		@ sp needed
 1159 000a 7047     		bx	lr
 1160              	.L99:
 1161              		.align	2
 1162              	.L98:
 1163 000c 00000000 		.word	CapSense_1_dsFlash
 1164              		.cfi_endproc
 1165              	.LFE23:
 1166              		.size	CapSense_1_SsCSDGetColSnsClkDivider, .-CapSense_1_SsCSDGetColSnsClkDivider
 1167              		.section	.text.CapSense_1_SsCSDSetColSnsClkDivider,"ax",%progbits
 1168              		.align	2
 1169              		.global	CapSense_1_SsCSDSetColSnsClkDivider
 1170              		.code	16
 1171              		.thumb_func
 1172              		.type	CapSense_1_SsCSDSetColSnsClkDivider, %function
 1173              	CapSense_1_SsCSDSetColSnsClkDivider:
 1174              	.LFB24:
2668:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2669:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDSetColSnsClkDivider
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 71


2672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value for one-dimension widgets
2676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value based on the Component
2680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param
2684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widgetId Specifies the ID of the widget.
2685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return The Sense Clock Divider value for one-dimension widgets
2687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *        and the Column Sense Clock divider value for two-dimension widgets.
2688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsCSDSetColSnsClkDivider(uint32 widgetId, uint32 dividerVal)
2691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1175              		.loc 1 2691 0
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 0
 1178              		@ frame_needed = 0, uses_anonymous_args = 0
 1179              		@ link register save eliminated.
 1180              	.LVL119:
2692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2695:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 1181              		.loc 1 2696 0
 1182 0000 4001     		lsls	r0, r0, #5
 1183              	.LVL120:
 1184 0002 024B     		ldr	r3, .L101
 1185 0004 1818     		adds	r0, r3, r0
 1186 0006 4368     		ldr	r3, [r0, #4]
 1187              	.LVL121:
2697:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2698:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt->snsClk = (uint16)dividerVal;
 1188              		.loc 1 2699 0
 1189 0008 5981     		strh	r1, [r3, #10]
2700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsRam.snsCsdClk = (uint16)dividerVal;
2702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1190              		.loc 1 2705 0
 1191              		@ sp needed
 1192 000a 7047     		bx	lr
 1193              	.L102:
 1194              		.align	2
 1195              	.L101:
 1196 000c 00000000 		.word	CapSense_1_dsFlash
 1197              		.cfi_endproc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 72


 1198              	.LFE24:
 1199              		.size	CapSense_1_SsCSDSetColSnsClkDivider, .-CapSense_1_SsCSDSetColSnsClkDivider
 1200              		.section	.text.CapSense_1_SsCSDCalcPrsSize,"ax",%progbits
 1201              		.align	2
 1202              		.global	CapSense_1_SsCSDCalcPrsSize
 1203              		.code	16
 1204              		.thumb_func
 1205              		.type	CapSense_1_SsCSDCalcPrsSize, %function
 1206              	CapSense_1_SsCSDCalcPrsSize:
 1207              	.LFB25:
2706:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDGetRowSnsClkDivider
2711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  two-dimension widgets.
2721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return
2726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 CapSense_1_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 retVal;
2733:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Get sense divider based on configuration */
2735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2736:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2737:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2740:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2747:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (retVal);
2749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2752:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 73


2753:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDCalcPrsSize
2757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  requirements:
2765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  resolution The widget resolution.
2770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 CapSense_1_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1208              		.loc 1 2775 0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 0
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 1212              		@ link register save eliminated.
 1213              	.LVL122:
2776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 prsSize;
2777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 modClkDivider = 1u;
2778:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if ((CapSense_1_ENABLE != CapSense_1_CSDV2) && \
2780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK))
2781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     modClkDivider = (uint32)CapSense_1_dsRam.modCsdClk;
2782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((snsClkDivider * CapSense_1_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu 
 1214              		.loc 1 2784 0
 1215 0000 0203     		lsls	r2, r0, #12
 1216 0002 121A     		subs	r2, r2, r0
 1217 0004 0123     		movs	r3, #1
 1218 0006 8B40     		lsls	r3, r3, r1
 1219 0008 013B     		subs	r3, r3, #1
 1220 000a 9A42     		cmp	r2, r3
 1221 000c 05D9     		bls	.L105
2785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS12 mode */
2787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_12_CONFIG;
2788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if ((snsClkDivider * CapSense_1_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x0000000
 1222              		.loc 1 2789 0
 1223 000e 0202     		lsls	r2, r0, #8
 1224 0010 101A     		subs	r0, r2, r0
 1225              	.LVL123:
 1226 0012 8342     		cmp	r3, r0
 1227 0014 03D3     		bcc	.L106
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 74


2790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS8 mode */
2792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_8_CONFIG;
 1228              		.loc 1 2792 0
 1229 0016 0520     		movs	r0, #5
 1230 0018 02E0     		b	.L104
 1231              	.LVL124:
 1232              	.L105:
2787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 1233              		.loc 1 2787 0
 1234 001a 0620     		movs	r0, #6
 1235              	.LVL125:
 1236 001c 00E0     		b	.L104
 1237              	.L106:
2793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
2795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set Direct clock mode */
2797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_CLK_SOURCE_DIRECT;
 1238              		.loc 1 2797 0
 1239 001e 0020     		movs	r0, #0
 1240              	.L104:
 1241              	.LVL126:
2798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (uint8)prsSize;
 1242              		.loc 1 2800 0
 1243 0020 C0B2     		uxtb	r0, r0
 1244              	.LVL127:
2801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 1245              		.loc 1 2801 0
 1246              		@ sp needed
 1247 0022 7047     		bx	lr
 1248              		.cfi_endproc
 1249              	.LFE25:
 1250              		.size	CapSense_1_SsCSDCalcPrsSize, .-CapSense_1_SsCSDCalcPrsSize
 1251              		.section	.text.CapSense_1_SsSetWidgetSenseClkSrc,"ax",%progbits
 1252              		.align	2
 1253              		.code	16
 1254              		.thumb_func
 1255              		.type	CapSense_1_SsSetWidgetSenseClkSrc, %function
 1256              	CapSense_1_SsSetWidgetSenseClkSrc:
 1257              	.LFB19:
2239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
 1258              		.loc 1 2239 0
 1259              		.cfi_startproc
 1260              		@ args = 0, pretend = 0, frame = 0
 1261              		@ frame_needed = 0, uses_anonymous_args = 0
 1262              	.LVL128:
 1263 0000 70B5     		push	{r4, r5, r6, lr}
 1264              		.cfi_def_cfa_offset 16
 1265              		.cfi_offset 4, -16
 1266              		.cfi_offset 5, -12
 1267              		.cfi_offset 6, -8
 1268              		.cfi_offset 14, -4
 1269 0002 0E00     		movs	r6, r1
2251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 75


 1270              		.loc 1 2251 0
 1271 0004 FFF7FEFF 		bl	CapSense_1_SsCSDGetColSnsClkDivider
 1272              	.LVL129:
 1273 0008 0500     		movs	r5, r0
 1274              	.LVL130:
2254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                              CapSen
 1275              		.loc 1 2254 0
 1276 000a 3188     		ldrh	r1, [r6]
 1277 000c 0022     		movs	r2, #0
 1278 000e FFF7FEFF 		bl	CapSense_1_SsCSDGetNumberOfConversions
 1279              	.LVL131:
 1280 0012 0100     		movs	r1, r0
 1281              	.LVL132:
2256:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
 1282              		.loc 1 2256 0
 1283 0014 2800     		movs	r0, r5
 1284              	.LVL133:
 1285 0016 FFF7FEFF 		bl	CapSense_1_SsCalcLfsrSize
 1286              	.LVL134:
 1287 001a 041E     		subs	r4, r0, #0
 1288              	.LVL135:
2257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1289              		.loc 1 2257 0
 1290 001c 04D1     		bne	.L108
2263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 1291              		.loc 1 2263 0
 1292 001e 6800     		lsls	r0, r5, #1
 1293              	.LVL136:
 1294 0020 3188     		ldrh	r1, [r6]
 1295 0022 FFF7FEFF 		bl	CapSense_1_SsCSDCalcPrsSize
 1296              	.LVL137:
 1297 0026 0400     		movs	r4, r0
 1298              	.LVL138:
 1299              	.L108:
2265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
 1300              		.loc 1 2265 0
 1301 0028 2100     		movs	r1, r4
 1302 002a 2800     		movs	r0, r5
 1303 002c FFF7FEFF 		bl	CapSense_1_SsCalcLfsrScale
 1304              	.LVL139:
2280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1305              		.loc 1 2280 0
 1306 0030 0001     		lsls	r0, r0, #4
 1307              	.LVL140:
 1308 0032 C0B2     		uxtb	r0, r0
 1309 0034 2043     		orrs	r0, r4
 1310 0036 3073     		strb	r0, [r6, #12]
2315:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 1311              		.loc 1 2315 0
 1312              		@ sp needed
 1313              	.LVL141:
 1314              	.LVL142:
 1315              	.LVL143:
 1316 0038 70BD     		pop	{r4, r5, r6, pc}
 1317              		.cfi_endproc
 1318              	.LFE19:
 1319              		.size	CapSense_1_SsSetWidgetSenseClkSrc, .-CapSense_1_SsSetWidgetSenseClkSrc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 76


 1320 003a C046     		.section	.text.CapSense_1_SsAutoTune,"ax",%progbits
 1321              		.align	2
 1322              		.global	CapSense_1_SsAutoTune
 1323              		.code	16
 1324              		.thumb_func
 1325              		.type	CapSense_1_SsAutoTune, %function
 1326              	CapSense_1_SsAutoTune:
 1327              	.LFB17:
1576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1328              		.loc 1 1576 0
 1329              		.cfi_startproc
 1330              		@ args = 0, pretend = 0, frame = 40
 1331              		@ frame_needed = 0, uses_anonymous_args = 0
 1332 0000 70B5     		push	{r4, r5, r6, lr}
 1333              		.cfi_def_cfa_offset 16
 1334              		.cfi_offset 4, -16
 1335              		.cfi_offset 5, -12
 1336              		.cfi_offset 6, -8
 1337              		.cfi_offset 14, -4
 1338 0002 8AB0     		sub	sp, sp, #40
 1339              		.cfi_def_cfa_offset 56
 1340              	.LVL144:
1590:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.vRef = CapSense_1_CSD_VREF_MV;
 1341              		.loc 1 1590 0
 1342 0004 FA23     		movs	r3, #250
 1343 0006 9B00     		lsls	r3, r3, #2
 1344 0008 02AA     		add	r2, sp, #8
 1345 000a 1380     		strh	r3, [r2]
1591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_1_CSD_IDAC_GAIN_VALUE_NA;
 1346              		.loc 1 1591 0
 1347 000c 434B     		ldr	r3, .L120
 1348 000e 5380     		strh	r3, [r2, #2]
1592:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1349              		.loc 1 1592 0
 1350 0010 7C33     		adds	r3, r3, #124
 1351 0012 FF33     		adds	r3, r3, #255
 1352 0014 9380     		strh	r3, [r2, #4]
1597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif ((CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) && (CapSense_1_DISABLE == CY_PSO
 1353              		.loc 1 1597 0
 1354 0016 424B     		ldr	r3, .L120+4
 1355 0018 197F     		ldrb	r1, [r3, #28]
 1356 001a 4248     		ldr	r0, .L120+8
 1357 001c FFF7FEFF 		bl	__aeabi_uidiv
 1358              	.LVL145:
 1359 0020 02AB     		add	r3, sp, #8
 1360 0022 9881     		strh	r0, [r3, #12]
 1361              	.LVL146:
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1362              		.loc 1 1623 0
 1363 0024 0026     		movs	r6, #0
1577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
 1364              		.loc 1 1577 0
 1365 0026 0025     		movs	r5, #0
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1366              		.loc 1 1623 0
 1367 0028 3CE0     		b	.L110
 1368              	.LVL147:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 77


 1369              	.L114:
1628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1370              		.loc 1 1628 0
 1371 002a 7301     		lsls	r3, r6, #5
 1372 002c 3E4A     		ldr	r2, .L120+12
 1373 002e D318     		adds	r3, r2, r3
 1374 0030 5C68     		ldr	r4, [r3, #4]
 1375              	.LVL148:
1632:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1376              		.loc 1 1632 0
 1377 0032 0C23     		movs	r3, #12
 1378 0034 2380     		strh	r3, [r4]
1635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_1_CAL
 1379              		.loc 1 1635 0
 1380 0036 0023     		movs	r3, #0
 1381 0038 2373     		strb	r3, [r4, #12]
1636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 1382              		.loc 1 1636 0
 1383 003a 02AB     		add	r3, sp, #8
 1384 003c 9889     		ldrh	r0, [r3, #12]
 1385 003e 3B49     		ldr	r1, .L120+16
 1386 0040 FFF7FEFF 		bl	__aeabi_uidiv
 1387              	.LVL149:
 1388 0044 6081     		strh	r0, [r4, #10]
1647:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1389              		.loc 1 1647 0
 1390 0046 5521     		movs	r1, #85
 1391 0048 3000     		movs	r0, r6
 1392 004a FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 1393              	.LVL150:
1696:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1394              		.loc 1 1696 0
 1395 004e 2300     		movs	r3, r4
 1396 0050 0A33     		adds	r3, r3, #10
 1397 0052 0693     		str	r3, [sp, #24]
1699:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1398              		.loc 1 1699 0
 1399 0054 364B     		ldr	r3, .L120+20
 1400 0056 1B78     		ldrb	r3, [r3]
 1401 0058 02AA     		add	r2, sp, #8
 1402 005a 1376     		strb	r3, [r2, #24]
1702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
 1403              		.loc 1 1702 0
 1404 005c 354B     		ldr	r3, .L120+24
 1405 005e 1888     		ldrh	r0, [r3]
 1406 0060 FA23     		movs	r3, #250
 1407 0062 9B00     		lsls	r3, r3, #2
 1408 0064 5843     		muls	r0, r3
 1409 0066 3449     		ldr	r1, .L120+28
 1410 0068 FFF7FEFF 		bl	__aeabi_uidiv
 1411              	.LVL151:
 1412 006c 02AB     		add	r3, sp, #8
 1413 006e D881     		strh	r0, [r3, #14]
1706:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1414              		.loc 1 1706 0
 1415 0070 1800     		movs	r0, r3
 1416 0072 FFF7FEFF 		bl	SmartSense_TunePrescalers
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 78


 1417              	.LVL152:
1708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1418              		.loc 1 1708 0
 1419 0076 314B     		ldr	r3, .L120+32
 1420 0078 9842     		cmp	r0, r3
 1421 007a 03D9     		bls	.L112
1710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 1422              		.loc 1 1710 0
 1423 007c 0625     		movs	r5, #6
 1424              	.LVL153:
 1425 007e 01E0     		b	.L112
 1426              	.LVL154:
 1427              	.L113:
1720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 1428              		.loc 1 1720 0
 1429 0080 5B00     		lsls	r3, r3, #1
 1430 0082 6381     		strh	r3, [r4, #10]
 1431              	.LVL155:
 1432              	.L112:
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1433              		.loc 1 1717 0
 1434 0084 02AB     		add	r3, sp, #8
 1435 0086 9989     		ldrh	r1, [r3, #12]
 1436 0088 6389     		ldrh	r3, [r4, #10]
 1437 008a 2D4A     		ldr	r2, .L120+36
 1438 008c 5A43     		muls	r2, r3
 1439 008e 9142     		cmp	r1, r2
 1440 0090 F6D8     		bhi	.L113
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1441              		.loc 1 1717 0 is_stmt 0 discriminator 1
 1442 0092 032B     		cmp	r3, #3
 1443 0094 F4D9     		bls	.L113
1735:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1444              		.loc 1 1735 0 is_stmt 1
 1445 0096 B300     		lsls	r3, r6, #2
 1446 0098 0AAA     		add	r2, sp, #40
 1447 009a 9446     		mov	ip, r2
 1448 009c 6344     		add	r3, r3, ip
 1449 009e 043B     		subs	r3, r3, #4
 1450 00a0 1860     		str	r0, [r3]
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1451              		.loc 1 1623 0
 1452 00a2 0136     		adds	r6, r6, #1
 1453              	.LVL156:
 1454              	.L110:
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1455              		.loc 1 1623 0 is_stmt 0 discriminator 1
 1456 00a4 002E     		cmp	r6, #0
 1457 00a6 C0D0     		beq	.L114
 1458 00a8 0024     		movs	r4, #0
 1459 00aa 21E0     		b	.L115
 1460              	.LVL157:
 1461              	.L116:
1769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1462              		.loc 1 1769 0 is_stmt 1
 1463 00ac 6301     		lsls	r3, r4, #5
 1464 00ae 1E4A     		ldr	r2, .L120+12
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 79


 1465 00b0 D318     		adds	r3, r2, r3
 1466 00b2 5E68     		ldr	r6, [r3, #4]
 1467              	.LVL158:
1773:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1468              		.loc 1 1773 0
 1469 00b4 5521     		movs	r1, #85
 1470 00b6 2000     		movs	r0, r4
 1471 00b8 FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 1472              	.LVL159:
 1473 00bc 0543     		orrs	r5, r0
 1474              	.LVL160:
1776:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1475              		.loc 1 1776 0
 1476 00be 3300     		movs	r3, r6
 1477 00c0 0A33     		adds	r3, r3, #10
 1478 00c2 0693     		str	r3, [sp, #24]
1779:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1479              		.loc 1 1779 0
 1480 00c4 A300     		lsls	r3, r4, #2
 1481 00c6 0AAA     		add	r2, sp, #40
 1482 00c8 9446     		mov	ip, r2
 1483 00ca 6344     		add	r3, r3, ip
 1484 00cc 043B     		subs	r3, r3, #4
 1485 00ce 1B68     		ldr	r3, [r3]
 1486 00d0 0193     		str	r3, [sp, #4]
 1487 00d2 0493     		str	r3, [sp, #16]
1782:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1488              		.loc 1 1782 0
 1489 00d4 164B     		ldr	r3, .L120+20
 1490 00d6 1B78     		ldrb	r3, [r3]
 1491 00d8 02AA     		add	r2, sp, #8
 1492 00da 1376     		strb	r3, [r2, #24]
1805:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1493              		.loc 1 1805 0
 1494 00dc F389     		ldrh	r3, [r6, #14]
 1495 00de D380     		strh	r3, [r2, #6]
1808:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1496              		.loc 1 1808 0
 1497 00e0 3300     		movs	r3, r6
 1498 00e2 1033     		adds	r3, r3, #16
 1499 00e4 0793     		str	r3, [sp, #28]
1811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 1500              		.loc 1 1811 0
 1501 00e6 1000     		movs	r0, r2
 1502 00e8 FFF7FEFF 		bl	SmartSense_TuneSensitivity
 1503              	.LVL161:
 1504 00ec 3080     		strh	r0, [r6]
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1505              		.loc 1 1764 0
 1506 00ee 0134     		adds	r4, r4, #1
 1507              	.LVL162:
 1508              	.L115:
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1509              		.loc 1 1764 0 is_stmt 0 discriminator 1
 1510 00f0 002C     		cmp	r4, #0
 1511 00f2 DBD0     		beq	.L116
 1512 00f4 0024     		movs	r4, #0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 80


 1513              	.LVL163:
 1514 00f6 0CE0     		b	.L117
 1515              	.LVL164:
 1516              	.L118:
1828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1517              		.loc 1 1828 0 is_stmt 1
 1518 00f8 6301     		lsls	r3, r4, #5
 1519 00fa 0B4A     		ldr	r2, .L120+12
 1520 00fc D318     		adds	r3, r2, r3
 1521 00fe 5968     		ldr	r1, [r3, #4]
 1522              	.LVL165:
1831:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1523              		.loc 1 1831 0
 1524 0100 2000     		movs	r0, r4
 1525 0102 FFF7FEFF 		bl	CapSense_1_SsSetWidgetSenseClkSrc
 1526              	.LVL166:
1834:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1527              		.loc 1 1834 0
 1528 0106 5521     		movs	r1, #85
 1529 0108 2000     		movs	r0, r4
 1530 010a FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 1531              	.LVL167:
 1532 010e 0543     		orrs	r5, r0
 1533              	.LVL168:
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1534              		.loc 1 1823 0
 1535 0110 0134     		adds	r4, r4, #1
 1536              	.LVL169:
 1537              	.L117:
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1538              		.loc 1 1823 0 is_stmt 0 discriminator 1
 1539 0112 002C     		cmp	r4, #0
 1540 0114 F0D0     		beq	.L118
1843:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) */
 1541              		.loc 1 1843 0 is_stmt 1
 1542 0116 2800     		movs	r0, r5
 1543 0118 0AB0     		add	sp, sp, #40
 1544              		@ sp needed
 1545              	.LVL170:
 1546              	.LVL171:
 1547 011a 70BD     		pop	{r4, r5, r6, pc}
 1548              	.L121:
 1549              		.align	2
 1550              	.L120:
 1551 011c E5070000 		.word	2021
 1552 0120 00000000 		.word	CapSense_1_dsRam
 1553 0124 80BB0000 		.word	48000
 1554 0128 00000000 		.word	CapSense_1_dsFlash
 1555 012c DC050000 		.word	1500
 1556 0130 00000000 		.word	CapSense_1_calibratedIdac
 1557 0134 00000000 		.word	CapSense_1_calibratedRawcount
 1558 0138 FF0F0000 		.word	4095
 1559 013c 870D0100 		.word	68999
 1560 0140 70170000 		.word	6000
 1561              		.cfi_endproc
 1562              	.LFE17:
 1563              		.size	CapSense_1_SsAutoTune, .-CapSense_1_SsAutoTune
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 81


 1564              		.section	.text.CapSense_1_SsInitializeSourceSenseClk,"ax",%progbits
 1565              		.align	2
 1566              		.global	CapSense_1_SsInitializeSourceSenseClk
 1567              		.code	16
 1568              		.thumb_func
 1569              		.type	CapSense_1_SsInitializeSourceSenseClk, %function
 1570              	CapSense_1_SsInitializeSourceSenseClk:
 1571              	.LFB18:
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 1572              		.loc 1 2186 0
 1573              		.cfi_startproc
 1574              		@ args = 0, pretend = 0, frame = 0
 1575              		@ frame_needed = 0, uses_anonymous_args = 0
 1576 0000 10B5     		push	{r4, lr}
 1577              		.cfi_def_cfa_offset 8
 1578              		.cfi_offset 4, -8
 1579              		.cfi_offset 14, -4
 1580              	.LVL172:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1581              		.loc 1 2190 0
 1582 0002 0024     		movs	r4, #0
 1583 0004 07E0     		b	.L123
 1584              	.LVL173:
 1585              	.L124:
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1586              		.loc 1 2192 0
 1587 0006 6301     		lsls	r3, r4, #5
 1588 0008 044A     		ldr	r2, .L125
 1589 000a D318     		adds	r3, r2, r3
 1590 000c 5968     		ldr	r1, [r3, #4]
 1591              	.LVL174:
2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 1592              		.loc 1 2198 0
 1593 000e 2000     		movs	r0, r4
 1594 0010 FFF7FEFF 		bl	CapSense_1_SsSetWidgetSenseClkSrc
 1595              	.LVL175:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1596              		.loc 1 2190 0
 1597 0014 0134     		adds	r4, r4, #1
 1598              	.LVL176:
 1599              	.L123:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1600              		.loc 1 2190 0 is_stmt 0 discriminator 1
 1601 0016 002C     		cmp	r4, #0
 1602 0018 F5D0     		beq	.L124
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
 1603              		.loc 1 2213 0 is_stmt 1
 1604              		@ sp needed
 1605              	.LVL177:
 1606 001a 10BD     		pop	{r4, pc}
 1607              	.L126:
 1608              		.align	2
 1609              	.L125:
 1610 001c 00000000 		.word	CapSense_1_dsFlash
 1611              		.cfi_endproc
 1612              	.LFE18:
 1613              		.size	CapSense_1_SsInitializeSourceSenseClk, .-CapSense_1_SsInitializeSourceSenseClk
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 82


 1614              		.section	.text.CapSense_1_SsInitialize,"ax",%progbits
 1615              		.align	2
 1616              		.global	CapSense_1_SsInitialize
 1617              		.code	16
 1618              		.thumb_func
 1619              		.type	CapSense_1_SsInitialize, %function
 1620              	CapSense_1_SsInitialize:
 1621              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 1622              		.loc 1 517 0
 1623              		.cfi_startproc
 1624              		@ args = 0, pretend = 0, frame = 0
 1625              		@ frame_needed = 0, uses_anonymous_args = 0
 1626 0000 10B5     		push	{r4, lr}
 1627              		.cfi_def_cfa_offset 8
 1628              		.cfi_offset 4, -8
 1629              		.cfi_offset 14, -4
 1630              	.LVL178:
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 1631              		.loc 1 556 0
 1632 0002 FFF7FEFF 		bl	CapSense_1_SsInitializeSourceSenseClk
 1633              	.LVL179:
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1634              		.loc 1 561 0
 1635 0006 FFF7FEFF 		bl	CapSense_1_SsSetIOsInDefaultState
 1636              	.LVL180:
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 1637              		.loc 1 567 0
 1638 000a 0120     		movs	r0, #1
 1639 000c FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
 1640              	.LVL181:
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1641              		.loc 1 578 0
 1642 0010 0020     		movs	r0, #0
 1643              		@ sp needed
 1644 0012 10BD     		pop	{r4, pc}
 1645              		.cfi_endproc
 1646              	.LFE5:
 1647              		.size	CapSense_1_SsInitialize, .-CapSense_1_SsInitialize
 1648              		.section	.text.CapSense_1_BistDischargeExtCapacitors,"ax",%progbits
 1649              		.align	2
 1650              		.global	CapSense_1_BistDischargeExtCapacitors
 1651              		.code	16
 1652              		.thumb_func
 1653              		.type	CapSense_1_BistDischargeExtCapacitors, %function
 1654              	CapSense_1_BistDischargeExtCapacitors:
 1655              	.LFB26:
2802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2804:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2805:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_BistDischargeExtCapacitors
2809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 83


2812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors.
2813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors by connection them
2816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects 
2817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses 
2819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_BistDischargeExtCapacitors(void)
2823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1656              		.loc 1 2823 0
 1657              		.cfi_startproc
 1658              		@ args = 0, pretend = 0, frame = 0
 1659              		@ frame_needed = 0, uses_anonymous_args = 0
 1660 0000 70B5     		push	{r4, r5, r6, lr}
 1661              		.cfi_def_cfa_offset 16
 1662              		.cfi_offset 4, -16
 1663              		.cfi_offset 5, -12
 1664              		.cfi_offset 6, -8
 1665              		.cfi_offset 14, -4
2824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
2825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8  interruptState;
2826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         
2827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1666              		.loc 1 2828 0
 1667 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1668              	.LVL182:
2829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR);
 1669              		.loc 1 2829 0
 1670 0006 134A     		ldr	r2, .L129
 1671 0008 1368     		ldr	r3, [r2]
 1672              	.LVL183:
2830:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_HSIOM_MASK);
 1673              		.loc 1 2830 0
 1674 000a F021     		movs	r1, #240
 1675 000c 8B43     		bics	r3, r1
 1676              	.LVL184:
2831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR, newRegValue);
 1677              		.loc 1 2831 0
 1678 000e 1360     		str	r3, [r2]
2832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1679              		.loc 1 2832 0
 1680 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1681              	.LVL185:
2833:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2835:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1682              		.loc 1 2835 0
 1683 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1684              	.LVL186:
2836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_DR_PTR);
 1685              		.loc 1 2836 0
 1686 0018 0F4A     		ldr	r2, .L129+4
 1687 001a 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 84


 1688              	.LVL187:
2837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_DR_MASK);
 1689              		.loc 1 2837 0
 1690 001c 0221     		movs	r1, #2
 1691 001e 8B43     		bics	r3, r1
 1692              	.LVL188:
2838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_DR_PTR, newRegValue);
 1693              		.loc 1 2838 0
 1694 0020 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1695              		.loc 1 2839 0
 1696 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1697              	.LVL189:
2840:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1698              		.loc 1 2842 0
 1699 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 1700              	.LVL190:
2843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1701              		.loc 1 2843 0
 1702 002a 0C4C     		ldr	r4, .L129+8
 1703 002c 2368     		ldr	r3, [r4]
 1704              	.LVL191:
2844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1705              		.loc 1 2844 0
 1706 002e 3825     		movs	r5, #56
 1707 0030 AB43     		bics	r3, r5
 1708              	.LVL192:
2845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (CapSense_1_EXT_CAP_PC_STRONG_CFG);
 1709              		.loc 1 2845 0
 1710 0032 3022     		movs	r2, #48
 1711 0034 1343     		orrs	r3, r2
 1712              	.LVL193:
2846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1713              		.loc 1 2846 0
 1714 0036 2360     		str	r3, [r4]
2847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1715              		.loc 1 2847 0
 1716 0038 FFF7FEFF 		bl	CyExitCriticalSection
 1717              	.LVL194:
2848:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Delay to discharge external capacitors */
2850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyDelayUs(CapSense_1_EXT_CAP_DISCHARGE_TIME);
 1718              		.loc 1 2850 0
 1719 003c 0120     		movs	r0, #1
 1720 003e FFF7FEFF 		bl	CyDelayUs
 1721              	.LVL195:
2851:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1722              		.loc 1 2853 0
 1723 0042 FFF7FEFF 		bl	CyEnterCriticalSection
 1724              	.LVL196:
2854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1725              		.loc 1 2854 0
 1726 0046 2368     		ldr	r3, [r4]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 85


 1727              	.LVL197:
2855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1728              		.loc 1 2855 0
 1729 0048 AB43     		bics	r3, r5
 1730              	.LVL198:
2856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1731              		.loc 1 2856 0
 1732 004a 2360     		str	r3, [r4]
2857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1733              		.loc 1 2857 0
 1734 004c FFF7FEFF 		bl	CyExitCriticalSection
 1735              	.LVL199:
2858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1736              		.loc 1 2858 0
 1737              		@ sp needed
 1738 0050 70BD     		pop	{r4, r5, r6, pc}
 1739              	.L130:
 1740 0052 C046     		.align	2
 1741              	.L129:
 1742 0054 00040240 		.word	1073873920
 1743 0058 00040440 		.word	1074004992
 1744 005c 08040440 		.word	1074005000
 1745              		.cfi_endproc
 1746              	.LFE26:
 1747              		.size	CapSense_1_BistDischargeExtCapacitors, .-CapSense_1_BistDischargeExtCapacitors
 1748              		.comm	CapSense_1_curSnsIOPtr,4,4
 1749              		.comm	CapSense_1_curRamSnsPtr,4,4
 1750              		.global	CapSense_1_requestScanAllWidget
 1751              		.global	CapSense_1_sensorIndex
 1752              		.global	CapSense_1_widgetIndex
 1753              		.global	CapSense_1_scanFreqIndex
 1754              		.global	CapSense_1_currentSenseMethod
 1755              		.section	.rodata
 1756              		.type	CapSense_1_scanFreqIndex, %object
 1757              		.size	CapSense_1_scanFreqIndex, 1
 1758              	CapSense_1_scanFreqIndex:
 1759 0000 00       		.space	1
 1760              		.bss
 1761              		.set	.LANCHOR0,. + 0
 1762              		.type	CapSense_1_currentSenseMethod, %object
 1763              		.size	CapSense_1_currentSenseMethod, 1
 1764              	CapSense_1_currentSenseMethod:
 1765 0000 00       		.space	1
 1766              		.type	CapSense_1_requestScanAllWidget, %object
 1767              		.size	CapSense_1_requestScanAllWidget, 1
 1768              	CapSense_1_requestScanAllWidget:
 1769 0001 00       		.space	1
 1770              		.type	CapSense_1_sensorIndex, %object
 1771              		.size	CapSense_1_sensorIndex, 1
 1772              	CapSense_1_sensorIndex:
 1773 0002 00       		.space	1
 1774              		.type	CapSense_1_widgetIndex, %object
 1775              		.size	CapSense_1_widgetIndex, 1
 1776              	CapSense_1_widgetIndex:
 1777 0003 00       		.space	1
 1778              		.text
 1779              	.Letext0:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 86


 1780              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1781              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1782              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_SmartSense_LL.h"
 1783              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1784              		.file 6 "Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.h"
 1785              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 1786              		.file 8 "Generated_Source\\PSoC4\\CapSense_1_ISR.h"
 1787              		.section	.debug_info,"",%progbits
 1788              	.Ldebug_info0:
 1789 0000 60110000 		.4byte	0x1160
 1790 0004 0400     		.2byte	0x4
 1791 0006 00000000 		.4byte	.Ldebug_abbrev0
 1792 000a 04       		.byte	0x4
 1793 000b 01       		.uleb128 0x1
 1794 000c 46030000 		.4byte	.LASF193
 1795 0010 0C       		.byte	0xc
 1796 0011 C7070000 		.4byte	.LASF194
 1797 0015 330D0000 		.4byte	.LASF195
 1798 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1799 001d 00000000 		.4byte	0
 1800 0021 00000000 		.4byte	.Ldebug_line0
 1801 0025 02       		.uleb128 0x2
 1802 0026 01       		.byte	0x1
 1803 0027 06       		.byte	0x6
 1804 0028 880B0000 		.4byte	.LASF0
 1805 002c 02       		.uleb128 0x2
 1806 002d 01       		.byte	0x1
 1807 002e 08       		.byte	0x8
 1808 002f EF0A0000 		.4byte	.LASF1
 1809 0033 02       		.uleb128 0x2
 1810 0034 02       		.byte	0x2
 1811 0035 05       		.byte	0x5
 1812 0036 E2080000 		.4byte	.LASF2
 1813 003a 02       		.uleb128 0x2
 1814 003b 02       		.byte	0x2
 1815 003c 07       		.byte	0x7
 1816 003d 990B0000 		.4byte	.LASF3
 1817 0041 02       		.uleb128 0x2
 1818 0042 04       		.byte	0x4
 1819 0043 05       		.byte	0x5
 1820 0044 10090000 		.4byte	.LASF4
 1821 0048 02       		.uleb128 0x2
 1822 0049 04       		.byte	0x4
 1823 004a 07       		.byte	0x7
 1824 004b 610A0000 		.4byte	.LASF5
 1825 004f 02       		.uleb128 0x2
 1826 0050 08       		.byte	0x8
 1827 0051 05       		.byte	0x5
 1828 0052 85060000 		.4byte	.LASF6
 1829 0056 02       		.uleb128 0x2
 1830 0057 08       		.byte	0x8
 1831 0058 07       		.byte	0x7
 1832 0059 17040000 		.4byte	.LASF7
 1833 005d 03       		.uleb128 0x3
 1834 005e 04       		.byte	0x4
 1835 005f 05       		.byte	0x5
 1836 0060 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 87


 1837 0064 02       		.uleb128 0x2
 1838 0065 04       		.byte	0x4
 1839 0066 07       		.byte	0x7
 1840 0067 F2000000 		.4byte	.LASF8
 1841 006b 04       		.uleb128 0x4
 1842 006c 110C0000 		.4byte	.LASF9
 1843 0070 02       		.byte	0x2
 1844 0071 E401     		.2byte	0x1e4
 1845 0073 2C000000 		.4byte	0x2c
 1846 0077 04       		.uleb128 0x4
 1847 0078 26060000 		.4byte	.LASF10
 1848 007c 02       		.byte	0x2
 1849 007d E501     		.2byte	0x1e5
 1850 007f 3A000000 		.4byte	0x3a
 1851 0083 04       		.uleb128 0x4
 1852 0084 6A070000 		.4byte	.LASF11
 1853 0088 02       		.byte	0x2
 1854 0089 E601     		.2byte	0x1e6
 1855 008b 48000000 		.4byte	0x48
 1856 008f 02       		.uleb128 0x2
 1857 0090 04       		.byte	0x4
 1858 0091 04       		.byte	0x4
 1859 0092 3A030000 		.4byte	.LASF12
 1860 0096 02       		.uleb128 0x2
 1861 0097 08       		.byte	0x8
 1862 0098 04       		.byte	0x4
 1863 0099 170C0000 		.4byte	.LASF13
 1864 009d 02       		.uleb128 0x2
 1865 009e 01       		.byte	0x1
 1866 009f 08       		.byte	0x8
 1867 00a0 E6050000 		.4byte	.LASF14
 1868 00a4 04       		.uleb128 0x4
 1869 00a5 E60A0000 		.4byte	.LASF15
 1870 00a9 02       		.byte	0x2
 1871 00aa 8602     		.2byte	0x286
 1872 00ac 48000000 		.4byte	0x48
 1873 00b0 05       		.uleb128 0x5
 1874 00b1 6B000000 		.4byte	0x6b
 1875 00b5 04       		.uleb128 0x4
 1876 00b6 61080000 		.4byte	.LASF16
 1877 00ba 02       		.byte	0x2
 1878 00bb 9002     		.2byte	0x290
 1879 00bd C1000000 		.4byte	0xc1
 1880 00c1 05       		.uleb128 0x5
 1881 00c2 83000000 		.4byte	0x83
 1882 00c6 04       		.uleb128 0x4
 1883 00c7 2A070000 		.4byte	.LASF17
 1884 00cb 02       		.byte	0x2
 1885 00cc A002     		.2byte	0x2a0
 1886 00ce D2000000 		.4byte	0xd2
 1887 00d2 06       		.uleb128 0x6
 1888 00d3 04       		.byte	0x4
 1889 00d4 D8000000 		.4byte	0xd8
 1890 00d8 07       		.uleb128 0x7
 1891 00d9 04       		.uleb128 0x4
 1892 00da 93060000 		.4byte	.LASF18
 1893 00de 03       		.byte	0x3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 88


 1894 00df 1D01     		.2byte	0x11d
 1895 00e1 77000000 		.4byte	0x77
 1896 00e5 04       		.uleb128 0x4
 1897 00e6 5F040000 		.4byte	.LASF19
 1898 00ea 03       		.byte	0x3
 1899 00eb 2101     		.2byte	0x121
 1900 00ed 6B000000 		.4byte	0x6b
 1901 00f1 08       		.uleb128 0x8
 1902 00f2 1C       		.byte	0x1c
 1903 00f3 04       		.byte	0x4
 1904 00f4 2F       		.byte	0x2f
 1905 00f5 72010000 		.4byte	0x172
 1906 00f9 09       		.uleb128 0x9
 1907 00fa 51080000 		.4byte	.LASF20
 1908 00fe 04       		.byte	0x4
 1909 00ff 34       		.byte	0x34
 1910 0100 77000000 		.4byte	0x77
 1911 0104 00       		.byte	0
 1912 0105 09       		.uleb128 0x9
 1913 0106 7A0A0000 		.4byte	.LASF21
 1914 010a 04       		.byte	0x4
 1915 010b 39       		.byte	0x39
 1916 010c 77000000 		.4byte	0x77
 1917 0110 02       		.byte	0x2
 1918 0111 09       		.uleb128 0x9
 1919 0112 F5010000 		.4byte	.LASF22
 1920 0116 04       		.byte	0x4
 1921 0117 3E       		.byte	0x3e
 1922 0118 77000000 		.4byte	0x77
 1923 011c 04       		.byte	0x4
 1924 011d 09       		.uleb128 0x9
 1925 011e D3090000 		.4byte	.LASF23
 1926 0122 04       		.byte	0x4
 1927 0123 43       		.byte	0x43
 1928 0124 77000000 		.4byte	0x77
 1929 0128 06       		.byte	0x6
 1930 0129 09       		.uleb128 0x9
 1931 012a 0A0B0000 		.4byte	.LASF24
 1932 012e 04       		.byte	0x4
 1933 012f 48       		.byte	0x48
 1934 0130 83000000 		.4byte	0x83
 1935 0134 08       		.byte	0x8
 1936 0135 09       		.uleb128 0x9
 1937 0136 34020000 		.4byte	.LASF25
 1938 013a 04       		.byte	0x4
 1939 013b 4D       		.byte	0x4d
 1940 013c 77000000 		.4byte	0x77
 1941 0140 0C       		.byte	0xc
 1942 0141 09       		.uleb128 0x9
 1943 0142 D4040000 		.4byte	.LASF26
 1944 0146 04       		.byte	0x4
 1945 0147 52       		.byte	0x52
 1946 0148 77000000 		.4byte	0x77
 1947 014c 0E       		.byte	0xe
 1948 014d 09       		.uleb128 0x9
 1949 014e F3070000 		.4byte	.LASF27
 1950 0152 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 89


 1951 0153 57       		.byte	0x57
 1952 0154 72010000 		.4byte	0x172
 1953 0158 10       		.byte	0x10
 1954 0159 09       		.uleb128 0x9
 1955 015a FF040000 		.4byte	.LASF28
 1956 015e 04       		.byte	0x4
 1957 015f 5C       		.byte	0x5c
 1958 0160 72010000 		.4byte	0x172
 1959 0164 14       		.byte	0x14
 1960 0165 09       		.uleb128 0x9
 1961 0166 C2070000 		.4byte	.LASF29
 1962 016a 04       		.byte	0x4
 1963 016b 61       		.byte	0x61
 1964 016c 6B000000 		.4byte	0x6b
 1965 0170 18       		.byte	0x18
 1966 0171 00       		.byte	0
 1967 0172 06       		.uleb128 0x6
 1968 0173 04       		.byte	0x4
 1969 0174 77000000 		.4byte	0x77
 1970 0178 0A       		.uleb128 0xa
 1971 0179 AC0B0000 		.4byte	.LASF30
 1972 017d 04       		.byte	0x4
 1973 017e 63       		.byte	0x63
 1974 017f F1000000 		.4byte	0xf1
 1975 0183 08       		.uleb128 0x8
 1976 0184 0C       		.byte	0xc
 1977 0185 04       		.byte	0x4
 1978 0186 6E       		.byte	0x6e
 1979 0187 E0010000 		.4byte	0x1e0
 1980 018b 09       		.uleb128 0x9
 1981 018c 460C0000 		.4byte	.LASF31
 1982 0190 04       		.byte	0x4
 1983 0191 73       		.byte	0x73
 1984 0192 77000000 		.4byte	0x77
 1985 0196 00       		.byte	0
 1986 0197 09       		.uleb128 0x9
 1987 0198 4D0C0000 		.4byte	.LASF32
 1988 019c 04       		.byte	0x4
 1989 019d 77       		.byte	0x77
 1990 019e 77000000 		.4byte	0x77
 1991 01a2 02       		.byte	0x2
 1992 01a3 09       		.uleb128 0x9
 1993 01a4 540C0000 		.4byte	.LASF33
 1994 01a8 04       		.byte	0x4
 1995 01a9 7B       		.byte	0x7b
 1996 01aa 77000000 		.4byte	0x77
 1997 01ae 04       		.byte	0x4
 1998 01af 09       		.uleb128 0x9
 1999 01b0 5B0C0000 		.4byte	.LASF34
 2000 01b4 04       		.byte	0x4
 2001 01b5 7F       		.byte	0x7f
 2002 01b6 77000000 		.4byte	0x77
 2003 01ba 06       		.byte	0x6
 2004 01bb 09       		.uleb128 0x9
 2005 01bc 620C0000 		.4byte	.LASF35
 2006 01c0 04       		.byte	0x4
 2007 01c1 83       		.byte	0x83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 90


 2008 01c2 77000000 		.4byte	0x77
 2009 01c6 08       		.byte	0x8
 2010 01c7 09       		.uleb128 0x9
 2011 01c8 690C0000 		.4byte	.LASF36
 2012 01cc 04       		.byte	0x4
 2013 01cd 87       		.byte	0x87
 2014 01ce 6B000000 		.4byte	0x6b
 2015 01d2 0A       		.byte	0xa
 2016 01d3 09       		.uleb128 0x9
 2017 01d4 700C0000 		.4byte	.LASF37
 2018 01d8 04       		.byte	0x4
 2019 01d9 8B       		.byte	0x8b
 2020 01da 6B000000 		.4byte	0x6b
 2021 01de 0B       		.byte	0xb
 2022 01df 00       		.byte	0
 2023 01e0 0A       		.uleb128 0xa
 2024 01e1 95050000 		.4byte	.LASF38
 2025 01e5 04       		.byte	0x4
 2026 01e6 8C       		.byte	0x8c
 2027 01e7 83010000 		.4byte	0x183
 2028 01eb 0B       		.uleb128 0xb
 2029 01ec 01       		.byte	0x1
 2030 01ed 2C000000 		.4byte	0x2c
 2031 01f1 05       		.byte	0x5
 2032 01f2 70       		.byte	0x70
 2033 01f3 16020000 		.4byte	0x216
 2034 01f7 0C       		.uleb128 0xc
 2035 01f8 8C070000 		.4byte	.LASF39
 2036 01fc 00       		.byte	0
 2037 01fd 0C       		.uleb128 0xc
 2038 01fe 3B0A0000 		.4byte	.LASF40
 2039 0202 01       		.byte	0x1
 2040 0203 0C       		.uleb128 0xc
 2041 0204 69090000 		.4byte	.LASF41
 2042 0208 02       		.byte	0x2
 2043 0209 0C       		.uleb128 0xc
 2044 020a 06050000 		.4byte	.LASF42
 2045 020e 03       		.byte	0x3
 2046 020f 0C       		.uleb128 0xc
 2047 0210 33080000 		.4byte	.LASF43
 2048 0214 04       		.byte	0x4
 2049 0215 00       		.byte	0
 2050 0216 0A       		.uleb128 0xa
 2051 0217 7C040000 		.4byte	.LASF44
 2052 021b 05       		.byte	0x5
 2053 021c 76       		.byte	0x76
 2054 021d EB010000 		.4byte	0x1eb
 2055 0221 08       		.uleb128 0x8
 2056 0222 12       		.byte	0x12
 2057 0223 05       		.byte	0x5
 2058 0224 8E       		.byte	0x8e
 2059 0225 BA020000 		.4byte	0x2ba
 2060 0229 09       		.uleb128 0x9
 2061 022a 3C060000 		.4byte	.LASF45
 2062 022e 05       		.byte	0x5
 2063 022f 93       		.byte	0x93
 2064 0230 77000000 		.4byte	0x77
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 91


 2065 0234 00       		.byte	0
 2066 0235 09       		.uleb128 0x9
 2067 0236 B60A0000 		.4byte	.LASF46
 2068 023a 05       		.byte	0x5
 2069 023b 98       		.byte	0x98
 2070 023c D9000000 		.4byte	0xd9
 2071 0240 02       		.byte	0x2
 2072 0241 09       		.uleb128 0x9
 2073 0242 DE050000 		.4byte	.LASF47
 2074 0246 05       		.byte	0x5
 2075 0247 9D       		.byte	0x9d
 2076 0248 6B000000 		.4byte	0x6b
 2077 024c 04       		.byte	0x4
 2078 024d 09       		.uleb128 0x9
 2079 024e 16070000 		.4byte	.LASF48
 2080 0252 05       		.byte	0x5
 2081 0253 A2       		.byte	0xa2
 2082 0254 6B000000 		.4byte	0x6b
 2083 0258 05       		.byte	0x5
 2084 0259 09       		.uleb128 0x9
 2085 025a 71070000 		.4byte	.LASF49
 2086 025e 05       		.byte	0x5
 2087 025f A8       		.byte	0xa8
 2088 0260 6B000000 		.4byte	0x6b
 2089 0264 06       		.byte	0x6
 2090 0265 09       		.uleb128 0x9
 2091 0266 AD060000 		.4byte	.LASF50
 2092 026a 05       		.byte	0x5
 2093 026b AE       		.byte	0xae
 2094 026c 6B000000 		.4byte	0x6b
 2095 0270 07       		.byte	0x7
 2096 0271 09       		.uleb128 0x9
 2097 0272 25050000 		.4byte	.LASF51
 2098 0276 05       		.byte	0x5
 2099 0277 B5       		.byte	0xb5
 2100 0278 E5000000 		.4byte	0xe5
 2101 027c 08       		.byte	0x8
 2102 027d 09       		.uleb128 0x9
 2103 027e 7F0A0000 		.4byte	.LASF52
 2104 0282 05       		.byte	0x5
 2105 0283 BC       		.byte	0xbc
 2106 0284 BA020000 		.4byte	0x2ba
 2107 0288 09       		.byte	0x9
 2108 0289 09       		.uleb128 0x9
 2109 028a 6A0B0000 		.4byte	.LASF53
 2110 028e 05       		.byte	0x5
 2111 028f C4       		.byte	0xc4
 2112 0290 77000000 		.4byte	0x77
 2113 0294 0A       		.byte	0xa
 2114 0295 09       		.uleb128 0x9
 2115 0296 B0080000 		.4byte	.LASF54
 2116 029a 05       		.byte	0x5
 2117 029b C9       		.byte	0xc9
 2118 029c 6B000000 		.4byte	0x6b
 2119 02a0 0C       		.byte	0xc
 2120 02a1 09       		.uleb128 0x9
 2121 02a2 D3090000 		.4byte	.LASF23
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 92


 2122 02a6 05       		.byte	0x5
 2123 02a7 CF       		.byte	0xcf
 2124 02a8 77000000 		.4byte	0x77
 2125 02ac 0E       		.byte	0xe
 2126 02ad 09       		.uleb128 0x9
 2127 02ae FF040000 		.4byte	.LASF28
 2128 02b2 05       		.byte	0x5
 2129 02b3 D4       		.byte	0xd4
 2130 02b4 77000000 		.4byte	0x77
 2131 02b8 10       		.byte	0x10
 2132 02b9 00       		.byte	0
 2133 02ba 0D       		.uleb128 0xd
 2134 02bb 6B000000 		.4byte	0x6b
 2135 02bf CA020000 		.4byte	0x2ca
 2136 02c3 0E       		.uleb128 0xe
 2137 02c4 CA020000 		.4byte	0x2ca
 2138 02c8 00       		.byte	0
 2139 02c9 00       		.byte	0
 2140 02ca 02       		.uleb128 0x2
 2141 02cb 04       		.byte	0x4
 2142 02cc 07       		.byte	0x7
 2143 02cd BD080000 		.4byte	.LASF55
 2144 02d1 0A       		.uleb128 0xa
 2145 02d2 43070000 		.4byte	.LASF56
 2146 02d6 05       		.byte	0x5
 2147 02d7 D5       		.byte	0xd5
 2148 02d8 21020000 		.4byte	0x221
 2149 02dc 08       		.uleb128 0x8
 2150 02dd 12       		.byte	0x12
 2151 02de 05       		.byte	0x5
 2152 02df DA       		.byte	0xda
 2153 02e0 7B030000 		.4byte	0x37b
 2154 02e4 09       		.uleb128 0x9
 2155 02e5 3C060000 		.4byte	.LASF45
 2156 02e9 05       		.byte	0x5
 2157 02ea DF       		.byte	0xdf
 2158 02eb 77000000 		.4byte	0x77
 2159 02ef 00       		.byte	0
 2160 02f0 09       		.uleb128 0x9
 2161 02f1 B60A0000 		.4byte	.LASF46
 2162 02f5 05       		.byte	0x5
 2163 02f6 E4       		.byte	0xe4
 2164 02f7 D9000000 		.4byte	0xd9
 2165 02fb 02       		.byte	0x2
 2166 02fc 09       		.uleb128 0x9
 2167 02fd DE050000 		.4byte	.LASF47
 2168 0301 05       		.byte	0x5
 2169 0302 E9       		.byte	0xe9
 2170 0303 6B000000 		.4byte	0x6b
 2171 0307 04       		.byte	0x4
 2172 0308 09       		.uleb128 0x9
 2173 0309 16070000 		.4byte	.LASF48
 2174 030d 05       		.byte	0x5
 2175 030e EE       		.byte	0xee
 2176 030f 6B000000 		.4byte	0x6b
 2177 0313 05       		.byte	0x5
 2178 0314 09       		.uleb128 0x9
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 93


 2179 0315 71070000 		.4byte	.LASF49
 2180 0319 05       		.byte	0x5
 2181 031a F4       		.byte	0xf4
 2182 031b 6B000000 		.4byte	0x6b
 2183 031f 06       		.byte	0x6
 2184 0320 09       		.uleb128 0x9
 2185 0321 AD060000 		.4byte	.LASF50
 2186 0325 05       		.byte	0x5
 2187 0326 FA       		.byte	0xfa
 2188 0327 6B000000 		.4byte	0x6b
 2189 032b 07       		.byte	0x7
 2190 032c 0F       		.uleb128 0xf
 2191 032d 25050000 		.4byte	.LASF51
 2192 0331 05       		.byte	0x5
 2193 0332 0101     		.2byte	0x101
 2194 0334 E5000000 		.4byte	0xe5
 2195 0338 08       		.byte	0x8
 2196 0339 0F       		.uleb128 0xf
 2197 033a 7F0A0000 		.4byte	.LASF52
 2198 033e 05       		.byte	0x5
 2199 033f 0801     		.2byte	0x108
 2200 0341 BA020000 		.4byte	0x2ba
 2201 0345 09       		.byte	0x9
 2202 0346 0F       		.uleb128 0xf
 2203 0347 6A0B0000 		.4byte	.LASF53
 2204 034b 05       		.byte	0x5
 2205 034c 1001     		.2byte	0x110
 2206 034e 77000000 		.4byte	0x77
 2207 0352 0A       		.byte	0xa
 2208 0353 0F       		.uleb128 0xf
 2209 0354 B0080000 		.4byte	.LASF54
 2210 0358 05       		.byte	0x5
 2211 0359 1501     		.2byte	0x115
 2212 035b 6B000000 		.4byte	0x6b
 2213 035f 0C       		.byte	0xc
 2214 0360 0F       		.uleb128 0xf
 2215 0361 D3090000 		.4byte	.LASF23
 2216 0365 05       		.byte	0x5
 2217 0366 1B01     		.2byte	0x11b
 2218 0368 77000000 		.4byte	0x77
 2219 036c 0E       		.byte	0xe
 2220 036d 0F       		.uleb128 0xf
 2221 036e FF040000 		.4byte	.LASF28
 2222 0372 05       		.byte	0x5
 2223 0373 2001     		.2byte	0x120
 2224 0375 77000000 		.4byte	0x77
 2225 0379 10       		.byte	0x10
 2226 037a 00       		.byte	0
 2227 037b 04       		.uleb128 0x4
 2228 037c B80C0000 		.4byte	.LASF57
 2229 0380 05       		.byte	0x5
 2230 0381 2101     		.2byte	0x121
 2231 0383 DC020000 		.4byte	0x2dc
 2232 0387 10       		.uleb128 0x10
 2233 0388 12       		.byte	0x12
 2234 0389 05       		.byte	0x5
 2235 038a 2701     		.2byte	0x127
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 94


 2236 038c 9E030000 		.4byte	0x39e
 2237 0390 0F       		.uleb128 0xf
 2238 0391 87090000 		.4byte	.LASF58
 2239 0395 05       		.byte	0x5
 2240 0396 2C01     		.2byte	0x12c
 2241 0398 7B030000 		.4byte	0x37b
 2242 039c 00       		.byte	0
 2243 039d 00       		.byte	0
 2244 039e 04       		.uleb128 0x4
 2245 039f AE020000 		.4byte	.LASF59
 2246 03a3 05       		.byte	0x5
 2247 03a4 2D01     		.2byte	0x12d
 2248 03a6 87030000 		.4byte	0x387
 2249 03aa 10       		.uleb128 0x10
 2250 03ab 0A       		.byte	0xa
 2251 03ac 05       		.byte	0x5
 2252 03ad 3301     		.2byte	0x133
 2253 03af 02040000 		.4byte	0x402
 2254 03b3 11       		.uleb128 0x11
 2255 03b4 72617700 		.ascii	"raw\000"
 2256 03b8 05       		.byte	0x5
 2257 03b9 3801     		.2byte	0x138
 2258 03bb 02040000 		.4byte	0x402
 2259 03bf 00       		.byte	0
 2260 03c0 0F       		.uleb128 0xf
 2261 03c1 940B0000 		.4byte	.LASF60
 2262 03c5 05       		.byte	0x5
 2263 03c6 3D01     		.2byte	0x13d
 2264 03c8 02040000 		.4byte	0x402
 2265 03cc 02       		.byte	0x2
 2266 03cd 0F       		.uleb128 0xf
 2267 03ce DE0A0000 		.4byte	.LASF61
 2268 03d2 05       		.byte	0x5
 2269 03d3 4301     		.2byte	0x143
 2270 03d5 BA020000 		.4byte	0x2ba
 2271 03d9 04       		.byte	0x4
 2272 03da 0F       		.uleb128 0xf
 2273 03db 55090000 		.4byte	.LASF62
 2274 03df 05       		.byte	0x5
 2275 03e0 4801     		.2byte	0x148
 2276 03e2 D9000000 		.4byte	0xd9
 2277 03e6 06       		.byte	0x6
 2278 03e7 0F       		.uleb128 0xf
 2279 03e8 1E0C0000 		.4byte	.LASF63
 2280 03ec 05       		.byte	0x5
 2281 03ed 4D01     		.2byte	0x14d
 2282 03ef 12040000 		.4byte	0x412
 2283 03f3 08       		.byte	0x8
 2284 03f4 0F       		.uleb128 0xf
 2285 03f5 76060000 		.4byte	.LASF64
 2286 03f9 05       		.byte	0x5
 2287 03fa 5201     		.2byte	0x152
 2288 03fc BA020000 		.4byte	0x2ba
 2289 0400 09       		.byte	0x9
 2290 0401 00       		.byte	0
 2291 0402 0D       		.uleb128 0xd
 2292 0403 77000000 		.4byte	0x77
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 95


 2293 0407 12040000 		.4byte	0x412
 2294 040b 0E       		.uleb128 0xe
 2295 040c CA020000 		.4byte	0x2ca
 2296 0410 00       		.byte	0
 2297 0411 00       		.byte	0
 2298 0412 0D       		.uleb128 0xd
 2299 0413 E5000000 		.4byte	0xe5
 2300 0417 22040000 		.4byte	0x422
 2301 041b 0E       		.uleb128 0xe
 2302 041c CA020000 		.4byte	0x2ca
 2303 0420 00       		.byte	0
 2304 0421 00       		.byte	0
 2305 0422 04       		.uleb128 0x4
 2306 0423 2C0C0000 		.4byte	.LASF65
 2307 0427 05       		.byte	0x5
 2308 0428 5301     		.2byte	0x153
 2309 042a AA030000 		.4byte	0x3aa
 2310 042e 10       		.uleb128 0x10
 2311 042f 0A       		.byte	0xa
 2312 0430 05       		.byte	0x5
 2313 0431 5901     		.2byte	0x159
 2314 0433 45040000 		.4byte	0x445
 2315 0437 0F       		.uleb128 0xf
 2316 0438 87090000 		.4byte	.LASF58
 2317 043c 05       		.byte	0x5
 2318 043d 5E01     		.2byte	0x15e
 2319 043f 45040000 		.4byte	0x445
 2320 0443 00       		.byte	0
 2321 0444 00       		.byte	0
 2322 0445 0D       		.uleb128 0xd
 2323 0446 22040000 		.4byte	0x422
 2324 044a 55040000 		.4byte	0x455
 2325 044e 0E       		.uleb128 0xe
 2326 044f CA020000 		.4byte	0x2ca
 2327 0453 00       		.byte	0
 2328 0454 00       		.byte	0
 2329 0455 04       		.uleb128 0x4
 2330 0456 A3070000 		.4byte	.LASF66
 2331 045a 05       		.byte	0x5
 2332 045b 5F01     		.2byte	0x15f
 2333 045d 2E040000 		.4byte	0x42e
 2334 0461 10       		.uleb128 0x10
 2335 0462 40       		.byte	0x40
 2336 0463 05       		.byte	0x5
 2337 0464 6501     		.2byte	0x165
 2338 0466 48050000 		.4byte	0x548
 2339 046a 0F       		.uleb128 0xf
 2340 046b 7A080000 		.4byte	.LASF67
 2341 046f 05       		.byte	0x5
 2342 0470 6C01     		.2byte	0x16c
 2343 0472 77000000 		.4byte	0x77
 2344 0476 00       		.byte	0
 2345 0477 0F       		.uleb128 0xf
 2346 0478 A20C0000 		.4byte	.LASF68
 2347 047c 05       		.byte	0x5
 2348 047d 7101     		.2byte	0x171
 2349 047f 77000000 		.4byte	0x77
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 96


 2350 0483 02       		.byte	0x2
 2351 0484 0F       		.uleb128 0xf
 2352 0485 45010000 		.4byte	.LASF69
 2353 0489 05       		.byte	0x5
 2354 048a 7601     		.2byte	0x176
 2355 048c 77000000 		.4byte	0x77
 2356 0490 04       		.byte	0x4
 2357 0491 0F       		.uleb128 0xf
 2358 0492 5A090000 		.4byte	.LASF70
 2359 0496 05       		.byte	0x5
 2360 0497 7C01     		.2byte	0x17c
 2361 0499 77000000 		.4byte	0x77
 2362 049d 06       		.byte	0x6
 2363 049e 0F       		.uleb128 0xf
 2364 049f 39010000 		.4byte	.LASF71
 2365 04a3 05       		.byte	0x5
 2366 04a4 8101     		.2byte	0x181
 2367 04a6 77000000 		.4byte	0x77
 2368 04aa 08       		.byte	0x8
 2369 04ab 0F       		.uleb128 0xf
 2370 04ac 5D060000 		.4byte	.LASF72
 2371 04b0 05       		.byte	0x5
 2372 04b1 8601     		.2byte	0x186
 2373 04b3 C1000000 		.4byte	0xc1
 2374 04b7 0C       		.byte	0xc
 2375 04b8 0F       		.uleb128 0xf
 2376 04b9 19090000 		.4byte	.LASF73
 2377 04bd 05       		.byte	0x5
 2378 04be 8C01     		.2byte	0x18c
 2379 04c0 48050000 		.4byte	0x548
 2380 04c4 10       		.byte	0x10
 2381 04c5 0F       		.uleb128 0xf
 2382 04c6 DD090000 		.4byte	.LASF74
 2383 04ca 05       		.byte	0x5
 2384 04cb 9301     		.2byte	0x193
 2385 04cd 48050000 		.4byte	0x548
 2386 04d1 14       		.byte	0x14
 2387 04d2 0F       		.uleb128 0xf
 2388 04d3 A6080000 		.4byte	.LASF75
 2389 04d7 05       		.byte	0x5
 2390 04d8 A301     		.2byte	0x1a3
 2391 04da BA020000 		.4byte	0x2ba
 2392 04de 18       		.byte	0x18
 2393 04df 0F       		.uleb128 0xf
 2394 04e0 1F070000 		.4byte	.LASF76
 2395 04e4 05       		.byte	0x5
 2396 04e5 A901     		.2byte	0x1a9
 2397 04e7 77000000 		.4byte	0x77
 2398 04eb 1A       		.byte	0x1a
 2399 04ec 0F       		.uleb128 0xf
 2400 04ed B3040000 		.4byte	.LASF77
 2401 04f1 05       		.byte	0x5
 2402 04f2 AE01     		.2byte	0x1ae
 2403 04f4 6B000000 		.4byte	0x6b
 2404 04f8 1C       		.byte	0x1c
 2405 04f9 0F       		.uleb128 0xf
 2406 04fa F0060000 		.4byte	.LASF78
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 97


 2407 04fe 05       		.byte	0x5
 2408 04ff B301     		.2byte	0x1b3
 2409 0501 9E030000 		.4byte	0x39e
 2410 0505 1E       		.byte	0x1e
 2411 0506 0F       		.uleb128 0xf
 2412 0507 0F040000 		.4byte	.LASF79
 2413 050b 05       		.byte	0x5
 2414 050c B801     		.2byte	0x1b8
 2415 050e 55040000 		.4byte	0x455
 2416 0512 30       		.byte	0x30
 2417 0513 0F       		.uleb128 0xf
 2418 0514 CF000000 		.4byte	.LASF80
 2419 0518 05       		.byte	0x5
 2420 0519 BD01     		.2byte	0x1bd
 2421 051b 6B000000 		.4byte	0x6b
 2422 051f 3A       		.byte	0x3a
 2423 0520 0F       		.uleb128 0xf
 2424 0521 2E040000 		.4byte	.LASF81
 2425 0525 05       		.byte	0x5
 2426 0526 C201     		.2byte	0x1c2
 2427 0528 6B000000 		.4byte	0x6b
 2428 052c 3B       		.byte	0x3b
 2429 052d 0F       		.uleb128 0xf
 2430 052e 67080000 		.4byte	.LASF82
 2431 0532 05       		.byte	0x5
 2432 0533 C701     		.2byte	0x1c7
 2433 0535 77000000 		.4byte	0x77
 2434 0539 3C       		.byte	0x3c
 2435 053a 0F       		.uleb128 0xf
 2436 053b 06070000 		.4byte	.LASF83
 2437 053f 05       		.byte	0x5
 2438 0540 CC01     		.2byte	0x1cc
 2439 0542 02040000 		.4byte	0x402
 2440 0546 3E       		.byte	0x3e
 2441 0547 00       		.byte	0
 2442 0548 0D       		.uleb128 0xd
 2443 0549 83000000 		.4byte	0x83
 2444 054d 58050000 		.4byte	0x558
 2445 0551 0E       		.uleb128 0xe
 2446 0552 CA020000 		.4byte	0x2ca
 2447 0556 00       		.byte	0
 2448 0557 00       		.byte	0
 2449 0558 04       		.uleb128 0x4
 2450 0559 47060000 		.4byte	.LASF84
 2451 055d 05       		.byte	0x5
 2452 055e CD01     		.2byte	0x1cd
 2453 0560 61040000 		.4byte	0x461
 2454 0564 10       		.uleb128 0x10
 2455 0565 1C       		.byte	0x1c
 2456 0566 05       		.byte	0x5
 2457 0567 D301     		.2byte	0x1d3
 2458 0569 E3050000 		.4byte	0x5e3
 2459 056d 0F       		.uleb128 0xf
 2460 056e 61070000 		.4byte	.LASF85
 2461 0572 05       		.byte	0x5
 2462 0573 D801     		.2byte	0x1d8
 2463 0575 E3050000 		.4byte	0x5e3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 98


 2464 0579 00       		.byte	0
 2465 057a 0F       		.uleb128 0xf
 2466 057b 7F060000 		.4byte	.LASF86
 2467 057f 05       		.byte	0x5
 2468 0580 DD01     		.2byte	0x1dd
 2469 0582 E3050000 		.4byte	0x5e3
 2470 0586 04       		.byte	0x4
 2471 0587 0F       		.uleb128 0xf
 2472 0588 DE040000 		.4byte	.LASF87
 2473 058c 05       		.byte	0x5
 2474 058d E201     		.2byte	0x1e2
 2475 058f E3050000 		.4byte	0x5e3
 2476 0593 08       		.byte	0x8
 2477 0594 0F       		.uleb128 0xf
 2478 0595 63090000 		.4byte	.LASF88
 2479 0599 05       		.byte	0x5
 2480 059a E701     		.2byte	0x1e7
 2481 059c E3050000 		.4byte	0x5e3
 2482 05a0 0C       		.byte	0xc
 2483 05a1 0F       		.uleb128 0xf
 2484 05a2 360B0000 		.4byte	.LASF89
 2485 05a6 05       		.byte	0x5
 2486 05a7 EC01     		.2byte	0x1ec
 2487 05a9 83000000 		.4byte	0x83
 2488 05ad 10       		.byte	0x10
 2489 05ae 0F       		.uleb128 0xf
 2490 05af 6F010000 		.4byte	.LASF90
 2491 05b3 05       		.byte	0x5
 2492 05b4 F101     		.2byte	0x1f1
 2493 05b6 83000000 		.4byte	0x83
 2494 05ba 14       		.byte	0x14
 2495 05bb 0F       		.uleb128 0xf
 2496 05bc 1B060000 		.4byte	.LASF91
 2497 05c0 05       		.byte	0x5
 2498 05c1 F601     		.2byte	0x1f6
 2499 05c3 6B000000 		.4byte	0x6b
 2500 05c7 18       		.byte	0x18
 2501 05c8 0F       		.uleb128 0xf
 2502 05c9 590A0000 		.4byte	.LASF92
 2503 05cd 05       		.byte	0x5
 2504 05ce FB01     		.2byte	0x1fb
 2505 05d0 6B000000 		.4byte	0x6b
 2506 05d4 19       		.byte	0x19
 2507 05d5 0F       		.uleb128 0xf
 2508 05d6 40030000 		.4byte	.LASF93
 2509 05da 05       		.byte	0x5
 2510 05db 0002     		.2byte	0x200
 2511 05dd 6B000000 		.4byte	0x6b
 2512 05e1 1A       		.byte	0x1a
 2513 05e2 00       		.byte	0
 2514 05e3 06       		.uleb128 0x6
 2515 05e4 04       		.byte	0x4
 2516 05e5 B5000000 		.4byte	0xb5
 2517 05e9 04       		.uleb128 0x4
 2518 05ea C20B0000 		.4byte	.LASF94
 2519 05ee 05       		.byte	0x5
 2520 05ef 0102     		.2byte	0x201
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 99


 2521 05f1 64050000 		.4byte	0x564
 2522 05f5 10       		.uleb128 0x10
 2523 05f6 20       		.byte	0x20
 2524 05f7 05       		.byte	0x5
 2525 05f8 3402     		.2byte	0x234
 2526 05fa 81060000 		.4byte	0x681
 2527 05fe 0F       		.uleb128 0xf
 2528 05ff F9060000 		.4byte	.LASF95
 2529 0603 05       		.byte	0x5
 2530 0604 3D02     		.2byte	0x23d
 2531 0606 81060000 		.4byte	0x681
 2532 060a 00       		.byte	0
 2533 060b 0F       		.uleb128 0xf
 2534 060c 1A0B0000 		.4byte	.LASF96
 2535 0610 05       		.byte	0x5
 2536 0611 4402     		.2byte	0x244
 2537 0613 88060000 		.4byte	0x688
 2538 0617 04       		.byte	0x4
 2539 0618 0F       		.uleb128 0xf
 2540 0619 83080000 		.4byte	.LASF97
 2541 061d 05       		.byte	0x5
 2542 061e 4A02     		.2byte	0x24a
 2543 0620 8A060000 		.4byte	0x68a
 2544 0624 08       		.byte	0x8
 2545 0625 0F       		.uleb128 0xf
 2546 0626 7C070000 		.4byte	.LASF98
 2547 062a 05       		.byte	0x5
 2548 062b 5002     		.2byte	0x250
 2549 062d 88060000 		.4byte	0x688
 2550 0631 0C       		.byte	0xc
 2551 0632 0F       		.uleb128 0xf
 2552 0633 870A0000 		.4byte	.LASF99
 2553 0637 05       		.byte	0x5
 2554 0638 5702     		.2byte	0x257
 2555 063a 90060000 		.4byte	0x690
 2556 063e 10       		.byte	0x10
 2557 063f 0F       		.uleb128 0xf
 2558 0640 FD0A0000 		.4byte	.LASF100
 2559 0644 05       		.byte	0x5
 2560 0645 5C02     		.2byte	0x25c
 2561 0647 83000000 		.4byte	0x83
 2562 064b 14       		.byte	0x14
 2563 064c 0F       		.uleb128 0xf
 2564 064d 89050000 		.4byte	.LASF101
 2565 0651 05       		.byte	0x5
 2566 0652 6302     		.2byte	0x263
 2567 0654 77000000 		.4byte	0x77
 2568 0658 18       		.byte	0x18
 2569 0659 0F       		.uleb128 0xf
 2570 065a 4D040000 		.4byte	.LASF102
 2571 065e 05       		.byte	0x5
 2572 065f 6A02     		.2byte	0x26a
 2573 0661 6B000000 		.4byte	0x6b
 2574 0665 1A       		.byte	0x1a
 2575 0666 0F       		.uleb128 0xf
 2576 0667 AD090000 		.4byte	.LASF103
 2577 066b 05       		.byte	0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 100


 2578 066c 7402     		.2byte	0x274
 2579 066e 6B000000 		.4byte	0x6b
 2580 0672 1B       		.byte	0x1b
 2581 0673 0F       		.uleb128 0xf
 2582 0674 3E040000 		.4byte	.LASF104
 2583 0678 05       		.byte	0x5
 2584 0679 7C02     		.2byte	0x27c
 2585 067b 96060000 		.4byte	0x696
 2586 067f 1C       		.byte	0x1c
 2587 0680 00       		.byte	0
 2588 0681 06       		.uleb128 0x6
 2589 0682 04       		.byte	0x4
 2590 0683 87060000 		.4byte	0x687
 2591 0687 12       		.uleb128 0x12
 2592 0688 13       		.uleb128 0x13
 2593 0689 04       		.byte	0x4
 2594 068a 06       		.uleb128 0x6
 2595 068b 04       		.byte	0x4
 2596 068c 22040000 		.4byte	0x422
 2597 0690 06       		.uleb128 0x6
 2598 0691 04       		.byte	0x4
 2599 0692 6B000000 		.4byte	0x6b
 2600 0696 06       		.uleb128 0x6
 2601 0697 04       		.byte	0x4
 2602 0698 E0010000 		.4byte	0x1e0
 2603 069c 04       		.uleb128 0x4
 2604 069d 91000000 		.4byte	.LASF105
 2605 06a1 05       		.byte	0x5
 2606 06a2 7D02     		.2byte	0x27d
 2607 06a4 F5050000 		.4byte	0x5f5
 2608 06a8 10       		.uleb128 0x10
 2609 06a9 20       		.byte	0x20
 2610 06aa 05       		.byte	0x5
 2611 06ab 8302     		.2byte	0x283
 2612 06ad BF060000 		.4byte	0x6bf
 2613 06b1 0F       		.uleb128 0xf
 2614 06b2 530D0000 		.4byte	.LASF106
 2615 06b6 05       		.byte	0x5
 2616 06b7 8802     		.2byte	0x288
 2617 06b9 BF060000 		.4byte	0x6bf
 2618 06bd 00       		.byte	0
 2619 06be 00       		.byte	0
 2620 06bf 0D       		.uleb128 0xd
 2621 06c0 9C060000 		.4byte	0x69c
 2622 06c4 CF060000 		.4byte	0x6cf
 2623 06c8 0E       		.uleb128 0xe
 2624 06c9 CA020000 		.4byte	0x2ca
 2625 06cd 00       		.byte	0
 2626 06ce 00       		.byte	0
 2627 06cf 04       		.uleb128 0x4
 2628 06d0 8E080000 		.4byte	.LASF107
 2629 06d4 05       		.byte	0x5
 2630 06d5 8902     		.2byte	0x289
 2631 06d7 A8060000 		.4byte	0x6a8
 2632 06db 02       		.uleb128 0x2
 2633 06dc 08       		.byte	0x8
 2634 06dd 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 101


 2635 06de 37070000 		.4byte	.LASF108
 2636 06e2 14       		.uleb128 0x14
 2637 06e3 00000000 		.4byte	.LASF111
 2638 06e7 01       		.byte	0x1
 2639 06e8 6009     		.2byte	0x960
 2640 06ea 6B000000 		.4byte	0x6b
 2641 06ee 00000000 		.4byte	.LFB20
 2642 06f2 84000000 		.4byte	.LFE20-.LFB20
 2643 06f6 01       		.uleb128 0x1
 2644 06f7 9C       		.byte	0x9c
 2645 06f8 2D070000 		.4byte	0x72d
 2646 06fc 15       		.uleb128 0x15
 2647 06fd 860C0000 		.4byte	.LASF109
 2648 0701 01       		.byte	0x1
 2649 0702 6009     		.2byte	0x960
 2650 0704 83000000 		.4byte	0x83
 2651 0708 00000000 		.4byte	.LLST0
 2652 070c 15       		.uleb128 0x15
 2653 070d 2D060000 		.4byte	.LASF110
 2654 0711 01       		.byte	0x1
 2655 0712 6009     		.2byte	0x960
 2656 0714 83000000 		.4byte	0x83
 2657 0718 2C000000 		.4byte	.LLST1
 2658 071c 16       		.uleb128 0x16
 2659 071d 56040000 		.4byte	.LASF113
 2660 0721 01       		.byte	0x1
 2661 0722 6209     		.2byte	0x962
 2662 0724 6B000000 		.4byte	0x6b
 2663 0728 58000000 		.4byte	.LLST2
 2664 072c 00       		.byte	0
 2665 072d 14       		.uleb128 0x14
 2666 072e 180D0000 		.4byte	.LASF112
 2667 0732 01       		.byte	0x1
 2668 0733 AC09     		.2byte	0x9ac
 2669 0735 6B000000 		.4byte	0x6b
 2670 0739 00000000 		.4byte	.LFB21
 2671 073d 42000000 		.4byte	.LFE21-.LFB21
 2672 0741 01       		.uleb128 0x1
 2673 0742 9C       		.byte	0x9c
 2674 0743 98070000 		.4byte	0x798
 2675 0747 15       		.uleb128 0x15
 2676 0748 860C0000 		.4byte	.LASF109
 2677 074c 01       		.byte	0x1
 2678 074d AC09     		.2byte	0x9ac
 2679 074f 83000000 		.4byte	0x83
 2680 0753 77000000 		.4byte	.LLST3
 2681 0757 15       		.uleb128 0x15
 2682 0758 56040000 		.4byte	.LASF113
 2683 075c 01       		.byte	0x1
 2684 075d AC09     		.2byte	0x9ac
 2685 075f 6B000000 		.4byte	0x6b
 2686 0763 BC000000 		.4byte	.LLST4
 2687 0767 16       		.uleb128 0x16
 2688 0768 D2010000 		.4byte	.LASF114
 2689 076c 01       		.byte	0x1
 2690 076d AE09     		.2byte	0x9ae
 2691 076f 83000000 		.4byte	0x83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 102


 2692 0773 F6000000 		.4byte	.LLST5
 2693 0777 16       		.uleb128 0x16
 2694 0778 45020000 		.4byte	.LASF115
 2695 077c 01       		.byte	0x1
 2696 077d AF09     		.2byte	0x9af
 2697 077f 83000000 		.4byte	0x83
 2698 0783 20010000 		.4byte	.LLST6
 2699 0787 16       		.uleb128 0x16
 2700 0788 DD0B0000 		.4byte	.LASF116
 2701 078c 01       		.byte	0x1
 2702 078d B009     		.2byte	0x9b0
 2703 078f 83000000 		.4byte	0x83
 2704 0793 49010000 		.4byte	.LLST7
 2705 0797 00       		.byte	0
 2706 0798 17       		.uleb128 0x17
 2707 0799 75000000 		.4byte	.LASF157
 2708 079d 01       		.byte	0x1
 2709 079e FA02     		.2byte	0x2fa
 2710 07a0 00000000 		.4byte	.LFB7
 2711 07a4 24000000 		.4byte	.LFE7-.LFB7
 2712 07a8 01       		.uleb128 0x1
 2713 07a9 9C       		.byte	0x9c
 2714 07aa C8070000 		.4byte	0x7c8
 2715 07ae 16       		.uleb128 0x16
 2716 07af E80B0000 		.4byte	.LASF117
 2717 07b3 01       		.byte	0x1
 2718 07b4 FC02     		.2byte	0x2fc
 2719 07b6 83000000 		.4byte	0x83
 2720 07ba 5C010000 		.4byte	.LLST8
 2721 07be 18       		.uleb128 0x18
 2722 07bf 1A000000 		.4byte	.LVL29
 2723 07c3 C1100000 		.4byte	0x10c1
 2724 07c7 00       		.byte	0
 2725 07c8 19       		.uleb128 0x19
 2726 07c9 C0010000 		.4byte	.LASF196
 2727 07cd 01       		.byte	0x1
 2728 07ce E9       		.byte	0xe9
 2729 07cf 83000000 		.4byte	0x83
 2730 07d3 00000000 		.4byte	.LFB1
 2731 07d7 10000000 		.4byte	.LFE1-.LFB1
 2732 07db 01       		.uleb128 0x1
 2733 07dc 9C       		.byte	0x9c
 2734 07dd 1A       		.uleb128 0x1a
 2735 07de EE030000 		.4byte	.LASF120
 2736 07e2 01       		.byte	0x1
 2737 07e3 1D01     		.2byte	0x11d
 2738 07e5 A4000000 		.4byte	0xa4
 2739 07e9 00000000 		.4byte	.LFB2
 2740 07ed 40000000 		.4byte	.LFE2-.LFB2
 2741 07f1 01       		.uleb128 0x1
 2742 07f2 9C       		.byte	0x9c
 2743 07f3 21080000 		.4byte	0x821
 2744 07f7 15       		.uleb128 0x15
 2745 07f8 D80C0000 		.4byte	.LASF118
 2746 07fc 01       		.byte	0x1
 2747 07fd 1D01     		.2byte	0x11d
 2748 07ff 83000000 		.4byte	0x83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 103


 2749 0803 6F010000 		.4byte	.LLST9
 2750 0807 16       		.uleb128 0x16
 2751 0808 AB0C0000 		.4byte	.LASF119
 2752 080c 01       		.byte	0x1
 2753 080d 1F01     		.2byte	0x11f
 2754 080f A4000000 		.4byte	0xa4
 2755 0813 90010000 		.4byte	.LLST10
 2756 0817 18       		.uleb128 0x18
 2757 0818 38000000 		.4byte	.LVL32
 2758 081c CD100000 		.4byte	0x10cd
 2759 0820 00       		.byte	0
 2760 0821 1A       		.uleb128 0x1a
 2761 0822 23080000 		.4byte	.LASF121
 2762 0826 01       		.byte	0x1
 2763 0827 7001     		.2byte	0x170
 2764 0829 A4000000 		.4byte	0xa4
 2765 082d 00000000 		.4byte	.LFB3
 2766 0831 2C000000 		.4byte	.LFE3-.LFB3
 2767 0835 01       		.uleb128 0x1
 2768 0836 9C       		.byte	0x9c
 2769 0837 55080000 		.4byte	0x855
 2770 083b 16       		.uleb128 0x16
 2771 083c AC000000 		.4byte	.LASF122
 2772 0840 01       		.byte	0x1
 2773 0841 7201     		.2byte	0x172
 2774 0843 A4000000 		.4byte	0xa4
 2775 0847 AE010000 		.4byte	.LLST11
 2776 084b 18       		.uleb128 0x18
 2777 084c 16000000 		.4byte	.LVL35
 2778 0850 D9100000 		.4byte	0x10d9
 2779 0854 00       		.byte	0
 2780 0855 1A       		.uleb128 0x1a
 2781 0856 01060000 		.4byte	.LASF123
 2782 085a 01       		.byte	0x1
 2783 085b AE01     		.2byte	0x1ae
 2784 085d A4000000 		.4byte	0xa4
 2785 0861 00000000 		.4byte	.LFB4
 2786 0865 3C000000 		.4byte	.LFE4-.LFB4
 2787 0869 01       		.uleb128 0x1
 2788 086a 9C       		.byte	0x9c
 2789 086b AD080000 		.4byte	0x8ad
 2790 086f 16       		.uleb128 0x16
 2791 0870 AC000000 		.4byte	.LASF122
 2792 0874 01       		.byte	0x1
 2793 0875 B001     		.2byte	0x1b0
 2794 0877 A4000000 		.4byte	0xa4
 2795 087b CD010000 		.4byte	.LLST12
 2796 087f 16       		.uleb128 0x16
 2797 0880 FF070000 		.4byte	.LASF124
 2798 0884 01       		.byte	0x1
 2799 0885 B201     		.2byte	0x1b2
 2800 0887 83000000 		.4byte	0x83
 2801 088b 1B020000 		.4byte	.LLST13
 2802 088f 1B       		.uleb128 0x1b
 2803 0890 18000000 		.4byte	.LVL40
 2804 0894 DD070000 		.4byte	0x7dd
 2805 0898 A3080000 		.4byte	0x8a3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 104


 2806 089c 1C       		.uleb128 0x1c
 2807 089d 01       		.uleb128 0x1
 2808 089e 50       		.byte	0x50
 2809 089f 02       		.uleb128 0x2
 2810 08a0 74       		.byte	0x74
 2811 08a1 00       		.sleb128 0
 2812 08a2 00       		.byte	0
 2813 08a3 18       		.uleb128 0x18
 2814 08a4 26000000 		.4byte	.LVL41
 2815 08a8 21080000 		.4byte	0x821
 2816 08ac 00       		.byte	0
 2817 08ad 1D       		.uleb128 0x1d
 2818 08ae 30050000 		.4byte	.LASF131
 2819 08b2 01       		.byte	0x1
 2820 08b3 8902     		.2byte	0x289
 2821 08b5 00000000 		.4byte	.LFB6
 2822 08b9 9C000000 		.4byte	.LFE6-.LFB6
 2823 08bd 01       		.uleb128 0x1
 2824 08be 9C       		.byte	0x9c
 2825 08bf 77090000 		.4byte	0x977
 2826 08c3 15       		.uleb128 0x15
 2827 08c4 D80C0000 		.4byte	.LASF118
 2828 08c8 01       		.byte	0x1
 2829 08c9 8902     		.2byte	0x289
 2830 08cb 83000000 		.4byte	0x83
 2831 08cf 2E020000 		.4byte	.LLST14
 2832 08d3 15       		.uleb128 0x15
 2833 08d4 1A000000 		.4byte	.LASF125
 2834 08d8 01       		.byte	0x1
 2835 08d9 8902     		.2byte	0x289
 2836 08db 83000000 		.4byte	0x83
 2837 08df 4F020000 		.4byte	.LLST15
 2838 08e3 15       		.uleb128 0x15
 2839 08e4 260B0000 		.4byte	.LASF126
 2840 08e8 01       		.byte	0x1
 2841 08e9 8902     		.2byte	0x289
 2842 08eb 83000000 		.4byte	0x83
 2843 08ef 70020000 		.4byte	.LLST16
 2844 08f3 1E       		.uleb128 0x1e
 2845 08f4 D5020000 		.4byte	.LASF127
 2846 08f8 01       		.byte	0x1
 2847 08f9 8B02     		.2byte	0x28b
 2848 08fb 83000000 		.4byte	0x83
 2849 08ff 01       		.byte	0x1
 2850 0900 16       		.uleb128 0x16
 2851 0901 2C0B0000 		.4byte	.LASF128
 2852 0905 01       		.byte	0x1
 2853 0906 8C02     		.2byte	0x28c
 2854 0908 83000000 		.4byte	0x83
 2855 090c 9C020000 		.4byte	.LLST17
 2856 0910 16       		.uleb128 0x16
 2857 0911 B1010000 		.4byte	.LASF129
 2858 0915 01       		.byte	0x1
 2859 0916 8D02     		.2byte	0x28d
 2860 0918 6B000000 		.4byte	0x6b
 2861 091c BB020000 		.4byte	.LLST18
 2862 0920 16       		.uleb128 0x16
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 105


 2863 0921 140B0000 		.4byte	.LASF130
 2864 0925 01       		.byte	0x1
 2865 0926 8E02     		.2byte	0x28e
 2866 0928 77090000 		.4byte	0x977
 2867 092c E4020000 		.4byte	.LLST19
 2868 0930 18       		.uleb128 0x18
 2869 0931 1A000000 		.4byte	.LVL50
 2870 0935 E5100000 		.4byte	0x10e5
 2871 0939 18       		.uleb128 0x18
 2872 093a 3A000000 		.4byte	.LVL51
 2873 093e F0100000 		.4byte	0x10f0
 2874 0942 18       		.uleb128 0x18
 2875 0943 4C000000 		.4byte	.LVL52
 2876 0947 E5100000 		.4byte	0x10e5
 2877 094b 18       		.uleb128 0x18
 2878 094c 6C000000 		.4byte	.LVL53
 2879 0950 F0100000 		.4byte	0x10f0
 2880 0954 18       		.uleb128 0x18
 2881 0955 72000000 		.4byte	.LVL54
 2882 0959 E5100000 		.4byte	0x10e5
 2883 095d 18       		.uleb128 0x18
 2884 095e 84000000 		.4byte	.LVL55
 2885 0962 F0100000 		.4byte	0x10f0
 2886 0966 1F       		.uleb128 0x1f
 2887 0967 8C000000 		.4byte	.LVL56
 2888 096b FB100000 		.4byte	0x10fb
 2889 096f 1C       		.uleb128 0x1c
 2890 0970 01       		.uleb128 0x1
 2891 0971 50       		.byte	0x50
 2892 0972 02       		.uleb128 0x2
 2893 0973 74       		.byte	0x74
 2894 0974 00       		.sleb128 0
 2895 0975 00       		.byte	0
 2896 0976 00       		.byte	0
 2897 0977 06       		.uleb128 0x6
 2898 0978 04       		.byte	0x4
 2899 0979 7D090000 		.4byte	0x97d
 2900 097d 20       		.uleb128 0x20
 2901 097e E9050000 		.4byte	0x5e9
 2902 0982 1D       		.uleb128 0x1d
 2903 0983 47050000 		.4byte	.LASF132
 2904 0987 01       		.byte	0x1
 2905 0988 8503     		.2byte	0x385
 2906 098a 00000000 		.4byte	.LFB8
 2907 098e 3C000000 		.4byte	.LFE8-.LFB8
 2908 0992 01       		.uleb128 0x1
 2909 0993 9C       		.byte	0x9c
 2910 0994 BB090000 		.4byte	0x9bb
 2911 0998 15       		.uleb128 0x15
 2912 0999 4F020000 		.4byte	.LASF133
 2913 099d 01       		.byte	0x1
 2914 099e 8503     		.2byte	0x385
 2915 09a0 16020000 		.4byte	0x216
 2916 09a4 F7020000 		.4byte	.LLST20
 2917 09a8 18       		.uleb128 0x18
 2918 09a9 14000000 		.4byte	.LVL63
 2919 09ad 98070000 		.4byte	0x798
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 106


 2920 09b1 18       		.uleb128 0x18
 2921 09b2 1C000000 		.4byte	.LVL64
 2922 09b6 07110000 		.4byte	0x1107
 2923 09ba 00       		.byte	0
 2924 09bb 1D       		.uleb128 0x1d
 2925 09bc FF000000 		.4byte	.LASF134
 2926 09c0 01       		.byte	0x1
 2927 09c1 E803     		.2byte	0x3e8
 2928 09c3 00000000 		.4byte	.LFB9
 2929 09c7 40000000 		.4byte	.LFE9-.LFB9
 2930 09cb 01       		.uleb128 0x1
 2931 09cc 9C       		.byte	0x9c
 2932 09cd 020A0000 		.4byte	0xa02
 2933 09d1 16       		.uleb128 0x16
 2934 09d2 140B0000 		.4byte	.LASF130
 2935 09d6 01       		.byte	0x1
 2936 09d7 EA03     		.2byte	0x3ea
 2937 09d9 77090000 		.4byte	0x977
 2938 09dd 18030000 		.4byte	.LLST21
 2939 09e1 16       		.uleb128 0x16
 2940 09e2 30030000 		.4byte	.LASF135
 2941 09e6 01       		.byte	0x1
 2942 09e7 EB03     		.2byte	0x3eb
 2943 09e9 83000000 		.4byte	0x83
 2944 09ed 2B030000 		.4byte	.LLST22
 2945 09f1 16       		.uleb128 0x16
 2946 09f2 96010000 		.4byte	.LASF136
 2947 09f6 01       		.byte	0x1
 2948 09f7 EC03     		.2byte	0x3ec
 2949 09f9 83000000 		.4byte	0x83
 2950 09fd 4A030000 		.4byte	.LLST23
 2951 0a01 00       		.byte	0
 2952 0a02 21       		.uleb128 0x21
 2953 0a03 E10C0000 		.4byte	.LASF197
 2954 0a07 01       		.byte	0x1
 2955 0a08 6204     		.2byte	0x462
 2956 0a0a 00000000 		.4byte	.LFB10
 2957 0a0e 02000000 		.4byte	.LFE10-.LFB10
 2958 0a12 01       		.uleb128 0x1
 2959 0a13 9C       		.byte	0x9c
 2960 0a14 1D       		.uleb128 0x1d
 2961 0a15 E4040000 		.4byte	.LASF137
 2962 0a19 01       		.byte	0x1
 2963 0a1a AF04     		.2byte	0x4af
 2964 0a1c 00000000 		.4byte	.LFB11
 2965 0a20 08000000 		.4byte	.LFE11-.LFB11
 2966 0a24 01       		.uleb128 0x1
 2967 0a25 9C       		.byte	0x9c
 2968 0a26 4C0A0000 		.4byte	0xa4c
 2969 0a2a 15       		.uleb128 0x15
 2970 0a2b D8060000 		.4byte	.LASF138
 2971 0a2f 01       		.byte	0x1
 2972 0a30 AF04     		.2byte	0x4af
 2973 0a32 C6000000 		.4byte	0xc6
 2974 0a36 73030000 		.4byte	.LLST24
 2975 0a3a 1F       		.uleb128 0x1f
 2976 0a3b 06000000 		.4byte	.LVL78
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 107


 2977 0a3f 13110000 		.4byte	0x1113
 2978 0a43 1C       		.uleb128 0x1c
 2979 0a44 01       		.uleb128 0x1
 2980 0a45 50       		.byte	0x50
 2981 0a46 03       		.uleb128 0x3
 2982 0a47 F3       		.byte	0xf3
 2983 0a48 01       		.uleb128 0x1
 2984 0a49 50       		.byte	0x50
 2985 0a4a 00       		.byte	0
 2986 0a4b 00       		.byte	0
 2987 0a4c 1D       		.uleb128 0x1d
 2988 0a4d 66050000 		.4byte	.LASF139
 2989 0a51 01       		.byte	0x1
 2990 0a52 C604     		.2byte	0x4c6
 2991 0a54 00000000 		.4byte	.LFB12
 2992 0a58 30000000 		.4byte	.LFE12-.LFB12
 2993 0a5c 01       		.uleb128 0x1
 2994 0a5d 9C       		.byte	0x9c
 2995 0a5e 730A0000 		.4byte	0xa73
 2996 0a62 15       		.uleb128 0x15
 2997 0a63 64060000 		.4byte	.LASF140
 2998 0a67 01       		.byte	0x1
 2999 0a68 C604     		.2byte	0x4c6
 3000 0a6a 83000000 		.4byte	0x83
 3001 0a6e 94030000 		.4byte	.LLST25
 3002 0a72 00       		.byte	0
 3003 0a73 1D       		.uleb128 0x1d
 3004 0a74 B8060000 		.4byte	.LASF141
 3005 0a78 01       		.byte	0x1
 3006 0a79 0A05     		.2byte	0x50a
 3007 0a7b 00000000 		.4byte	.LFB13
 3008 0a7f 14000000 		.4byte	.LFE13-.LFB13
 3009 0a83 01       		.uleb128 0x1
 3010 0a84 9C       		.byte	0x9c
 3011 0a85 AA0A0000 		.4byte	0xaaa
 3012 0a89 15       		.uleb128 0x15
 3013 0a8a 6A0B0000 		.4byte	.LASF53
 3014 0a8e 01       		.byte	0x1
 3015 0a8f 0A05     		.2byte	0x50a
 3016 0a91 83000000 		.4byte	0x83
 3017 0a95 C2030000 		.4byte	.LLST26
 3018 0a99 16       		.uleb128 0x16
 3019 0a9a E80B0000 		.4byte	.LASF117
 3020 0a9e 01       		.byte	0x1
 3021 0a9f 0D05     		.2byte	0x50d
 3022 0aa1 83000000 		.4byte	0x83
 3023 0aa5 F0030000 		.4byte	.LLST27
 3024 0aa9 00       		.byte	0
 3025 0aaa 1D       		.uleb128 0x1d
 3026 0aab 24090000 		.4byte	.LASF142
 3027 0aaf 01       		.byte	0x1
 3028 0ab0 5E05     		.2byte	0x55e
 3029 0ab2 00000000 		.4byte	.LFB14
 3030 0ab6 12000000 		.4byte	.LFE14-.LFB14
 3031 0aba 01       		.uleb128 0x1
 3032 0abb 9C       		.byte	0x9c
 3033 0abc 060B0000 		.4byte	0xb06
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 108


 3034 0ac0 15       		.uleb128 0x15
 3035 0ac1 6A0B0000 		.4byte	.LASF53
 3036 0ac5 01       		.byte	0x1
 3037 0ac6 5E05     		.2byte	0x55e
 3038 0ac8 83000000 		.4byte	0x83
 3039 0acc 19040000 		.4byte	.LLST28
 3040 0ad0 15       		.uleb128 0x15
 3041 0ad1 64060000 		.4byte	.LASF140
 3042 0ad5 01       		.byte	0x1
 3043 0ad6 5E05     		.2byte	0x55e
 3044 0ad8 83000000 		.4byte	0x83
 3045 0adc 45040000 		.4byte	.LLST29
 3046 0ae0 1B       		.uleb128 0x1b
 3047 0ae1 0A000000 		.4byte	.LVL90
 3048 0ae5 4C0A0000 		.4byte	0xa4c
 3049 0ae9 F50A0000 		.4byte	0xaf5
 3050 0aed 1C       		.uleb128 0x1c
 3051 0aee 01       		.uleb128 0x1
 3052 0aef 50       		.byte	0x50
 3053 0af0 03       		.uleb128 0x3
 3054 0af1 F3       		.byte	0xf3
 3055 0af2 01       		.uleb128 0x1
 3056 0af3 51       		.byte	0x51
 3057 0af4 00       		.byte	0
 3058 0af5 1F       		.uleb128 0x1f
 3059 0af6 10000000 		.4byte	.LVL91
 3060 0afa 730A0000 		.4byte	0xa73
 3061 0afe 1C       		.uleb128 0x1c
 3062 0aff 01       		.uleb128 0x1
 3063 0b00 50       		.byte	0x50
 3064 0b01 02       		.uleb128 0x2
 3065 0b02 74       		.byte	0x74
 3066 0b03 00       		.sleb128 0
 3067 0b04 00       		.byte	0
 3068 0b05 00       		.byte	0
 3069 0b06 1A       		.uleb128 0x1a
 3070 0b07 FE010000 		.4byte	.LASF143
 3071 0b0b 01       		.byte	0x1
 3072 0b0c 9205     		.2byte	0x592
 3073 0b0e A4000000 		.4byte	0xa4
 3074 0b12 00000000 		.4byte	.LFB15
 3075 0b16 1A000000 		.4byte	.LFE15-.LFB15
 3076 0b1a 01       		.uleb128 0x1
 3077 0b1b 9C       		.byte	0x9c
 3078 0b1c 580B0000 		.4byte	0xb58
 3079 0b20 15       		.uleb128 0x15
 3080 0b21 D80C0000 		.4byte	.LASF118
 3081 0b25 01       		.byte	0x1
 3082 0b26 9205     		.2byte	0x592
 3083 0b28 83000000 		.4byte	0x83
 3084 0b2c 66040000 		.4byte	.LLST30
 3085 0b30 16       		.uleb128 0x16
 3086 0b31 E0060000 		.4byte	.LASF144
 3087 0b35 01       		.byte	0x1
 3088 0b36 9405     		.2byte	0x594
 3089 0b38 A4000000 		.4byte	0xa4
 3090 0b3c A8040000 		.4byte	.LLST31
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 109


 3091 0b40 1F       		.uleb128 0x1f
 3092 0b41 18000000 		.4byte	.LVL99
 3093 0b45 1E110000 		.4byte	0x111e
 3094 0b49 1C       		.uleb128 0x1c
 3095 0b4a 01       		.uleb128 0x1
 3096 0b4b 50       		.byte	0x50
 3097 0b4c 03       		.uleb128 0x3
 3098 0b4d F3       		.byte	0xf3
 3099 0b4e 01       		.uleb128 0x1
 3100 0b4f 50       		.byte	0x50
 3101 0b50 1C       		.uleb128 0x1c
 3102 0b51 01       		.uleb128 0x1
 3103 0b52 51       		.byte	0x51
 3104 0b53 02       		.uleb128 0x2
 3105 0b54 08       		.byte	0x8
 3106 0b55 55       		.byte	0x55
 3107 0b56 00       		.byte	0
 3108 0b57 00       		.byte	0
 3109 0b58 1A       		.uleb128 0x1a
 3110 0b59 BF0A0000 		.4byte	.LASF145
 3111 0b5d 01       		.byte	0x1
 3112 0b5e 0306     		.2byte	0x603
 3113 0b60 A4000000 		.4byte	0xa4
 3114 0b64 00000000 		.4byte	.LFB16
 3115 0b68 1A000000 		.4byte	.LFE16-.LFB16
 3116 0b6c 01       		.uleb128 0x1
 3117 0b6d 9C       		.byte	0x9c
 3118 0b6e A30B0000 		.4byte	0xba3
 3119 0b72 16       		.uleb128 0x16
 3120 0b73 E0060000 		.4byte	.LASF144
 3121 0b77 01       		.byte	0x1
 3122 0b78 0506     		.2byte	0x605
 3123 0b7a A4000000 		.4byte	0xa4
 3124 0b7e D2040000 		.4byte	.LLST32
 3125 0b82 16       		.uleb128 0x16
 3126 0b83 FF070000 		.4byte	.LASF124
 3127 0b87 01       		.byte	0x1
 3128 0b88 0606     		.2byte	0x606
 3129 0b8a 83000000 		.4byte	0x83
 3130 0b8e FC040000 		.4byte	.LLST33
 3131 0b92 1F       		.uleb128 0x1f
 3132 0b93 0E000000 		.4byte	.LVL102
 3133 0b97 060B0000 		.4byte	0xb06
 3134 0b9b 1C       		.uleb128 0x1c
 3135 0b9c 01       		.uleb128 0x1
 3136 0b9d 50       		.byte	0x50
 3137 0b9e 02       		.uleb128 0x2
 3138 0b9f 74       		.byte	0x74
 3139 0ba0 00       		.sleb128 0
 3140 0ba1 00       		.byte	0
 3141 0ba2 00       		.byte	0
 3142 0ba3 1D       		.uleb128 0x1d
 3143 0ba4 F40B0000 		.4byte	.LASF146
 3144 0ba8 01       		.byte	0x1
 3145 0ba9 060A     		.2byte	0xa06
 3146 0bab 00000000 		.4byte	.LFB22
 3147 0baf 38000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 110


 3148 0bb3 01       		.uleb128 0x1
 3149 0bb4 9C       		.byte	0x9c
 3150 0bb5 040C0000 		.4byte	0xc04
 3151 0bb9 16       		.uleb128 0x16
 3152 0bba FF070000 		.4byte	.LASF124
 3153 0bbe 01       		.byte	0x1
 3154 0bbf 080A     		.2byte	0xa08
 3155 0bc1 83000000 		.4byte	0x83
 3156 0bc5 1B050000 		.4byte	.LLST34
 3157 0bc9 16       		.uleb128 0x16
 3158 0bca 09080000 		.4byte	.LASF147
 3159 0bce 01       		.byte	0x1
 3160 0bcf 090A     		.2byte	0xa09
 3161 0bd1 83000000 		.4byte	0x83
 3162 0bd5 3A050000 		.4byte	.LLST35
 3163 0bd9 16       		.uleb128 0x16
 3164 0bda 5E0B0000 		.4byte	.LASF148
 3165 0bde 01       		.byte	0x1
 3166 0bdf 150A     		.2byte	0xa15
 3167 0be1 77090000 		.4byte	0x977
 3168 0be5 59050000 		.4byte	.LLST36
 3169 0be9 1F       		.uleb128 0x1f
 3170 0bea 1C000000 		.4byte	.LVL111
 3171 0bee 2A110000 		.4byte	0x112a
 3172 0bf2 1C       		.uleb128 0x1c
 3173 0bf3 01       		.uleb128 0x1
 3174 0bf4 50       		.byte	0x50
 3175 0bf5 0C       		.uleb128 0xc
 3176 0bf6 74       		.byte	0x74
 3177 0bf7 00       		.sleb128 0
 3178 0bf8 33       		.byte	0x33
 3179 0bf9 24       		.byte	0x24
 3180 0bfa 74       		.byte	0x74
 3181 0bfb 00       		.sleb128 0
 3182 0bfc 1C       		.byte	0x1c
 3183 0bfd 32       		.byte	0x32
 3184 0bfe 24       		.byte	0x24
 3185 0bff 76       		.byte	0x76
 3186 0c00 00       		.sleb128 0
 3187 0c01 22       		.byte	0x22
 3188 0c02 00       		.byte	0
 3189 0c03 00       		.byte	0
 3190 0c04 1A       		.uleb128 0x1a
 3191 0c05 BA050000 		.4byte	.LASF149
 3192 0c09 01       		.byte	0x1
 3193 0c0a 580A     		.2byte	0xa58
 3194 0c0c 83000000 		.4byte	0x83
 3195 0c10 00000000 		.4byte	.LFB23
 3196 0c14 10000000 		.4byte	.LFE23-.LFB23
 3197 0c18 01       		.uleb128 0x1
 3198 0c19 9C       		.byte	0x9c
 3199 0c1a 4B0C0000 		.4byte	0xc4b
 3200 0c1e 15       		.uleb128 0x15
 3201 0c1f D80C0000 		.4byte	.LASF118
 3202 0c23 01       		.byte	0x1
 3203 0c24 580A     		.2byte	0xa58
 3204 0c26 83000000 		.4byte	0x83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 111


 3205 0c2a 6C050000 		.4byte	.LLST37
 3206 0c2e 22       		.uleb128 0x22
 3207 0c2f 730A0000 		.4byte	.LASF150
 3208 0c33 01       		.byte	0x1
 3209 0c34 5A0A     		.2byte	0xa5a
 3210 0c36 83000000 		.4byte	0x83
 3211 0c3a 01       		.uleb128 0x1
 3212 0c3b 50       		.byte	0x50
 3213 0c3c 22       		.uleb128 0x22
 3214 0c3d DD020000 		.4byte	.LASF151
 3215 0c41 01       		.byte	0x1
 3216 0c42 5E0A     		.2byte	0xa5e
 3217 0c44 4B0C0000 		.4byte	0xc4b
 3218 0c48 01       		.uleb128 0x1
 3219 0c49 53       		.byte	0x53
 3220 0c4a 00       		.byte	0
 3221 0c4b 06       		.uleb128 0x6
 3222 0c4c 04       		.byte	0x4
 3223 0c4d D1020000 		.4byte	0x2d1
 3224 0c51 1D       		.uleb128 0x1d
 3225 0c52 EC080000 		.4byte	.LASF152
 3226 0c56 01       		.byte	0x1
 3227 0c57 820A     		.2byte	0xa82
 3228 0c59 00000000 		.4byte	.LFB24
 3229 0c5d 10000000 		.4byte	.LFE24-.LFB24
 3230 0c61 01       		.uleb128 0x1
 3231 0c62 9C       		.byte	0x9c
 3232 0c63 940C0000 		.4byte	0xc94
 3233 0c67 15       		.uleb128 0x15
 3234 0c68 D80C0000 		.4byte	.LASF118
 3235 0c6c 01       		.byte	0x1
 3236 0c6d 820A     		.2byte	0xa82
 3237 0c6f 83000000 		.4byte	0x83
 3238 0c73 8D050000 		.4byte	.LLST38
 3239 0c77 23       		.uleb128 0x23
 3240 0c78 6B060000 		.4byte	.LASF153
 3241 0c7c 01       		.byte	0x1
 3242 0c7d 820A     		.2byte	0xa82
 3243 0c7f 83000000 		.4byte	0x83
 3244 0c83 01       		.uleb128 0x1
 3245 0c84 51       		.byte	0x51
 3246 0c85 22       		.uleb128 0x22
 3247 0c86 DD020000 		.4byte	.LASF151
 3248 0c8a 01       		.byte	0x1
 3249 0c8b 860A     		.2byte	0xa86
 3250 0c8d 4B0C0000 		.4byte	0xc4b
 3251 0c91 01       		.uleb128 0x1
 3252 0c92 53       		.byte	0x53
 3253 0c93 00       		.byte	0
 3254 0c94 1A       		.uleb128 0x1a
 3255 0c95 F4020000 		.4byte	.LASF154
 3256 0c99 01       		.byte	0x1
 3257 0c9a D60A     		.2byte	0xad6
 3258 0c9c 6B000000 		.4byte	0x6b
 3259 0ca0 00000000 		.4byte	.LFB25
 3260 0ca4 24000000 		.4byte	.LFE25-.LFB25
 3261 0ca8 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 112


 3262 0ca9 9C       		.byte	0x9c
 3263 0caa EA0C0000 		.4byte	0xcea
 3264 0cae 15       		.uleb128 0x15
 3265 0caf 860C0000 		.4byte	.LASF109
 3266 0cb3 01       		.byte	0x1
 3267 0cb4 D60A     		.2byte	0xad6
 3268 0cb6 83000000 		.4byte	0x83
 3269 0cba AE050000 		.4byte	.LLST39
 3270 0cbe 23       		.uleb128 0x23
 3271 0cbf 3C060000 		.4byte	.LASF45
 3272 0cc3 01       		.byte	0x1
 3273 0cc4 D60A     		.2byte	0xad6
 3274 0cc6 83000000 		.4byte	0x83
 3275 0cca 01       		.uleb128 0x1
 3276 0ccb 51       		.byte	0x51
 3277 0ccc 16       		.uleb128 0x16
 3278 0ccd 330A0000 		.4byte	.LASF155
 3279 0cd1 01       		.byte	0x1
 3280 0cd2 D80A     		.2byte	0xad8
 3281 0cd4 83000000 		.4byte	0x83
 3282 0cd8 E8050000 		.4byte	.LLST40
 3283 0cdc 1E       		.uleb128 0x1e
 3284 0cdd 940C0000 		.4byte	.LASF156
 3285 0ce1 01       		.byte	0x1
 3286 0ce2 D90A     		.2byte	0xad9
 3287 0ce4 83000000 		.4byte	0x83
 3288 0ce8 01       		.byte	0x1
 3289 0ce9 00       		.byte	0
 3290 0cea 17       		.uleb128 0x17
 3291 0ceb 4D010000 		.4byte	.LASF158
 3292 0cef 01       		.byte	0x1
 3293 0cf0 BE08     		.2byte	0x8be
 3294 0cf2 00000000 		.4byte	.LFB19
 3295 0cf6 3A000000 		.4byte	.LFE19-.LFB19
 3296 0cfa 01       		.uleb128 0x1
 3297 0cfb 9C       		.byte	0x9c
 3298 0cfc CF0D0000 		.4byte	0xdcf
 3299 0d00 15       		.uleb128 0x15
 3300 0d01 FF070000 		.4byte	.LASF124
 3301 0d05 01       		.byte	0x1
 3302 0d06 BE08     		.2byte	0x8be
 3303 0d08 83000000 		.4byte	0x83
 3304 0d0c FB050000 		.4byte	.LLST41
 3305 0d10 15       		.uleb128 0x15
 3306 0d11 DD020000 		.4byte	.LASF151
 3307 0d15 01       		.byte	0x1
 3308 0d16 BE08     		.2byte	0x8be
 3309 0d18 4B0C0000 		.4byte	0xc4b
 3310 0d1c 1C060000 		.4byte	.LLST42
 3311 0d20 16       		.uleb128 0x16
 3312 0d21 56040000 		.4byte	.LASF113
 3313 0d25 01       		.byte	0x1
 3314 0d26 C008     		.2byte	0x8c0
 3315 0d28 6B000000 		.4byte	0x6b
 3316 0d2c 48060000 		.4byte	.LLST43
 3317 0d30 16       		.uleb128 0x16
 3318 0d31 D2010000 		.4byte	.LASF114
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 113


 3319 0d35 01       		.byte	0x1
 3320 0d36 C108     		.2byte	0x8c1
 3321 0d38 6B000000 		.4byte	0x6b
 3322 0d3c 66060000 		.4byte	.LLST44
 3323 0d40 16       		.uleb128 0x16
 3324 0d41 2D060000 		.4byte	.LASF110
 3325 0d45 01       		.byte	0x1
 3326 0d46 C508     		.2byte	0x8c5
 3327 0d48 83000000 		.4byte	0x83
 3328 0d4c 79060000 		.4byte	.LLST45
 3329 0d50 16       		.uleb128 0x16
 3330 0d51 860C0000 		.4byte	.LASF109
 3331 0d55 01       		.byte	0x1
 3332 0d56 C708     		.2byte	0x8c7
 3333 0d58 83000000 		.4byte	0x83
 3334 0d5c 97060000 		.4byte	.LLST46
 3335 0d60 1B       		.uleb128 0x1b
 3336 0d61 08000000 		.4byte	.LVL129
 3337 0d65 040C0000 		.4byte	0xc04
 3338 0d69 750D0000 		.4byte	0xd75
 3339 0d6d 1C       		.uleb128 0x1c
 3340 0d6e 01       		.uleb128 0x1
 3341 0d6f 50       		.byte	0x50
 3342 0d70 03       		.uleb128 0x3
 3343 0d71 F3       		.byte	0xf3
 3344 0d72 01       		.uleb128 0x1
 3345 0d73 50       		.byte	0x50
 3346 0d74 00       		.byte	0
 3347 0d75 1B       		.uleb128 0x1b
 3348 0d76 12000000 		.4byte	.LVL131
 3349 0d7a 36110000 		.4byte	0x1136
 3350 0d7e 8E0D0000 		.4byte	0xd8e
 3351 0d82 1C       		.uleb128 0x1c
 3352 0d83 01       		.uleb128 0x1
 3353 0d84 50       		.byte	0x50
 3354 0d85 02       		.uleb128 0x2
 3355 0d86 75       		.byte	0x75
 3356 0d87 00       		.sleb128 0
 3357 0d88 1C       		.uleb128 0x1c
 3358 0d89 01       		.uleb128 0x1
 3359 0d8a 52       		.byte	0x52
 3360 0d8b 01       		.uleb128 0x1
 3361 0d8c 30       		.byte	0x30
 3362 0d8d 00       		.byte	0
 3363 0d8e 1B       		.uleb128 0x1b
 3364 0d8f 1A000000 		.4byte	.LVL134
 3365 0d93 E2060000 		.4byte	0x6e2
 3366 0d97 A20D0000 		.4byte	0xda2
 3367 0d9b 1C       		.uleb128 0x1c
 3368 0d9c 01       		.uleb128 0x1
 3369 0d9d 50       		.byte	0x50
 3370 0d9e 02       		.uleb128 0x2
 3371 0d9f 75       		.byte	0x75
 3372 0da0 00       		.sleb128 0
 3373 0da1 00       		.byte	0
 3374 0da2 1B       		.uleb128 0x1b
 3375 0da3 26000000 		.4byte	.LVL137
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 114


 3376 0da7 940C0000 		.4byte	0xc94
 3377 0dab B80D0000 		.4byte	0xdb8
 3378 0daf 1C       		.uleb128 0x1c
 3379 0db0 01       		.uleb128 0x1
 3380 0db1 50       		.byte	0x50
 3381 0db2 04       		.uleb128 0x4
 3382 0db3 75       		.byte	0x75
 3383 0db4 00       		.sleb128 0
 3384 0db5 31       		.byte	0x31
 3385 0db6 24       		.byte	0x24
 3386 0db7 00       		.byte	0
 3387 0db8 1F       		.uleb128 0x1f
 3388 0db9 30000000 		.4byte	.LVL139
 3389 0dbd 2D070000 		.4byte	0x72d
 3390 0dc1 1C       		.uleb128 0x1c
 3391 0dc2 01       		.uleb128 0x1
 3392 0dc3 50       		.byte	0x50
 3393 0dc4 02       		.uleb128 0x2
 3394 0dc5 75       		.byte	0x75
 3395 0dc6 00       		.sleb128 0
 3396 0dc7 1C       		.uleb128 0x1c
 3397 0dc8 01       		.uleb128 0x1
 3398 0dc9 51       		.byte	0x51
 3399 0dca 02       		.uleb128 0x2
 3400 0dcb 74       		.byte	0x74
 3401 0dcc 00       		.sleb128 0
 3402 0dcd 00       		.byte	0
 3403 0dce 00       		.byte	0
 3404 0dcf 24       		.uleb128 0x24
 3405 0dd0 D8030000 		.4byte	.LASF159
 3406 0dd4 01       		.byte	0x1
 3407 0dd5 2706     		.2byte	0x627
 3408 0dd7 A4000000 		.4byte	0xa4
 3409 0ddb 00000000 		.4byte	.LFB17
 3410 0ddf 44010000 		.4byte	.LFE17-.LFB17
 3411 0de3 01       		.uleb128 0x1
 3412 0de4 9C       		.byte	0x9c
 3413 0de5 CD0E0000 		.4byte	0xecd
 3414 0de9 16       		.uleb128 0x16
 3415 0dea E5020000 		.4byte	.LASF160
 3416 0dee 01       		.byte	0x1
 3417 0def 2906     		.2byte	0x629
 3418 0df1 A4000000 		.4byte	0xa4
 3419 0df5 B5060000 		.4byte	.LLST47
 3420 0df9 16       		.uleb128 0x16
 3421 0dfa FF070000 		.4byte	.LASF124
 3422 0dfe 01       		.byte	0x1
 3423 0dff 2A06     		.2byte	0x62a
 3424 0e01 83000000 		.4byte	0x83
 3425 0e05 EA060000 		.4byte	.LLST48
 3426 0e09 25       		.uleb128 0x25
 3427 0e0a 637000   		.ascii	"cp\000"
 3428 0e0d 01       		.byte	0x1
 3429 0e0e 2C06     		.2byte	0x62c
 3430 0e10 83000000 		.4byte	0x83
 3431 0e14 1F070000 		.4byte	.LLST49
 3432 0e18 22       		.uleb128 0x22
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 115


 3433 0e19 CC020000 		.4byte	.LASF161
 3434 0e1d 01       		.byte	0x1
 3435 0e1e 3106     		.2byte	0x631
 3436 0e20 48050000 		.4byte	0x548
 3437 0e24 02       		.uleb128 0x2
 3438 0e25 91       		.byte	0x91
 3439 0e26 6C       		.sleb128 -20
 3440 0e27 16       		.uleb128 0x16
 3441 0e28 DD020000 		.4byte	.LASF151
 3442 0e2c 01       		.byte	0x1
 3443 0e2d 3206     		.2byte	0x632
 3444 0e2f 4B0C0000 		.4byte	0xc4b
 3445 0e33 3E070000 		.4byte	.LLST50
 3446 0e37 22       		.uleb128 0x22
 3447 0e38 770C0000 		.4byte	.LASF162
 3448 0e3c 01       		.byte	0x1
 3449 0e3d 3306     		.2byte	0x633
 3450 0e3f 78010000 		.4byte	0x178
 3451 0e43 02       		.uleb128 0x2
 3452 0e44 91       		.byte	0x91
 3453 0e45 50       		.sleb128 -48
 3454 0e46 1B       		.uleb128 0x1b
 3455 0e47 4E000000 		.4byte	.LVL150
 3456 0e4b 1E110000 		.4byte	0x111e
 3457 0e4f 600E0000 		.4byte	0xe60
 3458 0e53 1C       		.uleb128 0x1c
 3459 0e54 01       		.uleb128 0x1
 3460 0e55 50       		.byte	0x50
 3461 0e56 02       		.uleb128 0x2
 3462 0e57 76       		.byte	0x76
 3463 0e58 00       		.sleb128 0
 3464 0e59 1C       		.uleb128 0x1c
 3465 0e5a 01       		.uleb128 0x1
 3466 0e5b 51       		.byte	0x51
 3467 0e5c 02       		.uleb128 0x2
 3468 0e5d 08       		.byte	0x8
 3469 0e5e 55       		.byte	0x55
 3470 0e5f 00       		.byte	0
 3471 0e60 1B       		.uleb128 0x1b
 3472 0e61 76000000 		.4byte	.LVL152
 3473 0e65 42110000 		.4byte	0x1142
 3474 0e69 740E0000 		.4byte	0xe74
 3475 0e6d 1C       		.uleb128 0x1c
 3476 0e6e 01       		.uleb128 0x1
 3477 0e6f 50       		.byte	0x50
 3478 0e70 02       		.uleb128 0x2
 3479 0e71 91       		.byte	0x91
 3480 0e72 50       		.sleb128 -48
 3481 0e73 00       		.byte	0
 3482 0e74 1B       		.uleb128 0x1b
 3483 0e75 BC000000 		.4byte	.LVL159
 3484 0e79 1E110000 		.4byte	0x111e
 3485 0e7d 8E0E0000 		.4byte	0xe8e
 3486 0e81 1C       		.uleb128 0x1c
 3487 0e82 01       		.uleb128 0x1
 3488 0e83 50       		.byte	0x50
 3489 0e84 02       		.uleb128 0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 116


 3490 0e85 74       		.byte	0x74
 3491 0e86 00       		.sleb128 0
 3492 0e87 1C       		.uleb128 0x1c
 3493 0e88 01       		.uleb128 0x1
 3494 0e89 51       		.byte	0x51
 3495 0e8a 02       		.uleb128 0x2
 3496 0e8b 08       		.byte	0x8
 3497 0e8c 55       		.byte	0x55
 3498 0e8d 00       		.byte	0
 3499 0e8e 1B       		.uleb128 0x1b
 3500 0e8f EC000000 		.4byte	.LVL161
 3501 0e93 4D110000 		.4byte	0x114d
 3502 0e97 A20E0000 		.4byte	0xea2
 3503 0e9b 1C       		.uleb128 0x1c
 3504 0e9c 01       		.uleb128 0x1
 3505 0e9d 50       		.byte	0x50
 3506 0e9e 02       		.uleb128 0x2
 3507 0e9f 91       		.byte	0x91
 3508 0ea0 50       		.sleb128 -48
 3509 0ea1 00       		.byte	0
 3510 0ea2 1B       		.uleb128 0x1b
 3511 0ea3 06010000 		.4byte	.LVL166
 3512 0ea7 EA0C0000 		.4byte	0xcea
 3513 0eab B60E0000 		.4byte	0xeb6
 3514 0eaf 1C       		.uleb128 0x1c
 3515 0eb0 01       		.uleb128 0x1
 3516 0eb1 50       		.byte	0x50
 3517 0eb2 02       		.uleb128 0x2
 3518 0eb3 74       		.byte	0x74
 3519 0eb4 00       		.sleb128 0
 3520 0eb5 00       		.byte	0
 3521 0eb6 1F       		.uleb128 0x1f
 3522 0eb7 0E010000 		.4byte	.LVL167
 3523 0ebb 1E110000 		.4byte	0x111e
 3524 0ebf 1C       		.uleb128 0x1c
 3525 0ec0 01       		.uleb128 0x1
 3526 0ec1 50       		.byte	0x50
 3527 0ec2 02       		.uleb128 0x2
 3528 0ec3 74       		.byte	0x74
 3529 0ec4 00       		.sleb128 0
 3530 0ec5 1C       		.uleb128 0x1c
 3531 0ec6 01       		.uleb128 0x1
 3532 0ec7 51       		.byte	0x51
 3533 0ec8 02       		.uleb128 0x2
 3534 0ec9 08       		.byte	0x8
 3535 0eca 55       		.byte	0x55
 3536 0ecb 00       		.byte	0
 3537 0ecc 00       		.byte	0
 3538 0ecd 1D       		.uleb128 0x1d
 3539 0ece 54020000 		.4byte	.LASF163
 3540 0ed2 01       		.byte	0x1
 3541 0ed3 8908     		.2byte	0x889
 3542 0ed5 00000000 		.4byte	.LFB18
 3543 0ed9 20000000 		.4byte	.LFE18-.LFB18
 3544 0edd 01       		.uleb128 0x1
 3545 0ede 9C       		.byte	0x9c
 3546 0edf 140F0000 		.4byte	0xf14
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 117


 3547 0ee3 16       		.uleb128 0x16
 3548 0ee4 FF070000 		.4byte	.LASF124
 3549 0ee8 01       		.byte	0x1
 3550 0ee9 8B08     		.2byte	0x88b
 3551 0eeb 83000000 		.4byte	0x83
 3552 0eef 67070000 		.4byte	.LLST51
 3553 0ef3 16       		.uleb128 0x16
 3554 0ef4 DD020000 		.4byte	.LASF151
 3555 0ef8 01       		.byte	0x1
 3556 0ef9 8C08     		.2byte	0x88c
 3557 0efb 4B0C0000 		.4byte	0xc4b
 3558 0eff 86070000 		.4byte	.LLST52
 3559 0f03 1F       		.uleb128 0x1f
 3560 0f04 14000000 		.4byte	.LVL175
 3561 0f08 EA0C0000 		.4byte	0xcea
 3562 0f0c 1C       		.uleb128 0x1c
 3563 0f0d 01       		.uleb128 0x1
 3564 0f0e 50       		.byte	0x50
 3565 0f0f 02       		.uleb128 0x2
 3566 0f10 74       		.byte	0x74
 3567 0f11 00       		.sleb128 0
 3568 0f12 00       		.byte	0
 3569 0f13 00       		.byte	0
 3570 0f14 1A       		.uleb128 0x1a
 3571 0f15 21010000 		.4byte	.LASF164
 3572 0f19 01       		.byte	0x1
 3573 0f1a 0402     		.2byte	0x204
 3574 0f1c A4000000 		.4byte	0xa4
 3575 0f20 00000000 		.4byte	.LFB5
 3576 0f24 14000000 		.4byte	.LFE5-.LFB5
 3577 0f28 01       		.uleb128 0x1
 3578 0f29 9C       		.byte	0x9c
 3579 0f2a 5D0F0000 		.4byte	0xf5d
 3580 0f2e 1E       		.uleb128 0x1e
 3581 0f2f 8B010000 		.4byte	.LASF165
 3582 0f33 01       		.byte	0x1
 3583 0f34 0602     		.2byte	0x206
 3584 0f36 A4000000 		.4byte	0xa4
 3585 0f3a 00       		.byte	0
 3586 0f3b 18       		.uleb128 0x18
 3587 0f3c 06000000 		.4byte	.LVL179
 3588 0f40 CD0E0000 		.4byte	0xecd
 3589 0f44 18       		.uleb128 0x18
 3590 0f45 0A000000 		.4byte	.LVL180
 3591 0f49 BB090000 		.4byte	0x9bb
 3592 0f4d 1F       		.uleb128 0x1f
 3593 0f4e 10000000 		.4byte	.LVL181
 3594 0f52 82090000 		.4byte	0x982
 3595 0f56 1C       		.uleb128 0x1c
 3596 0f57 01       		.uleb128 0x1
 3597 0f58 50       		.byte	0x50
 3598 0f59 01       		.uleb128 0x1
 3599 0f5a 31       		.byte	0x31
 3600 0f5b 00       		.byte	0
 3601 0f5c 00       		.byte	0
 3602 0f5d 1D       		.uleb128 0x1d
 3603 0f5e 28000000 		.4byte	.LASF166
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 118


 3604 0f62 01       		.byte	0x1
 3605 0f63 060B     		.2byte	0xb06
 3606 0f65 00000000 		.4byte	.LFB26
 3607 0f69 60000000 		.4byte	.LFE26-.LFB26
 3608 0f6d 01       		.uleb128 0x1
 3609 0f6e 9C       		.byte	0x9c
 3610 0f6f EF0F0000 		.4byte	0xfef
 3611 0f73 16       		.uleb128 0x16
 3612 0f74 E80B0000 		.4byte	.LASF117
 3613 0f78 01       		.byte	0x1
 3614 0f79 080B     		.2byte	0xb08
 3615 0f7b 83000000 		.4byte	0x83
 3616 0f7f 99070000 		.4byte	.LLST53
 3617 0f83 16       		.uleb128 0x16
 3618 0f84 B1010000 		.4byte	.LASF129
 3619 0f88 01       		.byte	0x1
 3620 0f89 090B     		.2byte	0xb09
 3621 0f8b 6B000000 		.4byte	0x6b
 3622 0f8f CD070000 		.4byte	.LLST54
 3623 0f93 18       		.uleb128 0x18
 3624 0f94 06000000 		.4byte	.LVL182
 3625 0f98 E5100000 		.4byte	0x10e5
 3626 0f9c 18       		.uleb128 0x18
 3627 0f9d 14000000 		.4byte	.LVL185
 3628 0fa1 F0100000 		.4byte	0x10f0
 3629 0fa5 18       		.uleb128 0x18
 3630 0fa6 18000000 		.4byte	.LVL186
 3631 0faa E5100000 		.4byte	0x10e5
 3632 0fae 18       		.uleb128 0x18
 3633 0faf 26000000 		.4byte	.LVL189
 3634 0fb3 F0100000 		.4byte	0x10f0
 3635 0fb7 18       		.uleb128 0x18
 3636 0fb8 2A000000 		.4byte	.LVL190
 3637 0fbc E5100000 		.4byte	0x10e5
 3638 0fc0 18       		.uleb128 0x18
 3639 0fc1 3C000000 		.4byte	.LVL194
 3640 0fc5 F0100000 		.4byte	0x10f0
 3641 0fc9 1B       		.uleb128 0x1b
 3642 0fca 42000000 		.4byte	.LVL195
 3643 0fce 58110000 		.4byte	0x1158
 3644 0fd2 DC0F0000 		.4byte	0xfdc
 3645 0fd6 1C       		.uleb128 0x1c
 3646 0fd7 01       		.uleb128 0x1
 3647 0fd8 50       		.byte	0x50
 3648 0fd9 01       		.uleb128 0x1
 3649 0fda 31       		.byte	0x31
 3650 0fdb 00       		.byte	0
 3651 0fdc 18       		.uleb128 0x18
 3652 0fdd 46000000 		.4byte	.LVL196
 3653 0fe1 E5100000 		.4byte	0x10e5
 3654 0fe5 18       		.uleb128 0x18
 3655 0fe6 50000000 		.4byte	.LVL199
 3656 0fea F0100000 		.4byte	0x10f0
 3657 0fee 00       		.byte	0
 3658 0fef 26       		.uleb128 0x26
 3659 0ff0 12080000 		.4byte	.LASF167
 3660 0ff4 05       		.byte	0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 119


 3661 0ff5 2B04     		.2byte	0x42b
 3662 0ff7 58050000 		.4byte	0x558
 3663 0ffb 26       		.uleb128 0x26
 3664 0ffc 42090000 		.4byte	.LASF168
 3665 1000 05       		.byte	0x5
 3666 1001 2C04     		.2byte	0x42c
 3667 1003 07100000 		.4byte	0x1007
 3668 1007 20       		.uleb128 0x20
 3669 1008 CF060000 		.4byte	0x6cf
 3670 100c 0D       		.uleb128 0xd
 3671 100d 7D090000 		.4byte	0x97d
 3672 1011 1C100000 		.4byte	0x101c
 3673 1015 0E       		.uleb128 0xe
 3674 1016 CA020000 		.4byte	0x2ca
 3675 101a 00       		.byte	0
 3676 101b 00       		.byte	0
 3677 101c 26       		.uleb128 0x26
 3678 101d 9F010000 		.4byte	.LASF169
 3679 1021 05       		.byte	0x5
 3680 1022 2D04     		.2byte	0x42d
 3681 1024 28100000 		.4byte	0x1028
 3682 1028 20       		.uleb128 0x20
 3683 1029 0C100000 		.4byte	0x100c
 3684 102d 27       		.uleb128 0x27
 3685 102e 010D0000 		.4byte	.LASF170
 3686 1032 01       		.byte	0x1
 3687 1033 BB       		.byte	0xbb
 3688 1034 B0000000 		.4byte	0xb0
 3689 1038 05       		.uleb128 0x5
 3690 1039 03       		.byte	0x3
 3691 103a 00000000 		.4byte	CapSense_1_widgetIndex
 3692 103e 27       		.uleb128 0x27
 3693 103f 020A0000 		.4byte	.LASF171
 3694 1043 01       		.byte	0x1
 3695 1044 BC       		.byte	0xbc
 3696 1045 B0000000 		.4byte	0xb0
 3697 1049 05       		.uleb128 0x5
 3698 104a 03       		.byte	0x3
 3699 104b 00000000 		.4byte	CapSense_1_sensorIndex
 3700 104f 27       		.uleb128 0x27
 3701 1050 10030000 		.4byte	.LASF172
 3702 1054 01       		.byte	0x1
 3703 1055 BD       		.byte	0xbd
 3704 1056 6B000000 		.4byte	0x6b
 3705 105a 05       		.uleb128 0x5
 3706 105b 03       		.byte	0x3
 3707 105c 00000000 		.4byte	CapSense_1_requestScanAllWidget
 3708 1060 27       		.uleb128 0x27
 3709 1061 B7000000 		.4byte	.LASF173
 3710 1065 01       		.byte	0x1
 3711 1066 C0       		.byte	0xc0
 3712 1067 8A060000 		.4byte	0x68a
 3713 106b 05       		.uleb128 0x5
 3714 106c 03       		.byte	0x3
 3715 106d 00000000 		.4byte	CapSense_1_curRamSnsPtr
 3716 1071 27       		.uleb128 0x27
 3717 1072 400B0000 		.4byte	.LASF174
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 120


 3718 1076 01       		.byte	0x1
 3719 1077 AE       		.byte	0xae
 3720 1078 16020000 		.4byte	0x216
 3721 107c 05       		.uleb128 0x5
 3722 107d 03       		.byte	0x3
 3723 107e 00000000 		.4byte	CapSense_1_currentSenseMethod
 3724 1082 27       		.uleb128 0x27
 3725 1083 7A020000 		.4byte	.LASF175
 3726 1087 01       		.byte	0x1
 3727 1088 B7       		.byte	0xb7
 3728 1089 93100000 		.4byte	0x1093
 3729 108d 05       		.uleb128 0x5
 3730 108e 03       		.byte	0x3
 3731 108f 00000000 		.4byte	CapSense_1_scanFreqIndex
 3732 1093 20       		.uleb128 0x20
 3733 1094 6B000000 		.4byte	0x6b
 3734 1098 27       		.uleb128 0x27
 3735 1099 74010000 		.4byte	.LASF176
 3736 109d 01       		.byte	0x1
 3737 109e CF       		.byte	0xcf
 3738 109f 77090000 		.4byte	0x977
 3739 10a3 05       		.uleb128 0x5
 3740 10a4 03       		.byte	0x3
 3741 10a5 00000000 		.4byte	CapSense_1_curSnsIOPtr
 3742 10a9 26       		.uleb128 0x26
 3743 10aa 99040000 		.4byte	.LASF177
 3744 10ae 06       		.byte	0x6
 3745 10af A501     		.2byte	0x1a5
 3746 10b1 6B000000 		.4byte	0x6b
 3747 10b5 26       		.uleb128 0x26
 3748 10b6 B5090000 		.4byte	.LASF178
 3749 10ba 06       		.byte	0x6
 3750 10bb A601     		.2byte	0x1a6
 3751 10bd 77000000 		.4byte	0x77
 3752 10c1 28       		.uleb128 0x28
 3753 10c2 970A0000 		.4byte	.LASF179
 3754 10c6 970A0000 		.4byte	.LASF179
 3755 10ca 06       		.byte	0x6
 3756 10cb D401     		.2byte	0x1d4
 3757 10cd 28       		.uleb128 0x28
 3758 10ce E8090000 		.4byte	.LASF180
 3759 10d2 E8090000 		.4byte	.LASF180
 3760 10d6 06       		.byte	0x6
 3761 10d7 B701     		.2byte	0x1b7
 3762 10d9 28       		.uleb128 0x28
 3763 10da DF000000 		.4byte	.LASF181
 3764 10de DF000000 		.4byte	.LASF181
 3765 10e2 06       		.byte	0x6
 3766 10e3 B901     		.2byte	0x1b9
 3767 10e5 29       		.uleb128 0x29
 3768 10e6 710B0000 		.4byte	.LASF182
 3769 10ea 710B0000 		.4byte	.LASF182
 3770 10ee 07       		.byte	0x7
 3771 10ef E5       		.byte	0xe5
 3772 10f0 29       		.uleb128 0x29
 3773 10f1 EB050000 		.4byte	.LASF183
 3774 10f5 EB050000 		.4byte	.LASF183
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 121


 3775 10f9 07       		.byte	0x7
 3776 10fa E6       		.byte	0xe6
 3777 10fb 28       		.uleb128 0x28
 3778 10fc DC010000 		.4byte	.LASF184
 3779 1100 DC010000 		.4byte	.LASF184
 3780 1104 06       		.byte	0x6
 3781 1105 C001     		.2byte	0x1c0
 3782 1107 28       		.uleb128 0x28
 3783 1108 93020000 		.4byte	.LASF185
 3784 110c 93020000 		.4byte	.LASF185
 3785 1110 06       		.byte	0x6
 3786 1111 D001     		.2byte	0x1d0
 3787 1113 29       		.uleb128 0x29
 3788 1114 BD040000 		.4byte	.LASF186
 3789 1118 BD040000 		.4byte	.LASF186
 3790 111c 08       		.byte	0x8
 3791 111d 18       		.byte	0x18
 3792 111e 28       		.uleb128 0x28
 3793 111f 8F090000 		.4byte	.LASF187
 3794 1123 8F090000 		.4byte	.LASF187
 3795 1127 06       		.byte	0x6
 3796 1128 BD01     		.2byte	0x1bd
 3797 112a 28       		.uleb128 0x28
 3798 112b C6080000 		.4byte	.LASF188
 3799 112f C6080000 		.4byte	.LASF188
 3800 1133 06       		.byte	0x6
 3801 1134 C101     		.2byte	0x1c1
 3802 1136 28       		.uleb128 0x28
 3803 1137 4E000000 		.4byte	.LASF189
 3804 113b 4E000000 		.4byte	.LASF189
 3805 113f 06       		.byte	0x6
 3806 1140 DB01     		.2byte	0x1db
 3807 1142 29       		.uleb128 0x29
 3808 1143 190A0000 		.4byte	.LASF190
 3809 1147 190A0000 		.4byte	.LASF190
 3810 114b 04       		.byte	0x4
 3811 114c B0       		.byte	0xb0
 3812 114d 29       		.uleb128 0x29
 3813 114e 19020000 		.4byte	.LASF191
 3814 1152 19020000 		.4byte	.LASF191
 3815 1156 04       		.byte	0x4
 3816 1157 B1       		.byte	0xb1
 3817 1158 29       		.uleb128 0x29
 3818 1159 05040000 		.4byte	.LASF192
 3819 115d 05040000 		.4byte	.LASF192
 3820 1161 07       		.byte	0x7
 3821 1162 DA       		.byte	0xda
 3822 1163 00       		.byte	0
 3823              		.section	.debug_abbrev,"",%progbits
 3824              	.Ldebug_abbrev0:
 3825 0000 01       		.uleb128 0x1
 3826 0001 11       		.uleb128 0x11
 3827 0002 01       		.byte	0x1
 3828 0003 25       		.uleb128 0x25
 3829 0004 0E       		.uleb128 0xe
 3830 0005 13       		.uleb128 0x13
 3831 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 122


 3832 0007 03       		.uleb128 0x3
 3833 0008 0E       		.uleb128 0xe
 3834 0009 1B       		.uleb128 0x1b
 3835 000a 0E       		.uleb128 0xe
 3836 000b 55       		.uleb128 0x55
 3837 000c 17       		.uleb128 0x17
 3838 000d 11       		.uleb128 0x11
 3839 000e 01       		.uleb128 0x1
 3840 000f 10       		.uleb128 0x10
 3841 0010 17       		.uleb128 0x17
 3842 0011 00       		.byte	0
 3843 0012 00       		.byte	0
 3844 0013 02       		.uleb128 0x2
 3845 0014 24       		.uleb128 0x24
 3846 0015 00       		.byte	0
 3847 0016 0B       		.uleb128 0xb
 3848 0017 0B       		.uleb128 0xb
 3849 0018 3E       		.uleb128 0x3e
 3850 0019 0B       		.uleb128 0xb
 3851 001a 03       		.uleb128 0x3
 3852 001b 0E       		.uleb128 0xe
 3853 001c 00       		.byte	0
 3854 001d 00       		.byte	0
 3855 001e 03       		.uleb128 0x3
 3856 001f 24       		.uleb128 0x24
 3857 0020 00       		.byte	0
 3858 0021 0B       		.uleb128 0xb
 3859 0022 0B       		.uleb128 0xb
 3860 0023 3E       		.uleb128 0x3e
 3861 0024 0B       		.uleb128 0xb
 3862 0025 03       		.uleb128 0x3
 3863 0026 08       		.uleb128 0x8
 3864 0027 00       		.byte	0
 3865 0028 00       		.byte	0
 3866 0029 04       		.uleb128 0x4
 3867 002a 16       		.uleb128 0x16
 3868 002b 00       		.byte	0
 3869 002c 03       		.uleb128 0x3
 3870 002d 0E       		.uleb128 0xe
 3871 002e 3A       		.uleb128 0x3a
 3872 002f 0B       		.uleb128 0xb
 3873 0030 3B       		.uleb128 0x3b
 3874 0031 05       		.uleb128 0x5
 3875 0032 49       		.uleb128 0x49
 3876 0033 13       		.uleb128 0x13
 3877 0034 00       		.byte	0
 3878 0035 00       		.byte	0
 3879 0036 05       		.uleb128 0x5
 3880 0037 35       		.uleb128 0x35
 3881 0038 00       		.byte	0
 3882 0039 49       		.uleb128 0x49
 3883 003a 13       		.uleb128 0x13
 3884 003b 00       		.byte	0
 3885 003c 00       		.byte	0
 3886 003d 06       		.uleb128 0x6
 3887 003e 0F       		.uleb128 0xf
 3888 003f 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 123


 3889 0040 0B       		.uleb128 0xb
 3890 0041 0B       		.uleb128 0xb
 3891 0042 49       		.uleb128 0x49
 3892 0043 13       		.uleb128 0x13
 3893 0044 00       		.byte	0
 3894 0045 00       		.byte	0
 3895 0046 07       		.uleb128 0x7
 3896 0047 15       		.uleb128 0x15
 3897 0048 00       		.byte	0
 3898 0049 27       		.uleb128 0x27
 3899 004a 19       		.uleb128 0x19
 3900 004b 00       		.byte	0
 3901 004c 00       		.byte	0
 3902 004d 08       		.uleb128 0x8
 3903 004e 13       		.uleb128 0x13
 3904 004f 01       		.byte	0x1
 3905 0050 0B       		.uleb128 0xb
 3906 0051 0B       		.uleb128 0xb
 3907 0052 3A       		.uleb128 0x3a
 3908 0053 0B       		.uleb128 0xb
 3909 0054 3B       		.uleb128 0x3b
 3910 0055 0B       		.uleb128 0xb
 3911 0056 01       		.uleb128 0x1
 3912 0057 13       		.uleb128 0x13
 3913 0058 00       		.byte	0
 3914 0059 00       		.byte	0
 3915 005a 09       		.uleb128 0x9
 3916 005b 0D       		.uleb128 0xd
 3917 005c 00       		.byte	0
 3918 005d 03       		.uleb128 0x3
 3919 005e 0E       		.uleb128 0xe
 3920 005f 3A       		.uleb128 0x3a
 3921 0060 0B       		.uleb128 0xb
 3922 0061 3B       		.uleb128 0x3b
 3923 0062 0B       		.uleb128 0xb
 3924 0063 49       		.uleb128 0x49
 3925 0064 13       		.uleb128 0x13
 3926 0065 38       		.uleb128 0x38
 3927 0066 0B       		.uleb128 0xb
 3928 0067 00       		.byte	0
 3929 0068 00       		.byte	0
 3930 0069 0A       		.uleb128 0xa
 3931 006a 16       		.uleb128 0x16
 3932 006b 00       		.byte	0
 3933 006c 03       		.uleb128 0x3
 3934 006d 0E       		.uleb128 0xe
 3935 006e 3A       		.uleb128 0x3a
 3936 006f 0B       		.uleb128 0xb
 3937 0070 3B       		.uleb128 0x3b
 3938 0071 0B       		.uleb128 0xb
 3939 0072 49       		.uleb128 0x49
 3940 0073 13       		.uleb128 0x13
 3941 0074 00       		.byte	0
 3942 0075 00       		.byte	0
 3943 0076 0B       		.uleb128 0xb
 3944 0077 04       		.uleb128 0x4
 3945 0078 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 124


 3946 0079 0B       		.uleb128 0xb
 3947 007a 0B       		.uleb128 0xb
 3948 007b 49       		.uleb128 0x49
 3949 007c 13       		.uleb128 0x13
 3950 007d 3A       		.uleb128 0x3a
 3951 007e 0B       		.uleb128 0xb
 3952 007f 3B       		.uleb128 0x3b
 3953 0080 0B       		.uleb128 0xb
 3954 0081 01       		.uleb128 0x1
 3955 0082 13       		.uleb128 0x13
 3956 0083 00       		.byte	0
 3957 0084 00       		.byte	0
 3958 0085 0C       		.uleb128 0xc
 3959 0086 28       		.uleb128 0x28
 3960 0087 00       		.byte	0
 3961 0088 03       		.uleb128 0x3
 3962 0089 0E       		.uleb128 0xe
 3963 008a 1C       		.uleb128 0x1c
 3964 008b 0B       		.uleb128 0xb
 3965 008c 00       		.byte	0
 3966 008d 00       		.byte	0
 3967 008e 0D       		.uleb128 0xd
 3968 008f 01       		.uleb128 0x1
 3969 0090 01       		.byte	0x1
 3970 0091 49       		.uleb128 0x49
 3971 0092 13       		.uleb128 0x13
 3972 0093 01       		.uleb128 0x1
 3973 0094 13       		.uleb128 0x13
 3974 0095 00       		.byte	0
 3975 0096 00       		.byte	0
 3976 0097 0E       		.uleb128 0xe
 3977 0098 21       		.uleb128 0x21
 3978 0099 00       		.byte	0
 3979 009a 49       		.uleb128 0x49
 3980 009b 13       		.uleb128 0x13
 3981 009c 2F       		.uleb128 0x2f
 3982 009d 0B       		.uleb128 0xb
 3983 009e 00       		.byte	0
 3984 009f 00       		.byte	0
 3985 00a0 0F       		.uleb128 0xf
 3986 00a1 0D       		.uleb128 0xd
 3987 00a2 00       		.byte	0
 3988 00a3 03       		.uleb128 0x3
 3989 00a4 0E       		.uleb128 0xe
 3990 00a5 3A       		.uleb128 0x3a
 3991 00a6 0B       		.uleb128 0xb
 3992 00a7 3B       		.uleb128 0x3b
 3993 00a8 05       		.uleb128 0x5
 3994 00a9 49       		.uleb128 0x49
 3995 00aa 13       		.uleb128 0x13
 3996 00ab 38       		.uleb128 0x38
 3997 00ac 0B       		.uleb128 0xb
 3998 00ad 00       		.byte	0
 3999 00ae 00       		.byte	0
 4000 00af 10       		.uleb128 0x10
 4001 00b0 13       		.uleb128 0x13
 4002 00b1 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 125


 4003 00b2 0B       		.uleb128 0xb
 4004 00b3 0B       		.uleb128 0xb
 4005 00b4 3A       		.uleb128 0x3a
 4006 00b5 0B       		.uleb128 0xb
 4007 00b6 3B       		.uleb128 0x3b
 4008 00b7 05       		.uleb128 0x5
 4009 00b8 01       		.uleb128 0x1
 4010 00b9 13       		.uleb128 0x13
 4011 00ba 00       		.byte	0
 4012 00bb 00       		.byte	0
 4013 00bc 11       		.uleb128 0x11
 4014 00bd 0D       		.uleb128 0xd
 4015 00be 00       		.byte	0
 4016 00bf 03       		.uleb128 0x3
 4017 00c0 08       		.uleb128 0x8
 4018 00c1 3A       		.uleb128 0x3a
 4019 00c2 0B       		.uleb128 0xb
 4020 00c3 3B       		.uleb128 0x3b
 4021 00c4 05       		.uleb128 0x5
 4022 00c5 49       		.uleb128 0x49
 4023 00c6 13       		.uleb128 0x13
 4024 00c7 38       		.uleb128 0x38
 4025 00c8 0B       		.uleb128 0xb
 4026 00c9 00       		.byte	0
 4027 00ca 00       		.byte	0
 4028 00cb 12       		.uleb128 0x12
 4029 00cc 26       		.uleb128 0x26
 4030 00cd 00       		.byte	0
 4031 00ce 00       		.byte	0
 4032 00cf 00       		.byte	0
 4033 00d0 13       		.uleb128 0x13
 4034 00d1 0F       		.uleb128 0xf
 4035 00d2 00       		.byte	0
 4036 00d3 0B       		.uleb128 0xb
 4037 00d4 0B       		.uleb128 0xb
 4038 00d5 00       		.byte	0
 4039 00d6 00       		.byte	0
 4040 00d7 14       		.uleb128 0x14
 4041 00d8 2E       		.uleb128 0x2e
 4042 00d9 01       		.byte	0x1
 4043 00da 03       		.uleb128 0x3
 4044 00db 0E       		.uleb128 0xe
 4045 00dc 3A       		.uleb128 0x3a
 4046 00dd 0B       		.uleb128 0xb
 4047 00de 3B       		.uleb128 0x3b
 4048 00df 05       		.uleb128 0x5
 4049 00e0 27       		.uleb128 0x27
 4050 00e1 19       		.uleb128 0x19
 4051 00e2 49       		.uleb128 0x49
 4052 00e3 13       		.uleb128 0x13
 4053 00e4 11       		.uleb128 0x11
 4054 00e5 01       		.uleb128 0x1
 4055 00e6 12       		.uleb128 0x12
 4056 00e7 06       		.uleb128 0x6
 4057 00e8 40       		.uleb128 0x40
 4058 00e9 18       		.uleb128 0x18
 4059 00ea 9642     		.uleb128 0x2116
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 126


 4060 00ec 19       		.uleb128 0x19
 4061 00ed 01       		.uleb128 0x1
 4062 00ee 13       		.uleb128 0x13
 4063 00ef 00       		.byte	0
 4064 00f0 00       		.byte	0
 4065 00f1 15       		.uleb128 0x15
 4066 00f2 05       		.uleb128 0x5
 4067 00f3 00       		.byte	0
 4068 00f4 03       		.uleb128 0x3
 4069 00f5 0E       		.uleb128 0xe
 4070 00f6 3A       		.uleb128 0x3a
 4071 00f7 0B       		.uleb128 0xb
 4072 00f8 3B       		.uleb128 0x3b
 4073 00f9 05       		.uleb128 0x5
 4074 00fa 49       		.uleb128 0x49
 4075 00fb 13       		.uleb128 0x13
 4076 00fc 02       		.uleb128 0x2
 4077 00fd 17       		.uleb128 0x17
 4078 00fe 00       		.byte	0
 4079 00ff 00       		.byte	0
 4080 0100 16       		.uleb128 0x16
 4081 0101 34       		.uleb128 0x34
 4082 0102 00       		.byte	0
 4083 0103 03       		.uleb128 0x3
 4084 0104 0E       		.uleb128 0xe
 4085 0105 3A       		.uleb128 0x3a
 4086 0106 0B       		.uleb128 0xb
 4087 0107 3B       		.uleb128 0x3b
 4088 0108 05       		.uleb128 0x5
 4089 0109 49       		.uleb128 0x49
 4090 010a 13       		.uleb128 0x13
 4091 010b 02       		.uleb128 0x2
 4092 010c 17       		.uleb128 0x17
 4093 010d 00       		.byte	0
 4094 010e 00       		.byte	0
 4095 010f 17       		.uleb128 0x17
 4096 0110 2E       		.uleb128 0x2e
 4097 0111 01       		.byte	0x1
 4098 0112 03       		.uleb128 0x3
 4099 0113 0E       		.uleb128 0xe
 4100 0114 3A       		.uleb128 0x3a
 4101 0115 0B       		.uleb128 0xb
 4102 0116 3B       		.uleb128 0x3b
 4103 0117 05       		.uleb128 0x5
 4104 0118 27       		.uleb128 0x27
 4105 0119 19       		.uleb128 0x19
 4106 011a 11       		.uleb128 0x11
 4107 011b 01       		.uleb128 0x1
 4108 011c 12       		.uleb128 0x12
 4109 011d 06       		.uleb128 0x6
 4110 011e 40       		.uleb128 0x40
 4111 011f 18       		.uleb128 0x18
 4112 0120 9742     		.uleb128 0x2117
 4113 0122 19       		.uleb128 0x19
 4114 0123 01       		.uleb128 0x1
 4115 0124 13       		.uleb128 0x13
 4116 0125 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 127


 4117 0126 00       		.byte	0
 4118 0127 18       		.uleb128 0x18
 4119 0128 898201   		.uleb128 0x4109
 4120 012b 00       		.byte	0
 4121 012c 11       		.uleb128 0x11
 4122 012d 01       		.uleb128 0x1
 4123 012e 31       		.uleb128 0x31
 4124 012f 13       		.uleb128 0x13
 4125 0130 00       		.byte	0
 4126 0131 00       		.byte	0
 4127 0132 19       		.uleb128 0x19
 4128 0133 2E       		.uleb128 0x2e
 4129 0134 00       		.byte	0
 4130 0135 3F       		.uleb128 0x3f
 4131 0136 19       		.uleb128 0x19
 4132 0137 03       		.uleb128 0x3
 4133 0138 0E       		.uleb128 0xe
 4134 0139 3A       		.uleb128 0x3a
 4135 013a 0B       		.uleb128 0xb
 4136 013b 3B       		.uleb128 0x3b
 4137 013c 0B       		.uleb128 0xb
 4138 013d 27       		.uleb128 0x27
 4139 013e 19       		.uleb128 0x19
 4140 013f 49       		.uleb128 0x49
 4141 0140 13       		.uleb128 0x13
 4142 0141 11       		.uleb128 0x11
 4143 0142 01       		.uleb128 0x1
 4144 0143 12       		.uleb128 0x12
 4145 0144 06       		.uleb128 0x6
 4146 0145 40       		.uleb128 0x40
 4147 0146 18       		.uleb128 0x18
 4148 0147 9742     		.uleb128 0x2117
 4149 0149 19       		.uleb128 0x19
 4150 014a 00       		.byte	0
 4151 014b 00       		.byte	0
 4152 014c 1A       		.uleb128 0x1a
 4153 014d 2E       		.uleb128 0x2e
 4154 014e 01       		.byte	0x1
 4155 014f 3F       		.uleb128 0x3f
 4156 0150 19       		.uleb128 0x19
 4157 0151 03       		.uleb128 0x3
 4158 0152 0E       		.uleb128 0xe
 4159 0153 3A       		.uleb128 0x3a
 4160 0154 0B       		.uleb128 0xb
 4161 0155 3B       		.uleb128 0x3b
 4162 0156 05       		.uleb128 0x5
 4163 0157 27       		.uleb128 0x27
 4164 0158 19       		.uleb128 0x19
 4165 0159 49       		.uleb128 0x49
 4166 015a 13       		.uleb128 0x13
 4167 015b 11       		.uleb128 0x11
 4168 015c 01       		.uleb128 0x1
 4169 015d 12       		.uleb128 0x12
 4170 015e 06       		.uleb128 0x6
 4171 015f 40       		.uleb128 0x40
 4172 0160 18       		.uleb128 0x18
 4173 0161 9742     		.uleb128 0x2117
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 128


 4174 0163 19       		.uleb128 0x19
 4175 0164 01       		.uleb128 0x1
 4176 0165 13       		.uleb128 0x13
 4177 0166 00       		.byte	0
 4178 0167 00       		.byte	0
 4179 0168 1B       		.uleb128 0x1b
 4180 0169 898201   		.uleb128 0x4109
 4181 016c 01       		.byte	0x1
 4182 016d 11       		.uleb128 0x11
 4183 016e 01       		.uleb128 0x1
 4184 016f 31       		.uleb128 0x31
 4185 0170 13       		.uleb128 0x13
 4186 0171 01       		.uleb128 0x1
 4187 0172 13       		.uleb128 0x13
 4188 0173 00       		.byte	0
 4189 0174 00       		.byte	0
 4190 0175 1C       		.uleb128 0x1c
 4191 0176 8A8201   		.uleb128 0x410a
 4192 0179 00       		.byte	0
 4193 017a 02       		.uleb128 0x2
 4194 017b 18       		.uleb128 0x18
 4195 017c 9142     		.uleb128 0x2111
 4196 017e 18       		.uleb128 0x18
 4197 017f 00       		.byte	0
 4198 0180 00       		.byte	0
 4199 0181 1D       		.uleb128 0x1d
 4200 0182 2E       		.uleb128 0x2e
 4201 0183 01       		.byte	0x1
 4202 0184 3F       		.uleb128 0x3f
 4203 0185 19       		.uleb128 0x19
 4204 0186 03       		.uleb128 0x3
 4205 0187 0E       		.uleb128 0xe
 4206 0188 3A       		.uleb128 0x3a
 4207 0189 0B       		.uleb128 0xb
 4208 018a 3B       		.uleb128 0x3b
 4209 018b 05       		.uleb128 0x5
 4210 018c 27       		.uleb128 0x27
 4211 018d 19       		.uleb128 0x19
 4212 018e 11       		.uleb128 0x11
 4213 018f 01       		.uleb128 0x1
 4214 0190 12       		.uleb128 0x12
 4215 0191 06       		.uleb128 0x6
 4216 0192 40       		.uleb128 0x40
 4217 0193 18       		.uleb128 0x18
 4218 0194 9742     		.uleb128 0x2117
 4219 0196 19       		.uleb128 0x19
 4220 0197 01       		.uleb128 0x1
 4221 0198 13       		.uleb128 0x13
 4222 0199 00       		.byte	0
 4223 019a 00       		.byte	0
 4224 019b 1E       		.uleb128 0x1e
 4225 019c 34       		.uleb128 0x34
 4226 019d 00       		.byte	0
 4227 019e 03       		.uleb128 0x3
 4228 019f 0E       		.uleb128 0xe
 4229 01a0 3A       		.uleb128 0x3a
 4230 01a1 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 129


 4231 01a2 3B       		.uleb128 0x3b
 4232 01a3 05       		.uleb128 0x5
 4233 01a4 49       		.uleb128 0x49
 4234 01a5 13       		.uleb128 0x13
 4235 01a6 1C       		.uleb128 0x1c
 4236 01a7 0B       		.uleb128 0xb
 4237 01a8 00       		.byte	0
 4238 01a9 00       		.byte	0
 4239 01aa 1F       		.uleb128 0x1f
 4240 01ab 898201   		.uleb128 0x4109
 4241 01ae 01       		.byte	0x1
 4242 01af 11       		.uleb128 0x11
 4243 01b0 01       		.uleb128 0x1
 4244 01b1 31       		.uleb128 0x31
 4245 01b2 13       		.uleb128 0x13
 4246 01b3 00       		.byte	0
 4247 01b4 00       		.byte	0
 4248 01b5 20       		.uleb128 0x20
 4249 01b6 26       		.uleb128 0x26
 4250 01b7 00       		.byte	0
 4251 01b8 49       		.uleb128 0x49
 4252 01b9 13       		.uleb128 0x13
 4253 01ba 00       		.byte	0
 4254 01bb 00       		.byte	0
 4255 01bc 21       		.uleb128 0x21
 4256 01bd 2E       		.uleb128 0x2e
 4257 01be 00       		.byte	0
 4258 01bf 3F       		.uleb128 0x3f
 4259 01c0 19       		.uleb128 0x19
 4260 01c1 03       		.uleb128 0x3
 4261 01c2 0E       		.uleb128 0xe
 4262 01c3 3A       		.uleb128 0x3a
 4263 01c4 0B       		.uleb128 0xb
 4264 01c5 3B       		.uleb128 0x3b
 4265 01c6 05       		.uleb128 0x5
 4266 01c7 27       		.uleb128 0x27
 4267 01c8 19       		.uleb128 0x19
 4268 01c9 11       		.uleb128 0x11
 4269 01ca 01       		.uleb128 0x1
 4270 01cb 12       		.uleb128 0x12
 4271 01cc 06       		.uleb128 0x6
 4272 01cd 40       		.uleb128 0x40
 4273 01ce 18       		.uleb128 0x18
 4274 01cf 9742     		.uleb128 0x2117
 4275 01d1 19       		.uleb128 0x19
 4276 01d2 00       		.byte	0
 4277 01d3 00       		.byte	0
 4278 01d4 22       		.uleb128 0x22
 4279 01d5 34       		.uleb128 0x34
 4280 01d6 00       		.byte	0
 4281 01d7 03       		.uleb128 0x3
 4282 01d8 0E       		.uleb128 0xe
 4283 01d9 3A       		.uleb128 0x3a
 4284 01da 0B       		.uleb128 0xb
 4285 01db 3B       		.uleb128 0x3b
 4286 01dc 05       		.uleb128 0x5
 4287 01dd 49       		.uleb128 0x49
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 130


 4288 01de 13       		.uleb128 0x13
 4289 01df 02       		.uleb128 0x2
 4290 01e0 18       		.uleb128 0x18
 4291 01e1 00       		.byte	0
 4292 01e2 00       		.byte	0
 4293 01e3 23       		.uleb128 0x23
 4294 01e4 05       		.uleb128 0x5
 4295 01e5 00       		.byte	0
 4296 01e6 03       		.uleb128 0x3
 4297 01e7 0E       		.uleb128 0xe
 4298 01e8 3A       		.uleb128 0x3a
 4299 01e9 0B       		.uleb128 0xb
 4300 01ea 3B       		.uleb128 0x3b
 4301 01eb 05       		.uleb128 0x5
 4302 01ec 49       		.uleb128 0x49
 4303 01ed 13       		.uleb128 0x13
 4304 01ee 02       		.uleb128 0x2
 4305 01ef 18       		.uleb128 0x18
 4306 01f0 00       		.byte	0
 4307 01f1 00       		.byte	0
 4308 01f2 24       		.uleb128 0x24
 4309 01f3 2E       		.uleb128 0x2e
 4310 01f4 01       		.byte	0x1
 4311 01f5 3F       		.uleb128 0x3f
 4312 01f6 19       		.uleb128 0x19
 4313 01f7 03       		.uleb128 0x3
 4314 01f8 0E       		.uleb128 0xe
 4315 01f9 3A       		.uleb128 0x3a
 4316 01fa 0B       		.uleb128 0xb
 4317 01fb 3B       		.uleb128 0x3b
 4318 01fc 05       		.uleb128 0x5
 4319 01fd 27       		.uleb128 0x27
 4320 01fe 19       		.uleb128 0x19
 4321 01ff 49       		.uleb128 0x49
 4322 0200 13       		.uleb128 0x13
 4323 0201 11       		.uleb128 0x11
 4324 0202 01       		.uleb128 0x1
 4325 0203 12       		.uleb128 0x12
 4326 0204 06       		.uleb128 0x6
 4327 0205 40       		.uleb128 0x40
 4328 0206 18       		.uleb128 0x18
 4329 0207 9642     		.uleb128 0x2116
 4330 0209 19       		.uleb128 0x19
 4331 020a 01       		.uleb128 0x1
 4332 020b 13       		.uleb128 0x13
 4333 020c 00       		.byte	0
 4334 020d 00       		.byte	0
 4335 020e 25       		.uleb128 0x25
 4336 020f 34       		.uleb128 0x34
 4337 0210 00       		.byte	0
 4338 0211 03       		.uleb128 0x3
 4339 0212 08       		.uleb128 0x8
 4340 0213 3A       		.uleb128 0x3a
 4341 0214 0B       		.uleb128 0xb
 4342 0215 3B       		.uleb128 0x3b
 4343 0216 05       		.uleb128 0x5
 4344 0217 49       		.uleb128 0x49
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 131


 4345 0218 13       		.uleb128 0x13
 4346 0219 02       		.uleb128 0x2
 4347 021a 17       		.uleb128 0x17
 4348 021b 00       		.byte	0
 4349 021c 00       		.byte	0
 4350 021d 26       		.uleb128 0x26
 4351 021e 34       		.uleb128 0x34
 4352 021f 00       		.byte	0
 4353 0220 03       		.uleb128 0x3
 4354 0221 0E       		.uleb128 0xe
 4355 0222 3A       		.uleb128 0x3a
 4356 0223 0B       		.uleb128 0xb
 4357 0224 3B       		.uleb128 0x3b
 4358 0225 05       		.uleb128 0x5
 4359 0226 49       		.uleb128 0x49
 4360 0227 13       		.uleb128 0x13
 4361 0228 3F       		.uleb128 0x3f
 4362 0229 19       		.uleb128 0x19
 4363 022a 3C       		.uleb128 0x3c
 4364 022b 19       		.uleb128 0x19
 4365 022c 00       		.byte	0
 4366 022d 00       		.byte	0
 4367 022e 27       		.uleb128 0x27
 4368 022f 34       		.uleb128 0x34
 4369 0230 00       		.byte	0
 4370 0231 03       		.uleb128 0x3
 4371 0232 0E       		.uleb128 0xe
 4372 0233 3A       		.uleb128 0x3a
 4373 0234 0B       		.uleb128 0xb
 4374 0235 3B       		.uleb128 0x3b
 4375 0236 0B       		.uleb128 0xb
 4376 0237 49       		.uleb128 0x49
 4377 0238 13       		.uleb128 0x13
 4378 0239 3F       		.uleb128 0x3f
 4379 023a 19       		.uleb128 0x19
 4380 023b 02       		.uleb128 0x2
 4381 023c 18       		.uleb128 0x18
 4382 023d 00       		.byte	0
 4383 023e 00       		.byte	0
 4384 023f 28       		.uleb128 0x28
 4385 0240 2E       		.uleb128 0x2e
 4386 0241 00       		.byte	0
 4387 0242 3F       		.uleb128 0x3f
 4388 0243 19       		.uleb128 0x19
 4389 0244 3C       		.uleb128 0x3c
 4390 0245 19       		.uleb128 0x19
 4391 0246 6E       		.uleb128 0x6e
 4392 0247 0E       		.uleb128 0xe
 4393 0248 03       		.uleb128 0x3
 4394 0249 0E       		.uleb128 0xe
 4395 024a 3A       		.uleb128 0x3a
 4396 024b 0B       		.uleb128 0xb
 4397 024c 3B       		.uleb128 0x3b
 4398 024d 05       		.uleb128 0x5
 4399 024e 00       		.byte	0
 4400 024f 00       		.byte	0
 4401 0250 29       		.uleb128 0x29
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 132


 4402 0251 2E       		.uleb128 0x2e
 4403 0252 00       		.byte	0
 4404 0253 3F       		.uleb128 0x3f
 4405 0254 19       		.uleb128 0x19
 4406 0255 3C       		.uleb128 0x3c
 4407 0256 19       		.uleb128 0x19
 4408 0257 6E       		.uleb128 0x6e
 4409 0258 0E       		.uleb128 0xe
 4410 0259 03       		.uleb128 0x3
 4411 025a 0E       		.uleb128 0xe
 4412 025b 3A       		.uleb128 0x3a
 4413 025c 0B       		.uleb128 0xb
 4414 025d 3B       		.uleb128 0x3b
 4415 025e 0B       		.uleb128 0xb
 4416 025f 00       		.byte	0
 4417 0260 00       		.byte	0
 4418 0261 00       		.byte	0
 4419              		.section	.debug_loc,"",%progbits
 4420              	.Ldebug_loc0:
 4421              	.LLST0:
 4422 0000 00000000 		.4byte	.LVL0
 4423 0004 14000000 		.4byte	.LVL3
 4424 0008 0100     		.2byte	0x1
 4425 000a 50       		.byte	0x50
 4426 000b 14000000 		.4byte	.LVL3
 4427 000f 76000000 		.4byte	.LVL9
 4428 0013 0100     		.2byte	0x1
 4429 0015 54       		.byte	0x54
 4430 0016 76000000 		.4byte	.LVL9
 4431 001a 84000000 		.4byte	.LFE20
 4432 001e 0400     		.2byte	0x4
 4433 0020 F3       		.byte	0xf3
 4434 0021 01       		.uleb128 0x1
 4435 0022 50       		.byte	0x50
 4436 0023 9F       		.byte	0x9f
 4437 0024 00000000 		.4byte	0
 4438 0028 00000000 		.4byte	0
 4439              	.LLST1:
 4440 002c 00000000 		.4byte	.LVL0
 4441 0030 12000000 		.4byte	.LVL2
 4442 0034 0100     		.2byte	0x1
 4443 0036 51       		.byte	0x51
 4444 0037 12000000 		.4byte	.LVL2
 4445 003b 76000000 		.4byte	.LVL10
 4446 003f 0100     		.2byte	0x1
 4447 0041 55       		.byte	0x55
 4448 0042 76000000 		.4byte	.LVL10
 4449 0046 84000000 		.4byte	.LFE20
 4450 004a 0400     		.2byte	0x4
 4451 004c F3       		.byte	0xf3
 4452 004d 01       		.uleb128 0x1
 4453 004e 51       		.byte	0x51
 4454 004f 9F       		.byte	0x9f
 4455 0050 00000000 		.4byte	0
 4456 0054 00000000 		.4byte	0
 4457              	.LLST2:
 4458 0058 06000000 		.4byte	.LVL1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 133


 4459 005c 76000000 		.4byte	.LVL8
 4460 0060 0200     		.2byte	0x2
 4461 0062 30       		.byte	0x30
 4462 0063 9F       		.byte	0x9f
 4463 0064 76000000 		.4byte	.LVL8
 4464 0068 84000000 		.4byte	.LFE20
 4465 006c 0100     		.2byte	0x1
 4466 006e 50       		.byte	0x50
 4467 006f 00000000 		.4byte	0
 4468 0073 00000000 		.4byte	0
 4469              	.LLST3:
 4470 0077 00000000 		.4byte	.LVL11
 4471 007b 20000000 		.4byte	.LVL15
 4472 007f 0100     		.2byte	0x1
 4473 0081 50       		.byte	0x50
 4474 0082 20000000 		.4byte	.LVL15
 4475 0086 23000000 		.4byte	.LVL16-1
 4476 008a 0100     		.2byte	0x1
 4477 008c 51       		.byte	0x51
 4478 008d 23000000 		.4byte	.LVL16-1
 4479 0091 38000000 		.4byte	.LVL21
 4480 0095 0400     		.2byte	0x4
 4481 0097 F3       		.byte	0xf3
 4482 0098 01       		.uleb128 0x1
 4483 0099 50       		.byte	0x50
 4484 009a 9F       		.byte	0x9f
 4485 009b 38000000 		.4byte	.LVL21
 4486 009f 3E000000 		.4byte	.LVL24
 4487 00a3 0100     		.2byte	0x1
 4488 00a5 50       		.byte	0x50
 4489 00a6 3E000000 		.4byte	.LVL24
 4490 00aa 42000000 		.4byte	.LFE21
 4491 00ae 0400     		.2byte	0x4
 4492 00b0 F3       		.byte	0xf3
 4493 00b1 01       		.uleb128 0x1
 4494 00b2 50       		.byte	0x50
 4495 00b3 9F       		.byte	0x9f
 4496 00b4 00000000 		.4byte	0
 4497 00b8 00000000 		.4byte	0
 4498              	.LLST4:
 4499 00bc 00000000 		.4byte	.LVL11
 4500 00c0 1E000000 		.4byte	.LVL14
 4501 00c4 0100     		.2byte	0x1
 4502 00c6 51       		.byte	0x51
 4503 00c7 1E000000 		.4byte	.LVL14
 4504 00cb 38000000 		.4byte	.LVL21
 4505 00cf 0400     		.2byte	0x4
 4506 00d1 F3       		.byte	0xf3
 4507 00d2 01       		.uleb128 0x1
 4508 00d3 51       		.byte	0x51
 4509 00d4 9F       		.byte	0x9f
 4510 00d5 38000000 		.4byte	.LVL21
 4511 00d9 3E000000 		.4byte	.LVL24
 4512 00dd 0100     		.2byte	0x1
 4513 00df 51       		.byte	0x51
 4514 00e0 3E000000 		.4byte	.LVL24
 4515 00e4 42000000 		.4byte	.LFE21
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 134


 4516 00e8 0400     		.2byte	0x4
 4517 00ea F3       		.byte	0xf3
 4518 00eb 01       		.uleb128 0x1
 4519 00ec 51       		.byte	0x51
 4520 00ed 9F       		.byte	0x9f
 4521 00ee 00000000 		.4byte	0
 4522 00f2 00000000 		.4byte	0
 4523              	.LLST5:
 4524 00f6 24000000 		.4byte	.LVL16
 4525 00fa 28000000 		.4byte	.LVL17
 4526 00fe 0200     		.2byte	0x2
 4527 0100 30       		.byte	0x30
 4528 0101 9F       		.byte	0x9f
 4529 0102 28000000 		.4byte	.LVL17
 4530 0106 38000000 		.4byte	.LVL21
 4531 010a 0100     		.2byte	0x1
 4532 010c 53       		.byte	0x53
 4533 010d 3E000000 		.4byte	.LVL24
 4534 0111 42000000 		.4byte	.LFE21
 4535 0115 0100     		.2byte	0x1
 4536 0117 53       		.byte	0x53
 4537 0118 00000000 		.4byte	0
 4538 011c 00000000 		.4byte	0
 4539              	.LLST6:
 4540 0120 10000000 		.4byte	.LVL12
 4541 0124 1C000000 		.4byte	.LVL13
 4542 0128 0100     		.2byte	0x1
 4543 012a 53       		.byte	0x53
 4544 012b 38000000 		.4byte	.LVL21
 4545 012f 3A000000 		.4byte	.LVL22
 4546 0133 0100     		.2byte	0x1
 4547 0135 53       		.byte	0x53
 4548 0136 3C000000 		.4byte	.LVL23
 4549 013a 3E000000 		.4byte	.LVL24
 4550 013e 0100     		.2byte	0x1
 4551 0140 53       		.byte	0x53
 4552 0141 00000000 		.4byte	0
 4553 0145 00000000 		.4byte	0
 4554              	.LLST7:
 4555 0149 24000000 		.4byte	.LVL16
 4556 014d 38000000 		.4byte	.LVL21
 4557 0151 0100     		.2byte	0x1
 4558 0153 50       		.byte	0x50
 4559 0154 00000000 		.4byte	0
 4560 0158 00000000 		.4byte	0
 4561              	.LLST8:
 4562 015c 06000000 		.4byte	.LVL25
 4563 0160 19000000 		.4byte	.LVL29-1
 4564 0164 0100     		.2byte	0x1
 4565 0166 53       		.byte	0x53
 4566 0167 00000000 		.4byte	0
 4567 016b 00000000 		.4byte	0
 4568              	.LLST9:
 4569 016f 00000000 		.4byte	.LVL30
 4570 0173 37000000 		.4byte	.LVL32-1
 4571 0177 0100     		.2byte	0x1
 4572 0179 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 135


 4573 017a 37000000 		.4byte	.LVL32-1
 4574 017e 40000000 		.4byte	.LFE2
 4575 0182 0400     		.2byte	0x4
 4576 0184 F3       		.byte	0xf3
 4577 0185 01       		.uleb128 0x1
 4578 0186 50       		.byte	0x50
 4579 0187 9F       		.byte	0x9f
 4580 0188 00000000 		.4byte	0
 4581 018c 00000000 		.4byte	0
 4582              	.LLST10:
 4583 0190 30000000 		.4byte	.LVL31
 4584 0194 3A000000 		.4byte	.LVL33
 4585 0198 0100     		.2byte	0x1
 4586 019a 54       		.byte	0x54
 4587 019b 3A000000 		.4byte	.LVL33
 4588 019f 40000000 		.4byte	.LFE2
 4589 01a3 0100     		.2byte	0x1
 4590 01a5 50       		.byte	0x50
 4591 01a6 00000000 		.4byte	0
 4592 01aa 00000000 		.4byte	0
 4593              	.LLST11:
 4594 01ae 02000000 		.4byte	.LVL34
 4595 01b2 22000000 		.4byte	.LVL36
 4596 01b6 0200     		.2byte	0x2
 4597 01b8 30       		.byte	0x30
 4598 01b9 9F       		.byte	0x9f
 4599 01ba 22000000 		.4byte	.LVL36
 4600 01be 2C000000 		.4byte	.LFE3
 4601 01c2 0100     		.2byte	0x1
 4602 01c4 50       		.byte	0x50
 4603 01c5 00000000 		.4byte	0
 4604 01c9 00000000 		.4byte	0
 4605              	.LLST12:
 4606 01cd 02000000 		.4byte	.LVL37
 4607 01d1 12000000 		.4byte	.LVL38
 4608 01d5 0300     		.2byte	0x3
 4609 01d7 09       		.byte	0x9
 4610 01d8 FF       		.byte	0xff
 4611 01d9 9F       		.byte	0x9f
 4612 01da 12000000 		.4byte	.LVL38
 4613 01de 14000000 		.4byte	.LVL39
 4614 01e2 0100     		.2byte	0x1
 4615 01e4 50       		.byte	0x50
 4616 01e5 18000000 		.4byte	.LVL40
 4617 01e9 25000000 		.4byte	.LVL41-1
 4618 01ed 0100     		.2byte	0x1
 4619 01ef 50       		.byte	0x50
 4620 01f0 26000000 		.4byte	.LVL41
 4621 01f4 30000000 		.4byte	.LVL43
 4622 01f8 0100     		.2byte	0x1
 4623 01fa 50       		.byte	0x50
 4624 01fb 30000000 		.4byte	.LVL43
 4625 01ff 32000000 		.4byte	.LVL44
 4626 0203 0300     		.2byte	0x3
 4627 0205 09       		.byte	0x9
 4628 0206 FF       		.byte	0xff
 4629 0207 9F       		.byte	0x9f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 136


 4630 0208 32000000 		.4byte	.LVL44
 4631 020c 3C000000 		.4byte	.LFE4
 4632 0210 0100     		.2byte	0x1
 4633 0212 50       		.byte	0x50
 4634 0213 00000000 		.4byte	0
 4635 0217 00000000 		.4byte	0
 4636              	.LLST13:
 4637 021b 12000000 		.4byte	.LVL38
 4638 021f 30000000 		.4byte	.LVL43
 4639 0223 0100     		.2byte	0x1
 4640 0225 54       		.byte	0x54
 4641 0226 00000000 		.4byte	0
 4642 022a 00000000 		.4byte	0
 4643              	.LLST14:
 4644 022e 00000000 		.4byte	.LVL45
 4645 0232 06000000 		.4byte	.LVL46
 4646 0236 0100     		.2byte	0x1
 4647 0238 50       		.byte	0x50
 4648 0239 06000000 		.4byte	.LVL46
 4649 023d 9C000000 		.4byte	.LFE6
 4650 0241 0400     		.2byte	0x4
 4651 0243 F3       		.byte	0xf3
 4652 0244 01       		.uleb128 0x1
 4653 0245 50       		.byte	0x50
 4654 0246 9F       		.byte	0x9f
 4655 0247 00000000 		.4byte	0
 4656 024b 00000000 		.4byte	0
 4657              	.LLST15:
 4658 024f 00000000 		.4byte	.LVL45
 4659 0253 0E000000 		.4byte	.LVL47
 4660 0257 0100     		.2byte	0x1
 4661 0259 51       		.byte	0x51
 4662 025a 0E000000 		.4byte	.LVL47
 4663 025e 9C000000 		.4byte	.LFE6
 4664 0262 0400     		.2byte	0x4
 4665 0264 F3       		.byte	0xf3
 4666 0265 01       		.uleb128 0x1
 4667 0266 51       		.byte	0x51
 4668 0267 9F       		.byte	0x9f
 4669 0268 00000000 		.4byte	0
 4670 026c 00000000 		.4byte	0
 4671              	.LLST16:
 4672 0270 00000000 		.4byte	.LVL45
 4673 0274 16000000 		.4byte	.LVL49
 4674 0278 0100     		.2byte	0x1
 4675 027a 52       		.byte	0x52
 4676 027b 16000000 		.4byte	.LVL49
 4677 027f 94000000 		.4byte	.LVL61
 4678 0283 0100     		.2byte	0x1
 4679 0285 56       		.byte	0x56
 4680 0286 94000000 		.4byte	.LVL61
 4681 028a 9C000000 		.4byte	.LFE6
 4682 028e 0400     		.2byte	0x4
 4683 0290 F3       		.byte	0xf3
 4684 0291 01       		.uleb128 0x1
 4685 0292 52       		.byte	0x52
 4686 0293 9F       		.byte	0x9f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 137


 4687 0294 00000000 		.4byte	0
 4688 0298 00000000 		.4byte	0
 4689              	.LLST17:
 4690 029c 12000000 		.4byte	.LVL48
 4691 02a0 16000000 		.4byte	.LVL49
 4692 02a4 0200     		.2byte	0x2
 4693 02a6 30       		.byte	0x30
 4694 02a7 9F       		.byte	0x9f
 4695 02a8 16000000 		.4byte	.LVL49
 4696 02ac 94000000 		.4byte	.LVL60
 4697 02b0 0100     		.2byte	0x1
 4698 02b2 55       		.byte	0x55
 4699 02b3 00000000 		.4byte	0
 4700 02b7 00000000 		.4byte	0
 4701              	.LLST18:
 4702 02bb 1A000000 		.4byte	.LVL50
 4703 02bf 39000000 		.4byte	.LVL51-1
 4704 02c3 0100     		.2byte	0x1
 4705 02c5 50       		.byte	0x50
 4706 02c6 4C000000 		.4byte	.LVL52
 4707 02ca 6B000000 		.4byte	.LVL53-1
 4708 02ce 0100     		.2byte	0x1
 4709 02d0 50       		.byte	0x50
 4710 02d1 72000000 		.4byte	.LVL54
 4711 02d5 83000000 		.4byte	.LVL55-1
 4712 02d9 0100     		.2byte	0x1
 4713 02db 50       		.byte	0x50
 4714 02dc 00000000 		.4byte	0
 4715 02e0 00000000 		.4byte	0
 4716              	.LLST19:
 4717 02e4 12000000 		.4byte	.LVL48
 4718 02e8 94000000 		.4byte	.LVL59
 4719 02ec 0100     		.2byte	0x1
 4720 02ee 54       		.byte	0x54
 4721 02ef 00000000 		.4byte	0
 4722 02f3 00000000 		.4byte	0
 4723              	.LLST20:
 4724 02f7 00000000 		.4byte	.LVL62
 4725 02fb 13000000 		.4byte	.LVL63-1
 4726 02ff 0100     		.2byte	0x1
 4727 0301 50       		.byte	0x50
 4728 0302 13000000 		.4byte	.LVL63-1
 4729 0306 3C000000 		.4byte	.LFE8
 4730 030a 0400     		.2byte	0x4
 4731 030c F3       		.byte	0xf3
 4732 030d 01       		.uleb128 0x1
 4733 030e 50       		.byte	0x50
 4734 030f 9F       		.byte	0x9f
 4735 0310 00000000 		.4byte	0
 4736 0314 00000000 		.4byte	0
 4737              	.LLST21:
 4738 0318 08000000 		.4byte	.LVL66
 4739 031c 40000000 		.4byte	.LFE9
 4740 0320 0100     		.2byte	0x1
 4741 0322 53       		.byte	0x53
 4742 0323 00000000 		.4byte	0
 4743 0327 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 138


 4744              	.LLST22:
 4745 032b 02000000 		.4byte	.LVL65
 4746 032f 08000000 		.4byte	.LVL66
 4747 0333 0200     		.2byte	0x2
 4748 0335 30       		.byte	0x30
 4749 0336 9F       		.byte	0x9f
 4750 0337 08000000 		.4byte	.LVL66
 4751 033b 40000000 		.4byte	.LFE9
 4752 033f 0100     		.2byte	0x1
 4753 0341 51       		.byte	0x51
 4754 0342 00000000 		.4byte	0
 4755 0346 00000000 		.4byte	0
 4756              	.LLST23:
 4757 034a 0C000000 		.4byte	.LVL67
 4758 034e 1E000000 		.4byte	.LVL70
 4759 0352 0100     		.2byte	0x1
 4760 0354 52       		.byte	0x52
 4761 0355 20000000 		.4byte	.LVL71
 4762 0359 26000000 		.4byte	.LVL72
 4763 035d 0100     		.2byte	0x1
 4764 035f 50       		.byte	0x50
 4765 0360 26000000 		.4byte	.LVL72
 4766 0364 36000000 		.4byte	.LVL76
 4767 0368 0100     		.2byte	0x1
 4768 036a 52       		.byte	0x52
 4769 036b 00000000 		.4byte	0
 4770 036f 00000000 		.4byte	0
 4771              	.LLST24:
 4772 0373 00000000 		.4byte	.LVL77
 4773 0377 05000000 		.4byte	.LVL78-1
 4774 037b 0100     		.2byte	0x1
 4775 037d 50       		.byte	0x50
 4776 037e 05000000 		.4byte	.LVL78-1
 4777 0382 08000000 		.4byte	.LFE11
 4778 0386 0400     		.2byte	0x4
 4779 0388 F3       		.byte	0xf3
 4780 0389 01       		.uleb128 0x1
 4781 038a 50       		.byte	0x50
 4782 038b 9F       		.byte	0x9f
 4783 038c 00000000 		.4byte	0
 4784 0390 00000000 		.4byte	0
 4785              	.LLST25:
 4786 0394 00000000 		.4byte	.LVL79
 4787 0398 08000000 		.4byte	.LVL80
 4788 039c 0100     		.2byte	0x1
 4789 039e 50       		.byte	0x50
 4790 039f 08000000 		.4byte	.LVL80
 4791 03a3 0A000000 		.4byte	.LVL81
 4792 03a7 0300     		.2byte	0x3
 4793 03a9 70       		.byte	0x70
 4794 03aa 01       		.sleb128 1
 4795 03ab 9F       		.byte	0x9f
 4796 03ac 0A000000 		.4byte	.LVL81
 4797 03b0 30000000 		.4byte	.LFE12
 4798 03b4 0400     		.2byte	0x4
 4799 03b6 F3       		.byte	0xf3
 4800 03b7 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 139


 4801 03b8 50       		.byte	0x50
 4802 03b9 9F       		.byte	0x9f
 4803 03ba 00000000 		.4byte	0
 4804 03be 00000000 		.4byte	0
 4805              	.LLST26:
 4806 03c2 00000000 		.4byte	.LVL82
 4807 03c6 0A000000 		.4byte	.LVL86
 4808 03ca 0100     		.2byte	0x1
 4809 03cc 50       		.byte	0x50
 4810 03cd 0A000000 		.4byte	.LVL86
 4811 03d1 0C000000 		.4byte	.LVL87
 4812 03d5 0300     		.2byte	0x3
 4813 03d7 70       		.byte	0x70
 4814 03d8 01       		.sleb128 1
 4815 03d9 9F       		.byte	0x9f
 4816 03da 0C000000 		.4byte	.LVL87
 4817 03de 14000000 		.4byte	.LFE13
 4818 03e2 0400     		.2byte	0x4
 4819 03e4 F3       		.byte	0xf3
 4820 03e5 01       		.uleb128 0x1
 4821 03e6 50       		.byte	0x50
 4822 03e7 9F       		.byte	0x9f
 4823 03e8 00000000 		.4byte	0
 4824 03ec 00000000 		.4byte	0
 4825              	.LLST27:
 4826 03f0 04000000 		.4byte	.LVL83
 4827 03f4 06000000 		.4byte	.LVL84
 4828 03f8 0100     		.2byte	0x1
 4829 03fa 53       		.byte	0x53
 4830 03fb 08000000 		.4byte	.LVL85
 4831 03ff 0C000000 		.4byte	.LVL87
 4832 0403 0100     		.2byte	0x1
 4833 0405 53       		.byte	0x53
 4834 0406 0C000000 		.4byte	.LVL87
 4835 040a 14000000 		.4byte	.LFE13
 4836 040e 0100     		.2byte	0x1
 4837 0410 50       		.byte	0x50
 4838 0411 00000000 		.4byte	0
 4839 0415 00000000 		.4byte	0
 4840              	.LLST28:
 4841 0419 00000000 		.4byte	.LVL88
 4842 041d 06000000 		.4byte	.LVL89
 4843 0421 0100     		.2byte	0x1
 4844 0423 50       		.byte	0x50
 4845 0424 06000000 		.4byte	.LVL89
 4846 0428 10000000 		.4byte	.LVL92
 4847 042c 0100     		.2byte	0x1
 4848 042e 54       		.byte	0x54
 4849 042f 10000000 		.4byte	.LVL92
 4850 0433 12000000 		.4byte	.LFE14
 4851 0437 0400     		.2byte	0x4
 4852 0439 F3       		.byte	0xf3
 4853 043a 01       		.uleb128 0x1
 4854 043b 50       		.byte	0x50
 4855 043c 9F       		.byte	0x9f
 4856 043d 00000000 		.4byte	0
 4857 0441 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 140


 4858              	.LLST29:
 4859 0445 00000000 		.4byte	.LVL88
 4860 0449 09000000 		.4byte	.LVL90-1
 4861 044d 0100     		.2byte	0x1
 4862 044f 51       		.byte	0x51
 4863 0450 09000000 		.4byte	.LVL90-1
 4864 0454 12000000 		.4byte	.LFE14
 4865 0458 0400     		.2byte	0x4
 4866 045a F3       		.byte	0xf3
 4867 045b 01       		.uleb128 0x1
 4868 045c 51       		.byte	0x51
 4869 045d 9F       		.byte	0x9f
 4870 045e 00000000 		.4byte	0
 4871 0462 00000000 		.4byte	0
 4872              	.LLST30:
 4873 0466 00000000 		.4byte	.LVL93
 4874 046a 08000000 		.4byte	.LVL95
 4875 046e 0100     		.2byte	0x1
 4876 0470 50       		.byte	0x50
 4877 0471 08000000 		.4byte	.LVL95
 4878 0475 0A000000 		.4byte	.LVL96
 4879 0479 0100     		.2byte	0x1
 4880 047b 53       		.byte	0x53
 4881 047c 0A000000 		.4byte	.LVL96
 4882 0480 0C000000 		.4byte	.LVL97
 4883 0484 0100     		.2byte	0x1
 4884 0486 50       		.byte	0x50
 4885 0487 0C000000 		.4byte	.LVL97
 4886 048b 17000000 		.4byte	.LVL99-1
 4887 048f 0100     		.2byte	0x1
 4888 0491 53       		.byte	0x53
 4889 0492 17000000 		.4byte	.LVL99-1
 4890 0496 1A000000 		.4byte	.LFE15
 4891 049a 0400     		.2byte	0x4
 4892 049c F3       		.byte	0xf3
 4893 049d 01       		.uleb128 0x1
 4894 049e 50       		.byte	0x50
 4895 049f 9F       		.byte	0x9f
 4896 04a0 00000000 		.4byte	0
 4897 04a4 00000000 		.4byte	0
 4898              	.LLST31:
 4899 04a8 04000000 		.4byte	.LVL94
 4900 04ac 0C000000 		.4byte	.LVL97
 4901 04b0 0200     		.2byte	0x2
 4902 04b2 30       		.byte	0x30
 4903 04b3 9F       		.byte	0x9f
 4904 04b4 0C000000 		.4byte	.LVL97
 4905 04b8 14000000 		.4byte	.LVL98
 4906 04bc 0100     		.2byte	0x1
 4907 04be 50       		.byte	0x50
 4908 04bf 18000000 		.4byte	.LVL99
 4909 04c3 1A000000 		.4byte	.LFE15
 4910 04c7 0100     		.2byte	0x1
 4911 04c9 50       		.byte	0x50
 4912 04ca 00000000 		.4byte	0
 4913 04ce 00000000 		.4byte	0
 4914              	.LLST32:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 141


 4915 04d2 02000000 		.4byte	.LVL100
 4916 04d6 08000000 		.4byte	.LVL101
 4917 04da 0200     		.2byte	0x2
 4918 04dc 30       		.byte	0x30
 4919 04dd 9F       		.byte	0x9f
 4920 04de 08000000 		.4byte	.LVL101
 4921 04e2 18000000 		.4byte	.LVL106
 4922 04e6 0100     		.2byte	0x1
 4923 04e8 55       		.byte	0x55
 4924 04e9 18000000 		.4byte	.LVL106
 4925 04ed 1A000000 		.4byte	.LFE16
 4926 04f1 0100     		.2byte	0x1
 4927 04f3 50       		.byte	0x50
 4928 04f4 00000000 		.4byte	0
 4929 04f8 00000000 		.4byte	0
 4930              	.LLST33:
 4931 04fc 02000000 		.4byte	.LVL100
 4932 0500 08000000 		.4byte	.LVL101
 4933 0504 0200     		.2byte	0x2
 4934 0506 30       		.byte	0x30
 4935 0507 9F       		.byte	0x9f
 4936 0508 08000000 		.4byte	.LVL101
 4937 050c 18000000 		.4byte	.LVL105
 4938 0510 0100     		.2byte	0x1
 4939 0512 54       		.byte	0x54
 4940 0513 00000000 		.4byte	0
 4941 0517 00000000 		.4byte	0
 4942              	.LLST34:
 4943 051b 02000000 		.4byte	.LVL107
 4944 051f 06000000 		.4byte	.LVL108
 4945 0523 0200     		.2byte	0x2
 4946 0525 30       		.byte	0x30
 4947 0526 9F       		.byte	0x9f
 4948 0527 06000000 		.4byte	.LVL108
 4949 052b 30000000 		.4byte	.LVL114
 4950 052f 0100     		.2byte	0x1
 4951 0531 55       		.byte	0x55
 4952 0532 00000000 		.4byte	0
 4953 0536 00000000 		.4byte	0
 4954              	.LLST35:
 4955 053a 0C000000 		.4byte	.LVL109
 4956 053e 10000000 		.4byte	.LVL110
 4957 0542 0200     		.2byte	0x2
 4958 0544 30       		.byte	0x30
 4959 0545 9F       		.byte	0x9f
 4960 0546 10000000 		.4byte	.LVL110
 4961 054a 2C000000 		.4byte	.LVL113
 4962 054e 0100     		.2byte	0x1
 4963 0550 54       		.byte	0x54
 4964 0551 00000000 		.4byte	0
 4965 0555 00000000 		.4byte	0
 4966              	.LLST36:
 4967 0559 0C000000 		.4byte	.LVL109
 4968 055d 2C000000 		.4byte	.LVL113
 4969 0561 0100     		.2byte	0x1
 4970 0563 56       		.byte	0x56
 4971 0564 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 142


 4972 0568 00000000 		.4byte	0
 4973              	.LLST37:
 4974 056c 00000000 		.4byte	.LVL115
 4975 0570 02000000 		.4byte	.LVL116
 4976 0574 0100     		.2byte	0x1
 4977 0576 50       		.byte	0x50
 4978 0577 02000000 		.4byte	.LVL116
 4979 057b 10000000 		.4byte	.LFE23
 4980 057f 0400     		.2byte	0x4
 4981 0581 F3       		.byte	0xf3
 4982 0582 01       		.uleb128 0x1
 4983 0583 50       		.byte	0x50
 4984 0584 9F       		.byte	0x9f
 4985 0585 00000000 		.4byte	0
 4986 0589 00000000 		.4byte	0
 4987              	.LLST38:
 4988 058d 00000000 		.4byte	.LVL119
 4989 0591 02000000 		.4byte	.LVL120
 4990 0595 0100     		.2byte	0x1
 4991 0597 50       		.byte	0x50
 4992 0598 02000000 		.4byte	.LVL120
 4993 059c 10000000 		.4byte	.LFE24
 4994 05a0 0400     		.2byte	0x4
 4995 05a2 F3       		.byte	0xf3
 4996 05a3 01       		.uleb128 0x1
 4997 05a4 50       		.byte	0x50
 4998 05a5 9F       		.byte	0x9f
 4999 05a6 00000000 		.4byte	0
 5000 05aa 00000000 		.4byte	0
 5001              	.LLST39:
 5002 05ae 00000000 		.4byte	.LVL122
 5003 05b2 12000000 		.4byte	.LVL123
 5004 05b6 0100     		.2byte	0x1
 5005 05b8 50       		.byte	0x50
 5006 05b9 12000000 		.4byte	.LVL123
 5007 05bd 1A000000 		.4byte	.LVL124
 5008 05c1 0400     		.2byte	0x4
 5009 05c3 F3       		.byte	0xf3
 5010 05c4 01       		.uleb128 0x1
 5011 05c5 50       		.byte	0x50
 5012 05c6 9F       		.byte	0x9f
 5013 05c7 1A000000 		.4byte	.LVL124
 5014 05cb 1C000000 		.4byte	.LVL125
 5015 05cf 0100     		.2byte	0x1
 5016 05d1 50       		.byte	0x50
 5017 05d2 1C000000 		.4byte	.LVL125
 5018 05d6 24000000 		.4byte	.LFE25
 5019 05da 0400     		.2byte	0x4
 5020 05dc F3       		.byte	0xf3
 5021 05dd 01       		.uleb128 0x1
 5022 05de 50       		.byte	0x50
 5023 05df 9F       		.byte	0x9f
 5024 05e0 00000000 		.4byte	0
 5025 05e4 00000000 		.4byte	0
 5026              	.LLST40:
 5027 05e8 20000000 		.4byte	.LVL126
 5028 05ec 22000000 		.4byte	.LVL127
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 143


 5029 05f0 0100     		.2byte	0x1
 5030 05f2 50       		.byte	0x50
 5031 05f3 00000000 		.4byte	0
 5032 05f7 00000000 		.4byte	0
 5033              	.LLST41:
 5034 05fb 00000000 		.4byte	.LVL128
 5035 05ff 07000000 		.4byte	.LVL129-1
 5036 0603 0100     		.2byte	0x1
 5037 0605 50       		.byte	0x50
 5038 0606 07000000 		.4byte	.LVL129-1
 5039 060a 3A000000 		.4byte	.LFE19
 5040 060e 0400     		.2byte	0x4
 5041 0610 F3       		.byte	0xf3
 5042 0611 01       		.uleb128 0x1
 5043 0612 50       		.byte	0x50
 5044 0613 9F       		.byte	0x9f
 5045 0614 00000000 		.4byte	0
 5046 0618 00000000 		.4byte	0
 5047              	.LLST42:
 5048 061c 00000000 		.4byte	.LVL128
 5049 0620 07000000 		.4byte	.LVL129-1
 5050 0624 0100     		.2byte	0x1
 5051 0626 51       		.byte	0x51
 5052 0627 07000000 		.4byte	.LVL129-1
 5053 062b 38000000 		.4byte	.LVL143
 5054 062f 0100     		.2byte	0x1
 5055 0631 56       		.byte	0x56
 5056 0632 38000000 		.4byte	.LVL143
 5057 0636 3A000000 		.4byte	.LFE19
 5058 063a 0400     		.2byte	0x4
 5059 063c F3       		.byte	0xf3
 5060 063d 01       		.uleb128 0x1
 5061 063e 51       		.byte	0x51
 5062 063f 9F       		.byte	0x9f
 5063 0640 00000000 		.4byte	0
 5064 0644 00000000 		.4byte	0
 5065              	.LLST43:
 5066 0648 1C000000 		.4byte	.LVL135
 5067 064c 20000000 		.4byte	.LVL136
 5068 0650 0100     		.2byte	0x1
 5069 0652 50       		.byte	0x50
 5070 0653 20000000 		.4byte	.LVL136
 5071 0657 38000000 		.4byte	.LVL141
 5072 065b 0100     		.2byte	0x1
 5073 065d 54       		.byte	0x54
 5074 065e 00000000 		.4byte	0
 5075 0662 00000000 		.4byte	0
 5076              	.LLST44:
 5077 0666 30000000 		.4byte	.LVL139
 5078 066a 32000000 		.4byte	.LVL140
 5079 066e 0100     		.2byte	0x1
 5080 0670 50       		.byte	0x50
 5081 0671 00000000 		.4byte	0
 5082 0675 00000000 		.4byte	0
 5083              	.LLST45:
 5084 0679 14000000 		.4byte	.LVL132
 5085 067d 16000000 		.4byte	.LVL133
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 144


 5086 0681 0100     		.2byte	0x1
 5087 0683 50       		.byte	0x50
 5088 0684 16000000 		.4byte	.LVL133
 5089 0688 19000000 		.4byte	.LVL134-1
 5090 068c 0100     		.2byte	0x1
 5091 068e 51       		.byte	0x51
 5092 068f 00000000 		.4byte	0
 5093 0693 00000000 		.4byte	0
 5094              	.LLST46:
 5095 0697 0A000000 		.4byte	.LVL130
 5096 069b 11000000 		.4byte	.LVL131-1
 5097 069f 0100     		.2byte	0x1
 5098 06a1 50       		.byte	0x50
 5099 06a2 11000000 		.4byte	.LVL131-1
 5100 06a6 38000000 		.4byte	.LVL142
 5101 06aa 0100     		.2byte	0x1
 5102 06ac 55       		.byte	0x55
 5103 06ad 00000000 		.4byte	0
 5104 06b1 00000000 		.4byte	0
 5105              	.LLST47:
 5106 06b5 04000000 		.4byte	.LVL144
 5107 06b9 2A000000 		.4byte	.LVL147
 5108 06bd 0200     		.2byte	0x2
 5109 06bf 30       		.byte	0x30
 5110 06c0 9F       		.byte	0x9f
 5111 06c1 2A000000 		.4byte	.LVL147
 5112 06c5 7E000000 		.4byte	.LVL153
 5113 06c9 0100     		.2byte	0x1
 5114 06cb 55       		.byte	0x55
 5115 06cc 80000000 		.4byte	.LVL154
 5116 06d0 1A010000 		.4byte	.LVL171
 5117 06d4 0100     		.2byte	0x1
 5118 06d6 55       		.byte	0x55
 5119 06d7 1A010000 		.4byte	.LVL171
 5120 06db 44010000 		.4byte	.LFE17
 5121 06df 0100     		.2byte	0x1
 5122 06e1 50       		.byte	0x50
 5123 06e2 00000000 		.4byte	0
 5124 06e6 00000000 		.4byte	0
 5125              	.LLST48:
 5126 06ea 24000000 		.4byte	.LVL146
 5127 06ee 2A000000 		.4byte	.LVL147
 5128 06f2 0200     		.2byte	0x2
 5129 06f4 30       		.byte	0x30
 5130 06f5 9F       		.byte	0x9f
 5131 06f6 2A000000 		.4byte	.LVL147
 5132 06fa AC000000 		.4byte	.LVL157
 5133 06fe 0100     		.2byte	0x1
 5134 0700 56       		.byte	0x56
 5135 0701 AC000000 		.4byte	.LVL157
 5136 0705 F6000000 		.4byte	.LVL163
 5137 0709 0100     		.2byte	0x1
 5138 070b 54       		.byte	0x54
 5139 070c F8000000 		.4byte	.LVL164
 5140 0710 1A010000 		.4byte	.LVL170
 5141 0714 0100     		.2byte	0x1
 5142 0716 54       		.byte	0x54
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 145


 5143 0717 00000000 		.4byte	0
 5144 071b 00000000 		.4byte	0
 5145              	.LLST49:
 5146 071f 04000000 		.4byte	.LVL144
 5147 0723 2A000000 		.4byte	.LVL147
 5148 0727 0200     		.2byte	0x2
 5149 0729 30       		.byte	0x30
 5150 072a 9F       		.byte	0x9f
 5151 072b 76000000 		.4byte	.LVL152
 5152 072f A4000000 		.4byte	.LVL156
 5153 0733 0100     		.2byte	0x1
 5154 0735 50       		.byte	0x50
 5155 0736 00000000 		.4byte	0
 5156 073a 00000000 		.4byte	0
 5157              	.LLST50:
 5158 073e 32000000 		.4byte	.LVL148
 5159 0742 A4000000 		.4byte	.LVL156
 5160 0746 0100     		.2byte	0x1
 5161 0748 54       		.byte	0x54
 5162 0749 B4000000 		.4byte	.LVL158
 5163 074d F0000000 		.4byte	.LVL162
 5164 0751 0100     		.2byte	0x1
 5165 0753 56       		.byte	0x56
 5166 0754 00010000 		.4byte	.LVL165
 5167 0758 05010000 		.4byte	.LVL166-1
 5168 075c 0100     		.2byte	0x1
 5169 075e 51       		.byte	0x51
 5170 075f 00000000 		.4byte	0
 5171 0763 00000000 		.4byte	0
 5172              	.LLST51:
 5173 0767 02000000 		.4byte	.LVL172
 5174 076b 06000000 		.4byte	.LVL173
 5175 076f 0200     		.2byte	0x2
 5176 0771 30       		.byte	0x30
 5177 0772 9F       		.byte	0x9f
 5178 0773 06000000 		.4byte	.LVL173
 5179 0777 1A000000 		.4byte	.LVL177
 5180 077b 0100     		.2byte	0x1
 5181 077d 54       		.byte	0x54
 5182 077e 00000000 		.4byte	0
 5183 0782 00000000 		.4byte	0
 5184              	.LLST52:
 5185 0786 0E000000 		.4byte	.LVL174
 5186 078a 13000000 		.4byte	.LVL175-1
 5187 078e 0100     		.2byte	0x1
 5188 0790 51       		.byte	0x51
 5189 0791 00000000 		.4byte	0
 5190 0795 00000000 		.4byte	0
 5191              	.LLST53:
 5192 0799 0A000000 		.4byte	.LVL183
 5193 079d 13000000 		.4byte	.LVL185-1
 5194 07a1 0100     		.2byte	0x1
 5195 07a3 53       		.byte	0x53
 5196 07a4 1C000000 		.4byte	.LVL187
 5197 07a8 25000000 		.4byte	.LVL189-1
 5198 07ac 0100     		.2byte	0x1
 5199 07ae 53       		.byte	0x53
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 146


 5200 07af 2E000000 		.4byte	.LVL191
 5201 07b3 3B000000 		.4byte	.LVL194-1
 5202 07b7 0100     		.2byte	0x1
 5203 07b9 53       		.byte	0x53
 5204 07ba 48000000 		.4byte	.LVL197
 5205 07be 4F000000 		.4byte	.LVL199-1
 5206 07c2 0100     		.2byte	0x1
 5207 07c4 53       		.byte	0x53
 5208 07c5 00000000 		.4byte	0
 5209 07c9 00000000 		.4byte	0
 5210              	.LLST54:
 5211 07cd 06000000 		.4byte	.LVL182
 5212 07d1 13000000 		.4byte	.LVL185-1
 5213 07d5 0100     		.2byte	0x1
 5214 07d7 50       		.byte	0x50
 5215 07d8 18000000 		.4byte	.LVL186
 5216 07dc 25000000 		.4byte	.LVL189-1
 5217 07e0 0100     		.2byte	0x1
 5218 07e2 50       		.byte	0x50
 5219 07e3 2A000000 		.4byte	.LVL190
 5220 07e7 3B000000 		.4byte	.LVL194-1
 5221 07eb 0100     		.2byte	0x1
 5222 07ed 50       		.byte	0x50
 5223 07ee 46000000 		.4byte	.LVL196
 5224 07f2 4F000000 		.4byte	.LVL199-1
 5225 07f6 0100     		.2byte	0x1
 5226 07f8 50       		.byte	0x50
 5227 07f9 00000000 		.4byte	0
 5228 07fd 00000000 		.4byte	0
 5229              		.section	.debug_aranges,"",%progbits
 5230 0000 E4000000 		.4byte	0xe4
 5231 0004 0200     		.2byte	0x2
 5232 0006 00000000 		.4byte	.Ldebug_info0
 5233 000a 04       		.byte	0x4
 5234 000b 00       		.byte	0
 5235 000c 0000     		.2byte	0
 5236 000e 0000     		.2byte	0
 5237 0010 00000000 		.4byte	.LFB20
 5238 0014 84000000 		.4byte	.LFE20-.LFB20
 5239 0018 00000000 		.4byte	.LFB21
 5240 001c 42000000 		.4byte	.LFE21-.LFB21
 5241 0020 00000000 		.4byte	.LFB7
 5242 0024 24000000 		.4byte	.LFE7-.LFB7
 5243 0028 00000000 		.4byte	.LFB1
 5244 002c 10000000 		.4byte	.LFE1-.LFB1
 5245 0030 00000000 		.4byte	.LFB2
 5246 0034 40000000 		.4byte	.LFE2-.LFB2
 5247 0038 00000000 		.4byte	.LFB3
 5248 003c 2C000000 		.4byte	.LFE3-.LFB3
 5249 0040 00000000 		.4byte	.LFB4
 5250 0044 3C000000 		.4byte	.LFE4-.LFB4
 5251 0048 00000000 		.4byte	.LFB6
 5252 004c 9C000000 		.4byte	.LFE6-.LFB6
 5253 0050 00000000 		.4byte	.LFB8
 5254 0054 3C000000 		.4byte	.LFE8-.LFB8
 5255 0058 00000000 		.4byte	.LFB9
 5256 005c 40000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 147


 5257 0060 00000000 		.4byte	.LFB10
 5258 0064 02000000 		.4byte	.LFE10-.LFB10
 5259 0068 00000000 		.4byte	.LFB11
 5260 006c 08000000 		.4byte	.LFE11-.LFB11
 5261 0070 00000000 		.4byte	.LFB12
 5262 0074 30000000 		.4byte	.LFE12-.LFB12
 5263 0078 00000000 		.4byte	.LFB13
 5264 007c 14000000 		.4byte	.LFE13-.LFB13
 5265 0080 00000000 		.4byte	.LFB14
 5266 0084 12000000 		.4byte	.LFE14-.LFB14
 5267 0088 00000000 		.4byte	.LFB15
 5268 008c 1A000000 		.4byte	.LFE15-.LFB15
 5269 0090 00000000 		.4byte	.LFB16
 5270 0094 1A000000 		.4byte	.LFE16-.LFB16
 5271 0098 00000000 		.4byte	.LFB22
 5272 009c 38000000 		.4byte	.LFE22-.LFB22
 5273 00a0 00000000 		.4byte	.LFB23
 5274 00a4 10000000 		.4byte	.LFE23-.LFB23
 5275 00a8 00000000 		.4byte	.LFB24
 5276 00ac 10000000 		.4byte	.LFE24-.LFB24
 5277 00b0 00000000 		.4byte	.LFB25
 5278 00b4 24000000 		.4byte	.LFE25-.LFB25
 5279 00b8 00000000 		.4byte	.LFB19
 5280 00bc 3A000000 		.4byte	.LFE19-.LFB19
 5281 00c0 00000000 		.4byte	.LFB17
 5282 00c4 44010000 		.4byte	.LFE17-.LFB17
 5283 00c8 00000000 		.4byte	.LFB18
 5284 00cc 20000000 		.4byte	.LFE18-.LFB18
 5285 00d0 00000000 		.4byte	.LFB5
 5286 00d4 14000000 		.4byte	.LFE5-.LFB5
 5287 00d8 00000000 		.4byte	.LFB26
 5288 00dc 60000000 		.4byte	.LFE26-.LFB26
 5289 00e0 00000000 		.4byte	0
 5290 00e4 00000000 		.4byte	0
 5291              		.section	.debug_ranges,"",%progbits
 5292              	.Ldebug_ranges0:
 5293 0000 00000000 		.4byte	.LFB20
 5294 0004 84000000 		.4byte	.LFE20
 5295 0008 00000000 		.4byte	.LFB21
 5296 000c 42000000 		.4byte	.LFE21
 5297 0010 00000000 		.4byte	.LFB7
 5298 0014 24000000 		.4byte	.LFE7
 5299 0018 00000000 		.4byte	.LFB1
 5300 001c 10000000 		.4byte	.LFE1
 5301 0020 00000000 		.4byte	.LFB2
 5302 0024 40000000 		.4byte	.LFE2
 5303 0028 00000000 		.4byte	.LFB3
 5304 002c 2C000000 		.4byte	.LFE3
 5305 0030 00000000 		.4byte	.LFB4
 5306 0034 3C000000 		.4byte	.LFE4
 5307 0038 00000000 		.4byte	.LFB6
 5308 003c 9C000000 		.4byte	.LFE6
 5309 0040 00000000 		.4byte	.LFB8
 5310 0044 3C000000 		.4byte	.LFE8
 5311 0048 00000000 		.4byte	.LFB9
 5312 004c 40000000 		.4byte	.LFE9
 5313 0050 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 148


 5314 0054 02000000 		.4byte	.LFE10
 5315 0058 00000000 		.4byte	.LFB11
 5316 005c 08000000 		.4byte	.LFE11
 5317 0060 00000000 		.4byte	.LFB12
 5318 0064 30000000 		.4byte	.LFE12
 5319 0068 00000000 		.4byte	.LFB13
 5320 006c 14000000 		.4byte	.LFE13
 5321 0070 00000000 		.4byte	.LFB14
 5322 0074 12000000 		.4byte	.LFE14
 5323 0078 00000000 		.4byte	.LFB15
 5324 007c 1A000000 		.4byte	.LFE15
 5325 0080 00000000 		.4byte	.LFB16
 5326 0084 1A000000 		.4byte	.LFE16
 5327 0088 00000000 		.4byte	.LFB22
 5328 008c 38000000 		.4byte	.LFE22
 5329 0090 00000000 		.4byte	.LFB23
 5330 0094 10000000 		.4byte	.LFE23
 5331 0098 00000000 		.4byte	.LFB24
 5332 009c 10000000 		.4byte	.LFE24
 5333 00a0 00000000 		.4byte	.LFB25
 5334 00a4 24000000 		.4byte	.LFE25
 5335 00a8 00000000 		.4byte	.LFB19
 5336 00ac 3A000000 		.4byte	.LFE19
 5337 00b0 00000000 		.4byte	.LFB17
 5338 00b4 44010000 		.4byte	.LFE17
 5339 00b8 00000000 		.4byte	.LFB18
 5340 00bc 20000000 		.4byte	.LFE18
 5341 00c0 00000000 		.4byte	.LFB5
 5342 00c4 14000000 		.4byte	.LFE5
 5343 00c8 00000000 		.4byte	.LFB26
 5344 00cc 60000000 		.4byte	.LFE26
 5345 00d0 00000000 		.4byte	0
 5346 00d4 00000000 		.4byte	0
 5347              		.section	.debug_line,"",%progbits
 5348              	.Ldebug_line0:
 5349 0000 C7040000 		.section	.debug_str,"MS",%progbits,1
 5349      0200E200 
 5349      00000201 
 5349      FB0E0D00 
 5349      01010101 
 5350              	.LASF111:
 5351 0000 43617053 		.ascii	"CapSense_1_SsCalcLfsrSize\000"
 5351      656E7365 
 5351      5F315F53 
 5351      7343616C 
 5351      634C6673 
 5352              	.LASF125:
 5353 001a 73656E73 		.ascii	"sensorElement\000"
 5353      6F72456C 
 5353      656D656E 
 5353      7400
 5354              	.LASF166:
 5355 0028 43617053 		.ascii	"CapSense_1_BistDischargeExtCapacitors\000"
 5355      656E7365 
 5355      5F315F42 
 5355      69737444 
 5355      69736368 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 149


 5356              	.LASF189:
 5357 004e 43617053 		.ascii	"CapSense_1_SsCSDGetNumberOfConversions\000"
 5357      656E7365 
 5357      5F315F53 
 5357      73435344 
 5357      4765744E 
 5358              	.LASF157:
 5359 0075 43617053 		.ascii	"CapSense_1_SsCSDDisableMode\000"
 5359      656E7365 
 5359      5F315F53 
 5359      73435344 
 5359      44697361 
 5360              	.LASF105:
 5361 0091 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 5361      656E7365 
 5361      5F315F46 
 5361      4C415348 
 5361      5F57445F 
 5362              	.LASF122:
 5363 00ac 7363616E 		.ascii	"scanStatus\000"
 5363      53746174 
 5363      757300
 5364              	.LASF173:
 5365 00b7 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 5365      656E7365 
 5365      5F315F63 
 5365      75725261 
 5365      6D536E73 
 5366              	.LASF80:
 5367 00cf 736E7254 		.ascii	"snrTestWidgetId\000"
 5367      65737457 
 5367      69646765 
 5367      74496400 
 5368              	.LASF181:
 5369 00df 43617053 		.ascii	"CapSense_1_CSDScan\000"
 5369      656E7365 
 5369      5F315F43 
 5369      53445363 
 5369      616E00
 5370              	.LASF8:
 5371 00f2 756E7369 		.ascii	"unsigned int\000"
 5371      676E6564 
 5371      20696E74 
 5371      00
 5372              	.LASF134:
 5373 00ff 43617053 		.ascii	"CapSense_1_SsSetIOsInDefaultState\000"
 5373      656E7365 
 5373      5F315F53 
 5373      73536574 
 5373      494F7349 
 5374              	.LASF164:
 5375 0121 43617053 		.ascii	"CapSense_1_SsInitialize\000"
 5375      656E7365 
 5375      5F315F53 
 5375      73496E69 
 5375      7469616C 
 5376              	.LASF71:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 150


 5377 0139 7363616E 		.ascii	"scanCounter\000"
 5377      436F756E 
 5377      74657200 
 5378              	.LASF69:
 5379 0145 6877436C 		.ascii	"hwClock\000"
 5379      6F636B00 
 5380              	.LASF158:
 5381 014d 43617053 		.ascii	"CapSense_1_SsSetWidgetSenseClkSrc\000"
 5381      656E7365 
 5381      5F315F53 
 5381      73536574 
 5381      57696467 
 5382              	.LASF90:
 5383 016f 6D61736B 		.ascii	"mask\000"
 5383      00
 5384              	.LASF176:
 5385 0174 43617053 		.ascii	"CapSense_1_curSnsIOPtr\000"
 5385      656E7365 
 5385      5F315F63 
 5385      7572536E 
 5385      73494F50 
 5386              	.LASF165:
 5387 018b 696E6974 		.ascii	"initStatus\000"
 5387      53746174 
 5387      757300
 5388              	.LASF136:
 5389 0196 72656756 		.ascii	"regValue\000"
 5389      616C7565 
 5389      00
 5390              	.LASF169:
 5391 019f 43617053 		.ascii	"CapSense_1_ioList\000"
 5391      656E7365 
 5391      5F315F69 
 5391      6F4C6973 
 5391      7400
 5392              	.LASF129:
 5393 01b1 696E7465 		.ascii	"interruptState\000"
 5393      72727570 
 5393      74537461 
 5393      746500
 5394              	.LASF196:
 5395 01c0 43617053 		.ascii	"CapSense_1_IsBusy\000"
 5395      656E7365 
 5395      5F315F49 
 5395      73427573 
 5395      7900
 5396              	.LASF114:
 5397 01d2 6C667372 		.ascii	"lfsrScale\000"
 5397      5363616C 
 5397      6500
 5398              	.LASF184:
 5399 01dc 43617053 		.ascii	"CapSense_1_CSDConnectSns\000"
 5399      656E7365 
 5399      5F315F43 
 5399      5344436F 
 5399      6E6E6563 
 5400              	.LASF22:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 151


 5401 01f5 69446163 		.ascii	"iDacGain\000"
 5401      4761696E 
 5401      00
 5402              	.LASF143:
 5403 01fe 43617053 		.ascii	"CapSense_1_CalibrateWidget\000"
 5403      656E7365 
 5403      5F315F43 
 5403      616C6962 
 5403      72617465 
 5404              	.LASF191:
 5405 0219 536D6172 		.ascii	"SmartSense_TuneSensitivity\000"
 5405      7453656E 
 5405      73655F54 
 5405      756E6553 
 5405      656E7369 
 5406              	.LASF25:
 5407 0234 736E7343 		.ascii	"snsClkInputClock\000"
 5407      6C6B496E 
 5407      70757443 
 5407      6C6F636B 
 5407      00
 5408              	.LASF115:
 5409 0245 6C667372 		.ascii	"lfsrRange\000"
 5409      52616E67 
 5409      6500
 5410              	.LASF133:
 5411 024f 6D6F6465 		.ascii	"mode\000"
 5411      00
 5412              	.LASF163:
 5413 0254 43617053 		.ascii	"CapSense_1_SsInitializeSourceSenseClk\000"
 5413      656E7365 
 5413      5F315F53 
 5413      73496E69 
 5413      7469616C 
 5414              	.LASF175:
 5415 027a 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 5415      656E7365 
 5415      5F315F73 
 5415      63616E46 
 5415      72657149 
 5416              	.LASF185:
 5417 0293 43617053 		.ascii	"CapSense_1_SsCSDInitialize\000"
 5417      656E7365 
 5417      5F315F53 
 5417      73435344 
 5417      496E6974 
 5418              	.LASF59:
 5419 02ae 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 5419      656E7365 
 5419      5F315F52 
 5419      414D5F57 
 5419      445F4C49 
 5420              	.LASF161:
 5421 02cc 63705769 		.ascii	"cpWidget\000"
 5421      64676574 
 5421      00
 5422              	.LASF127:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 152


 5423 02d5 656C7464 		.ascii	"eltdNum\000"
 5423      4E756D00 
 5424              	.LASF151:
 5425 02dd 70747257 		.ascii	"ptrWdgt\000"
 5425      64677400 
 5426              	.LASF160:
 5427 02e5 6175746F 		.ascii	"autoTuneStatus\000"
 5427      54756E65 
 5427      53746174 
 5427      757300
 5428              	.LASF154:
 5429 02f4 43617053 		.ascii	"CapSense_1_SsCSDCalcPrsSize\000"
 5429      656E7365 
 5429      5F315F53 
 5429      73435344 
 5429      43616C63 
 5430              	.LASF172:
 5431 0310 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
 5431      656E7365 
 5431      5F315F72 
 5431      65717565 
 5431      73745363 
 5432              	.LASF135:
 5433 0330 6C6F6F70 		.ascii	"loopIndex\000"
 5433      496E6465 
 5433      7800
 5434              	.LASF12:
 5435 033a 666C6F61 		.ascii	"float\000"
 5435      7400
 5436              	.LASF93:
 5437 0340 73686966 		.ascii	"shift\000"
 5437      7400
 5438              	.LASF193:
 5439 0346 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5439      43313120 
 5439      352E342E 
 5439      31203230 
 5439      31363036 
 5440 0379 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 5440      20726576 
 5440      6973696F 
 5440      6E203233 
 5440      37373135 
 5441 03ac 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 5441      67202D66 
 5441      66756E63 
 5441      74696F6E 
 5441      2D736563 
 5442              	.LASF159:
 5443 03d8 43617053 		.ascii	"CapSense_1_SsAutoTune\000"
 5443      656E7365 
 5443      5F315F53 
 5443      73417574 
 5443      6F54756E 
 5444              	.LASF120:
 5445 03ee 43617053 		.ascii	"CapSense_1_SetupWidget\000"
 5445      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 153


 5445      5F315F53 
 5445      65747570 
 5445      57696467 
 5446              	.LASF192:
 5447 0405 43794465 		.ascii	"CyDelayUs\000"
 5447      6C617955 
 5447      7300
 5448              	.LASF79:
 5449 040f 736E734C 		.ascii	"snsList\000"
 5449      69737400 
 5450              	.LASF7:
 5451 0417 6C6F6E67 		.ascii	"long long unsigned int\000"
 5451      206C6F6E 
 5451      6720756E 
 5451      7369676E 
 5451      65642069 
 5452              	.LASF81:
 5453 042e 736E7254 		.ascii	"snrTestSensorId\000"
 5453      65737453 
 5453      656E736F 
 5453      72496400 
 5454              	.LASF104:
 5455 043e 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 5455      4E6F6973 
 5455      65456E76 
 5455      6C7000
 5456              	.LASF102:
 5457 044d 77646774 		.ascii	"wdgtType\000"
 5457      54797065 
 5457      00
 5458              	.LASF113:
 5459 0456 6C667372 		.ascii	"lfsrSize\000"
 5459      53697A65 
 5459      00
 5460              	.LASF19:
 5461 045f 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 5461      656E7365 
 5461      5F315F4C 
 5461      4F575F42 
 5461      534C4E5F 
 5462              	.LASF44:
 5463 047c 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ENUM\000"
 5463      656E7365 
 5463      5F315F53 
 5463      454E5345 
 5463      5F4D4554 
 5464              	.LASF177:
 5465 0499 43617053 		.ascii	"CapSense_1_calibratedIdac\000"
 5465      656E7365 
 5465      5F315F63 
 5465      616C6962 
 5465      72617465 
 5466              	.LASF77:
 5467 04b3 6D6F6443 		.ascii	"modCsdClk\000"
 5467      7364436C 
 5467      6B00
 5468              	.LASF186:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 154


 5469 04bd 43617053 		.ascii	"CapSense_1_ISR_StartEx\000"
 5469      656E7365 
 5469      5F315F49 
 5469      53525F53 
 5469      74617274 
 5470              	.LASF26:
 5471 04d4 63616C54 		.ascii	"calTarget\000"
 5471      61726765 
 5471      7400
 5472              	.LASF87:
 5473 04de 64725074 		.ascii	"drPtr\000"
 5473      7200
 5474              	.LASF137:
 5475 04e4 43617053 		.ascii	"CapSense_1_SsIsrInitialize\000"
 5475      656E7365 
 5475      5F315F53 
 5475      73497372 
 5475      496E6974 
 5476              	.LASF28:
 5477 04ff 73696750 		.ascii	"sigPFC\000"
 5477      464300
 5478              	.LASF42:
 5479 0506 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 5479      656E7365 
 5479      5F315F53 
 5479      454E5345 
 5479      5F4D4554 
 5480              	.LASF51:
 5481 0525 6C6F7742 		.ascii	"lowBslnRst\000"
 5481      736C6E52 
 5481      737400
 5482              	.LASF131:
 5483 0530 43617053 		.ascii	"CapSense_1_SetPinState\000"
 5483      656E7365 
 5483      5F315F53 
 5483      65745069 
 5483      6E537461 
 5484              	.LASF132:
 5485 0547 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 5485      656E7365 
 5485      5F315F53 
 5485      73537769 
 5485      74636853 
 5486              	.LASF139:
 5487 0566 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 5487      656E7365 
 5487      5F315F53 
 5487      73536574 
 5487      4D6F6443 
 5488              	.LASF101:
 5489 0589 746F7461 		.ascii	"totalNumSns\000"
 5489      6C4E756D 
 5489      536E7300 
 5490              	.LASF38:
 5491 0595 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 5491      5453454E 
 5491      53455F43 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 155


 5491      53445F4E 
 5491      4F495345 
 5492              	.LASF149:
 5493 05ba 43617053 		.ascii	"CapSense_1_SsCSDGetColSnsClkDivider\000"
 5493      656E7365 
 5493      5F315F53 
 5493      73435344 
 5493      47657443 
 5494              	.LASF47:
 5495 05de 6E6F6973 		.ascii	"noiseTh\000"
 5495      65546800 
 5496              	.LASF14:
 5497 05e6 63686172 		.ascii	"char\000"
 5497      00
 5498              	.LASF183:
 5499 05eb 43794578 		.ascii	"CyExitCriticalSection\000"
 5499      69744372 
 5499      69746963 
 5499      616C5365 
 5499      6374696F 
 5500              	.LASF123:
 5501 0601 43617053 		.ascii	"CapSense_1_ScanAllWidgets\000"
 5501      656E7365 
 5501      5F315F53 
 5501      63616E41 
 5501      6C6C5769 
 5502              	.LASF91:
 5503 061b 6873696F 		.ascii	"hsiomShift\000"
 5503      6D536869 
 5503      667400
 5504              	.LASF10:
 5505 0626 75696E74 		.ascii	"uint16\000"
 5505      313600
 5506              	.LASF110:
 5507 062d 636F6E76 		.ascii	"conversionsNum\000"
 5507      65727369 
 5507      6F6E734E 
 5507      756D00
 5508              	.LASF45:
 5509 063c 7265736F 		.ascii	"resolution\000"
 5509      6C757469 
 5509      6F6E00
 5510              	.LASF84:
 5511 0647 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 5511      656E7365 
 5511      5F315F52 
 5511      414D5F53 
 5511      54525543 
 5512              	.LASF72:
 5513 065d 73746174 		.ascii	"status\000"
 5513      757300
 5514              	.LASF140:
 5515 0664 6D6F6443 		.ascii	"modClk\000"
 5515      6C6B00
 5516              	.LASF153:
 5517 066b 64697669 		.ascii	"dividerVal\000"
 5517      64657256 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 156


 5517      616C00
 5518              	.LASF64:
 5519 0676 69646163 		.ascii	"idacComp\000"
 5519      436F6D70 
 5519      00
 5520              	.LASF86:
 5521 067f 70635074 		.ascii	"pcPtr\000"
 5521      7200
 5522              	.LASF6:
 5523 0685 6C6F6E67 		.ascii	"long long int\000"
 5523      206C6F6E 
 5523      6720696E 
 5523      7400
 5524              	.LASF18:
 5525 0693 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 5525      656E7365 
 5525      5F315F54 
 5525      48524553 
 5525      484F4C44 
 5526              	.LASF50:
 5527 06ad 6F6E4465 		.ascii	"onDebounce\000"
 5527      626F756E 
 5527      636500
 5528              	.LASF141:
 5529 06b8 43617053 		.ascii	"CapSense_1_SsSetSnsClockDivider\000"
 5529      656E7365 
 5529      5F315F53 
 5529      73536574 
 5529      536E7343 
 5530              	.LASF138:
 5531 06d8 61646472 		.ascii	"address\000"
 5531      65737300 
 5532              	.LASF144:
 5533 06e0 63616C69 		.ascii	"calibrateStatus\000"
 5533      62726174 
 5533      65537461 
 5533      74757300 
 5534              	.LASF78:
 5535 06f0 77646774 		.ascii	"wdgtList\000"
 5535      4C697374 
 5535      00
 5536              	.LASF95:
 5537 06f9 70747232 		.ascii	"ptr2SnsFlash\000"
 5537      536E7346 
 5537      6C617368 
 5537      00
 5538              	.LASF83:
 5539 0706 736E7254 		.ascii	"snrTestRawCount\000"
 5539      65737452 
 5539      6177436F 
 5539      756E7400 
 5540              	.LASF48:
 5541 0716 6E4E6F69 		.ascii	"nNoiseTh\000"
 5541      73655468 
 5541      00
 5542              	.LASF76:
 5543 071f 63736430 		.ascii	"csd0Config\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 157


 5543      436F6E66 
 5543      696700
 5544              	.LASF17:
 5545 072a 63796973 		.ascii	"cyisraddress\000"
 5545      72616464 
 5545      72657373 
 5545      00
 5546              	.LASF108:
 5547 0737 6C6F6E67 		.ascii	"long double\000"
 5547      20646F75 
 5547      626C6500 
 5548              	.LASF56:
 5549 0743 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 5549      656E7365 
 5549      5F315F52 
 5549      414D5F57 
 5549      445F4241 
 5550              	.LASF85:
 5551 0761 6873696F 		.ascii	"hsiomPtr\000"
 5551      6D507472 
 5551      00
 5552              	.LASF11:
 5553 076a 75696E74 		.ascii	"uint32\000"
 5553      333200
 5554              	.LASF49:
 5555 0771 68797374 		.ascii	"hysteresis\000"
 5555      65726573 
 5555      697300
 5556              	.LASF98:
 5557 077c 70747232 		.ascii	"ptr2FltrHistory\000"
 5557      466C7472 
 5557      48697374 
 5557      6F727900 
 5558              	.LASF39:
 5559 078c 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 5559      656E7365 
 5559      5F315F55 
 5559      4E444546 
 5559      494E4544 
 5560              	.LASF66:
 5561 07a3 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 5561      656E7365 
 5561      5F315F52 
 5561      414D5F53 
 5561      4E535F4C 
 5562              	.LASF29:
 5563 07c2 69446163 		.ascii	"iDac\000"
 5563      00
 5564              	.LASF194:
 5565 07c7 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_Sensing.c\000"
 5565      72617465 
 5565      645F536F 
 5565      75726365 
 5565      5C50536F 
 5566              	.LASF27:
 5567 07f3 70747253 		.ascii	"ptrSenseClk\000"
 5567      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 158


 5567      436C6B00 
 5568              	.LASF124:
 5569 07ff 77646774 		.ascii	"wdgtIndex\000"
 5569      496E6465 
 5569      7800
 5570              	.LASF147:
 5571 0809 736E7349 		.ascii	"snsIndex\000"
 5571      6E646578 
 5571      00
 5572              	.LASF167:
 5573 0812 43617053 		.ascii	"CapSense_1_dsRam\000"
 5573      656E7365 
 5573      5F315F64 
 5573      7352616D 
 5573      00
 5574              	.LASF121:
 5575 0823 43617053 		.ascii	"CapSense_1_Scan\000"
 5575      656E7365 
 5575      5F315F53 
 5575      63616E00 
 5576              	.LASF43:
 5577 0833 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 5577      656E7365 
 5577      5F315F53 
 5577      454E5345 
 5577      5F4D4554 
 5578              	.LASF20:
 5579 0851 736E7343 		.ascii	"snsClkConstantR\000"
 5579      6C6B436F 
 5579      6E737461 
 5579      6E745200 
 5580              	.LASF16:
 5581 0861 72656733 		.ascii	"reg32\000"
 5581      3200
 5582              	.LASF82:
 5583 0867 736E7254 		.ascii	"snrTestScanCounter\000"
 5583      65737453 
 5583      63616E43 
 5583      6F756E74 
 5583      657200
 5584              	.LASF67:
 5585 087a 636F6E66 		.ascii	"configId\000"
 5585      69674964 
 5585      00
 5586              	.LASF97:
 5587 0883 70747232 		.ascii	"ptr2SnsRam\000"
 5587      536E7352 
 5587      616D00
 5588              	.LASF107:
 5589 088e 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 5589      656E7365 
 5589      5F315F46 
 5589      4C415348 
 5589      5F535452 
 5590              	.LASF75:
 5591 08a6 736E7353 		.ascii	"snsStatus\000"
 5591      74617475 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 159


 5591      7300
 5592              	.LASF54:
 5593 08b0 736E7343 		.ascii	"snsClkSource\000"
 5593      6C6B536F 
 5593      75726365 
 5593      00
 5594              	.LASF55:
 5595 08bd 73697A65 		.ascii	"sizetype\000"
 5595      74797065 
 5595      00
 5596              	.LASF188:
 5597 08c6 43617053 		.ascii	"CapSense_1_CSDDisconnectSns\000"
 5597      656E7365 
 5597      5F315F43 
 5597      53444469 
 5597      73636F6E 
 5598              	.LASF2:
 5599 08e2 73686F72 		.ascii	"short int\000"
 5599      7420696E 
 5599      7400
 5600              	.LASF152:
 5601 08ec 43617053 		.ascii	"CapSense_1_SsCSDSetColSnsClkDivider\000"
 5601      656E7365 
 5601      5F315F53 
 5601      73435344 
 5601      53657443 
 5602              	.LASF4:
 5603 0910 6C6F6E67 		.ascii	"long int\000"
 5603      20696E74 
 5603      00
 5604              	.LASF73:
 5605 0919 77646774 		.ascii	"wdgtEnable\000"
 5605      456E6162 
 5605      6C6500
 5606              	.LASF142:
 5607 0924 43617053 		.ascii	"CapSense_1_SsSetClockDividers\000"
 5607      656E7365 
 5607      5F315F53 
 5607      73536574 
 5607      436C6F63 
 5608              	.LASF168:
 5609 0942 43617053 		.ascii	"CapSense_1_dsFlash\000"
 5609      656E7365 
 5609      5F315F64 
 5609      73466C61 
 5609      736800
 5610              	.LASF62:
 5611 0955 64696666 		.ascii	"diff\000"
 5611      00
 5612              	.LASF70:
 5613 095a 74756E65 		.ascii	"tunerCmd\000"
 5613      72436D64 
 5613      00
 5614              	.LASF88:
 5615 0963 70735074 		.ascii	"psPtr\000"
 5615      7200
 5616              	.LASF41:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 160


 5617 0969 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 5617      656E7365 
 5617      5F315F53 
 5617      454E5345 
 5617      5F4D4554 
 5618              	.LASF58:
 5619 0987 62757474 		.ascii	"button0\000"
 5619      6F6E3000 
 5620              	.LASF187:
 5621 098f 43617053 		.ascii	"CapSense_1_CSDCalibrateWidget\000"
 5621      656E7365 
 5621      5F315F43 
 5621      53444361 
 5621      6C696272 
 5622              	.LASF103:
 5623 09ad 6E756D43 		.ascii	"numCols\000"
 5623      6F6C7300 
 5624              	.LASF178:
 5625 09b5 43617053 		.ascii	"CapSense_1_calibratedRawcount\000"
 5625      656E7365 
 5625      5F315F63 
 5625      616C6962 
 5625      72617465 
 5626              	.LASF23:
 5627 09d3 66696E67 		.ascii	"fingerCap\000"
 5627      65724361 
 5627      7000
 5628              	.LASF74:
 5629 09dd 77646774 		.ascii	"wdgtStatus\000"
 5629      53746174 
 5629      757300
 5630              	.LASF180:
 5631 09e8 43617053 		.ascii	"CapSense_1_CSDSetupWidget\000"
 5631      656E7365 
 5631      5F315F43 
 5631      53445365 
 5631      74757057 
 5632              	.LASF171:
 5633 0a02 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 5633      656E7365 
 5633      5F315F73 
 5633      656E736F 
 5633      72496E64 
 5634              	.LASF190:
 5635 0a19 536D6172 		.ascii	"SmartSense_TunePrescalers\000"
 5635      7453656E 
 5635      73655F54 
 5635      756E6550 
 5635      72657363 
 5636              	.LASF155:
 5637 0a33 70727353 		.ascii	"prsSize\000"
 5637      697A6500 
 5638              	.LASF40:
 5639 0a3b 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 5639      656E7365 
 5639      5F315F53 
 5639      454E5345 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 161


 5639      5F4D4554 
 5640              	.LASF92:
 5641 0a59 64725368 		.ascii	"drShift\000"
 5641      69667400 
 5642              	.LASF5:
 5643 0a61 6C6F6E67 		.ascii	"long unsigned int\000"
 5643      20756E73 
 5643      69676E65 
 5643      6420696E 
 5643      7400
 5644              	.LASF150:
 5645 0a73 72657456 		.ascii	"retVal\000"
 5645      616C00
 5646              	.LASF21:
 5647 0a7a 76526566 		.ascii	"vRef\000"
 5647      00
 5648              	.LASF52:
 5649 0a7f 69646163 		.ascii	"idacMod\000"
 5649      4D6F6400 
 5650              	.LASF99:
 5651 0a87 70747232 		.ascii	"ptr2DebounceArr\000"
 5651      4465626F 
 5651      756E6365 
 5651      41727200 
 5652              	.LASF179:
 5653 0a97 43617053 		.ascii	"CapSense_1_SsCSDElectrodeCheck\000"
 5653      656E7365 
 5653      5F315F53 
 5653      73435344 
 5653      456C6563 
 5654              	.LASF46:
 5655 0ab6 66696E67 		.ascii	"fingerTh\000"
 5655      65725468 
 5655      00
 5656              	.LASF145:
 5657 0abf 43617053 		.ascii	"CapSense_1_CalibrateAllWidgets\000"
 5657      656E7365 
 5657      5F315F43 
 5657      616C6962 
 5657      72617465 
 5658              	.LASF61:
 5659 0ade 62736C6E 		.ascii	"bslnExt\000"
 5659      45787400 
 5660              	.LASF15:
 5661 0ae6 63797374 		.ascii	"cystatus\000"
 5661      61747573 
 5661      00
 5662              	.LASF1:
 5663 0aef 756E7369 		.ascii	"unsigned char\000"
 5663      676E6564 
 5663      20636861 
 5663      7200
 5664              	.LASF100:
 5665 0afd 73746174 		.ascii	"staticConfig\000"
 5665      6963436F 
 5665      6E666967 
 5665      00
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 162


 5666              	.LASF24:
 5667 0b0a 73656E73 		.ascii	"sensorCap\000"
 5667      6F724361 
 5667      7000
 5668              	.LASF130:
 5669 0b14 696F5074 		.ascii	"ioPtr\000"
 5669      7200
 5670              	.LASF96:
 5671 0b1a 70747232 		.ascii	"ptr2WdgtRam\000"
 5671      57646774 
 5671      52616D00 
 5672              	.LASF126:
 5673 0b26 73746174 		.ascii	"state\000"
 5673      6500
 5674              	.LASF128:
 5675 0b2c 656C7464 		.ascii	"eltdIndex\000"
 5675      496E6465 
 5675      7800
 5676              	.LASF89:
 5677 0b36 6873696F 		.ascii	"hsiomMask\000"
 5677      6D4D6173 
 5677      6B00
 5678              	.LASF174:
 5679 0b40 43617053 		.ascii	"CapSense_1_currentSenseMethod\000"
 5679      656E7365 
 5679      5F315F63 
 5679      75727265 
 5679      6E745365 
 5680              	.LASF148:
 5681 0b5e 63757253 		.ascii	"curSnsIOPtr\000"
 5681      6E73494F 
 5681      50747200 
 5682              	.LASF53:
 5683 0b6a 736E7343 		.ascii	"snsClk\000"
 5683      6C6B00
 5684              	.LASF182:
 5685 0b71 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5685      74657243 
 5685      72697469 
 5685      63616C53 
 5685      65637469 
 5686              	.LASF0:
 5687 0b88 7369676E 		.ascii	"signed char\000"
 5687      65642063 
 5687      68617200 
 5688              	.LASF60:
 5689 0b94 62736C6E 		.ascii	"bsln\000"
 5689      00
 5690              	.LASF3:
 5691 0b99 73686F72 		.ascii	"short unsigned int\000"
 5691      7420756E 
 5691      7369676E 
 5691      65642069 
 5691      6E7400
 5692              	.LASF30:
 5693 0bac 4155544F 		.ascii	"AUTO_TUNE_CONFIG_TYPE\000"
 5693      5F54554E 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 163


 5693      455F434F 
 5693      4E464947 
 5693      5F545950 
 5694              	.LASF94:
 5695 0bc2 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 5695      656E7365 
 5695      5F315F46 
 5695      4C415348 
 5695      5F494F5F 
 5696              	.LASF116:
 5697 0bdd 6C667372 		.ascii	"lfsrDither\000"
 5697      44697468 
 5697      657200
 5698              	.LASF117:
 5699 0be8 6E657752 		.ascii	"newRegValue\000"
 5699      65675661 
 5699      6C756500 
 5700              	.LASF146:
 5701 0bf4 43617053 		.ascii	"CapSense_1_SsClearCSDSensors\000"
 5701      656E7365 
 5701      5F315F53 
 5701      73436C65 
 5701      61724353 
 5702              	.LASF9:
 5703 0c11 75696E74 		.ascii	"uint8\000"
 5703      3800
 5704              	.LASF13:
 5705 0c17 646F7562 		.ascii	"double\000"
 5705      6C6500
 5706              	.LASF63:
 5707 0c1e 6E656742 		.ascii	"negBslnRstCnt\000"
 5707      736C6E52 
 5707      7374436E 
 5707      7400
 5708              	.LASF65:
 5709 0c2c 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 5709      656E7365 
 5709      5F315F52 
 5709      414D5F53 
 5709      4E535F53 
 5710              	.LASF31:
 5711 0c46 70617261 		.ascii	"param0\000"
 5711      6D3000
 5712              	.LASF32:
 5713 0c4d 70617261 		.ascii	"param1\000"
 5713      6D3100
 5714              	.LASF33:
 5715 0c54 70617261 		.ascii	"param2\000"
 5715      6D3200
 5716              	.LASF34:
 5717 0c5b 70617261 		.ascii	"param3\000"
 5717      6D3300
 5718              	.LASF35:
 5719 0c62 70617261 		.ascii	"param4\000"
 5719      6D3400
 5720              	.LASF36:
 5721 0c69 70617261 		.ascii	"param5\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 164


 5721      6D3500
 5722              	.LASF37:
 5723 0c70 70617261 		.ascii	"param6\000"
 5723      6D3600
 5724              	.LASF162:
 5725 0c77 6175746F 		.ascii	"autoTuneConfig\000"
 5725      54756E65 
 5725      436F6E66 
 5725      696700
 5726              	.LASF109:
 5727 0c86 736E7343 		.ascii	"snsClkDivider\000"
 5727      6C6B4469 
 5727      76696465 
 5727      7200
 5728              	.LASF156:
 5729 0c94 6D6F6443 		.ascii	"modClkDivider\000"
 5729      6C6B4469 
 5729      76696465 
 5729      7200
 5730              	.LASF68:
 5731 0ca2 64657669 		.ascii	"deviceId\000"
 5731      63654964 
 5731      00
 5732              	.LASF119:
 5733 0cab 77696467 		.ascii	"widgetStatus\000"
 5733      65745374 
 5733      61747573 
 5733      00
 5734              	.LASF57:
 5735 0cb8 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 5735      656E7365 
 5735      5F315F52 
 5735      414D5F57 
 5735      445F4255 
 5736              	.LASF118:
 5737 0cd8 77696467 		.ascii	"widgetId\000"
 5737      65744964 
 5737      00
 5738              	.LASF197:
 5739 0ce1 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 5739      656E7365 
 5739      5F315F53 
 5739      73506F73 
 5739      74416C6C 
 5740              	.LASF170:
 5741 0d01 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 5741      656E7365 
 5741      5F315F77 
 5741      69646765 
 5741      74496E64 
 5742              	.LASF112:
 5743 0d18 43617053 		.ascii	"CapSense_1_SsCalcLfsrScale\000"
 5743      656E7365 
 5743      5F315F53 
 5743      7343616C 
 5743      634C6673 
 5744              	.LASF195:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc1SwP4L.s 			page 165


 5745 0d33 5A3A5C54 		.ascii	"Z:\\Transfer\\Jan\\FirstTest.cydsn\000"
 5745      72616E73 
 5745      6665725C 
 5745      4A616E5C 
 5745      46697273 
 5746              	.LASF106:
 5747 0d53 77646774 		.ascii	"wdgtArray\000"
 5747      41727261 
 5747      7900
 5748              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
