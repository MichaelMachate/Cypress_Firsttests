ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsSetWidgetSenseClkSrc,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsSetWidgetSenseClkSrc, %function
  24              	CapSense_1_SsSetWidgetSenseClkSrc:
  25              	.LFB19:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \file CapSense_1_Sensing.c
   3:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \version 5.20
   4:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \see CapSense_1 v5.20 Datasheet
  10:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Structure.h"
  43:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_Adc.h"
  58:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (0u != CapSense_1_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #include "CapSense_1_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (0u != CapSense_1_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_1_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  85:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
 161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
 165:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_SENSE_METHOD_ENUM CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_immunity[CapSense_1_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     const uint8 CapSense_1_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint8 CapSense_1_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_RAM_SNS_STRUCT *CapSense_1_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_WD_STRUCT const *CapSense_1_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_IsBusy
 212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint32 CapSense_1_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetupWidget
 240:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDSetupWidgetExt(), CapSense_1_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 259:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_I_REP
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function does not start sensor scanning, the CapSense_1_Scan()
 264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if ((CapSense_1_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_Scan
 348:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function is called only after the CapSense_1_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_1_IsBusy()
 358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_Scan(void)
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXScan();
 384:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDScan();
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXScan();
 394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_SetupWidget() and CapSense_1_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  using the CapSense_1_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 430:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_ScanAllWidgets(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 9


 431:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CapSense_1_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (0u != (CapSense_1_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_ENABLE;
 462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (0u != (CapSense_1_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 scanStatus = CapSense_1_Scan();
 477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 487:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 10


 488:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitialize
 489:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling the CapSense_1_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1 Component at power-up. The CapSense_1_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (centerFreqTrim < CapSense_1_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_1_IMO_FREQUE
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (centerFreqTrim > (CapSense_1_IMO_FREQUENCY_OFFSET_MAX - CapSense_1_IMO_FREQUENCY_O
 534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 544:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 11


 545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****               ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 559:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_MANY_SENSE_MODES_EN)
 564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
 568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSX_E);
 570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ISX_E);
 572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 576:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (initStatus);
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 580:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 581:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetPinState
 583:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 585:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 586:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 587:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 589:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  associated with the ganged sensor is updated.
 590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 592:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 594:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 595:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 596:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 597:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 598:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function accepts the CapSense_1_SHIELD and
 599:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SENSOR states as an input only if there is at least
 600:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_1_TX_PIN
 601:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and CapSense_1_RX_PIN states as an input only if there is at least
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 12


 602:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSX widget in the project.
 603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling this function directly from the application layer is not
 605:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 606:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 607:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  automatically set the required pin states. They ignore changes
 608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  in the design made by the CapSense_1_SetPinState() function.
 609:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 610:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 611:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 612:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 613:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  sensor.
 614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration
 615:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  header file defined as CapSense_1_<WidgetName>_WDGT_ID.
 616:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param sensorElement
 618:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 619:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  its pin state.
 620:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 622:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 623:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_SNS<SensorNumber>_ID.
 624:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 625:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 627:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 628:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \endif
 629:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as:
 631:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_RX<RXNumber>_ID
 632:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_TX<TXNumber>_ID.
 633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 634:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param state
 635:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the state of the sensor to be set:
 636:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     1. CapSense_1_GROUND - The pin is connected to the ground.
 637:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     2. CapSense_1_HIGHZ - The drive mode of the pin is set to High-Z
 638:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        Analog.
 639:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     3. CapSense_1_SHIELD - The shield signal is routed to the pin
 640:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 641:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     4. CapSense_1_SENSOR - The pin is connected to the scanning bus
 642:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method is enabled).
 643:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     5. CapSense_1_TX_PIN - The Tx signal is routed to the sensor
 644:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     6. CapSense_1_RX_PIN - The pin is connected to the scanning bus
 646:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 647:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdIndex;
 653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8  interruptState;
 654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr;
 655:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 13


 659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check the ganged sns flag */
 662:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig & Ca
 663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr = CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 665:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr += sensorElement;
 666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinId];
 667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2
 672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = 1u;
 673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsF
 676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 678:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Reset HSIOM and PC registers */
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 687:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (state)
 689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_GROUND:
 691:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_HIGHZ:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSOR:
 706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Enable sensor */
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDConnectSns(ioPtr);
 708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 709:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 case CapSense_1_SHIELD:
 712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM
 715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 14


 716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     break;
 717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 719:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_TX_PIN:
 723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_GPIO_STRGDRV <<
 726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 728:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_RX_PIN:
 730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK <
 733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wrong state */
 739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 741:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
 743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 745:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 746:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDDisableMode
 749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSD mode.
 753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  4. Disable Shield Electrodes.
 760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void)
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 765:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 770:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 15


 773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)))
 774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Disconnect IDACA and IDACB */
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))) */
 781:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsCSDElectrodeCheck();
 784:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
 789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_1_CSH_TO_AMUXBUS_B_MASK << CapSense_1_CSH_HS
 790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, newRegValue);
 791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 793:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT))
 796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableShieldElectrodes();
 797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)) */
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 800:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 801:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 802:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableCSXMode
 806:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSX mode.
 810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void)
 818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 820:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 825:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 16


 830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_CSXElectrodeCheck();
 833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 834:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 836:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableISXMode
 839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables ISX mode.
 843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void)
 851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 853:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 858:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
 863:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXElectrodeCheck();
 866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_DigPrt2_Stop();
 867:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_USES_PORT_3)
 868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DigPrt3_Stop();
 869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* CapSense_1_USES_PORT_3 */
 870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 871:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 873:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 874:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSwitchSensingMode
 875:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 876:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 877:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 878:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanned.
 880:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 881:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 882:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 883:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 884:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSD mode.
 886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 17


 887:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 888:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 889:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 890:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSX mode.
 891:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 892:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param mode
 893:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the scan mode:
 894:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSD_E
 895:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSX_E
 896:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_ISX_E
 897:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_BIST_E
 898:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_UNDEFINED_E
 899:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 900:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 901:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ENUM mode)
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == CapSense_1_currentSenseMethod)
 907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDDisableMode();
 910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 911:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == CapSense_1_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableCSXMode();
 916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == CapSense_1_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableISXMode();
 922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == CapSense_1_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistDisableMode();
 928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
 933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Release ADC resources */
 934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_AdcReleaseResources();
 935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
 936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 937:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Enable the specified mode */
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == mode)
 940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDInitialize();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 18


 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == mode)
 948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXInitialize();
 952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSX_E;
 953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 954:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == mode)
 956:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 957:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXInitialize();
 960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_ISX_E;
 961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == mode)
 964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistInitialize();
 967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_BIST_E;
 968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 976:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 978:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetIOsInDefaultState
 980:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 981:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 982:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 983:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all electrodes into a default state.
 984:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 985:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 986:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 987:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 988:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - Strong drive.
 989:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 990:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the ADC channels into a default state:
 992:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 993:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - HiZ-Analog.
 994:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 995:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 996:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly from the application
 997:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  layer.
 998:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetIOsInDefaultState(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 19


1001:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
1003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
1004:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 regValue;
1005:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes */
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_1_TOTAL_ELECTRODES; loopIndex++)
1008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 1. Disconnect HSIOM.
1011:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 2. Set strong DM.
1012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 3. Set pin state to logic 0.
1013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1022:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1026:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get next electrode */
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
1029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1030:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ADC_EN)
1032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ClearAdcChannels();
1033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     
1035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ISX_EN)
1036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXSetDefaultDigital();
1037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1039:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
1041:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1042:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsReleaseResources()
1043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1044:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1045:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1046:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1047:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  default state.
1048:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1049:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1050:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The function performs following tasks:
1051:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1052:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1053:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     Cmod for CSD mode)
1054:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1055:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1056:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
1057:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 20


1058:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Resources released successfully.
1059:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1060:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1062:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsReleaseResources(void)
1063:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1065:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
1067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1070:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
1072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableCSXMode();
1075:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1076:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableISXMode();
1079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1080:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableMode();
1083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
1084:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_BistDisableMode();
1087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1088:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) &&  \
1091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsSetIOsInDefaultState();
1093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1094:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE != CapSense_1_CSD_SHIELD_EN) &&  \
1095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION)) */
1096:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1100:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
1102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1103:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return busyStatus;
1105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1108:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1109:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsPostAllWidgetsScan
1111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 21


1115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is the function used by the CapSense_1 ISR to implement multiple widget
1118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanning.
1119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Should not be used by the application layer.
1120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsPostAllWidgetsScan(void)
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Increment widget index
1126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Check if all the widgets are scanned
1127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     */
1129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (1u != CapSense_1_TOTAL_WIDGETS)
1130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus postScanStatus;
1131:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_widgetIndex++;
1135:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             postScanStatus = CapSense_1_SetupWidget((uint32)CapSense_1_widgetIndex);
1137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
1144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_Scan();
1146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (CapSense_1_ENABLE == CapSense_1_CSD_EN))
1151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widget
1153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable the CSD block */
1155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
1156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1158:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                            (CapSense_1_ENABLE == CapSense_1_CSD_EN)) */
1159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update scan Counter */
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.scanCounter++;
1162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1164:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure */
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1169:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 22


1172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1173:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1174:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsIsrInitialize
1185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  proper working of the Component.
1194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1195:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param address
1196:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1197:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1198:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsIsrInitialize(cyisraddress address)
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1203:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetModClkClockDivider
1207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param modClk
1219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The divider value for the modulator clock.
1220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetModClkClockDivider(uint32 modClk)
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Stop modulator clock */
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
1228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CapSense_1_MODCLK_CMD_DIV_SHIFT)|
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 23


1229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_MODCLK_CMD_DISABLE_MASK));
1230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense modClk.
1233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) & CapSense_1_MODCLK_CMD_ENABLE_MASK))
1240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1242:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
1247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_MODCLK_CMD_PA_DIV_SHIFT) |
1248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   CapSense_1_MODCLK_CMD_ENABLE_MASK));
1249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1252:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) &
1255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(~CapSense_1_ModClk__ENABLE_MASK));
1256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Update ModClk clock divider.
1259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_ModClk__DI
1262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= (modClk - 1u);
1263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, newRegValue);
1264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set bit to enable ModClk clock. */
1266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) |
1268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ModClk__ENABLE_MASK);
1269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetSnsClockDivider
1275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the sense clock.
1280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 24


1286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1287:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1289:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1290:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetSnsClockDivider(uint32 snsClk)
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1292:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1294:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense clock.
1297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_SENSE_PERIOD_PTR);
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
1304:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Stop sense clock clock   */
1307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SnsClk__DIV_ID <<
1309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CapSense_1_SNSCLK_CMD_DIV_SHIFT)|
1310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SNSCLK_CMD_DISABLE_MASK));
1311:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Set divider value for sense clock.
1314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * to dividing by 1.
1316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) & CapSense_1_SNSCLK_CMD_ENABLE_MASK))
1321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1324:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_SHIFT
1328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_SNSCLK_CMD_PA_DIV_SHIFT) 
1329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       CapSense_1_SNSCLK_CMD_ENABLE_MASK));
1330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
1331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
1332:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
1336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(~(uint32)CapSense_1_SnsClk__ENABLE_MASK));
1337:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Update snsClk clock divider.
1340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_SnsClk
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 25


1343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (snsClk - 1u);
1344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, newRegValue);
1345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1346:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
1349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_SnsClk__ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetClockDividers
1357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  modClk The divider value for the modulator clock.
1372:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1373:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetModClkClockDivider(modClk);
1378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Sns clock */
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetSnsClockDivider(snsClk);
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ANYMODE_AUTOCAL)
1385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateWidget
1387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the
1392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget prior to calibration.
1393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function performs exactly the same tasks as
1396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_CalibrateAllWidgets, but only for a specified widget.
1397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 26


1400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1403:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
1413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  A macro for the widget ID can be found in the
1415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1 Configuration header file defined as
1416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_<WidgetName>_WDGT_ID.
1417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the specified widget calibration:
1420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateWidget(uint32 widgetId)
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_TOTAL_WIDGETS <= widgetId)
1433:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1435:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /*
1438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              */
1441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (0u != CapSense_1_GET_WIDGET_EN_STATUS(widgetId))
1443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 else
1447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif  /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1453:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Exit from the loop because of a fail */
1455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
1456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 27


1457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN)
1462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSX_E ==
1463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSX widget */
1466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                        CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN) */
1469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)
1471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1474:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSD widget */
1475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RA
1476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1477:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN) */
1478:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RAWCOUNT_C
1482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXCalibrateWidget(widgetId, CapSense_1_ISX_RAWCOUNT_CAL_LEVEL);
1490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
1492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
1494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              /* Update CRC */
1496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN)
1497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_DsUpdateWidgetCrc(widgetId);
1498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN) */
1499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (0u);
1501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateAllWidgets
1508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1511:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  prior to calibration.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 28


1514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1526:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endcond
1527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the calibration process:
1534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateAllWidgets(void)
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1543:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             calibrateStatus |= CapSense_1_CalibrateWidget(wdgtIndex);
1547:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1551:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
1552:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1554:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
1555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsAutoTune
1557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense_1 operation.
1561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the following:
1564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    2*5*R*Cp.
1567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the operation:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 29


1571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_SsAutoTune(void)
1576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cp = 0uL;
1581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1582:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 cpRow = 0uL;
1583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cpWidget[CapSense_1_TOTAL_WIDGETS];
1586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
1587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Configure common config variables */
1590:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_1_CSD_SNSCLK_R_CONST;
1591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.vRef = CapSense_1_CSD_VREF_MV;
1592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_1_CSD_IDAC_GAIN_VALUE_NA;
1593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif ((CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) && (CapSense_1_DISABLE == CY_PSO
1599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained */
1600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1603:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Initialize CSD mode */
1612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDInitialize();
1613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN) */
1614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #1:
1617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - performing the first calibration at fixed settings
1618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sensor Cp
1619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sense clock frequency based on Cp
1620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sense clock for all the widgets */
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1626:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 30


1628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = CapSense_1_CALIBRATION_RESOLUTION;
1633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_1_CAL
1637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
1645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_CAL_LEVEL);
1648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get IDAC */
1657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calculate achived calibration level */
1660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcountR
1661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Find correct sense clock value */
1664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cpRow)
1667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1670:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
1672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
1675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1680:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << Ca
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 31


1685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 {
1686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_1_dsRam.modCsdClk;
1687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 }
1688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #else
1689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #endif
1691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1694:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1700:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calculate achived calibration level */
1702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcount * CapSen
1703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1704:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find correct sense clock value */
1706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cp)
1709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1712:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
1714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1722:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_1_FL
1727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                              ptrWdgt->snsClk = CapSense_1_dsRam.modCsdClk;
1729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
1731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif
1733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1734:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (cpRow > cp)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 32


1742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1744:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Non-CSD widget */
1752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1756:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #2:
1759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with new sense clock frequency
1760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting resolution
1761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1762:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune resolution for all the widgets */
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1771:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1774:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1777:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set parasitic capacitance for columns */
1779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1780:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1787:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1794:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Set parasitic capacitance for rows */
1796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1797:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get IDAC */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 33


1799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get finger capacitance */
1805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Init pointer to sigPFC */
1808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1809:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find resolution */
1811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1814:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #3:
1817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - selecting a widget clock source if AUTO
1818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - updating sensitivity
1820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1821:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sensitivity for all the widgets */
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1832:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
1837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
1838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
1839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return autoTuneStatus;
1843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1844:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) */
1845:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1846:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1847:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
1848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) ||\
1850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
1851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSinking
1853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 34


1856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1863:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void)
1865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1867:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sinking Mode */
1869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM2_PTR) & ~CapSense_1_IDAC_TRIM2_MOD_SNK_MASK;
1870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1871:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK) ;
1872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1873:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1874:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1875:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM2_COMP_SNK_MASK;
1876:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1877:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1878:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1880:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1881:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM2_PTR, trimValue);
1882:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1883:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1884:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
1885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1887:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1888:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) || \
1889:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
1890:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1891:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSourcing
1892:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1893:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1894:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
1895:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1896:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1897:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1898:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1899:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1900:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1901:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void)
1904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1906:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM1_PTR) & ~CapSense_1_IDAC_TRIM1_MOD_SRC_MASK;
1909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK);
1911:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 35


1913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM1_COMP_SRC_MASK;
1915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1918:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM1_PTR, trimValue);
1921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
1924:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1925:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsTrimIdacs
1928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1937:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  source mode based on sink/source mode configuration.
1938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void)
1942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
1947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_
1953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1954:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
1955:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1957:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeImoFreq
1960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the IMO frequency.
1964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  trims are contained in the CapSense_1_immunity[value] array for each
1968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  frequency channel.
1969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 36


1970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param value The frequency channel ID.
1971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeImoFreq(uint32 value)
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1978:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1979:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeClkFreq
1980:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1981:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1982:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1983:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1984:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1985:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1986:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1987:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1988:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1989:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1990:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param chId
1991:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The frequency channel ID.
1992:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1993:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1994:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeClkFreq(uint32 chId)
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1996:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
1997:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset1 = 0u;
1998:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset2 = 0u;
1999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2000:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2004:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 snsClkSrc;
2009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2011:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((0u != CapSense_1_TOTAL_CSD_WIDGETS) || \
2013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_1_TOTAL_CS
2014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_1_dsFlash.wdgtArray[CapSense
2015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)ptrFlas
2016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch(CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex]))
2019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
2022:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get sensor clock divider value */
2023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
2024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsdClk;
2025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2026:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 37


2027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2030:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2038:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2039:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2041:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F1;
2042:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F2;
2043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2044:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2045:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2046:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2047:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Get sense clk source */
2048:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2049:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2050:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2051:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2052:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2053:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2054:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2055:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2056:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2057:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2058:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2059:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2060:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2062:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2063:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2065:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset1 <<= 1u;
2068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset2 <<= 1u;
2069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2070:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2075:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2076:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
2080:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 38


2084:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2088:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2094:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2096:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)
2098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM
2099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2105:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2106:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2107:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider >>= 1;
2110:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (snsClkDivider == 0u)
2111:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2112:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = 1u;
2113:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2114:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2116:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2117:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2118:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2119:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2121:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2122:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSD_WIDGETS) */
2126:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSX_WIDGETS)
2128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
2130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsxClk;
2131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F1;
2135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F2;
2136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2137:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 39


2141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2155:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2159:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSX_WIDGETS) */
2161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CYASSERT(0);
2164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2)))
2173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitializeSourceSenseClk
2175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2177:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2178:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2179:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  for all CSD widgets.
2183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsInitializeSourceSenseClk(void)
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2187:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
2188:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
2191:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2Wdgt
2193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2194:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 40


2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2199:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2204:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2205:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_IS
2206:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2207:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2208:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2209:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
2210:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
2211:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
2212:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2215:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
2216:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_ISX_EN)) && \
2217:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2))) */
2218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2221:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2222:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetSenseClkSrc
2223:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2224:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2230:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget.
2236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2237:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
2239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
  27              		.loc 1 2239 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2243:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 41


2249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2251:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             snsClkDivider = CapSense_1_SsCSDGetColSnsClkDivider(wdgtIndex);
2252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrW
2255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                              CapSen
2256:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /*
2260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * average PRS frequency through the argument.
2262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     */
2263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->r
2264:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
2268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2269:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * average PRS frequency through the argument.
2270:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
2271:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resol
2272:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2273:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2274:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2275:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2276:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2277:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2278:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2280:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
  33              		.loc 1 2280 0
  34 0000 0023     		movs	r3, #0
  35 0002 0B73     		strb	r3, [r1, #12]
2281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2283:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
2284:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
2285:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_SsCSDGetRowSnsClkDivider(wdgtIndex);
2288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /*
2294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * average PRS frequency through the argument.
2296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             */
2297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)pt
2298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
2302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 42


2303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * average PRS frequency through the argument.
2304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
2305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdg
2306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = 0u;
2307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
2309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrScale = 0u;
2311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LF
2313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
  36              		.loc 1 2315 0
  37              		@ sp needed
  38 0004 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE19:
  41              		.size	CapSense_1_SsSetWidgetSenseClkSrc, .-CapSense_1_SsSetWidgetSenseClkSrc
  42 0006 C046     		.section	.text.CapSense_1_SsCSDDisableMode,"ax",%progbits
  43              		.align	2
  44              		.code	16
  45              		.thumb_func
  46              		.type	CapSense_1_SsCSDDisableMode, %function
  47              	CapSense_1_SsCSDDisableMode:
  48              	.LFB7:
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
  49              		.loc 1 763 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53 0000 10B5     		push	{r4, lr}
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 4, -8
  56              		.cfi_offset 14, -4
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
  57              		.loc 1 767 0
  58 0002 064A     		ldr	r2, .L3
  59 0004 1368     		ldr	r3, [r2]
  60              	.LVL1:
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
  61              		.loc 1 768 0
  62 0006 F021     		movs	r1, #240
  63 0008 8B43     		bics	r3, r1
  64              	.LVL2:
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  65              		.loc 1 769 0
  66 000a 1360     		str	r3, [r2]
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
  67              		.loc 1 775 0
  68 000c 044A     		ldr	r2, .L3+4
  69 000e 1368     		ldr	r3, [r2]
  70              	.LVL3:
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
  71              		.loc 1 776 0
  72 0010 EF39     		subs	r1, r1, #239
  73 0012 8B43     		bics	r3, r1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 43


  74              	.LVL4:
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
  75              		.loc 1 777 0
  76 0014 1360     		str	r3, [r2]
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  77              		.loc 1 783 0
  78 0016 FFF7FEFF 		bl	CapSense_1_SsCSDElectrodeCheck
  79              	.LVL5:
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  80              		.loc 1 799 0
  81              		@ sp needed
  82 001a 10BD     		pop	{r4, pc}
  83              	.L4:
  84              		.align	2
  85              	.L3:
  86 001c 00040240 		.word	1073873920
  87 0020 A8020B40 		.word	1074463400
  88              		.cfi_endproc
  89              	.LFE7:
  90              		.size	CapSense_1_SsCSDDisableMode, .-CapSense_1_SsCSDDisableMode
  91              		.section	.text.CapSense_1_IsBusy,"ax",%progbits
  92              		.align	2
  93              		.global	CapSense_1_IsBusy
  94              		.code	16
  95              		.thumb_func
  96              		.type	CapSense_1_IsBusy, %function
  97              	CapSense_1_IsBusy:
  98              	.LFB1:
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
  99              		.loc 1 234 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 104              		.loc 1 235 0
 105 0000 024B     		ldr	r3, .L6
 106 0002 DB68     		ldr	r3, [r3, #12]
 107 0004 8020     		movs	r0, #128
 108 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 109              		.loc 1 236 0
 110              		@ sp needed
 111 0008 7047     		bx	lr
 112              	.L7:
 113 000a C046     		.align	2
 114              	.L6:
 115 000c 00000000 		.word	CapSense_1_dsRam
 116              		.cfi_endproc
 117              	.LFE1:
 118              		.size	CapSense_1_IsBusy, .-CapSense_1_IsBusy
 119              		.section	.text.CapSense_1_SetupWidget,"ax",%progbits
 120              		.align	2
 121              		.global	CapSense_1_SetupWidget
 122              		.code	16
 123              		.thumb_func
 124              		.type	CapSense_1_SetupWidget, %function
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 44


 125              	CapSense_1_SetupWidget:
 126              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 127              		.loc 1 286 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              	.LVL6:
 132 0000 10B5     		push	{r4, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 4, -8
 135              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 136              		.loc 1 289 0
 137 0002 0E4B     		ldr	r3, .L14
 138 0004 DB68     		ldr	r3, [r3, #12]
 139 0006 DB03     		lsls	r3, r3, #15
 140 0008 0DD4     		bmi	.L11
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 141              		.loc 1 299 0
 142 000a 0428     		cmp	r0, #4
 143 000c 0DD8     		bhi	.L12
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 144              		.loc 1 300 0 discriminator 1
 145 000e 4309     		lsrs	r3, r0, #5
 146 0010 0433     		adds	r3, r3, #4
 147 0012 9B00     		lsls	r3, r3, #2
 148 0014 094A     		ldr	r2, .L14
 149 0016 9B58     		ldr	r3, [r3, r2]
 150 0018 1F22     		movs	r2, #31
 151 001a 0240     		ands	r2, r0
 152 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 153              		.loc 1 299 0 discriminator 1
 154 001e DB07     		lsls	r3, r3, #31
 155 0020 05D4     		bmi	.L13
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 156              		.loc 1 307 0
 157 0022 0124     		movs	r4, #1
 158 0024 04E0     		b	.L9
 159              	.L11:
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 160              		.loc 1 292 0
 161 0026 1124     		movs	r4, #17
 162 0028 02E0     		b	.L9
 163              	.L12:
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 164              		.loc 1 307 0
 165 002a 0124     		movs	r4, #1
 166 002c 00E0     		b	.L9
 167              	.L13:
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 168              		.loc 1 303 0
 169 002e 0024     		movs	r4, #0
 170              	.L9:
 171              	.LVL7:
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 45


 172              		.loc 1 314 0
 173 0030 002C     		cmp	r4, #0
 174 0032 01D1     		bne	.L10
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 175              		.loc 1 327 0
 176 0034 FFF7FEFF 		bl	CapSense_1_CSDSetupWidget
 177              	.LVL8:
 178              	.L10:
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 179              		.loc 1 343 0
 180 0038 2000     		movs	r0, r4
 181              		@ sp needed
 182              	.LVL9:
 183 003a 10BD     		pop	{r4, pc}
 184              	.L15:
 185              		.align	2
 186              	.L14:
 187 003c 00000000 		.word	CapSense_1_dsRam
 188              		.cfi_endproc
 189              	.LFE2:
 190              		.size	CapSense_1_SetupWidget, .-CapSense_1_SetupWidget
 191              		.section	.text.CapSense_1_Scan,"ax",%progbits
 192              		.align	2
 193              		.global	CapSense_1_Scan
 194              		.code	16
 195              		.thumb_func
 196              		.type	CapSense_1_Scan, %function
 197              	CapSense_1_Scan:
 198              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 199              		.loc 1 369 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 10B5     		push	{r4, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 4, -8
 206              		.cfi_offset 14, -4
 207              	.LVL10:
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 208              		.loc 1 372 0
 209 0002 084B     		ldr	r3, .L22
 210 0004 DB68     		ldr	r3, [r3, #12]
 211 0006 DB03     		lsls	r3, r3, #15
 212 0008 07D4     		bmi	.L19
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 213              		.loc 1 379 0
 214 000a 074B     		ldr	r3, .L22+4
 215 000c 1B78     		ldrb	r3, [r3]
 216 000e 012B     		cmp	r3, #1
 217 0010 05D1     		bne	.L21
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 218              		.loc 1 388 0
 219 0012 FFF7FEFF 		bl	CapSense_1_CSDScan
 220              	.LVL11:
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 221              		.loc 1 370 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 46


 222 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 223              		.loc 1 389 0
 224 0018 03E0     		b	.L17
 225              	.L19:
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 226              		.loc 1 375 0
 227 001a 1120     		movs	r0, #17
 228 001c 01E0     		b	.L17
 229              	.L21:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 230              		.loc 1 397 0
 231 001e 0120     		movs	r0, #1
 232 0020 4042     		rsbs	r0, r0, #0
 233              	.L17:
 234              	.LVL12:
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 235              		.loc 1 402 0
 236              		@ sp needed
 237 0022 10BD     		pop	{r4, pc}
 238              	.L23:
 239              		.align	2
 240              	.L22:
 241 0024 00000000 		.word	CapSense_1_dsRam
 242 0028 00000000 		.word	.LANCHOR0
 243              		.cfi_endproc
 244              	.LFE3:
 245              		.size	CapSense_1_Scan, .-CapSense_1_Scan
 246              		.section	.text.CapSense_1_ScanAllWidgets,"ax",%progbits
 247              		.align	2
 248              		.global	CapSense_1_ScanAllWidgets
 249              		.code	16
 250              		.thumb_func
 251              		.type	CapSense_1_ScanAllWidgets, %function
 252              	CapSense_1_ScanAllWidgets:
 253              	.LFB4:
 431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 254              		.loc 1 431 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 10B5     		push	{r4, lr}
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 4, -8
 261              		.cfi_offset 14, -4
 262              	.LVL13:
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 263              		.loc 1 436 0
 264 0002 0F4B     		ldr	r3, .L32
 265 0004 DB68     		ldr	r3, [r3, #12]
 266 0006 1B06     		lsls	r3, r3, #24
 267 0008 18D4     		bmi	.L31
 268 000a 0024     		movs	r4, #0
 269 000c 0120     		movs	r0, #1
 270 000e 4042     		rsbs	r0, r0, #0
 271 0010 11E0     		b	.L26
 272              	.LVL14:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 47


 273              	.L30:
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 274              		.loc 1 452 0
 275 0012 2000     		movs	r0, r4
 276              	.LVL15:
 277 0014 FFF7FEFF 		bl	CapSense_1_SetupWidget
 278              	.LVL16:
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 279              		.loc 1 454 0
 280 0018 0028     		cmp	r0, #0
 281 001a 0BD1     		bne	.L27
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 282              		.loc 1 458 0
 283 001c 032C     		cmp	r4, #3
 284 001e 03D8     		bhi	.L28
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 285              		.loc 1 461 0
 286 0020 0122     		movs	r2, #1
 287 0022 084B     		ldr	r3, .L32+4
 288 0024 5A70     		strb	r2, [r3, #1]
 289 0026 02E0     		b	.L29
 290              	.L28:
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 291              		.loc 1 466 0
 292 0028 0022     		movs	r2, #0
 293 002a 064B     		ldr	r3, .L32+4
 294 002c 5A70     		strb	r2, [r3, #1]
 295              	.L29:
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 296              		.loc 1 476 0
 297 002e FFF7FEFF 		bl	CapSense_1_Scan
 298              	.LVL17:
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 299              		.loc 1 478 0
 300 0032 04E0     		b	.L25
 301              	.L27:
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 302              		.loc 1 449 0
 303 0034 0134     		adds	r4, r4, #1
 304              	.LVL18:
 305              	.L26:
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 306              		.loc 1 447 0 discriminator 1
 307 0036 042C     		cmp	r4, #4
 308 0038 EBD9     		bls	.L30
 309 003a 00E0     		b	.L25
 310              	.LVL19:
 311              	.L31:
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 312              		.loc 1 439 0
 313 003c 1120     		movs	r0, #17
 314              	.LVL20:
 315              	.L25:
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 316              		.loc 1 484 0
 317              		@ sp needed
 318 003e 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 48


 319              	.L33:
 320              		.align	2
 321              	.L32:
 322 0040 00000000 		.word	CapSense_1_dsRam
 323 0044 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE4:
 326              		.size	CapSense_1_ScanAllWidgets, .-CapSense_1_ScanAllWidgets
 327              		.section	.text.CapSense_1_SetPinState,"ax",%progbits
 328              		.align	2
 329              		.global	CapSense_1_SetPinState
 330              		.code	16
 331              		.thumb_func
 332              		.type	CapSense_1_SetPinState, %function
 333              	CapSense_1_SetPinState:
 334              	.LFB6:
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 335              		.loc 1 650 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              	.LVL21:
 340 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 341              		.cfi_def_cfa_offset 24
 342              		.cfi_offset 3, -24
 343              		.cfi_offset 4, -20
 344              		.cfi_offset 5, -16
 345              		.cfi_offset 6, -12
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 1600     		movs	r6, r2
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 349              		.loc 1 675 0
 350 0004 4001     		lsls	r0, r0, #5
 351              	.LVL22:
 352 0006 244B     		ldr	r3, .L41
 353 0008 C458     		ldr	r4, [r0, r3]
 354 000a CB00     		lsls	r3, r1, #3
 355 000c 591A     		subs	r1, r3, r1
 356              	.LVL23:
 357 000e 8B00     		lsls	r3, r1, #2
 358 0010 E418     		adds	r4, r4, r3
 359              	.LVL24:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 360              		.loc 1 680 0
 361 0012 0025     		movs	r5, #0
 362 0014 3CE0     		b	.L35
 363              	.LVL25:
 364              	.L40:
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 365              		.loc 1 683 0
 366 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 367              	.LVL26:
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 368              		.loc 1 684 0
 369 001a 2168     		ldr	r1, [r4]
 370 001c 0B68     		ldr	r3, [r1]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 49


 371 001e 277E     		ldrb	r7, [r4, #24]
 372 0020 0F22     		movs	r2, #15
 373 0022 BA40     		lsls	r2, r2, r7
 374 0024 9343     		bics	r3, r2
 375 0026 0B60     		str	r3, [r1]
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 376              		.loc 1 685 0
 377 0028 6168     		ldr	r1, [r4, #4]
 378 002a 0B68     		ldr	r3, [r1]
 379 002c A77E     		ldrb	r7, [r4, #26]
 380 002e 0722     		movs	r2, #7
 381 0030 BA40     		lsls	r2, r2, r7
 382 0032 9343     		bics	r3, r2
 383 0034 0B60     		str	r3, [r1]
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 384              		.loc 1 686 0
 385 0036 FFF7FEFF 		bl	CyExitCriticalSection
 386              	.LVL27:
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 387              		.loc 1 688 0
 388 003a 012E     		cmp	r6, #1
 389 003c 17D0     		beq	.L37
 390 003e 002E     		cmp	r6, #0
 391 0040 02D0     		beq	.L38
 392 0042 032E     		cmp	r6, #3
 393 0044 1FD0     		beq	.L39
 394 0046 21E0     		b	.L36
 395              	.L38:
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 396              		.loc 1 692 0
 397 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 398              	.LVL28:
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 399              		.loc 1 693 0
 400 004c 6268     		ldr	r2, [r4, #4]
 401 004e 1168     		ldr	r1, [r2]
 402 0050 A77E     		ldrb	r7, [r4, #26]
 403 0052 0623     		movs	r3, #6
 404 0054 BB40     		lsls	r3, r3, r7
 405 0056 0B43     		orrs	r3, r1
 406 0058 1360     		str	r3, [r2]
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 407              		.loc 1 694 0
 408 005a A168     		ldr	r1, [r4, #8]
 409 005c 0B68     		ldr	r3, [r1]
 410 005e 677E     		ldrb	r7, [r4, #25]
 411 0060 0122     		movs	r2, #1
 412 0062 BA40     		lsls	r2, r2, r7
 413 0064 9343     		bics	r3, r2
 414 0066 0B60     		str	r3, [r1]
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 415              		.loc 1 695 0
 416 0068 FFF7FEFF 		bl	CyExitCriticalSection
 417              	.LVL29:
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 418              		.loc 1 696 0
 419 006c 0EE0     		b	.L36
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 50


 420              	.L37:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 421              		.loc 1 699 0
 422 006e FFF7FEFF 		bl	CyEnterCriticalSection
 423              	.LVL30:
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 424              		.loc 1 700 0
 425 0072 A168     		ldr	r1, [r4, #8]
 426 0074 0B68     		ldr	r3, [r1]
 427 0076 677E     		ldrb	r7, [r4, #25]
 428 0078 0122     		movs	r2, #1
 429 007a BA40     		lsls	r2, r2, r7
 430 007c 9343     		bics	r3, r2
 431 007e 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 432              		.loc 1 701 0
 433 0080 FFF7FEFF 		bl	CyExitCriticalSection
 434              	.LVL31:
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 435              		.loc 1 702 0
 436 0084 02E0     		b	.L36
 437              	.L39:
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 438              		.loc 1 707 0
 439 0086 2000     		movs	r0, r4
 440 0088 FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 441              	.LVL32:
 442              	.L36:
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 443              		.loc 1 742 0 discriminator 2
 444 008c 1C34     		adds	r4, r4, #28
 445              	.LVL33:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 446              		.loc 1 680 0 discriminator 2
 447 008e 0135     		adds	r5, r5, #1
 448              	.LVL34:
 449              	.L35:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 450              		.loc 1 680 0 is_stmt 0 discriminator 1
 451 0090 002D     		cmp	r5, #0
 452 0092 C0D0     		beq	.L40
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 453              		.loc 1 744 0 is_stmt 1
 454              		@ sp needed
 455              	.LVL35:
 456              	.LVL36:
 457              	.LVL37:
 458 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 459              	.L42:
 460 0096 C046     		.align	2
 461              	.L41:
 462 0098 00000000 		.word	CapSense_1_dsFlash
 463              		.cfi_endproc
 464              	.LFE6:
 465              		.size	CapSense_1_SetPinState, .-CapSense_1_SetPinState
 466              		.section	.text.CapSense_1_SsSwitchSensingMode,"ax",%progbits
 467              		.align	2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 51


 468              		.global	CapSense_1_SsSwitchSensingMode
 469              		.code	16
 470              		.thumb_func
 471              		.type	CapSense_1_SsSwitchSensingMode, %function
 472              	CapSense_1_SsSwitchSensingMode:
 473              	.LFB8:
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 474              		.loc 1 902 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              	.LVL38:
 479 0000 10B5     		push	{r4, lr}
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 4, -8
 482              		.cfi_offset 14, -4
 483 0002 0400     		movs	r4, r0
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 484              		.loc 1 903 0
 485 0004 0C4B     		ldr	r3, .L47
 486 0006 1B78     		ldrb	r3, [r3]
 487 0008 8342     		cmp	r3, r0
 488 000a 14D0     		beq	.L43
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 489              		.loc 1 906 0
 490 000c 012B     		cmp	r3, #1
 491 000e 01D1     		bne	.L45
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 492              		.loc 1 909 0
 493 0010 FFF7FEFF 		bl	CapSense_1_SsCSDDisableMode
 494              	.LVL39:
 495              	.L45:
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 496              		.loc 1 939 0
 497 0014 012C     		cmp	r4, #1
 498 0016 05D1     		bne	.L46
 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 499              		.loc 1 943 0
 500 0018 FFF7FEFF 		bl	CapSense_1_SsCSDInitialize
 501              	.LVL40:
 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 502              		.loc 1 944 0
 503 001c 0122     		movs	r2, #1
 504 001e 064B     		ldr	r3, .L47
 505 0020 1A70     		strb	r2, [r3]
 506 0022 08E0     		b	.L43
 507              	.L46:
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 508              		.loc 1 947 0
 509 0024 022C     		cmp	r4, #2
 510 0026 06D0     		beq	.L43
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 511              		.loc 1 955 0
 512 0028 042C     		cmp	r4, #4
 513 002a 04D0     		beq	.L43
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 514              		.loc 1 963 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 52


 515 002c 032C     		cmp	r4, #3
 516 002e 02D0     		beq	.L43
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 517              		.loc 1 972 0
 518 0030 0022     		movs	r2, #0
 519 0032 014B     		ldr	r3, .L47
 520 0034 1A70     		strb	r2, [r3]
 521              	.L43:
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 522              		.loc 1 975 0
 523              		@ sp needed
 524 0036 10BD     		pop	{r4, pc}
 525              	.L48:
 526              		.align	2
 527              	.L47:
 528 0038 00000000 		.word	.LANCHOR0
 529              		.cfi_endproc
 530              	.LFE8:
 531              		.size	CapSense_1_SsSwitchSensingMode, .-CapSense_1_SsSwitchSensingMode
 532              		.section	.text.CapSense_1_SsSetIOsInDefaultState,"ax",%progbits
 533              		.align	2
 534              		.global	CapSense_1_SsSetIOsInDefaultState
 535              		.code	16
 536              		.thumb_func
 537              		.type	CapSense_1_SsSetIOsInDefaultState, %function
 538              	CapSense_1_SsSetIOsInDefaultState:
 539              	.LFB9:
1001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
 540              		.loc 1 1001 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 0
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544 0000 30B5     		push	{r4, r5, lr}
 545              		.cfi_def_cfa_offset 12
 546              		.cfi_offset 4, -12
 547              		.cfi_offset 5, -8
 548              		.cfi_offset 14, -4
 549              	.LVL41:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 550              		.loc 1 1007 0
 551 0002 0020     		movs	r0, #0
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
 552              		.loc 1 1002 0
 553 0004 0D4B     		ldr	r3, .L52
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 554              		.loc 1 1007 0
 555 0006 16E0     		b	.L50
 556              	.LVL42:
 557              	.L51:
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 558              		.loc 1 1014 0 discriminator 3
 559 0008 1968     		ldr	r1, [r3]
 560 000a 0A68     		ldr	r2, [r1]
 561              	.LVL43:
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 562              		.loc 1 1015 0 discriminator 3
 563 000c 1C69     		ldr	r4, [r3, #16]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 53


 564 000e A243     		bics	r2, r4
 565              	.LVL44:
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 566              		.loc 1 1016 0 discriminator 3
 567 0010 0A60     		str	r2, [r1]
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
 568              		.loc 1 1018 0 discriminator 3
 569 0012 5C68     		ldr	r4, [r3, #4]
 570 0014 2268     		ldr	r2, [r4]
 571              	.LVL45:
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
 572              		.loc 1 1019 0 discriminator 3
 573 0016 9D7E     		ldrb	r5, [r3, #26]
 574 0018 0721     		movs	r1, #7
 575 001a A940     		lsls	r1, r1, r5
 576 001c 8A43     		bics	r2, r1
 577              	.LVL46:
 578 001e 1100     		movs	r1, r2
 579              	.LVL47:
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 580              		.loc 1 1020 0 discriminator 3
 581 0020 0622     		movs	r2, #6
 582 0022 AA40     		lsls	r2, r2, r5
 583 0024 0A43     		orrs	r2, r1
 584              	.LVL48:
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 585              		.loc 1 1021 0 discriminator 3
 586 0026 2260     		str	r2, [r4]
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
 587              		.loc 1 1023 0 discriminator 3
 588 0028 9968     		ldr	r1, [r3, #8]
 589 002a 0A68     		ldr	r2, [r1]
 590              	.LVL49:
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 591              		.loc 1 1024 0 discriminator 3
 592 002c 5C69     		ldr	r4, [r3, #20]
 593 002e A243     		bics	r2, r4
 594              	.LVL50:
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 595              		.loc 1 1025 0 discriminator 3
 596 0030 0A60     		str	r2, [r1]
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 597              		.loc 1 1028 0 discriminator 3
 598 0032 1C33     		adds	r3, r3, #28
 599              	.LVL51:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 600              		.loc 1 1007 0 discriminator 3
 601 0034 0130     		adds	r0, r0, #1
 602              	.LVL52:
 603              	.L50:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 604              		.loc 1 1007 0 is_stmt 0 discriminator 1
 605 0036 0428     		cmp	r0, #4
 606 0038 E6D9     		bls	.L51
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 607              		.loc 1 1038 0 is_stmt 1
 608              		@ sp needed
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 54


 609 003a 30BD     		pop	{r4, r5, pc}
 610              	.L53:
 611              		.align	2
 612              	.L52:
 613 003c 00000000 		.word	CapSense_1_ioList
 614              		.cfi_endproc
 615              	.LFE9:
 616              		.size	CapSense_1_SsSetIOsInDefaultState, .-CapSense_1_SsSetIOsInDefaultState
 617              		.section	.text.CapSense_1_SsPostAllWidgetsScan,"ax",%progbits
 618              		.align	2
 619              		.global	CapSense_1_SsPostAllWidgetsScan
 620              		.code	16
 621              		.thumb_func
 622              		.type	CapSense_1_SsPostAllWidgetsScan, %function
 623              	CapSense_1_SsPostAllWidgetsScan:
 624              	.LFB10:
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 625              		.loc 1 1123 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 0
 628              		@ frame_needed = 0, uses_anonymous_args = 0
 629 0000 10B5     		push	{r4, lr}
 630              		.cfi_def_cfa_offset 8
 631              		.cfi_offset 4, -8
 632              		.cfi_offset 14, -4
 633              	.L59:
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 634              		.loc 1 1134 0
 635 0002 1B4A     		ldr	r2, .L60
 636 0004 9378     		ldrb	r3, [r2, #2]
 637 0006 0133     		adds	r3, r3, #1
 638 0008 DBB2     		uxtb	r3, r3
 639 000a 9370     		strb	r3, [r2, #2]
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 640              		.loc 1 1136 0
 641 000c 9078     		ldrb	r0, [r2, #2]
 642 000e C0B2     		uxtb	r0, r0
 643 0010 FFF7FEFF 		bl	CapSense_1_SetupWidget
 644              	.LVL53:
 645 0014 041E     		subs	r4, r0, #0
 646              	.LVL54:
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 647              		.loc 1 1138 0
 648 0016 09D1     		bne	.L55
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 649              		.loc 1 1140 0
 650 0018 154B     		ldr	r3, .L60
 651 001a 9B78     		ldrb	r3, [r3, #2]
 652 001c 042B     		cmp	r3, #4
 653 001e 02D1     		bne	.L56
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 654              		.loc 1 1143 0
 655 0020 0022     		movs	r2, #0
 656 0022 134B     		ldr	r3, .L60
 657 0024 5A70     		strb	r2, [r3, #1]
 658              	.L56:
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 55


 659              		.loc 1 1145 0
 660 0026 FFF7FEFF 		bl	CapSense_1_Scan
 661              	.LVL55:
 662 002a 1EE0     		b	.L57
 663              	.LVL56:
 664              	.L55:
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 665              		.loc 1 1147 0
 666 002c 104B     		ldr	r3, .L60
 667 002e 9B78     		ldrb	r3, [r3, #2]
 668 0030 042B     		cmp	r3, #4
 669 0032 11D1     		bne	.L58
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 670              		.loc 1 1161 0
 671 0034 0F4B     		ldr	r3, .L60+4
 672 0036 1A89     		ldrh	r2, [r3, #8]
 673 0038 0132     		adds	r2, r2, #1
 674 003a 1A81     		strh	r2, [r3, #8]
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 675              		.loc 1 1163 0
 676 003c DA68     		ldr	r2, [r3, #12]
 677 003e 8021     		movs	r1, #128
 678 0040 8A43     		bics	r2, r1
 679 0042 DA60     		str	r2, [r3, #12]
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
 680              		.loc 1 1166 0
 681 0044 DA68     		ldr	r2, [r3, #12]
 682 0046 1202     		lsls	r2, r2, #8
 683 0048 120A     		lsrs	r2, r2, #8
 684 004a DA60     		str	r2, [r3, #12]
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 685              		.loc 1 1167 0
 686 004c DA68     		ldr	r2, [r3, #12]
 687 004e 0406     		lsls	r4, r0, #24
 688 0050 1443     		orrs	r4, r2
 689 0052 DC60     		str	r4, [r3, #12]
 690              	.LVL57:
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 691              		.loc 1 1170 0
 692 0054 0024     		movs	r4, #0
 693 0056 08E0     		b	.L57
 694              	.LVL58:
 695              	.L58:
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
 696              		.loc 1 1175 0
 697 0058 064A     		ldr	r2, .L60+4
 698 005a D368     		ldr	r3, [r2, #12]
 699 005c 1B02     		lsls	r3, r3, #8
 700 005e 1B0A     		lsrs	r3, r3, #8
 701 0060 D360     		str	r3, [r2, #12]
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 702              		.loc 1 1176 0
 703 0062 D168     		ldr	r1, [r2, #12]
 704 0064 0306     		lsls	r3, r0, #24
 705 0066 0B43     		orrs	r3, r1
 706 0068 D360     		str	r3, [r2, #12]
 707              	.LVL59:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 56


 708              	.L57:
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
 709              		.loc 1 1178 0
 710 006a 002C     		cmp	r4, #0
 711 006c C9D1     		bne	.L59
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 712              		.loc 1 1180 0
 713              		@ sp needed
 714              	.LVL60:
 715 006e 10BD     		pop	{r4, pc}
 716              	.L61:
 717              		.align	2
 718              	.L60:
 719 0070 00000000 		.word	.LANCHOR0
 720 0074 00000000 		.word	CapSense_1_dsRam
 721              		.cfi_endproc
 722              	.LFE10:
 723              		.size	CapSense_1_SsPostAllWidgetsScan, .-CapSense_1_SsPostAllWidgetsScan
 724              		.section	.text.CapSense_1_SsIsrInitialize,"ax",%progbits
 725              		.align	2
 726              		.global	CapSense_1_SsIsrInitialize
 727              		.code	16
 728              		.thumb_func
 729              		.type	CapSense_1_SsIsrInitialize, %function
 730              	CapSense_1_SsIsrInitialize:
 731              	.LFB11:
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
 732              		.loc 1 1200 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              	.LVL61:
 737 0000 10B5     		push	{r4, lr}
 738              		.cfi_def_cfa_offset 8
 739              		.cfi_offset 4, -8
 740              		.cfi_offset 14, -4
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 741              		.loc 1 1201 0
 742 0002 FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 743              	.LVL62:
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 744              		.loc 1 1202 0
 745              		@ sp needed
 746 0006 10BD     		pop	{r4, pc}
 747              		.cfi_endproc
 748              	.LFE11:
 749              		.size	CapSense_1_SsIsrInitialize, .-CapSense_1_SsIsrInitialize
 750              		.section	.text.CapSense_1_SsSetModClkClockDivider,"ax",%progbits
 751              		.align	2
 752              		.global	CapSense_1_SsSetModClkClockDivider
 753              		.code	16
 754              		.thumb_func
 755              		.type	CapSense_1_SsSetModClkClockDivider, %function
 756              	CapSense_1_SsSetModClkClockDivider:
 757              	.LFB12:
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
 758              		.loc 1 1223 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 57


 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 0, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 763              	.LVL63:
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
 764              		.loc 1 1226 0
 765 0000 074A     		ldr	r2, .L65
 766 0002 084B     		ldr	r3, .L65+4
 767 0004 1A60     		str	r2, [r3]
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 768              		.loc 1 1236 0
 769 0006 0138     		subs	r0, r0, #1
 770              	.LVL64:
 771 0008 0002     		lsls	r0, r0, #8
 772              	.LVL65:
 773 000a 074B     		ldr	r3, .L65+8
 774 000c 1860     		str	r0, [r3]
 775              	.L64:
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 776              		.loc 1 1239 0 discriminator 1
 777 000e 054B     		ldr	r3, .L65+4
 778 0010 1B68     		ldr	r3, [r3]
 779 0012 002B     		cmp	r3, #0
 780 0014 FBDB     		blt	.L64
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
 781              		.loc 1 1245 0
 782 0016 054A     		ldr	r2, .L65+12
 783 0018 024B     		ldr	r3, .L65+4
 784 001a 1A60     		str	r2, [r3]
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 785              		.loc 1 1270 0
 786              		@ sp needed
 787 001c 7047     		bx	lr
 788              	.L66:
 789 001e C046     		.align	2
 790              	.L65:
 791 0020 40000040 		.word	1073741888
 792 0024 00000140 		.word	1073807360
 793 0028 00030140 		.word	1073808128
 794 002c 40FF0080 		.word	-2147418304
 795              		.cfi_endproc
 796              	.LFE12:
 797              		.size	CapSense_1_SsSetModClkClockDivider, .-CapSense_1_SsSetModClkClockDivider
 798              		.section	.text.CapSense_1_SsSetSnsClockDivider,"ax",%progbits
 799              		.align	2
 800              		.global	CapSense_1_SsSetSnsClockDivider
 801              		.code	16
 802              		.thumb_func
 803              		.type	CapSense_1_SsSetSnsClockDivider, %function
 804              	CapSense_1_SsSetSnsClockDivider:
 805              	.LFB13:
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 806              		.loc 1 1291 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 0
 809              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 58


 810              		@ link register save eliminated.
 811              	.LVL66:
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
 812              		.loc 1 1300 0
 813 0000 034A     		ldr	r2, .L68
 814 0002 1368     		ldr	r3, [r2]
 815              	.LVL67:
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
 816              		.loc 1 1301 0
 817 0004 1B0B     		lsrs	r3, r3, #12
 818              	.LVL68:
 819 0006 1B03     		lsls	r3, r3, #12
 820              	.LVL69:
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
 821              		.loc 1 1302 0
 822 0008 0138     		subs	r0, r0, #1
 823              	.LVL70:
 824 000a 1843     		orrs	r0, r3
 825              	.LVL71:
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 826              		.loc 1 1303 0
 827 000c 1060     		str	r0, [r2]
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 828              		.loc 1 1352 0
 829              		@ sp needed
 830 000e 7047     		bx	lr
 831              	.L69:
 832              		.align	2
 833              	.L68:
 834 0010 00020B40 		.word	1074463232
 835              		.cfi_endproc
 836              	.LFE13:
 837              		.size	CapSense_1_SsSetSnsClockDivider, .-CapSense_1_SsSetSnsClockDivider
 838              		.section	.text.CapSense_1_SsSetClockDividers,"ax",%progbits
 839              		.align	2
 840              		.global	CapSense_1_SsSetClockDividers
 841              		.code	16
 842              		.thumb_func
 843              		.type	CapSense_1_SsSetClockDividers, %function
 844              	CapSense_1_SsSetClockDividers:
 845              	.LFB14:
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
 846              		.loc 1 1375 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 0
 849              		@ frame_needed = 0, uses_anonymous_args = 0
 850              	.LVL72:
 851 0000 10B5     		push	{r4, lr}
 852              		.cfi_def_cfa_offset 8
 853              		.cfi_offset 4, -8
 854              		.cfi_offset 14, -4
 855 0002 0400     		movs	r4, r0
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 856              		.loc 1 1377 0
 857 0004 0800     		movs	r0, r1
 858              	.LVL73:
 859 0006 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 59


 860              	.LVL74:
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 861              		.loc 1 1380 0
 862 000a 2000     		movs	r0, r4
 863 000c FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 864              	.LVL75:
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 865              		.loc 1 1381 0
 866              		@ sp needed
 867              	.LVL76:
 868 0010 10BD     		pop	{r4, pc}
 869              		.cfi_endproc
 870              	.LFE14:
 871              		.size	CapSense_1_SsSetClockDividers, .-CapSense_1_SsSetClockDividers
 872 0012 C046     		.section	.text.CapSense_1_CalibrateWidget,"ax",%progbits
 873              		.align	2
 874              		.global	CapSense_1_CalibrateWidget
 875              		.code	16
 876              		.thumb_func
 877              		.type	CapSense_1_CalibrateWidget, %function
 878              	CapSense_1_CalibrateWidget:
 879              	.LFB15:
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 880              		.loc 1 1427 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              	.LVL77:
 885 0000 10B5     		push	{r4, lr}
 886              		.cfi_def_cfa_offset 8
 887              		.cfi_offset 4, -8
 888              		.cfi_offset 14, -4
 889 0002 0300     		movs	r3, r0
 890              	.LVL78:
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 891              		.loc 1 1432 0
 892 0004 0428     		cmp	r0, #4
 893 0006 01D8     		bhi	.L74
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 894              		.loc 1 1428 0
 895 0008 0020     		movs	r0, #0
 896              	.LVL79:
 897 000a 00E0     		b	.L72
 898              	.LVL80:
 899              	.L74:
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 900              		.loc 1 1434 0
 901 000c 0120     		movs	r0, #1
 902              	.LVL81:
 903              	.L72:
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 904              		.loc 1 1452 0
 905 000e 0028     		cmp	r0, #0
 906 0010 03D1     		bne	.L73
1481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 907              		.loc 1 1481 0
 908 0012 5521     		movs	r1, #85
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 60


 909 0014 1800     		movs	r0, r3
 910              	.LVL82:
 911 0016 FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 912              	.LVL83:
 913              	.L73:
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 914              		.loc 1 1503 0
 915              		@ sp needed
 916 001a 10BD     		pop	{r4, pc}
 917              		.cfi_endproc
 918              	.LFE15:
 919              		.size	CapSense_1_CalibrateWidget, .-CapSense_1_CalibrateWidget
 920              		.section	.text.CapSense_1_CalibrateAllWidgets,"ax",%progbits
 921              		.align	2
 922              		.global	CapSense_1_CalibrateAllWidgets
 923              		.code	16
 924              		.thumb_func
 925              		.type	CapSense_1_CalibrateAllWidgets, %function
 926              	CapSense_1_CalibrateAllWidgets:
 927              	.LFB16:
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 928              		.loc 1 1540 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932 0000 70B5     		push	{r4, r5, r6, lr}
 933              		.cfi_def_cfa_offset 16
 934              		.cfi_offset 4, -16
 935              		.cfi_offset 5, -12
 936              		.cfi_offset 6, -8
 937              		.cfi_offset 14, -4
 938              	.LVL84:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 939              		.loc 1 1544 0
 940 0002 0024     		movs	r4, #0
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
 941              		.loc 1 1541 0
 942 0004 0025     		movs	r5, #0
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 943              		.loc 1 1544 0
 944 0006 04E0     		b	.L76
 945              	.LVL85:
 946              	.L77:
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 947              		.loc 1 1546 0 discriminator 3
 948 0008 2000     		movs	r0, r4
 949 000a FFF7FEFF 		bl	CapSense_1_CalibrateWidget
 950              	.LVL86:
 951 000e 0543     		orrs	r5, r0
 952              	.LVL87:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 953              		.loc 1 1544 0 discriminator 3
 954 0010 0134     		adds	r4, r4, #1
 955              	.LVL88:
 956              	.L76:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 957              		.loc 1 1544 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 61


 958 0012 042C     		cmp	r4, #4
 959 0014 F8D9     		bls	.L77
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
 960              		.loc 1 1550 0 is_stmt 1
 961 0016 2800     		movs	r0, r5
 962              		@ sp needed
 963              	.LVL89:
 964              	.LVL90:
 965 0018 70BD     		pop	{r4, r5, r6, pc}
 966              		.cfi_endproc
 967              	.LFE16:
 968              		.size	CapSense_1_CalibrateAllWidgets, .-CapSense_1_CalibrateAllWidgets
 969              		.global	__aeabi_uidiv
 970 001a C046     		.section	.text.CapSense_1_SsAutoTune,"ax",%progbits
 971              		.align	2
 972              		.global	CapSense_1_SsAutoTune
 973              		.code	16
 974              		.thumb_func
 975              		.type	CapSense_1_SsAutoTune, %function
 976              	CapSense_1_SsAutoTune:
 977              	.LFB17:
1576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 978              		.loc 1 1576 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 56
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982 0000 70B5     		push	{r4, r5, r6, lr}
 983              		.cfi_def_cfa_offset 16
 984              		.cfi_offset 4, -16
 985              		.cfi_offset 5, -12
 986              		.cfi_offset 6, -8
 987              		.cfi_offset 14, -4
 988 0002 8EB0     		sub	sp, sp, #56
 989              		.cfi_def_cfa_offset 72
 990              	.LVL91:
1590:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.vRef = CapSense_1_CSD_VREF_MV;
 991              		.loc 1 1590 0
 992 0004 FA23     		movs	r3, #250
 993 0006 9B00     		lsls	r3, r3, #2
 994 0008 02AA     		add	r2, sp, #8
 995 000a 1380     		strh	r3, [r2]
1591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_1_CSD_IDAC_GAIN_VALUE_NA;
 996              		.loc 1 1591 0
 997 000c 414B     		ldr	r3, .L89
 998 000e 5380     		strh	r3, [r2, #2]
1592:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 999              		.loc 1 1592 0
 1000 0010 7C33     		adds	r3, r3, #124
 1001 0012 FF33     		adds	r3, r3, #255
 1002 0014 9380     		strh	r3, [r2, #4]
1597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif ((CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) && (CapSense_1_DISABLE == CY_PSO
 1003              		.loc 1 1597 0
 1004 0016 2023     		movs	r3, #32
 1005 0018 3F4A     		ldr	r2, .L89+4
 1006 001a D15C     		ldrb	r1, [r2, r3]
 1007 001c 3F48     		ldr	r0, .L89+8
 1008 001e FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 62


 1009              	.LVL92:
 1010 0022 02AB     		add	r3, sp, #8
 1011 0024 9881     		strh	r0, [r3, #12]
 1012              	.LVL93:
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1013              		.loc 1 1623 0
 1014 0026 0026     		movs	r6, #0
1577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
 1015              		.loc 1 1577 0
 1016 0028 0025     		movs	r5, #0
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1017              		.loc 1 1623 0
 1018 002a 39E0     		b	.L79
 1019              	.LVL94:
 1020              	.L83:
1628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1021              		.loc 1 1628 0
 1022 002c 7301     		lsls	r3, r6, #5
 1023 002e 3C4A     		ldr	r2, .L89+12
 1024 0030 D318     		adds	r3, r2, r3
 1025 0032 5C68     		ldr	r4, [r3, #4]
 1026              	.LVL95:
1632:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1027              		.loc 1 1632 0
 1028 0034 0C23     		movs	r3, #12
 1029 0036 2380     		strh	r3, [r4]
1635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_1_CAL
 1030              		.loc 1 1635 0
 1031 0038 0023     		movs	r3, #0
 1032 003a 2373     		strb	r3, [r4, #12]
1636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
 1033              		.loc 1 1636 0
 1034 003c 02AB     		add	r3, sp, #8
 1035 003e 9889     		ldrh	r0, [r3, #12]
 1036 0040 3849     		ldr	r1, .L89+16
 1037 0042 FFF7FEFF 		bl	__aeabi_uidiv
 1038              	.LVL96:
 1039 0046 6081     		strh	r0, [r4, #10]
1647:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1040              		.loc 1 1647 0
 1041 0048 5521     		movs	r1, #85
 1042 004a 3000     		movs	r0, r6
 1043 004c FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 1044              	.LVL97:
1696:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1045              		.loc 1 1696 0
 1046 0050 2300     		movs	r3, r4
 1047 0052 0A33     		adds	r3, r3, #10
 1048 0054 0693     		str	r3, [sp, #24]
1699:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1049              		.loc 1 1699 0
 1050 0056 344B     		ldr	r3, .L89+20
 1051 0058 1B78     		ldrb	r3, [r3]
 1052 005a 02AA     		add	r2, sp, #8
 1053 005c 1376     		strb	r3, [r2, #24]
1702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
 1054              		.loc 1 1702 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 63


 1055 005e 334B     		ldr	r3, .L89+24
 1056 0060 1888     		ldrh	r0, [r3]
 1057 0062 FA23     		movs	r3, #250
 1058 0064 9B00     		lsls	r3, r3, #2
 1059 0066 5843     		muls	r0, r3
 1060 0068 3149     		ldr	r1, .L89+28
 1061 006a FFF7FEFF 		bl	__aeabi_uidiv
 1062              	.LVL98:
 1063 006e 02AB     		add	r3, sp, #8
 1064 0070 D881     		strh	r0, [r3, #14]
1706:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1065              		.loc 1 1706 0
 1066 0072 1800     		movs	r0, r3
 1067 0074 FFF7FEFF 		bl	SmartSense_TunePrescalers
 1068              	.LVL99:
1708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1069              		.loc 1 1708 0
 1070 0078 2E4B     		ldr	r3, .L89+32
 1071 007a 9842     		cmp	r0, r3
 1072 007c 03D9     		bls	.L81
1710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 1073              		.loc 1 1710 0
 1074 007e 0625     		movs	r5, #6
 1075              	.LVL100:
 1076 0080 01E0     		b	.L81
 1077              	.LVL101:
 1078              	.L82:
1720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 1079              		.loc 1 1720 0
 1080 0082 5B00     		lsls	r3, r3, #1
 1081 0084 6381     		strh	r3, [r4, #10]
 1082              	.LVL102:
 1083              	.L81:
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1084              		.loc 1 1717 0
 1085 0086 02AB     		add	r3, sp, #8
 1086 0088 9989     		ldrh	r1, [r3, #12]
 1087 008a 6389     		ldrh	r3, [r4, #10]
 1088 008c 2A4A     		ldr	r2, .L89+36
 1089 008e 5A43     		muls	r2, r3
 1090 0090 9142     		cmp	r1, r2
 1091 0092 F6D8     		bhi	.L82
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
 1092              		.loc 1 1717 0 is_stmt 0 discriminator 1
 1093 0094 032B     		cmp	r3, #3
 1094 0096 F4D9     		bls	.L82
1735:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1095              		.loc 1 1735 0 is_stmt 1
 1096 0098 B200     		lsls	r2, r6, #2
 1097 009a 09AB     		add	r3, sp, #36
 1098 009c D050     		str	r0, [r2, r3]
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1099              		.loc 1 1623 0
 1100 009e 0136     		adds	r6, r6, #1
 1101              	.LVL103:
 1102              	.L79:
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 64


 1103              		.loc 1 1623 0 is_stmt 0 discriminator 1
 1104 00a0 042E     		cmp	r6, #4
 1105 00a2 C3D9     		bls	.L83
 1106 00a4 0024     		movs	r4, #0
 1107 00a6 1EE0     		b	.L84
 1108              	.LVL104:
 1109              	.L85:
1769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1110              		.loc 1 1769 0 is_stmt 1
 1111 00a8 6301     		lsls	r3, r4, #5
 1112 00aa 1D4A     		ldr	r2, .L89+12
 1113 00ac D318     		adds	r3, r2, r3
 1114 00ae 5E68     		ldr	r6, [r3, #4]
 1115              	.LVL105:
1773:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1116              		.loc 1 1773 0
 1117 00b0 5521     		movs	r1, #85
 1118 00b2 2000     		movs	r0, r4
 1119 00b4 FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 1120              	.LVL106:
 1121 00b8 0543     		orrs	r5, r0
 1122              	.LVL107:
1776:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1123              		.loc 1 1776 0
 1124 00ba 3300     		movs	r3, r6
 1125 00bc 0A33     		adds	r3, r3, #10
 1126 00be 0693     		str	r3, [sp, #24]
1779:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1127              		.loc 1 1779 0
 1128 00c0 A200     		lsls	r2, r4, #2
 1129 00c2 09AB     		add	r3, sp, #36
 1130 00c4 D358     		ldr	r3, [r2, r3]
 1131 00c6 0193     		str	r3, [sp, #4]
 1132 00c8 0493     		str	r3, [sp, #16]
1782:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1133              		.loc 1 1782 0
 1134 00ca 174B     		ldr	r3, .L89+20
 1135 00cc 1B78     		ldrb	r3, [r3]
 1136 00ce 02AA     		add	r2, sp, #8
 1137 00d0 1376     		strb	r3, [r2, #24]
1805:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1138              		.loc 1 1805 0
 1139 00d2 F389     		ldrh	r3, [r6, #14]
 1140 00d4 D380     		strh	r3, [r2, #6]
1808:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1141              		.loc 1 1808 0
 1142 00d6 3300     		movs	r3, r6
 1143 00d8 1033     		adds	r3, r3, #16
 1144 00da 0793     		str	r3, [sp, #28]
1811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 1145              		.loc 1 1811 0
 1146 00dc 1000     		movs	r0, r2
 1147 00de FFF7FEFF 		bl	SmartSense_TuneSensitivity
 1148              	.LVL108:
 1149 00e2 3080     		strh	r0, [r6]
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1150              		.loc 1 1764 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 65


 1151 00e4 0134     		adds	r4, r4, #1
 1152              	.LVL109:
 1153              	.L84:
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1154              		.loc 1 1764 0 is_stmt 0 discriminator 1
 1155 00e6 042C     		cmp	r4, #4
 1156 00e8 DED9     		bls	.L85
 1157 00ea 0024     		movs	r4, #0
 1158              	.LVL110:
 1159 00ec 0CE0     		b	.L86
 1160              	.LVL111:
 1161              	.L87:
1828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
 1162              		.loc 1 1828 0 is_stmt 1
 1163 00ee 6301     		lsls	r3, r4, #5
 1164 00f0 0B4A     		ldr	r2, .L89+12
 1165 00f2 D318     		adds	r3, r2, r3
 1166 00f4 5968     		ldr	r1, [r3, #4]
 1167              	.LVL112:
1831:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1168              		.loc 1 1831 0
 1169 00f6 2000     		movs	r0, r4
 1170 00f8 FFF7FEFF 		bl	CapSense_1_SsSetWidgetSenseClkSrc
 1171              	.LVL113:
1834:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1172              		.loc 1 1834 0
 1173 00fc 5521     		movs	r1, #85
 1174 00fe 2000     		movs	r0, r4
 1175 0100 FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 1176              	.LVL114:
 1177 0104 0543     		orrs	r5, r0
 1178              	.LVL115:
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1179              		.loc 1 1823 0
 1180 0106 0134     		adds	r4, r4, #1
 1181              	.LVL116:
 1182              	.L86:
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1183              		.loc 1 1823 0 is_stmt 0 discriminator 1
 1184 0108 042C     		cmp	r4, #4
 1185 010a F0D9     		bls	.L87
1843:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) */
 1186              		.loc 1 1843 0 is_stmt 1
 1187 010c 2800     		movs	r0, r5
 1188 010e 0EB0     		add	sp, sp, #56
 1189              		@ sp needed
 1190              	.LVL117:
 1191              	.LVL118:
 1192 0110 70BD     		pop	{r4, r5, r6, pc}
 1193              	.L90:
 1194 0112 C046     		.align	2
 1195              	.L89:
 1196 0114 E5070000 		.word	2021
 1197 0118 00000000 		.word	CapSense_1_dsRam
 1198 011c 80BB0000 		.word	48000
 1199 0120 00000000 		.word	CapSense_1_dsFlash
 1200 0124 DC050000 		.word	1500
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 66


 1201 0128 00000000 		.word	CapSense_1_calibratedIdac
 1202 012c 00000000 		.word	CapSense_1_calibratedRawcount
 1203 0130 FF0F0000 		.word	4095
 1204 0134 870D0100 		.word	68999
 1205 0138 70170000 		.word	6000
 1206              		.cfi_endproc
 1207              	.LFE17:
 1208              		.size	CapSense_1_SsAutoTune, .-CapSense_1_SsAutoTune
 1209              		.section	.text.CapSense_1_SsInitializeSourceSenseClk,"ax",%progbits
 1210              		.align	2
 1211              		.global	CapSense_1_SsInitializeSourceSenseClk
 1212              		.code	16
 1213              		.thumb_func
 1214              		.type	CapSense_1_SsInitializeSourceSenseClk, %function
 1215              	CapSense_1_SsInitializeSourceSenseClk:
 1216              	.LFB18:
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 1217              		.loc 1 2186 0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 0
 1220              		@ frame_needed = 0, uses_anonymous_args = 0
 1221 0000 10B5     		push	{r4, lr}
 1222              		.cfi_def_cfa_offset 8
 1223              		.cfi_offset 4, -8
 1224              		.cfi_offset 14, -4
 1225              	.LVL119:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1226              		.loc 1 2190 0
 1227 0002 0024     		movs	r4, #0
 1228 0004 07E0     		b	.L92
 1229              	.LVL120:
 1230              	.L93:
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1231              		.loc 1 2192 0
 1232 0006 6301     		lsls	r3, r4, #5
 1233 0008 044A     		ldr	r2, .L94
 1234 000a D318     		adds	r3, r2, r3
 1235 000c 5968     		ldr	r1, [r3, #4]
 1236              	.LVL121:
2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 1237              		.loc 1 2198 0
 1238 000e 2000     		movs	r0, r4
 1239 0010 FFF7FEFF 		bl	CapSense_1_SsSetWidgetSenseClkSrc
 1240              	.LVL122:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1241              		.loc 1 2190 0
 1242 0014 0134     		adds	r4, r4, #1
 1243              	.LVL123:
 1244              	.L92:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1245              		.loc 1 2190 0 is_stmt 0 discriminator 1
 1246 0016 042C     		cmp	r4, #4
 1247 0018 F5D9     		bls	.L93
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
 1248              		.loc 1 2213 0 is_stmt 1
 1249              		@ sp needed
 1250              	.LVL124:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 67


 1251 001a 10BD     		pop	{r4, pc}
 1252              	.L95:
 1253              		.align	2
 1254              	.L94:
 1255 001c 00000000 		.word	CapSense_1_dsFlash
 1256              		.cfi_endproc
 1257              	.LFE18:
 1258              		.size	CapSense_1_SsInitializeSourceSenseClk, .-CapSense_1_SsInitializeSourceSenseClk
 1259              		.section	.text.CapSense_1_SsInitialize,"ax",%progbits
 1260              		.align	2
 1261              		.global	CapSense_1_SsInitialize
 1262              		.code	16
 1263              		.thumb_func
 1264              		.type	CapSense_1_SsInitialize, %function
 1265              	CapSense_1_SsInitialize:
 1266              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 1267              		.loc 1 517 0
 1268              		.cfi_startproc
 1269              		@ args = 0, pretend = 0, frame = 0
 1270              		@ frame_needed = 0, uses_anonymous_args = 0
 1271 0000 10B5     		push	{r4, lr}
 1272              		.cfi_def_cfa_offset 8
 1273              		.cfi_offset 4, -8
 1274              		.cfi_offset 14, -4
 1275              	.LVL125:
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 1276              		.loc 1 556 0
 1277 0002 FFF7FEFF 		bl	CapSense_1_SsInitializeSourceSenseClk
 1278              	.LVL126:
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1279              		.loc 1 561 0
 1280 0006 FFF7FEFF 		bl	CapSense_1_SsSetIOsInDefaultState
 1281              	.LVL127:
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 1282              		.loc 1 567 0
 1283 000a 0120     		movs	r0, #1
 1284 000c FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
 1285              	.LVL128:
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1286              		.loc 1 578 0
 1287 0010 0020     		movs	r0, #0
 1288              		@ sp needed
 1289 0012 10BD     		pop	{r4, pc}
 1290              		.cfi_endproc
 1291              	.LFE5:
 1292              		.size	CapSense_1_SsInitialize, .-CapSense_1_SsInitialize
 1293              		.section	.text.CapSense_1_SsClearCSDSensors,"ax",%progbits
 1294              		.align	2
 1295              		.global	CapSense_1_SsClearCSDSensors
 1296              		.code	16
 1297              		.thumb_func
 1298              		.type	CapSense_1_SsClearCSDSensors, %function
 1299              	CapSense_1_SsClearCSDSensors:
 1300              	.LFB20:
2316:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2317:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 68


2318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2319:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetTxClkSrc
2322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
2337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2340:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
2342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 conversionsNum;
2344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2345:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)
2348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 snsClkDivider = CapSense_1_SsCSXGetTxClkDivider(wdgtIndex);
2351:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2352:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2353:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2354:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2355:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2356:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Unused function argument */
2357:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)wdgtIndex;
2358:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2359:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2360:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_CSX_TX_CLK_SOURCE;
2361:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2362:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Unused function argument */
2363:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex;
2364:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) */
2365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2366:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
2367:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)) */
2369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 69


2375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
2378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2379:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrSize
2380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2385:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2386:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2387:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  requirements:
2388:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2389:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2390:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2391:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2392:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2393:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2394:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2395:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  resolution The widget resolution.
2396:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2397:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2398:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2400:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2401:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 lfsrSize = 0u;
2403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Find LFSR value */
2405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((CapSense_1_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (CapSense_1_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC4_PERIOD)))
2408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC4;
2410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC3_PERIOD)))
2414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC3;
2416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC2_PERIOD)))
2420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC2;
2422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC1_PERIOD)))
2426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC1;
2428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2429:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 70


2432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (lfsrSize);
2435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2437:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2439:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrScale
2440:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2441:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2442:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2443:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2444:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2445:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2446:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2447:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2448:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  period.
2449:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2450:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  range +/-10%.
2452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2454:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2455:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2456:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2458:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2459:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2460:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2461:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2462:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2463:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2464:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2465:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2466:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2467:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2468:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2470:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2471:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2472:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
2473:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2475:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrScale;
2479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrRange;
2480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrDither;
2481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2482:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     switch(lfsrSize)
2484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC1:
2486:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC1_RANGE;
2488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 71


2489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2490:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC2:
2491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC2_RANGE;
2493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2494:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC3:
2496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC3_RANGE;
2498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2499:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC4:
2501:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC4_RANGE;
2503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2504:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2505:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = 0u;
2508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
2515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((lfsrSize != CapSense_1_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2520:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(lfsrDither < CapSense_1_LFSR_DITHER_PERCENTAGE)
2522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale++;
2524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrDither <<=1uL;
2525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if(lfsrDither > CapSense_1_LFSR_DITHER_PERCENTAGE)
2528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale--;
2530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2536:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return ((uint8)lfsrScale);
2538:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2539:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2540:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****           ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 72


2546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))) */
2547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsClearCSDSensors
2552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  an inactive state.
2558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  connection is Ground or Hi-Z.
2564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsClearCSDSensors(void)
2567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1301              		.loc 1 2567 0
 1302              		.cfi_startproc
 1303              		@ args = 0, pretend = 0, frame = 0
 1304              		@ frame_needed = 0, uses_anonymous_args = 0
 1305 0000 70B5     		push	{r4, r5, r6, lr}
 1306              		.cfi_def_cfa_offset 16
 1307              		.cfi_offset 4, -16
 1308              		.cfi_offset 5, -12
 1309              		.cfi_offset 6, -8
 1310              		.cfi_offset 14, -4
 1311              	.LVL129:
2568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
2569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsIndex;
2570:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 pinIndex;
2573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2574:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Declare ptr to sensor IO structure */
2577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2579:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_IO_STRUCT const *curSnsIOPtr;
2582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
 1312              		.loc 1 2583 0
 1313 0002 0025     		movs	r5, #0
 1314 0004 12E0     		b	.L98
 1315              	.LVL130:
 1316              	.L101:
2584:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
2586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 73


2587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2588:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
 1317              		.loc 1 2588 0
 1318 0006 6B01     		lsls	r3, r5, #5
 1319 0008 0A4A     		ldr	r2, .L102
 1320 000a 9E58     		ldr	r6, [r3, r2]
 1321              	.LVL131:
2589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                 CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlas
2590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Go through all the sensors in widget */
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_1_dsFlash.wdgtArray[wdgtIndex].total
 1322              		.loc 1 2592 0
 1323 000c 0024     		movs	r4, #0
 1324 000e 06E0     		b	.L99
 1325              	.LVL132:
 1326              	.L100:
2593:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Check ganged sns flag */
2596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[wdgtIndex].
2597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                  CapSense_1_GANGED_SNS_MASK))
2598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get sns pointer */
2600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
2601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                CapSense_1_dsFlash.wdgtArray[wdgtInd
2602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                snsIndex;
2603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             {
2606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinI
2608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Disconnect dedicated pin */
2610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 CapSense_1_CSDDisconnectSns(curDedicatedSnsIOPtr);
2611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             }
2612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2614:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Disable sensor */
2616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable sensor */
2620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 1327              		.loc 1 2620 0 discriminator 3
 1328 0010 E300     		lsls	r3, r4, #3
 1329 0012 1B1B     		subs	r3, r3, r4
 1330 0014 9800     		lsls	r0, r3, #2
 1331 0016 3018     		adds	r0, r6, r0
 1332 0018 FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1333              	.LVL133:
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1334              		.loc 1 2592 0 discriminator 3
 1335 001c 0134     		adds	r4, r4, #1
 1336              	.LVL134:
 1337              	.L99:
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 74


 1338              		.loc 1 2592 0 is_stmt 0 discriminator 1
 1339 001e 6B01     		lsls	r3, r5, #5
 1340 0020 044A     		ldr	r2, .L102
 1341 0022 D318     		adds	r3, r2, r3
 1342 0024 1B7E     		ldrb	r3, [r3, #24]
 1343 0026 9C42     		cmp	r4, r3
 1344 0028 F2D3     		bcc	.L100
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1345              		.loc 1 2583 0 is_stmt 1 discriminator 2
 1346 002a 0135     		adds	r5, r5, #1
 1347              	.LVL135:
 1348              	.L98:
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1349              		.loc 1 2583 0 is_stmt 0 discriminator 1
 1350 002c 042D     		cmp	r5, #4
 1351 002e EAD9     		bls	.L101
2621:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1352              		.loc 1 2625 0 is_stmt 1
 1353              		@ sp needed
 1354              	.LVL136:
 1355 0030 70BD     		pop	{r4, r5, r6, pc}
 1356              	.L103:
 1357 0032 C046     		.align	2
 1358              	.L102:
 1359 0034 00000000 		.word	CapSense_1_dsFlash
 1360              		.cfi_endproc
 1361              	.LFE20:
 1362              		.size	CapSense_1_SsClearCSDSensors, .-CapSense_1_SsClearCSDSensors
 1363              		.section	.text.CapSense_1_SsCSDGetColSnsClkDivider,"ax",%progbits
 1364              		.align	2
 1365              		.global	CapSense_1_SsCSDGetColSnsClkDivider
 1366              		.code	16
 1367              		.thumb_func
 1368              		.type	CapSense_1_SsCSDGetColSnsClkDivider, %function
 1369              	CapSense_1_SsCSDGetColSnsClkDivider:
 1370              	.LFB21:
2626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDGetColSnsClkDivider
2629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2630:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2633:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
2641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 75


2643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
2644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2645:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2648:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 CapSense_1_SsCSDGetColSnsClkDivider(uint32 widgetId)
2649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1371              		.loc 1 2649 0
 1372              		.cfi_startproc
 1373              		@ args = 0, pretend = 0, frame = 0
 1374              		@ frame_needed = 0, uses_anonymous_args = 0
 1375              		@ link register save eliminated.
 1376              	.LVL137:
2650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 retVal;
2651:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 1377              		.loc 1 2656 0
 1378 0000 4001     		lsls	r0, r0, #5
 1379              	.LVL138:
 1380 0002 024B     		ldr	r3, .L105
 1381 0004 1818     		adds	r0, r3, r0
 1382 0006 4368     		ldr	r3, [r0, #4]
 1383              	.LVL139:
2657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1384              		.loc 1 2659 0
 1385 0008 5889     		ldrh	r0, [r3, #10]
 1386              	.LVL140:
2660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return (retVal);
2667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1387              		.loc 1 2667 0
 1388              		@ sp needed
 1389 000a 7047     		bx	lr
 1390              	.L106:
 1391              		.align	2
 1392              	.L105:
 1393 000c 00000000 		.word	CapSense_1_dsFlash
 1394              		.cfi_endproc
 1395              	.LFE21:
 1396              		.size	CapSense_1_SsCSDGetColSnsClkDivider, .-CapSense_1_SsCSDGetColSnsClkDivider
 1397              		.section	.text.CapSense_1_SsCSDSetColSnsClkDivider,"ax",%progbits
 1398              		.align	2
 1399              		.global	CapSense_1_SsCSDSetColSnsClkDivider
 1400              		.code	16
 1401              		.thumb_func
 1402              		.type	CapSense_1_SsCSDSetColSnsClkDivider, %function
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 76


 1403              	CapSense_1_SsCSDSetColSnsClkDivider:
 1404              	.LFB22:
2668:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2669:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDSetColSnsClkDivider
2672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value for one-dimension widgets
2676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value based on the Component
2680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param
2684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widgetId Specifies the ID of the widget.
2685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return The Sense Clock Divider value for one-dimension widgets
2687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *        and the Column Sense Clock divider value for two-dimension widgets.
2688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsCSDSetColSnsClkDivider(uint32 widgetId, uint32 dividerVal)
2691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1405              		.loc 1 2691 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 0
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409              		@ link register save eliminated.
 1410              	.LVL141:
2692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2695:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
 1411              		.loc 1 2696 0
 1412 0000 4001     		lsls	r0, r0, #5
 1413              	.LVL142:
 1414 0002 024B     		ldr	r3, .L108
 1415 0004 1818     		adds	r0, r3, r0
 1416 0006 4368     		ldr	r3, [r0, #4]
 1417              	.LVL143:
2697:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2698:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt->snsClk = (uint16)dividerVal;
 1418              		.loc 1 2699 0
 1419 0008 5981     		strh	r1, [r3, #10]
2700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsRam.snsCsdClk = (uint16)dividerVal;
2702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1420              		.loc 1 2705 0
 1421              		@ sp needed
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 77


 1422 000a 7047     		bx	lr
 1423              	.L109:
 1424              		.align	2
 1425              	.L108:
 1426 000c 00000000 		.word	CapSense_1_dsFlash
 1427              		.cfi_endproc
 1428              	.LFE22:
 1429              		.size	CapSense_1_SsCSDSetColSnsClkDivider, .-CapSense_1_SsCSDSetColSnsClkDivider
 1430              		.section	.text.CapSense_1_BistDischargeExtCapacitors,"ax",%progbits
 1431              		.align	2
 1432              		.global	CapSense_1_BistDischargeExtCapacitors
 1433              		.code	16
 1434              		.thumb_func
 1435              		.type	CapSense_1_BistDischargeExtCapacitors, %function
 1436              	CapSense_1_BistDischargeExtCapacitors:
 1437              	.LFB23:
2706:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDGetRowSnsClkDivider
2711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  two-dimension widgets.
2721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return
2726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 CapSense_1_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 retVal;
2733:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Get sense divider based on configuration */
2735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2736:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2737:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2740:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 78


2747:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (retVal);
2749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2752:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2753:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDCalcPrsSize
2757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  requirements:
2765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  resolution The widget resolution.
2770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 CapSense_1_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 prsSize;
2777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 modClkDivider = 1u;
2778:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if ((CapSense_1_ENABLE != CapSense_1_CSDV2) && \
2780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK))
2781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     modClkDivider = (uint32)CapSense_1_dsRam.modCsdClk;
2782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((snsClkDivider * CapSense_1_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu 
2785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS12 mode */
2787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_12_CONFIG;
2788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if ((snsClkDivider * CapSense_1_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x0000000
2790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS8 mode */
2792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_8_CONFIG;
2793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
2795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set Direct clock mode */
2797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_CLK_SOURCE_DIRECT;
2798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (uint8)prsSize;
2801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 79


2804:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2805:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_BistDischargeExtCapacitors
2809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors.
2813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors by connection them
2816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects 
2817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses 
2819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_BistDischargeExtCapacitors(void)
2823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1438              		.loc 1 2823 0
 1439              		.cfi_startproc
 1440              		@ args = 0, pretend = 0, frame = 0
 1441              		@ frame_needed = 0, uses_anonymous_args = 0
 1442 0000 70B5     		push	{r4, r5, r6, lr}
 1443              		.cfi_def_cfa_offset 16
 1444              		.cfi_offset 4, -16
 1445              		.cfi_offset 5, -12
 1446              		.cfi_offset 6, -8
 1447              		.cfi_offset 14, -4
2824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
2825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8  interruptState;
2826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         
2827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1448              		.loc 1 2828 0
 1449 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1450              	.LVL144:
2829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR);
 1451              		.loc 1 2829 0
 1452 0006 134A     		ldr	r2, .L111
 1453 0008 1368     		ldr	r3, [r2]
 1454              	.LVL145:
2830:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_HSIOM_MASK);
 1455              		.loc 1 2830 0
 1456 000a F021     		movs	r1, #240
 1457 000c 8B43     		bics	r3, r1
 1458              	.LVL146:
2831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR, newRegValue);
 1459              		.loc 1 2831 0
 1460 000e 1360     		str	r3, [r2]
2832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1461              		.loc 1 2832 0
 1462 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1463              	.LVL147:
2833:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set output port register to 0 to connect to GND */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 80


2835:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1464              		.loc 1 2835 0
 1465 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1466              	.LVL148:
2836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_DR_PTR);
 1467              		.loc 1 2836 0
 1468 0018 0F4A     		ldr	r2, .L111+4
 1469 001a 1368     		ldr	r3, [r2]
 1470              	.LVL149:
2837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_DR_MASK);
 1471              		.loc 1 2837 0
 1472 001c 0221     		movs	r1, #2
 1473 001e 8B43     		bics	r3, r1
 1474              	.LVL150:
2838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_DR_PTR, newRegValue);
 1475              		.loc 1 2838 0
 1476 0020 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1477              		.loc 1 2839 0
 1478 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1479              	.LVL151:
2840:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1480              		.loc 1 2842 0
 1481 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 1482              	.LVL152:
2843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1483              		.loc 1 2843 0
 1484 002a 0C4C     		ldr	r4, .L111+8
 1485 002c 2368     		ldr	r3, [r4]
 1486              	.LVL153:
2844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1487              		.loc 1 2844 0
 1488 002e 3825     		movs	r5, #56
 1489 0030 AB43     		bics	r3, r5
 1490              	.LVL154:
2845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (CapSense_1_EXT_CAP_PC_STRONG_CFG);
 1491              		.loc 1 2845 0
 1492 0032 3022     		movs	r2, #48
 1493 0034 1343     		orrs	r3, r2
 1494              	.LVL155:
2846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1495              		.loc 1 2846 0
 1496 0036 2360     		str	r3, [r4]
2847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1497              		.loc 1 2847 0
 1498 0038 FFF7FEFF 		bl	CyExitCriticalSection
 1499              	.LVL156:
2848:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Delay to discharge external capacitors */
2850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyDelayUs(CapSense_1_EXT_CAP_DISCHARGE_TIME);
 1500              		.loc 1 2850 0
 1501 003c 0120     		movs	r0, #1
 1502 003e FFF7FEFF 		bl	CyDelayUs
 1503              	.LVL157:
2851:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 81


2852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1504              		.loc 1 2853 0
 1505 0042 FFF7FEFF 		bl	CyEnterCriticalSection
 1506              	.LVL158:
2854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1507              		.loc 1 2854 0
 1508 0046 2368     		ldr	r3, [r4]
 1509              	.LVL159:
2855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1510              		.loc 1 2855 0
 1511 0048 AB43     		bics	r3, r5
 1512              	.LVL160:
2856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1513              		.loc 1 2856 0
 1514 004a 2360     		str	r3, [r4]
2857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1515              		.loc 1 2857 0
 1516 004c FFF7FEFF 		bl	CyExitCriticalSection
 1517              	.LVL161:
2858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1518              		.loc 1 2858 0
 1519              		@ sp needed
 1520 0050 70BD     		pop	{r4, r5, r6, pc}
 1521              	.L112:
 1522 0052 C046     		.align	2
 1523              	.L111:
 1524 0054 00040240 		.word	1073873920
 1525 0058 00040440 		.word	1074004992
 1526 005c 08040440 		.word	1074005000
 1527              		.cfi_endproc
 1528              	.LFE23:
 1529              		.size	CapSense_1_BistDischargeExtCapacitors, .-CapSense_1_BistDischargeExtCapacitors
 1530              		.comm	CapSense_1_curSnsIOPtr,4,4
 1531              		.comm	CapSense_1_curRamSnsPtr,4,4
 1532              		.global	CapSense_1_requestScanAllWidget
 1533              		.global	CapSense_1_sensorIndex
 1534              		.global	CapSense_1_widgetIndex
 1535              		.global	CapSense_1_scanFreqIndex
 1536              		.global	CapSense_1_currentSenseMethod
 1537              		.section	.rodata
 1538              		.type	CapSense_1_scanFreqIndex, %object
 1539              		.size	CapSense_1_scanFreqIndex, 1
 1540              	CapSense_1_scanFreqIndex:
 1541 0000 00       		.space	1
 1542              		.bss
 1543              		.set	.LANCHOR0,. + 0
 1544              		.type	CapSense_1_currentSenseMethod, %object
 1545              		.size	CapSense_1_currentSenseMethod, 1
 1546              	CapSense_1_currentSenseMethod:
 1547 0000 00       		.space	1
 1548              		.type	CapSense_1_requestScanAllWidget, %object
 1549              		.size	CapSense_1_requestScanAllWidget, 1
 1550              	CapSense_1_requestScanAllWidget:
 1551 0001 00       		.space	1
 1552              		.type	CapSense_1_widgetIndex, %object
 1553              		.size	CapSense_1_widgetIndex, 1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 82


 1554              	CapSense_1_widgetIndex:
 1555 0002 00       		.space	1
 1556              		.type	CapSense_1_sensorIndex, %object
 1557              		.size	CapSense_1_sensorIndex, 1
 1558              	CapSense_1_sensorIndex:
 1559 0003 00       		.space	1
 1560              		.text
 1561              	.Letext0:
 1562              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1563              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1564              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_SmartSense_LL.h"
 1565              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1566              		.file 6 "Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.h"
 1567              		.file 7 "Generated_Source\\PSoC4/CyLib.h"
 1568              		.file 8 "Generated_Source\\PSoC4\\CapSense_1_ISR.h"
 1569              		.section	.debug_info,"",%progbits
 1570              	.Ldebug_info0:
 1571 0000 5F100000 		.4byte	0x105f
 1572 0004 0400     		.2byte	0x4
 1573 0006 00000000 		.4byte	.Ldebug_abbrev0
 1574 000a 04       		.byte	0x4
 1575 000b 01       		.uleb128 0x1
 1576 000c BD020000 		.4byte	.LASF189
 1577 0010 0C       		.byte	0xc
 1578 0011 80070000 		.4byte	.LASF190
 1579 0015 9C040000 		.4byte	.LASF191
 1580 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1581 001d 00000000 		.4byte	0
 1582 0021 00000000 		.4byte	.Ldebug_line0
 1583 0025 02       		.uleb128 0x2
 1584 0026 01       		.byte	0x1
 1585 0027 06       		.byte	0x6
 1586 0028 8C0B0000 		.4byte	.LASF0
 1587 002c 02       		.uleb128 0x2
 1588 002d 01       		.byte	0x1
 1589 002e 08       		.byte	0x8
 1590 002f F30A0000 		.4byte	.LASF1
 1591 0033 02       		.uleb128 0x2
 1592 0034 02       		.byte	0x2
 1593 0035 05       		.byte	0x5
 1594 0036 AA080000 		.4byte	.LASF2
 1595 003a 02       		.uleb128 0x2
 1596 003b 02       		.byte	0x2
 1597 003c 07       		.byte	0x7
 1598 003d 9D0B0000 		.4byte	.LASF3
 1599 0041 02       		.uleb128 0x2
 1600 0042 04       		.byte	0x4
 1601 0043 05       		.byte	0x5
 1602 0044 D8080000 		.4byte	.LASF4
 1603 0048 02       		.uleb128 0x2
 1604 0049 04       		.byte	0x4
 1605 004a 07       		.byte	0x7
 1606 004b 650A0000 		.4byte	.LASF5
 1607 004f 02       		.uleb128 0x2
 1608 0050 08       		.byte	0x8
 1609 0051 05       		.byte	0x5
 1610 0052 3E060000 		.4byte	.LASF6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 83


 1611 0056 02       		.uleb128 0x2
 1612 0057 08       		.byte	0x8
 1613 0058 07       		.byte	0x7
 1614 0059 8E030000 		.4byte	.LASF7
 1615 005d 03       		.uleb128 0x3
 1616 005e 04       		.byte	0x4
 1617 005f 05       		.byte	0x5
 1618 0060 696E7400 		.ascii	"int\000"
 1619 0064 02       		.uleb128 0x2
 1620 0065 04       		.byte	0x4
 1621 0066 07       		.byte	0x7
 1622 0067 B1000000 		.4byte	.LASF8
 1623 006b 04       		.uleb128 0x4
 1624 006c 0A0C0000 		.4byte	.LASF9
 1625 0070 02       		.byte	0x2
 1626 0071 E401     		.2byte	0x1e4
 1627 0073 2C000000 		.4byte	0x2c
 1628 0077 04       		.uleb128 0x4
 1629 0078 EE050000 		.4byte	.LASF10
 1630 007c 02       		.byte	0x2
 1631 007d E501     		.2byte	0x1e5
 1632 007f 3A000000 		.4byte	0x3a
 1633 0083 04       		.uleb128 0x4
 1634 0084 23070000 		.4byte	.LASF11
 1635 0088 02       		.byte	0x2
 1636 0089 E601     		.2byte	0x1e6
 1637 008b 48000000 		.4byte	0x48
 1638 008f 02       		.uleb128 0x2
 1639 0090 04       		.byte	0x4
 1640 0091 04       		.byte	0x4
 1641 0092 B1020000 		.4byte	.LASF12
 1642 0096 02       		.uleb128 0x2
 1643 0097 08       		.byte	0x8
 1644 0098 04       		.byte	0x4
 1645 0099 100C0000 		.4byte	.LASF13
 1646 009d 02       		.uleb128 0x2
 1647 009e 01       		.byte	0x1
 1648 009f 08       		.byte	0x8
 1649 00a0 AE050000 		.4byte	.LASF14
 1650 00a4 04       		.uleb128 0x4
 1651 00a5 EA0A0000 		.4byte	.LASF15
 1652 00a9 02       		.byte	0x2
 1653 00aa 8602     		.2byte	0x286
 1654 00ac 48000000 		.4byte	0x48
 1655 00b0 05       		.uleb128 0x5
 1656 00b1 6B000000 		.4byte	0x6b
 1657 00b5 04       		.uleb128 0x4
 1658 00b6 1A080000 		.4byte	.LASF16
 1659 00ba 02       		.byte	0x2
 1660 00bb 9002     		.2byte	0x290
 1661 00bd C1000000 		.4byte	0xc1
 1662 00c1 05       		.uleb128 0x5
 1663 00c2 83000000 		.4byte	0x83
 1664 00c6 04       		.uleb128 0x4
 1665 00c7 E3060000 		.4byte	.LASF17
 1666 00cb 02       		.byte	0x2
 1667 00cc A002     		.2byte	0x2a0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 84


 1668 00ce D2000000 		.4byte	0xd2
 1669 00d2 06       		.uleb128 0x6
 1670 00d3 04       		.byte	0x4
 1671 00d4 D8000000 		.4byte	0xd8
 1672 00d8 07       		.uleb128 0x7
 1673 00d9 04       		.uleb128 0x4
 1674 00da 4C060000 		.4byte	.LASF18
 1675 00de 03       		.byte	0x3
 1676 00df 2D01     		.2byte	0x12d
 1677 00e1 77000000 		.4byte	0x77
 1678 00e5 04       		.uleb128 0x4
 1679 00e6 D6030000 		.4byte	.LASF19
 1680 00ea 03       		.byte	0x3
 1681 00eb 3101     		.2byte	0x131
 1682 00ed 6B000000 		.4byte	0x6b
 1683 00f1 08       		.uleb128 0x8
 1684 00f2 1C       		.byte	0x1c
 1685 00f3 04       		.byte	0x4
 1686 00f4 2F       		.byte	0x2f
 1687 00f5 72010000 		.4byte	0x172
 1688 00f9 09       		.uleb128 0x9
 1689 00fa 0A080000 		.4byte	.LASF20
 1690 00fe 04       		.byte	0x4
 1691 00ff 34       		.byte	0x34
 1692 0100 77000000 		.4byte	0x77
 1693 0104 00       		.byte	0
 1694 0105 09       		.uleb128 0x9
 1695 0106 7E0A0000 		.4byte	.LASF21
 1696 010a 04       		.byte	0x4
 1697 010b 39       		.byte	0x39
 1698 010c 77000000 		.4byte	0x77
 1699 0110 02       		.byte	0x2
 1700 0111 09       		.uleb128 0x9
 1701 0112 92010000 		.4byte	.LASF22
 1702 0116 04       		.byte	0x4
 1703 0117 3E       		.byte	0x3e
 1704 0118 77000000 		.4byte	0x77
 1705 011c 04       		.byte	0x4
 1706 011d 09       		.uleb128 0x9
 1707 011e DF090000 		.4byte	.LASF23
 1708 0122 04       		.byte	0x4
 1709 0123 43       		.byte	0x43
 1710 0124 77000000 		.4byte	0x77
 1711 0128 06       		.byte	0x6
 1712 0129 09       		.uleb128 0x9
 1713 012a 0E0B0000 		.4byte	.LASF24
 1714 012e 04       		.byte	0x4
 1715 012f 48       		.byte	0x48
 1716 0130 83000000 		.4byte	0x83
 1717 0134 08       		.byte	0x8
 1718 0135 09       		.uleb128 0x9
 1719 0136 D1010000 		.4byte	.LASF25
 1720 013a 04       		.byte	0x4
 1721 013b 4D       		.byte	0x4d
 1722 013c 77000000 		.4byte	0x77
 1723 0140 0C       		.byte	0xc
 1724 0141 09       		.uleb128 0x9
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 85


 1725 0142 4B040000 		.4byte	.LASF26
 1726 0146 04       		.byte	0x4
 1727 0147 52       		.byte	0x52
 1728 0148 77000000 		.4byte	0x77
 1729 014c 0E       		.byte	0xe
 1730 014d 09       		.uleb128 0x9
 1731 014e AC070000 		.4byte	.LASF27
 1732 0152 04       		.byte	0x4
 1733 0153 57       		.byte	0x57
 1734 0154 72010000 		.4byte	0x172
 1735 0158 10       		.byte	0x10
 1736 0159 09       		.uleb128 0x9
 1737 015a 76040000 		.4byte	.LASF28
 1738 015e 04       		.byte	0x4
 1739 015f 5C       		.byte	0x5c
 1740 0160 72010000 		.4byte	0x172
 1741 0164 14       		.byte	0x14
 1742 0165 09       		.uleb128 0x9
 1743 0166 7B070000 		.4byte	.LASF29
 1744 016a 04       		.byte	0x4
 1745 016b 61       		.byte	0x61
 1746 016c 6B000000 		.4byte	0x6b
 1747 0170 18       		.byte	0x18
 1748 0171 00       		.byte	0
 1749 0172 06       		.uleb128 0x6
 1750 0173 04       		.byte	0x4
 1751 0174 77000000 		.4byte	0x77
 1752 0178 0A       		.uleb128 0xa
 1753 0179 B00B0000 		.4byte	.LASF30
 1754 017d 04       		.byte	0x4
 1755 017e 63       		.byte	0x63
 1756 017f F1000000 		.4byte	0xf1
 1757 0183 08       		.uleb128 0x8
 1758 0184 0C       		.byte	0xc
 1759 0185 04       		.byte	0x4
 1760 0186 6E       		.byte	0x6e
 1761 0187 E0010000 		.4byte	0x1e0
 1762 018b 09       		.uleb128 0x9
 1763 018c 3F0C0000 		.4byte	.LASF31
 1764 0190 04       		.byte	0x4
 1765 0191 73       		.byte	0x73
 1766 0192 77000000 		.4byte	0x77
 1767 0196 00       		.byte	0
 1768 0197 09       		.uleb128 0x9
 1769 0198 460C0000 		.4byte	.LASF32
 1770 019c 04       		.byte	0x4
 1771 019d 77       		.byte	0x77
 1772 019e 77000000 		.4byte	0x77
 1773 01a2 02       		.byte	0x2
 1774 01a3 09       		.uleb128 0x9
 1775 01a4 4D0C0000 		.4byte	.LASF33
 1776 01a8 04       		.byte	0x4
 1777 01a9 7B       		.byte	0x7b
 1778 01aa 77000000 		.4byte	0x77
 1779 01ae 04       		.byte	0x4
 1780 01af 09       		.uleb128 0x9
 1781 01b0 540C0000 		.4byte	.LASF34
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 86


 1782 01b4 04       		.byte	0x4
 1783 01b5 7F       		.byte	0x7f
 1784 01b6 77000000 		.4byte	0x77
 1785 01ba 06       		.byte	0x6
 1786 01bb 09       		.uleb128 0x9
 1787 01bc 5B0C0000 		.4byte	.LASF35
 1788 01c0 04       		.byte	0x4
 1789 01c1 83       		.byte	0x83
 1790 01c2 77000000 		.4byte	0x77
 1791 01c6 08       		.byte	0x8
 1792 01c7 09       		.uleb128 0x9
 1793 01c8 620C0000 		.4byte	.LASF36
 1794 01cc 04       		.byte	0x4
 1795 01cd 87       		.byte	0x87
 1796 01ce 6B000000 		.4byte	0x6b
 1797 01d2 0A       		.byte	0xa
 1798 01d3 09       		.uleb128 0x9
 1799 01d4 690C0000 		.4byte	.LASF37
 1800 01d8 04       		.byte	0x4
 1801 01d9 8B       		.byte	0x8b
 1802 01da 6B000000 		.4byte	0x6b
 1803 01de 0B       		.byte	0xb
 1804 01df 00       		.byte	0
 1805 01e0 0A       		.uleb128 0xa
 1806 01e1 53050000 		.4byte	.LASF38
 1807 01e5 04       		.byte	0x4
 1808 01e6 8C       		.byte	0x8c
 1809 01e7 83010000 		.4byte	0x183
 1810 01eb 0B       		.uleb128 0xb
 1811 01ec 01       		.byte	0x1
 1812 01ed 2C000000 		.4byte	0x2c
 1813 01f1 05       		.byte	0x5
 1814 01f2 70       		.byte	0x70
 1815 01f3 16020000 		.4byte	0x216
 1816 01f7 0C       		.uleb128 0xc
 1817 01f8 45070000 		.4byte	.LASF39
 1818 01fc 00       		.byte	0
 1819 01fd 0C       		.uleb128 0xc
 1820 01fe 3F0A0000 		.4byte	.LASF40
 1821 0202 01       		.byte	0x1
 1822 0203 0C       		.uleb128 0xc
 1823 0204 31090000 		.4byte	.LASF41
 1824 0208 02       		.byte	0x2
 1825 0209 0C       		.uleb128 0xc
 1826 020a 7D040000 		.4byte	.LASF42
 1827 020e 03       		.byte	0x3
 1828 020f 0C       		.uleb128 0xc
 1829 0210 EC070000 		.4byte	.LASF43
 1830 0214 04       		.byte	0x4
 1831 0215 00       		.byte	0
 1832 0216 0A       		.uleb128 0xa
 1833 0217 F3030000 		.4byte	.LASF44
 1834 021b 05       		.byte	0x5
 1835 021c 76       		.byte	0x76
 1836 021d EB010000 		.4byte	0x1eb
 1837 0221 08       		.uleb128 0x8
 1838 0222 12       		.byte	0x12
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 87


 1839 0223 05       		.byte	0x5
 1840 0224 8E       		.byte	0x8e
 1841 0225 BA020000 		.4byte	0x2ba
 1842 0229 09       		.uleb128 0x9
 1843 022a F5050000 		.4byte	.LASF45
 1844 022e 05       		.byte	0x5
 1845 022f 93       		.byte	0x93
 1846 0230 77000000 		.4byte	0x77
 1847 0234 00       		.byte	0
 1848 0235 09       		.uleb128 0x9
 1849 0236 BA0A0000 		.4byte	.LASF46
 1850 023a 05       		.byte	0x5
 1851 023b 98       		.byte	0x98
 1852 023c D9000000 		.4byte	0xd9
 1853 0240 02       		.byte	0x2
 1854 0241 09       		.uleb128 0x9
 1855 0242 87050000 		.4byte	.LASF47
 1856 0246 05       		.byte	0x5
 1857 0247 9D       		.byte	0x9d
 1858 0248 6B000000 		.4byte	0x6b
 1859 024c 04       		.byte	0x4
 1860 024d 09       		.uleb128 0x9
 1861 024e CF060000 		.4byte	.LASF48
 1862 0252 05       		.byte	0x5
 1863 0253 A2       		.byte	0xa2
 1864 0254 6B000000 		.4byte	0x6b
 1865 0258 05       		.byte	0x5
 1866 0259 09       		.uleb128 0x9
 1867 025a 2A070000 		.4byte	.LASF49
 1868 025e 05       		.byte	0x5
 1869 025f A8       		.byte	0xa8
 1870 0260 6B000000 		.4byte	0x6b
 1871 0264 06       		.byte	0x6
 1872 0265 09       		.uleb128 0x9
 1873 0266 66060000 		.4byte	.LASF50
 1874 026a 05       		.byte	0x5
 1875 026b AE       		.byte	0xae
 1876 026c 6B000000 		.4byte	0x6b
 1877 0270 07       		.byte	0x7
 1878 0271 09       		.uleb128 0x9
 1879 0272 E0040000 		.4byte	.LASF51
 1880 0276 05       		.byte	0x5
 1881 0277 B5       		.byte	0xb5
 1882 0278 E5000000 		.4byte	0xe5
 1883 027c 08       		.byte	0x8
 1884 027d 09       		.uleb128 0x9
 1885 027e 830A0000 		.4byte	.LASF52
 1886 0282 05       		.byte	0x5
 1887 0283 BC       		.byte	0xbc
 1888 0284 BA020000 		.4byte	0x2ba
 1889 0288 09       		.byte	0x9
 1890 0289 09       		.uleb128 0x9
 1891 028a 6E0B0000 		.4byte	.LASF53
 1892 028e 05       		.byte	0x5
 1893 028f C4       		.byte	0xc4
 1894 0290 77000000 		.4byte	0x77
 1895 0294 0A       		.byte	0xa
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 88


 1896 0295 09       		.uleb128 0x9
 1897 0296 78080000 		.4byte	.LASF54
 1898 029a 05       		.byte	0x5
 1899 029b C9       		.byte	0xc9
 1900 029c 6B000000 		.4byte	0x6b
 1901 02a0 0C       		.byte	0xc
 1902 02a1 09       		.uleb128 0x9
 1903 02a2 DF090000 		.4byte	.LASF23
 1904 02a6 05       		.byte	0x5
 1905 02a7 CF       		.byte	0xcf
 1906 02a8 77000000 		.4byte	0x77
 1907 02ac 0E       		.byte	0xe
 1908 02ad 09       		.uleb128 0x9
 1909 02ae 76040000 		.4byte	.LASF28
 1910 02b2 05       		.byte	0x5
 1911 02b3 D4       		.byte	0xd4
 1912 02b4 77000000 		.4byte	0x77
 1913 02b8 10       		.byte	0x10
 1914 02b9 00       		.byte	0
 1915 02ba 0D       		.uleb128 0xd
 1916 02bb 6B000000 		.4byte	0x6b
 1917 02bf CA020000 		.4byte	0x2ca
 1918 02c3 0E       		.uleb128 0xe
 1919 02c4 CA020000 		.4byte	0x2ca
 1920 02c8 00       		.byte	0
 1921 02c9 00       		.byte	0
 1922 02ca 02       		.uleb128 0x2
 1923 02cb 04       		.byte	0x4
 1924 02cc 07       		.byte	0x7
 1925 02cd 85080000 		.4byte	.LASF55
 1926 02d1 0A       		.uleb128 0xa
 1927 02d2 FC060000 		.4byte	.LASF56
 1928 02d6 05       		.byte	0x5
 1929 02d7 D5       		.byte	0xd5
 1930 02d8 21020000 		.4byte	0x221
 1931 02dc 08       		.uleb128 0x8
 1932 02dd 12       		.byte	0x12
 1933 02de 05       		.byte	0x5
 1934 02df DA       		.byte	0xda
 1935 02e0 7B030000 		.4byte	0x37b
 1936 02e4 09       		.uleb128 0x9
 1937 02e5 F5050000 		.4byte	.LASF45
 1938 02e9 05       		.byte	0x5
 1939 02ea DF       		.byte	0xdf
 1940 02eb 77000000 		.4byte	0x77
 1941 02ef 00       		.byte	0
 1942 02f0 09       		.uleb128 0x9
 1943 02f1 BA0A0000 		.4byte	.LASF46
 1944 02f5 05       		.byte	0x5
 1945 02f6 E4       		.byte	0xe4
 1946 02f7 D9000000 		.4byte	0xd9
 1947 02fb 02       		.byte	0x2
 1948 02fc 09       		.uleb128 0x9
 1949 02fd 87050000 		.4byte	.LASF47
 1950 0301 05       		.byte	0x5
 1951 0302 E9       		.byte	0xe9
 1952 0303 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 89


 1953 0307 04       		.byte	0x4
 1954 0308 09       		.uleb128 0x9
 1955 0309 CF060000 		.4byte	.LASF48
 1956 030d 05       		.byte	0x5
 1957 030e EE       		.byte	0xee
 1958 030f 6B000000 		.4byte	0x6b
 1959 0313 05       		.byte	0x5
 1960 0314 09       		.uleb128 0x9
 1961 0315 2A070000 		.4byte	.LASF49
 1962 0319 05       		.byte	0x5
 1963 031a F4       		.byte	0xf4
 1964 031b 6B000000 		.4byte	0x6b
 1965 031f 06       		.byte	0x6
 1966 0320 09       		.uleb128 0x9
 1967 0321 66060000 		.4byte	.LASF50
 1968 0325 05       		.byte	0x5
 1969 0326 FA       		.byte	0xfa
 1970 0327 6B000000 		.4byte	0x6b
 1971 032b 07       		.byte	0x7
 1972 032c 0F       		.uleb128 0xf
 1973 032d E0040000 		.4byte	.LASF51
 1974 0331 05       		.byte	0x5
 1975 0332 0101     		.2byte	0x101
 1976 0334 E5000000 		.4byte	0xe5
 1977 0338 08       		.byte	0x8
 1978 0339 0F       		.uleb128 0xf
 1979 033a 830A0000 		.4byte	.LASF52
 1980 033e 05       		.byte	0x5
 1981 033f 0801     		.2byte	0x108
 1982 0341 BA020000 		.4byte	0x2ba
 1983 0345 09       		.byte	0x9
 1984 0346 0F       		.uleb128 0xf
 1985 0347 6E0B0000 		.4byte	.LASF53
 1986 034b 05       		.byte	0x5
 1987 034c 1001     		.2byte	0x110
 1988 034e 77000000 		.4byte	0x77
 1989 0352 0A       		.byte	0xa
 1990 0353 0F       		.uleb128 0xf
 1991 0354 78080000 		.4byte	.LASF54
 1992 0358 05       		.byte	0x5
 1993 0359 1501     		.2byte	0x115
 1994 035b 6B000000 		.4byte	0x6b
 1995 035f 0C       		.byte	0xc
 1996 0360 0F       		.uleb128 0xf
 1997 0361 DF090000 		.4byte	.LASF23
 1998 0365 05       		.byte	0x5
 1999 0366 1B01     		.2byte	0x11b
 2000 0368 77000000 		.4byte	0x77
 2001 036c 0E       		.byte	0xe
 2002 036d 0F       		.uleb128 0xf
 2003 036e 76040000 		.4byte	.LASF28
 2004 0372 05       		.byte	0x5
 2005 0373 2001     		.2byte	0x120
 2006 0375 77000000 		.4byte	0x77
 2007 0379 10       		.byte	0x10
 2008 037a 00       		.byte	0
 2009 037b 04       		.uleb128 0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 90


 2010 037c 860C0000 		.4byte	.LASF57
 2011 0380 05       		.byte	0x5
 2012 0381 2101     		.2byte	0x121
 2013 0383 DC020000 		.4byte	0x2dc
 2014 0387 10       		.uleb128 0x10
 2015 0388 5A       		.byte	0x5a
 2016 0389 05       		.byte	0x5
 2017 038a 2701     		.2byte	0x127
 2018 038c D2030000 		.4byte	0x3d2
 2019 0390 0F       		.uleb128 0xf
 2020 0391 4F090000 		.4byte	.LASF58
 2021 0395 05       		.byte	0x5
 2022 0396 2C01     		.2byte	0x12c
 2023 0398 7B030000 		.4byte	0x37b
 2024 039c 00       		.byte	0
 2025 039d 0F       		.uleb128 0xf
 2026 039e 57090000 		.4byte	.LASF59
 2027 03a2 05       		.byte	0x5
 2028 03a3 3101     		.2byte	0x131
 2029 03a5 7B030000 		.4byte	0x37b
 2030 03a9 12       		.byte	0x12
 2031 03aa 0F       		.uleb128 0xf
 2032 03ab 5F090000 		.4byte	.LASF60
 2033 03af 05       		.byte	0x5
 2034 03b0 3601     		.2byte	0x136
 2035 03b2 7B030000 		.4byte	0x37b
 2036 03b6 24       		.byte	0x24
 2037 03b7 0F       		.uleb128 0xf
 2038 03b8 67090000 		.4byte	.LASF61
 2039 03bc 05       		.byte	0x5
 2040 03bd 3B01     		.2byte	0x13b
 2041 03bf 7B030000 		.4byte	0x37b
 2042 03c3 36       		.byte	0x36
 2043 03c4 0F       		.uleb128 0xf
 2044 03c5 6F090000 		.4byte	.LASF62
 2045 03c9 05       		.byte	0x5
 2046 03ca 4001     		.2byte	0x140
 2047 03cc 7B030000 		.4byte	0x37b
 2048 03d0 48       		.byte	0x48
 2049 03d1 00       		.byte	0
 2050 03d2 04       		.uleb128 0x4
 2051 03d3 41020000 		.4byte	.LASF63
 2052 03d7 05       		.byte	0x5
 2053 03d8 4101     		.2byte	0x141
 2054 03da 87030000 		.4byte	0x387
 2055 03de 10       		.uleb128 0x10
 2056 03df 0A       		.byte	0xa
 2057 03e0 05       		.byte	0x5
 2058 03e1 4701     		.2byte	0x147
 2059 03e3 36040000 		.4byte	0x436
 2060 03e7 11       		.uleb128 0x11
 2061 03e8 72617700 		.ascii	"raw\000"
 2062 03ec 05       		.byte	0x5
 2063 03ed 4C01     		.2byte	0x14c
 2064 03ef 36040000 		.4byte	0x436
 2065 03f3 00       		.byte	0
 2066 03f4 0F       		.uleb128 0xf
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 91


 2067 03f5 980B0000 		.4byte	.LASF64
 2068 03f9 05       		.byte	0x5
 2069 03fa 5101     		.2byte	0x151
 2070 03fc 36040000 		.4byte	0x436
 2071 0400 02       		.byte	0x2
 2072 0401 0F       		.uleb128 0xf
 2073 0402 E20A0000 		.4byte	.LASF65
 2074 0406 05       		.byte	0x5
 2075 0407 5701     		.2byte	0x157
 2076 0409 BA020000 		.4byte	0x2ba
 2077 040d 04       		.byte	0x4
 2078 040e 0F       		.uleb128 0xf
 2079 040f 1D090000 		.4byte	.LASF66
 2080 0413 05       		.byte	0x5
 2081 0414 5C01     		.2byte	0x15c
 2082 0416 D9000000 		.4byte	0xd9
 2083 041a 06       		.byte	0x6
 2084 041b 0F       		.uleb128 0xf
 2085 041c 170C0000 		.4byte	.LASF67
 2086 0420 05       		.byte	0x5
 2087 0421 6101     		.2byte	0x161
 2088 0423 46040000 		.4byte	0x446
 2089 0427 08       		.byte	0x8
 2090 0428 0F       		.uleb128 0xf
 2091 0429 2F060000 		.4byte	.LASF68
 2092 042d 05       		.byte	0x5
 2093 042e 6601     		.2byte	0x166
 2094 0430 BA020000 		.4byte	0x2ba
 2095 0434 09       		.byte	0x9
 2096 0435 00       		.byte	0
 2097 0436 0D       		.uleb128 0xd
 2098 0437 77000000 		.4byte	0x77
 2099 043b 46040000 		.4byte	0x446
 2100 043f 0E       		.uleb128 0xe
 2101 0440 CA020000 		.4byte	0x2ca
 2102 0444 00       		.byte	0
 2103 0445 00       		.byte	0
 2104 0446 0D       		.uleb128 0xd
 2105 0447 E5000000 		.4byte	0xe5
 2106 044b 56040000 		.4byte	0x456
 2107 044f 0E       		.uleb128 0xe
 2108 0450 CA020000 		.4byte	0x2ca
 2109 0454 00       		.byte	0
 2110 0455 00       		.byte	0
 2111 0456 04       		.uleb128 0x4
 2112 0457 250C0000 		.4byte	.LASF69
 2113 045b 05       		.byte	0x5
 2114 045c 6701     		.2byte	0x167
 2115 045e DE030000 		.4byte	0x3de
 2116 0462 10       		.uleb128 0x10
 2117 0463 32       		.byte	0x32
 2118 0464 05       		.byte	0x5
 2119 0465 6D01     		.2byte	0x16d
 2120 0467 AD040000 		.4byte	0x4ad
 2121 046b 0F       		.uleb128 0xf
 2122 046c 4F090000 		.4byte	.LASF58
 2123 0470 05       		.byte	0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 92


 2124 0471 7201     		.2byte	0x172
 2125 0473 AD040000 		.4byte	0x4ad
 2126 0477 00       		.byte	0
 2127 0478 0F       		.uleb128 0xf
 2128 0479 57090000 		.4byte	.LASF59
 2129 047d 05       		.byte	0x5
 2130 047e 7701     		.2byte	0x177
 2131 0480 AD040000 		.4byte	0x4ad
 2132 0484 0A       		.byte	0xa
 2133 0485 0F       		.uleb128 0xf
 2134 0486 5F090000 		.4byte	.LASF60
 2135 048a 05       		.byte	0x5
 2136 048b 7C01     		.2byte	0x17c
 2137 048d AD040000 		.4byte	0x4ad
 2138 0491 14       		.byte	0x14
 2139 0492 0F       		.uleb128 0xf
 2140 0493 67090000 		.4byte	.LASF61
 2141 0497 05       		.byte	0x5
 2142 0498 8101     		.2byte	0x181
 2143 049a AD040000 		.4byte	0x4ad
 2144 049e 1E       		.byte	0x1e
 2145 049f 0F       		.uleb128 0xf
 2146 04a0 6F090000 		.4byte	.LASF62
 2147 04a4 05       		.byte	0x5
 2148 04a5 8601     		.2byte	0x186
 2149 04a7 AD040000 		.4byte	0x4ad
 2150 04ab 28       		.byte	0x28
 2151 04ac 00       		.byte	0
 2152 04ad 0D       		.uleb128 0xd
 2153 04ae 56040000 		.4byte	0x456
 2154 04b2 BD040000 		.4byte	0x4bd
 2155 04b6 0E       		.uleb128 0xe
 2156 04b7 CA020000 		.4byte	0x2ca
 2157 04bb 00       		.byte	0
 2158 04bc 00       		.byte	0
 2159 04bd 04       		.uleb128 0x4
 2160 04be 5C070000 		.4byte	.LASF70
 2161 04c2 05       		.byte	0x5
 2162 04c3 8701     		.2byte	0x187
 2163 04c5 62040000 		.4byte	0x462
 2164 04c9 10       		.uleb128 0x10
 2165 04ca B4       		.byte	0xb4
 2166 04cb 05       		.byte	0x5
 2167 04cc 8D01     		.2byte	0x18d
 2168 04ce B0050000 		.4byte	0x5b0
 2169 04d2 0F       		.uleb128 0xf
 2170 04d3 33080000 		.4byte	.LASF71
 2171 04d7 05       		.byte	0x5
 2172 04d8 9401     		.2byte	0x194
 2173 04da 77000000 		.4byte	0x77
 2174 04de 00       		.byte	0
 2175 04df 0F       		.uleb128 0xf
 2176 04e0 700C0000 		.4byte	.LASF72
 2177 04e4 05       		.byte	0x5
 2178 04e5 9901     		.2byte	0x199
 2179 04e7 77000000 		.4byte	0x77
 2180 04eb 02       		.byte	0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 93


 2181 04ec 0F       		.uleb128 0xf
 2182 04ed 04010000 		.4byte	.LASF73
 2183 04f1 05       		.byte	0x5
 2184 04f2 9E01     		.2byte	0x19e
 2185 04f4 77000000 		.4byte	0x77
 2186 04f8 04       		.byte	0x4
 2187 04f9 0F       		.uleb128 0xf
 2188 04fa 22090000 		.4byte	.LASF74
 2189 04fe 05       		.byte	0x5
 2190 04ff A401     		.2byte	0x1a4
 2191 0501 77000000 		.4byte	0x77
 2192 0505 06       		.byte	0x6
 2193 0506 0F       		.uleb128 0xf
 2194 0507 F8000000 		.4byte	.LASF75
 2195 050b 05       		.byte	0x5
 2196 050c A901     		.2byte	0x1a9
 2197 050e 77000000 		.4byte	0x77
 2198 0512 08       		.byte	0x8
 2199 0513 0F       		.uleb128 0xf
 2200 0514 16060000 		.4byte	.LASF76
 2201 0518 05       		.byte	0x5
 2202 0519 AE01     		.2byte	0x1ae
 2203 051b C1000000 		.4byte	0xc1
 2204 051f 0C       		.byte	0xc
 2205 0520 0F       		.uleb128 0xf
 2206 0521 E1080000 		.4byte	.LASF77
 2207 0525 05       		.byte	0x5
 2208 0526 B401     		.2byte	0x1b4
 2209 0528 B0050000 		.4byte	0x5b0
 2210 052c 10       		.byte	0x10
 2211 052d 0F       		.uleb128 0xf
 2212 052e E9090000 		.4byte	.LASF78
 2213 0532 05       		.byte	0x5
 2214 0533 BB01     		.2byte	0x1bb
 2215 0535 B0050000 		.4byte	0x5b0
 2216 0539 14       		.byte	0x14
 2217 053a 0F       		.uleb128 0xf
 2218 053b 5F080000 		.4byte	.LASF79
 2219 053f 05       		.byte	0x5
 2220 0540 CB01     		.2byte	0x1cb
 2221 0542 C0050000 		.4byte	0x5c0
 2222 0546 18       		.byte	0x18
 2223 0547 0F       		.uleb128 0xf
 2224 0548 D8060000 		.4byte	.LASF80
 2225 054c 05       		.byte	0x5
 2226 054d D101     		.2byte	0x1d1
 2227 054f 77000000 		.4byte	0x77
 2228 0553 1E       		.byte	0x1e
 2229 0554 0F       		.uleb128 0xf
 2230 0555 2A040000 		.4byte	.LASF81
 2231 0559 05       		.byte	0x5
 2232 055a D601     		.2byte	0x1d6
 2233 055c 6B000000 		.4byte	0x6b
 2234 0560 20       		.byte	0x20
 2235 0561 0F       		.uleb128 0xf
 2236 0562 A9060000 		.4byte	.LASF82
 2237 0566 05       		.byte	0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 94


 2238 0567 DB01     		.2byte	0x1db
 2239 0569 D2030000 		.4byte	0x3d2
 2240 056d 22       		.byte	0x22
 2241 056e 0F       		.uleb128 0xf
 2242 056f 86030000 		.4byte	.LASF83
 2243 0573 05       		.byte	0x5
 2244 0574 E001     		.2byte	0x1e0
 2245 0576 BD040000 		.4byte	0x4bd
 2246 057a 7C       		.byte	0x7c
 2247 057b 0F       		.uleb128 0xf
 2248 057c 8E000000 		.4byte	.LASF84
 2249 0580 05       		.byte	0x5
 2250 0581 E501     		.2byte	0x1e5
 2251 0583 6B000000 		.4byte	0x6b
 2252 0587 AE       		.byte	0xae
 2253 0588 0F       		.uleb128 0xf
 2254 0589 A5030000 		.4byte	.LASF85
 2255 058d 05       		.byte	0x5
 2256 058e EA01     		.2byte	0x1ea
 2257 0590 6B000000 		.4byte	0x6b
 2258 0594 AF       		.byte	0xaf
 2259 0595 0F       		.uleb128 0xf
 2260 0596 20080000 		.4byte	.LASF86
 2261 059a 05       		.byte	0x5
 2262 059b EF01     		.2byte	0x1ef
 2263 059d 77000000 		.4byte	0x77
 2264 05a1 B0       		.byte	0xb0
 2265 05a2 0F       		.uleb128 0xf
 2266 05a3 BF060000 		.4byte	.LASF87
 2267 05a7 05       		.byte	0x5
 2268 05a8 F401     		.2byte	0x1f4
 2269 05aa 36040000 		.4byte	0x436
 2270 05ae B2       		.byte	0xb2
 2271 05af 00       		.byte	0
 2272 05b0 0D       		.uleb128 0xd
 2273 05b1 83000000 		.4byte	0x83
 2274 05b5 C0050000 		.4byte	0x5c0
 2275 05b9 0E       		.uleb128 0xe
 2276 05ba CA020000 		.4byte	0x2ca
 2277 05be 00       		.byte	0
 2278 05bf 00       		.byte	0
 2279 05c0 0D       		.uleb128 0xd
 2280 05c1 6B000000 		.4byte	0x6b
 2281 05c5 D0050000 		.4byte	0x5d0
 2282 05c9 0E       		.uleb128 0xe
 2283 05ca CA020000 		.4byte	0x2ca
 2284 05ce 04       		.byte	0x4
 2285 05cf 00       		.byte	0
 2286 05d0 04       		.uleb128 0x4
 2287 05d1 00060000 		.4byte	.LASF88
 2288 05d5 05       		.byte	0x5
 2289 05d6 F501     		.2byte	0x1f5
 2290 05d8 C9040000 		.4byte	0x4c9
 2291 05dc 10       		.uleb128 0x10
 2292 05dd 1C       		.byte	0x1c
 2293 05de 05       		.byte	0x5
 2294 05df FB01     		.2byte	0x1fb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 95


 2295 05e1 5B060000 		.4byte	0x65b
 2296 05e5 0F       		.uleb128 0xf
 2297 05e6 1A070000 		.4byte	.LASF89
 2298 05ea 05       		.byte	0x5
 2299 05eb 0002     		.2byte	0x200
 2300 05ed 5B060000 		.4byte	0x65b
 2301 05f1 00       		.byte	0
 2302 05f2 0F       		.uleb128 0xf
 2303 05f3 38060000 		.4byte	.LASF90
 2304 05f7 05       		.byte	0x5
 2305 05f8 0502     		.2byte	0x205
 2306 05fa 5B060000 		.4byte	0x65b
 2307 05fe 04       		.byte	0x4
 2308 05ff 0F       		.uleb128 0xf
 2309 0600 55040000 		.4byte	.LASF91
 2310 0604 05       		.byte	0x5
 2311 0605 0A02     		.2byte	0x20a
 2312 0607 5B060000 		.4byte	0x65b
 2313 060b 08       		.byte	0x8
 2314 060c 0F       		.uleb128 0xf
 2315 060d 2B090000 		.4byte	.LASF92
 2316 0611 05       		.byte	0x5
 2317 0612 0F02     		.2byte	0x20f
 2318 0614 5B060000 		.4byte	0x65b
 2319 0618 0C       		.byte	0xc
 2320 0619 0F       		.uleb128 0xf
 2321 061a 3A0B0000 		.4byte	.LASF93
 2322 061e 05       		.byte	0x5
 2323 061f 1402     		.2byte	0x214
 2324 0621 83000000 		.4byte	0x83
 2325 0625 10       		.byte	0x10
 2326 0626 0F       		.uleb128 0xf
 2327 0627 0C010000 		.4byte	.LASF94
 2328 062b 05       		.byte	0x5
 2329 062c 1902     		.2byte	0x219
 2330 062e 83000000 		.4byte	0x83
 2331 0632 14       		.byte	0x14
 2332 0633 0F       		.uleb128 0xf
 2333 0634 E3050000 		.4byte	.LASF95
 2334 0638 05       		.byte	0x5
 2335 0639 1E02     		.2byte	0x21e
 2336 063b 6B000000 		.4byte	0x6b
 2337 063f 18       		.byte	0x18
 2338 0640 0F       		.uleb128 0xf
 2339 0641 5D0A0000 		.4byte	.LASF96
 2340 0645 05       		.byte	0x5
 2341 0646 2302     		.2byte	0x223
 2342 0648 6B000000 		.4byte	0x6b
 2343 064c 19       		.byte	0x19
 2344 064d 0F       		.uleb128 0xf
 2345 064e B7020000 		.4byte	.LASF97
 2346 0652 05       		.byte	0x5
 2347 0653 2802     		.2byte	0x228
 2348 0655 6B000000 		.4byte	0x6b
 2349 0659 1A       		.byte	0x1a
 2350 065a 00       		.byte	0
 2351 065b 06       		.uleb128 0x6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 96


 2352 065c 04       		.byte	0x4
 2353 065d B5000000 		.4byte	0xb5
 2354 0661 04       		.uleb128 0x4
 2355 0662 C60B0000 		.4byte	.LASF98
 2356 0666 05       		.byte	0x5
 2357 0667 2902     		.2byte	0x229
 2358 0669 DC050000 		.4byte	0x5dc
 2359 066d 10       		.uleb128 0x10
 2360 066e 20       		.byte	0x20
 2361 066f 05       		.byte	0x5
 2362 0670 5C02     		.2byte	0x25c
 2363 0672 F9060000 		.4byte	0x6f9
 2364 0676 0F       		.uleb128 0xf
 2365 0677 B2060000 		.4byte	.LASF99
 2366 067b 05       		.byte	0x5
 2367 067c 6502     		.2byte	0x265
 2368 067e F9060000 		.4byte	0x6f9
 2369 0682 00       		.byte	0
 2370 0683 0F       		.uleb128 0xf
 2371 0684 1E0B0000 		.4byte	.LASF100
 2372 0688 05       		.byte	0x5
 2373 0689 6C02     		.2byte	0x26c
 2374 068b 00070000 		.4byte	0x700
 2375 068f 04       		.byte	0x4
 2376 0690 0F       		.uleb128 0xf
 2377 0691 3C080000 		.4byte	.LASF101
 2378 0695 05       		.byte	0x5
 2379 0696 7202     		.2byte	0x272
 2380 0698 02070000 		.4byte	0x702
 2381 069c 08       		.byte	0x8
 2382 069d 0F       		.uleb128 0xf
 2383 069e 35070000 		.4byte	.LASF102
 2384 06a2 05       		.byte	0x5
 2385 06a3 7802     		.2byte	0x278
 2386 06a5 00070000 		.4byte	0x700
 2387 06a9 0C       		.byte	0xc
 2388 06aa 0F       		.uleb128 0xf
 2389 06ab 8B0A0000 		.4byte	.LASF103
 2390 06af 05       		.byte	0x5
 2391 06b0 7F02     		.2byte	0x27f
 2392 06b2 08070000 		.4byte	0x708
 2393 06b6 10       		.byte	0x10
 2394 06b7 0F       		.uleb128 0xf
 2395 06b8 010B0000 		.4byte	.LASF104
 2396 06bc 05       		.byte	0x5
 2397 06bd 8402     		.2byte	0x284
 2398 06bf 83000000 		.4byte	0x83
 2399 06c3 14       		.byte	0x14
 2400 06c4 0F       		.uleb128 0xf
 2401 06c5 47050000 		.4byte	.LASF105
 2402 06c9 05       		.byte	0x5
 2403 06ca 8B02     		.2byte	0x28b
 2404 06cc 77000000 		.4byte	0x77
 2405 06d0 18       		.byte	0x18
 2406 06d1 0F       		.uleb128 0xf
 2407 06d2 C4030000 		.4byte	.LASF106
 2408 06d6 05       		.byte	0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 97


 2409 06d7 9202     		.2byte	0x292
 2410 06d9 6B000000 		.4byte	0x6b
 2411 06dd 1A       		.byte	0x1a
 2412 06de 0F       		.uleb128 0xf
 2413 06df B9090000 		.4byte	.LASF107
 2414 06e3 05       		.byte	0x5
 2415 06e4 9C02     		.2byte	0x29c
 2416 06e6 6B000000 		.4byte	0x6b
 2417 06ea 1B       		.byte	0x1b
 2418 06eb 0F       		.uleb128 0xf
 2419 06ec B5030000 		.4byte	.LASF108
 2420 06f0 05       		.byte	0x5
 2421 06f1 A402     		.2byte	0x2a4
 2422 06f3 0E070000 		.4byte	0x70e
 2423 06f7 1C       		.byte	0x1c
 2424 06f8 00       		.byte	0
 2425 06f9 06       		.uleb128 0x6
 2426 06fa 04       		.byte	0x4
 2427 06fb FF060000 		.4byte	0x6ff
 2428 06ff 12       		.uleb128 0x12
 2429 0700 13       		.uleb128 0x13
 2430 0701 04       		.byte	0x4
 2431 0702 06       		.uleb128 0x6
 2432 0703 04       		.byte	0x4
 2433 0704 56040000 		.4byte	0x456
 2434 0708 06       		.uleb128 0x6
 2435 0709 04       		.byte	0x4
 2436 070a 6B000000 		.4byte	0x6b
 2437 070e 06       		.uleb128 0x6
 2438 070f 04       		.byte	0x4
 2439 0710 E0010000 		.4byte	0x1e0
 2440 0714 04       		.uleb128 0x4
 2441 0715 50000000 		.4byte	.LASF109
 2442 0719 05       		.byte	0x5
 2443 071a A502     		.2byte	0x2a5
 2444 071c 6D060000 		.4byte	0x66d
 2445 0720 10       		.uleb128 0x10
 2446 0721 A0       		.byte	0xa0
 2447 0722 05       		.byte	0x5
 2448 0723 AB02     		.2byte	0x2ab
 2449 0725 37070000 		.4byte	0x737
 2450 0729 0F       		.uleb128 0xf
 2451 072a E60C0000 		.4byte	.LASF110
 2452 072e 05       		.byte	0x5
 2453 072f B002     		.2byte	0x2b0
 2454 0731 37070000 		.4byte	0x737
 2455 0735 00       		.byte	0
 2456 0736 00       		.byte	0
 2457 0737 0D       		.uleb128 0xd
 2458 0738 14070000 		.4byte	0x714
 2459 073c 47070000 		.4byte	0x747
 2460 0740 0E       		.uleb128 0xe
 2461 0741 CA020000 		.4byte	0x2ca
 2462 0745 04       		.byte	0x4
 2463 0746 00       		.byte	0
 2464 0747 04       		.uleb128 0x4
 2465 0748 47080000 		.4byte	.LASF111
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 98


 2466 074c 05       		.byte	0x5
 2467 074d B102     		.2byte	0x2b1
 2468 074f 20070000 		.4byte	0x720
 2469 0753 02       		.uleb128 0x2
 2470 0754 08       		.byte	0x8
 2471 0755 04       		.byte	0x4
 2472 0756 F0060000 		.4byte	.LASF112
 2473 075a 14       		.uleb128 0x14
 2474 075b 02050000 		.4byte	.LASF117
 2475 075f 01       		.byte	0x1
 2476 0760 BE08     		.2byte	0x8be
 2477 0762 00000000 		.4byte	.LFB19
 2478 0766 06000000 		.4byte	.LFE19-.LFB19
 2479 076a 01       		.uleb128 0x1
 2480 076b 9C       		.byte	0x9c
 2481 076c A7070000 		.4byte	0x7a7
 2482 0770 15       		.uleb128 0x15
 2483 0771 B8070000 		.4byte	.LASF113
 2484 0775 01       		.byte	0x1
 2485 0776 BE08     		.2byte	0x8be
 2486 0778 83000000 		.4byte	0x83
 2487 077c 01       		.uleb128 0x1
 2488 077d 50       		.byte	0x50
 2489 077e 15       		.uleb128 0x15
 2490 077f 70020000 		.4byte	.LASF114
 2491 0783 01       		.byte	0x1
 2492 0784 BE08     		.2byte	0x8be
 2493 0786 A7070000 		.4byte	0x7a7
 2494 078a 01       		.uleb128 0x1
 2495 078b 51       		.byte	0x51
 2496 078c 16       		.uleb128 0x16
 2497 078d CD030000 		.4byte	.LASF115
 2498 0791 01       		.byte	0x1
 2499 0792 C008     		.2byte	0x8c0
 2500 0794 6B000000 		.4byte	0x6b
 2501 0798 00       		.byte	0
 2502 0799 16       		.uleb128 0x16
 2503 079a 6F010000 		.4byte	.LASF116
 2504 079e 01       		.byte	0x1
 2505 079f C108     		.2byte	0x8c1
 2506 07a1 6B000000 		.4byte	0x6b
 2507 07a5 00       		.byte	0
 2508 07a6 00       		.byte	0
 2509 07a7 06       		.uleb128 0x6
 2510 07a8 04       		.byte	0x4
 2511 07a9 D1020000 		.4byte	0x2d1
 2512 07ad 14       		.uleb128 0x14
 2513 07ae 34000000 		.4byte	.LASF118
 2514 07b2 01       		.byte	0x1
 2515 07b3 FA02     		.2byte	0x2fa
 2516 07b5 00000000 		.4byte	.LFB7
 2517 07b9 24000000 		.4byte	.LFE7-.LFB7
 2518 07bd 01       		.uleb128 0x1
 2519 07be 9C       		.byte	0x9c
 2520 07bf DD070000 		.4byte	0x7dd
 2521 07c3 17       		.uleb128 0x17
 2522 07c4 E10B0000 		.4byte	.LASF119
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 99


 2523 07c8 01       		.byte	0x1
 2524 07c9 FC02     		.2byte	0x2fc
 2525 07cb 83000000 		.4byte	0x83
 2526 07cf 00000000 		.4byte	.LLST0
 2527 07d3 18       		.uleb128 0x18
 2528 07d4 1A000000 		.4byte	.LVL5
 2529 07d8 CC0F0000 		.4byte	0xfcc
 2530 07dc 00       		.byte	0
 2531 07dd 19       		.uleb128 0x19
 2532 07de 5D010000 		.4byte	.LASF192
 2533 07e2 01       		.byte	0x1
 2534 07e3 E9       		.byte	0xe9
 2535 07e4 83000000 		.4byte	0x83
 2536 07e8 00000000 		.4byte	.LFB1
 2537 07ec 10000000 		.4byte	.LFE1-.LFB1
 2538 07f0 01       		.uleb128 0x1
 2539 07f1 9C       		.byte	0x9c
 2540 07f2 1A       		.uleb128 0x1a
 2541 07f3 65030000 		.4byte	.LASF122
 2542 07f7 01       		.byte	0x1
 2543 07f8 1D01     		.2byte	0x11d
 2544 07fa A4000000 		.4byte	0xa4
 2545 07fe 00000000 		.4byte	.LFB2
 2546 0802 40000000 		.4byte	.LFE2-.LFB2
 2547 0806 01       		.uleb128 0x1
 2548 0807 9C       		.byte	0x9c
 2549 0808 36080000 		.4byte	0x836
 2550 080c 1B       		.uleb128 0x1b
 2551 080d A60C0000 		.4byte	.LASF120
 2552 0811 01       		.byte	0x1
 2553 0812 1D01     		.2byte	0x11d
 2554 0814 83000000 		.4byte	0x83
 2555 0818 13000000 		.4byte	.LLST1
 2556 081c 17       		.uleb128 0x17
 2557 081d 790C0000 		.4byte	.LASF121
 2558 0821 01       		.byte	0x1
 2559 0822 1F01     		.2byte	0x11f
 2560 0824 A4000000 		.4byte	0xa4
 2561 0828 34000000 		.4byte	.LLST2
 2562 082c 18       		.uleb128 0x18
 2563 082d 38000000 		.4byte	.LVL8
 2564 0831 D80F0000 		.4byte	0xfd8
 2565 0835 00       		.byte	0
 2566 0836 1A       		.uleb128 0x1a
 2567 0837 DC070000 		.4byte	.LASF123
 2568 083b 01       		.byte	0x1
 2569 083c 7001     		.2byte	0x170
 2570 083e A4000000 		.4byte	0xa4
 2571 0842 00000000 		.4byte	.LFB3
 2572 0846 2C000000 		.4byte	.LFE3-.LFB3
 2573 084a 01       		.uleb128 0x1
 2574 084b 9C       		.byte	0x9c
 2575 084c 6A080000 		.4byte	0x86a
 2576 0850 17       		.uleb128 0x17
 2577 0851 6B000000 		.4byte	.LASF124
 2578 0855 01       		.byte	0x1
 2579 0856 7201     		.2byte	0x172
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 100


 2580 0858 A4000000 		.4byte	0xa4
 2581 085c 52000000 		.4byte	.LLST3
 2582 0860 18       		.uleb128 0x18
 2583 0861 16000000 		.4byte	.LVL11
 2584 0865 E40F0000 		.4byte	0xfe4
 2585 0869 00       		.byte	0
 2586 086a 1A       		.uleb128 0x1a
 2587 086b C9050000 		.4byte	.LASF125
 2588 086f 01       		.byte	0x1
 2589 0870 AE01     		.2byte	0x1ae
 2590 0872 A4000000 		.4byte	0xa4
 2591 0876 00000000 		.4byte	.LFB4
 2592 087a 48000000 		.4byte	.LFE4-.LFB4
 2593 087e 01       		.uleb128 0x1
 2594 087f 9C       		.byte	0x9c
 2595 0880 C2080000 		.4byte	0x8c2
 2596 0884 17       		.uleb128 0x17
 2597 0885 6B000000 		.4byte	.LASF124
 2598 0889 01       		.byte	0x1
 2599 088a B001     		.2byte	0x1b0
 2600 088c A4000000 		.4byte	0xa4
 2601 0890 71000000 		.4byte	.LLST4
 2602 0894 17       		.uleb128 0x17
 2603 0895 B8070000 		.4byte	.LASF113
 2604 0899 01       		.byte	0x1
 2605 089a B201     		.2byte	0x1b2
 2606 089c 83000000 		.4byte	0x83
 2607 08a0 BF000000 		.4byte	.LLST5
 2608 08a4 1C       		.uleb128 0x1c
 2609 08a5 18000000 		.4byte	.LVL16
 2610 08a9 F2070000 		.4byte	0x7f2
 2611 08ad B8080000 		.4byte	0x8b8
 2612 08b1 1D       		.uleb128 0x1d
 2613 08b2 01       		.uleb128 0x1
 2614 08b3 50       		.byte	0x50
 2615 08b4 02       		.uleb128 0x2
 2616 08b5 74       		.byte	0x74
 2617 08b6 00       		.sleb128 0
 2618 08b7 00       		.byte	0
 2619 08b8 18       		.uleb128 0x18
 2620 08b9 32000000 		.4byte	.LVL17
 2621 08bd 36080000 		.4byte	0x836
 2622 08c1 00       		.byte	0
 2623 08c2 1E       		.uleb128 0x1e
 2624 08c3 EB040000 		.4byte	.LASF132
 2625 08c7 01       		.byte	0x1
 2626 08c8 8902     		.2byte	0x289
 2627 08ca 00000000 		.4byte	.LFB6
 2628 08ce 9C000000 		.4byte	.LFE6-.LFB6
 2629 08d2 01       		.uleb128 0x1
 2630 08d3 9C       		.byte	0x9c
 2631 08d4 8C090000 		.4byte	0x98c
 2632 08d8 1B       		.uleb128 0x1b
 2633 08d9 A60C0000 		.4byte	.LASF120
 2634 08dd 01       		.byte	0x1
 2635 08de 8902     		.2byte	0x289
 2636 08e0 83000000 		.4byte	0x83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 101


 2637 08e4 D2000000 		.4byte	.LLST6
 2638 08e8 1B       		.uleb128 0x1b
 2639 08e9 00000000 		.4byte	.LASF126
 2640 08ed 01       		.byte	0x1
 2641 08ee 8902     		.2byte	0x289
 2642 08f0 83000000 		.4byte	0x83
 2643 08f4 F3000000 		.4byte	.LLST7
 2644 08f8 1B       		.uleb128 0x1b
 2645 08f9 2A0B0000 		.4byte	.LASF127
 2646 08fd 01       		.byte	0x1
 2647 08fe 8902     		.2byte	0x289
 2648 0900 83000000 		.4byte	0x83
 2649 0904 14010000 		.4byte	.LLST8
 2650 0908 16       		.uleb128 0x16
 2651 0909 68020000 		.4byte	.LASF128
 2652 090d 01       		.byte	0x1
 2653 090e 8B02     		.2byte	0x28b
 2654 0910 83000000 		.4byte	0x83
 2655 0914 01       		.byte	0x1
 2656 0915 17       		.uleb128 0x17
 2657 0916 300B0000 		.4byte	.LASF129
 2658 091a 01       		.byte	0x1
 2659 091b 8C02     		.2byte	0x28c
 2660 091d 83000000 		.4byte	0x83
 2661 0921 40010000 		.4byte	.LLST9
 2662 0925 17       		.uleb128 0x17
 2663 0926 4E010000 		.4byte	.LASF130
 2664 092a 01       		.byte	0x1
 2665 092b 8D02     		.2byte	0x28d
 2666 092d 6B000000 		.4byte	0x6b
 2667 0931 5F010000 		.4byte	.LLST10
 2668 0935 17       		.uleb128 0x17
 2669 0936 180B0000 		.4byte	.LASF131
 2670 093a 01       		.byte	0x1
 2671 093b 8E02     		.2byte	0x28e
 2672 093d 8C090000 		.4byte	0x98c
 2673 0941 88010000 		.4byte	.LLST11
 2674 0945 18       		.uleb128 0x18
 2675 0946 1A000000 		.4byte	.LVL26
 2676 094a F00F0000 		.4byte	0xff0
 2677 094e 18       		.uleb128 0x18
 2678 094f 3A000000 		.4byte	.LVL27
 2679 0953 FB0F0000 		.4byte	0xffb
 2680 0957 18       		.uleb128 0x18
 2681 0958 4C000000 		.4byte	.LVL28
 2682 095c F00F0000 		.4byte	0xff0
 2683 0960 18       		.uleb128 0x18
 2684 0961 6C000000 		.4byte	.LVL29
 2685 0965 FB0F0000 		.4byte	0xffb
 2686 0969 18       		.uleb128 0x18
 2687 096a 72000000 		.4byte	.LVL30
 2688 096e F00F0000 		.4byte	0xff0
 2689 0972 18       		.uleb128 0x18
 2690 0973 84000000 		.4byte	.LVL31
 2691 0977 FB0F0000 		.4byte	0xffb
 2692 097b 1F       		.uleb128 0x1f
 2693 097c 8C000000 		.4byte	.LVL32
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 102


 2694 0980 06100000 		.4byte	0x1006
 2695 0984 1D       		.uleb128 0x1d
 2696 0985 01       		.uleb128 0x1
 2697 0986 50       		.byte	0x50
 2698 0987 02       		.uleb128 0x2
 2699 0988 74       		.byte	0x74
 2700 0989 00       		.sleb128 0
 2701 098a 00       		.byte	0
 2702 098b 00       		.byte	0
 2703 098c 06       		.uleb128 0x6
 2704 098d 04       		.byte	0x4
 2705 098e 92090000 		.4byte	0x992
 2706 0992 20       		.uleb128 0x20
 2707 0993 61060000 		.4byte	0x661
 2708 0997 1E       		.uleb128 0x1e
 2709 0998 8F050000 		.4byte	.LASF133
 2710 099c 01       		.byte	0x1
 2711 099d 8503     		.2byte	0x385
 2712 099f 00000000 		.4byte	.LFB8
 2713 09a3 3C000000 		.4byte	.LFE8-.LFB8
 2714 09a7 01       		.uleb128 0x1
 2715 09a8 9C       		.byte	0x9c
 2716 09a9 D0090000 		.4byte	0x9d0
 2717 09ad 1B       		.uleb128 0x1b
 2718 09ae E2010000 		.4byte	.LASF134
 2719 09b2 01       		.byte	0x1
 2720 09b3 8503     		.2byte	0x385
 2721 09b5 16020000 		.4byte	0x216
 2722 09b9 9B010000 		.4byte	.LLST12
 2723 09bd 18       		.uleb128 0x18
 2724 09be 14000000 		.4byte	.LVL39
 2725 09c2 AD070000 		.4byte	0x7ad
 2726 09c6 18       		.uleb128 0x18
 2727 09c7 1C000000 		.4byte	.LVL40
 2728 09cb 12100000 		.4byte	0x1012
 2729 09cf 00       		.byte	0
 2730 09d0 1E       		.uleb128 0x1e
 2731 09d1 BE000000 		.4byte	.LASF135
 2732 09d5 01       		.byte	0x1
 2733 09d6 E803     		.2byte	0x3e8
 2734 09d8 00000000 		.4byte	.LFB9
 2735 09dc 40000000 		.4byte	.LFE9-.LFB9
 2736 09e0 01       		.uleb128 0x1
 2737 09e1 9C       		.byte	0x9c
 2738 09e2 170A0000 		.4byte	0xa17
 2739 09e6 17       		.uleb128 0x17
 2740 09e7 180B0000 		.4byte	.LASF131
 2741 09eb 01       		.byte	0x1
 2742 09ec EA03     		.2byte	0x3ea
 2743 09ee 8C090000 		.4byte	0x98c
 2744 09f2 BC010000 		.4byte	.LLST13
 2745 09f6 17       		.uleb128 0x17
 2746 09f7 A7020000 		.4byte	.LASF136
 2747 09fb 01       		.byte	0x1
 2748 09fc EB03     		.2byte	0x3eb
 2749 09fe 83000000 		.4byte	0x83
 2750 0a02 CF010000 		.4byte	.LLST14
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 103


 2751 0a06 17       		.uleb128 0x17
 2752 0a07 33010000 		.4byte	.LASF137
 2753 0a0b 01       		.byte	0x1
 2754 0a0c EC03     		.2byte	0x3ec
 2755 0a0e 83000000 		.4byte	0x83
 2756 0a12 EE010000 		.4byte	.LLST15
 2757 0a16 00       		.byte	0
 2758 0a17 1E       		.uleb128 0x1e
 2759 0a18 AF0C0000 		.4byte	.LASF138
 2760 0a1c 01       		.byte	0x1
 2761 0a1d 6204     		.2byte	0x462
 2762 0a1f 00000000 		.4byte	.LFB10
 2763 0a23 78000000 		.4byte	.LFE10-.LFB10
 2764 0a27 01       		.uleb128 0x1
 2765 0a28 9C       		.byte	0x9c
 2766 0a29 500A0000 		.4byte	0xa50
 2767 0a2d 17       		.uleb128 0x17
 2768 0a2e 69080000 		.4byte	.LASF139
 2769 0a32 01       		.byte	0x1
 2770 0a33 6A04     		.2byte	0x46a
 2771 0a35 A4000000 		.4byte	0xa4
 2772 0a39 17020000 		.4byte	.LLST16
 2773 0a3d 18       		.uleb128 0x18
 2774 0a3e 14000000 		.4byte	.LVL53
 2775 0a42 F2070000 		.4byte	0x7f2
 2776 0a46 18       		.uleb128 0x18
 2777 0a47 2A000000 		.4byte	.LVL55
 2778 0a4b 36080000 		.4byte	0x836
 2779 0a4f 00       		.byte	0
 2780 0a50 1E       		.uleb128 0x1e
 2781 0a51 5B040000 		.4byte	.LASF140
 2782 0a55 01       		.byte	0x1
 2783 0a56 AF04     		.2byte	0x4af
 2784 0a58 00000000 		.4byte	.LFB11
 2785 0a5c 08000000 		.4byte	.LFE11-.LFB11
 2786 0a60 01       		.uleb128 0x1
 2787 0a61 9C       		.byte	0x9c
 2788 0a62 880A0000 		.4byte	0xa88
 2789 0a66 1B       		.uleb128 0x1b
 2790 0a67 91060000 		.4byte	.LASF141
 2791 0a6b 01       		.byte	0x1
 2792 0a6c AF04     		.2byte	0x4af
 2793 0a6e C6000000 		.4byte	0xc6
 2794 0a72 62020000 		.4byte	.LLST17
 2795 0a76 1F       		.uleb128 0x1f
 2796 0a77 06000000 		.4byte	.LVL62
 2797 0a7b 1E100000 		.4byte	0x101e
 2798 0a7f 1D       		.uleb128 0x1d
 2799 0a80 01       		.uleb128 0x1
 2800 0a81 50       		.byte	0x50
 2801 0a82 03       		.uleb128 0x3
 2802 0a83 F3       		.byte	0xf3
 2803 0a84 01       		.uleb128 0x1
 2804 0a85 50       		.byte	0x50
 2805 0a86 00       		.byte	0
 2806 0a87 00       		.byte	0
 2807 0a88 1E       		.uleb128 0x1e
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 104


 2808 0a89 24050000 		.4byte	.LASF142
 2809 0a8d 01       		.byte	0x1
 2810 0a8e C604     		.2byte	0x4c6
 2811 0a90 00000000 		.4byte	.LFB12
 2812 0a94 30000000 		.4byte	.LFE12-.LFB12
 2813 0a98 01       		.uleb128 0x1
 2814 0a99 9C       		.byte	0x9c
 2815 0a9a AF0A0000 		.4byte	0xaaf
 2816 0a9e 1B       		.uleb128 0x1b
 2817 0a9f 1D060000 		.4byte	.LASF143
 2818 0aa3 01       		.byte	0x1
 2819 0aa4 C604     		.2byte	0x4c6
 2820 0aa6 83000000 		.4byte	0x83
 2821 0aaa 83020000 		.4byte	.LLST18
 2822 0aae 00       		.byte	0
 2823 0aaf 1E       		.uleb128 0x1e
 2824 0ab0 71060000 		.4byte	.LASF144
 2825 0ab4 01       		.byte	0x1
 2826 0ab5 0A05     		.2byte	0x50a
 2827 0ab7 00000000 		.4byte	.LFB13
 2828 0abb 14000000 		.4byte	.LFE13-.LFB13
 2829 0abf 01       		.uleb128 0x1
 2830 0ac0 9C       		.byte	0x9c
 2831 0ac1 E60A0000 		.4byte	0xae6
 2832 0ac5 1B       		.uleb128 0x1b
 2833 0ac6 6E0B0000 		.4byte	.LASF53
 2834 0aca 01       		.byte	0x1
 2835 0acb 0A05     		.2byte	0x50a
 2836 0acd 83000000 		.4byte	0x83
 2837 0ad1 B1020000 		.4byte	.LLST19
 2838 0ad5 17       		.uleb128 0x17
 2839 0ad6 E10B0000 		.4byte	.LASF119
 2840 0ada 01       		.byte	0x1
 2841 0adb 0D05     		.2byte	0x50d
 2842 0add 83000000 		.4byte	0x83
 2843 0ae1 DF020000 		.4byte	.LLST20
 2844 0ae5 00       		.byte	0
 2845 0ae6 1E       		.uleb128 0x1e
 2846 0ae7 EC080000 		.4byte	.LASF145
 2847 0aeb 01       		.byte	0x1
 2848 0aec 5E05     		.2byte	0x55e
 2849 0aee 00000000 		.4byte	.LFB14
 2850 0af2 12000000 		.4byte	.LFE14-.LFB14
 2851 0af6 01       		.uleb128 0x1
 2852 0af7 9C       		.byte	0x9c
 2853 0af8 420B0000 		.4byte	0xb42
 2854 0afc 1B       		.uleb128 0x1b
 2855 0afd 6E0B0000 		.4byte	.LASF53
 2856 0b01 01       		.byte	0x1
 2857 0b02 5E05     		.2byte	0x55e
 2858 0b04 83000000 		.4byte	0x83
 2859 0b08 08030000 		.4byte	.LLST21
 2860 0b0c 1B       		.uleb128 0x1b
 2861 0b0d 1D060000 		.4byte	.LASF143
 2862 0b11 01       		.byte	0x1
 2863 0b12 5E05     		.2byte	0x55e
 2864 0b14 83000000 		.4byte	0x83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 105


 2865 0b18 34030000 		.4byte	.LLST22
 2866 0b1c 1C       		.uleb128 0x1c
 2867 0b1d 0A000000 		.4byte	.LVL74
 2868 0b21 880A0000 		.4byte	0xa88
 2869 0b25 310B0000 		.4byte	0xb31
 2870 0b29 1D       		.uleb128 0x1d
 2871 0b2a 01       		.uleb128 0x1
 2872 0b2b 50       		.byte	0x50
 2873 0b2c 03       		.uleb128 0x3
 2874 0b2d F3       		.byte	0xf3
 2875 0b2e 01       		.uleb128 0x1
 2876 0b2f 51       		.byte	0x51
 2877 0b30 00       		.byte	0
 2878 0b31 1F       		.uleb128 0x1f
 2879 0b32 10000000 		.4byte	.LVL75
 2880 0b36 AF0A0000 		.4byte	0xaaf
 2881 0b3a 1D       		.uleb128 0x1d
 2882 0b3b 01       		.uleb128 0x1
 2883 0b3c 50       		.byte	0x50
 2884 0b3d 02       		.uleb128 0x2
 2885 0b3e 74       		.byte	0x74
 2886 0b3f 00       		.sleb128 0
 2887 0b40 00       		.byte	0
 2888 0b41 00       		.byte	0
 2889 0b42 1A       		.uleb128 0x1a
 2890 0b43 9B010000 		.4byte	.LASF146
 2891 0b47 01       		.byte	0x1
 2892 0b48 9205     		.2byte	0x592
 2893 0b4a A4000000 		.4byte	0xa4
 2894 0b4e 00000000 		.4byte	.LFB15
 2895 0b52 1C000000 		.4byte	.LFE15-.LFB15
 2896 0b56 01       		.uleb128 0x1
 2897 0b57 9C       		.byte	0x9c
 2898 0b58 940B0000 		.4byte	0xb94
 2899 0b5c 1B       		.uleb128 0x1b
 2900 0b5d A60C0000 		.4byte	.LASF120
 2901 0b61 01       		.byte	0x1
 2902 0b62 9205     		.2byte	0x592
 2903 0b64 83000000 		.4byte	0x83
 2904 0b68 55030000 		.4byte	.LLST23
 2905 0b6c 17       		.uleb128 0x17
 2906 0b6d 99060000 		.4byte	.LASF147
 2907 0b71 01       		.byte	0x1
 2908 0b72 9405     		.2byte	0x594
 2909 0b74 A4000000 		.4byte	0xa4
 2910 0b78 97030000 		.4byte	.LLST24
 2911 0b7c 1F       		.uleb128 0x1f
 2912 0b7d 1A000000 		.4byte	.LVL83
 2913 0b81 29100000 		.4byte	0x1029
 2914 0b85 1D       		.uleb128 0x1d
 2915 0b86 01       		.uleb128 0x1
 2916 0b87 50       		.byte	0x50
 2917 0b88 03       		.uleb128 0x3
 2918 0b89 F3       		.byte	0xf3
 2919 0b8a 01       		.uleb128 0x1
 2920 0b8b 50       		.byte	0x50
 2921 0b8c 1D       		.uleb128 0x1d
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 106


 2922 0b8d 01       		.uleb128 0x1
 2923 0b8e 51       		.byte	0x51
 2924 0b8f 02       		.uleb128 0x2
 2925 0b90 08       		.byte	0x8
 2926 0b91 55       		.byte	0x55
 2927 0b92 00       		.byte	0
 2928 0b93 00       		.byte	0
 2929 0b94 1A       		.uleb128 0x1a
 2930 0b95 C30A0000 		.4byte	.LASF148
 2931 0b99 01       		.byte	0x1
 2932 0b9a 0306     		.2byte	0x603
 2933 0b9c A4000000 		.4byte	0xa4
 2934 0ba0 00000000 		.4byte	.LFB16
 2935 0ba4 1A000000 		.4byte	.LFE16-.LFB16
 2936 0ba8 01       		.uleb128 0x1
 2937 0ba9 9C       		.byte	0x9c
 2938 0baa DF0B0000 		.4byte	0xbdf
 2939 0bae 17       		.uleb128 0x17
 2940 0baf 99060000 		.4byte	.LASF147
 2941 0bb3 01       		.byte	0x1
 2942 0bb4 0506     		.2byte	0x605
 2943 0bb6 A4000000 		.4byte	0xa4
 2944 0bba C1030000 		.4byte	.LLST25
 2945 0bbe 17       		.uleb128 0x17
 2946 0bbf B8070000 		.4byte	.LASF113
 2947 0bc3 01       		.byte	0x1
 2948 0bc4 0606     		.2byte	0x606
 2949 0bc6 83000000 		.4byte	0x83
 2950 0bca EB030000 		.4byte	.LLST26
 2951 0bce 1F       		.uleb128 0x1f
 2952 0bcf 0E000000 		.4byte	.LVL86
 2953 0bd3 420B0000 		.4byte	0xb42
 2954 0bd7 1D       		.uleb128 0x1d
 2955 0bd8 01       		.uleb128 0x1
 2956 0bd9 50       		.byte	0x50
 2957 0bda 02       		.uleb128 0x2
 2958 0bdb 74       		.byte	0x74
 2959 0bdc 00       		.sleb128 0
 2960 0bdd 00       		.byte	0
 2961 0bde 00       		.byte	0
 2962 0bdf 21       		.uleb128 0x21
 2963 0be0 4F030000 		.4byte	.LASF149
 2964 0be4 01       		.byte	0x1
 2965 0be5 2706     		.2byte	0x627
 2966 0be7 A4000000 		.4byte	0xa4
 2967 0beb 00000000 		.4byte	.LFB17
 2968 0bef 3C010000 		.4byte	.LFE17-.LFB17
 2969 0bf3 01       		.uleb128 0x1
 2970 0bf4 9C       		.byte	0x9c
 2971 0bf5 DD0C0000 		.4byte	0xcdd
 2972 0bf9 17       		.uleb128 0x17
 2973 0bfa 78020000 		.4byte	.LASF150
 2974 0bfe 01       		.byte	0x1
 2975 0bff 2906     		.2byte	0x629
 2976 0c01 A4000000 		.4byte	0xa4
 2977 0c05 0A040000 		.4byte	.LLST27
 2978 0c09 17       		.uleb128 0x17
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 107


 2979 0c0a B8070000 		.4byte	.LASF113
 2980 0c0e 01       		.byte	0x1
 2981 0c0f 2A06     		.2byte	0x62a
 2982 0c11 83000000 		.4byte	0x83
 2983 0c15 3F040000 		.4byte	.LLST28
 2984 0c19 22       		.uleb128 0x22
 2985 0c1a 637000   		.ascii	"cp\000"
 2986 0c1d 01       		.byte	0x1
 2987 0c1e 2C06     		.2byte	0x62c
 2988 0c20 83000000 		.4byte	0x83
 2989 0c24 74040000 		.4byte	.LLST29
 2990 0c28 23       		.uleb128 0x23
 2991 0c29 5F020000 		.4byte	.LASF151
 2992 0c2d 01       		.byte	0x1
 2993 0c2e 3106     		.2byte	0x631
 2994 0c30 DD0C0000 		.4byte	0xcdd
 2995 0c34 02       		.uleb128 0x2
 2996 0c35 91       		.byte	0x91
 2997 0c36 5C       		.sleb128 -36
 2998 0c37 17       		.uleb128 0x17
 2999 0c38 70020000 		.4byte	.LASF114
 3000 0c3c 01       		.byte	0x1
 3001 0c3d 3206     		.2byte	0x632
 3002 0c3f A7070000 		.4byte	0x7a7
 3003 0c43 93040000 		.4byte	.LLST30
 3004 0c47 23       		.uleb128 0x23
 3005 0c48 78050000 		.4byte	.LASF152
 3006 0c4c 01       		.byte	0x1
 3007 0c4d 3306     		.2byte	0x633
 3008 0c4f 78010000 		.4byte	0x178
 3009 0c53 02       		.uleb128 0x2
 3010 0c54 91       		.byte	0x91
 3011 0c55 40       		.sleb128 -64
 3012 0c56 1C       		.uleb128 0x1c
 3013 0c57 50000000 		.4byte	.LVL97
 3014 0c5b 29100000 		.4byte	0x1029
 3015 0c5f 700C0000 		.4byte	0xc70
 3016 0c63 1D       		.uleb128 0x1d
 3017 0c64 01       		.uleb128 0x1
 3018 0c65 50       		.byte	0x50
 3019 0c66 02       		.uleb128 0x2
 3020 0c67 76       		.byte	0x76
 3021 0c68 00       		.sleb128 0
 3022 0c69 1D       		.uleb128 0x1d
 3023 0c6a 01       		.uleb128 0x1
 3024 0c6b 51       		.byte	0x51
 3025 0c6c 02       		.uleb128 0x2
 3026 0c6d 08       		.byte	0x8
 3027 0c6e 55       		.byte	0x55
 3028 0c6f 00       		.byte	0
 3029 0c70 1C       		.uleb128 0x1c
 3030 0c71 78000000 		.4byte	.LVL99
 3031 0c75 35100000 		.4byte	0x1035
 3032 0c79 840C0000 		.4byte	0xc84
 3033 0c7d 1D       		.uleb128 0x1d
 3034 0c7e 01       		.uleb128 0x1
 3035 0c7f 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 108


 3036 0c80 02       		.uleb128 0x2
 3037 0c81 91       		.byte	0x91
 3038 0c82 40       		.sleb128 -64
 3039 0c83 00       		.byte	0
 3040 0c84 1C       		.uleb128 0x1c
 3041 0c85 B8000000 		.4byte	.LVL106
 3042 0c89 29100000 		.4byte	0x1029
 3043 0c8d 9E0C0000 		.4byte	0xc9e
 3044 0c91 1D       		.uleb128 0x1d
 3045 0c92 01       		.uleb128 0x1
 3046 0c93 50       		.byte	0x50
 3047 0c94 02       		.uleb128 0x2
 3048 0c95 74       		.byte	0x74
 3049 0c96 00       		.sleb128 0
 3050 0c97 1D       		.uleb128 0x1d
 3051 0c98 01       		.uleb128 0x1
 3052 0c99 51       		.byte	0x51
 3053 0c9a 02       		.uleb128 0x2
 3054 0c9b 08       		.byte	0x8
 3055 0c9c 55       		.byte	0x55
 3056 0c9d 00       		.byte	0
 3057 0c9e 1C       		.uleb128 0x1c
 3058 0c9f E2000000 		.4byte	.LVL108
 3059 0ca3 40100000 		.4byte	0x1040
 3060 0ca7 B20C0000 		.4byte	0xcb2
 3061 0cab 1D       		.uleb128 0x1d
 3062 0cac 01       		.uleb128 0x1
 3063 0cad 50       		.byte	0x50
 3064 0cae 02       		.uleb128 0x2
 3065 0caf 91       		.byte	0x91
 3066 0cb0 40       		.sleb128 -64
 3067 0cb1 00       		.byte	0
 3068 0cb2 1C       		.uleb128 0x1c
 3069 0cb3 FC000000 		.4byte	.LVL113
 3070 0cb7 5A070000 		.4byte	0x75a
 3071 0cbb C60C0000 		.4byte	0xcc6
 3072 0cbf 1D       		.uleb128 0x1d
 3073 0cc0 01       		.uleb128 0x1
 3074 0cc1 50       		.byte	0x50
 3075 0cc2 02       		.uleb128 0x2
 3076 0cc3 74       		.byte	0x74
 3077 0cc4 00       		.sleb128 0
 3078 0cc5 00       		.byte	0
 3079 0cc6 1F       		.uleb128 0x1f
 3080 0cc7 04010000 		.4byte	.LVL114
 3081 0ccb 29100000 		.4byte	0x1029
 3082 0ccf 1D       		.uleb128 0x1d
 3083 0cd0 01       		.uleb128 0x1
 3084 0cd1 50       		.byte	0x50
 3085 0cd2 02       		.uleb128 0x2
 3086 0cd3 74       		.byte	0x74
 3087 0cd4 00       		.sleb128 0
 3088 0cd5 1D       		.uleb128 0x1d
 3089 0cd6 01       		.uleb128 0x1
 3090 0cd7 51       		.byte	0x51
 3091 0cd8 02       		.uleb128 0x2
 3092 0cd9 08       		.byte	0x8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 109


 3093 0cda 55       		.byte	0x55
 3094 0cdb 00       		.byte	0
 3095 0cdc 00       		.byte	0
 3096 0cdd 0D       		.uleb128 0xd
 3097 0cde 83000000 		.4byte	0x83
 3098 0ce2 ED0C0000 		.4byte	0xced
 3099 0ce6 0E       		.uleb128 0xe
 3100 0ce7 CA020000 		.4byte	0x2ca
 3101 0ceb 04       		.byte	0x4
 3102 0cec 00       		.byte	0
 3103 0ced 1E       		.uleb128 0x1e
 3104 0cee E7010000 		.4byte	.LASF153
 3105 0cf2 01       		.byte	0x1
 3106 0cf3 8908     		.2byte	0x889
 3107 0cf5 00000000 		.4byte	.LFB18
 3108 0cf9 20000000 		.4byte	.LFE18-.LFB18
 3109 0cfd 01       		.uleb128 0x1
 3110 0cfe 9C       		.byte	0x9c
 3111 0cff 340D0000 		.4byte	0xd34
 3112 0d03 17       		.uleb128 0x17
 3113 0d04 B8070000 		.4byte	.LASF113
 3114 0d08 01       		.byte	0x1
 3115 0d09 8B08     		.2byte	0x88b
 3116 0d0b 83000000 		.4byte	0x83
 3117 0d0f BC040000 		.4byte	.LLST31
 3118 0d13 17       		.uleb128 0x17
 3119 0d14 70020000 		.4byte	.LASF114
 3120 0d18 01       		.byte	0x1
 3121 0d19 8C08     		.2byte	0x88c
 3122 0d1b A7070000 		.4byte	0x7a7
 3123 0d1f DB040000 		.4byte	.LLST32
 3124 0d23 1F       		.uleb128 0x1f
 3125 0d24 14000000 		.4byte	.LVL122
 3126 0d28 5A070000 		.4byte	0x75a
 3127 0d2c 1D       		.uleb128 0x1d
 3128 0d2d 01       		.uleb128 0x1
 3129 0d2e 50       		.byte	0x50
 3130 0d2f 02       		.uleb128 0x2
 3131 0d30 74       		.byte	0x74
 3132 0d31 00       		.sleb128 0
 3133 0d32 00       		.byte	0
 3134 0d33 00       		.byte	0
 3135 0d34 1A       		.uleb128 0x1a
 3136 0d35 E0000000 		.4byte	.LASF154
 3137 0d39 01       		.byte	0x1
 3138 0d3a 0402     		.2byte	0x204
 3139 0d3c A4000000 		.4byte	0xa4
 3140 0d40 00000000 		.4byte	.LFB5
 3141 0d44 14000000 		.4byte	.LFE5-.LFB5
 3142 0d48 01       		.uleb128 0x1
 3143 0d49 9C       		.byte	0x9c
 3144 0d4a 7D0D0000 		.4byte	0xd7d
 3145 0d4e 16       		.uleb128 0x16
 3146 0d4f 28010000 		.4byte	.LASF155
 3147 0d53 01       		.byte	0x1
 3148 0d54 0602     		.2byte	0x206
 3149 0d56 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 110


 3150 0d5a 00       		.byte	0
 3151 0d5b 18       		.uleb128 0x18
 3152 0d5c 06000000 		.4byte	.LVL126
 3153 0d60 ED0C0000 		.4byte	0xced
 3154 0d64 18       		.uleb128 0x18
 3155 0d65 0A000000 		.4byte	.LVL127
 3156 0d69 D0090000 		.4byte	0x9d0
 3157 0d6d 1F       		.uleb128 0x1f
 3158 0d6e 10000000 		.4byte	.LVL128
 3159 0d72 97090000 		.4byte	0x997
 3160 0d76 1D       		.uleb128 0x1d
 3161 0d77 01       		.uleb128 0x1
 3162 0d78 50       		.byte	0x50
 3163 0d79 01       		.uleb128 0x1
 3164 0d7a 31       		.byte	0x31
 3165 0d7b 00       		.byte	0
 3166 0d7c 00       		.byte	0
 3167 0d7d 1E       		.uleb128 0x1e
 3168 0d7e ED0B0000 		.4byte	.LASF156
 3169 0d82 01       		.byte	0x1
 3170 0d83 060A     		.2byte	0xa06
 3171 0d85 00000000 		.4byte	.LFB20
 3172 0d89 38000000 		.4byte	.LFE20-.LFB20
 3173 0d8d 01       		.uleb128 0x1
 3174 0d8e 9C       		.byte	0x9c
 3175 0d8f DE0D0000 		.4byte	0xdde
 3176 0d93 17       		.uleb128 0x17
 3177 0d94 B8070000 		.4byte	.LASF113
 3178 0d98 01       		.byte	0x1
 3179 0d99 080A     		.2byte	0xa08
 3180 0d9b 83000000 		.4byte	0x83
 3181 0d9f EE040000 		.4byte	.LLST33
 3182 0da3 17       		.uleb128 0x17
 3183 0da4 C2070000 		.4byte	.LASF157
 3184 0da8 01       		.byte	0x1
 3185 0da9 090A     		.2byte	0xa09
 3186 0dab 83000000 		.4byte	0x83
 3187 0daf 0D050000 		.4byte	.LLST34
 3188 0db3 17       		.uleb128 0x17
 3189 0db4 620B0000 		.4byte	.LASF158
 3190 0db8 01       		.byte	0x1
 3191 0db9 150A     		.2byte	0xa15
 3192 0dbb 8C090000 		.4byte	0x98c
 3193 0dbf 2C050000 		.4byte	.LLST35
 3194 0dc3 1F       		.uleb128 0x1f
 3195 0dc4 1C000000 		.4byte	.LVL133
 3196 0dc8 4B100000 		.4byte	0x104b
 3197 0dcc 1D       		.uleb128 0x1d
 3198 0dcd 01       		.uleb128 0x1
 3199 0dce 50       		.byte	0x50
 3200 0dcf 0C       		.uleb128 0xc
 3201 0dd0 74       		.byte	0x74
 3202 0dd1 00       		.sleb128 0
 3203 0dd2 33       		.byte	0x33
 3204 0dd3 24       		.byte	0x24
 3205 0dd4 74       		.byte	0x74
 3206 0dd5 00       		.sleb128 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 111


 3207 0dd6 1C       		.byte	0x1c
 3208 0dd7 32       		.byte	0x32
 3209 0dd8 24       		.byte	0x24
 3210 0dd9 76       		.byte	0x76
 3211 0dda 00       		.sleb128 0
 3212 0ddb 22       		.byte	0x22
 3213 0ddc 00       		.byte	0
 3214 0ddd 00       		.byte	0
 3215 0dde 1A       		.uleb128 0x1a
 3216 0ddf 95090000 		.4byte	.LASF159
 3217 0de3 01       		.byte	0x1
 3218 0de4 580A     		.2byte	0xa58
 3219 0de6 83000000 		.4byte	0x83
 3220 0dea 00000000 		.4byte	.LFB21
 3221 0dee 10000000 		.4byte	.LFE21-.LFB21
 3222 0df2 01       		.uleb128 0x1
 3223 0df3 9C       		.byte	0x9c
 3224 0df4 250E0000 		.4byte	0xe25
 3225 0df8 1B       		.uleb128 0x1b
 3226 0df9 A60C0000 		.4byte	.LASF120
 3227 0dfd 01       		.byte	0x1
 3228 0dfe 580A     		.2byte	0xa58
 3229 0e00 83000000 		.4byte	0x83
 3230 0e04 3F050000 		.4byte	.LLST36
 3231 0e08 23       		.uleb128 0x23
 3232 0e09 770A0000 		.4byte	.LASF160
 3233 0e0d 01       		.byte	0x1
 3234 0e0e 5A0A     		.2byte	0xa5a
 3235 0e10 83000000 		.4byte	0x83
 3236 0e14 01       		.uleb128 0x1
 3237 0e15 50       		.byte	0x50
 3238 0e16 23       		.uleb128 0x23
 3239 0e17 70020000 		.4byte	.LASF114
 3240 0e1b 01       		.byte	0x1
 3241 0e1c 5E0A     		.2byte	0xa5e
 3242 0e1e A7070000 		.4byte	0x7a7
 3243 0e22 01       		.uleb128 0x1
 3244 0e23 53       		.byte	0x53
 3245 0e24 00       		.byte	0
 3246 0e25 1E       		.uleb128 0x1e
 3247 0e26 B4080000 		.4byte	.LASF161
 3248 0e2a 01       		.byte	0x1
 3249 0e2b 820A     		.2byte	0xa82
 3250 0e2d 00000000 		.4byte	.LFB22
 3251 0e31 10000000 		.4byte	.LFE22-.LFB22
 3252 0e35 01       		.uleb128 0x1
 3253 0e36 9C       		.byte	0x9c
 3254 0e37 680E0000 		.4byte	0xe68
 3255 0e3b 1B       		.uleb128 0x1b
 3256 0e3c A60C0000 		.4byte	.LASF120
 3257 0e40 01       		.byte	0x1
 3258 0e41 820A     		.2byte	0xa82
 3259 0e43 83000000 		.4byte	0x83
 3260 0e47 60050000 		.4byte	.LLST37
 3261 0e4b 15       		.uleb128 0x15
 3262 0e4c 24060000 		.4byte	.LASF162
 3263 0e50 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 112


 3264 0e51 820A     		.2byte	0xa82
 3265 0e53 83000000 		.4byte	0x83
 3266 0e57 01       		.uleb128 0x1
 3267 0e58 51       		.byte	0x51
 3268 0e59 23       		.uleb128 0x23
 3269 0e5a 70020000 		.4byte	.LASF114
 3270 0e5e 01       		.byte	0x1
 3271 0e5f 860A     		.2byte	0xa86
 3272 0e61 A7070000 		.4byte	0x7a7
 3273 0e65 01       		.uleb128 0x1
 3274 0e66 53       		.byte	0x53
 3275 0e67 00       		.byte	0
 3276 0e68 1E       		.uleb128 0x1e
 3277 0e69 0E000000 		.4byte	.LASF163
 3278 0e6d 01       		.byte	0x1
 3279 0e6e 060B     		.2byte	0xb06
 3280 0e70 00000000 		.4byte	.LFB23
 3281 0e74 60000000 		.4byte	.LFE23-.LFB23
 3282 0e78 01       		.uleb128 0x1
 3283 0e79 9C       		.byte	0x9c
 3284 0e7a FA0E0000 		.4byte	0xefa
 3285 0e7e 17       		.uleb128 0x17
 3286 0e7f E10B0000 		.4byte	.LASF119
 3287 0e83 01       		.byte	0x1
 3288 0e84 080B     		.2byte	0xb08
 3289 0e86 83000000 		.4byte	0x83
 3290 0e8a 81050000 		.4byte	.LLST38
 3291 0e8e 17       		.uleb128 0x17
 3292 0e8f 4E010000 		.4byte	.LASF130
 3293 0e93 01       		.byte	0x1
 3294 0e94 090B     		.2byte	0xb09
 3295 0e96 6B000000 		.4byte	0x6b
 3296 0e9a B5050000 		.4byte	.LLST39
 3297 0e9e 18       		.uleb128 0x18
 3298 0e9f 06000000 		.4byte	.LVL144
 3299 0ea3 F00F0000 		.4byte	0xff0
 3300 0ea7 18       		.uleb128 0x18
 3301 0ea8 14000000 		.4byte	.LVL147
 3302 0eac FB0F0000 		.4byte	0xffb
 3303 0eb0 18       		.uleb128 0x18
 3304 0eb1 18000000 		.4byte	.LVL148
 3305 0eb5 F00F0000 		.4byte	0xff0
 3306 0eb9 18       		.uleb128 0x18
 3307 0eba 26000000 		.4byte	.LVL151
 3308 0ebe FB0F0000 		.4byte	0xffb
 3309 0ec2 18       		.uleb128 0x18
 3310 0ec3 2A000000 		.4byte	.LVL152
 3311 0ec7 F00F0000 		.4byte	0xff0
 3312 0ecb 18       		.uleb128 0x18
 3313 0ecc 3C000000 		.4byte	.LVL156
 3314 0ed0 FB0F0000 		.4byte	0xffb
 3315 0ed4 1C       		.uleb128 0x1c
 3316 0ed5 42000000 		.4byte	.LVL157
 3317 0ed9 57100000 		.4byte	0x1057
 3318 0edd E70E0000 		.4byte	0xee7
 3319 0ee1 1D       		.uleb128 0x1d
 3320 0ee2 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 113


 3321 0ee3 50       		.byte	0x50
 3322 0ee4 01       		.uleb128 0x1
 3323 0ee5 31       		.byte	0x31
 3324 0ee6 00       		.byte	0
 3325 0ee7 18       		.uleb128 0x18
 3326 0ee8 46000000 		.4byte	.LVL158
 3327 0eec F00F0000 		.4byte	0xff0
 3328 0ef0 18       		.uleb128 0x18
 3329 0ef1 50000000 		.4byte	.LVL161
 3330 0ef5 FB0F0000 		.4byte	0xffb
 3331 0ef9 00       		.byte	0
 3332 0efa 24       		.uleb128 0x24
 3333 0efb CB070000 		.4byte	.LASF164
 3334 0eff 05       		.byte	0x5
 3335 0f00 5304     		.2byte	0x453
 3336 0f02 D0050000 		.4byte	0x5d0
 3337 0f06 24       		.uleb128 0x24
 3338 0f07 0A090000 		.4byte	.LASF165
 3339 0f0b 05       		.byte	0x5
 3340 0f0c 5404     		.2byte	0x454
 3341 0f0e 120F0000 		.4byte	0xf12
 3342 0f12 20       		.uleb128 0x20
 3343 0f13 47070000 		.4byte	0x747
 3344 0f17 0D       		.uleb128 0xd
 3345 0f18 92090000 		.4byte	0x992
 3346 0f1c 270F0000 		.4byte	0xf27
 3347 0f20 0E       		.uleb128 0xe
 3348 0f21 CA020000 		.4byte	0x2ca
 3349 0f25 04       		.byte	0x4
 3350 0f26 00       		.byte	0
 3351 0f27 24       		.uleb128 0x24
 3352 0f28 3C010000 		.4byte	.LASF166
 3353 0f2c 05       		.byte	0x5
 3354 0f2d 5504     		.2byte	0x455
 3355 0f2f 330F0000 		.4byte	0xf33
 3356 0f33 20       		.uleb128 0x20
 3357 0f34 170F0000 		.4byte	0xf17
 3358 0f38 25       		.uleb128 0x25
 3359 0f39 CF0C0000 		.4byte	.LASF167
 3360 0f3d 01       		.byte	0x1
 3361 0f3e BB       		.byte	0xbb
 3362 0f3f B0000000 		.4byte	0xb0
 3363 0f43 05       		.uleb128 0x5
 3364 0f44 03       		.byte	0x3
 3365 0f45 00000000 		.4byte	CapSense_1_widgetIndex
 3366 0f49 25       		.uleb128 0x25
 3367 0f4a 0E0A0000 		.4byte	.LASF168
 3368 0f4e 01       		.byte	0x1
 3369 0f4f BC       		.byte	0xbc
 3370 0f50 B0000000 		.4byte	0xb0
 3371 0f54 05       		.uleb128 0x5
 3372 0f55 03       		.byte	0x3
 3373 0f56 00000000 		.4byte	CapSense_1_sensorIndex
 3374 0f5a 25       		.uleb128 0x25
 3375 0f5b 87020000 		.4byte	.LASF169
 3376 0f5f 01       		.byte	0x1
 3377 0f60 BD       		.byte	0xbd
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 114


 3378 0f61 6B000000 		.4byte	0x6b
 3379 0f65 05       		.uleb128 0x5
 3380 0f66 03       		.byte	0x3
 3381 0f67 00000000 		.4byte	CapSense_1_requestScanAllWidget
 3382 0f6b 25       		.uleb128 0x25
 3383 0f6c 76000000 		.4byte	.LASF170
 3384 0f70 01       		.byte	0x1
 3385 0f71 C0       		.byte	0xc0
 3386 0f72 02070000 		.4byte	0x702
 3387 0f76 05       		.uleb128 0x5
 3388 0f77 03       		.byte	0x3
 3389 0f78 00000000 		.4byte	CapSense_1_curRamSnsPtr
 3390 0f7c 25       		.uleb128 0x25
 3391 0f7d 440B0000 		.4byte	.LASF171
 3392 0f81 01       		.byte	0x1
 3393 0f82 AE       		.byte	0xae
 3394 0f83 16020000 		.4byte	0x216
 3395 0f87 05       		.uleb128 0x5
 3396 0f88 03       		.byte	0x3
 3397 0f89 00000000 		.4byte	CapSense_1_currentSenseMethod
 3398 0f8d 25       		.uleb128 0x25
 3399 0f8e 0D020000 		.4byte	.LASF172
 3400 0f92 01       		.byte	0x1
 3401 0f93 B7       		.byte	0xb7
 3402 0f94 9E0F0000 		.4byte	0xf9e
 3403 0f98 05       		.uleb128 0x5
 3404 0f99 03       		.byte	0x3
 3405 0f9a 00000000 		.4byte	CapSense_1_scanFreqIndex
 3406 0f9e 20       		.uleb128 0x20
 3407 0f9f 6B000000 		.4byte	0x6b
 3408 0fa3 25       		.uleb128 0x25
 3409 0fa4 11010000 		.4byte	.LASF173
 3410 0fa8 01       		.byte	0x1
 3411 0fa9 CF       		.byte	0xcf
 3412 0faa 8C090000 		.4byte	0x98c
 3413 0fae 05       		.uleb128 0x5
 3414 0faf 03       		.byte	0x3
 3415 0fb0 00000000 		.4byte	CapSense_1_curSnsIOPtr
 3416 0fb4 24       		.uleb128 0x24
 3417 0fb5 10040000 		.4byte	.LASF174
 3418 0fb9 06       		.byte	0x6
 3419 0fba A501     		.2byte	0x1a5
 3420 0fbc 6B000000 		.4byte	0x6b
 3421 0fc0 24       		.uleb128 0x24
 3422 0fc1 C1090000 		.4byte	.LASF175
 3423 0fc5 06       		.byte	0x6
 3424 0fc6 A601     		.2byte	0x1a6
 3425 0fc8 77000000 		.4byte	0x77
 3426 0fcc 26       		.uleb128 0x26
 3427 0fcd 9B0A0000 		.4byte	.LASF176
 3428 0fd1 9B0A0000 		.4byte	.LASF176
 3429 0fd5 06       		.byte	0x6
 3430 0fd6 D401     		.2byte	0x1d4
 3431 0fd8 26       		.uleb128 0x26
 3432 0fd9 F4090000 		.4byte	.LASF177
 3433 0fdd F4090000 		.4byte	.LASF177
 3434 0fe1 06       		.byte	0x6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 115


 3435 0fe2 B701     		.2byte	0x1b7
 3436 0fe4 26       		.uleb128 0x26
 3437 0fe5 9E000000 		.4byte	.LASF178
 3438 0fe9 9E000000 		.4byte	.LASF178
 3439 0fed 06       		.byte	0x6
 3440 0fee B901     		.2byte	0x1b9
 3441 0ff0 27       		.uleb128 0x27
 3442 0ff1 750B0000 		.4byte	.LASF179
 3443 0ff5 750B0000 		.4byte	.LASF179
 3444 0ff9 07       		.byte	0x7
 3445 0ffa E5       		.byte	0xe5
 3446 0ffb 27       		.uleb128 0x27
 3447 0ffc B3050000 		.4byte	.LASF180
 3448 1000 B3050000 		.4byte	.LASF180
 3449 1004 07       		.byte	0x7
 3450 1005 E6       		.byte	0xe6
 3451 1006 26       		.uleb128 0x26
 3452 1007 79010000 		.4byte	.LASF181
 3453 100b 79010000 		.4byte	.LASF181
 3454 100f 06       		.byte	0x6
 3455 1010 C001     		.2byte	0x1c0
 3456 1012 26       		.uleb128 0x26
 3457 1013 26020000 		.4byte	.LASF182
 3458 1017 26020000 		.4byte	.LASF182
 3459 101b 06       		.byte	0x6
 3460 101c D001     		.2byte	0x1d0
 3461 101e 27       		.uleb128 0x27
 3462 101f 34040000 		.4byte	.LASF183
 3463 1023 34040000 		.4byte	.LASF183
 3464 1027 08       		.byte	0x8
 3465 1028 18       		.byte	0x18
 3466 1029 26       		.uleb128 0x26
 3467 102a 77090000 		.4byte	.LASF184
 3468 102e 77090000 		.4byte	.LASF184
 3469 1032 06       		.byte	0x6
 3470 1033 BD01     		.2byte	0x1bd
 3471 1035 27       		.uleb128 0x27
 3472 1036 250A0000 		.4byte	.LASF185
 3473 103a 250A0000 		.4byte	.LASF185
 3474 103e 04       		.byte	0x4
 3475 103f B0       		.byte	0xb0
 3476 1040 27       		.uleb128 0x27
 3477 1041 B6010000 		.4byte	.LASF186
 3478 1045 B6010000 		.4byte	.LASF186
 3479 1049 04       		.byte	0x4
 3480 104a B1       		.byte	0xb1
 3481 104b 26       		.uleb128 0x26
 3482 104c 8E080000 		.4byte	.LASF187
 3483 1050 8E080000 		.4byte	.LASF187
 3484 1054 06       		.byte	0x6
 3485 1055 C101     		.2byte	0x1c1
 3486 1057 27       		.uleb128 0x27
 3487 1058 7C030000 		.4byte	.LASF188
 3488 105c 7C030000 		.4byte	.LASF188
 3489 1060 07       		.byte	0x7
 3490 1061 DA       		.byte	0xda
 3491 1062 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 116


 3492              		.section	.debug_abbrev,"",%progbits
 3493              	.Ldebug_abbrev0:
 3494 0000 01       		.uleb128 0x1
 3495 0001 11       		.uleb128 0x11
 3496 0002 01       		.byte	0x1
 3497 0003 25       		.uleb128 0x25
 3498 0004 0E       		.uleb128 0xe
 3499 0005 13       		.uleb128 0x13
 3500 0006 0B       		.uleb128 0xb
 3501 0007 03       		.uleb128 0x3
 3502 0008 0E       		.uleb128 0xe
 3503 0009 1B       		.uleb128 0x1b
 3504 000a 0E       		.uleb128 0xe
 3505 000b 55       		.uleb128 0x55
 3506 000c 17       		.uleb128 0x17
 3507 000d 11       		.uleb128 0x11
 3508 000e 01       		.uleb128 0x1
 3509 000f 10       		.uleb128 0x10
 3510 0010 17       		.uleb128 0x17
 3511 0011 00       		.byte	0
 3512 0012 00       		.byte	0
 3513 0013 02       		.uleb128 0x2
 3514 0014 24       		.uleb128 0x24
 3515 0015 00       		.byte	0
 3516 0016 0B       		.uleb128 0xb
 3517 0017 0B       		.uleb128 0xb
 3518 0018 3E       		.uleb128 0x3e
 3519 0019 0B       		.uleb128 0xb
 3520 001a 03       		.uleb128 0x3
 3521 001b 0E       		.uleb128 0xe
 3522 001c 00       		.byte	0
 3523 001d 00       		.byte	0
 3524 001e 03       		.uleb128 0x3
 3525 001f 24       		.uleb128 0x24
 3526 0020 00       		.byte	0
 3527 0021 0B       		.uleb128 0xb
 3528 0022 0B       		.uleb128 0xb
 3529 0023 3E       		.uleb128 0x3e
 3530 0024 0B       		.uleb128 0xb
 3531 0025 03       		.uleb128 0x3
 3532 0026 08       		.uleb128 0x8
 3533 0027 00       		.byte	0
 3534 0028 00       		.byte	0
 3535 0029 04       		.uleb128 0x4
 3536 002a 16       		.uleb128 0x16
 3537 002b 00       		.byte	0
 3538 002c 03       		.uleb128 0x3
 3539 002d 0E       		.uleb128 0xe
 3540 002e 3A       		.uleb128 0x3a
 3541 002f 0B       		.uleb128 0xb
 3542 0030 3B       		.uleb128 0x3b
 3543 0031 05       		.uleb128 0x5
 3544 0032 49       		.uleb128 0x49
 3545 0033 13       		.uleb128 0x13
 3546 0034 00       		.byte	0
 3547 0035 00       		.byte	0
 3548 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 117


 3549 0037 35       		.uleb128 0x35
 3550 0038 00       		.byte	0
 3551 0039 49       		.uleb128 0x49
 3552 003a 13       		.uleb128 0x13
 3553 003b 00       		.byte	0
 3554 003c 00       		.byte	0
 3555 003d 06       		.uleb128 0x6
 3556 003e 0F       		.uleb128 0xf
 3557 003f 00       		.byte	0
 3558 0040 0B       		.uleb128 0xb
 3559 0041 0B       		.uleb128 0xb
 3560 0042 49       		.uleb128 0x49
 3561 0043 13       		.uleb128 0x13
 3562 0044 00       		.byte	0
 3563 0045 00       		.byte	0
 3564 0046 07       		.uleb128 0x7
 3565 0047 15       		.uleb128 0x15
 3566 0048 00       		.byte	0
 3567 0049 27       		.uleb128 0x27
 3568 004a 19       		.uleb128 0x19
 3569 004b 00       		.byte	0
 3570 004c 00       		.byte	0
 3571 004d 08       		.uleb128 0x8
 3572 004e 13       		.uleb128 0x13
 3573 004f 01       		.byte	0x1
 3574 0050 0B       		.uleb128 0xb
 3575 0051 0B       		.uleb128 0xb
 3576 0052 3A       		.uleb128 0x3a
 3577 0053 0B       		.uleb128 0xb
 3578 0054 3B       		.uleb128 0x3b
 3579 0055 0B       		.uleb128 0xb
 3580 0056 01       		.uleb128 0x1
 3581 0057 13       		.uleb128 0x13
 3582 0058 00       		.byte	0
 3583 0059 00       		.byte	0
 3584 005a 09       		.uleb128 0x9
 3585 005b 0D       		.uleb128 0xd
 3586 005c 00       		.byte	0
 3587 005d 03       		.uleb128 0x3
 3588 005e 0E       		.uleb128 0xe
 3589 005f 3A       		.uleb128 0x3a
 3590 0060 0B       		.uleb128 0xb
 3591 0061 3B       		.uleb128 0x3b
 3592 0062 0B       		.uleb128 0xb
 3593 0063 49       		.uleb128 0x49
 3594 0064 13       		.uleb128 0x13
 3595 0065 38       		.uleb128 0x38
 3596 0066 0B       		.uleb128 0xb
 3597 0067 00       		.byte	0
 3598 0068 00       		.byte	0
 3599 0069 0A       		.uleb128 0xa
 3600 006a 16       		.uleb128 0x16
 3601 006b 00       		.byte	0
 3602 006c 03       		.uleb128 0x3
 3603 006d 0E       		.uleb128 0xe
 3604 006e 3A       		.uleb128 0x3a
 3605 006f 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 118


 3606 0070 3B       		.uleb128 0x3b
 3607 0071 0B       		.uleb128 0xb
 3608 0072 49       		.uleb128 0x49
 3609 0073 13       		.uleb128 0x13
 3610 0074 00       		.byte	0
 3611 0075 00       		.byte	0
 3612 0076 0B       		.uleb128 0xb
 3613 0077 04       		.uleb128 0x4
 3614 0078 01       		.byte	0x1
 3615 0079 0B       		.uleb128 0xb
 3616 007a 0B       		.uleb128 0xb
 3617 007b 49       		.uleb128 0x49
 3618 007c 13       		.uleb128 0x13
 3619 007d 3A       		.uleb128 0x3a
 3620 007e 0B       		.uleb128 0xb
 3621 007f 3B       		.uleb128 0x3b
 3622 0080 0B       		.uleb128 0xb
 3623 0081 01       		.uleb128 0x1
 3624 0082 13       		.uleb128 0x13
 3625 0083 00       		.byte	0
 3626 0084 00       		.byte	0
 3627 0085 0C       		.uleb128 0xc
 3628 0086 28       		.uleb128 0x28
 3629 0087 00       		.byte	0
 3630 0088 03       		.uleb128 0x3
 3631 0089 0E       		.uleb128 0xe
 3632 008a 1C       		.uleb128 0x1c
 3633 008b 0B       		.uleb128 0xb
 3634 008c 00       		.byte	0
 3635 008d 00       		.byte	0
 3636 008e 0D       		.uleb128 0xd
 3637 008f 01       		.uleb128 0x1
 3638 0090 01       		.byte	0x1
 3639 0091 49       		.uleb128 0x49
 3640 0092 13       		.uleb128 0x13
 3641 0093 01       		.uleb128 0x1
 3642 0094 13       		.uleb128 0x13
 3643 0095 00       		.byte	0
 3644 0096 00       		.byte	0
 3645 0097 0E       		.uleb128 0xe
 3646 0098 21       		.uleb128 0x21
 3647 0099 00       		.byte	0
 3648 009a 49       		.uleb128 0x49
 3649 009b 13       		.uleb128 0x13
 3650 009c 2F       		.uleb128 0x2f
 3651 009d 0B       		.uleb128 0xb
 3652 009e 00       		.byte	0
 3653 009f 00       		.byte	0
 3654 00a0 0F       		.uleb128 0xf
 3655 00a1 0D       		.uleb128 0xd
 3656 00a2 00       		.byte	0
 3657 00a3 03       		.uleb128 0x3
 3658 00a4 0E       		.uleb128 0xe
 3659 00a5 3A       		.uleb128 0x3a
 3660 00a6 0B       		.uleb128 0xb
 3661 00a7 3B       		.uleb128 0x3b
 3662 00a8 05       		.uleb128 0x5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 119


 3663 00a9 49       		.uleb128 0x49
 3664 00aa 13       		.uleb128 0x13
 3665 00ab 38       		.uleb128 0x38
 3666 00ac 0B       		.uleb128 0xb
 3667 00ad 00       		.byte	0
 3668 00ae 00       		.byte	0
 3669 00af 10       		.uleb128 0x10
 3670 00b0 13       		.uleb128 0x13
 3671 00b1 01       		.byte	0x1
 3672 00b2 0B       		.uleb128 0xb
 3673 00b3 0B       		.uleb128 0xb
 3674 00b4 3A       		.uleb128 0x3a
 3675 00b5 0B       		.uleb128 0xb
 3676 00b6 3B       		.uleb128 0x3b
 3677 00b7 05       		.uleb128 0x5
 3678 00b8 01       		.uleb128 0x1
 3679 00b9 13       		.uleb128 0x13
 3680 00ba 00       		.byte	0
 3681 00bb 00       		.byte	0
 3682 00bc 11       		.uleb128 0x11
 3683 00bd 0D       		.uleb128 0xd
 3684 00be 00       		.byte	0
 3685 00bf 03       		.uleb128 0x3
 3686 00c0 08       		.uleb128 0x8
 3687 00c1 3A       		.uleb128 0x3a
 3688 00c2 0B       		.uleb128 0xb
 3689 00c3 3B       		.uleb128 0x3b
 3690 00c4 05       		.uleb128 0x5
 3691 00c5 49       		.uleb128 0x49
 3692 00c6 13       		.uleb128 0x13
 3693 00c7 38       		.uleb128 0x38
 3694 00c8 0B       		.uleb128 0xb
 3695 00c9 00       		.byte	0
 3696 00ca 00       		.byte	0
 3697 00cb 12       		.uleb128 0x12
 3698 00cc 26       		.uleb128 0x26
 3699 00cd 00       		.byte	0
 3700 00ce 00       		.byte	0
 3701 00cf 00       		.byte	0
 3702 00d0 13       		.uleb128 0x13
 3703 00d1 0F       		.uleb128 0xf
 3704 00d2 00       		.byte	0
 3705 00d3 0B       		.uleb128 0xb
 3706 00d4 0B       		.uleb128 0xb
 3707 00d5 00       		.byte	0
 3708 00d6 00       		.byte	0
 3709 00d7 14       		.uleb128 0x14
 3710 00d8 2E       		.uleb128 0x2e
 3711 00d9 01       		.byte	0x1
 3712 00da 03       		.uleb128 0x3
 3713 00db 0E       		.uleb128 0xe
 3714 00dc 3A       		.uleb128 0x3a
 3715 00dd 0B       		.uleb128 0xb
 3716 00de 3B       		.uleb128 0x3b
 3717 00df 05       		.uleb128 0x5
 3718 00e0 27       		.uleb128 0x27
 3719 00e1 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 120


 3720 00e2 11       		.uleb128 0x11
 3721 00e3 01       		.uleb128 0x1
 3722 00e4 12       		.uleb128 0x12
 3723 00e5 06       		.uleb128 0x6
 3724 00e6 40       		.uleb128 0x40
 3725 00e7 18       		.uleb128 0x18
 3726 00e8 9742     		.uleb128 0x2117
 3727 00ea 19       		.uleb128 0x19
 3728 00eb 01       		.uleb128 0x1
 3729 00ec 13       		.uleb128 0x13
 3730 00ed 00       		.byte	0
 3731 00ee 00       		.byte	0
 3732 00ef 15       		.uleb128 0x15
 3733 00f0 05       		.uleb128 0x5
 3734 00f1 00       		.byte	0
 3735 00f2 03       		.uleb128 0x3
 3736 00f3 0E       		.uleb128 0xe
 3737 00f4 3A       		.uleb128 0x3a
 3738 00f5 0B       		.uleb128 0xb
 3739 00f6 3B       		.uleb128 0x3b
 3740 00f7 05       		.uleb128 0x5
 3741 00f8 49       		.uleb128 0x49
 3742 00f9 13       		.uleb128 0x13
 3743 00fa 02       		.uleb128 0x2
 3744 00fb 18       		.uleb128 0x18
 3745 00fc 00       		.byte	0
 3746 00fd 00       		.byte	0
 3747 00fe 16       		.uleb128 0x16
 3748 00ff 34       		.uleb128 0x34
 3749 0100 00       		.byte	0
 3750 0101 03       		.uleb128 0x3
 3751 0102 0E       		.uleb128 0xe
 3752 0103 3A       		.uleb128 0x3a
 3753 0104 0B       		.uleb128 0xb
 3754 0105 3B       		.uleb128 0x3b
 3755 0106 05       		.uleb128 0x5
 3756 0107 49       		.uleb128 0x49
 3757 0108 13       		.uleb128 0x13
 3758 0109 1C       		.uleb128 0x1c
 3759 010a 0B       		.uleb128 0xb
 3760 010b 00       		.byte	0
 3761 010c 00       		.byte	0
 3762 010d 17       		.uleb128 0x17
 3763 010e 34       		.uleb128 0x34
 3764 010f 00       		.byte	0
 3765 0110 03       		.uleb128 0x3
 3766 0111 0E       		.uleb128 0xe
 3767 0112 3A       		.uleb128 0x3a
 3768 0113 0B       		.uleb128 0xb
 3769 0114 3B       		.uleb128 0x3b
 3770 0115 05       		.uleb128 0x5
 3771 0116 49       		.uleb128 0x49
 3772 0117 13       		.uleb128 0x13
 3773 0118 02       		.uleb128 0x2
 3774 0119 17       		.uleb128 0x17
 3775 011a 00       		.byte	0
 3776 011b 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 121


 3777 011c 18       		.uleb128 0x18
 3778 011d 898201   		.uleb128 0x4109
 3779 0120 00       		.byte	0
 3780 0121 11       		.uleb128 0x11
 3781 0122 01       		.uleb128 0x1
 3782 0123 31       		.uleb128 0x31
 3783 0124 13       		.uleb128 0x13
 3784 0125 00       		.byte	0
 3785 0126 00       		.byte	0
 3786 0127 19       		.uleb128 0x19
 3787 0128 2E       		.uleb128 0x2e
 3788 0129 00       		.byte	0
 3789 012a 3F       		.uleb128 0x3f
 3790 012b 19       		.uleb128 0x19
 3791 012c 03       		.uleb128 0x3
 3792 012d 0E       		.uleb128 0xe
 3793 012e 3A       		.uleb128 0x3a
 3794 012f 0B       		.uleb128 0xb
 3795 0130 3B       		.uleb128 0x3b
 3796 0131 0B       		.uleb128 0xb
 3797 0132 27       		.uleb128 0x27
 3798 0133 19       		.uleb128 0x19
 3799 0134 49       		.uleb128 0x49
 3800 0135 13       		.uleb128 0x13
 3801 0136 11       		.uleb128 0x11
 3802 0137 01       		.uleb128 0x1
 3803 0138 12       		.uleb128 0x12
 3804 0139 06       		.uleb128 0x6
 3805 013a 40       		.uleb128 0x40
 3806 013b 18       		.uleb128 0x18
 3807 013c 9742     		.uleb128 0x2117
 3808 013e 19       		.uleb128 0x19
 3809 013f 00       		.byte	0
 3810 0140 00       		.byte	0
 3811 0141 1A       		.uleb128 0x1a
 3812 0142 2E       		.uleb128 0x2e
 3813 0143 01       		.byte	0x1
 3814 0144 3F       		.uleb128 0x3f
 3815 0145 19       		.uleb128 0x19
 3816 0146 03       		.uleb128 0x3
 3817 0147 0E       		.uleb128 0xe
 3818 0148 3A       		.uleb128 0x3a
 3819 0149 0B       		.uleb128 0xb
 3820 014a 3B       		.uleb128 0x3b
 3821 014b 05       		.uleb128 0x5
 3822 014c 27       		.uleb128 0x27
 3823 014d 19       		.uleb128 0x19
 3824 014e 49       		.uleb128 0x49
 3825 014f 13       		.uleb128 0x13
 3826 0150 11       		.uleb128 0x11
 3827 0151 01       		.uleb128 0x1
 3828 0152 12       		.uleb128 0x12
 3829 0153 06       		.uleb128 0x6
 3830 0154 40       		.uleb128 0x40
 3831 0155 18       		.uleb128 0x18
 3832 0156 9742     		.uleb128 0x2117
 3833 0158 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 122


 3834 0159 01       		.uleb128 0x1
 3835 015a 13       		.uleb128 0x13
 3836 015b 00       		.byte	0
 3837 015c 00       		.byte	0
 3838 015d 1B       		.uleb128 0x1b
 3839 015e 05       		.uleb128 0x5
 3840 015f 00       		.byte	0
 3841 0160 03       		.uleb128 0x3
 3842 0161 0E       		.uleb128 0xe
 3843 0162 3A       		.uleb128 0x3a
 3844 0163 0B       		.uleb128 0xb
 3845 0164 3B       		.uleb128 0x3b
 3846 0165 05       		.uleb128 0x5
 3847 0166 49       		.uleb128 0x49
 3848 0167 13       		.uleb128 0x13
 3849 0168 02       		.uleb128 0x2
 3850 0169 17       		.uleb128 0x17
 3851 016a 00       		.byte	0
 3852 016b 00       		.byte	0
 3853 016c 1C       		.uleb128 0x1c
 3854 016d 898201   		.uleb128 0x4109
 3855 0170 01       		.byte	0x1
 3856 0171 11       		.uleb128 0x11
 3857 0172 01       		.uleb128 0x1
 3858 0173 31       		.uleb128 0x31
 3859 0174 13       		.uleb128 0x13
 3860 0175 01       		.uleb128 0x1
 3861 0176 13       		.uleb128 0x13
 3862 0177 00       		.byte	0
 3863 0178 00       		.byte	0
 3864 0179 1D       		.uleb128 0x1d
 3865 017a 8A8201   		.uleb128 0x410a
 3866 017d 00       		.byte	0
 3867 017e 02       		.uleb128 0x2
 3868 017f 18       		.uleb128 0x18
 3869 0180 9142     		.uleb128 0x2111
 3870 0182 18       		.uleb128 0x18
 3871 0183 00       		.byte	0
 3872 0184 00       		.byte	0
 3873 0185 1E       		.uleb128 0x1e
 3874 0186 2E       		.uleb128 0x2e
 3875 0187 01       		.byte	0x1
 3876 0188 3F       		.uleb128 0x3f
 3877 0189 19       		.uleb128 0x19
 3878 018a 03       		.uleb128 0x3
 3879 018b 0E       		.uleb128 0xe
 3880 018c 3A       		.uleb128 0x3a
 3881 018d 0B       		.uleb128 0xb
 3882 018e 3B       		.uleb128 0x3b
 3883 018f 05       		.uleb128 0x5
 3884 0190 27       		.uleb128 0x27
 3885 0191 19       		.uleb128 0x19
 3886 0192 11       		.uleb128 0x11
 3887 0193 01       		.uleb128 0x1
 3888 0194 12       		.uleb128 0x12
 3889 0195 06       		.uleb128 0x6
 3890 0196 40       		.uleb128 0x40
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 123


 3891 0197 18       		.uleb128 0x18
 3892 0198 9742     		.uleb128 0x2117
 3893 019a 19       		.uleb128 0x19
 3894 019b 01       		.uleb128 0x1
 3895 019c 13       		.uleb128 0x13
 3896 019d 00       		.byte	0
 3897 019e 00       		.byte	0
 3898 019f 1F       		.uleb128 0x1f
 3899 01a0 898201   		.uleb128 0x4109
 3900 01a3 01       		.byte	0x1
 3901 01a4 11       		.uleb128 0x11
 3902 01a5 01       		.uleb128 0x1
 3903 01a6 31       		.uleb128 0x31
 3904 01a7 13       		.uleb128 0x13
 3905 01a8 00       		.byte	0
 3906 01a9 00       		.byte	0
 3907 01aa 20       		.uleb128 0x20
 3908 01ab 26       		.uleb128 0x26
 3909 01ac 00       		.byte	0
 3910 01ad 49       		.uleb128 0x49
 3911 01ae 13       		.uleb128 0x13
 3912 01af 00       		.byte	0
 3913 01b0 00       		.byte	0
 3914 01b1 21       		.uleb128 0x21
 3915 01b2 2E       		.uleb128 0x2e
 3916 01b3 01       		.byte	0x1
 3917 01b4 3F       		.uleb128 0x3f
 3918 01b5 19       		.uleb128 0x19
 3919 01b6 03       		.uleb128 0x3
 3920 01b7 0E       		.uleb128 0xe
 3921 01b8 3A       		.uleb128 0x3a
 3922 01b9 0B       		.uleb128 0xb
 3923 01ba 3B       		.uleb128 0x3b
 3924 01bb 05       		.uleb128 0x5
 3925 01bc 27       		.uleb128 0x27
 3926 01bd 19       		.uleb128 0x19
 3927 01be 49       		.uleb128 0x49
 3928 01bf 13       		.uleb128 0x13
 3929 01c0 11       		.uleb128 0x11
 3930 01c1 01       		.uleb128 0x1
 3931 01c2 12       		.uleb128 0x12
 3932 01c3 06       		.uleb128 0x6
 3933 01c4 40       		.uleb128 0x40
 3934 01c5 18       		.uleb128 0x18
 3935 01c6 9642     		.uleb128 0x2116
 3936 01c8 19       		.uleb128 0x19
 3937 01c9 01       		.uleb128 0x1
 3938 01ca 13       		.uleb128 0x13
 3939 01cb 00       		.byte	0
 3940 01cc 00       		.byte	0
 3941 01cd 22       		.uleb128 0x22
 3942 01ce 34       		.uleb128 0x34
 3943 01cf 00       		.byte	0
 3944 01d0 03       		.uleb128 0x3
 3945 01d1 08       		.uleb128 0x8
 3946 01d2 3A       		.uleb128 0x3a
 3947 01d3 0B       		.uleb128 0xb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 124


 3948 01d4 3B       		.uleb128 0x3b
 3949 01d5 05       		.uleb128 0x5
 3950 01d6 49       		.uleb128 0x49
 3951 01d7 13       		.uleb128 0x13
 3952 01d8 02       		.uleb128 0x2
 3953 01d9 17       		.uleb128 0x17
 3954 01da 00       		.byte	0
 3955 01db 00       		.byte	0
 3956 01dc 23       		.uleb128 0x23
 3957 01dd 34       		.uleb128 0x34
 3958 01de 00       		.byte	0
 3959 01df 03       		.uleb128 0x3
 3960 01e0 0E       		.uleb128 0xe
 3961 01e1 3A       		.uleb128 0x3a
 3962 01e2 0B       		.uleb128 0xb
 3963 01e3 3B       		.uleb128 0x3b
 3964 01e4 05       		.uleb128 0x5
 3965 01e5 49       		.uleb128 0x49
 3966 01e6 13       		.uleb128 0x13
 3967 01e7 02       		.uleb128 0x2
 3968 01e8 18       		.uleb128 0x18
 3969 01e9 00       		.byte	0
 3970 01ea 00       		.byte	0
 3971 01eb 24       		.uleb128 0x24
 3972 01ec 34       		.uleb128 0x34
 3973 01ed 00       		.byte	0
 3974 01ee 03       		.uleb128 0x3
 3975 01ef 0E       		.uleb128 0xe
 3976 01f0 3A       		.uleb128 0x3a
 3977 01f1 0B       		.uleb128 0xb
 3978 01f2 3B       		.uleb128 0x3b
 3979 01f3 05       		.uleb128 0x5
 3980 01f4 49       		.uleb128 0x49
 3981 01f5 13       		.uleb128 0x13
 3982 01f6 3F       		.uleb128 0x3f
 3983 01f7 19       		.uleb128 0x19
 3984 01f8 3C       		.uleb128 0x3c
 3985 01f9 19       		.uleb128 0x19
 3986 01fa 00       		.byte	0
 3987 01fb 00       		.byte	0
 3988 01fc 25       		.uleb128 0x25
 3989 01fd 34       		.uleb128 0x34
 3990 01fe 00       		.byte	0
 3991 01ff 03       		.uleb128 0x3
 3992 0200 0E       		.uleb128 0xe
 3993 0201 3A       		.uleb128 0x3a
 3994 0202 0B       		.uleb128 0xb
 3995 0203 3B       		.uleb128 0x3b
 3996 0204 0B       		.uleb128 0xb
 3997 0205 49       		.uleb128 0x49
 3998 0206 13       		.uleb128 0x13
 3999 0207 3F       		.uleb128 0x3f
 4000 0208 19       		.uleb128 0x19
 4001 0209 02       		.uleb128 0x2
 4002 020a 18       		.uleb128 0x18
 4003 020b 00       		.byte	0
 4004 020c 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 125


 4005 020d 26       		.uleb128 0x26
 4006 020e 2E       		.uleb128 0x2e
 4007 020f 00       		.byte	0
 4008 0210 3F       		.uleb128 0x3f
 4009 0211 19       		.uleb128 0x19
 4010 0212 3C       		.uleb128 0x3c
 4011 0213 19       		.uleb128 0x19
 4012 0214 6E       		.uleb128 0x6e
 4013 0215 0E       		.uleb128 0xe
 4014 0216 03       		.uleb128 0x3
 4015 0217 0E       		.uleb128 0xe
 4016 0218 3A       		.uleb128 0x3a
 4017 0219 0B       		.uleb128 0xb
 4018 021a 3B       		.uleb128 0x3b
 4019 021b 05       		.uleb128 0x5
 4020 021c 00       		.byte	0
 4021 021d 00       		.byte	0
 4022 021e 27       		.uleb128 0x27
 4023 021f 2E       		.uleb128 0x2e
 4024 0220 00       		.byte	0
 4025 0221 3F       		.uleb128 0x3f
 4026 0222 19       		.uleb128 0x19
 4027 0223 3C       		.uleb128 0x3c
 4028 0224 19       		.uleb128 0x19
 4029 0225 6E       		.uleb128 0x6e
 4030 0226 0E       		.uleb128 0xe
 4031 0227 03       		.uleb128 0x3
 4032 0228 0E       		.uleb128 0xe
 4033 0229 3A       		.uleb128 0x3a
 4034 022a 0B       		.uleb128 0xb
 4035 022b 3B       		.uleb128 0x3b
 4036 022c 0B       		.uleb128 0xb
 4037 022d 00       		.byte	0
 4038 022e 00       		.byte	0
 4039 022f 00       		.byte	0
 4040              		.section	.debug_loc,"",%progbits
 4041              	.Ldebug_loc0:
 4042              	.LLST0:
 4043 0000 06000000 		.4byte	.LVL1
 4044 0004 19000000 		.4byte	.LVL5-1
 4045 0008 0100     		.2byte	0x1
 4046 000a 53       		.byte	0x53
 4047 000b 00000000 		.4byte	0
 4048 000f 00000000 		.4byte	0
 4049              	.LLST1:
 4050 0013 00000000 		.4byte	.LVL6
 4051 0017 37000000 		.4byte	.LVL8-1
 4052 001b 0100     		.2byte	0x1
 4053 001d 50       		.byte	0x50
 4054 001e 37000000 		.4byte	.LVL8-1
 4055 0022 40000000 		.4byte	.LFE2
 4056 0026 0400     		.2byte	0x4
 4057 0028 F3       		.byte	0xf3
 4058 0029 01       		.uleb128 0x1
 4059 002a 50       		.byte	0x50
 4060 002b 9F       		.byte	0x9f
 4061 002c 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 126


 4062 0030 00000000 		.4byte	0
 4063              	.LLST2:
 4064 0034 30000000 		.4byte	.LVL7
 4065 0038 3A000000 		.4byte	.LVL9
 4066 003c 0100     		.2byte	0x1
 4067 003e 54       		.byte	0x54
 4068 003f 3A000000 		.4byte	.LVL9
 4069 0043 40000000 		.4byte	.LFE2
 4070 0047 0100     		.2byte	0x1
 4071 0049 50       		.byte	0x50
 4072 004a 00000000 		.4byte	0
 4073 004e 00000000 		.4byte	0
 4074              	.LLST3:
 4075 0052 02000000 		.4byte	.LVL10
 4076 0056 22000000 		.4byte	.LVL12
 4077 005a 0200     		.2byte	0x2
 4078 005c 30       		.byte	0x30
 4079 005d 9F       		.byte	0x9f
 4080 005e 22000000 		.4byte	.LVL12
 4081 0062 2C000000 		.4byte	.LFE3
 4082 0066 0100     		.2byte	0x1
 4083 0068 50       		.byte	0x50
 4084 0069 00000000 		.4byte	0
 4085 006d 00000000 		.4byte	0
 4086              	.LLST4:
 4087 0071 02000000 		.4byte	.LVL13
 4088 0075 12000000 		.4byte	.LVL14
 4089 0079 0300     		.2byte	0x3
 4090 007b 09       		.byte	0x9
 4091 007c FF       		.byte	0xff
 4092 007d 9F       		.byte	0x9f
 4093 007e 12000000 		.4byte	.LVL14
 4094 0082 14000000 		.4byte	.LVL15
 4095 0086 0100     		.2byte	0x1
 4096 0088 50       		.byte	0x50
 4097 0089 18000000 		.4byte	.LVL16
 4098 008d 31000000 		.4byte	.LVL17-1
 4099 0091 0100     		.2byte	0x1
 4100 0093 50       		.byte	0x50
 4101 0094 32000000 		.4byte	.LVL17
 4102 0098 3C000000 		.4byte	.LVL19
 4103 009c 0100     		.2byte	0x1
 4104 009e 50       		.byte	0x50
 4105 009f 3C000000 		.4byte	.LVL19
 4106 00a3 3E000000 		.4byte	.LVL20
 4107 00a7 0300     		.2byte	0x3
 4108 00a9 09       		.byte	0x9
 4109 00aa FF       		.byte	0xff
 4110 00ab 9F       		.byte	0x9f
 4111 00ac 3E000000 		.4byte	.LVL20
 4112 00b0 48000000 		.4byte	.LFE4
 4113 00b4 0100     		.2byte	0x1
 4114 00b6 50       		.byte	0x50
 4115 00b7 00000000 		.4byte	0
 4116 00bb 00000000 		.4byte	0
 4117              	.LLST5:
 4118 00bf 12000000 		.4byte	.LVL14
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 127


 4119 00c3 3C000000 		.4byte	.LVL19
 4120 00c7 0100     		.2byte	0x1
 4121 00c9 54       		.byte	0x54
 4122 00ca 00000000 		.4byte	0
 4123 00ce 00000000 		.4byte	0
 4124              	.LLST6:
 4125 00d2 00000000 		.4byte	.LVL21
 4126 00d6 06000000 		.4byte	.LVL22
 4127 00da 0100     		.2byte	0x1
 4128 00dc 50       		.byte	0x50
 4129 00dd 06000000 		.4byte	.LVL22
 4130 00e1 9C000000 		.4byte	.LFE6
 4131 00e5 0400     		.2byte	0x4
 4132 00e7 F3       		.byte	0xf3
 4133 00e8 01       		.uleb128 0x1
 4134 00e9 50       		.byte	0x50
 4135 00ea 9F       		.byte	0x9f
 4136 00eb 00000000 		.4byte	0
 4137 00ef 00000000 		.4byte	0
 4138              	.LLST7:
 4139 00f3 00000000 		.4byte	.LVL21
 4140 00f7 0E000000 		.4byte	.LVL23
 4141 00fb 0100     		.2byte	0x1
 4142 00fd 51       		.byte	0x51
 4143 00fe 0E000000 		.4byte	.LVL23
 4144 0102 9C000000 		.4byte	.LFE6
 4145 0106 0400     		.2byte	0x4
 4146 0108 F3       		.byte	0xf3
 4147 0109 01       		.uleb128 0x1
 4148 010a 51       		.byte	0x51
 4149 010b 9F       		.byte	0x9f
 4150 010c 00000000 		.4byte	0
 4151 0110 00000000 		.4byte	0
 4152              	.LLST8:
 4153 0114 00000000 		.4byte	.LVL21
 4154 0118 16000000 		.4byte	.LVL25
 4155 011c 0100     		.2byte	0x1
 4156 011e 52       		.byte	0x52
 4157 011f 16000000 		.4byte	.LVL25
 4158 0123 94000000 		.4byte	.LVL37
 4159 0127 0100     		.2byte	0x1
 4160 0129 56       		.byte	0x56
 4161 012a 94000000 		.4byte	.LVL37
 4162 012e 9C000000 		.4byte	.LFE6
 4163 0132 0400     		.2byte	0x4
 4164 0134 F3       		.byte	0xf3
 4165 0135 01       		.uleb128 0x1
 4166 0136 52       		.byte	0x52
 4167 0137 9F       		.byte	0x9f
 4168 0138 00000000 		.4byte	0
 4169 013c 00000000 		.4byte	0
 4170              	.LLST9:
 4171 0140 12000000 		.4byte	.LVL24
 4172 0144 16000000 		.4byte	.LVL25
 4173 0148 0200     		.2byte	0x2
 4174 014a 30       		.byte	0x30
 4175 014b 9F       		.byte	0x9f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 128


 4176 014c 16000000 		.4byte	.LVL25
 4177 0150 94000000 		.4byte	.LVL36
 4178 0154 0100     		.2byte	0x1
 4179 0156 55       		.byte	0x55
 4180 0157 00000000 		.4byte	0
 4181 015b 00000000 		.4byte	0
 4182              	.LLST10:
 4183 015f 1A000000 		.4byte	.LVL26
 4184 0163 39000000 		.4byte	.LVL27-1
 4185 0167 0100     		.2byte	0x1
 4186 0169 50       		.byte	0x50
 4187 016a 4C000000 		.4byte	.LVL28
 4188 016e 6B000000 		.4byte	.LVL29-1
 4189 0172 0100     		.2byte	0x1
 4190 0174 50       		.byte	0x50
 4191 0175 72000000 		.4byte	.LVL30
 4192 0179 83000000 		.4byte	.LVL31-1
 4193 017d 0100     		.2byte	0x1
 4194 017f 50       		.byte	0x50
 4195 0180 00000000 		.4byte	0
 4196 0184 00000000 		.4byte	0
 4197              	.LLST11:
 4198 0188 12000000 		.4byte	.LVL24
 4199 018c 94000000 		.4byte	.LVL35
 4200 0190 0100     		.2byte	0x1
 4201 0192 54       		.byte	0x54
 4202 0193 00000000 		.4byte	0
 4203 0197 00000000 		.4byte	0
 4204              	.LLST12:
 4205 019b 00000000 		.4byte	.LVL38
 4206 019f 13000000 		.4byte	.LVL39-1
 4207 01a3 0100     		.2byte	0x1
 4208 01a5 50       		.byte	0x50
 4209 01a6 13000000 		.4byte	.LVL39-1
 4210 01aa 3C000000 		.4byte	.LFE8
 4211 01ae 0400     		.2byte	0x4
 4212 01b0 F3       		.byte	0xf3
 4213 01b1 01       		.uleb128 0x1
 4214 01b2 50       		.byte	0x50
 4215 01b3 9F       		.byte	0x9f
 4216 01b4 00000000 		.4byte	0
 4217 01b8 00000000 		.4byte	0
 4218              	.LLST13:
 4219 01bc 08000000 		.4byte	.LVL42
 4220 01c0 40000000 		.4byte	.LFE9
 4221 01c4 0100     		.2byte	0x1
 4222 01c6 53       		.byte	0x53
 4223 01c7 00000000 		.4byte	0
 4224 01cb 00000000 		.4byte	0
 4225              	.LLST14:
 4226 01cf 02000000 		.4byte	.LVL41
 4227 01d3 08000000 		.4byte	.LVL42
 4228 01d7 0200     		.2byte	0x2
 4229 01d9 30       		.byte	0x30
 4230 01da 9F       		.byte	0x9f
 4231 01db 08000000 		.4byte	.LVL42
 4232 01df 40000000 		.4byte	.LFE9
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 129


 4233 01e3 0100     		.2byte	0x1
 4234 01e5 50       		.byte	0x50
 4235 01e6 00000000 		.4byte	0
 4236 01ea 00000000 		.4byte	0
 4237              	.LLST15:
 4238 01ee 0C000000 		.4byte	.LVL43
 4239 01f2 1E000000 		.4byte	.LVL46
 4240 01f6 0100     		.2byte	0x1
 4241 01f8 52       		.byte	0x52
 4242 01f9 20000000 		.4byte	.LVL47
 4243 01fd 26000000 		.4byte	.LVL48
 4244 0201 0100     		.2byte	0x1
 4245 0203 51       		.byte	0x51
 4246 0204 26000000 		.4byte	.LVL48
 4247 0208 36000000 		.4byte	.LVL52
 4248 020c 0100     		.2byte	0x1
 4249 020e 52       		.byte	0x52
 4250 020f 00000000 		.4byte	0
 4251 0213 00000000 		.4byte	0
 4252              	.LLST16:
 4253 0217 16000000 		.4byte	.LVL54
 4254 021b 29000000 		.4byte	.LVL55-1
 4255 021f 0100     		.2byte	0x1
 4256 0221 50       		.byte	0x50
 4257 0222 29000000 		.4byte	.LVL55-1
 4258 0226 2C000000 		.4byte	.LVL56
 4259 022a 0100     		.2byte	0x1
 4260 022c 54       		.byte	0x54
 4261 022d 2C000000 		.4byte	.LVL56
 4262 0231 54000000 		.4byte	.LVL57
 4263 0235 0100     		.2byte	0x1
 4264 0237 50       		.byte	0x50
 4265 0238 54000000 		.4byte	.LVL57
 4266 023c 58000000 		.4byte	.LVL58
 4267 0240 0200     		.2byte	0x2
 4268 0242 30       		.byte	0x30
 4269 0243 9F       		.byte	0x9f
 4270 0244 58000000 		.4byte	.LVL58
 4271 0248 6A000000 		.4byte	.LVL59
 4272 024c 0100     		.2byte	0x1
 4273 024e 50       		.byte	0x50
 4274 024f 6A000000 		.4byte	.LVL59
 4275 0253 6E000000 		.4byte	.LVL60
 4276 0257 0100     		.2byte	0x1
 4277 0259 54       		.byte	0x54
 4278 025a 00000000 		.4byte	0
 4279 025e 00000000 		.4byte	0
 4280              	.LLST17:
 4281 0262 00000000 		.4byte	.LVL61
 4282 0266 05000000 		.4byte	.LVL62-1
 4283 026a 0100     		.2byte	0x1
 4284 026c 50       		.byte	0x50
 4285 026d 05000000 		.4byte	.LVL62-1
 4286 0271 08000000 		.4byte	.LFE11
 4287 0275 0400     		.2byte	0x4
 4288 0277 F3       		.byte	0xf3
 4289 0278 01       		.uleb128 0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 130


 4290 0279 50       		.byte	0x50
 4291 027a 9F       		.byte	0x9f
 4292 027b 00000000 		.4byte	0
 4293 027f 00000000 		.4byte	0
 4294              	.LLST18:
 4295 0283 00000000 		.4byte	.LVL63
 4296 0287 08000000 		.4byte	.LVL64
 4297 028b 0100     		.2byte	0x1
 4298 028d 50       		.byte	0x50
 4299 028e 08000000 		.4byte	.LVL64
 4300 0292 0A000000 		.4byte	.LVL65
 4301 0296 0300     		.2byte	0x3
 4302 0298 70       		.byte	0x70
 4303 0299 01       		.sleb128 1
 4304 029a 9F       		.byte	0x9f
 4305 029b 0A000000 		.4byte	.LVL65
 4306 029f 30000000 		.4byte	.LFE12
 4307 02a3 0400     		.2byte	0x4
 4308 02a5 F3       		.byte	0xf3
 4309 02a6 01       		.uleb128 0x1
 4310 02a7 50       		.byte	0x50
 4311 02a8 9F       		.byte	0x9f
 4312 02a9 00000000 		.4byte	0
 4313 02ad 00000000 		.4byte	0
 4314              	.LLST19:
 4315 02b1 00000000 		.4byte	.LVL66
 4316 02b5 0A000000 		.4byte	.LVL70
 4317 02b9 0100     		.2byte	0x1
 4318 02bb 50       		.byte	0x50
 4319 02bc 0A000000 		.4byte	.LVL70
 4320 02c0 0C000000 		.4byte	.LVL71
 4321 02c4 0300     		.2byte	0x3
 4322 02c6 70       		.byte	0x70
 4323 02c7 01       		.sleb128 1
 4324 02c8 9F       		.byte	0x9f
 4325 02c9 0C000000 		.4byte	.LVL71
 4326 02cd 14000000 		.4byte	.LFE13
 4327 02d1 0400     		.2byte	0x4
 4328 02d3 F3       		.byte	0xf3
 4329 02d4 01       		.uleb128 0x1
 4330 02d5 50       		.byte	0x50
 4331 02d6 9F       		.byte	0x9f
 4332 02d7 00000000 		.4byte	0
 4333 02db 00000000 		.4byte	0
 4334              	.LLST20:
 4335 02df 04000000 		.4byte	.LVL67
 4336 02e3 06000000 		.4byte	.LVL68
 4337 02e7 0100     		.2byte	0x1
 4338 02e9 53       		.byte	0x53
 4339 02ea 08000000 		.4byte	.LVL69
 4340 02ee 0C000000 		.4byte	.LVL71
 4341 02f2 0100     		.2byte	0x1
 4342 02f4 53       		.byte	0x53
 4343 02f5 0C000000 		.4byte	.LVL71
 4344 02f9 14000000 		.4byte	.LFE13
 4345 02fd 0100     		.2byte	0x1
 4346 02ff 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 131


 4347 0300 00000000 		.4byte	0
 4348 0304 00000000 		.4byte	0
 4349              	.LLST21:
 4350 0308 00000000 		.4byte	.LVL72
 4351 030c 06000000 		.4byte	.LVL73
 4352 0310 0100     		.2byte	0x1
 4353 0312 50       		.byte	0x50
 4354 0313 06000000 		.4byte	.LVL73
 4355 0317 10000000 		.4byte	.LVL76
 4356 031b 0100     		.2byte	0x1
 4357 031d 54       		.byte	0x54
 4358 031e 10000000 		.4byte	.LVL76
 4359 0322 12000000 		.4byte	.LFE14
 4360 0326 0400     		.2byte	0x4
 4361 0328 F3       		.byte	0xf3
 4362 0329 01       		.uleb128 0x1
 4363 032a 50       		.byte	0x50
 4364 032b 9F       		.byte	0x9f
 4365 032c 00000000 		.4byte	0
 4366 0330 00000000 		.4byte	0
 4367              	.LLST22:
 4368 0334 00000000 		.4byte	.LVL72
 4369 0338 09000000 		.4byte	.LVL74-1
 4370 033c 0100     		.2byte	0x1
 4371 033e 51       		.byte	0x51
 4372 033f 09000000 		.4byte	.LVL74-1
 4373 0343 12000000 		.4byte	.LFE14
 4374 0347 0400     		.2byte	0x4
 4375 0349 F3       		.byte	0xf3
 4376 034a 01       		.uleb128 0x1
 4377 034b 51       		.byte	0x51
 4378 034c 9F       		.byte	0x9f
 4379 034d 00000000 		.4byte	0
 4380 0351 00000000 		.4byte	0
 4381              	.LLST23:
 4382 0355 00000000 		.4byte	.LVL77
 4383 0359 0A000000 		.4byte	.LVL79
 4384 035d 0100     		.2byte	0x1
 4385 035f 50       		.byte	0x50
 4386 0360 0A000000 		.4byte	.LVL79
 4387 0364 0C000000 		.4byte	.LVL80
 4388 0368 0100     		.2byte	0x1
 4389 036a 53       		.byte	0x53
 4390 036b 0C000000 		.4byte	.LVL80
 4391 036f 0E000000 		.4byte	.LVL81
 4392 0373 0100     		.2byte	0x1
 4393 0375 50       		.byte	0x50
 4394 0376 0E000000 		.4byte	.LVL81
 4395 037a 19000000 		.4byte	.LVL83-1
 4396 037e 0100     		.2byte	0x1
 4397 0380 53       		.byte	0x53
 4398 0381 19000000 		.4byte	.LVL83-1
 4399 0385 1C000000 		.4byte	.LFE15
 4400 0389 0400     		.2byte	0x4
 4401 038b F3       		.byte	0xf3
 4402 038c 01       		.uleb128 0x1
 4403 038d 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 132


 4404 038e 9F       		.byte	0x9f
 4405 038f 00000000 		.4byte	0
 4406 0393 00000000 		.4byte	0
 4407              	.LLST24:
 4408 0397 04000000 		.4byte	.LVL78
 4409 039b 0E000000 		.4byte	.LVL81
 4410 039f 0200     		.2byte	0x2
 4411 03a1 30       		.byte	0x30
 4412 03a2 9F       		.byte	0x9f
 4413 03a3 0E000000 		.4byte	.LVL81
 4414 03a7 16000000 		.4byte	.LVL82
 4415 03ab 0100     		.2byte	0x1
 4416 03ad 50       		.byte	0x50
 4417 03ae 1A000000 		.4byte	.LVL83
 4418 03b2 1C000000 		.4byte	.LFE15
 4419 03b6 0100     		.2byte	0x1
 4420 03b8 50       		.byte	0x50
 4421 03b9 00000000 		.4byte	0
 4422 03bd 00000000 		.4byte	0
 4423              	.LLST25:
 4424 03c1 02000000 		.4byte	.LVL84
 4425 03c5 08000000 		.4byte	.LVL85
 4426 03c9 0200     		.2byte	0x2
 4427 03cb 30       		.byte	0x30
 4428 03cc 9F       		.byte	0x9f
 4429 03cd 08000000 		.4byte	.LVL85
 4430 03d1 18000000 		.4byte	.LVL90
 4431 03d5 0100     		.2byte	0x1
 4432 03d7 55       		.byte	0x55
 4433 03d8 18000000 		.4byte	.LVL90
 4434 03dc 1A000000 		.4byte	.LFE16
 4435 03e0 0100     		.2byte	0x1
 4436 03e2 50       		.byte	0x50
 4437 03e3 00000000 		.4byte	0
 4438 03e7 00000000 		.4byte	0
 4439              	.LLST26:
 4440 03eb 02000000 		.4byte	.LVL84
 4441 03ef 08000000 		.4byte	.LVL85
 4442 03f3 0200     		.2byte	0x2
 4443 03f5 30       		.byte	0x30
 4444 03f6 9F       		.byte	0x9f
 4445 03f7 08000000 		.4byte	.LVL85
 4446 03fb 18000000 		.4byte	.LVL89
 4447 03ff 0100     		.2byte	0x1
 4448 0401 54       		.byte	0x54
 4449 0402 00000000 		.4byte	0
 4450 0406 00000000 		.4byte	0
 4451              	.LLST27:
 4452 040a 04000000 		.4byte	.LVL91
 4453 040e 2C000000 		.4byte	.LVL94
 4454 0412 0200     		.2byte	0x2
 4455 0414 30       		.byte	0x30
 4456 0415 9F       		.byte	0x9f
 4457 0416 2C000000 		.4byte	.LVL94
 4458 041a 80000000 		.4byte	.LVL100
 4459 041e 0100     		.2byte	0x1
 4460 0420 55       		.byte	0x55
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 133


 4461 0421 82000000 		.4byte	.LVL101
 4462 0425 10010000 		.4byte	.LVL118
 4463 0429 0100     		.2byte	0x1
 4464 042b 55       		.byte	0x55
 4465 042c 10010000 		.4byte	.LVL118
 4466 0430 3C010000 		.4byte	.LFE17
 4467 0434 0100     		.2byte	0x1
 4468 0436 50       		.byte	0x50
 4469 0437 00000000 		.4byte	0
 4470 043b 00000000 		.4byte	0
 4471              	.LLST28:
 4472 043f 26000000 		.4byte	.LVL93
 4473 0443 2C000000 		.4byte	.LVL94
 4474 0447 0200     		.2byte	0x2
 4475 0449 30       		.byte	0x30
 4476 044a 9F       		.byte	0x9f
 4477 044b 2C000000 		.4byte	.LVL94
 4478 044f A8000000 		.4byte	.LVL104
 4479 0453 0100     		.2byte	0x1
 4480 0455 56       		.byte	0x56
 4481 0456 A8000000 		.4byte	.LVL104
 4482 045a EC000000 		.4byte	.LVL110
 4483 045e 0100     		.2byte	0x1
 4484 0460 54       		.byte	0x54
 4485 0461 EE000000 		.4byte	.LVL111
 4486 0465 10010000 		.4byte	.LVL117
 4487 0469 0100     		.2byte	0x1
 4488 046b 54       		.byte	0x54
 4489 046c 00000000 		.4byte	0
 4490 0470 00000000 		.4byte	0
 4491              	.LLST29:
 4492 0474 04000000 		.4byte	.LVL91
 4493 0478 2C000000 		.4byte	.LVL94
 4494 047c 0200     		.2byte	0x2
 4495 047e 30       		.byte	0x30
 4496 047f 9F       		.byte	0x9f
 4497 0480 78000000 		.4byte	.LVL99
 4498 0484 A0000000 		.4byte	.LVL103
 4499 0488 0100     		.2byte	0x1
 4500 048a 50       		.byte	0x50
 4501 048b 00000000 		.4byte	0
 4502 048f 00000000 		.4byte	0
 4503              	.LLST30:
 4504 0493 34000000 		.4byte	.LVL95
 4505 0497 A0000000 		.4byte	.LVL103
 4506 049b 0100     		.2byte	0x1
 4507 049d 54       		.byte	0x54
 4508 049e B0000000 		.4byte	.LVL105
 4509 04a2 E6000000 		.4byte	.LVL109
 4510 04a6 0100     		.2byte	0x1
 4511 04a8 56       		.byte	0x56
 4512 04a9 F6000000 		.4byte	.LVL112
 4513 04ad FB000000 		.4byte	.LVL113-1
 4514 04b1 0100     		.2byte	0x1
 4515 04b3 51       		.byte	0x51
 4516 04b4 00000000 		.4byte	0
 4517 04b8 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 134


 4518              	.LLST31:
 4519 04bc 02000000 		.4byte	.LVL119
 4520 04c0 06000000 		.4byte	.LVL120
 4521 04c4 0200     		.2byte	0x2
 4522 04c6 30       		.byte	0x30
 4523 04c7 9F       		.byte	0x9f
 4524 04c8 06000000 		.4byte	.LVL120
 4525 04cc 1A000000 		.4byte	.LVL124
 4526 04d0 0100     		.2byte	0x1
 4527 04d2 54       		.byte	0x54
 4528 04d3 00000000 		.4byte	0
 4529 04d7 00000000 		.4byte	0
 4530              	.LLST32:
 4531 04db 0E000000 		.4byte	.LVL121
 4532 04df 13000000 		.4byte	.LVL122-1
 4533 04e3 0100     		.2byte	0x1
 4534 04e5 51       		.byte	0x51
 4535 04e6 00000000 		.4byte	0
 4536 04ea 00000000 		.4byte	0
 4537              	.LLST33:
 4538 04ee 02000000 		.4byte	.LVL129
 4539 04f2 06000000 		.4byte	.LVL130
 4540 04f6 0200     		.2byte	0x2
 4541 04f8 30       		.byte	0x30
 4542 04f9 9F       		.byte	0x9f
 4543 04fa 06000000 		.4byte	.LVL130
 4544 04fe 30000000 		.4byte	.LVL136
 4545 0502 0100     		.2byte	0x1
 4546 0504 55       		.byte	0x55
 4547 0505 00000000 		.4byte	0
 4548 0509 00000000 		.4byte	0
 4549              	.LLST34:
 4550 050d 0C000000 		.4byte	.LVL131
 4551 0511 10000000 		.4byte	.LVL132
 4552 0515 0200     		.2byte	0x2
 4553 0517 30       		.byte	0x30
 4554 0518 9F       		.byte	0x9f
 4555 0519 10000000 		.4byte	.LVL132
 4556 051d 2C000000 		.4byte	.LVL135
 4557 0521 0100     		.2byte	0x1
 4558 0523 54       		.byte	0x54
 4559 0524 00000000 		.4byte	0
 4560 0528 00000000 		.4byte	0
 4561              	.LLST35:
 4562 052c 0C000000 		.4byte	.LVL131
 4563 0530 2C000000 		.4byte	.LVL135
 4564 0534 0100     		.2byte	0x1
 4565 0536 56       		.byte	0x56
 4566 0537 00000000 		.4byte	0
 4567 053b 00000000 		.4byte	0
 4568              	.LLST36:
 4569 053f 00000000 		.4byte	.LVL137
 4570 0543 02000000 		.4byte	.LVL138
 4571 0547 0100     		.2byte	0x1
 4572 0549 50       		.byte	0x50
 4573 054a 02000000 		.4byte	.LVL138
 4574 054e 10000000 		.4byte	.LFE21
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 135


 4575 0552 0400     		.2byte	0x4
 4576 0554 F3       		.byte	0xf3
 4577 0555 01       		.uleb128 0x1
 4578 0556 50       		.byte	0x50
 4579 0557 9F       		.byte	0x9f
 4580 0558 00000000 		.4byte	0
 4581 055c 00000000 		.4byte	0
 4582              	.LLST37:
 4583 0560 00000000 		.4byte	.LVL141
 4584 0564 02000000 		.4byte	.LVL142
 4585 0568 0100     		.2byte	0x1
 4586 056a 50       		.byte	0x50
 4587 056b 02000000 		.4byte	.LVL142
 4588 056f 10000000 		.4byte	.LFE22
 4589 0573 0400     		.2byte	0x4
 4590 0575 F3       		.byte	0xf3
 4591 0576 01       		.uleb128 0x1
 4592 0577 50       		.byte	0x50
 4593 0578 9F       		.byte	0x9f
 4594 0579 00000000 		.4byte	0
 4595 057d 00000000 		.4byte	0
 4596              	.LLST38:
 4597 0581 0A000000 		.4byte	.LVL145
 4598 0585 13000000 		.4byte	.LVL147-1
 4599 0589 0100     		.2byte	0x1
 4600 058b 53       		.byte	0x53
 4601 058c 1C000000 		.4byte	.LVL149
 4602 0590 25000000 		.4byte	.LVL151-1
 4603 0594 0100     		.2byte	0x1
 4604 0596 53       		.byte	0x53
 4605 0597 2E000000 		.4byte	.LVL153
 4606 059b 3B000000 		.4byte	.LVL156-1
 4607 059f 0100     		.2byte	0x1
 4608 05a1 53       		.byte	0x53
 4609 05a2 48000000 		.4byte	.LVL159
 4610 05a6 4F000000 		.4byte	.LVL161-1
 4611 05aa 0100     		.2byte	0x1
 4612 05ac 53       		.byte	0x53
 4613 05ad 00000000 		.4byte	0
 4614 05b1 00000000 		.4byte	0
 4615              	.LLST39:
 4616 05b5 06000000 		.4byte	.LVL144
 4617 05b9 13000000 		.4byte	.LVL147-1
 4618 05bd 0100     		.2byte	0x1
 4619 05bf 50       		.byte	0x50
 4620 05c0 18000000 		.4byte	.LVL148
 4621 05c4 25000000 		.4byte	.LVL151-1
 4622 05c8 0100     		.2byte	0x1
 4623 05ca 50       		.byte	0x50
 4624 05cb 2A000000 		.4byte	.LVL152
 4625 05cf 3B000000 		.4byte	.LVL156-1
 4626 05d3 0100     		.2byte	0x1
 4627 05d5 50       		.byte	0x50
 4628 05d6 46000000 		.4byte	.LVL158
 4629 05da 4F000000 		.4byte	.LVL161-1
 4630 05de 0100     		.2byte	0x1
 4631 05e0 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 136


 4632 05e1 00000000 		.4byte	0
 4633 05e5 00000000 		.4byte	0
 4634              		.section	.debug_aranges,"",%progbits
 4635 0000 CC000000 		.4byte	0xcc
 4636 0004 0200     		.2byte	0x2
 4637 0006 00000000 		.4byte	.Ldebug_info0
 4638 000a 04       		.byte	0x4
 4639 000b 00       		.byte	0
 4640 000c 0000     		.2byte	0
 4641 000e 0000     		.2byte	0
 4642 0010 00000000 		.4byte	.LFB19
 4643 0014 06000000 		.4byte	.LFE19-.LFB19
 4644 0018 00000000 		.4byte	.LFB7
 4645 001c 24000000 		.4byte	.LFE7-.LFB7
 4646 0020 00000000 		.4byte	.LFB1
 4647 0024 10000000 		.4byte	.LFE1-.LFB1
 4648 0028 00000000 		.4byte	.LFB2
 4649 002c 40000000 		.4byte	.LFE2-.LFB2
 4650 0030 00000000 		.4byte	.LFB3
 4651 0034 2C000000 		.4byte	.LFE3-.LFB3
 4652 0038 00000000 		.4byte	.LFB4
 4653 003c 48000000 		.4byte	.LFE4-.LFB4
 4654 0040 00000000 		.4byte	.LFB6
 4655 0044 9C000000 		.4byte	.LFE6-.LFB6
 4656 0048 00000000 		.4byte	.LFB8
 4657 004c 3C000000 		.4byte	.LFE8-.LFB8
 4658 0050 00000000 		.4byte	.LFB9
 4659 0054 40000000 		.4byte	.LFE9-.LFB9
 4660 0058 00000000 		.4byte	.LFB10
 4661 005c 78000000 		.4byte	.LFE10-.LFB10
 4662 0060 00000000 		.4byte	.LFB11
 4663 0064 08000000 		.4byte	.LFE11-.LFB11
 4664 0068 00000000 		.4byte	.LFB12
 4665 006c 30000000 		.4byte	.LFE12-.LFB12
 4666 0070 00000000 		.4byte	.LFB13
 4667 0074 14000000 		.4byte	.LFE13-.LFB13
 4668 0078 00000000 		.4byte	.LFB14
 4669 007c 12000000 		.4byte	.LFE14-.LFB14
 4670 0080 00000000 		.4byte	.LFB15
 4671 0084 1C000000 		.4byte	.LFE15-.LFB15
 4672 0088 00000000 		.4byte	.LFB16
 4673 008c 1A000000 		.4byte	.LFE16-.LFB16
 4674 0090 00000000 		.4byte	.LFB17
 4675 0094 3C010000 		.4byte	.LFE17-.LFB17
 4676 0098 00000000 		.4byte	.LFB18
 4677 009c 20000000 		.4byte	.LFE18-.LFB18
 4678 00a0 00000000 		.4byte	.LFB5
 4679 00a4 14000000 		.4byte	.LFE5-.LFB5
 4680 00a8 00000000 		.4byte	.LFB20
 4681 00ac 38000000 		.4byte	.LFE20-.LFB20
 4682 00b0 00000000 		.4byte	.LFB21
 4683 00b4 10000000 		.4byte	.LFE21-.LFB21
 4684 00b8 00000000 		.4byte	.LFB22
 4685 00bc 10000000 		.4byte	.LFE22-.LFB22
 4686 00c0 00000000 		.4byte	.LFB23
 4687 00c4 60000000 		.4byte	.LFE23-.LFB23
 4688 00c8 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 137


 4689 00cc 00000000 		.4byte	0
 4690              		.section	.debug_ranges,"",%progbits
 4691              	.Ldebug_ranges0:
 4692 0000 00000000 		.4byte	.LFB19
 4693 0004 06000000 		.4byte	.LFE19
 4694 0008 00000000 		.4byte	.LFB7
 4695 000c 24000000 		.4byte	.LFE7
 4696 0010 00000000 		.4byte	.LFB1
 4697 0014 10000000 		.4byte	.LFE1
 4698 0018 00000000 		.4byte	.LFB2
 4699 001c 40000000 		.4byte	.LFE2
 4700 0020 00000000 		.4byte	.LFB3
 4701 0024 2C000000 		.4byte	.LFE3
 4702 0028 00000000 		.4byte	.LFB4
 4703 002c 48000000 		.4byte	.LFE4
 4704 0030 00000000 		.4byte	.LFB6
 4705 0034 9C000000 		.4byte	.LFE6
 4706 0038 00000000 		.4byte	.LFB8
 4707 003c 3C000000 		.4byte	.LFE8
 4708 0040 00000000 		.4byte	.LFB9
 4709 0044 40000000 		.4byte	.LFE9
 4710 0048 00000000 		.4byte	.LFB10
 4711 004c 78000000 		.4byte	.LFE10
 4712 0050 00000000 		.4byte	.LFB11
 4713 0054 08000000 		.4byte	.LFE11
 4714 0058 00000000 		.4byte	.LFB12
 4715 005c 30000000 		.4byte	.LFE12
 4716 0060 00000000 		.4byte	.LFB13
 4717 0064 14000000 		.4byte	.LFE13
 4718 0068 00000000 		.4byte	.LFB14
 4719 006c 12000000 		.4byte	.LFE14
 4720 0070 00000000 		.4byte	.LFB15
 4721 0074 1C000000 		.4byte	.LFE15
 4722 0078 00000000 		.4byte	.LFB16
 4723 007c 1A000000 		.4byte	.LFE16
 4724 0080 00000000 		.4byte	.LFB17
 4725 0084 3C010000 		.4byte	.LFE17
 4726 0088 00000000 		.4byte	.LFB18
 4727 008c 20000000 		.4byte	.LFE18
 4728 0090 00000000 		.4byte	.LFB5
 4729 0094 14000000 		.4byte	.LFE5
 4730 0098 00000000 		.4byte	.LFB20
 4731 009c 38000000 		.4byte	.LFE20
 4732 00a0 00000000 		.4byte	.LFB21
 4733 00a4 10000000 		.4byte	.LFE21
 4734 00a8 00000000 		.4byte	.LFB22
 4735 00ac 10000000 		.4byte	.LFE22
 4736 00b0 00000000 		.4byte	.LFB23
 4737 00b4 60000000 		.4byte	.LFE23
 4738 00b8 00000000 		.4byte	0
 4739 00bc 00000000 		.4byte	0
 4740              		.section	.debug_line,"",%progbits
 4741              	.Ldebug_line0:
 4742 0000 4C040000 		.section	.debug_str,"MS",%progbits,1
 4742      0200E200 
 4742      00000201 
 4742      FB0E0D00 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 138


 4742      01010101 
 4743              	.LASF126:
 4744 0000 73656E73 		.ascii	"sensorElement\000"
 4744      6F72456C 
 4744      656D656E 
 4744      7400
 4745              	.LASF163:
 4746 000e 43617053 		.ascii	"CapSense_1_BistDischargeExtCapacitors\000"
 4746      656E7365 
 4746      5F315F42 
 4746      69737444 
 4746      69736368 
 4747              	.LASF118:
 4748 0034 43617053 		.ascii	"CapSense_1_SsCSDDisableMode\000"
 4748      656E7365 
 4748      5F315F53 
 4748      73435344 
 4748      44697361 
 4749              	.LASF109:
 4750 0050 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 4750      656E7365 
 4750      5F315F46 
 4750      4C415348 
 4750      5F57445F 
 4751              	.LASF124:
 4752 006b 7363616E 		.ascii	"scanStatus\000"
 4752      53746174 
 4752      757300
 4753              	.LASF170:
 4754 0076 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 4754      656E7365 
 4754      5F315F63 
 4754      75725261 
 4754      6D536E73 
 4755              	.LASF84:
 4756 008e 736E7254 		.ascii	"snrTestWidgetId\000"
 4756      65737457 
 4756      69646765 
 4756      74496400 
 4757              	.LASF178:
 4758 009e 43617053 		.ascii	"CapSense_1_CSDScan\000"
 4758      656E7365 
 4758      5F315F43 
 4758      53445363 
 4758      616E00
 4759              	.LASF8:
 4760 00b1 756E7369 		.ascii	"unsigned int\000"
 4760      676E6564 
 4760      20696E74 
 4760      00
 4761              	.LASF135:
 4762 00be 43617053 		.ascii	"CapSense_1_SsSetIOsInDefaultState\000"
 4762      656E7365 
 4762      5F315F53 
 4762      73536574 
 4762      494F7349 
 4763              	.LASF154:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 139


 4764 00e0 43617053 		.ascii	"CapSense_1_SsInitialize\000"
 4764      656E7365 
 4764      5F315F53 
 4764      73496E69 
 4764      7469616C 
 4765              	.LASF75:
 4766 00f8 7363616E 		.ascii	"scanCounter\000"
 4766      436F756E 
 4766      74657200 
 4767              	.LASF73:
 4768 0104 6877436C 		.ascii	"hwClock\000"
 4768      6F636B00 
 4769              	.LASF94:
 4770 010c 6D61736B 		.ascii	"mask\000"
 4770      00
 4771              	.LASF173:
 4772 0111 43617053 		.ascii	"CapSense_1_curSnsIOPtr\000"
 4772      656E7365 
 4772      5F315F63 
 4772      7572536E 
 4772      73494F50 
 4773              	.LASF155:
 4774 0128 696E6974 		.ascii	"initStatus\000"
 4774      53746174 
 4774      757300
 4775              	.LASF137:
 4776 0133 72656756 		.ascii	"regValue\000"
 4776      616C7565 
 4776      00
 4777              	.LASF166:
 4778 013c 43617053 		.ascii	"CapSense_1_ioList\000"
 4778      656E7365 
 4778      5F315F69 
 4778      6F4C6973 
 4778      7400
 4779              	.LASF130:
 4780 014e 696E7465 		.ascii	"interruptState\000"
 4780      72727570 
 4780      74537461 
 4780      746500
 4781              	.LASF192:
 4782 015d 43617053 		.ascii	"CapSense_1_IsBusy\000"
 4782      656E7365 
 4782      5F315F49 
 4782      73427573 
 4782      7900
 4783              	.LASF116:
 4784 016f 6C667372 		.ascii	"lfsrScale\000"
 4784      5363616C 
 4784      6500
 4785              	.LASF181:
 4786 0179 43617053 		.ascii	"CapSense_1_CSDConnectSns\000"
 4786      656E7365 
 4786      5F315F43 
 4786      5344436F 
 4786      6E6E6563 
 4787              	.LASF22:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 140


 4788 0192 69446163 		.ascii	"iDacGain\000"
 4788      4761696E 
 4788      00
 4789              	.LASF146:
 4790 019b 43617053 		.ascii	"CapSense_1_CalibrateWidget\000"
 4790      656E7365 
 4790      5F315F43 
 4790      616C6962 
 4790      72617465 
 4791              	.LASF186:
 4792 01b6 536D6172 		.ascii	"SmartSense_TuneSensitivity\000"
 4792      7453656E 
 4792      73655F54 
 4792      756E6553 
 4792      656E7369 
 4793              	.LASF25:
 4794 01d1 736E7343 		.ascii	"snsClkInputClock\000"
 4794      6C6B496E 
 4794      70757443 
 4794      6C6F636B 
 4794      00
 4795              	.LASF134:
 4796 01e2 6D6F6465 		.ascii	"mode\000"
 4796      00
 4797              	.LASF153:
 4798 01e7 43617053 		.ascii	"CapSense_1_SsInitializeSourceSenseClk\000"
 4798      656E7365 
 4798      5F315F53 
 4798      73496E69 
 4798      7469616C 
 4799              	.LASF172:
 4800 020d 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 4800      656E7365 
 4800      5F315F73 
 4800      63616E46 
 4800      72657149 
 4801              	.LASF182:
 4802 0226 43617053 		.ascii	"CapSense_1_SsCSDInitialize\000"
 4802      656E7365 
 4802      5F315F53 
 4802      73435344 
 4802      496E6974 
 4803              	.LASF63:
 4804 0241 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 4804      656E7365 
 4804      5F315F52 
 4804      414D5F57 
 4804      445F4C49 
 4805              	.LASF151:
 4806 025f 63705769 		.ascii	"cpWidget\000"
 4806      64676574 
 4806      00
 4807              	.LASF128:
 4808 0268 656C7464 		.ascii	"eltdNum\000"
 4808      4E756D00 
 4809              	.LASF114:
 4810 0270 70747257 		.ascii	"ptrWdgt\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 141


 4810      64677400 
 4811              	.LASF150:
 4812 0278 6175746F 		.ascii	"autoTuneStatus\000"
 4812      54756E65 
 4812      53746174 
 4812      757300
 4813              	.LASF169:
 4814 0287 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
 4814      656E7365 
 4814      5F315F72 
 4814      65717565 
 4814      73745363 
 4815              	.LASF136:
 4816 02a7 6C6F6F70 		.ascii	"loopIndex\000"
 4816      496E6465 
 4816      7800
 4817              	.LASF12:
 4818 02b1 666C6F61 		.ascii	"float\000"
 4818      7400
 4819              	.LASF97:
 4820 02b7 73686966 		.ascii	"shift\000"
 4820      7400
 4821              	.LASF189:
 4822 02bd 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4822      43313120 
 4822      352E342E 
 4822      31203230 
 4822      31363036 
 4823 02f0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4823      20726576 
 4823      6973696F 
 4823      6E203233 
 4823      37373135 
 4824 0323 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4824      67202D66 
 4824      66756E63 
 4824      74696F6E 
 4824      2D736563 
 4825              	.LASF149:
 4826 034f 43617053 		.ascii	"CapSense_1_SsAutoTune\000"
 4826      656E7365 
 4826      5F315F53 
 4826      73417574 
 4826      6F54756E 
 4827              	.LASF122:
 4828 0365 43617053 		.ascii	"CapSense_1_SetupWidget\000"
 4828      656E7365 
 4828      5F315F53 
 4828      65747570 
 4828      57696467 
 4829              	.LASF188:
 4830 037c 43794465 		.ascii	"CyDelayUs\000"
 4830      6C617955 
 4830      7300
 4831              	.LASF83:
 4832 0386 736E734C 		.ascii	"snsList\000"
 4832      69737400 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 142


 4833              	.LASF7:
 4834 038e 6C6F6E67 		.ascii	"long long unsigned int\000"
 4834      206C6F6E 
 4834      6720756E 
 4834      7369676E 
 4834      65642069 
 4835              	.LASF85:
 4836 03a5 736E7254 		.ascii	"snrTestSensorId\000"
 4836      65737453 
 4836      656E736F 
 4836      72496400 
 4837              	.LASF108:
 4838 03b5 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 4838      4E6F6973 
 4838      65456E76 
 4838      6C7000
 4839              	.LASF106:
 4840 03c4 77646774 		.ascii	"wdgtType\000"
 4840      54797065 
 4840      00
 4841              	.LASF115:
 4842 03cd 6C667372 		.ascii	"lfsrSize\000"
 4842      53697A65 
 4842      00
 4843              	.LASF19:
 4844 03d6 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 4844      656E7365 
 4844      5F315F4C 
 4844      4F575F42 
 4844      534C4E5F 
 4845              	.LASF44:
 4846 03f3 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ENUM\000"
 4846      656E7365 
 4846      5F315F53 
 4846      454E5345 
 4846      5F4D4554 
 4847              	.LASF174:
 4848 0410 43617053 		.ascii	"CapSense_1_calibratedIdac\000"
 4848      656E7365 
 4848      5F315F63 
 4848      616C6962 
 4848      72617465 
 4849              	.LASF81:
 4850 042a 6D6F6443 		.ascii	"modCsdClk\000"
 4850      7364436C 
 4850      6B00
 4851              	.LASF183:
 4852 0434 43617053 		.ascii	"CapSense_1_ISR_StartEx\000"
 4852      656E7365 
 4852      5F315F49 
 4852      53525F53 
 4852      74617274 
 4853              	.LASF26:
 4854 044b 63616C54 		.ascii	"calTarget\000"
 4854      61726765 
 4854      7400
 4855              	.LASF91:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 143


 4856 0455 64725074 		.ascii	"drPtr\000"
 4856      7200
 4857              	.LASF140:
 4858 045b 43617053 		.ascii	"CapSense_1_SsIsrInitialize\000"
 4858      656E7365 
 4858      5F315F53 
 4858      73497372 
 4858      496E6974 
 4859              	.LASF28:
 4860 0476 73696750 		.ascii	"sigPFC\000"
 4860      464300
 4861              	.LASF42:
 4862 047d 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 4862      656E7365 
 4862      5F315F53 
 4862      454E5345 
 4862      5F4D4554 
 4863              	.LASF191:
 4864 049c 433A5C55 		.ascii	"C:\\Users\\michael.machate\\Desktop\\Cypress_Firstt"
 4864      73657273 
 4864      5C6D6963 
 4864      6861656C 
 4864      2E6D6163 
 4865 04cb 65737473 		.ascii	"ests\\FirstTest.cydsn\000"
 4865      5C466972 
 4865      73745465 
 4865      73742E63 
 4865      7964736E 
 4866              	.LASF51:
 4867 04e0 6C6F7742 		.ascii	"lowBslnRst\000"
 4867      736C6E52 
 4867      737400
 4868              	.LASF132:
 4869 04eb 43617053 		.ascii	"CapSense_1_SetPinState\000"
 4869      656E7365 
 4869      5F315F53 
 4869      65745069 
 4869      6E537461 
 4870              	.LASF117:
 4871 0502 43617053 		.ascii	"CapSense_1_SsSetWidgetSenseClkSrc\000"
 4871      656E7365 
 4871      5F315F53 
 4871      73536574 
 4871      57696467 
 4872              	.LASF142:
 4873 0524 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 4873      656E7365 
 4873      5F315F53 
 4873      73536574 
 4873      4D6F6443 
 4874              	.LASF105:
 4875 0547 746F7461 		.ascii	"totalNumSns\000"
 4875      6C4E756D 
 4875      536E7300 
 4876              	.LASF38:
 4877 0553 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 4877      5453454E 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 144


 4877      53455F43 
 4877      53445F4E 
 4877      4F495345 
 4878              	.LASF152:
 4879 0578 6175746F 		.ascii	"autoTuneConfig\000"
 4879      54756E65 
 4879      436F6E66 
 4879      696700
 4880              	.LASF47:
 4881 0587 6E6F6973 		.ascii	"noiseTh\000"
 4881      65546800 
 4882              	.LASF133:
 4883 058f 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 4883      656E7365 
 4883      5F315F53 
 4883      73537769 
 4883      74636853 
 4884              	.LASF14:
 4885 05ae 63686172 		.ascii	"char\000"
 4885      00
 4886              	.LASF180:
 4887 05b3 43794578 		.ascii	"CyExitCriticalSection\000"
 4887      69744372 
 4887      69746963 
 4887      616C5365 
 4887      6374696F 
 4888              	.LASF125:
 4889 05c9 43617053 		.ascii	"CapSense_1_ScanAllWidgets\000"
 4889      656E7365 
 4889      5F315F53 
 4889      63616E41 
 4889      6C6C5769 
 4890              	.LASF95:
 4891 05e3 6873696F 		.ascii	"hsiomShift\000"
 4891      6D536869 
 4891      667400
 4892              	.LASF10:
 4893 05ee 75696E74 		.ascii	"uint16\000"
 4893      313600
 4894              	.LASF45:
 4895 05f5 7265736F 		.ascii	"resolution\000"
 4895      6C757469 
 4895      6F6E00
 4896              	.LASF88:
 4897 0600 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 4897      656E7365 
 4897      5F315F52 
 4897      414D5F53 
 4897      54525543 
 4898              	.LASF76:
 4899 0616 73746174 		.ascii	"status\000"
 4899      757300
 4900              	.LASF143:
 4901 061d 6D6F6443 		.ascii	"modClk\000"
 4901      6C6B00
 4902              	.LASF162:
 4903 0624 64697669 		.ascii	"dividerVal\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 145


 4903      64657256 
 4903      616C00
 4904              	.LASF68:
 4905 062f 69646163 		.ascii	"idacComp\000"
 4905      436F6D70 
 4905      00
 4906              	.LASF90:
 4907 0638 70635074 		.ascii	"pcPtr\000"
 4907      7200
 4908              	.LASF6:
 4909 063e 6C6F6E67 		.ascii	"long long int\000"
 4909      206C6F6E 
 4909      6720696E 
 4909      7400
 4910              	.LASF18:
 4911 064c 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 4911      656E7365 
 4911      5F315F54 
 4911      48524553 
 4911      484F4C44 
 4912              	.LASF50:
 4913 0666 6F6E4465 		.ascii	"onDebounce\000"
 4913      626F756E 
 4913      636500
 4914              	.LASF144:
 4915 0671 43617053 		.ascii	"CapSense_1_SsSetSnsClockDivider\000"
 4915      656E7365 
 4915      5F315F53 
 4915      73536574 
 4915      536E7343 
 4916              	.LASF141:
 4917 0691 61646472 		.ascii	"address\000"
 4917      65737300 
 4918              	.LASF147:
 4919 0699 63616C69 		.ascii	"calibrateStatus\000"
 4919      62726174 
 4919      65537461 
 4919      74757300 
 4920              	.LASF82:
 4921 06a9 77646774 		.ascii	"wdgtList\000"
 4921      4C697374 
 4921      00
 4922              	.LASF99:
 4923 06b2 70747232 		.ascii	"ptr2SnsFlash\000"
 4923      536E7346 
 4923      6C617368 
 4923      00
 4924              	.LASF87:
 4925 06bf 736E7254 		.ascii	"snrTestRawCount\000"
 4925      65737452 
 4925      6177436F 
 4925      756E7400 
 4926              	.LASF48:
 4927 06cf 6E4E6F69 		.ascii	"nNoiseTh\000"
 4927      73655468 
 4927      00
 4928              	.LASF80:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 146


 4929 06d8 63736430 		.ascii	"csd0Config\000"
 4929      436F6E66 
 4929      696700
 4930              	.LASF17:
 4931 06e3 63796973 		.ascii	"cyisraddress\000"
 4931      72616464 
 4931      72657373 
 4931      00
 4932              	.LASF112:
 4933 06f0 6C6F6E67 		.ascii	"long double\000"
 4933      20646F75 
 4933      626C6500 
 4934              	.LASF56:
 4935 06fc 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 4935      656E7365 
 4935      5F315F52 
 4935      414D5F57 
 4935      445F4241 
 4936              	.LASF89:
 4937 071a 6873696F 		.ascii	"hsiomPtr\000"
 4937      6D507472 
 4937      00
 4938              	.LASF11:
 4939 0723 75696E74 		.ascii	"uint32\000"
 4939      333200
 4940              	.LASF49:
 4941 072a 68797374 		.ascii	"hysteresis\000"
 4941      65726573 
 4941      697300
 4942              	.LASF102:
 4943 0735 70747232 		.ascii	"ptr2FltrHistory\000"
 4943      466C7472 
 4943      48697374 
 4943      6F727900 
 4944              	.LASF39:
 4945 0745 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 4945      656E7365 
 4945      5F315F55 
 4945      4E444546 
 4945      494E4544 
 4946              	.LASF70:
 4947 075c 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 4947      656E7365 
 4947      5F315F52 
 4947      414D5F53 
 4947      4E535F4C 
 4948              	.LASF29:
 4949 077b 69446163 		.ascii	"iDac\000"
 4949      00
 4950              	.LASF190:
 4951 0780 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_Sensing.c\000"
 4951      72617465 
 4951      645F536F 
 4951      75726365 
 4951      5C50536F 
 4952              	.LASF27:
 4953 07ac 70747253 		.ascii	"ptrSenseClk\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 147


 4953      656E7365 
 4953      436C6B00 
 4954              	.LASF113:
 4955 07b8 77646774 		.ascii	"wdgtIndex\000"
 4955      496E6465 
 4955      7800
 4956              	.LASF157:
 4957 07c2 736E7349 		.ascii	"snsIndex\000"
 4957      6E646578 
 4957      00
 4958              	.LASF164:
 4959 07cb 43617053 		.ascii	"CapSense_1_dsRam\000"
 4959      656E7365 
 4959      5F315F64 
 4959      7352616D 
 4959      00
 4960              	.LASF123:
 4961 07dc 43617053 		.ascii	"CapSense_1_Scan\000"
 4961      656E7365 
 4961      5F315F53 
 4961      63616E00 
 4962              	.LASF43:
 4963 07ec 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 4963      656E7365 
 4963      5F315F53 
 4963      454E5345 
 4963      5F4D4554 
 4964              	.LASF20:
 4965 080a 736E7343 		.ascii	"snsClkConstantR\000"
 4965      6C6B436F 
 4965      6E737461 
 4965      6E745200 
 4966              	.LASF16:
 4967 081a 72656733 		.ascii	"reg32\000"
 4967      3200
 4968              	.LASF86:
 4969 0820 736E7254 		.ascii	"snrTestScanCounter\000"
 4969      65737453 
 4969      63616E43 
 4969      6F756E74 
 4969      657200
 4970              	.LASF71:
 4971 0833 636F6E66 		.ascii	"configId\000"
 4971      69674964 
 4971      00
 4972              	.LASF101:
 4973 083c 70747232 		.ascii	"ptr2SnsRam\000"
 4973      536E7352 
 4973      616D00
 4974              	.LASF111:
 4975 0847 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 4975      656E7365 
 4975      5F315F46 
 4975      4C415348 
 4975      5F535452 
 4976              	.LASF79:
 4977 085f 736E7353 		.ascii	"snsStatus\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 148


 4977      74617475 
 4977      7300
 4978              	.LASF139:
 4979 0869 706F7374 		.ascii	"postScanStatus\000"
 4979      5363616E 
 4979      53746174 
 4979      757300
 4980              	.LASF54:
 4981 0878 736E7343 		.ascii	"snsClkSource\000"
 4981      6C6B536F 
 4981      75726365 
 4981      00
 4982              	.LASF55:
 4983 0885 73697A65 		.ascii	"sizetype\000"
 4983      74797065 
 4983      00
 4984              	.LASF187:
 4985 088e 43617053 		.ascii	"CapSense_1_CSDDisconnectSns\000"
 4985      656E7365 
 4985      5F315F43 
 4985      53444469 
 4985      73636F6E 
 4986              	.LASF2:
 4987 08aa 73686F72 		.ascii	"short int\000"
 4987      7420696E 
 4987      7400
 4988              	.LASF161:
 4989 08b4 43617053 		.ascii	"CapSense_1_SsCSDSetColSnsClkDivider\000"
 4989      656E7365 
 4989      5F315F53 
 4989      73435344 
 4989      53657443 
 4990              	.LASF4:
 4991 08d8 6C6F6E67 		.ascii	"long int\000"
 4991      20696E74 
 4991      00
 4992              	.LASF77:
 4993 08e1 77646774 		.ascii	"wdgtEnable\000"
 4993      456E6162 
 4993      6C6500
 4994              	.LASF145:
 4995 08ec 43617053 		.ascii	"CapSense_1_SsSetClockDividers\000"
 4995      656E7365 
 4995      5F315F53 
 4995      73536574 
 4995      436C6F63 
 4996              	.LASF165:
 4997 090a 43617053 		.ascii	"CapSense_1_dsFlash\000"
 4997      656E7365 
 4997      5F315F64 
 4997      73466C61 
 4997      736800
 4998              	.LASF66:
 4999 091d 64696666 		.ascii	"diff\000"
 4999      00
 5000              	.LASF74:
 5001 0922 74756E65 		.ascii	"tunerCmd\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 149


 5001      72436D64 
 5001      00
 5002              	.LASF92:
 5003 092b 70735074 		.ascii	"psPtr\000"
 5003      7200
 5004              	.LASF41:
 5005 0931 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 5005      656E7365 
 5005      5F315F53 
 5005      454E5345 
 5005      5F4D4554 
 5006              	.LASF58:
 5007 094f 62757474 		.ascii	"button0\000"
 5007      6F6E3000 
 5008              	.LASF59:
 5009 0957 62757474 		.ascii	"button1\000"
 5009      6F6E3100 
 5010              	.LASF60:
 5011 095f 62757474 		.ascii	"button2\000"
 5011      6F6E3200 
 5012              	.LASF61:
 5013 0967 62757474 		.ascii	"button3\000"
 5013      6F6E3300 
 5014              	.LASF62:
 5015 096f 62757474 		.ascii	"button4\000"
 5015      6F6E3400 
 5016              	.LASF184:
 5017 0977 43617053 		.ascii	"CapSense_1_CSDCalibrateWidget\000"
 5017      656E7365 
 5017      5F315F43 
 5017      53444361 
 5017      6C696272 
 5018              	.LASF159:
 5019 0995 43617053 		.ascii	"CapSense_1_SsCSDGetColSnsClkDivider\000"
 5019      656E7365 
 5019      5F315F53 
 5019      73435344 
 5019      47657443 
 5020              	.LASF107:
 5021 09b9 6E756D43 		.ascii	"numCols\000"
 5021      6F6C7300 
 5022              	.LASF175:
 5023 09c1 43617053 		.ascii	"CapSense_1_calibratedRawcount\000"
 5023      656E7365 
 5023      5F315F63 
 5023      616C6962 
 5023      72617465 
 5024              	.LASF23:
 5025 09df 66696E67 		.ascii	"fingerCap\000"
 5025      65724361 
 5025      7000
 5026              	.LASF78:
 5027 09e9 77646774 		.ascii	"wdgtStatus\000"
 5027      53746174 
 5027      757300
 5028              	.LASF177:
 5029 09f4 43617053 		.ascii	"CapSense_1_CSDSetupWidget\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 150


 5029      656E7365 
 5029      5F315F43 
 5029      53445365 
 5029      74757057 
 5030              	.LASF168:
 5031 0a0e 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 5031      656E7365 
 5031      5F315F73 
 5031      656E736F 
 5031      72496E64 
 5032              	.LASF185:
 5033 0a25 536D6172 		.ascii	"SmartSense_TunePrescalers\000"
 5033      7453656E 
 5033      73655F54 
 5033      756E6550 
 5033      72657363 
 5034              	.LASF40:
 5035 0a3f 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 5035      656E7365 
 5035      5F315F53 
 5035      454E5345 
 5035      5F4D4554 
 5036              	.LASF96:
 5037 0a5d 64725368 		.ascii	"drShift\000"
 5037      69667400 
 5038              	.LASF5:
 5039 0a65 6C6F6E67 		.ascii	"long unsigned int\000"
 5039      20756E73 
 5039      69676E65 
 5039      6420696E 
 5039      7400
 5040              	.LASF160:
 5041 0a77 72657456 		.ascii	"retVal\000"
 5041      616C00
 5042              	.LASF21:
 5043 0a7e 76526566 		.ascii	"vRef\000"
 5043      00
 5044              	.LASF52:
 5045 0a83 69646163 		.ascii	"idacMod\000"
 5045      4D6F6400 
 5046              	.LASF103:
 5047 0a8b 70747232 		.ascii	"ptr2DebounceArr\000"
 5047      4465626F 
 5047      756E6365 
 5047      41727200 
 5048              	.LASF176:
 5049 0a9b 43617053 		.ascii	"CapSense_1_SsCSDElectrodeCheck\000"
 5049      656E7365 
 5049      5F315F53 
 5049      73435344 
 5049      456C6563 
 5050              	.LASF46:
 5051 0aba 66696E67 		.ascii	"fingerTh\000"
 5051      65725468 
 5051      00
 5052              	.LASF148:
 5053 0ac3 43617053 		.ascii	"CapSense_1_CalibrateAllWidgets\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 151


 5053      656E7365 
 5053      5F315F43 
 5053      616C6962 
 5053      72617465 
 5054              	.LASF65:
 5055 0ae2 62736C6E 		.ascii	"bslnExt\000"
 5055      45787400 
 5056              	.LASF15:
 5057 0aea 63797374 		.ascii	"cystatus\000"
 5057      61747573 
 5057      00
 5058              	.LASF1:
 5059 0af3 756E7369 		.ascii	"unsigned char\000"
 5059      676E6564 
 5059      20636861 
 5059      7200
 5060              	.LASF104:
 5061 0b01 73746174 		.ascii	"staticConfig\000"
 5061      6963436F 
 5061      6E666967 
 5061      00
 5062              	.LASF24:
 5063 0b0e 73656E73 		.ascii	"sensorCap\000"
 5063      6F724361 
 5063      7000
 5064              	.LASF131:
 5065 0b18 696F5074 		.ascii	"ioPtr\000"
 5065      7200
 5066              	.LASF100:
 5067 0b1e 70747232 		.ascii	"ptr2WdgtRam\000"
 5067      57646774 
 5067      52616D00 
 5068              	.LASF127:
 5069 0b2a 73746174 		.ascii	"state\000"
 5069      6500
 5070              	.LASF129:
 5071 0b30 656C7464 		.ascii	"eltdIndex\000"
 5071      496E6465 
 5071      7800
 5072              	.LASF93:
 5073 0b3a 6873696F 		.ascii	"hsiomMask\000"
 5073      6D4D6173 
 5073      6B00
 5074              	.LASF171:
 5075 0b44 43617053 		.ascii	"CapSense_1_currentSenseMethod\000"
 5075      656E7365 
 5075      5F315F63 
 5075      75727265 
 5075      6E745365 
 5076              	.LASF158:
 5077 0b62 63757253 		.ascii	"curSnsIOPtr\000"
 5077      6E73494F 
 5077      50747200 
 5078              	.LASF53:
 5079 0b6e 736E7343 		.ascii	"snsClk\000"
 5079      6C6B00
 5080              	.LASF179:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 152


 5081 0b75 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5081      74657243 
 5081      72697469 
 5081      63616C53 
 5081      65637469 
 5082              	.LASF0:
 5083 0b8c 7369676E 		.ascii	"signed char\000"
 5083      65642063 
 5083      68617200 
 5084              	.LASF64:
 5085 0b98 62736C6E 		.ascii	"bsln\000"
 5085      00
 5086              	.LASF3:
 5087 0b9d 73686F72 		.ascii	"short unsigned int\000"
 5087      7420756E 
 5087      7369676E 
 5087      65642069 
 5087      6E7400
 5088              	.LASF30:
 5089 0bb0 4155544F 		.ascii	"AUTO_TUNE_CONFIG_TYPE\000"
 5089      5F54554E 
 5089      455F434F 
 5089      4E464947 
 5089      5F545950 
 5090              	.LASF98:
 5091 0bc6 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 5091      656E7365 
 5091      5F315F46 
 5091      4C415348 
 5091      5F494F5F 
 5092              	.LASF119:
 5093 0be1 6E657752 		.ascii	"newRegValue\000"
 5093      65675661 
 5093      6C756500 
 5094              	.LASF156:
 5095 0bed 43617053 		.ascii	"CapSense_1_SsClearCSDSensors\000"
 5095      656E7365 
 5095      5F315F53 
 5095      73436C65 
 5095      61724353 
 5096              	.LASF9:
 5097 0c0a 75696E74 		.ascii	"uint8\000"
 5097      3800
 5098              	.LASF13:
 5099 0c10 646F7562 		.ascii	"double\000"
 5099      6C6500
 5100              	.LASF67:
 5101 0c17 6E656742 		.ascii	"negBslnRstCnt\000"
 5101      736C6E52 
 5101      7374436E 
 5101      7400
 5102              	.LASF69:
 5103 0c25 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 5103      656E7365 
 5103      5F315F52 
 5103      414D5F53 
 5103      4E535F53 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 153


 5104              	.LASF31:
 5105 0c3f 70617261 		.ascii	"param0\000"
 5105      6D3000
 5106              	.LASF32:
 5107 0c46 70617261 		.ascii	"param1\000"
 5107      6D3100
 5108              	.LASF33:
 5109 0c4d 70617261 		.ascii	"param2\000"
 5109      6D3200
 5110              	.LASF34:
 5111 0c54 70617261 		.ascii	"param3\000"
 5111      6D3300
 5112              	.LASF35:
 5113 0c5b 70617261 		.ascii	"param4\000"
 5113      6D3400
 5114              	.LASF36:
 5115 0c62 70617261 		.ascii	"param5\000"
 5115      6D3500
 5116              	.LASF37:
 5117 0c69 70617261 		.ascii	"param6\000"
 5117      6D3600
 5118              	.LASF72:
 5119 0c70 64657669 		.ascii	"deviceId\000"
 5119      63654964 
 5119      00
 5120              	.LASF121:
 5121 0c79 77696467 		.ascii	"widgetStatus\000"
 5121      65745374 
 5121      61747573 
 5121      00
 5122              	.LASF57:
 5123 0c86 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 5123      656E7365 
 5123      5F315F52 
 5123      414D5F57 
 5123      445F4255 
 5124              	.LASF120:
 5125 0ca6 77696467 		.ascii	"widgetId\000"
 5125      65744964 
 5125      00
 5126              	.LASF138:
 5127 0caf 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 5127      656E7365 
 5127      5F315F53 
 5127      73506F73 
 5127      74416C6C 
 5128              	.LASF167:
 5129 0ccf 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 5129      656E7365 
 5129      5F315F77 
 5129      69646765 
 5129      74496E64 
 5130              	.LASF110:
 5131 0ce6 77646774 		.ascii	"wdgtArray\000"
 5131      41727261 
 5131      7900
 5132              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\ccta3GRX.s 			page 154


