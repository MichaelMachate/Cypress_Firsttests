ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_1_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_1_SsSetWidgetSenseClkSrc,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_1_SsSetWidgetSenseClkSrc, %function
  24              	CapSense_1_SsSetWidgetSenseClkSrc:
  25              	.LFB20:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_1_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \file CapSense_1_Sensing.c
   3:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \version 5.20
   4:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \see CapSense_1 v5.20 Datasheet
  10:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 2


  32:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Structure.h"
  43:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #include "CapSense_1_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_Adc.h"
  58:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (0u != CapSense_1_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #include "CapSense_1_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #include "CapSense_1_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (0u != CapSense_1_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_1_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
  85:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #define CapSense_1_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 3


  89:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #define CapSense_1_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** } CapSense_1_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_ENABLE == CapSense_1_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 4


 146:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
 161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
 165:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_SENSE_METHOD_ENUM CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 CapSense_1_immunity[CapSense_1_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     const uint8 CapSense_1_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** volatile uint8 CapSense_1_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint8 CapSense_1_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_RAM_SNS_STRUCT *CapSense_1_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_WD_STRUCT const *CapSense_1_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
 202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 5


 203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_SNS_STRUCT const *CapSense_1_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** CapSense_1_FLASH_IO_STRUCT const *CapSense_1_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_IsBusy
 212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CapSense_1_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_1_Sensing.c **** uint32 CapSense_1_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetupWidget
 240:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDSetupWidgetExt(), CapSense_1_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 259:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \if SECTION_I_REP
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 6


 260:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       CapSense_1_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function does not start sensor scanning, the CapSense_1_Scan()
 264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if ((CapSense_1_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 7


 317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_Scan
 348:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function is called only after the CapSense_1_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_1_IsBusy()
 358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_Scan(void)
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_WDGT_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_WDGT_SW_STS_BUSY))
 373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 8


 374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXScan();
 384:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDScan();
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXScan();
 394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_SetupWidget() and CapSense_1_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  using the CapSense_1_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 430:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_ScanAllWidgets(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 9


 431:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             scanStatus = CapSense_1_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (0u != (CapSense_1_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_ENABLE;
 462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
 472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (0u != (CapSense_1_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 scanStatus = CapSense_1_Scan();
 477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 487:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 10


 488:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitialize
 489:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  of the CapSense_1 Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling the CapSense_1_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the CapSense_1 Component at power-up. The CapSense_1_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (centerFreqTrim < CapSense_1_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_1_IMO_FREQUE
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (centerFreqTrim > (CapSense_1_IMO_FREQUENCY_OFFSET_MAX - CapSense_1_IMO_FREQUENCY_O
 534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_1_IMO_FREQUE
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 544:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 11


 545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_MFS_IMO == CapSense_1_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
 551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****               ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
 559:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_MANY_SENSE_MODES_EN)
 564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSD_E);
 568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_CSX_E);
 570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ISX_E);
 572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 576:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (initStatus);
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 580:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 581:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SetPinState
 583:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 585:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 586:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 587:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 589:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  associated with the ganged sensor is updated.
 590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 592:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 594:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 595:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 596:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 597:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 598:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function accepts the CapSense_1_SHIELD and
 599:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1_SENSOR states as an input only if there is at least
 600:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_1_TX_PIN
 601:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  and CapSense_1_RX_PIN states as an input only if there is at least
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 12


 602:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  one CSX widget in the project.
 603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Calling this function directly from the application layer is not
 605:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 606:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 607:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  automatically set the required pin states. They ignore changes
 608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  in the design made by the CapSense_1_SetPinState() function.
 609:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 610:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 611:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param widgetId
 612:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 613:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  sensor.
 614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  A macro for the widget ID can be found in the CapSense_1 Configuration
 615:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  header file defined as CapSense_1_<WidgetName>_WDGT_ID.
 616:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param sensorElement
 618:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 619:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  its pin state.
 620:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 622:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as
 623:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_SNS<SensorNumber>_ID.
 624:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 625:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 627:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 628:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  \endif
 629:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  CapSense_1 Configuration header file defined as:
 631:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_RX<RXNumber>_ID
 632:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_<WidgetName>_TX<TXNumber>_ID.
 633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 634:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param state
 635:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the state of the sensor to be set:
 636:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     1. CapSense_1_GROUND - The pin is connected to the ground.
 637:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     2. CapSense_1_HIGHZ - The drive mode of the pin is set to High-Z
 638:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        Analog.
 639:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     3. CapSense_1_SHIELD - The shield signal is routed to the pin
 640:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 641:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     4. CapSense_1_SENSOR - The pin is connected to the scanning bus
 642:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSD sensing method is enabled).
 643:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     5. CapSense_1_TX_PIN - The Tx signal is routed to the sensor
 644:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     6. CapSense_1_RX_PIN - The pin is connected to the scanning bus
 646:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *        (available only if CSX sensing method is enabled).
 647:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdIndex;
 653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8  interruptState;
 654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr;
 655:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 13


 659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_GANGED_SNS_EN)
 661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check the ganged sns flag */
 662:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[widgetId].staticConfig & Ca
 663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr = CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 665:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             curFlashSnsPtr += sensorElement;
 666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinId];
 667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2
 672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             eltdNum = 1u;
 673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr = (CapSense_1_FLASH_IO_STRUCT const *)CapSense_1_dsFlash.wdgtArray[widgetId].ptr2SnsF
 676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif
 678:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Reset HSIOM and PC registers */
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 687:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (state)
 689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_GROUND:
 691:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_HIGHZ:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             interruptState = CyEnterCriticalSection();
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSOR:
 706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Enable sensor */
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSDConnectSns(ioPtr);
 708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 709:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN)
 711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 case CapSense_1_SHIELD:
 712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM
 715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 14


 716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     break;
 717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) */
 718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 719:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
 721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_ISX_EN))
 722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_TX_PIN:
 723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_GPIO_STRGDRV <<
 726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 728:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_RX_PIN:
 730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_1_HSIOM_SEL
 732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK <
 733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CyExitCriticalSection(interruptState);
 734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
 738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wrong state */
 739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 741:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
 743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 745:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 746:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDDisableMode
 749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSD mode.
 753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  4. Disable Shield Electrodes.
 760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsCSDDisableMode(void)
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 765:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CMOD_HSIOM_PTR);
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
 770:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 15


 773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN)))
 774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Disconnect IDACA and IDACB */
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_SW_REFGEN_SEL_PTR);
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
 778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
 779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    ((CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) && \
 780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_DEDICATED_IDAC_COMP_EN))) */
 781:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_SsCSDElectrodeCheck();
 784:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN))
 788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_1_CSH_HSIOM_PTR);
 789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_1_CSH_TO_AMUXBUS_B_MASK << CapSense_1_CSH_HS
 790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_CSH_HSIOM_PTR, newRegValue);
 791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_TANK_EN)) */
 793:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT))
 796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableShieldElectrodes();
 797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                    (0u != CapSense_1_CSD_TOTAL_SHIELD_COUNT)) */
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 800:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 801:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 802:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableCSXMode
 806:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables CSX mode.
 810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableCSXMode(void)
 818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 820:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 825:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 16


 830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_CSXElectrodeCheck();
 833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 834:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 836:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
 838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsDisableISXMode
 839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
 840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
 842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function disables ISX mode.
 843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
 845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
 849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsDisableISXMode(void)
 851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
 853:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintA_HSIOM_PTR);
 856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintA_HSIOM_MASK);
 857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintA_HSIOM_PTR, newRegValue);
 858:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_CintB_HSIOM_PTR);
 861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CintB_HSIOM_MASK);
 862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CintB_HSIOM_PTR, newRegValue);
 863:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXElectrodeCheck();
 866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_DigPrt2_Stop();
 867:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_USES_PORT_3)
 868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DigPrt3_Stop();
 869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* CapSense_1_USES_PORT_3 */
 870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 871:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 873:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 874:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSwitchSensingMode
 875:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 876:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 877:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 878:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanned.
 880:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 881:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 882:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 883:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 884:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSD mode.
 886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 17


 887:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 888:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 889:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 890:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Initialize CSX mode.
 891:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 892:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param mode
 893:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Specifies the scan mode:
 894:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSD_E
 895:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_CSX_E
 896:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_ISX_E
 897:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_SENSE_METHOD_BIST_E
 898:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - CapSense_1_UNDEFINED_E
 899:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 900:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
 901:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSwitchSensingMode(CapSense_1_SENSE_METHOD_ENUM mode)
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == CapSense_1_currentSenseMethod)
 907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDDisableMode();
 910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 911:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == CapSense_1_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableCSXMode();
 916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == CapSense_1_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsDisableISXMode();
 922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == CapSense_1_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistDisableMode();
 928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
 933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Release ADC resources */
 934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_AdcReleaseResources();
 935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
 936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 937:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Enable the specified mode */
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if (CapSense_1_SENSE_METHOD_CSD_E == mode)
 940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
 942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsCSDInitialize();
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 18


 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_CSX_E == mode)
 948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXInitialize();
 952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSX_E;
 953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
 954:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_ISX_E == mode)
 956:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 957:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
 958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXInitialize();
 960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_ISX_E;
 961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
 962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else if (CapSense_1_SENSE_METHOD_BIST_E == mode)
 964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
 966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_BistInitialize();
 967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_BIST_E;
 968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
 969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         else
 971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
 973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 976:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 978:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetIOsInDefaultState
 980:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
 981:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 982:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
 983:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all electrodes into a default state.
 984:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 985:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
 986:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 987:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 988:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - Strong drive.
 989:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 990:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets all the ADC channels into a default state:
 992:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 993:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - DM      - HiZ-Analog.
 994:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - State   - Zero.
 995:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 996:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly from the application
 997:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  layer.
 998:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
 999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetIOsInDefaultState(void)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 19


1001:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
1003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
1004:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 regValue;
1005:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Loop through all electrodes */
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_1_TOTAL_ELECTRODES; loopIndex++)
1008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 1. Disconnect HSIOM.
1011:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 2. Set strong DM.
1012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * 3. Set pin state to logic 0.
1013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1022:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1026:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get next electrode */
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ioPtr++;
1029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1030:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ADC_EN)
1032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ClearAdcChannels();
1033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     
1035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if(CapSense_1_ENABLE == CapSense_1_ISX_EN)
1036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_ISXSetDefaultDigital();
1037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1039:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_ADC_EN)
1041:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1042:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsReleaseResources()
1043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1044:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1045:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1046:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1047:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  default state.
1048:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1049:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1050:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The function performs following tasks:
1051:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1052:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1053:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *     Cmod for CSD mode)
1054:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1055:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1056:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
1057:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the status of the operation:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 20


1058:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Zero        - Resources released successfully.
1059:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1060:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1062:Generated_Source\PSoC4/CapSense_1_Sensing.c **** cystatus CapSense_1_SsReleaseResources(void)
1063:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1065:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_SW_STS_BUSY == (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY))
1067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1070:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
1072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableCSXMode();
1075:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1076:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsDisableISXMode();
1079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_ISX_EN) */
1080:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDDisableMode();
1083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
1084:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_BistDisableMode();
1087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1088:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_ENABLE == CapSense_1_CSD_SHIELD_EN) &&  \
1091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION))
1092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsSetIOsInDefaultState();
1093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
1094:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE != CapSense_1_CSD_SHIELD_EN) &&  \
1095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_SNS_CONNECTION_SHIELD == CapSense_1_CSD_INACTIVE_SNS_CONNECTION)) */
1096:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1100:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_currentSenseMethod = CapSense_1_UNDEFINED_E;
1102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1103:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return busyStatus;
1105:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1106:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_ADC_EN) */
1107:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1108:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1109:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1110:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsPostAllWidgetsScan
1111:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1112:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1113:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1114:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 21


1115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1116:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1117:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is the function used by the CapSense_1 ISR to implement multiple widget
1118:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  scanning.
1119:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Should not be used by the application layer.
1120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1121:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsPostAllWidgetsScan(void)
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  1. Increment widget index
1126:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  2. Check if all the widgets are scanned
1127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     */
1129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (1u != CapSense_1_TOTAL_WIDGETS)
1130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus postScanStatus;
1131:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_widgetIndex++;
1135:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             postScanStatus = CapSense_1_SetupWidget((uint32)CapSense_1_widgetIndex);
1137:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_requestScanAllWidget = CapSense_1_DISABLE;
1144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_Scan();
1146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if((CapSense_1_TOTAL_WIDGETS - 1u) == CapSense_1_widgetIndex)
1148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (CapSense_1_ENABLE == CapSense_1_CSD_EN))
1151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widget
1153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable the CSD block */
1155:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CY_SET_REG32(CapSense_1_CONFIG_PTR, CapSense_1_configCsd);
1156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* ((CapSense_1_ENABLE == CapSense_1_BLOCK_OFF_AFTER_SCAN_EN) && \
1158:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                            (CapSense_1_ENABLE == CapSense_1_CSD_EN)) */
1159:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update scan Counter */
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.scanCounter++;
1162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_SW_STS_BUSY;
1164:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure */
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1169:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 22


1172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1173:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1174:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status &= ~CapSense_1_STATUS_ERR_MASK;
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
1177:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1179:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsIsrInitialize
1185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1187:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1188:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1190:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1191:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  proper working of the Component.
1194:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1195:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param address
1196:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1197:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1198:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1199:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsIsrInitialize(cyisraddress address)
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1203:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1204:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1205:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetModClkClockDivider
1207:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1208:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1209:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1210:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1211:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1212:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1215:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1216:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1217:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param modClk
1219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The divider value for the modulator clock.
1220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1221:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1222:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetModClkClockDivider(uint32 modClk)
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1224:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Stop modulator clock */
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
1228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CapSense_1_MODCLK_CMD_DIV_SHIFT)|
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 23


1229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_MODCLK_CMD_DISABLE_MASK));
1230:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense modClk.
1233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1237:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) & CapSense_1_MODCLK_CMD_ENABLE_MASK))
1240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1242:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1243:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
1247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_MODCLK_CMD_PA_DIV_SHIFT) |
1248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                   CapSense_1_MODCLK_CMD_ENABLE_MASK));
1249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1251:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1252:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) &
1255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(~CapSense_1_ModClk__ENABLE_MASK));
1256:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Update ModClk clock divider.
1259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_ModClk__DI
1262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= (modClk - 1u);
1263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_DIV_PTR, newRegValue);
1264:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Set bit to enable ModClk clock. */
1266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_MODCLK_CMD_PTR,
1267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  CY_GET_REG32(CapSense_1_MODCLK_CMD_PTR) |
1268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ModClk__ENABLE_MASK);
1269:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1271:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1272:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1273:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1274:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetSnsClockDivider
1275:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1276:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1277:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1278:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the sense clock.
1280:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1282:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1283:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1284:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1285:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 24


1286:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1287:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1289:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1290:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetSnsClockDivider(uint32 snsClk)
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1292:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 newRegValue;
1294:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
1296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * Set divider value for sense clock.
1297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * to dividing by 1.
1299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_1_SENSE_PERIOD_PTR);
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
1304:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
1305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Stop sense clock clock   */
1307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SnsClk__DIV_ID <<
1309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CapSense_1_SNSCLK_CMD_DIV_SHIFT)|
1310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      ((uint32)CapSense_1_SNSCLK_CMD_DISABLE_MASK));
1311:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Set divider value for sense clock.
1314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * to dividing by 1.
1316:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1317:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1319:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) & CapSense_1_SNSCLK_CMD_ENABLE_MASK))
1321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1324:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(((uint32)CapSense_1_SnsClk__DIV_ID << CapSense_1_SNSCLK_CMD_DIV_SHIFT
1328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       ((uint32)CapSense_1_ModClk__PA_DIV_ID << CapSense_1_SNSCLK_CMD_PA_DIV_SHIFT) 
1329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                       CapSense_1_SNSCLK_CMD_ENABLE_MASK));
1330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #else
1331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
1332:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) &
1336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      (uint32)(~(uint32)CapSense_1_SnsClk__ENABLE_MASK));
1337:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * Update snsClk clock divider.
1340:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          */
1342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_1_SnsClk
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 25


1343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (snsClk - 1u);
1344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_DIV_PTR, newRegValue);
1345:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1346:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_SNSCLK_CMD_PTR,
1348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                      CY_GET_REG32(CapSense_1_SNSCLK_CMD_PTR) |
1349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_SnsClk__ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) */
1351:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1353:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1355:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
1356:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsSetClockDividers
1357:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
1358:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1359:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
1360:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1361:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1362:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  the modulator clock.
1363:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1364:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
1365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1366:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1367:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  enable the clocks.
1368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
1370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClk The divider value for the sense clock.
1371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  modClk The divider value for the modulator clock.
1372:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
1373:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
1376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetModClkClockDivider(modClk);
1378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Sns clock */
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_SsSetSnsClockDivider(snsClk);
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
1382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ANYMODE_AUTOCAL)
1385:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1386:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateWidget
1387:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1390:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1391:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the
1392:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget prior to calibration.
1393:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1394:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1395:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function performs exactly the same tasks as
1396:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_CalibrateAllWidgets, but only for a specified widget.
1397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1398:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1399:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 26


1400:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1401:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1403:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
1413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  A macro for the widget ID can be found in the
1415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1 Configuration header file defined as
1416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  CapSense_1_<WidgetName>_WDGT_ID.
1417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the specified widget calibration:
1420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateWidget(uint32 widgetId)
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1429:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         do
1431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_TOTAL_WIDGETS <= widgetId)
1433:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1435:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1437:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /*
1438:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1440:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              */
1441:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN)
1442:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (0u != CapSense_1_GET_WIDGET_EN_STATUS(widgetId))
1443:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1444:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1445:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1446:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 else
1447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1448:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1450:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif  /* (CapSense_1_ENABLE == CapSense_1_SELF_TEST_EN) */
1451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1453:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Exit from the loop because of a fail */
1455:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
1456:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 27


1457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1459:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1460:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN)
1462:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSX_E ==
1463:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1464:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1465:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSX widget */
1466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                        CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1467:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1468:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSX_IDAC_AUTOCAL_EN) */
1469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1470:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN)
1471:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if (CapSense_1_SENSE_METHOD_CSD_E ==
1472:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[widgetId]))
1473:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1474:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calibrate CSD widget */
1475:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RA
1476:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1477:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif  /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_AUTOCAL_EN) */
1478:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSD_EN)
1481:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CapSense_1_CSDCalibrateWidget(widgetId, CapSense_1_CSD_RAWCOUNT_C
1482:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_CSXCalibrateWidget(widgetId, CapSense_1_CSX_RAWCOUNT_CAL_LEVEL);
1486:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #elif (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_ISXCalibrateWidget(widgetId, CapSense_1_ISX_RAWCOUNT_CAL_LEVEL);
1490:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
1492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
1494:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              /* Update CRC */
1496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN)
1497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_DsUpdateWidgetCrc(widgetId);
1498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE ==CapSense_1_TST_WDGT_CRC_EN) */
1499:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         } while (0u);
1501:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1504:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1505:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_CalibrateAllWidgets
1508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1511:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  prior to calibration.
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 28


1514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1520:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  auto-calibration parameter is enabled.
1526:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endcond
1527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \if SECTION_I_REP
1528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  is enabled.
1530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  \endif
1531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the calibration process:
1534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    operate as expected.
1537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1538:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1539:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_CalibrateAllWidgets(void)
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1543:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             calibrateStatus |= CapSense_1_CalibrateWidget(wdgtIndex);
1547:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return calibrateStatus;
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1551:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
1552:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1553:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1554:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)
1555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsAutoTune
1557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense_1 operation.
1561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This API performs the following:
1564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *    2*5*R*Cp.
1567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
1570:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the status of the operation:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 29


1571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1574:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus CapSense_1_SsAutoTune(void)
1576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
1579:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cp = 0uL;
1581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1582:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 cpRow = 0uL;
1583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1584:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 cpWidget[CapSense_1_TOTAL_WIDGETS];
1586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
1587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1588:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Configure common config variables */
1590:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_1_CSD_SNSCLK_R_CONST;
1591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.vRef = CapSense_1_CSD_VREF_MV;
1592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_1_CSD_IDAC_GAIN_VALUE_NA;
1593:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
1596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif ((CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK) && (CapSense_1_DISABLE == CY_PSO
1599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained */
1600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1603:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_1_FLIP_FLOP_DIV;
1604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_1_dsRam.modCsdClk)
1607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
1608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN)
1611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Initialize CSD mode */
1612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsCSDInitialize();
1613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_CSX_EN) */
1614:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #1:
1617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - performing the first calibration at fixed settings
1618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sensor Cp
1619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting sense clock frequency based on Cp
1620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1621:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sense clock for all the widgets */
1623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1626:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 30


1628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1630:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = CapSense_1_CALIBRATION_RESOLUTION;
1633:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_1_CAL
1637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
1642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
1645:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_CAL_LEVEL);
1648:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1651:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get IDAC */
1657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Calculate achived calibration level */
1660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcountR
1661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Find correct sense clock value */
1664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cpRow)
1667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1668:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1669:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1670:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
1672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
1675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1680:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << Ca
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 31


1685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 {
1686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_1_dsRam.modCsdClk;
1687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 }
1688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #else
1689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             #endif
1691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1694:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1697:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1698:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1700:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calculate achived calibration level */
1702:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_1_calibratedRawcount * CapSen
1703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         ((uint32)(0x01uL << CapSense_1_CALIBRATION_RESOLUTION) - 1u));
1704:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find correct sense clock value */
1706:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if ((CapSense_1_CP_MAX + CapSense_1_CP_ERROR) <= cp)
1709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1712:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
1714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
1717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
1720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
1722:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE != CapSense_1_CSDV2)
1724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
1725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_1_FL
1727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                              ptrWdgt->snsClk = CapSense_1_dsRam.modCsdClk;
1729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
1731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif
1733:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE != CapSense_1_CSDV2) */
1734:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1736:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1740:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (cpRow > cp)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 32


1742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1744:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1747:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
1749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1750:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_EN)
1751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Non-CSD widget */
1752:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1753:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) */
1754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1756:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #2:
1759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with new sense clock frequency
1760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - getting resolution
1761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1762:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune resolution for all the widgets */
1764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1771:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1774:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1777:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1778:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set parasitic capacitance for columns */
1779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1780:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get IDAC */
1782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.iDac = CapSense_1_calibratedIdac;
1783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
1785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wd
1786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFla
1787:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
1789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
1792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1794:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Set parasitic capacitance for rows */
1796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1797:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get IDAC */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 33


1799:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             autoTuneConfig.iDac = CapSense_1_calibratedIdacRow;
1800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
1801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
1802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
1803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get finger capacitance */
1805:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Init pointer to sigPFC */
1808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1809:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Find resolution */
1811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1814:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*
1816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Autotune phase #3:
1817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - selecting a widget clock source if AUTO
1818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * - updating sensitivity
1820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         */
1821:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Tune sensitivity for all the widgets */
1823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
1824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
1826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
1827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
1828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
1829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                           CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1830:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1832:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 autoTuneStatus |= CapSense_1_CSDCalibrateWidget(wdgtIndex, CapSense_1_CSD_AUTOTUNE_
1835:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
1837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
1838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
1839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
1840:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return autoTuneStatus;
1843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1844:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_CSD_SS_DIS != CapSense_1_CSD_AUTOTUNE)) */
1845:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1846:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1847:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_DISABLE == CapSense_1_CSDV2)
1848:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) ||\
1850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG))
1851:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSinking
1853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 34


1856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1859:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1860:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1861:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1862:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1863:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1864:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSinking(void)
1865:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1866:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1867:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1868:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sinking Mode */
1869:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM2_PTR) & ~CapSense_1_IDAC_TRIM2_MOD_SNK_MASK;
1870:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1871:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK) ;
1872:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1873:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
1874:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1875:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM2_COMP_SNK_MASK;
1876:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM2_PTR) &
1877:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1878:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1879:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1880:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1881:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM2_PTR, trimValue);
1882:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1883:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1884:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)) */
1885:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1886:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1887:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if ( ((CapSense_1_ENABLE == CapSense_1_CSX_EN) \
1888:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         || (CapSense_1_ENABLE == CapSense_1_ISX_EN)) || \
1889:Generated_Source\PSoC4/CapSense_1_Sensing.c ****          (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG))
1890:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
1891:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsTrimIdacsSourcing
1892:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
1893:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1894:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
1895:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1896:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1897:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1898:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
1899:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1900:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1901:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
1902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
1903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         static void CapSense_1_SsTrimIdacsSourcing(void)
1904:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
1905:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 trimValue;
1906:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1907:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1908:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_1_TRIM1_PTR) & ~CapSense_1_IDAC_TRIM1_MOD_SRC_MASK;
1909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1910:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                       CapSense_1_SFLASH_TRIM_IDAC_MOD_MASK);
1911:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1912:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 35


1913:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1914:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue &= ~CapSense_1_IDAC_TRIM1_COMP_SRC_MASK;
1915:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_1_SFLASH_TRIM1_PTR) &
1916:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                           CapSense_1_SFLASH_TRIM_IDAC_COMP_MASK);
1917:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_IDAC_COMP_EN) */
1918:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1920:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_TRIM1_PTR, trimValue);
1921:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
1922:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
1923:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)) */
1924:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1925:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1926:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1927:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsTrimIdacs
1928:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1929:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1930:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1931:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1932:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1933:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1934:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1935:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1936:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1937:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  source mode based on sink/source mode configuration.
1938:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1940:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsTrimIdacs(void)
1942:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_EN)
1944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1945:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1946:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SINKING == CapSense_1_CSD_IDAC_CONFIG)
1947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSinking();
1948:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #elif (CapSense_1_IDAC_SOURCING == CapSense_1_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_SsTrimIdacsSourcing();
1950:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
1951:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1952:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_ISX_
1953:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1954:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_DISABLE == CapSense_1_CSDV2) */
1955:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1957:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN)
1958:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1959:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeImoFreq
1960:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1961:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1962:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the IMO frequency.
1964:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1965:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1966:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1967:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  trims are contained in the CapSense_1_immunity[value] array for each
1968:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  frequency channel.
1969:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 36


1970:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param value The frequency channel ID.
1971:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1973:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeImoFreq(uint32 value)
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
1977:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
1978:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
1979:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsChangeClkFreq
1980:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
1981:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1982:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
1983:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1984:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1985:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1986:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
1987:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1988:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the corresponding divider.
1989:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1990:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param chId
1991:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The frequency channel ID.
1992:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
1993:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
1994:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsChangeClkFreq(uint32 chId)
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
1996:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
1997:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset1 = 0u;
1998:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 freqOffset2 = 0u;
1999:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2000:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2003:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2004:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2006:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2008:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 snsClkSrc;
2009:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2010:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2011:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((0u != CapSense_1_TOTAL_CSD_WIDGETS) || \
2013:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              ((CapSense_1_DISABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_1_TOTAL_CS
2014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_1_dsFlash.wdgtArray[CapSense
2015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)ptrFlas
2016:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2017:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch(CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex]))
2019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSD_WIDGETS)
2021:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
2022:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Get sensor clock divider value */
2023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN)
2024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsdClk;
2025:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2026:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 37


2027:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2029:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2030:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2031:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2032:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2033:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2034:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2035:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2036:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2037:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2038:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2039:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2040:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2041:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F1;
2042:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F2;
2043:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2044:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2045:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2046:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2047:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Get sense clk source */
2048:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2049:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2050:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_dsFlash.wdgtArray[CapSense_1_widgetIndex].numCols <= CapSens
2051:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2052:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2053:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2054:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2055:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2056:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2057:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2058:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2059:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2060:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
2061:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2062:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2063:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2064:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2065:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2066:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset1 <<= 1u;
2068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset2 <<= 1u;
2069:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2070:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2071:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2072:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2073:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2074:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2075:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2076:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2078:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2079:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
2080:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2083:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 38


2084:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2085:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2087:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2088:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2089:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2090:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2091:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2092:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2093:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2094:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2095:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2096:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)
2098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM
2099:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2100:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2101:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if((CapSense_1_CLK_SOURCE_PRS8  == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2102:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRS12 == CapSense_1_CSD_SNS_CLK_SOURCE) ||\
2103:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))
2104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     switch (snsClkSrc)
2105:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2106:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS8:
2107:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_CLK_SOURCE_PRS12:
2108:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider >>= 1;
2110:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (snsClkDivider == 0u)
2111:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2112:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             snsClkDivider = 1u;
2113:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2114:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2115:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2116:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2117:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2118:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2119:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif
2120:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2121:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2122:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2123:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2124:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2125:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSD_WIDGETS) */
2126:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2127:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (0u != CapSense_1_TOTAL_CSX_WIDGETS)
2128:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2129:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN)
2130:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_dsRam.snsCsxClk;
2131:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2132:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2133:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset1 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F1;
2135:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSX_MFS_DIVIDER_OFFSET_F2;
2136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2137:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Change the divider based on the chId */
2138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 switch (chId)
2139:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_1:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 39


2141:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2142:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset1;
2143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2144:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     case CapSense_1_FREQ_CHANNEL_2:
2146:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         snsClkDivider += freqOffset2;
2148:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2149:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2150:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     default:
2151:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
2152:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
2153:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
2154:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2155:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2156:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Configure the new divider */
2157:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetSnsClockDivider(snsClkDivider);
2158:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2159:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2160:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* #if (0u != CapSense_1_TOTAL_CSX_WIDGETS) */
2161:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2162:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2163:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CYASSERT(0);
2164:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2165:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
2168:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2169:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2170:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2171:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2172:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2)))
2173:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2174:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsInitializeSourceSenseClk
2175:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2176:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2177:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2178:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2179:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2181:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2182:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  for all CSD widgets.
2183:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2184:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2185:Generated_Source\PSoC4/CapSense_1_Sensing.c **** void CapSense_1_SsInitializeSourceSenseClk(void)
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2187:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
2188:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2189:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
2191:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2Wdgt
2193:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2194:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         switch (CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2195:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2196:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2197:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSD_E:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 40


2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2199:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2201:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2202:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             case CapSense_1_SENSE_METHOD_CSX_E:
2203:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2204:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
2205:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || (CapSense_1_ENABLE == CapSense_1_IS
2206:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2207:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2208:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2209:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN)
2210:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_DsUpdateWidgetCrc(wdgtIndex);
2211:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_TST_WDGT_CRC_EN) */
2212:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2214:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
2215:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (((CapSense_1_ENABLE == CapSense_1_CSX_EN) || \
2216:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_ISX_EN)) && \
2217:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2))) */
2218:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2220:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2221:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2222:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetSenseClkSrc
2223:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2224:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2225:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2227:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2228:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2229:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2230:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2231:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2232:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2233:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2235:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widget.
2236:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2237:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2238:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT *
2239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
  27              		.loc 1 2239 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2240:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2241:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2242:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2243:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2244:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 uint32 conversionsNum;
2246:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2247:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2248:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 41


2249:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2250:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2251:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             snsClkDivider = CapSense_1_SsCSDGetColSnsClkDivider(wdgtIndex);
2252:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2253:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2254:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = CapSense_1_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrW
2255:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                              CapSen
2256:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2257:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2258:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2259:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     /*
2260:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2261:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     * average PRS frequency through the argument.
2262:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     */
2263:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->r
2264:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2265:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2266:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2267:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /*
2268:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2269:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 * average PRS frequency through the argument.
2270:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 */
2271:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resol
2272:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2273:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2274:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2275:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2276:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2277:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2278:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2279:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2280:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
  33              		.loc 1 2280 0
  34 0000 0523     		movs	r3, #5
  35 0002 0B73     		strb	r3, [r1, #12]
2281:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2283:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((CapSense_1_WD_TOUCHPAD_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtArray[
2284:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (CapSense_1_WD_MATRIX_BUTTON_E == (CapSense_1_WD_TYPE_ENUM)CapSense_1_dsFlash.wdgtA
2285:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2287:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     snsClkDivider = CapSense_1_SsCSDGetRowSnsClkDivider(wdgtIndex);
2288:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if(CapSense_1_ENABLE == CapSense_1_CSDV2)
2290:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2291:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_CLK_SOURCE_DIRECT == lfsrSize)
2292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2293:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /*
2294:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2295:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             * average PRS frequency through the argument.
2296:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             */
2297:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)pt
2298:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /*
2302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 42


2303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         * average PRS frequency through the argument.
2304:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         */
2305:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrSize = CapSense_1_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdg
2306:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         lfsrScale = 0u;
2307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
2308:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else
2309:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrSize = (uint8)CapSense_1_DEFAULT_MODULATION_MODE;
2310:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     lfsrScale = 0u;
2311:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2312:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LF
2313:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2315:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
  36              		.loc 1 2315 0
  37              		@ sp needed
  38 0004 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE20:
  41              		.size	CapSense_1_SsSetWidgetSenseClkSrc, .-CapSense_1_SsSetWidgetSenseClkSrc
  42 0006 C046     		.section	.text.CapSense_1_SsCSDDisableMode,"ax",%progbits
  43              		.align	2
  44              		.code	16
  45              		.thumb_func
  46              		.type	CapSense_1_SsCSDDisableMode, %function
  47              	CapSense_1_SsCSDDisableMode:
  48              	.LFB7:
 763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
  49              		.loc 1 763 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53 0000 10B5     		push	{r4, lr}
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 4, -8
  56              		.cfi_offset 14, -4
 767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_CMOD_HSIOM_MASK);
  57              		.loc 1 767 0
  58 0002 064A     		ldr	r2, .L3
  59 0004 1368     		ldr	r3, [r2]
  60              	.LVL1:
 768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_CMOD_HSIOM_PTR, newRegValue);
  61              		.loc 1 768 0
  62 0006 F021     		movs	r1, #240
  63 0008 8B43     		bics	r3, r1
  64              	.LVL2:
 769:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  65              		.loc 1 769 0
  66 000a 1360     		str	r3, [r2]
 775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             newRegValue &= (uint32)(~CapSense_1_SW_REFGEN_SEL_SW_IAIB_MASK);
  67              		.loc 1 775 0
  68 000c 044A     		ldr	r2, .L3+4
  69 000e 1368     		ldr	r3, [r2]
  70              	.LVL3:
 776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(CapSense_1_SW_REFGEN_SEL_PTR, newRegValue);
  71              		.loc 1 776 0
  72 0010 EF39     		subs	r1, r1, #239
  73 0012 8B43     		bics	r3, r1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 43


  74              	.LVL4:
 777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* ((CapSense_1_ENABLE == CapSense_1_CSDV2) && \
  75              		.loc 1 777 0
  76 0014 1360     		str	r3, [r2]
 783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
  77              		.loc 1 783 0
  78 0016 FFF7FEFF 		bl	CapSense_1_SsCSDElectrodeCheck
  79              	.LVL5:
 799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
  80              		.loc 1 799 0
  81              		@ sp needed
  82 001a 10BD     		pop	{r4, pc}
  83              	.L4:
  84              		.align	2
  85              	.L3:
  86 001c 00040240 		.word	1073873920
  87 0020 A8020B40 		.word	1074463400
  88              		.cfi_endproc
  89              	.LFE7:
  90              		.size	CapSense_1_SsCSDDisableMode, .-CapSense_1_SsCSDDisableMode
  91              		.section	.text.CapSense_1_IsBusy,"ax",%progbits
  92              		.align	2
  93              		.global	CapSense_1_IsBusy
  94              		.code	16
  95              		.thumb_func
  96              		.type	CapSense_1_IsBusy, %function
  97              	CapSense_1_IsBusy:
  98              	.LFB1:
 234:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (CapSense_1_dsRam.status & CapSense_1_SW_STS_BUSY);
  99              		.loc 1 234 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 104              		.loc 1 235 0
 105 0000 024B     		ldr	r3, .L6
 106 0002 DB68     		ldr	r3, [r3, #12]
 107 0004 8020     		movs	r0, #128
 108 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 109              		.loc 1 236 0
 110              		@ sp needed
 111 0008 7047     		bx	lr
 112              	.L7:
 113 000a C046     		.align	2
 114              	.L6:
 115 000c 00000000 		.word	CapSense_1_dsRam
 116              		.cfi_endproc
 117              	.LFE1:
 118              		.size	CapSense_1_IsBusy, .-CapSense_1_IsBusy
 119              		.section	.text.CapSense_1_SetupWidget,"ax",%progbits
 120              		.align	2
 121              		.global	CapSense_1_SetupWidget
 122              		.code	16
 123              		.thumb_func
 124              		.type	CapSense_1_SetupWidget, %function
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 44


 125              	CapSense_1_SetupWidget:
 126              	.LFB2:
 286:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus widgetStatus;
 127              		.loc 1 286 0
 128              		.cfi_startproc
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              	.LVL6:
 132 0000 10B5     		push	{r4, lr}
 133              		.cfi_def_cfa_offset 8
 134              		.cfi_offset 4, -8
 135              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 136              		.loc 1 289 0
 137 0002 0E4B     		ldr	r3, .L14
 138 0004 DB68     		ldr	r3, [r3, #12]
 139 0006 DB03     		lsls	r3, r3, #15
 140 0008 0DD4     		bmi	.L11
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 141              		.loc 1 299 0
 142 000a 0928     		cmp	r0, #9
 143 000c 0DD8     		bhi	.L12
 300:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 144              		.loc 1 300 0 discriminator 1
 145 000e 4309     		lsrs	r3, r0, #5
 146 0010 0433     		adds	r3, r3, #4
 147 0012 9B00     		lsls	r3, r3, #2
 148 0014 094A     		ldr	r2, .L14
 149 0016 9B58     		ldr	r3, [r3, r2]
 150 0018 1F22     		movs	r2, #31
 151 001a 0240     		ands	r2, r0
 152 001c D340     		lsrs	r3, r3, r2
 299:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         (0uL != CapSense_1_GET_WIDGET_EN_STATUS(widgetId)))
 153              		.loc 1 299 0 discriminator 1
 154 001e DB07     		lsls	r3, r3, #31
 155 0020 05D4     		bmi	.L13
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 156              		.loc 1 307 0
 157 0022 0124     		movs	r4, #1
 158 0024 04E0     		b	.L9
 159              	.L11:
 292:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 160              		.loc 1 292 0
 161 0026 1124     		movs	r4, #17
 162 0028 02E0     		b	.L9
 163              	.L12:
 307:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 164              		.loc 1 307 0
 165 002a 0124     		movs	r4, #1
 166 002c 00E0     		b	.L9
 167              	.L13:
 303:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 168              		.loc 1 303 0
 169 002e 0024     		movs	r4, #0
 170              	.L9:
 171              	.LVL7:
 314:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 45


 172              		.loc 1 314 0
 173 0030 002C     		cmp	r4, #0
 174 0032 01D1     		bne	.L10
 327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 175              		.loc 1 327 0
 176 0034 FFF7FEFF 		bl	CapSense_1_CSDSetupWidget
 177              	.LVL8:
 178              	.L10:
 343:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 179              		.loc 1 343 0
 180 0038 2000     		movs	r0, r4
 181              		@ sp needed
 182              	.LVL9:
 183 003a 10BD     		pop	{r4, pc}
 184              	.L15:
 185              		.align	2
 186              	.L14:
 187 003c 00000000 		.word	CapSense_1_dsRam
 188              		.cfi_endproc
 189              	.LFE2:
 190              		.size	CapSense_1_SetupWidget, .-CapSense_1_SetupWidget
 191              		.section	.text.CapSense_1_Scan,"ax",%progbits
 192              		.align	2
 193              		.global	CapSense_1_Scan
 194              		.code	16
 195              		.thumb_func
 196              		.type	CapSense_1_Scan, %function
 197              	CapSense_1_Scan:
 198              	.LFB3:
 369:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 199              		.loc 1 369 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 10B5     		push	{r4, lr}
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 4, -8
 206              		.cfi_offset 14, -4
 207              	.LVL10:
 372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 208              		.loc 1 372 0
 209 0002 084B     		ldr	r3, .L22
 210 0004 DB68     		ldr	r3, [r3, #12]
 211 0006 DB03     		lsls	r3, r3, #15
 212 0008 07D4     		bmi	.L19
 379:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 213              		.loc 1 379 0
 214 000a 074B     		ldr	r3, .L22+4
 215 000c 1B78     		ldrb	r3, [r3]
 216 000e 012B     		cmp	r3, #1
 217 0010 05D1     		bne	.L21
 388:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 218              		.loc 1 388 0
 219 0012 FFF7FEFF 		bl	CapSense_1_CSDScan
 220              	.LVL11:
 370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 221              		.loc 1 370 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 46


 222 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 223              		.loc 1 389 0
 224 0018 03E0     		b	.L17
 225              	.L19:
 375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 226              		.loc 1 375 0
 227 001a 1120     		movs	r0, #17
 228 001c 01E0     		b	.L17
 229              	.L21:
 397:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 230              		.loc 1 397 0
 231 001e 0120     		movs	r0, #1
 232 0020 4042     		rsbs	r0, r0, #0
 233              	.L17:
 234              	.LVL12:
 402:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 235              		.loc 1 402 0
 236              		@ sp needed
 237 0022 10BD     		pop	{r4, pc}
 238              	.L23:
 239              		.align	2
 240              	.L22:
 241 0024 00000000 		.word	CapSense_1_dsRam
 242 0028 00000000 		.word	.LANCHOR0
 243              		.cfi_endproc
 244              	.LFE3:
 245              		.size	CapSense_1_Scan, .-CapSense_1_Scan
 246              		.section	.text.CapSense_1_ScanAllWidgets,"ax",%progbits
 247              		.align	2
 248              		.global	CapSense_1_ScanAllWidgets
 249              		.code	16
 250              		.thumb_func
 251              		.type	CapSense_1_ScanAllWidgets, %function
 252              	CapSense_1_ScanAllWidgets:
 253              	.LFB4:
 431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 254              		.loc 1 431 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 10B5     		push	{r4, lr}
 259              		.cfi_def_cfa_offset 8
 260              		.cfi_offset 4, -8
 261              		.cfi_offset 14, -4
 262              	.LVL13:
 436:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 263              		.loc 1 436 0
 264 0002 0F4B     		ldr	r3, .L32
 265 0004 DB68     		ldr	r3, [r3, #12]
 266 0006 1B06     		lsls	r3, r3, #24
 267 0008 18D4     		bmi	.L31
 268 000a 0024     		movs	r4, #0
 269 000c 0120     		movs	r0, #1
 270 000e 4042     		rsbs	r0, r0, #0
 271 0010 11E0     		b	.L26
 272              	.LVL14:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 47


 273              	.L30:
 452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 274              		.loc 1 452 0
 275 0012 2000     		movs	r0, r4
 276              	.LVL15:
 277 0014 FFF7FEFF 		bl	CapSense_1_SetupWidget
 278              	.LVL16:
 454:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 279              		.loc 1 454 0
 280 0018 0028     		cmp	r0, #0
 281 001a 0BD1     		bne	.L27
 458:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 282              		.loc 1 458 0
 283 001c 082C     		cmp	r4, #8
 284 001e 03D8     		bhi	.L28
 461:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 285              		.loc 1 461 0
 286 0020 0122     		movs	r2, #1
 287 0022 084B     		ldr	r3, .L32+4
 288 0024 5A70     		strb	r2, [r3, #1]
 289 0026 02E0     		b	.L29
 290              	.L28:
 466:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 291              		.loc 1 466 0
 292 0028 0022     		movs	r2, #0
 293 002a 064B     		ldr	r3, .L32+4
 294 002c 5A70     		strb	r2, [r3, #1]
 295              	.L29:
 476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 296              		.loc 1 476 0
 297 002e FFF7FEFF 		bl	CapSense_1_Scan
 298              	.LVL17:
 478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 299              		.loc 1 478 0
 300 0032 04E0     		b	.L25
 301              	.L27:
 449:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 302              		.loc 1 449 0
 303 0034 0134     		adds	r4, r4, #1
 304              	.LVL18:
 305              	.L26:
 447:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              wdgtIndex < CapSense_1_TOTAL_WIDGETS;
 306              		.loc 1 447 0 discriminator 1
 307 0036 092C     		cmp	r4, #9
 308 0038 EBD9     		bls	.L30
 309 003a 00E0     		b	.L25
 310              	.LVL19:
 311              	.L31:
 439:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 312              		.loc 1 439 0
 313 003c 1120     		movs	r0, #17
 314              	.LVL20:
 315              	.L25:
 484:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 316              		.loc 1 484 0
 317              		@ sp needed
 318 003e 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 48


 319              	.L33:
 320              		.align	2
 321              	.L32:
 322 0040 00000000 		.word	CapSense_1_dsRam
 323 0044 00000000 		.word	.LANCHOR0
 324              		.cfi_endproc
 325              	.LFE4:
 326              		.size	CapSense_1_ScanAllWidgets, .-CapSense_1_ScanAllWidgets
 327              		.section	.text.CapSense_1_SetPinState,"ax",%progbits
 328              		.align	2
 329              		.global	CapSense_1_SetPinState
 330              		.code	16
 331              		.thumb_func
 332              		.type	CapSense_1_SetPinState, %function
 333              	CapSense_1_SetPinState:
 334              	.LFB6:
 650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 eltdNum;
 335              		.loc 1 650 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              	.LVL21:
 340 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 341              		.cfi_def_cfa_offset 24
 342              		.cfi_offset 3, -24
 343              		.cfi_offset 4, -20
 344              		.cfi_offset 5, -16
 345              		.cfi_offset 6, -12
 346              		.cfi_offset 7, -8
 347              		.cfi_offset 14, -4
 348 0002 1600     		movs	r6, r2
 675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         eltdNum = 1u;
 349              		.loc 1 675 0
 350 0004 C300     		lsls	r3, r0, #3
 351 0006 181A     		subs	r0, r3, r0
 352              	.LVL22:
 353 0008 8300     		lsls	r3, r0, #2
 354 000a 244A     		ldr	r2, .L41
 355              	.LVL23:
 356 000c 9C58     		ldr	r4, [r3, r2]
 357 000e CB00     		lsls	r3, r1, #3
 358 0010 591A     		subs	r1, r3, r1
 359              	.LVL24:
 360 0012 8B00     		lsls	r3, r1, #2
 361 0014 E418     		adds	r4, r4, r3
 362              	.LVL25:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 363              		.loc 1 680 0
 364 0016 0025     		movs	r5, #0
 365 0018 3CE0     		b	.L35
 366              	.LVL26:
 367              	.L40:
 683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_1_HSIOM_SEL_MASK <
 368              		.loc 1 683 0
 369 001a FFF7FEFF 		bl	CyEnterCriticalSection
 370              	.LVL27:
 684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_1_GPIO_PC_MASK << ioPtr-
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 49


 371              		.loc 1 684 0
 372 001e 2168     		ldr	r1, [r4]
 373 0020 0B68     		ldr	r3, [r1]
 374 0022 277E     		ldrb	r7, [r4, #24]
 375 0024 0F22     		movs	r2, #15
 376 0026 BA40     		lsls	r2, r2, r7
 377 0028 9343     		bics	r3, r2
 378 002a 0B60     		str	r3, [r1]
 685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 379              		.loc 1 685 0
 380 002c 6168     		ldr	r1, [r4, #4]
 381 002e 0B68     		ldr	r3, [r1]
 382 0030 A77E     		ldrb	r7, [r4, #26]
 383 0032 0722     		movs	r2, #7
 384 0034 BA40     		lsls	r2, r2, r7
 385 0036 9343     		bics	r3, r2
 386 0038 0B60     		str	r3, [r1]
 686:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 387              		.loc 1 686 0
 388 003a FFF7FEFF 		bl	CyExitCriticalSection
 389              	.LVL28:
 688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 390              		.loc 1 688 0
 391 003e 012E     		cmp	r6, #1
 392 0040 17D0     		beq	.L37
 393 0042 002E     		cmp	r6, #0
 394 0044 02D0     		beq	.L38
 395 0046 032E     		cmp	r6, #3
 396 0048 1FD0     		beq	.L39
 397 004a 21E0     		b	.L36
 398              	.L38:
 692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_1_SNS_GROUND_CONNECT 
 399              		.loc 1 692 0
 400 004c FFF7FEFF 		bl	CyEnterCriticalSection
 401              	.LVL29:
 693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 402              		.loc 1 693 0
 403 0050 6268     		ldr	r2, [r4, #4]
 404 0052 1168     		ldr	r1, [r2]
 405 0054 A77E     		ldrb	r7, [r4, #26]
 406 0056 0623     		movs	r3, #6
 407 0058 BB40     		lsls	r3, r3, r7
 408 005a 0B43     		orrs	r3, r1
 409 005c 1360     		str	r3, [r2]
 694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 410              		.loc 1 694 0
 411 005e A168     		ldr	r1, [r4, #8]
 412 0060 0B68     		ldr	r3, [r1]
 413 0062 677E     		ldrb	r7, [r4, #25]
 414 0064 0122     		movs	r2, #1
 415 0066 BA40     		lsls	r2, r2, r7
 416 0068 9343     		bics	r3, r2
 417 006a 0B60     		str	r3, [r1]
 695:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 418              		.loc 1 695 0
 419 006c FFF7FEFF 		bl	CyExitCriticalSection
 420              	.LVL30:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 50


 696:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 421              		.loc 1 696 0
 422 0070 0EE0     		b	.L36
 423              	.L37:
 699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 424              		.loc 1 699 0
 425 0072 FFF7FEFF 		bl	CyEnterCriticalSection
 426              	.LVL31:
 700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CyExitCriticalSection(interruptState);
 427              		.loc 1 700 0
 428 0076 A168     		ldr	r1, [r4, #8]
 429 0078 0B68     		ldr	r3, [r1]
 430 007a 677E     		ldrb	r7, [r4, #25]
 431 007c 0122     		movs	r2, #1
 432 007e BA40     		lsls	r2, r2, r7
 433 0080 9343     		bics	r3, r2
 434 0082 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
 435              		.loc 1 701 0
 436 0084 FFF7FEFF 		bl	CyExitCriticalSection
 437              	.LVL32:
 702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 438              		.loc 1 702 0
 439 0088 02E0     		b	.L36
 440              	.L39:
 707:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 441              		.loc 1 707 0
 442 008a 2000     		movs	r0, r4
 443 008c FFF7FEFF 		bl	CapSense_1_CSDConnectSns
 444              	.LVL33:
 445              	.L36:
 742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 446              		.loc 1 742 0 discriminator 2
 447 0090 1C34     		adds	r4, r4, #28
 448              	.LVL34:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 449              		.loc 1 680 0 discriminator 2
 450 0092 0135     		adds	r5, r5, #1
 451              	.LVL35:
 452              	.L35:
 680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 453              		.loc 1 680 0 is_stmt 0 discriminator 1
 454 0094 002D     		cmp	r5, #0
 455 0096 C0D0     		beq	.L40
 744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 456              		.loc 1 744 0 is_stmt 1
 457              		@ sp needed
 458              	.LVL36:
 459              	.LVL37:
 460              	.LVL38:
 461 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 462              	.L42:
 463 009a C046     		.align	2
 464              	.L41:
 465 009c 00000000 		.word	CapSense_1_dsFlash
 466              		.cfi_endproc
 467              	.LFE6:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 51


 468              		.size	CapSense_1_SetPinState, .-CapSense_1_SetPinState
 469              		.section	.text.CapSense_1_SsSwitchSensingMode,"ax",%progbits
 470              		.align	2
 471              		.global	CapSense_1_SsSwitchSensingMode
 472              		.code	16
 473              		.thumb_func
 474              		.type	CapSense_1_SsSwitchSensingMode, %function
 475              	CapSense_1_SsSwitchSensingMode:
 476              	.LFB8:
 902:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if (CapSense_1_currentSenseMethod != mode)
 477              		.loc 1 902 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 0
 480              		@ frame_needed = 0, uses_anonymous_args = 0
 481              	.LVL39:
 482 0000 10B5     		push	{r4, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 4, -8
 485              		.cfi_offset 14, -4
 486 0002 0400     		movs	r4, r0
 903:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 487              		.loc 1 903 0
 488 0004 0C4B     		ldr	r3, .L47
 489 0006 1B78     		ldrb	r3, [r3]
 490 0008 8342     		cmp	r3, r0
 491 000a 14D0     		beq	.L43
 906:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 492              		.loc 1 906 0
 493 000c 012B     		cmp	r3, #1
 494 000e 01D1     		bne	.L45
 909:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 495              		.loc 1 909 0
 496 0010 FFF7FEFF 		bl	CapSense_1_SsCSDDisableMode
 497              	.LVL40:
 498              	.L45:
 939:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 499              		.loc 1 939 0
 500 0014 012C     		cmp	r4, #1
 501 0016 05D1     		bne	.L46
 943:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_currentSenseMethod = CapSense_1_SENSE_METHOD_CSD_E;
 502              		.loc 1 943 0
 503 0018 FFF7FEFF 		bl	CapSense_1_SsCSDInitialize
 504              	.LVL41:
 944:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
 505              		.loc 1 944 0
 506 001c 0122     		movs	r2, #1
 507 001e 064B     		ldr	r3, .L47
 508 0020 1A70     		strb	r2, [r3]
 509 0022 08E0     		b	.L43
 510              	.L46:
 947:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 511              		.loc 1 947 0
 512 0024 022C     		cmp	r4, #2
 513 0026 06D0     		beq	.L43
 955:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 514              		.loc 1 955 0
 515 0028 042C     		cmp	r4, #4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 52


 516 002a 04D0     		beq	.L43
 963:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 517              		.loc 1 963 0
 518 002c 032C     		cmp	r4, #3
 519 002e 02D0     		beq	.L43
 972:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 520              		.loc 1 972 0
 521 0030 0022     		movs	r2, #0
 522 0032 014B     		ldr	r3, .L47
 523 0034 1A70     		strb	r2, [r3]
 524              	.L43:
 975:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 525              		.loc 1 975 0
 526              		@ sp needed
 527 0036 10BD     		pop	{r4, pc}
 528              	.L48:
 529              		.align	2
 530              	.L47:
 531 0038 00000000 		.word	.LANCHOR0
 532              		.cfi_endproc
 533              	.LFE8:
 534              		.size	CapSense_1_SsSwitchSensingMode, .-CapSense_1_SsSwitchSensingMode
 535              		.section	.text.CapSense_1_SsSetIOsInDefaultState,"ax",%progbits
 536              		.align	2
 537              		.global	CapSense_1_SsSetIOsInDefaultState
 538              		.code	16
 539              		.thumb_func
 540              		.type	CapSense_1_SsSetIOsInDefaultState, %function
 541              	CapSense_1_SsSetIOsInDefaultState:
 542              	.LFB9:
1001:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_FLASH_IO_STRUCT const *ioPtr = &CapSense_1_ioList[0u];
 543              		.loc 1 1001 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 0
 546              		@ frame_needed = 0, uses_anonymous_args = 0
 547 0000 30B5     		push	{r4, r5, lr}
 548              		.cfi_def_cfa_offset 12
 549              		.cfi_offset 4, -12
 550              		.cfi_offset 5, -8
 551              		.cfi_offset 14, -4
 552              	.LVL42:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 553              		.loc 1 1007 0
 554 0002 0020     		movs	r0, #0
1002:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 loopIndex;
 555              		.loc 1 1002 0
 556 0004 0D4B     		ldr	r3, .L52
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 557              		.loc 1 1007 0
 558 0006 16E0     		b	.L50
 559              	.LVL43:
 560              	.L51:
1014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 561              		.loc 1 1014 0 discriminator 3
 562 0008 1968     		ldr	r1, [r3]
 563 000a 0A68     		ldr	r2, [r1]
 564              	.LVL44:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 53


1015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 565              		.loc 1 1015 0 discriminator 3
 566 000c 1C69     		ldr	r4, [r3, #16]
 567 000e A243     		bics	r2, r4
 568              	.LVL45:
1016:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 569              		.loc 1 1016 0 discriminator 3
 570 0010 0A60     		str	r2, [r1]
1018:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(CapSense_1_GPIO_PC_MASK << ioPtr->shift);
 571              		.loc 1 1018 0 discriminator 3
 572 0012 5C68     		ldr	r4, [r3, #4]
 573 0014 2268     		ldr	r2, [r4]
 574              	.LVL46:
1019:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue |=  (CapSense_1_GPIO_STRGDRV << ioPtr->shift);
 575              		.loc 1 1019 0 discriminator 3
 576 0016 9D7E     		ldrb	r5, [r3, #26]
 577 0018 0721     		movs	r1, #7
 578 001a A940     		lsls	r1, r1, r5
 579 001c 8A43     		bics	r2, r1
 580              	.LVL47:
 581 001e 1100     		movs	r1, r2
 582              	.LVL48:
1020:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 583              		.loc 1 1020 0 discriminator 3
 584 0020 0622     		movs	r2, #6
 585 0022 AA40     		lsls	r2, r2, r5
 586 0024 0A43     		orrs	r2, r1
 587              	.LVL49:
1021:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 588              		.loc 1 1021 0 discriminator 3
 589 0026 2260     		str	r2, [r4]
1023:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         regValue &= ~(ioPtr->mask);
 590              		.loc 1 1023 0 discriminator 3
 591 0028 9968     		ldr	r1, [r3, #8]
 592 002a 0A68     		ldr	r2, [r1]
 593              	.LVL50:
1024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 594              		.loc 1 1024 0 discriminator 3
 595 002c 5C69     		ldr	r4, [r3, #20]
 596 002e A243     		bics	r2, r4
 597              	.LVL51:
1025:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 598              		.loc 1 1025 0 discriminator 3
 599 0030 0A60     		str	r2, [r1]
1028:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 600              		.loc 1 1028 0 discriminator 3
 601 0032 1C33     		adds	r3, r3, #28
 602              	.LVL52:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 603              		.loc 1 1007 0 discriminator 3
 604 0034 0130     		adds	r0, r0, #1
 605              	.LVL53:
 606              	.L50:
1007:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 607              		.loc 1 1007 0 is_stmt 0 discriminator 1
 608 0036 0928     		cmp	r0, #9
 609 0038 E6D9     		bls	.L51
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 54


1038:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 610              		.loc 1 1038 0 is_stmt 1
 611              		@ sp needed
 612 003a 30BD     		pop	{r4, r5, pc}
 613              	.L53:
 614              		.align	2
 615              	.L52:
 616 003c 00000000 		.word	CapSense_1_ioList
 617              		.cfi_endproc
 618              	.LFE9:
 619              		.size	CapSense_1_SsSetIOsInDefaultState, .-CapSense_1_SsSetIOsInDefaultState
 620              		.section	.text.CapSense_1_SsPostAllWidgetsScan,"ax",%progbits
 621              		.align	2
 622              		.global	CapSense_1_SsPostAllWidgetsScan
 623              		.code	16
 624              		.thumb_func
 625              		.type	CapSense_1_SsPostAllWidgetsScan, %function
 626              	CapSense_1_SsPostAllWidgetsScan:
 627              	.LFB10:
1123:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*
 628              		.loc 1 1123 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 0
 631              		@ frame_needed = 0, uses_anonymous_args = 0
 632 0000 10B5     		push	{r4, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 4, -8
 635              		.cfi_offset 14, -4
 636              	.L59:
1134:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 637              		.loc 1 1134 0
 638 0002 1B4A     		ldr	r2, .L60
 639 0004 9378     		ldrb	r3, [r2, #2]
 640 0006 0133     		adds	r3, r3, #1
 641 0008 DBB2     		uxtb	r3, r3
 642 000a 9370     		strb	r3, [r2, #2]
1136:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 643              		.loc 1 1136 0
 644 000c 9078     		ldrb	r0, [r2, #2]
 645 000e C0B2     		uxtb	r0, r0
 646 0010 FFF7FEFF 		bl	CapSense_1_SetupWidget
 647              	.LVL54:
 648 0014 041E     		subs	r4, r0, #0
 649              	.LVL55:
1138:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 650              		.loc 1 1138 0
 651 0016 09D1     		bne	.L55
1140:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 652              		.loc 1 1140 0
 653 0018 154B     		ldr	r3, .L60
 654 001a 9B78     		ldrb	r3, [r3, #2]
 655 001c 092B     		cmp	r3, #9
 656 001e 02D1     		bne	.L56
1143:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
 657              		.loc 1 1143 0
 658 0020 0022     		movs	r2, #0
 659 0022 134B     		ldr	r3, .L60
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 55


 660 0024 5A70     		strb	r2, [r3, #1]
 661              	.L56:
1145:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 662              		.loc 1 1145 0
 663 0026 FFF7FEFF 		bl	CapSense_1_Scan
 664              	.LVL56:
 665 002a 1EE0     		b	.L57
 666              	.LVL57:
 667              	.L55:
1147:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 668              		.loc 1 1147 0
 669 002c 104B     		ldr	r3, .L60
 670 002e 9B78     		ldrb	r3, [r3, #2]
 671 0030 092B     		cmp	r3, #9
 672 0032 11D1     		bne	.L58
1161:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 673              		.loc 1 1161 0
 674 0034 0F4B     		ldr	r3, .L60+4
 675 0036 1A89     		ldrh	r2, [r3, #8]
 676 0038 0132     		adds	r2, r2, #1
 677 003a 1A81     		strh	r2, [r3, #8]
1163:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 678              		.loc 1 1163 0
 679 003c DA68     		ldr	r2, [r3, #12]
 680 003e 8021     		movs	r1, #128
 681 0040 8A43     		bics	r2, r1
 682 0042 DA60     		str	r2, [r3, #12]
1166:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
 683              		.loc 1 1166 0
 684 0044 DA68     		ldr	r2, [r3, #12]
 685 0046 1202     		lsls	r2, r2, #8
 686 0048 120A     		lsrs	r2, r2, #8
 687 004a DA60     		str	r2, [r3, #12]
1167:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 688              		.loc 1 1167 0
 689 004c DA68     		ldr	r2, [r3, #12]
 690 004e 0406     		lsls	r4, r0, #24
 691 0050 1443     		orrs	r4, r2
 692 0052 DC60     		str	r4, [r3, #12]
 693              	.LVL58:
1170:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 694              		.loc 1 1170 0
 695 0054 0024     		movs	r4, #0
 696 0056 08E0     		b	.L57
 697              	.LVL59:
 698              	.L58:
1175:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsRam.status |= ((postScanStatus & CapSense_1_STATUS_ERR_SIZE) << CapSen
 699              		.loc 1 1175 0
 700 0058 064A     		ldr	r2, .L60+4
 701 005a D368     		ldr	r3, [r2, #12]
 702 005c 1B02     		lsls	r3, r3, #8
 703 005e 1B0A     		lsrs	r3, r3, #8
 704 0060 D360     		str	r3, [r2, #12]
1176:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 705              		.loc 1 1176 0
 706 0062 D168     		ldr	r1, [r2, #12]
 707 0064 0306     		lsls	r3, r0, #24
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 56


 708 0066 0B43     		orrs	r3, r1
 709 0068 D360     		str	r3, [r2, #12]
 710              	.LVL60:
 711              	.L57:
1178:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (1u != CapSense_1_TOTAL_WIDGETS) */
 712              		.loc 1 1178 0
 713 006a 002C     		cmp	r4, #0
 714 006c C9D1     		bne	.L59
1180:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 715              		.loc 1 1180 0
 716              		@ sp needed
 717              	.LVL61:
 718 006e 10BD     		pop	{r4, pc}
 719              	.L61:
 720              		.align	2
 721              	.L60:
 722 0070 00000000 		.word	.LANCHOR0
 723 0074 00000000 		.word	CapSense_1_dsRam
 724              		.cfi_endproc
 725              	.LFE10:
 726              		.size	CapSense_1_SsPostAllWidgetsScan, .-CapSense_1_SsPostAllWidgetsScan
 727              		.section	.text.CapSense_1_SsIsrInitialize,"ax",%progbits
 728              		.align	2
 729              		.global	CapSense_1_SsIsrInitialize
 730              		.code	16
 731              		.thumb_func
 732              		.type	CapSense_1_SsIsrInitialize, %function
 733              	CapSense_1_SsIsrInitialize:
 734              	.LFB11:
1200:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CapSense_1_ISR_StartEx(address);
 735              		.loc 1 1200 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 0
 738              		@ frame_needed = 0, uses_anonymous_args = 0
 739              	.LVL62:
 740 0000 10B5     		push	{r4, lr}
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 4, -8
 743              		.cfi_offset 14, -4
1201:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 744              		.loc 1 1201 0
 745 0002 FFF7FEFF 		bl	CapSense_1_ISR_StartEx
 746              	.LVL63:
1202:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 747              		.loc 1 1202 0
 748              		@ sp needed
 749 0006 10BD     		pop	{r4, pc}
 750              		.cfi_endproc
 751              	.LFE11:
 752              		.size	CapSense_1_SsIsrInitialize, .-CapSense_1_SsIsrInitialize
 753              		.section	.text.CapSense_1_SsSetModClkClockDivider,"ax",%progbits
 754              		.align	2
 755              		.global	CapSense_1_SsSetModClkClockDivider
 756              		.code	16
 757              		.thumb_func
 758              		.type	CapSense_1_SsSetModClkClockDivider, %function
 759              	CapSense_1_SsSetModClkClockDivider:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 57


 760              	.LFB12:
1223:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK)
 761              		.loc 1 1223 0
 762              		.cfi_startproc
 763              		@ args = 0, pretend = 0, frame = 0
 764              		@ frame_needed = 0, uses_anonymous_args = 0
 765              		@ link register save eliminated.
 766              	.LVL64:
1226:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  ((uint32)CapSense_1_ModClk__DIV_ID <<
 767              		.loc 1 1226 0
 768 0000 074A     		ldr	r2, .L65
 769 0002 084B     		ldr	r3, .L65+4
 770 0004 1A60     		str	r2, [r3]
1236:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 771              		.loc 1 1236 0
 772 0006 0138     		subs	r0, r0, #1
 773              	.LVL65:
 774 0008 0002     		lsls	r0, r0, #8
 775              	.LVL66:
 776 000a 074B     		ldr	r3, .L65+8
 777 000c 1860     		str	r0, [r3]
 778              	.L64:
1239:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 779              		.loc 1 1239 0 discriminator 1
 780 000e 054B     		ldr	r3, .L65+4
 781 0010 1B68     		ldr	r3, [r3]
 782 0012 002B     		cmp	r3, #0
 783 0014 FBDB     		blt	.L64
1245:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (uint32)(((uint32)CapSense_1_ModClk__DIV_ID << CapSense_1_MODCLK_CMD_DIV_SHIFT) |
 784              		.loc 1 1245 0
 785 0016 054A     		ldr	r2, .L65+12
 786 0018 024B     		ldr	r3, .L65+4
 787 001a 1A60     		str	r2, [r3]
1270:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 788              		.loc 1 1270 0
 789              		@ sp needed
 790 001c 7047     		bx	lr
 791              	.L66:
 792 001e C046     		.align	2
 793              	.L65:
 794 0020 40000040 		.word	1073741888
 795 0024 00000140 		.word	1073807360
 796 0028 00030140 		.word	1073808128
 797 002c 40FF0080 		.word	-2147418304
 798              		.cfi_endproc
 799              	.LFE12:
 800              		.size	CapSense_1_SsSetModClkClockDivider, .-CapSense_1_SsSetModClkClockDivider
 801              		.section	.text.CapSense_1_SsSetSnsClockDivider,"ax",%progbits
 802              		.align	2
 803              		.global	CapSense_1_SsSetSnsClockDivider
 804              		.code	16
 805              		.thumb_func
 806              		.type	CapSense_1_SsSetSnsClockDivider, %function
 807              	CapSense_1_SsSetSnsClockDivider:
 808              	.LFB13:
1291:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
 809              		.loc 1 1291 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 58


 810              		.cfi_startproc
 811              		@ args = 0, pretend = 0, frame = 0
 812              		@ frame_needed = 0, uses_anonymous_args = 0
 813              		@ link register save eliminated.
 814              	.LVL67:
1300:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue &= (uint32)(~CapSense_1_SENSE_PERIOD_SENSE_DIV_MASK);
 815              		.loc 1 1300 0
 816 0000 034A     		ldr	r2, .L68
 817 0002 1368     		ldr	r3, [r2]
 818              	.LVL68:
1301:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     newRegValue |= snsClk - 1u;
 819              		.loc 1 1301 0
 820 0004 1B0B     		lsrs	r3, r3, #12
 821              	.LVL69:
 822 0006 1B03     		lsls	r3, r3, #12
 823              	.LVL70:
1302:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     CY_SET_REG32(CapSense_1_SENSE_PERIOD_PTR, newRegValue);
 824              		.loc 1 1302 0
 825 0008 0138     		subs	r0, r0, #1
 826              	.LVL71:
 827 000a 1843     		orrs	r0, r3
 828              	.LVL72:
1303:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #else
 829              		.loc 1 1303 0
 830 000c 1060     		str	r0, [r2]
1352:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 831              		.loc 1 1352 0
 832              		@ sp needed
 833 000e 7047     		bx	lr
 834              	.L69:
 835              		.align	2
 836              	.L68:
 837 0010 00020B40 		.word	1074463232
 838              		.cfi_endproc
 839              	.LFE13:
 840              		.size	CapSense_1_SsSetSnsClockDivider, .-CapSense_1_SsSetSnsClockDivider
 841              		.section	.text.CapSense_1_SsSetClockDividers,"ax",%progbits
 842              		.align	2
 843              		.global	CapSense_1_SsSetClockDividers
 844              		.code	16
 845              		.thumb_func
 846              		.type	CapSense_1_SsSetClockDividers, %function
 847              	CapSense_1_SsSetClockDividers:
 848              	.LFB14:
1375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Configure Mod clock */
 849              		.loc 1 1375 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853              	.LVL73:
 854 0000 10B5     		push	{r4, lr}
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 4, -8
 857              		.cfi_offset 14, -4
 858 0002 0400     		movs	r4, r0
1377:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 859              		.loc 1 1377 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 59


 860 0004 0800     		movs	r0, r1
 861              	.LVL74:
 862 0006 FFF7FEFF 		bl	CapSense_1_SsSetModClkClockDivider
 863              	.LVL75:
1380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
 864              		.loc 1 1380 0
 865 000a 2000     		movs	r0, r4
 866 000c FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 867              	.LVL76:
1381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 868              		.loc 1 1381 0
 869              		@ sp needed
 870              	.LVL77:
 871 0010 10BD     		pop	{r4, pc}
 872              		.cfi_endproc
 873              	.LFE14:
 874              		.size	CapSense_1_SsSetClockDividers, .-CapSense_1_SsSetClockDividers
 875 0012 C046     		.section	.text.CapSense_1_CalibrateWidget,"ax",%progbits
 876              		.align	2
 877              		.global	CapSense_1_CalibrateWidget
 878              		.code	16
 879              		.thumb_func
 880              		.type	CapSense_1_CalibrateWidget, %function
 881              	CapSense_1_CalibrateWidget:
 882              	.LFB15:
1427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 883              		.loc 1 1427 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 0
 886              		@ frame_needed = 0, uses_anonymous_args = 0
 887              	.LVL78:
 888 0000 10B5     		push	{r4, lr}
 889              		.cfi_def_cfa_offset 8
 890              		.cfi_offset 4, -8
 891              		.cfi_offset 14, -4
 892 0002 0300     		movs	r3, r0
 893              	.LVL79:
1432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 894              		.loc 1 1432 0
 895 0004 0928     		cmp	r0, #9
 896 0006 01D8     		bhi	.L74
1428:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 897              		.loc 1 1428 0
 898 0008 0020     		movs	r0, #0
 899              	.LVL80:
 900 000a 00E0     		b	.L72
 901              	.LVL81:
 902              	.L74:
1434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
 903              		.loc 1 1434 0
 904 000c 0120     		movs	r0, #1
 905              	.LVL82:
 906              	.L72:
1452:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
 907              		.loc 1 1452 0
 908 000e 0028     		cmp	r0, #0
 909 0010 03D1     		bne	.L73
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 60


1481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 910              		.loc 1 1481 0
 911 0012 5521     		movs	r1, #85
 912 0014 1800     		movs	r0, r3
 913              	.LVL83:
 914 0016 FFF7FEFF 		bl	CapSense_1_CSDCalibrateWidget
 915              	.LVL84:
 916              	.L73:
1503:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 917              		.loc 1 1503 0
 918              		@ sp needed
 919 001a 10BD     		pop	{r4, pc}
 920              		.cfi_endproc
 921              	.LFE15:
 922              		.size	CapSense_1_CalibrateWidget, .-CapSense_1_CalibrateWidget
 923              		.section	.text.CapSense_1_CalibrateAllWidgets,"ax",%progbits
 924              		.align	2
 925              		.global	CapSense_1_CalibrateAllWidgets
 926              		.code	16
 927              		.thumb_func
 928              		.type	CapSense_1_CalibrateAllWidgets, %function
 929              	CapSense_1_CalibrateAllWidgets:
 930              	.LFB16:
1540:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 931              		.loc 1 1540 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 0
 934              		@ frame_needed = 0, uses_anonymous_args = 0
 935 0000 70B5     		push	{r4, r5, r6, lr}
 936              		.cfi_def_cfa_offset 16
 937              		.cfi_offset 4, -16
 938              		.cfi_offset 5, -12
 939              		.cfi_offset 6, -8
 940              		.cfi_offset 14, -4
 941              	.LVL85:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 942              		.loc 1 1544 0
 943 0002 0024     		movs	r4, #0
1541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
 944              		.loc 1 1541 0
 945 0004 0025     		movs	r5, #0
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 946              		.loc 1 1544 0
 947 0006 04E0     		b	.L76
 948              	.LVL86:
 949              	.L77:
1546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 950              		.loc 1 1546 0 discriminator 3
 951 0008 2000     		movs	r0, r4
 952 000a FFF7FEFF 		bl	CapSense_1_CalibrateWidget
 953              	.LVL87:
 954 000e 0543     		orrs	r5, r0
 955              	.LVL88:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 956              		.loc 1 1544 0 discriminator 3
 957 0010 0134     		adds	r4, r4, #1
 958              	.LVL89:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 61


 959              	.L76:
1544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 960              		.loc 1 1544 0 is_stmt 0 discriminator 1
 961 0012 092C     		cmp	r4, #9
 962 0014 F8D9     		bls	.L77
1550:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ANYMODE_AUTOCAL) */
 963              		.loc 1 1550 0 is_stmt 1
 964 0016 2800     		movs	r0, r5
 965              		@ sp needed
 966              	.LVL90:
 967              	.LVL91:
 968 0018 70BD     		pop	{r4, r5, r6, pc}
 969              		.cfi_endproc
 970              	.LFE16:
 971              		.size	CapSense_1_CalibrateAllWidgets, .-CapSense_1_CalibrateAllWidgets
 972 001a C046     		.section	.text.CapSense_1_SsChangeImoFreq,"ax",%progbits
 973              		.align	2
 974              		.global	CapSense_1_SsChangeImoFreq
 975              		.code	16
 976              		.thumb_func
 977              		.type	CapSense_1_SsChangeImoFreq, %function
 978              	CapSense_1_SsChangeImoFreq:
 979              	.LFB17:
1974:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_1_immunity[value]);
 980              		.loc 1 1974 0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 0
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984              		@ link register save eliminated.
 985              	.LVL92:
1975:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 986              		.loc 1 1975 0
 987 0000 024B     		ldr	r3, .L79
 988 0002 1818     		adds	r0, r3, r0
 989              	.LVL93:
 990 0004 0279     		ldrb	r2, [r0, #4]
 991 0006 024B     		ldr	r3, .L79+4
 992 0008 1A60     		str	r2, [r3]
1976:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 993              		.loc 1 1976 0
 994              		@ sp needed
 995 000a 7047     		bx	lr
 996              	.L80:
 997              		.align	2
 998              	.L79:
 999 000c 00000000 		.word	.LANCHOR0
 1000 0010 0C0F0340 		.word	1073942284
 1001              		.cfi_endproc
 1002              	.LFE17:
 1003              		.size	CapSense_1_SsChangeImoFreq, .-CapSense_1_SsChangeImoFreq
 1004              		.section	.text.CapSense_1_SsChangeClkFreq,"ax",%progbits
 1005              		.align	2
 1006              		.global	CapSense_1_SsChangeClkFreq
 1007              		.code	16
 1008              		.thumb_func
 1009              		.type	CapSense_1_SsChangeClkFreq, %function
 1010              	CapSense_1_SsChangeClkFreq:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 62


 1011              	.LFB18:
1995:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsClkDivider;
 1012              		.loc 1 1995 0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 0
 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 1016              	.LVL94:
 1017 0000 70B5     		push	{r4, r5, r6, lr}
 1018              		.cfi_def_cfa_offset 16
 1019              		.cfi_offset 4, -16
 1020              		.cfi_offset 5, -12
 1021              		.cfi_offset 6, -8
 1022              		.cfi_offset 14, -4
 1023              	.LVL95:
2014:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)ptrFlas
 1024              		.loc 1 2014 0
 1025 0002 184B     		ldr	r3, .L92
 1026 0004 9A78     		ldrb	r2, [r3, #2]
 1027 0006 D2B2     		uxtb	r2, r2
 1028              	.LVL96:
2015:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
 1029              		.loc 1 2015 0
 1030 0008 D300     		lsls	r3, r2, #3
 1031 000a 9A1A     		subs	r2, r3, r2
 1032              	.LVL97:
 1033 000c 9300     		lsls	r3, r2, #2
 1034 000e 164A     		ldr	r2, .L92+4
 1035 0010 D318     		adds	r3, r2, r3
 1036 0012 5A68     		ldr	r2, [r3, #4]
 1037              	.LVL98:
2024:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #else /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
 1038              		.loc 1 2024 0
 1039 0014 154B     		ldr	r3, .L92+8
 1040 0016 DD8C     		ldrh	r5, [r3, #38]
 1041              	.LVL99:
2059:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN
 1042              		.loc 1 2059 0
 1043 0018 147B     		ldrb	r4, [r2, #12]
 1044              	.LVL100:
2062:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 1045              		.loc 1 2062 0
 1046 001a 631F     		subs	r3, r4, #5
 1047 001c DBB2     		uxtb	r3, r3
 1048 001e 012B     		cmp	r3, #1
 1049 0020 02D9     		bls	.L91
2042:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1050              		.loc 1 2042 0
 1051 0022 0223     		movs	r3, #2
2041:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 freqOffset2 = CapSense_1_CSD_MFS_DIVIDER_OFFSET_F2;
 1052              		.loc 1 2041 0
 1053 0024 0121     		movs	r1, #1
 1054 0026 01E0     		b	.L83
 1055              	.L91:
2068:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
 1056              		.loc 1 2068 0
 1057 0028 0423     		movs	r3, #4
2067:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         freqOffset2 <<= 1u;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 63


 1058              		.loc 1 2067 0
 1059 002a 0221     		movs	r1, #2
 1060              	.L83:
 1061              	.LVL101:
2077:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1062              		.loc 1 2077 0
 1063 002c 0128     		cmp	r0, #1
 1064 002e 02D0     		beq	.L85
 1065 0030 0228     		cmp	r0, #2
 1066 0032 02D0     		beq	.L86
 1067 0034 02E0     		b	.L84
 1068              	.L85:
2081:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
 1069              		.loc 1 2081 0
 1070 0036 6D18     		adds	r5, r5, r1
 1071              	.LVL102:
2082:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     }
 1072              		.loc 1 2082 0
 1073 0038 00E0     		b	.L84
 1074              	.L86:
2086:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         break;
 1075              		.loc 1 2086 0
 1076 003a ED18     		adds	r5, r5, r3
 1077              	.LVL103:
 1078              	.L84:
2097:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     CY_SET_REG32(CapSense_1_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_1_SEQ_NORM
 1079              		.loc 1 2097 0
 1080 003c 1188     		ldrh	r1, [r2]
 1081              	.LVL104:
 1082 003e 2200     		movs	r2, r4
 1083              	.LVL105:
 1084 0040 2800     		movs	r0, r5
 1085              	.LVL106:
 1086 0042 FFF7FEFF 		bl	CapSense_1_SsCSDGetNumberOfConversions
 1087              	.LVL107:
2098:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 #endif /* (CapSense_1_ENABLE == CapSense_1_CSDV2) */
 1088              		.loc 1 2098 0
 1089 0046 0004     		lsls	r0, r0, #16
 1090              	.LVL108:
 1091 0048 000C     		lsrs	r0, r0, #16
 1092 004a 094B     		ldr	r3, .L92+12
 1093 004c 1860     		str	r0, [r3]
2104:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     {
 1094              		.loc 1 2104 0
 1095 004e 053C     		subs	r4, r4, #5
 1096              	.LVL109:
 1097 0050 E4B2     		uxtb	r4, r4
 1098              	.LVL110:
 1099 0052 012C     		cmp	r4, #1
 1100 0054 02D8     		bhi	.L87
2109:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (snsClkDivider == 0u)
 1101              		.loc 1 2109 0
 1102 0056 6D08     		lsrs	r5, r5, #1
 1103              	.LVL111:
2110:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
 1104              		.loc 1 2110 0
 1105 0058 00D1     		bne	.L87
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 64


2112:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
 1106              		.loc 1 2112 0
 1107 005a 0135     		adds	r5, r5, #1
 1108              	.LVL112:
 1109              	.L87:
2122:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1110              		.loc 1 2122 0
 1111 005c 2800     		movs	r0, r5
 1112 005e FFF7FEFF 		bl	CapSense_1_SsSetSnsClockDivider
 1113              	.LVL113:
2166:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif  /* (CapSense_1_ENABLE == CapSense_1_MULTI_FREQ_SCAN_EN) */
 1114              		.loc 1 2166 0
 1115              		@ sp needed
 1116              	.LVL114:
 1117 0062 70BD     		pop	{r4, r5, r6, pc}
 1118              	.L93:
 1119              		.align	2
 1120              	.L92:
 1121 0064 00000000 		.word	.LANCHOR0
 1122 0068 00000000 		.word	CapSense_1_dsFlash
 1123 006c 00000000 		.word	CapSense_1_dsRam
 1124 0070 14030B40 		.word	1074463508
 1125              		.cfi_endproc
 1126              	.LFE18:
 1127              		.size	CapSense_1_SsChangeClkFreq, .-CapSense_1_SsChangeClkFreq
 1128              		.section	.text.CapSense_1_SsInitializeSourceSenseClk,"ax",%progbits
 1129              		.align	2
 1130              		.global	CapSense_1_SsInitializeSourceSenseClk
 1131              		.code	16
 1132              		.thumb_func
 1133              		.type	CapSense_1_SsInitializeSourceSenseClk, %function
 1134              	CapSense_1_SsInitializeSourceSenseClk:
 1135              	.LFB19:
2186:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 wdgtIndex;
 1136              		.loc 1 2186 0
 1137              		.cfi_startproc
 1138              		@ args = 0, pretend = 0, frame = 0
 1139              		@ frame_needed = 0, uses_anonymous_args = 0
 1140 0000 10B5     		push	{r4, lr}
 1141              		.cfi_def_cfa_offset 8
 1142              		.cfi_offset 4, -8
 1143              		.cfi_offset 14, -4
 1144              	.LVL115:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1145              		.loc 1 2190 0
 1146 0002 0024     		movs	r4, #0
 1147 0004 09E0     		b	.L95
 1148              	.LVL116:
 1149              	.L96:
2192:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1150              		.loc 1 2192 0
 1151 0006 E200     		lsls	r2, r4, #3
 1152 0008 121B     		subs	r2, r2, r4
 1153 000a 9300     		lsls	r3, r2, #2
 1154 000c 044A     		ldr	r2, .L97
 1155 000e D318     		adds	r3, r2, r3
 1156 0010 5968     		ldr	r1, [r3, #4]
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 65


 1157              	.LVL117:
2198:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 break;
 1158              		.loc 1 2198 0
 1159 0012 2000     		movs	r0, r4
 1160 0014 FFF7FEFF 		bl	CapSense_1_SsSetWidgetSenseClkSrc
 1161              	.LVL118:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1162              		.loc 1 2190 0
 1163 0018 0134     		adds	r4, r4, #1
 1164              	.LVL119:
 1165              	.L95:
2190:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1166              		.loc 1 2190 0 is_stmt 0 discriminator 1
 1167 001a 092C     		cmp	r4, #9
 1168 001c F3D9     		bls	.L96
2213:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) || \
 1169              		.loc 1 2213 0 is_stmt 1
 1170              		@ sp needed
 1171              	.LVL120:
 1172 001e 10BD     		pop	{r4, pc}
 1173              	.L98:
 1174              		.align	2
 1175              	.L97:
 1176 0020 00000000 		.word	CapSense_1_dsFlash
 1177              		.cfi_endproc
 1178              	.LFE19:
 1179              		.size	CapSense_1_SsInitializeSourceSenseClk, .-CapSense_1_SsInitializeSourceSenseClk
 1180              		.section	.text.CapSense_1_SsInitialize,"ax",%progbits
 1181              		.align	2
 1182              		.global	CapSense_1_SsInitialize
 1183              		.code	16
 1184              		.thumb_func
 1185              		.type	CapSense_1_SsInitialize, %function
 1186              	CapSense_1_SsInitialize:
 1187              	.LFB5:
 517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     cystatus initStatus;
 1188              		.loc 1 517 0
 1189              		.cfi_startproc
 1190              		@ args = 0, pretend = 0, frame = 0
 1191              		@ frame_needed = 0, uses_anonymous_args = 0
 1192 0000 10B5     		push	{r4, lr}
 1193              		.cfi_def_cfa_offset 8
 1194              		.cfi_offset 4, -8
 1195              		.cfi_offset 14, -4
 524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_0] = centerFreqTrim;
 1196              		.loc 1 524 0
 1197 0002 124B     		ldr	r3, .L103
 1198 0004 1B68     		ldr	r3, [r3]
 1199 0006 DBB2     		uxtb	r3, r3
 1200              	.LVL121:
 525:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1201              		.loc 1 525 0
 1202 0008 114A     		ldr	r2, .L103+4
 1203 000a 1371     		strb	r3, [r2, #4]
 527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1204              		.loc 1 527 0
 1205 000c 132B     		cmp	r3, #19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 66


 1206 000e 05D8     		bhi	.L100
 529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_1_IMO_FREQU
 1207              		.loc 1 529 0
 1208 0010 1900     		movs	r1, r3
 1209 0012 1431     		adds	r1, r1, #20
 1210 0014 5171     		strb	r1, [r2, #5]
 530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 1211              		.loc 1 530 0
 1212 0016 2833     		adds	r3, r3, #40
 1213              	.LVL122:
 1214 0018 9371     		strb	r3, [r2, #6]
 1215 001a 0EE0     		b	.L101
 1216              	.LVL123:
 1217              	.L100:
 533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1218              		.loc 1 533 0
 1219 001c EB2B     		cmp	r3, #235
 1220 001e 06D9     		bls	.L102
 535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_1_IMO_FREQU
 1221              		.loc 1 535 0
 1222 0020 0B4A     		ldr	r2, .L103+4
 1223 0022 1900     		movs	r1, r3
 1224 0024 1439     		subs	r1, r1, #20
 1225 0026 5171     		strb	r1, [r2, #5]
 536:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                                            CapSense
 1226              		.loc 1 536 0
 1227 0028 283B     		subs	r3, r3, #40
 1228              	.LVL124:
 1229 002a 9371     		strb	r3, [r2, #6]
 1230 002c 05E0     		b	.L101
 1231              	.LVL125:
 1232              	.L102:
 541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_immunity[CapSense_1_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_1_IMO_FREQUE
 1233              		.loc 1 541 0
 1234 002e 084A     		ldr	r2, .L103+4
 1235 0030 1900     		movs	r1, r3
 1236 0032 1439     		subs	r1, r1, #20
 1237 0034 5171     		strb	r1, [r2, #5]
 542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
 1238              		.loc 1 542 0
 1239 0036 1433     		adds	r3, r3, #20
 1240              	.LVL126:
 1241 0038 9371     		strb	r3, [r2, #6]
 1242              	.L101:
 1243              	.LVL127:
 556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* ((CapSense_1_ENABLE == CapSense_1_CSD_EN) ||\
 1244              		.loc 1 556 0
 1245 003a FFF7FEFF 		bl	CapSense_1_SsInitializeSourceSenseClk
 1246              	.LVL128:
 561:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1247              		.loc 1 561 0
 1248 003e FFF7FEFF 		bl	CapSense_1_SsSetIOsInDefaultState
 1249              	.LVL129:
 567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #elif (CapSense_1_ENABLE == CapSense_1_CSX_EN)
 1250              		.loc 1 567 0
 1251 0042 0120     		movs	r0, #1
 1252 0044 FFF7FEFF 		bl	CapSense_1_SsSwitchSensingMode
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 67


 1253              	.LVL130:
 578:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
 1254              		.loc 1 578 0
 1255 0048 0020     		movs	r0, #0
 1256              		@ sp needed
 1257 004a 10BD     		pop	{r4, pc}
 1258              	.L104:
 1259              		.align	2
 1260              	.L103:
 1261 004c 0C0F0340 		.word	1073942284
 1262 0050 00000000 		.word	.LANCHOR0
 1263              		.cfi_endproc
 1264              	.LFE5:
 1265              		.size	CapSense_1_SsInitialize, .-CapSense_1_SsInitialize
 1266              		.section	.text.CapSense_1_SsClearCSDSensors,"ax",%progbits
 1267              		.align	2
 1268              		.global	CapSense_1_SsClearCSDSensors
 1269              		.code	16
 1270              		.thumb_func
 1271              		.type	CapSense_1_SsClearCSDSensors, %function
 1272              	CapSense_1_SsClearCSDSensors:
 1273              	.LFB21:
2316:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2317:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2318:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2319:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2))
2320:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsSetWidgetTxClkSrc
2322:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2324:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2325:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2326:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2327:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param wdgtIndex
2328:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2329:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param ptrWdgt
2330:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2331:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2332:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2333:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2334:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2335:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2336:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     static void CapSense_1_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_1_RAM_WD_BASE_STRUCT * pt
2337:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2338:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrSize;
2339:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 lfsrScale;
2340:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2341:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if ((CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) && \
2342:Generated_Source\PSoC4/CapSense_1_Sensing.c ****              (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2343:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 conversionsNum;
2344:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 snsClkDivider;
2345:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif
2346:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2347:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if(CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)
2348:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2349:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2350:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 snsClkDivider = CapSense_1_SsCSXGetTxClkDivider(wdgtIndex);
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 68


2351:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = CapSense_1_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2352:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = CapSense_1_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2353:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2354:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2355:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 lfsrScale = 0u;
2356:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Unused function argument */
2357:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)wdgtIndex;
2358:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2359:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2360:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrSize = (uint8)CapSense_1_CSX_TX_CLK_SOURCE;
2361:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale = 0u;
2362:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Unused function argument */
2363:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)wdgtIndex;
2364:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE) */
2365:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2366:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_1_CLK_SOURCE_LFSR_SCALE_OF
2367:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2368:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* ((CapSense_1_ENABLE == CapSense_1_CSX_EN) && (CapSense_1_ENABLE == CapSense_1_CSDV2)) */
2369:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2370:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2371:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if(((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2372:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2373:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2374:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2375:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2376:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2377:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)))
2378:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2379:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrSize
2380:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2381:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2382:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2383:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2384:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2385:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2386:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2387:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  requirements:
2388:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2389:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2390:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2391:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2392:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2393:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2394:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2395:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  resolution The widget resolution.
2396:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2397:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2398:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2400:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2401:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2402:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint8 lfsrSize = 0u;
2403:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2404:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Find LFSR value */
2405:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((CapSense_1_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2406:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (CapSense_1_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2407:Generated_Source\PSoC4/CapSense_1_Sensing.c ****        (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC4_PERIOD)))
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 69


2408:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2409:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC4;
2410:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2411:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2412:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2413:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC3_PERIOD)))
2414:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2415:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC3;
2416:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2417:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2418:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2419:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC2_PERIOD)))
2420:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2421:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC2;
2422:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2423:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else if((CapSense_1_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2424:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (CapSense_1_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2425:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (0uL == (conversionsNum % CapSense_1_SNSCLK_SSC1_PERIOD)))
2426:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2427:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = CapSense_1_CLK_SOURCE_SSC1;
2428:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2429:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2430:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2431:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrSize = (uint8)CapSense_1_CLK_SOURCE_DIRECT;
2432:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2433:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2434:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return (lfsrSize);
2435:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2436:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2437:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_1_Sensing.c **** /*******************************************************************************
2439:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * Function Name: CapSense_1_SsCalcLfsrScale
2440:Generated_Source\PSoC4/CapSense_1_Sensing.c **** ****************************************************************************//**
2441:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2442:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \brief
2443:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2444:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2445:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \details
2446:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2447:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2448:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  period.
2449:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2450:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2451:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  range +/-10%.
2452:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2453:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \param
2454:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2455:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2456:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
2457:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2458:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2459:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2460:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2461:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2462:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2463:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2464:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          For devices with CapSense_1_CSDV2_REF9P6UA_EN = TRUE, the
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 70


2465:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          mode parameters can take the following values:
2466:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2467:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2468:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2469:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2470:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *          CapSense_1_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2471:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2472:Generated_Source\PSoC4/CapSense_1_Sensing.c **** * \return
2473:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2474:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *
2475:Generated_Source\PSoC4/CapSense_1_Sensing.c **** *******************************************************************************/
2476:Generated_Source\PSoC4/CapSense_1_Sensing.c **** static uint8 CapSense_1_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2477:Generated_Source\PSoC4/CapSense_1_Sensing.c **** {
2478:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrScale;
2479:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrRange;
2480:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 lfsrDither;
2481:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2482:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2483:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     switch(lfsrSize)
2484:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2485:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC1:
2486:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2487:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC1_RANGE;
2488:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2489:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2490:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC2:
2491:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2492:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC2_RANGE;
2493:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2494:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2495:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC3:
2496:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2497:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC3_RANGE;
2498:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2499:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2500:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         case CapSense_1_CLK_SOURCE_SSC4:
2501:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2502:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = CapSense_1_SNSCLK_SSC4_RANGE;
2503:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2504:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2505:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         default:
2506:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2507:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrRange = 0u;
2508:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             break;
2509:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2510:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2511:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2512:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2513:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2514:Generated_Source\PSoC4/CapSense_1_Sensing.c ****      */
2515:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     if((lfsrSize != CapSense_1_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2516:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2517:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2518:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2519:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2520:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2521:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         while(lfsrDither < CapSense_1_LFSR_DITHER_PERCENTAGE)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 71


2522:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2523:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale++;
2524:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrDither <<=1uL;
2525:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2526:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2527:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         if(lfsrDither > CapSense_1_LFSR_DITHER_PERCENTAGE)
2528:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2529:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             lfsrScale--;
2530:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2531:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2532:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     else
2533:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
2534:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         lfsrScale = 0uL;
2535:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
2536:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     return ((uint8)lfsrScale);
2538:Generated_Source\PSoC4/CapSense_1_Sensing.c **** }
2539:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2540:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (((CapSense_1_ENABLE == CapSense_1_CSX_EN) && \
2541:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_DISABLE == CapSense_1_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2542:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2543:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSX_TX_CLK_SOURCE)) ||\
2544:Generated_Source\PSoC4/CapSense_1_Sensing.c ****           ((CapSense_1_ENABLE == CapSense_1_CSD_EN) && \
2545:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_ENABLE == CapSense_1_CSDV2) && \
2546:Generated_Source\PSoC4/CapSense_1_Sensing.c ****            (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE))) */
2547:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2548:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2549:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSD_EN)
2550:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsClearCSDSensors
2552:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2555:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2556:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2557:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  an inactive state.
2558:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2559:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2560:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2561:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2562:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2563:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  connection is Ground or Hi-Z.
2564:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2565:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2566:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsClearCSDSensors(void)
2567:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1274              		.loc 1 2567 0
 1275              		.cfi_startproc
 1276              		@ args = 0, pretend = 0, frame = 0
 1277              		@ frame_needed = 0, uses_anonymous_args = 0
 1278 0000 70B5     		push	{r4, r5, r6, lr}
 1279              		.cfi_def_cfa_offset 16
 1280              		.cfi_offset 4, -16
 1281              		.cfi_offset 5, -12
 1282              		.cfi_offset 6, -8
 1283              		.cfi_offset 14, -4
 1284              	.LVL131:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 72


2568:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 wdgtIndex;
2569:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 snsIndex;
2570:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2571:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2572:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 pinIndex;
2573:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2574:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2575:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2576:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Declare ptr to sensor IO structure */
2577:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2578:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2579:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2580:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2581:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CapSense_1_FLASH_IO_STRUCT const *curSnsIOPtr;
2582:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_1_TOTAL_WIDGETS; wdgtIndex++)
 1285              		.loc 1 2583 0
 1286 0002 0025     		movs	r5, #0
 1287 0004 16E0     		b	.L106
 1288              	.LVL132:
 1289              	.L109:
2584:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2585:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if (CapSense_1_SENSE_METHOD_CSD_E ==
2586:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_GET_SENSE_METHOD(&CapSense_1_dsFlash.wdgtArray[wdgtIndex]))
2587:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2588:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 curSnsIOPtr = (CapSense_1_FLASH_IO_STRUCT const *)
 1290              		.loc 1 2588 0
 1291 0006 EB00     		lsls	r3, r5, #3
 1292 0008 5B1B     		subs	r3, r3, r5
 1293 000a 9A00     		lsls	r2, r3, #2
 1294 000c 0B4B     		ldr	r3, .L110
 1295 000e D658     		ldr	r6, [r2, r3]
 1296              	.LVL133:
2589:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                 CapSense_1_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlas
2590:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2591:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Go through all the sensors in widget */
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_1_dsFlash.wdgtArray[wdgtIndex].total
 1297              		.loc 1 2592 0
 1298 0010 0024     		movs	r4, #0
 1299 0012 06E0     		b	.L107
 1300              	.LVL134:
 1301              	.L108:
2593:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
2594:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #if (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN)
2595:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Check ganged sns flag */
2596:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         if (CapSense_1_GANGED_SNS_MASK == (CapSense_1_dsFlash.wdgtArray[wdgtIndex].
2597:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                  CapSense_1_GANGED_SNS_MASK))
2598:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2599:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Get sns pointer */
2600:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             curFlashSnsPtr = (CapSense_1_FLASH_SNS_STRUCT const *)
2601:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                CapSense_1_dsFlash.wdgtArray[wdgtInd
2602:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                                                snsIndex;
2603:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2604:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2605:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             {
2606:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2607:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_1_ioList[curFlashSnsPtr->firstPinI
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 73


2608:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2609:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 /* Disconnect dedicated pin */
2610:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                                 CapSense_1_CSDDisconnectSns(curDedicatedSnsIOPtr);
2611:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             }
2612:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2613:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         else
2614:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         {
2615:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             /* Disable sensor */
2616:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                             CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
2617:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         }
2618:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #else
2619:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         /* Disable sensor */
2620:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                         CapSense_1_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 1302              		.loc 1 2620 0 discriminator 3
 1303 0014 E300     		lsls	r3, r4, #3
 1304 0016 1B1B     		subs	r3, r3, r4
 1305 0018 9800     		lsls	r0, r3, #2
 1306 001a 3018     		adds	r0, r6, r0
 1307 001c FFF7FEFF 		bl	CapSense_1_CSDDisconnectSns
 1308              	.LVL135:
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1309              		.loc 1 2592 0 discriminator 3
 1310 0020 0134     		adds	r4, r4, #1
 1311              	.LVL136:
 1312              	.L107:
2592:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 {
 1313              		.loc 1 2592 0 is_stmt 0 discriminator 1
 1314 0022 EA00     		lsls	r2, r5, #3
 1315 0024 521B     		subs	r2, r2, r5
 1316 0026 9300     		lsls	r3, r2, #2
 1317 0028 044A     		ldr	r2, .L110
 1318 002a D318     		adds	r3, r2, r3
 1319 002c 1B7E     		ldrb	r3, [r3, #24]
 1320 002e 9C42     		cmp	r4, r3
 1321 0030 F0D3     		bcc	.L108
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1322              		.loc 1 2583 0 is_stmt 1 discriminator 2
 1323 0032 0135     		adds	r5, r5, #1
 1324              	.LVL137:
 1325              	.L106:
2583:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
 1326              		.loc 1 2583 0 is_stmt 0 discriminator 1
 1327 0034 092D     		cmp	r5, #9
 1328 0036 E6D9     		bls	.L109
2621:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_GANGED_SNS_EN) */
2622:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 }
2623:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2624:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2625:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1329              		.loc 1 2625 0 is_stmt 1
 1330              		@ sp needed
 1331              	.LVL138:
 1332 0038 70BD     		pop	{r4, r5, r6, pc}
 1333              	.L111:
 1334 003a C046     		.align	2
 1335              	.L110:
 1336 003c 00000000 		.word	CapSense_1_dsFlash
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 74


 1337              		.cfi_endproc
 1338              	.LFE21:
 1339              		.size	CapSense_1_SsClearCSDSensors, .-CapSense_1_SsClearCSDSensors
 1340              		.section	.text.CapSense_1_SsCSDGetColSnsClkDivider,"ax",%progbits
 1341              		.align	2
 1342              		.global	CapSense_1_SsCSDGetColSnsClkDivider
 1343              		.code	16
 1344              		.thumb_func
 1345              		.type	CapSense_1_SsCSDGetColSnsClkDivider, %function
 1346              	CapSense_1_SsCSDGetColSnsClkDivider:
 1347              	.LFB22:
2626:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2627:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2628:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDGetColSnsClkDivider
2629:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2630:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2631:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2632:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2633:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2634:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2635:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2636:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2637:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2638:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2639:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2640:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param widgetId
2641:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Specifies the ID of the widget.
2642:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2643:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return
2644:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2645:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2646:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2647:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2648:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     uint32 CapSense_1_SsCSDGetColSnsClkDivider(uint32 widgetId)
2649:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1348              		.loc 1 2649 0
 1349              		.cfi_startproc
 1350              		@ args = 0, pretend = 0, frame = 0
 1351              		@ frame_needed = 0, uses_anonymous_args = 0
 1352              		@ link register save eliminated.
 1353              	.LVL139:
2650:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 retVal;
2651:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2652:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2653:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2654:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2655:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2657:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2658:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2659:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
2660:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2661:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
 1354              		.loc 1 2661 0
 1355 0000 014B     		ldr	r3, .L113
 1356 0002 D88C     		ldrh	r0, [r3, #38]
 1357              	.LVL140:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 75


2662:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2663:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2664:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2665:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2666:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         return (retVal);
2667:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1358              		.loc 1 2667 0
 1359              		@ sp needed
 1360 0004 7047     		bx	lr
 1361              	.L114:
 1362 0006 C046     		.align	2
 1363              	.L113:
 1364 0008 00000000 		.word	CapSense_1_dsRam
 1365              		.cfi_endproc
 1366              	.LFE22:
 1367              		.size	CapSense_1_SsCSDGetColSnsClkDivider, .-CapSense_1_SsCSDGetColSnsClkDivider
 1368              		.section	.text.CapSense_1_SsCSDSetColSnsClkDivider,"ax",%progbits
 1369              		.align	2
 1370              		.global	CapSense_1_SsCSDSetColSnsClkDivider
 1371              		.code	16
 1372              		.thumb_func
 1373              		.type	CapSense_1_SsCSDSetColSnsClkDivider, %function
 1374              	CapSense_1_SsCSDSetColSnsClkDivider:
 1375              	.LFB23:
2668:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2669:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2670:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2671:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_SsCSDSetColSnsClkDivider
2672:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2673:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2674:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2675:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value for one-dimension widgets
2676:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2677:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2678:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2679:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  This function sets the Sense Clock Divider value based on the Component
2680:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2681:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  two-dimension widgets.
2682:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2683:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \param
2684:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  widgetId Specifies the ID of the widget.
2685:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2686:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \return The Sense Clock Divider value for one-dimension widgets
2687:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *        and the Column Sense Clock divider value for two-dimension widgets.
2688:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2689:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2690:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_SsCSDSetColSnsClkDivider(uint32 widgetId, uint32 dividerVal)
2691:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1376              		.loc 1 2691 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380              		@ link register save eliminated.
 1381              	.LVL141:
2692:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Get sense divider based on configuration */
2693:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2694:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 76


2695:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2696:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2697:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2698:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2699:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             ptrWdgt->snsClk = (uint16)dividerVal;
2700:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #else
2701:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             CapSense_1_dsRam.snsCsdClk = (uint16)dividerVal;
 1382              		.loc 1 2701 0
 1383 0000 014B     		ldr	r3, .L116
 1384 0002 D984     		strh	r1, [r3, #38]
2702:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2703:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2704:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2705:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1385              		.loc 1 2705 0
 1386              		@ sp needed
 1387 0004 7047     		bx	lr
 1388              	.L117:
 1389 0006 C046     		.align	2
 1390              	.L116:
 1391 0008 00000000 		.word	CapSense_1_dsRam
 1392              		.cfi_endproc
 1393              	.LFE23:
 1394              		.size	CapSense_1_SsCSDSetColSnsClkDivider, .-CapSense_1_SsCSDSetColSnsClkDivider
 1395              		.section	.text.CapSense_1_BistDischargeExtCapacitors,"ax",%progbits
 1396              		.align	2
 1397              		.global	CapSense_1_BistDischargeExtCapacitors
 1398              		.code	16
 1399              		.thumb_func
 1400              		.type	CapSense_1_BistDischargeExtCapacitors, %function
 1401              	CapSense_1_BistDischargeExtCapacitors:
 1402              	.LFB24:
2706:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2707:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2708:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN)
2709:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2710:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDGetRowSnsClkDivider
2711:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2712:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2713:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2714:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2715:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2716:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2717:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2718:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2719:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2720:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  two-dimension widgets.
2721:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2723:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2724:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return
2726:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2727:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2728:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2729:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2730:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 CapSense_1_SsCSDGetRowSnsClkDivider(uint32 widgetId)
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 77


2731:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2732:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 retVal;
2733:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2734:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             /* Get sense divider based on configuration */
2735:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if (CapSense_1_ENABLE != CapSense_1_CSD_COMMON_SNS_CLK_EN)
2736:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_RAM_WD_BASE_STRUCT *ptrWdgt;
2737:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2738:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 ptrWdgt = (CapSense_1_RAM_WD_BASE_STRUCT *)
2739:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 CapSense_1_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2740:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2741:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2742:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #else
2743:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 retVal = (uint32)CapSense_1_dsRam.snsCsdClk;
2744:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2745:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2746:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_COMMON_SNS_CLK_EN) */
2747:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2748:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (retVal);
2749:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2751:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CSD_MATRIX_WIDGET_EN || CapSense_1_CSD_TOUCHPAD_WIDGET_EN) */
2752:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2753:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2754:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #if (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE)
2755:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /*******************************************************************************
2756:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * Function Name: CapSense_1_SsCSDCalcPrsSize
2757:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         ****************************************************************************//**
2758:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2759:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \brief
2760:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2761:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2762:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \details
2763:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2764:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  requirements:
2765:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2766:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2767:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \param
2768:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2769:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *  resolution The widget resolution.
2770:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2771:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2772:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *
2773:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         *******************************************************************************/
2774:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8 CapSense_1_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2775:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         {
2776:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 prsSize;
2777:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             uint32 modClkDivider = 1u;
2778:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2779:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #if ((CapSense_1_ENABLE != CapSense_1_CSDV2) && \
2780:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                  (CapSense_1_ENABLE == CapSense_1_IS_M0S8PERI_BLOCK))
2781:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                     modClkDivider = (uint32)CapSense_1_dsRam.modCsdClk;
2782:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             #endif
2783:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2784:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             if ((snsClkDivider * CapSense_1_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu 
2785:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2786:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS12 mode */
2787:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_12_CONFIG;
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 78


2788:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2789:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else if ((snsClkDivider * CapSense_1_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x0000000
2790:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2791:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set PRS8 mode */
2792:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_PRS_8_CONFIG;
2793:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2794:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             else
2795:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             {
2796:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 /* Set Direct clock mode */
2797:Generated_Source\PSoC4/CapSense_1_Sensing.c ****                 prsSize = CapSense_1_CLK_SOURCE_DIRECT;
2798:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             }
2799:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_1_Sensing.c ****             return (uint8)prsSize;
2801:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         }
2802:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     #endif /* (CapSense_1_CLK_SOURCE_PRSAUTO == CapSense_1_CSD_SNS_CLK_SOURCE) */
2803:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #endif /* (CapSense_1_ENABLE == CapSense_1_CSD_EN) */
2804:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2805:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2806:Generated_Source\PSoC4/CapSense_1_Sensing.c **** #if (CapSense_1_ENABLE == CapSense_1_CSDV2)
2807:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     /*******************************************************************************
2808:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * Function Name: CapSense_1_BistDischargeExtCapacitors
2809:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     ****************************************************************************//**
2810:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2811:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \brief
2812:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors.
2813:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2814:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     * \details
2815:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  The function discharge available external capacitors by connection them
2816:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects 
2817:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2818:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses 
2819:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2820:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *
2821:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     *******************************************************************************/
2822:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     void CapSense_1_BistDischargeExtCapacitors(void)
2823:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     {
 1403              		.loc 1 2823 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 0
 1406              		@ frame_needed = 0, uses_anonymous_args = 0
 1407 0000 70B5     		push	{r4, r5, r6, lr}
 1408              		.cfi_def_cfa_offset 16
 1409              		.cfi_offset 4, -16
 1410              		.cfi_offset 5, -12
 1411              		.cfi_offset 6, -8
 1412              		.cfi_offset 14, -4
2824:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint32 newRegValue;
2825:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         uint8  interruptState;
2826:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         
2827:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2828:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1413              		.loc 1 2828 0
 1414 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1415              	.LVL142:
2829:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR);
 1416              		.loc 1 2829 0
 1417 0006 134A     		ldr	r2, .L119
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 79


 1418 0008 1368     		ldr	r3, [r2]
 1419              	.LVL143:
2830:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_HSIOM_MASK);
 1420              		.loc 1 2830 0
 1421 000a F021     		movs	r1, #240
 1422 000c 8B43     		bics	r3, r1
 1423              	.LVL144:
2831:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_HSIOM_PTR, newRegValue);
 1424              		.loc 1 2831 0
 1425 000e 1360     		str	r3, [r2]
2832:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1426              		.loc 1 2832 0
 1427 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1428              	.LVL145:
2833:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2834:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2835:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1429              		.loc 1 2835 0
 1430 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 1431              	.LVL146:
2836:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_DR_PTR);
 1432              		.loc 1 2836 0
 1433 0018 0F4A     		ldr	r2, .L119+4
 1434 001a 1368     		ldr	r3, [r2]
 1435              	.LVL147:
2837:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_1_EXT_CAP_DR_MASK);
 1436              		.loc 1 2837 0
 1437 001c 0221     		movs	r1, #2
 1438 001e 8B43     		bics	r3, r1
 1439              	.LVL148:
2838:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_DR_PTR, newRegValue);
 1440              		.loc 1 2838 0
 1441 0020 1360     		str	r3, [r2]
2839:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1442              		.loc 1 2839 0
 1443 0022 FFF7FEFF 		bl	CyExitCriticalSection
 1444              	.LVL149:
2840:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2841:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2842:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1445              		.loc 1 2842 0
 1446 0026 FFF7FEFF 		bl	CyEnterCriticalSection
 1447              	.LVL150:
2843:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1448              		.loc 1 2843 0
 1449 002a 0C4C     		ldr	r4, .L119+8
 1450 002c 2368     		ldr	r3, [r4]
 1451              	.LVL151:
2844:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1452              		.loc 1 2844 0
 1453 002e 3825     		movs	r5, #56
 1454 0030 AB43     		bics	r3, r5
 1455              	.LVL152:
2845:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue |= (CapSense_1_EXT_CAP_PC_STRONG_CFG);
 1456              		.loc 1 2845 0
 1457 0032 3022     		movs	r2, #48
 1458 0034 1343     		orrs	r3, r2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 80


 1459              	.LVL153:
2846:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1460              		.loc 1 2846 0
 1461 0036 2360     		str	r3, [r4]
2847:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1462              		.loc 1 2847 0
 1463 0038 FFF7FEFF 		bl	CyExitCriticalSection
 1464              	.LVL154:
2848:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2849:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Delay to discharge external capacitors */
2850:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyDelayUs(CapSense_1_EXT_CAP_DISCHARGE_TIME);
 1465              		.loc 1 2850 0
 1466 003c 0120     		movs	r0, #1
 1467 003e FFF7FEFF 		bl	CyDelayUs
 1468              	.LVL155:
2851:Generated_Source\PSoC4/CapSense_1_Sensing.c **** 
2852:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2853:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1469              		.loc 1 2853 0
 1470 0042 FFF7FEFF 		bl	CyEnterCriticalSection
 1471              	.LVL156:
2854:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_1_EXT_CAP_PC_PTR);
 1472              		.loc 1 2854 0
 1473 0046 2368     		ldr	r3, [r4]
 1474              	.LVL157:
2855:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_1_EXT_CAP_PC_MASK));
 1475              		.loc 1 2855 0
 1476 0048 AB43     		bics	r3, r5
 1477              	.LVL158:
2856:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CY_SET_REG32(CapSense_1_EXT_CAP_PC_PTR, newRegValue);
 1478              		.loc 1 2856 0
 1479 004a 2360     		str	r3, [r4]
2857:Generated_Source\PSoC4/CapSense_1_Sensing.c ****         CyExitCriticalSection(interruptState);
 1480              		.loc 1 2857 0
 1481 004c FFF7FEFF 		bl	CyExitCriticalSection
 1482              	.LVL159:
2858:Generated_Source\PSoC4/CapSense_1_Sensing.c ****     }
 1483              		.loc 1 2858 0
 1484              		@ sp needed
 1485 0050 70BD     		pop	{r4, r5, r6, pc}
 1486              	.L120:
 1487 0052 C046     		.align	2
 1488              	.L119:
 1489 0054 00040240 		.word	1073873920
 1490 0058 00040440 		.word	1074004992
 1491 005c 08040440 		.word	1074005000
 1492              		.cfi_endproc
 1493              	.LFE24:
 1494              		.size	CapSense_1_BistDischargeExtCapacitors, .-CapSense_1_BistDischargeExtCapacitors
 1495              		.comm	CapSense_1_curSnsIOPtr,4,4
 1496              		.comm	CapSense_1_curRamSnsPtr,4,4
 1497              		.global	CapSense_1_requestScanAllWidget
 1498              		.global	CapSense_1_sensorIndex
 1499              		.global	CapSense_1_widgetIndex
 1500              		.global	CapSense_1_immunity
 1501              		.global	CapSense_1_scanFreqIndex
 1502              		.global	CapSense_1_currentSenseMethod
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 81


 1503              		.bss
 1504              		.align	2
 1505              		.set	.LANCHOR0,. + 0
 1506              		.type	CapSense_1_currentSenseMethod, %object
 1507              		.size	CapSense_1_currentSenseMethod, 1
 1508              	CapSense_1_currentSenseMethod:
 1509 0000 00       		.space	1
 1510              		.type	CapSense_1_requestScanAllWidget, %object
 1511              		.size	CapSense_1_requestScanAllWidget, 1
 1512              	CapSense_1_requestScanAllWidget:
 1513 0001 00       		.space	1
 1514              		.type	CapSense_1_widgetIndex, %object
 1515              		.size	CapSense_1_widgetIndex, 1
 1516              	CapSense_1_widgetIndex:
 1517 0002 00       		.space	1
 1518 0003 00       		.space	1
 1519              		.type	CapSense_1_immunity, %object
 1520              		.size	CapSense_1_immunity, 3
 1521              	CapSense_1_immunity:
 1522 0004 000000   		.space	3
 1523              		.type	CapSense_1_sensorIndex, %object
 1524              		.size	CapSense_1_sensorIndex, 1
 1525              	CapSense_1_sensorIndex:
 1526 0007 00       		.space	1
 1527              		.type	CapSense_1_scanFreqIndex, %object
 1528              		.size	CapSense_1_scanFreqIndex, 1
 1529              	CapSense_1_scanFreqIndex:
 1530 0008 00       		.space	1
 1531              		.text
 1532              	.Letext0:
 1533              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1534              		.file 3 "Generated_Source\\PSoC4\\CapSense_1_Configuration.h"
 1535              		.file 4 "Generated_Source\\PSoC4\\CapSense_1_Structure.h"
 1536              		.file 5 "Generated_Source\\PSoC4\\CapSense_1_SensingCSD_LL.h"
 1537              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 1538              		.file 7 "Generated_Source\\PSoC4\\CapSense_1_ISR.h"
 1539              		.section	.debug_info,"",%progbits
 1540              	.Ldebug_info0:
 1541 0000 600F0000 		.4byte	0xf60
 1542 0004 0400     		.2byte	0x4
 1543 0006 00000000 		.4byte	.Ldebug_abbrev0
 1544 000a 04       		.byte	0x4
 1545 000b 01       		.uleb128 0x1
 1546 000c D1020000 		.4byte	.LASF179
 1547 0010 0C       		.byte	0xc
 1548 0011 58070000 		.4byte	.LASF180
 1549 0015 70040000 		.4byte	.LASF181
 1550 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1551 001d 00000000 		.4byte	0
 1552 0021 00000000 		.4byte	.Ldebug_line0
 1553 0025 02       		.uleb128 0x2
 1554 0026 01       		.byte	0x1
 1555 0027 06       		.byte	0x6
 1556 0028 300B0000 		.4byte	.LASF0
 1557 002c 02       		.uleb128 0x2
 1558 002d 01       		.byte	0x1
 1559 002e 08       		.byte	0x8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 82


 1560 002f 940A0000 		.4byte	.LASF1
 1561 0033 02       		.uleb128 0x2
 1562 0034 02       		.byte	0x2
 1563 0035 05       		.byte	0x5
 1564 0036 81080000 		.4byte	.LASF2
 1565 003a 02       		.uleb128 0x2
 1566 003b 02       		.byte	0x2
 1567 003c 07       		.byte	0x7
 1568 003d 410B0000 		.4byte	.LASF3
 1569 0041 02       		.uleb128 0x2
 1570 0042 04       		.byte	0x4
 1571 0043 05       		.byte	0x5
 1572 0044 AF080000 		.4byte	.LASF4
 1573 0048 02       		.uleb128 0x2
 1574 0049 04       		.byte	0x4
 1575 004a 07       		.byte	0x7
 1576 004b FE090000 		.4byte	.LASF5
 1577 004f 02       		.uleb128 0x2
 1578 0050 08       		.byte	0x8
 1579 0051 05       		.byte	0x5
 1580 0052 06060000 		.4byte	.LASF6
 1581 0056 02       		.uleb128 0x2
 1582 0057 08       		.byte	0x8
 1583 0058 07       		.byte	0x7
 1584 0059 96030000 		.4byte	.LASF7
 1585 005d 03       		.uleb128 0x3
 1586 005e 04       		.byte	0x4
 1587 005f 05       		.byte	0x5
 1588 0060 696E7400 		.ascii	"int\000"
 1589 0064 02       		.uleb128 0x2
 1590 0065 04       		.byte	0x4
 1591 0066 07       		.byte	0x7
 1592 0067 0C010000 		.4byte	.LASF8
 1593 006b 04       		.uleb128 0x4
 1594 006c AC0B0000 		.4byte	.LASF9
 1595 0070 02       		.byte	0x2
 1596 0071 E401     		.2byte	0x1e4
 1597 0073 2C000000 		.4byte	0x2c
 1598 0077 04       		.uleb128 0x4
 1599 0078 B9050000 		.4byte	.LASF10
 1600 007c 02       		.byte	0x2
 1601 007d E501     		.2byte	0x1e5
 1602 007f 3A000000 		.4byte	0x3a
 1603 0083 04       		.uleb128 0x4
 1604 0084 FB060000 		.4byte	.LASF11
 1605 0088 02       		.byte	0x2
 1606 0089 E601     		.2byte	0x1e6
 1607 008b 48000000 		.4byte	0x48
 1608 008f 02       		.uleb128 0x2
 1609 0090 04       		.byte	0x4
 1610 0091 04       		.byte	0x4
 1611 0092 C5020000 		.4byte	.LASF12
 1612 0096 02       		.uleb128 0x2
 1613 0097 08       		.byte	0x8
 1614 0098 04       		.byte	0x4
 1615 0099 B20B0000 		.4byte	.LASF13
 1616 009d 02       		.uleb128 0x2
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 83


 1617 009e 01       		.byte	0x1
 1618 009f 08       		.byte	0x8
 1619 00a0 79050000 		.4byte	.LASF14
 1620 00a4 04       		.uleb128 0x4
 1621 00a5 8B0A0000 		.4byte	.LASF15
 1622 00a9 02       		.byte	0x2
 1623 00aa 8602     		.2byte	0x286
 1624 00ac 48000000 		.4byte	0x48
 1625 00b0 05       		.uleb128 0x5
 1626 00b1 6B000000 		.4byte	0x6b
 1627 00b5 04       		.uleb128 0x4
 1628 00b6 F1070000 		.4byte	.LASF16
 1629 00ba 02       		.byte	0x2
 1630 00bb 9002     		.2byte	0x290
 1631 00bd C1000000 		.4byte	0xc1
 1632 00c1 05       		.uleb128 0x5
 1633 00c2 83000000 		.4byte	0x83
 1634 00c6 04       		.uleb128 0x4
 1635 00c7 AF060000 		.4byte	.LASF17
 1636 00cb 02       		.byte	0x2
 1637 00cc A002     		.2byte	0x2a0
 1638 00ce D2000000 		.4byte	0xd2
 1639 00d2 06       		.uleb128 0x6
 1640 00d3 04       		.byte	0x4
 1641 00d4 D8000000 		.4byte	0xd8
 1642 00d8 07       		.uleb128 0x7
 1643 00d9 04       		.uleb128 0x4
 1644 00da 14060000 		.4byte	.LASF18
 1645 00de 03       		.byte	0x3
 1646 00df 4101     		.2byte	0x141
 1647 00e1 77000000 		.4byte	0x77
 1648 00e5 04       		.uleb128 0x4
 1649 00e6 CF030000 		.4byte	.LASF19
 1650 00ea 03       		.byte	0x3
 1651 00eb 4501     		.2byte	0x145
 1652 00ed 6B000000 		.4byte	0x6b
 1653 00f1 08       		.uleb128 0x8
 1654 00f2 01       		.byte	0x1
 1655 00f3 2C000000 		.4byte	0x2c
 1656 00f7 04       		.byte	0x4
 1657 00f8 70       		.byte	0x70
 1658 00f9 1C010000 		.4byte	0x11c
 1659 00fd 09       		.uleb128 0x9
 1660 00fe 1D070000 		.4byte	.LASF20
 1661 0102 00       		.byte	0
 1662 0103 09       		.uleb128 0x9
 1663 0104 D8090000 		.4byte	.LASF21
 1664 0108 01       		.byte	0x1
 1665 0109 09       		.uleb128 0x9
 1666 010a 08090000 		.4byte	.LASF22
 1667 010e 02       		.byte	0x2
 1668 010f 09       		.uleb128 0x9
 1669 0110 51040000 		.4byte	.LASF23
 1670 0114 03       		.byte	0x3
 1671 0115 09       		.uleb128 0x9
 1672 0116 D3070000 		.4byte	.LASF24
 1673 011a 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 84


 1674 011b 00       		.byte	0
 1675 011c 0A       		.uleb128 0xa
 1676 011d EC030000 		.4byte	.LASF25
 1677 0121 04       		.byte	0x4
 1678 0122 76       		.byte	0x76
 1679 0123 F1000000 		.4byte	0xf1
 1680 0127 0B       		.uleb128 0xb
 1681 0128 0E       		.byte	0xe
 1682 0129 04       		.byte	0x4
 1683 012a 8E       		.byte	0x8e
 1684 012b 9C010000 		.4byte	0x19c
 1685 012f 0C       		.uleb128 0xc
 1686 0130 CF050000 		.4byte	.LASF26
 1687 0134 04       		.byte	0x4
 1688 0135 93       		.byte	0x93
 1689 0136 77000000 		.4byte	0x77
 1690 013a 00       		.byte	0
 1691 013b 0C       		.uleb128 0xc
 1692 013c 560A0000 		.4byte	.LASF27
 1693 0140 04       		.byte	0x4
 1694 0141 98       		.byte	0x98
 1695 0142 D9000000 		.4byte	0xd9
 1696 0146 02       		.byte	0x2
 1697 0147 0C       		.uleb128 0xc
 1698 0148 52050000 		.4byte	.LASF28
 1699 014c 04       		.byte	0x4
 1700 014d 9D       		.byte	0x9d
 1701 014e 6B000000 		.4byte	0x6b
 1702 0152 04       		.byte	0x4
 1703 0153 0C       		.uleb128 0xc
 1704 0154 9B060000 		.4byte	.LASF29
 1705 0158 04       		.byte	0x4
 1706 0159 A2       		.byte	0xa2
 1707 015a 6B000000 		.4byte	0x6b
 1708 015e 05       		.byte	0x5
 1709 015f 0C       		.uleb128 0xc
 1710 0160 02070000 		.4byte	.LASF30
 1711 0164 04       		.byte	0x4
 1712 0165 A8       		.byte	0xa8
 1713 0166 6B000000 		.4byte	0x6b
 1714 016a 06       		.byte	0x6
 1715 016b 0C       		.uleb128 0xc
 1716 016c 2E060000 		.4byte	.LASF31
 1717 0170 04       		.byte	0x4
 1718 0171 AE       		.byte	0xae
 1719 0172 6B000000 		.4byte	0x6b
 1720 0176 07       		.byte	0x7
 1721 0177 0C       		.uleb128 0xc
 1722 0178 B4040000 		.4byte	.LASF32
 1723 017c 04       		.byte	0x4
 1724 017d B5       		.byte	0xb5
 1725 017e E5000000 		.4byte	0xe5
 1726 0182 08       		.byte	0x8
 1727 0183 0C       		.uleb128 0xc
 1728 0184 1F0A0000 		.4byte	.LASF33
 1729 0188 04       		.byte	0x4
 1730 0189 BC       		.byte	0xbc
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 85


 1731 018a 9C010000 		.4byte	0x19c
 1732 018e 09       		.byte	0x9
 1733 018f 0C       		.uleb128 0xc
 1734 0190 4F080000 		.4byte	.LASF34
 1735 0194 04       		.byte	0x4
 1736 0195 C1       		.byte	0xc1
 1737 0196 6B000000 		.4byte	0x6b
 1738 019a 0C       		.byte	0xc
 1739 019b 00       		.byte	0
 1740 019c 0D       		.uleb128 0xd
 1741 019d 6B000000 		.4byte	0x6b
 1742 01a1 AC010000 		.4byte	0x1ac
 1743 01a5 0E       		.uleb128 0xe
 1744 01a6 AC010000 		.4byte	0x1ac
 1745 01aa 02       		.byte	0x2
 1746 01ab 00       		.byte	0
 1747 01ac 02       		.uleb128 0x2
 1748 01ad 04       		.byte	0x4
 1749 01ae 07       		.byte	0x7
 1750 01af 5C080000 		.4byte	.LASF35
 1751 01b3 0A       		.uleb128 0xa
 1752 01b4 D4060000 		.4byte	.LASF36
 1753 01b8 04       		.byte	0x4
 1754 01b9 C2       		.byte	0xc2
 1755 01ba 27010000 		.4byte	0x127
 1756 01be 0B       		.uleb128 0xb
 1757 01bf 0E       		.byte	0xe
 1758 01c0 04       		.byte	0x4
 1759 01c1 C7       		.byte	0xc7
 1760 01c2 33020000 		.4byte	0x233
 1761 01c6 0C       		.uleb128 0xc
 1762 01c7 CF050000 		.4byte	.LASF26
 1763 01cb 04       		.byte	0x4
 1764 01cc CC       		.byte	0xcc
 1765 01cd 77000000 		.4byte	0x77
 1766 01d1 00       		.byte	0
 1767 01d2 0C       		.uleb128 0xc
 1768 01d3 560A0000 		.4byte	.LASF27
 1769 01d7 04       		.byte	0x4
 1770 01d8 D1       		.byte	0xd1
 1771 01d9 D9000000 		.4byte	0xd9
 1772 01dd 02       		.byte	0x2
 1773 01de 0C       		.uleb128 0xc
 1774 01df 52050000 		.4byte	.LASF28
 1775 01e3 04       		.byte	0x4
 1776 01e4 D6       		.byte	0xd6
 1777 01e5 6B000000 		.4byte	0x6b
 1778 01e9 04       		.byte	0x4
 1779 01ea 0C       		.uleb128 0xc
 1780 01eb 9B060000 		.4byte	.LASF29
 1781 01ef 04       		.byte	0x4
 1782 01f0 DB       		.byte	0xdb
 1783 01f1 6B000000 		.4byte	0x6b
 1784 01f5 05       		.byte	0x5
 1785 01f6 0C       		.uleb128 0xc
 1786 01f7 02070000 		.4byte	.LASF30
 1787 01fb 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 86


 1788 01fc E1       		.byte	0xe1
 1789 01fd 6B000000 		.4byte	0x6b
 1790 0201 06       		.byte	0x6
 1791 0202 0C       		.uleb128 0xc
 1792 0203 2E060000 		.4byte	.LASF31
 1793 0207 04       		.byte	0x4
 1794 0208 E7       		.byte	0xe7
 1795 0209 6B000000 		.4byte	0x6b
 1796 020d 07       		.byte	0x7
 1797 020e 0C       		.uleb128 0xc
 1798 020f B4040000 		.4byte	.LASF32
 1799 0213 04       		.byte	0x4
 1800 0214 EE       		.byte	0xee
 1801 0215 E5000000 		.4byte	0xe5
 1802 0219 08       		.byte	0x8
 1803 021a 0C       		.uleb128 0xc
 1804 021b 1F0A0000 		.4byte	.LASF33
 1805 021f 04       		.byte	0x4
 1806 0220 F5       		.byte	0xf5
 1807 0221 9C010000 		.4byte	0x19c
 1808 0225 09       		.byte	0x9
 1809 0226 0C       		.uleb128 0xc
 1810 0227 4F080000 		.4byte	.LASF34
 1811 022b 04       		.byte	0x4
 1812 022c FA       		.byte	0xfa
 1813 022d 6B000000 		.4byte	0x6b
 1814 0231 0C       		.byte	0xc
 1815 0232 00       		.byte	0
 1816 0233 0A       		.uleb128 0xa
 1817 0234 050C0000 		.4byte	.LASF37
 1818 0238 04       		.byte	0x4
 1819 0239 FB       		.byte	0xfb
 1820 023a BE010000 		.4byte	0x1be
 1821 023e 0F       		.uleb128 0xf
 1822 023f 8C       		.byte	0x8c
 1823 0240 04       		.byte	0x4
 1824 0241 0101     		.2byte	0x101
 1825 0243 CA020000 		.4byte	0x2ca
 1826 0247 10       		.uleb128 0x10
 1827 0248 26090000 		.4byte	.LASF38
 1828 024c 04       		.byte	0x4
 1829 024d 0601     		.2byte	0x106
 1830 024f 33020000 		.4byte	0x233
 1831 0253 00       		.byte	0
 1832 0254 10       		.uleb128 0x10
 1833 0255 2E090000 		.4byte	.LASF39
 1834 0259 04       		.byte	0x4
 1835 025a 0B01     		.2byte	0x10b
 1836 025c 33020000 		.4byte	0x233
 1837 0260 0E       		.byte	0xe
 1838 0261 10       		.uleb128 0x10
 1839 0262 36090000 		.4byte	.LASF40
 1840 0266 04       		.byte	0x4
 1841 0267 1001     		.2byte	0x110
 1842 0269 33020000 		.4byte	0x233
 1843 026d 1C       		.byte	0x1c
 1844 026e 10       		.uleb128 0x10
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 87


 1845 026f 3E090000 		.4byte	.LASF41
 1846 0273 04       		.byte	0x4
 1847 0274 1501     		.2byte	0x115
 1848 0276 33020000 		.4byte	0x233
 1849 027a 2A       		.byte	0x2a
 1850 027b 10       		.uleb128 0x10
 1851 027c 46090000 		.4byte	.LASF42
 1852 0280 04       		.byte	0x4
 1853 0281 1A01     		.2byte	0x11a
 1854 0283 33020000 		.4byte	0x233
 1855 0287 38       		.byte	0x38
 1856 0288 10       		.uleb128 0x10
 1857 0289 4E090000 		.4byte	.LASF43
 1858 028d 04       		.byte	0x4
 1859 028e 1F01     		.2byte	0x11f
 1860 0290 33020000 		.4byte	0x233
 1861 0294 46       		.byte	0x46
 1862 0295 10       		.uleb128 0x10
 1863 0296 56090000 		.4byte	.LASF44
 1864 029a 04       		.byte	0x4
 1865 029b 2401     		.2byte	0x124
 1866 029d 33020000 		.4byte	0x233
 1867 02a1 54       		.byte	0x54
 1868 02a2 10       		.uleb128 0x10
 1869 02a3 5E090000 		.4byte	.LASF45
 1870 02a7 04       		.byte	0x4
 1871 02a8 2901     		.2byte	0x129
 1872 02aa 33020000 		.4byte	0x233
 1873 02ae 62       		.byte	0x62
 1874 02af 10       		.uleb128 0x10
 1875 02b0 66090000 		.4byte	.LASF46
 1876 02b4 04       		.byte	0x4
 1877 02b5 2E01     		.2byte	0x12e
 1878 02b7 33020000 		.4byte	0x233
 1879 02bb 70       		.byte	0x70
 1880 02bc 10       		.uleb128 0x10
 1881 02bd 6E090000 		.4byte	.LASF47
 1882 02c1 04       		.byte	0x4
 1883 02c2 3301     		.2byte	0x133
 1884 02c4 33020000 		.4byte	0x233
 1885 02c8 7E       		.byte	0x7e
 1886 02c9 00       		.byte	0
 1887 02ca 04       		.uleb128 0x4
 1888 02cb 6D020000 		.4byte	.LASF48
 1889 02cf 04       		.byte	0x4
 1890 02d0 3401     		.2byte	0x134
 1891 02d2 3E020000 		.4byte	0x23e
 1892 02d6 0F       		.uleb128 0xf
 1893 02d7 18       		.byte	0x18
 1894 02d8 04       		.byte	0x4
 1895 02d9 3A01     		.2byte	0x13a
 1896 02db 2E030000 		.4byte	0x32e
 1897 02df 11       		.uleb128 0x11
 1898 02e0 72617700 		.ascii	"raw\000"
 1899 02e4 04       		.byte	0x4
 1900 02e5 3F01     		.2byte	0x13f
 1901 02e7 2E030000 		.4byte	0x32e
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 88


 1902 02eb 00       		.byte	0
 1903 02ec 10       		.uleb128 0x10
 1904 02ed 3C0B0000 		.4byte	.LASF49
 1905 02f1 04       		.byte	0x4
 1906 02f2 4401     		.2byte	0x144
 1907 02f4 2E030000 		.4byte	0x32e
 1908 02f8 06       		.byte	0x6
 1909 02f9 10       		.uleb128 0x10
 1910 02fa 7E0A0000 		.4byte	.LASF50
 1911 02fe 04       		.byte	0x4
 1912 02ff 4A01     		.2byte	0x14a
 1913 0301 9C010000 		.4byte	0x19c
 1914 0305 0C       		.byte	0xc
 1915 0306 10       		.uleb128 0x10
 1916 0307 F4080000 		.4byte	.LASF51
 1917 030b 04       		.byte	0x4
 1918 030c 4F01     		.2byte	0x14f
 1919 030e D9000000 		.4byte	0xd9
 1920 0312 10       		.byte	0x10
 1921 0313 10       		.uleb128 0x10
 1922 0314 B90B0000 		.4byte	.LASF52
 1923 0318 04       		.byte	0x4
 1924 0319 5401     		.2byte	0x154
 1925 031b 3E030000 		.4byte	0x33e
 1926 031f 12       		.byte	0x12
 1927 0320 10       		.uleb128 0x10
 1928 0321 F7050000 		.4byte	.LASF53
 1929 0325 04       		.byte	0x4
 1930 0326 5901     		.2byte	0x159
 1931 0328 9C010000 		.4byte	0x19c
 1932 032c 15       		.byte	0x15
 1933 032d 00       		.byte	0
 1934 032e 0D       		.uleb128 0xd
 1935 032f 77000000 		.4byte	0x77
 1936 0333 3E030000 		.4byte	0x33e
 1937 0337 0E       		.uleb128 0xe
 1938 0338 AC010000 		.4byte	0x1ac
 1939 033c 02       		.byte	0x2
 1940 033d 00       		.byte	0
 1941 033e 0D       		.uleb128 0xd
 1942 033f E5000000 		.4byte	0xe5
 1943 0343 4E030000 		.4byte	0x34e
 1944 0347 0E       		.uleb128 0xe
 1945 0348 AC010000 		.4byte	0x1ac
 1946 034c 02       		.byte	0x2
 1947 034d 00       		.byte	0
 1948 034e 04       		.uleb128 0x4
 1949 034f C70B0000 		.4byte	.LASF54
 1950 0353 04       		.byte	0x4
 1951 0354 5A01     		.2byte	0x15a
 1952 0356 D6020000 		.4byte	0x2d6
 1953 035a 0F       		.uleb128 0xf
 1954 035b F0       		.byte	0xf0
 1955 035c 04       		.byte	0x4
 1956 035d 6001     		.2byte	0x160
 1957 035f E6030000 		.4byte	0x3e6
 1958 0363 10       		.uleb128 0x10
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 89


 1959 0364 26090000 		.4byte	.LASF38
 1960 0368 04       		.byte	0x4
 1961 0369 6501     		.2byte	0x165
 1962 036b E6030000 		.4byte	0x3e6
 1963 036f 00       		.byte	0
 1964 0370 10       		.uleb128 0x10
 1965 0371 2E090000 		.4byte	.LASF39
 1966 0375 04       		.byte	0x4
 1967 0376 6A01     		.2byte	0x16a
 1968 0378 E6030000 		.4byte	0x3e6
 1969 037c 18       		.byte	0x18
 1970 037d 10       		.uleb128 0x10
 1971 037e 36090000 		.4byte	.LASF40
 1972 0382 04       		.byte	0x4
 1973 0383 6F01     		.2byte	0x16f
 1974 0385 E6030000 		.4byte	0x3e6
 1975 0389 30       		.byte	0x30
 1976 038a 10       		.uleb128 0x10
 1977 038b 3E090000 		.4byte	.LASF41
 1978 038f 04       		.byte	0x4
 1979 0390 7401     		.2byte	0x174
 1980 0392 E6030000 		.4byte	0x3e6
 1981 0396 48       		.byte	0x48
 1982 0397 10       		.uleb128 0x10
 1983 0398 46090000 		.4byte	.LASF42
 1984 039c 04       		.byte	0x4
 1985 039d 7901     		.2byte	0x179
 1986 039f E6030000 		.4byte	0x3e6
 1987 03a3 60       		.byte	0x60
 1988 03a4 10       		.uleb128 0x10
 1989 03a5 4E090000 		.4byte	.LASF43
 1990 03a9 04       		.byte	0x4
 1991 03aa 7E01     		.2byte	0x17e
 1992 03ac E6030000 		.4byte	0x3e6
 1993 03b0 78       		.byte	0x78
 1994 03b1 10       		.uleb128 0x10
 1995 03b2 56090000 		.4byte	.LASF44
 1996 03b6 04       		.byte	0x4
 1997 03b7 8301     		.2byte	0x183
 1998 03b9 E6030000 		.4byte	0x3e6
 1999 03bd 90       		.byte	0x90
 2000 03be 10       		.uleb128 0x10
 2001 03bf 5E090000 		.4byte	.LASF45
 2002 03c3 04       		.byte	0x4
 2003 03c4 8801     		.2byte	0x188
 2004 03c6 E6030000 		.4byte	0x3e6
 2005 03ca A8       		.byte	0xa8
 2006 03cb 10       		.uleb128 0x10
 2007 03cc 66090000 		.4byte	.LASF46
 2008 03d0 04       		.byte	0x4
 2009 03d1 8D01     		.2byte	0x18d
 2010 03d3 E6030000 		.4byte	0x3e6
 2011 03d7 C0       		.byte	0xc0
 2012 03d8 10       		.uleb128 0x10
 2013 03d9 6E090000 		.4byte	.LASF47
 2014 03dd 04       		.byte	0x4
 2015 03de 9201     		.2byte	0x192
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 90


 2016 03e0 E6030000 		.4byte	0x3e6
 2017 03e4 D8       		.byte	0xd8
 2018 03e5 00       		.byte	0
 2019 03e6 0D       		.uleb128 0xd
 2020 03e7 4E030000 		.4byte	0x34e
 2021 03eb F6030000 		.4byte	0x3f6
 2022 03ef 0E       		.uleb128 0xe
 2023 03f0 AC010000 		.4byte	0x1ac
 2024 03f4 00       		.byte	0
 2025 03f5 00       		.byte	0
 2026 03f6 04       		.uleb128 0x4
 2027 03f7 34070000 		.4byte	.LASF55
 2028 03fb 04       		.byte	0x4
 2029 03fc 9301     		.2byte	0x193
 2030 03fe 5A030000 		.4byte	0x35a
 2031 0402 12       		.uleb128 0x12
 2032 0403 B001     		.2byte	0x1b0
 2033 0405 04       		.byte	0x4
 2034 0406 9901     		.2byte	0x199
 2035 0408 FB040000 		.4byte	0x4fb
 2036 040c 10       		.uleb128 0x10
 2037 040d 0A080000 		.4byte	.LASF56
 2038 0411 04       		.byte	0x4
 2039 0412 A001     		.2byte	0x1a0
 2040 0414 77000000 		.4byte	0x77
 2041 0418 00       		.byte	0
 2042 0419 10       		.uleb128 0x10
 2043 041a EF0B0000 		.4byte	.LASF57
 2044 041e 04       		.byte	0x4
 2045 041f A501     		.2byte	0x1a5
 2046 0421 77000000 		.4byte	0x77
 2047 0425 02       		.byte	0x2
 2048 0426 10       		.uleb128 0x10
 2049 0427 5F010000 		.4byte	.LASF58
 2050 042b 04       		.byte	0x4
 2051 042c AA01     		.2byte	0x1aa
 2052 042e 77000000 		.4byte	0x77
 2053 0432 04       		.byte	0x4
 2054 0433 10       		.uleb128 0x10
 2055 0434 F9080000 		.4byte	.LASF59
 2056 0438 04       		.byte	0x4
 2057 0439 B001     		.2byte	0x1b0
 2058 043b 77000000 		.4byte	0x77
 2059 043f 06       		.byte	0x6
 2060 0440 10       		.uleb128 0x10
 2061 0441 53010000 		.4byte	.LASF60
 2062 0445 04       		.byte	0x4
 2063 0446 B501     		.2byte	0x1b5
 2064 0448 77000000 		.4byte	0x77
 2065 044c 08       		.byte	0x8
 2066 044d 10       		.uleb128 0x10
 2067 044e F0050000 		.4byte	.LASF61
 2068 0452 04       		.byte	0x4
 2069 0453 BA01     		.2byte	0x1ba
 2070 0455 C1000000 		.4byte	0xc1
 2071 0459 0C       		.byte	0xc
 2072 045a 10       		.uleb128 0x10
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 91


 2073 045b B8080000 		.4byte	.LASF62
 2074 045f 04       		.byte	0x4
 2075 0460 C001     		.2byte	0x1c0
 2076 0462 FB040000 		.4byte	0x4fb
 2077 0466 10       		.byte	0x10
 2078 0467 10       		.uleb128 0x10
 2079 0468 9C090000 		.4byte	.LASF63
 2080 046c 04       		.byte	0x4
 2081 046d C701     		.2byte	0x1c7
 2082 046f FB040000 		.4byte	0x4fb
 2083 0473 14       		.byte	0x14
 2084 0474 10       		.uleb128 0x10
 2085 0475 36080000 		.4byte	.LASF64
 2086 0479 04       		.byte	0x4
 2087 047a D701     		.2byte	0x1d7
 2088 047c 0B050000 		.4byte	0x50b
 2089 0480 18       		.byte	0x18
 2090 0481 10       		.uleb128 0x10
 2091 0482 A4060000 		.4byte	.LASF65
 2092 0486 04       		.byte	0x4
 2093 0487 DD01     		.2byte	0x1dd
 2094 0489 77000000 		.4byte	0x77
 2095 048d 22       		.byte	0x22
 2096 048e 10       		.uleb128 0x10
 2097 048f 0F040000 		.4byte	.LASF66
 2098 0493 04       		.byte	0x4
 2099 0494 E201     		.2byte	0x1e2
 2100 0496 6B000000 		.4byte	0x6b
 2101 049a 24       		.byte	0x24
 2102 049b 10       		.uleb128 0x10
 2103 049c 00000000 		.4byte	.LASF67
 2104 04a0 04       		.byte	0x4
 2105 04a1 E701     		.2byte	0x1e7
 2106 04a3 77000000 		.4byte	0x77
 2107 04a7 26       		.byte	0x26
 2108 04a8 10       		.uleb128 0x10
 2109 04a9 69060000 		.4byte	.LASF68
 2110 04ad 04       		.byte	0x4
 2111 04ae EC01     		.2byte	0x1ec
 2112 04b0 CA020000 		.4byte	0x2ca
 2113 04b4 28       		.byte	0x28
 2114 04b5 10       		.uleb128 0x10
 2115 04b6 8E030000 		.4byte	.LASF69
 2116 04ba 04       		.byte	0x4
 2117 04bb F101     		.2byte	0x1f1
 2118 04bd F6030000 		.4byte	0x3f6
 2119 04c1 B4       		.byte	0xb4
 2120 04c2 13       		.uleb128 0x13
 2121 04c3 BF000000 		.4byte	.LASF70
 2122 04c7 04       		.byte	0x4
 2123 04c8 F601     		.2byte	0x1f6
 2124 04ca 6B000000 		.4byte	0x6b
 2125 04ce A401     		.2byte	0x1a4
 2126 04d0 13       		.uleb128 0x13
 2127 04d1 AD030000 		.4byte	.LASF71
 2128 04d5 04       		.byte	0x4
 2129 04d6 FB01     		.2byte	0x1fb
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 92


 2130 04d8 6B000000 		.4byte	0x6b
 2131 04dc A501     		.2byte	0x1a5
 2132 04de 13       		.uleb128 0x13
 2133 04df F7070000 		.4byte	.LASF72
 2134 04e3 04       		.byte	0x4
 2135 04e4 0002     		.2byte	0x200
 2136 04e6 77000000 		.4byte	0x77
 2137 04ea A601     		.2byte	0x1a6
 2138 04ec 13       		.uleb128 0x13
 2139 04ed 7F060000 		.4byte	.LASF73
 2140 04f1 04       		.byte	0x4
 2141 04f2 0502     		.2byte	0x205
 2142 04f4 2E030000 		.4byte	0x32e
 2143 04f8 A801     		.2byte	0x1a8
 2144 04fa 00       		.byte	0
 2145 04fb 0D       		.uleb128 0xd
 2146 04fc 83000000 		.4byte	0x83
 2147 0500 0B050000 		.4byte	0x50b
 2148 0504 0E       		.uleb128 0xe
 2149 0505 AC010000 		.4byte	0x1ac
 2150 0509 00       		.byte	0
 2151 050a 00       		.byte	0
 2152 050b 0D       		.uleb128 0xd
 2153 050c 6B000000 		.4byte	0x6b
 2154 0510 1B050000 		.4byte	0x51b
 2155 0514 0E       		.uleb128 0xe
 2156 0515 AC010000 		.4byte	0x1ac
 2157 0519 09       		.byte	0x9
 2158 051a 00       		.byte	0
 2159 051b 04       		.uleb128 0x4
 2160 051c DA050000 		.4byte	.LASF74
 2161 0520 04       		.byte	0x4
 2162 0521 0602     		.2byte	0x206
 2163 0523 02040000 		.4byte	0x402
 2164 0527 0F       		.uleb128 0xf
 2165 0528 1C       		.byte	0x1c
 2166 0529 04       		.byte	0x4
 2167 052a 0C02     		.2byte	0x20c
 2168 052c A6050000 		.4byte	0x5a6
 2169 0530 10       		.uleb128 0x10
 2170 0531 F2060000 		.4byte	.LASF75
 2171 0535 04       		.byte	0x4
 2172 0536 1102     		.2byte	0x211
 2173 0538 A6050000 		.4byte	0x5a6
 2174 053c 00       		.byte	0
 2175 053d 10       		.uleb128 0x10
 2176 053e 00060000 		.4byte	.LASF76
 2177 0542 04       		.byte	0x4
 2178 0543 1602     		.2byte	0x216
 2179 0545 A6050000 		.4byte	0x5a6
 2180 0549 04       		.byte	0x4
 2181 054a 10       		.uleb128 0x10
 2182 054b 30040000 		.4byte	.LASF77
 2183 054f 04       		.byte	0x4
 2184 0550 1B02     		.2byte	0x21b
 2185 0552 A6050000 		.4byte	0x5a6
 2186 0556 08       		.byte	0x8
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 93


 2187 0557 10       		.uleb128 0x10
 2188 0558 02090000 		.4byte	.LASF78
 2189 055c 04       		.byte	0x4
 2190 055d 2002     		.2byte	0x220
 2191 055f A6050000 		.4byte	0x5a6
 2192 0563 0C       		.byte	0xc
 2193 0564 10       		.uleb128 0x10
 2194 0565 DE0A0000 		.4byte	.LASF79
 2195 0569 04       		.byte	0x4
 2196 056a 2502     		.2byte	0x225
 2197 056c 83000000 		.4byte	0x83
 2198 0570 10       		.byte	0x10
 2199 0571 10       		.uleb128 0x10
 2200 0572 53070000 		.4byte	.LASF80
 2201 0576 04       		.byte	0x4
 2202 0577 2A02     		.2byte	0x22a
 2203 0579 83000000 		.4byte	0x83
 2204 057d 14       		.byte	0x14
 2205 057e 10       		.uleb128 0x10
 2206 057f AE050000 		.4byte	.LASF81
 2207 0583 04       		.byte	0x4
 2208 0584 2F02     		.2byte	0x22f
 2209 0586 6B000000 		.4byte	0x6b
 2210 058a 18       		.byte	0x18
 2211 058b 10       		.uleb128 0x10
 2212 058c F6090000 		.4byte	.LASF82
 2213 0590 04       		.byte	0x4
 2214 0591 3402     		.2byte	0x234
 2215 0593 6B000000 		.4byte	0x6b
 2216 0597 19       		.byte	0x19
 2217 0598 10       		.uleb128 0x10
 2218 0599 CB020000 		.4byte	.LASF83
 2219 059d 04       		.byte	0x4
 2220 059e 3902     		.2byte	0x239
 2221 05a0 6B000000 		.4byte	0x6b
 2222 05a4 1A       		.byte	0x1a
 2223 05a5 00       		.byte	0
 2224 05a6 06       		.uleb128 0x6
 2225 05a7 04       		.byte	0x4
 2226 05a8 B5000000 		.4byte	0xb5
 2227 05ac 04       		.uleb128 0x4
 2228 05ad 540B0000 		.4byte	.LASF84
 2229 05b1 04       		.byte	0x4
 2230 05b2 3A02     		.2byte	0x23a
 2231 05b4 27050000 		.4byte	0x527
 2232 05b8 0F       		.uleb128 0xf
 2233 05b9 1C       		.byte	0x1c
 2234 05ba 04       		.byte	0x4
 2235 05bb 6D02     		.2byte	0x26d
 2236 05bd 37060000 		.4byte	0x637
 2237 05c1 10       		.uleb128 0x10
 2238 05c2 72060000 		.4byte	.LASF85
 2239 05c6 04       		.byte	0x4
 2240 05c7 7602     		.2byte	0x276
 2241 05c9 37060000 		.4byte	0x637
 2242 05cd 00       		.byte	0
 2243 05ce 10       		.uleb128 0x10
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 94


 2244 05cf C20A0000 		.4byte	.LASF86
 2245 05d3 04       		.byte	0x4
 2246 05d4 7D02     		.2byte	0x27d
 2247 05d6 3E060000 		.4byte	0x63e
 2248 05da 04       		.byte	0x4
 2249 05db 10       		.uleb128 0x10
 2250 05dc 13080000 		.4byte	.LASF87
 2251 05e0 04       		.byte	0x4
 2252 05e1 8302     		.2byte	0x283
 2253 05e3 40060000 		.4byte	0x640
 2254 05e7 08       		.byte	0x8
 2255 05e8 10       		.uleb128 0x10
 2256 05e9 0D070000 		.4byte	.LASF88
 2257 05ed 04       		.byte	0x4
 2258 05ee 8902     		.2byte	0x289
 2259 05f0 3E060000 		.4byte	0x63e
 2260 05f4 0C       		.byte	0xc
 2261 05f5 10       		.uleb128 0x10
 2262 05f6 270A0000 		.4byte	.LASF89
 2263 05fa 04       		.byte	0x4
 2264 05fb 9002     		.2byte	0x290
 2265 05fd 46060000 		.4byte	0x646
 2266 0601 10       		.byte	0x10
 2267 0602 10       		.uleb128 0x10
 2268 0603 AF0A0000 		.4byte	.LASF90
 2269 0607 04       		.byte	0x4
 2270 0608 9502     		.2byte	0x295
 2271 060a 83000000 		.4byte	0x83
 2272 060e 14       		.byte	0x14
 2273 060f 10       		.uleb128 0x10
 2274 0610 1B050000 		.4byte	.LASF91
 2275 0614 04       		.byte	0x4
 2276 0615 9C02     		.2byte	0x29c
 2277 0617 77000000 		.4byte	0x77
 2278 061b 18       		.byte	0x18
 2279 061c 10       		.uleb128 0x10
 2280 061d BD030000 		.4byte	.LASF92
 2281 0621 04       		.byte	0x4
 2282 0622 A302     		.2byte	0x2a3
 2283 0624 6B000000 		.4byte	0x6b
 2284 0628 1A       		.byte	0x1a
 2285 0629 10       		.uleb128 0x10
 2286 062a 94090000 		.4byte	.LASF93
 2287 062e 04       		.byte	0x4
 2288 062f AD02     		.2byte	0x2ad
 2289 0631 6B000000 		.4byte	0x6b
 2290 0635 1B       		.byte	0x1b
 2291 0636 00       		.byte	0
 2292 0637 06       		.uleb128 0x6
 2293 0638 04       		.byte	0x4
 2294 0639 3D060000 		.4byte	0x63d
 2295 063d 14       		.uleb128 0x14
 2296 063e 15       		.uleb128 0x15
 2297 063f 04       		.byte	0x4
 2298 0640 06       		.uleb128 0x6
 2299 0641 04       		.byte	0x4
 2300 0642 4E030000 		.4byte	0x34e
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 95


 2301 0646 06       		.uleb128 0x6
 2302 0647 04       		.byte	0x4
 2303 0648 6B000000 		.4byte	0x6b
 2304 064c 04       		.uleb128 0x4
 2305 064d 81000000 		.4byte	.LASF94
 2306 0651 04       		.byte	0x4
 2307 0652 AE02     		.2byte	0x2ae
 2308 0654 B8050000 		.4byte	0x5b8
 2309 0658 12       		.uleb128 0x12
 2310 0659 1801     		.2byte	0x118
 2311 065b 04       		.byte	0x4
 2312 065c B402     		.2byte	0x2b4
 2313 065e 70060000 		.4byte	0x670
 2314 0662 10       		.uleb128 0x10
 2315 0663 650C0000 		.4byte	.LASF95
 2316 0667 04       		.byte	0x4
 2317 0668 B902     		.2byte	0x2b9
 2318 066a 70060000 		.4byte	0x670
 2319 066e 00       		.byte	0
 2320 066f 00       		.byte	0
 2321 0670 0D       		.uleb128 0xd
 2322 0671 4C060000 		.4byte	0x64c
 2323 0675 80060000 		.4byte	0x680
 2324 0679 0E       		.uleb128 0xe
 2325 067a AC010000 		.4byte	0x1ac
 2326 067e 09       		.byte	0x9
 2327 067f 00       		.byte	0
 2328 0680 04       		.uleb128 0x4
 2329 0681 1E080000 		.4byte	.LASF96
 2330 0685 04       		.byte	0x4
 2331 0686 BA02     		.2byte	0x2ba
 2332 0688 58060000 		.4byte	0x658
 2333 068c 02       		.uleb128 0x2
 2334 068d 08       		.byte	0x8
 2335 068e 04       		.byte	0x4
 2336 068f C8060000 		.4byte	.LASF97
 2337 0693 16       		.uleb128 0x16
 2338 0694 D6040000 		.4byte	.LASF102
 2339 0698 01       		.byte	0x1
 2340 0699 BE08     		.2byte	0x8be
 2341 069b 00000000 		.4byte	.LFB20
 2342 069f 06000000 		.4byte	.LFE20-.LFB20
 2343 06a3 01       		.uleb128 0x1
 2344 06a4 9C       		.byte	0x9c
 2345 06a5 E0060000 		.4byte	0x6e0
 2346 06a9 17       		.uleb128 0x17
 2347 06aa 9F070000 		.4byte	.LASF98
 2348 06ae 01       		.byte	0x1
 2349 06af BE08     		.2byte	0x8be
 2350 06b1 83000000 		.4byte	0x83
 2351 06b5 01       		.uleb128 0x1
 2352 06b6 50       		.byte	0x50
 2353 06b7 17       		.uleb128 0x17
 2354 06b8 93020000 		.4byte	.LASF99
 2355 06bc 01       		.byte	0x1
 2356 06bd BE08     		.2byte	0x8be
 2357 06bf E0060000 		.4byte	0x6e0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 96


 2358 06c3 01       		.uleb128 0x1
 2359 06c4 51       		.byte	0x51
 2360 06c5 18       		.uleb128 0x18
 2361 06c6 C6030000 		.4byte	.LASF100
 2362 06ca 01       		.byte	0x1
 2363 06cb C008     		.2byte	0x8c0
 2364 06cd 6B000000 		.4byte	0x6b
 2365 06d1 05       		.byte	0x5
 2366 06d2 18       		.uleb128 0x18
 2367 06d3 C5010000 		.4byte	.LASF101
 2368 06d7 01       		.byte	0x1
 2369 06d8 C108     		.2byte	0x8c1
 2370 06da 6B000000 		.4byte	0x6b
 2371 06de 00       		.byte	0
 2372 06df 00       		.byte	0
 2373 06e0 06       		.uleb128 0x6
 2374 06e1 04       		.byte	0x4
 2375 06e2 B3010000 		.4byte	0x1b3
 2376 06e6 16       		.uleb128 0x16
 2377 06e7 65000000 		.4byte	.LASF103
 2378 06eb 01       		.byte	0x1
 2379 06ec FA02     		.2byte	0x2fa
 2380 06ee 00000000 		.4byte	.LFB7
 2381 06f2 24000000 		.4byte	.LFE7-.LFB7
 2382 06f6 01       		.uleb128 0x1
 2383 06f7 9C       		.byte	0x9c
 2384 06f8 16070000 		.4byte	0x716
 2385 06fc 19       		.uleb128 0x19
 2386 06fd 830B0000 		.4byte	.LASF104
 2387 0701 01       		.byte	0x1
 2388 0702 FC02     		.2byte	0x2fc
 2389 0704 83000000 		.4byte	0x83
 2390 0708 00000000 		.4byte	.LLST0
 2391 070c 1A       		.uleb128 0x1a
 2392 070d 1A000000 		.4byte	.LVL5
 2393 0711 D70E0000 		.4byte	0xed7
 2394 0715 00       		.byte	0
 2395 0716 1B       		.uleb128 0x1b
 2396 0717 B3010000 		.4byte	.LASF182
 2397 071b 01       		.byte	0x1
 2398 071c E9       		.byte	0xe9
 2399 071d 83000000 		.4byte	0x83
 2400 0721 00000000 		.4byte	.LFB1
 2401 0725 10000000 		.4byte	.LFE1-.LFB1
 2402 0729 01       		.uleb128 0x1
 2403 072a 9C       		.byte	0x9c
 2404 072b 1C       		.uleb128 0x1c
 2405 072c 6D030000 		.4byte	.LASF107
 2406 0730 01       		.byte	0x1
 2407 0731 1D01     		.2byte	0x11d
 2408 0733 A4000000 		.4byte	0xa4
 2409 0737 00000000 		.4byte	.LFB2
 2410 073b 40000000 		.4byte	.LFE2-.LFB2
 2411 073f 01       		.uleb128 0x1
 2412 0740 9C       		.byte	0x9c
 2413 0741 6F070000 		.4byte	0x76f
 2414 0745 1D       		.uleb128 0x1d
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 97


 2415 0746 250C0000 		.4byte	.LASF105
 2416 074a 01       		.byte	0x1
 2417 074b 1D01     		.2byte	0x11d
 2418 074d 83000000 		.4byte	0x83
 2419 0751 13000000 		.4byte	.LLST1
 2420 0755 19       		.uleb128 0x19
 2421 0756 F80B0000 		.4byte	.LASF106
 2422 075a 01       		.byte	0x1
 2423 075b 1F01     		.2byte	0x11f
 2424 075d A4000000 		.4byte	0xa4
 2425 0761 34000000 		.4byte	.LLST2
 2426 0765 1A       		.uleb128 0x1a
 2427 0766 38000000 		.4byte	.LVL8
 2428 076a E30E0000 		.4byte	0xee3
 2429 076e 00       		.byte	0
 2430 076f 1C       		.uleb128 0x1c
 2431 0770 C3070000 		.4byte	.LASF108
 2432 0774 01       		.byte	0x1
 2433 0775 7001     		.2byte	0x170
 2434 0777 A4000000 		.4byte	0xa4
 2435 077b 00000000 		.4byte	.LFB3
 2436 077f 2C000000 		.4byte	.LFE3-.LFB3
 2437 0783 01       		.uleb128 0x1
 2438 0784 9C       		.byte	0x9c
 2439 0785 A3070000 		.4byte	0x7a3
 2440 0789 19       		.uleb128 0x19
 2441 078a 9C000000 		.4byte	.LASF109
 2442 078e 01       		.byte	0x1
 2443 078f 7201     		.2byte	0x172
 2444 0791 A4000000 		.4byte	0xa4
 2445 0795 52000000 		.4byte	.LLST3
 2446 0799 1A       		.uleb128 0x1a
 2447 079a 16000000 		.4byte	.LVL11
 2448 079e EF0E0000 		.4byte	0xeef
 2449 07a2 00       		.byte	0
 2450 07a3 1C       		.uleb128 0x1c
 2451 07a4 94050000 		.4byte	.LASF110
 2452 07a8 01       		.byte	0x1
 2453 07a9 AE01     		.2byte	0x1ae
 2454 07ab A4000000 		.4byte	0xa4
 2455 07af 00000000 		.4byte	.LFB4
 2456 07b3 48000000 		.4byte	.LFE4-.LFB4
 2457 07b7 01       		.uleb128 0x1
 2458 07b8 9C       		.byte	0x9c
 2459 07b9 FB070000 		.4byte	0x7fb
 2460 07bd 19       		.uleb128 0x19
 2461 07be 9C000000 		.4byte	.LASF109
 2462 07c2 01       		.byte	0x1
 2463 07c3 B001     		.2byte	0x1b0
 2464 07c5 A4000000 		.4byte	0xa4
 2465 07c9 71000000 		.4byte	.LLST4
 2466 07cd 19       		.uleb128 0x19
 2467 07ce 9F070000 		.4byte	.LASF98
 2468 07d2 01       		.byte	0x1
 2469 07d3 B201     		.2byte	0x1b2
 2470 07d5 83000000 		.4byte	0x83
 2471 07d9 BF000000 		.4byte	.LLST5
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 98


 2472 07dd 1E       		.uleb128 0x1e
 2473 07de 18000000 		.4byte	.LVL16
 2474 07e2 2B070000 		.4byte	0x72b
 2475 07e6 F1070000 		.4byte	0x7f1
 2476 07ea 1F       		.uleb128 0x1f
 2477 07eb 01       		.uleb128 0x1
 2478 07ec 50       		.byte	0x50
 2479 07ed 02       		.uleb128 0x2
 2480 07ee 74       		.byte	0x74
 2481 07ef 00       		.sleb128 0
 2482 07f0 00       		.byte	0
 2483 07f1 1A       		.uleb128 0x1a
 2484 07f2 32000000 		.4byte	.LVL17
 2485 07f6 6F070000 		.4byte	0x76f
 2486 07fa 00       		.byte	0
 2487 07fb 20       		.uleb128 0x20
 2488 07fc BF040000 		.4byte	.LASF117
 2489 0800 01       		.byte	0x1
 2490 0801 8902     		.2byte	0x289
 2491 0803 00000000 		.4byte	.LFB6
 2492 0807 A0000000 		.4byte	.LFE6-.LFB6
 2493 080b 01       		.uleb128 0x1
 2494 080c 9C       		.byte	0x9c
 2495 080d C5080000 		.4byte	0x8c5
 2496 0811 1D       		.uleb128 0x1d
 2497 0812 250C0000 		.4byte	.LASF105
 2498 0816 01       		.byte	0x1
 2499 0817 8902     		.2byte	0x289
 2500 0819 83000000 		.4byte	0x83
 2501 081d D2000000 		.4byte	.LLST6
 2502 0821 1D       		.uleb128 0x1d
 2503 0822 0A000000 		.4byte	.LASF111
 2504 0826 01       		.byte	0x1
 2505 0827 8902     		.2byte	0x289
 2506 0829 83000000 		.4byte	0x83
 2507 082d F3000000 		.4byte	.LLST7
 2508 0831 1D       		.uleb128 0x1d
 2509 0832 CE0A0000 		.4byte	.LASF112
 2510 0836 01       		.byte	0x1
 2511 0837 8902     		.2byte	0x289
 2512 0839 83000000 		.4byte	0x83
 2513 083d 14010000 		.4byte	.LLST8
 2514 0841 18       		.uleb128 0x18
 2515 0842 8B020000 		.4byte	.LASF113
 2516 0846 01       		.byte	0x1
 2517 0847 8B02     		.2byte	0x28b
 2518 0849 83000000 		.4byte	0x83
 2519 084d 01       		.byte	0x1
 2520 084e 19       		.uleb128 0x19
 2521 084f D40A0000 		.4byte	.LASF114
 2522 0853 01       		.byte	0x1
 2523 0854 8C02     		.2byte	0x28c
 2524 0856 83000000 		.4byte	0x83
 2525 085a 40010000 		.4byte	.LLST9
 2526 085e 19       		.uleb128 0x19
 2527 085f A4010000 		.4byte	.LASF115
 2528 0863 01       		.byte	0x1
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 99


 2529 0864 8D02     		.2byte	0x28d
 2530 0866 6B000000 		.4byte	0x6b
 2531 086a 5F010000 		.4byte	.LLST10
 2532 086e 19       		.uleb128 0x19
 2533 086f BC0A0000 		.4byte	.LASF116
 2534 0873 01       		.byte	0x1
 2535 0874 8E02     		.2byte	0x28e
 2536 0876 C5080000 		.4byte	0x8c5
 2537 087a 88010000 		.4byte	.LLST11
 2538 087e 1A       		.uleb128 0x1a
 2539 087f 1E000000 		.4byte	.LVL27
 2540 0883 FB0E0000 		.4byte	0xefb
 2541 0887 1A       		.uleb128 0x1a
 2542 0888 3E000000 		.4byte	.LVL28
 2543 088c 060F0000 		.4byte	0xf06
 2544 0890 1A       		.uleb128 0x1a
 2545 0891 50000000 		.4byte	.LVL29
 2546 0895 FB0E0000 		.4byte	0xefb
 2547 0899 1A       		.uleb128 0x1a
 2548 089a 70000000 		.4byte	.LVL30
 2549 089e 060F0000 		.4byte	0xf06
 2550 08a2 1A       		.uleb128 0x1a
 2551 08a3 76000000 		.4byte	.LVL31
 2552 08a7 FB0E0000 		.4byte	0xefb
 2553 08ab 1A       		.uleb128 0x1a
 2554 08ac 88000000 		.4byte	.LVL32
 2555 08b0 060F0000 		.4byte	0xf06
 2556 08b4 21       		.uleb128 0x21
 2557 08b5 90000000 		.4byte	.LVL33
 2558 08b9 110F0000 		.4byte	0xf11
 2559 08bd 1F       		.uleb128 0x1f
 2560 08be 01       		.uleb128 0x1
 2561 08bf 50       		.byte	0x50
 2562 08c0 02       		.uleb128 0x2
 2563 08c1 74       		.byte	0x74
 2564 08c2 00       		.sleb128 0
 2565 08c3 00       		.byte	0
 2566 08c4 00       		.byte	0
 2567 08c5 06       		.uleb128 0x6
 2568 08c6 04       		.byte	0x4
 2569 08c7 CB080000 		.4byte	0x8cb
 2570 08cb 22       		.uleb128 0x22
 2571 08cc AC050000 		.4byte	0x5ac
 2572 08d0 20       		.uleb128 0x20
 2573 08d1 5A050000 		.4byte	.LASF118
 2574 08d5 01       		.byte	0x1
 2575 08d6 8503     		.2byte	0x385
 2576 08d8 00000000 		.4byte	.LFB8
 2577 08dc 3C000000 		.4byte	.LFE8-.LFB8
 2578 08e0 01       		.uleb128 0x1
 2579 08e1 9C       		.byte	0x9c
 2580 08e2 09090000 		.4byte	0x909
 2581 08e6 1D       		.uleb128 0x1d
 2582 08e7 0E020000 		.4byte	.LASF119
 2583 08eb 01       		.byte	0x1
 2584 08ec 8503     		.2byte	0x385
 2585 08ee 1C010000 		.4byte	0x11c
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 100


 2586 08f2 9B010000 		.4byte	.LLST12
 2587 08f6 1A       		.uleb128 0x1a
 2588 08f7 14000000 		.4byte	.LVL40
 2589 08fb E6060000 		.4byte	0x6e6
 2590 08ff 1A       		.uleb128 0x1a
 2591 0900 1C000000 		.4byte	.LVL41
 2592 0904 1D0F0000 		.4byte	0xf1d
 2593 0908 00       		.byte	0
 2594 0909 20       		.uleb128 0x20
 2595 090a 19010000 		.4byte	.LASF120
 2596 090e 01       		.byte	0x1
 2597 090f E803     		.2byte	0x3e8
 2598 0911 00000000 		.4byte	.LFB9
 2599 0915 40000000 		.4byte	.LFE9-.LFB9
 2600 0919 01       		.uleb128 0x1
 2601 091a 9C       		.byte	0x9c
 2602 091b 50090000 		.4byte	0x950
 2603 091f 19       		.uleb128 0x19
 2604 0920 BC0A0000 		.4byte	.LASF116
 2605 0924 01       		.byte	0x1
 2606 0925 EA03     		.2byte	0x3ea
 2607 0927 C5080000 		.4byte	0x8c5
 2608 092b BC010000 		.4byte	.LLST13
 2609 092f 19       		.uleb128 0x19
 2610 0930 BB020000 		.4byte	.LASF121
 2611 0934 01       		.byte	0x1
 2612 0935 EB03     		.2byte	0x3eb
 2613 0937 83000000 		.4byte	0x83
 2614 093b CF010000 		.4byte	.LLST14
 2615 093f 19       		.uleb128 0x19
 2616 0940 89010000 		.4byte	.LASF122
 2617 0944 01       		.byte	0x1
 2618 0945 EC03     		.2byte	0x3ec
 2619 0947 83000000 		.4byte	0x83
 2620 094b EE010000 		.4byte	.LLST15
 2621 094f 00       		.byte	0
 2622 0950 20       		.uleb128 0x20
 2623 0951 2E0C0000 		.4byte	.LASF123
 2624 0955 01       		.byte	0x1
 2625 0956 6204     		.2byte	0x462
 2626 0958 00000000 		.4byte	.LFB10
 2627 095c 78000000 		.4byte	.LFE10-.LFB10
 2628 0960 01       		.uleb128 0x1
 2629 0961 9C       		.byte	0x9c
 2630 0962 89090000 		.4byte	0x989
 2631 0966 19       		.uleb128 0x19
 2632 0967 40080000 		.4byte	.LASF124
 2633 096b 01       		.byte	0x1
 2634 096c 6A04     		.2byte	0x46a
 2635 096e A4000000 		.4byte	0xa4
 2636 0972 17020000 		.4byte	.LLST16
 2637 0976 1A       		.uleb128 0x1a
 2638 0977 14000000 		.4byte	.LVL54
 2639 097b 2B070000 		.4byte	0x72b
 2640 097f 1A       		.uleb128 0x1a
 2641 0980 2A000000 		.4byte	.LVL56
 2642 0984 6F070000 		.4byte	0x76f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 101


 2643 0988 00       		.byte	0
 2644 0989 20       		.uleb128 0x20
 2645 098a 36040000 		.4byte	.LASF125
 2646 098e 01       		.byte	0x1
 2647 098f AF04     		.2byte	0x4af
 2648 0991 00000000 		.4byte	.LFB11
 2649 0995 08000000 		.4byte	.LFE11-.LFB11
 2650 0999 01       		.uleb128 0x1
 2651 099a 9C       		.byte	0x9c
 2652 099b C1090000 		.4byte	0x9c1
 2653 099f 1D       		.uleb128 0x1d
 2654 09a0 170A0000 		.4byte	.LASF126
 2655 09a4 01       		.byte	0x1
 2656 09a5 AF04     		.2byte	0x4af
 2657 09a7 C6000000 		.4byte	0xc6
 2658 09ab 62020000 		.4byte	.LLST17
 2659 09af 21       		.uleb128 0x21
 2660 09b0 06000000 		.4byte	.LVL63
 2661 09b4 290F0000 		.4byte	0xf29
 2662 09b8 1F       		.uleb128 0x1f
 2663 09b9 01       		.uleb128 0x1
 2664 09ba 50       		.byte	0x50
 2665 09bb 03       		.uleb128 0x3
 2666 09bc F3       		.byte	0xf3
 2667 09bd 01       		.uleb128 0x1
 2668 09be 50       		.byte	0x50
 2669 09bf 00       		.byte	0
 2670 09c0 00       		.byte	0
 2671 09c1 20       		.uleb128 0x20
 2672 09c2 F8040000 		.4byte	.LASF127
 2673 09c6 01       		.byte	0x1
 2674 09c7 C604     		.2byte	0x4c6
 2675 09c9 00000000 		.4byte	.LFB12
 2676 09cd 30000000 		.4byte	.LFE12-.LFB12
 2677 09d1 01       		.uleb128 0x1
 2678 09d2 9C       		.byte	0x9c
 2679 09d3 E8090000 		.4byte	0x9e8
 2680 09d7 1D       		.uleb128 0x1d
 2681 09d8 27050000 		.4byte	.LASF128
 2682 09dc 01       		.byte	0x1
 2683 09dd C604     		.2byte	0x4c6
 2684 09df 83000000 		.4byte	0x83
 2685 09e3 83020000 		.4byte	.LLST18
 2686 09e7 00       		.byte	0
 2687 09e8 20       		.uleb128 0x20
 2688 09e9 39060000 		.4byte	.LASF129
 2689 09ed 01       		.byte	0x1
 2690 09ee 0A05     		.2byte	0x50a
 2691 09f0 00000000 		.4byte	.LFB13
 2692 09f4 14000000 		.4byte	.LFE13-.LFB13
 2693 09f8 01       		.uleb128 0x1
 2694 09f9 9C       		.byte	0x9c
 2695 09fa 1F0A0000 		.4byte	0xa1f
 2696 09fe 1D       		.uleb128 0x1d
 2697 09ff 120B0000 		.4byte	.LASF130
 2698 0a03 01       		.byte	0x1
 2699 0a04 0A05     		.2byte	0x50a
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 102


 2700 0a06 83000000 		.4byte	0x83
 2701 0a0a B1020000 		.4byte	.LLST19
 2702 0a0e 19       		.uleb128 0x19
 2703 0a0f 830B0000 		.4byte	.LASF104
 2704 0a13 01       		.byte	0x1
 2705 0a14 0D05     		.2byte	0x50d
 2706 0a16 83000000 		.4byte	0x83
 2707 0a1a DF020000 		.4byte	.LLST20
 2708 0a1e 00       		.byte	0
 2709 0a1f 20       		.uleb128 0x20
 2710 0a20 C3080000 		.4byte	.LASF131
 2711 0a24 01       		.byte	0x1
 2712 0a25 5E05     		.2byte	0x55e
 2713 0a27 00000000 		.4byte	.LFB14
 2714 0a2b 12000000 		.4byte	.LFE14-.LFB14
 2715 0a2f 01       		.uleb128 0x1
 2716 0a30 9C       		.byte	0x9c
 2717 0a31 7B0A0000 		.4byte	0xa7b
 2718 0a35 1D       		.uleb128 0x1d
 2719 0a36 120B0000 		.4byte	.LASF130
 2720 0a3a 01       		.byte	0x1
 2721 0a3b 5E05     		.2byte	0x55e
 2722 0a3d 83000000 		.4byte	0x83
 2723 0a41 08030000 		.4byte	.LLST21
 2724 0a45 1D       		.uleb128 0x1d
 2725 0a46 27050000 		.4byte	.LASF128
 2726 0a4a 01       		.byte	0x1
 2727 0a4b 5E05     		.2byte	0x55e
 2728 0a4d 83000000 		.4byte	0x83
 2729 0a51 34030000 		.4byte	.LLST22
 2730 0a55 1E       		.uleb128 0x1e
 2731 0a56 0A000000 		.4byte	.LVL75
 2732 0a5a C1090000 		.4byte	0x9c1
 2733 0a5e 6A0A0000 		.4byte	0xa6a
 2734 0a62 1F       		.uleb128 0x1f
 2735 0a63 01       		.uleb128 0x1
 2736 0a64 50       		.byte	0x50
 2737 0a65 03       		.uleb128 0x3
 2738 0a66 F3       		.byte	0xf3
 2739 0a67 01       		.uleb128 0x1
 2740 0a68 51       		.byte	0x51
 2741 0a69 00       		.byte	0
 2742 0a6a 21       		.uleb128 0x21
 2743 0a6b 10000000 		.4byte	.LVL76
 2744 0a6f E8090000 		.4byte	0x9e8
 2745 0a73 1F       		.uleb128 0x1f
 2746 0a74 01       		.uleb128 0x1
 2747 0a75 50       		.byte	0x50
 2748 0a76 02       		.uleb128 0x2
 2749 0a77 74       		.byte	0x74
 2750 0a78 00       		.sleb128 0
 2751 0a79 00       		.byte	0
 2752 0a7a 00       		.byte	0
 2753 0a7b 1C       		.uleb128 0x1c
 2754 0a7c F3010000 		.4byte	.LASF132
 2755 0a80 01       		.byte	0x1
 2756 0a81 9205     		.2byte	0x592
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 103


 2757 0a83 A4000000 		.4byte	0xa4
 2758 0a87 00000000 		.4byte	.LFB15
 2759 0a8b 1C000000 		.4byte	.LFE15-.LFB15
 2760 0a8f 01       		.uleb128 0x1
 2761 0a90 9C       		.byte	0x9c
 2762 0a91 CD0A0000 		.4byte	0xacd
 2763 0a95 1D       		.uleb128 0x1d
 2764 0a96 250C0000 		.4byte	.LASF105
 2765 0a9a 01       		.byte	0x1
 2766 0a9b 9205     		.2byte	0x592
 2767 0a9d 83000000 		.4byte	0x83
 2768 0aa1 55030000 		.4byte	.LLST23
 2769 0aa5 19       		.uleb128 0x19
 2770 0aa6 59060000 		.4byte	.LASF133
 2771 0aaa 01       		.byte	0x1
 2772 0aab 9405     		.2byte	0x594
 2773 0aad A4000000 		.4byte	0xa4
 2774 0ab1 97030000 		.4byte	.LLST24
 2775 0ab5 21       		.uleb128 0x21
 2776 0ab6 1A000000 		.4byte	.LVL84
 2777 0aba 340F0000 		.4byte	0xf34
 2778 0abe 1F       		.uleb128 0x1f
 2779 0abf 01       		.uleb128 0x1
 2780 0ac0 50       		.byte	0x50
 2781 0ac1 03       		.uleb128 0x3
 2782 0ac2 F3       		.byte	0xf3
 2783 0ac3 01       		.uleb128 0x1
 2784 0ac4 50       		.byte	0x50
 2785 0ac5 1F       		.uleb128 0x1f
 2786 0ac6 01       		.uleb128 0x1
 2787 0ac7 51       		.byte	0x51
 2788 0ac8 02       		.uleb128 0x2
 2789 0ac9 08       		.byte	0x8
 2790 0aca 55       		.byte	0x55
 2791 0acb 00       		.byte	0
 2792 0acc 00       		.byte	0
 2793 0acd 1C       		.uleb128 0x1c
 2794 0ace 5F0A0000 		.4byte	.LASF134
 2795 0ad2 01       		.byte	0x1
 2796 0ad3 0306     		.2byte	0x603
 2797 0ad5 A4000000 		.4byte	0xa4
 2798 0ad9 00000000 		.4byte	.LFB16
 2799 0add 1A000000 		.4byte	.LFE16-.LFB16
 2800 0ae1 01       		.uleb128 0x1
 2801 0ae2 9C       		.byte	0x9c
 2802 0ae3 180B0000 		.4byte	0xb18
 2803 0ae7 19       		.uleb128 0x19
 2804 0ae8 59060000 		.4byte	.LASF133
 2805 0aec 01       		.byte	0x1
 2806 0aed 0506     		.2byte	0x605
 2807 0aef A4000000 		.4byte	0xa4
 2808 0af3 C1030000 		.4byte	.LLST25
 2809 0af7 19       		.uleb128 0x19
 2810 0af8 9F070000 		.4byte	.LASF98
 2811 0afc 01       		.byte	0x1
 2812 0afd 0606     		.2byte	0x606
 2813 0aff 83000000 		.4byte	0x83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 104


 2814 0b03 EB030000 		.4byte	.LLST26
 2815 0b07 21       		.uleb128 0x21
 2816 0b08 0E000000 		.4byte	.LVL87
 2817 0b0c 7B0A0000 		.4byte	0xa7b
 2818 0b10 1F       		.uleb128 0x1f
 2819 0b11 01       		.uleb128 0x1
 2820 0b12 50       		.byte	0x50
 2821 0b13 02       		.uleb128 0x2
 2822 0b14 74       		.byte	0x74
 2823 0b15 00       		.sleb128 0
 2824 0b16 00       		.byte	0
 2825 0b17 00       		.byte	0
 2826 0b18 20       		.uleb128 0x20
 2827 0b19 84070000 		.4byte	.LASF135
 2828 0b1d 01       		.byte	0x1
 2829 0b1e B507     		.2byte	0x7b5
 2830 0b20 00000000 		.4byte	.LFB17
 2831 0b24 14000000 		.4byte	.LFE17-.LFB17
 2832 0b28 01       		.uleb128 0x1
 2833 0b29 9C       		.byte	0x9c
 2834 0b2a 3F0B0000 		.4byte	0xb3f
 2835 0b2e 1D       		.uleb128 0x1d
 2836 0b2f 09040000 		.4byte	.LASF136
 2837 0b33 01       		.byte	0x1
 2838 0b34 B507     		.2byte	0x7b5
 2839 0b36 83000000 		.4byte	0x83
 2840 0b3a 0A040000 		.4byte	.LLST27
 2841 0b3e 00       		.byte	0
 2842 0b3f 20       		.uleb128 0x20
 2843 0b40 CF000000 		.4byte	.LASF137
 2844 0b44 01       		.byte	0x1
 2845 0b45 CA07     		.2byte	0x7ca
 2846 0b47 00000000 		.4byte	.LFB18
 2847 0b4b 74000000 		.4byte	.LFE18-.LFB18
 2848 0b4f 01       		.uleb128 0x1
 2849 0b50 9C       		.byte	0x9c
 2850 0b51 FC0B0000 		.4byte	0xbfc
 2851 0b55 1D       		.uleb128 0x1d
 2852 0b56 860A0000 		.4byte	.LASF138
 2853 0b5a 01       		.byte	0x1
 2854 0b5b CA07     		.2byte	0x7ca
 2855 0b5d 83000000 		.4byte	0x83
 2856 0b61 2B040000 		.4byte	.LLST28
 2857 0b65 19       		.uleb128 0x19
 2858 0b66 E10B0000 		.4byte	.LASF139
 2859 0b6a 01       		.byte	0x1
 2860 0b6b CC07     		.2byte	0x7cc
 2861 0b6d 83000000 		.4byte	0x83
 2862 0b71 4C040000 		.4byte	.LLST29
 2863 0b75 19       		.uleb128 0x19
 2864 0b76 8F060000 		.4byte	.LASF140
 2865 0b7a 01       		.byte	0x1
 2866 0b7b CD07     		.2byte	0x7cd
 2867 0b7d 83000000 		.4byte	0x83
 2868 0b81 5F040000 		.4byte	.LLST30
 2869 0b85 19       		.uleb128 0x19
 2870 0b86 BC060000 		.4byte	.LASF141
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 105


 2871 0b8a 01       		.byte	0x1
 2872 0b8b CE07     		.2byte	0x7ce
 2873 0b8d 83000000 		.4byte	0x83
 2874 0b91 8A040000 		.4byte	.LLST31
 2875 0b95 19       		.uleb128 0x19
 2876 0b96 C0050000 		.4byte	.LASF142
 2877 0b9a 01       		.byte	0x1
 2878 0b9b D207     		.2byte	0x7d2
 2879 0b9d 83000000 		.4byte	0x83
 2880 0ba1 B5040000 		.4byte	.LLST32
 2881 0ba5 19       		.uleb128 0x19
 2882 0ba6 63030000 		.4byte	.LASF143
 2883 0baa 01       		.byte	0x1
 2884 0bab D807     		.2byte	0x7d8
 2885 0bad 83000000 		.4byte	0x83
 2886 0bb1 C8040000 		.4byte	.LLST33
 2887 0bb5 23       		.uleb128 0x23
 2888 0bb6 A20A0000 		.4byte	.LASF183
 2889 0bba 01       		.byte	0x1
 2890 0bbb DE07     		.2byte	0x7de
 2891 0bbd FC0B0000 		.4byte	0xbfc
 2892 0bc1 19       		.uleb128 0x19
 2893 0bc2 93020000 		.4byte	.LASF99
 2894 0bc6 01       		.byte	0x1
 2895 0bc7 DF07     		.2byte	0x7df
 2896 0bc9 070C0000 		.4byte	0xc07
 2897 0bcd F0040000 		.4byte	.LLST34
 2898 0bd1 1E       		.uleb128 0x1e
 2899 0bd2 46000000 		.4byte	.LVL107
 2900 0bd6 400F0000 		.4byte	0xf40
 2901 0bda EB0B0000 		.4byte	0xbeb
 2902 0bde 1F       		.uleb128 0x1f
 2903 0bdf 01       		.uleb128 0x1
 2904 0be0 50       		.byte	0x50
 2905 0be1 02       		.uleb128 0x2
 2906 0be2 75       		.byte	0x75
 2907 0be3 00       		.sleb128 0
 2908 0be4 1F       		.uleb128 0x1f
 2909 0be5 01       		.uleb128 0x1
 2910 0be6 52       		.byte	0x52
 2911 0be7 02       		.uleb128 0x2
 2912 0be8 74       		.byte	0x74
 2913 0be9 00       		.sleb128 0
 2914 0bea 00       		.byte	0
 2915 0beb 21       		.uleb128 0x21
 2916 0bec 62000000 		.4byte	.LVL113
 2917 0bf0 E8090000 		.4byte	0x9e8
 2918 0bf4 1F       		.uleb128 0x1f
 2919 0bf5 01       		.uleb128 0x1
 2920 0bf6 50       		.byte	0x50
 2921 0bf7 02       		.uleb128 0x2
 2922 0bf8 75       		.byte	0x75
 2923 0bf9 00       		.sleb128 0
 2924 0bfa 00       		.byte	0
 2925 0bfb 00       		.byte	0
 2926 0bfc 06       		.uleb128 0x6
 2927 0bfd 04       		.byte	0x4
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 106


 2928 0bfe 020C0000 		.4byte	0xc02
 2929 0c02 22       		.uleb128 0x22
 2930 0c03 4C060000 		.4byte	0x64c
 2931 0c07 06       		.uleb128 0x6
 2932 0c08 04       		.byte	0x4
 2933 0c09 0D0C0000 		.4byte	0xc0d
 2934 0c0d 22       		.uleb128 0x22
 2935 0c0e B3010000 		.4byte	0x1b3
 2936 0c12 20       		.uleb128 0x20
 2937 0c13 13020000 		.4byte	.LASF144
 2938 0c17 01       		.byte	0x1
 2939 0c18 8908     		.2byte	0x889
 2940 0c1a 00000000 		.4byte	.LFB19
 2941 0c1e 24000000 		.4byte	.LFE19-.LFB19
 2942 0c22 01       		.uleb128 0x1
 2943 0c23 9C       		.byte	0x9c
 2944 0c24 590C0000 		.4byte	0xc59
 2945 0c28 19       		.uleb128 0x19
 2946 0c29 9F070000 		.4byte	.LASF98
 2947 0c2d 01       		.byte	0x1
 2948 0c2e 8B08     		.2byte	0x88b
 2949 0c30 83000000 		.4byte	0x83
 2950 0c34 03050000 		.4byte	.LLST35
 2951 0c38 19       		.uleb128 0x19
 2952 0c39 93020000 		.4byte	.LASF99
 2953 0c3d 01       		.byte	0x1
 2954 0c3e 8C08     		.2byte	0x88c
 2955 0c40 E0060000 		.4byte	0x6e0
 2956 0c44 22050000 		.4byte	.LLST36
 2957 0c48 21       		.uleb128 0x21
 2958 0c49 18000000 		.4byte	.LVL118
 2959 0c4d 93060000 		.4byte	0x693
 2960 0c51 1F       		.uleb128 0x1f
 2961 0c52 01       		.uleb128 0x1
 2962 0c53 50       		.byte	0x50
 2963 0c54 02       		.uleb128 0x2
 2964 0c55 74       		.byte	0x74
 2965 0c56 00       		.sleb128 0
 2966 0c57 00       		.byte	0
 2967 0c58 00       		.byte	0
 2968 0c59 1C       		.uleb128 0x1c
 2969 0c5a 3B010000 		.4byte	.LASF145
 2970 0c5e 01       		.byte	0x1
 2971 0c5f 0402     		.2byte	0x204
 2972 0c61 A4000000 		.4byte	0xa4
 2973 0c65 00000000 		.4byte	.LFB5
 2974 0c69 54000000 		.4byte	.LFE5-.LFB5
 2975 0c6d 01       		.uleb128 0x1
 2976 0c6e 9C       		.byte	0x9c
 2977 0c6f B20C0000 		.4byte	0xcb2
 2978 0c73 18       		.uleb128 0x18
 2979 0c74 7E010000 		.4byte	.LASF146
 2980 0c78 01       		.byte	0x1
 2981 0c79 0602     		.2byte	0x206
 2982 0c7b A4000000 		.4byte	0xa4
 2983 0c7f 00       		.byte	0
 2984 0c80 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 107


 2985 0c81 EA000000 		.4byte	.LASF147
 2986 0c85 01       		.byte	0x1
 2987 0c86 0A02     		.2byte	0x20a
 2988 0c88 6B000000 		.4byte	0x6b
 2989 0c8c 35050000 		.4byte	.LLST37
 2990 0c90 1A       		.uleb128 0x1a
 2991 0c91 3E000000 		.4byte	.LVL128
 2992 0c95 120C0000 		.4byte	0xc12
 2993 0c99 1A       		.uleb128 0x1a
 2994 0c9a 42000000 		.4byte	.LVL129
 2995 0c9e 09090000 		.4byte	0x909
 2996 0ca2 21       		.uleb128 0x21
 2997 0ca3 48000000 		.4byte	.LVL130
 2998 0ca7 D0080000 		.4byte	0x8d0
 2999 0cab 1F       		.uleb128 0x1f
 3000 0cac 01       		.uleb128 0x1
 3001 0cad 50       		.byte	0x50
 3002 0cae 01       		.uleb128 0x1
 3003 0caf 31       		.byte	0x31
 3004 0cb0 00       		.byte	0
 3005 0cb1 00       		.byte	0
 3006 0cb2 20       		.uleb128 0x20
 3007 0cb3 8F0B0000 		.4byte	.LASF148
 3008 0cb7 01       		.byte	0x1
 3009 0cb8 060A     		.2byte	0xa06
 3010 0cba 00000000 		.4byte	.LFB21
 3011 0cbe 40000000 		.4byte	.LFE21-.LFB21
 3012 0cc2 01       		.uleb128 0x1
 3013 0cc3 9C       		.byte	0x9c
 3014 0cc4 130D0000 		.4byte	0xd13
 3015 0cc8 19       		.uleb128 0x19
 3016 0cc9 9F070000 		.4byte	.LASF98
 3017 0ccd 01       		.byte	0x1
 3018 0cce 080A     		.2byte	0xa08
 3019 0cd0 83000000 		.4byte	0x83
 3020 0cd4 8B050000 		.4byte	.LLST38
 3021 0cd8 19       		.uleb128 0x19
 3022 0cd9 A9070000 		.4byte	.LASF149
 3023 0cdd 01       		.byte	0x1
 3024 0cde 090A     		.2byte	0xa09
 3025 0ce0 83000000 		.4byte	0x83
 3026 0ce4 AA050000 		.4byte	.LLST39
 3027 0ce8 19       		.uleb128 0x19
 3028 0ce9 060B0000 		.4byte	.LASF150
 3029 0ced 01       		.byte	0x1
 3030 0cee 150A     		.2byte	0xa15
 3031 0cf0 C5080000 		.4byte	0x8c5
 3032 0cf4 C9050000 		.4byte	.LLST40
 3033 0cf8 21       		.uleb128 0x21
 3034 0cf9 20000000 		.4byte	.LVL135
 3035 0cfd 4C0F0000 		.4byte	0xf4c
 3036 0d01 1F       		.uleb128 0x1f
 3037 0d02 01       		.uleb128 0x1
 3038 0d03 50       		.byte	0x50
 3039 0d04 0C       		.uleb128 0xc
 3040 0d05 74       		.byte	0x74
 3041 0d06 00       		.sleb128 0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 108


 3042 0d07 33       		.byte	0x33
 3043 0d08 24       		.byte	0x24
 3044 0d09 74       		.byte	0x74
 3045 0d0a 00       		.sleb128 0
 3046 0d0b 1C       		.byte	0x1c
 3047 0d0c 32       		.byte	0x32
 3048 0d0d 24       		.byte	0x24
 3049 0d0e 76       		.byte	0x76
 3050 0d0f 00       		.sleb128 0
 3051 0d10 22       		.byte	0x22
 3052 0d11 00       		.byte	0
 3053 0d12 00       		.byte	0
 3054 0d13 1C       		.uleb128 0x1c
 3055 0d14 2E050000 		.4byte	.LASF151
 3056 0d18 01       		.byte	0x1
 3057 0d19 580A     		.2byte	0xa58
 3058 0d1b 83000000 		.4byte	0x83
 3059 0d1f 00000000 		.4byte	.LFB22
 3060 0d23 0C000000 		.4byte	.LFE22-.LFB22
 3061 0d27 01       		.uleb128 0x1
 3062 0d28 9C       		.byte	0x9c
 3063 0d29 4C0D0000 		.4byte	0xd4c
 3064 0d2d 1D       		.uleb128 0x1d
 3065 0d2e 250C0000 		.4byte	.LASF105
 3066 0d32 01       		.byte	0x1
 3067 0d33 580A     		.2byte	0xa58
 3068 0d35 83000000 		.4byte	0x83
 3069 0d39 DC050000 		.4byte	.LLST41
 3070 0d3d 24       		.uleb128 0x24
 3071 0d3e 100A0000 		.4byte	.LASF152
 3072 0d42 01       		.byte	0x1
 3073 0d43 5A0A     		.2byte	0xa5a
 3074 0d45 83000000 		.4byte	0x83
 3075 0d49 01       		.uleb128 0x1
 3076 0d4a 50       		.byte	0x50
 3077 0d4b 00       		.byte	0
 3078 0d4c 20       		.uleb128 0x20
 3079 0d4d 8B080000 		.4byte	.LASF153
 3080 0d51 01       		.byte	0x1
 3081 0d52 820A     		.2byte	0xa82
 3082 0d54 00000000 		.4byte	.LFB23
 3083 0d58 0C000000 		.4byte	.LFE23-.LFB23
 3084 0d5c 01       		.uleb128 0x1
 3085 0d5d 9C       		.byte	0x9c
 3086 0d5e 7F0D0000 		.4byte	0xd7f
 3087 0d62 17       		.uleb128 0x17
 3088 0d63 250C0000 		.4byte	.LASF105
 3089 0d67 01       		.byte	0x1
 3090 0d68 820A     		.2byte	0xa82
 3091 0d6a 83000000 		.4byte	0x83
 3092 0d6e 01       		.uleb128 0x1
 3093 0d6f 50       		.byte	0x50
 3094 0d70 17       		.uleb128 0x17
 3095 0d71 E8010000 		.4byte	.LASF154
 3096 0d75 01       		.byte	0x1
 3097 0d76 820A     		.2byte	0xa82
 3098 0d78 83000000 		.4byte	0x83
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 109


 3099 0d7c 01       		.uleb128 0x1
 3100 0d7d 51       		.byte	0x51
 3101 0d7e 00       		.byte	0
 3102 0d7f 20       		.uleb128 0x20
 3103 0d80 18000000 		.4byte	.LASF155
 3104 0d84 01       		.byte	0x1
 3105 0d85 060B     		.2byte	0xb06
 3106 0d87 00000000 		.4byte	.LFB24
 3107 0d8b 60000000 		.4byte	.LFE24-.LFB24
 3108 0d8f 01       		.uleb128 0x1
 3109 0d90 9C       		.byte	0x9c
 3110 0d91 110E0000 		.4byte	0xe11
 3111 0d95 19       		.uleb128 0x19
 3112 0d96 830B0000 		.4byte	.LASF104
 3113 0d9a 01       		.byte	0x1
 3114 0d9b 080B     		.2byte	0xb08
 3115 0d9d 83000000 		.4byte	0x83
 3116 0da1 FD050000 		.4byte	.LLST42
 3117 0da5 19       		.uleb128 0x19
 3118 0da6 A4010000 		.4byte	.LASF115
 3119 0daa 01       		.byte	0x1
 3120 0dab 090B     		.2byte	0xb09
 3121 0dad 6B000000 		.4byte	0x6b
 3122 0db1 31060000 		.4byte	.LLST43
 3123 0db5 1A       		.uleb128 0x1a
 3124 0db6 06000000 		.4byte	.LVL142
 3125 0dba FB0E0000 		.4byte	0xefb
 3126 0dbe 1A       		.uleb128 0x1a
 3127 0dbf 14000000 		.4byte	.LVL145
 3128 0dc3 060F0000 		.4byte	0xf06
 3129 0dc7 1A       		.uleb128 0x1a
 3130 0dc8 18000000 		.4byte	.LVL146
 3131 0dcc FB0E0000 		.4byte	0xefb
 3132 0dd0 1A       		.uleb128 0x1a
 3133 0dd1 26000000 		.4byte	.LVL149
 3134 0dd5 060F0000 		.4byte	0xf06
 3135 0dd9 1A       		.uleb128 0x1a
 3136 0dda 2A000000 		.4byte	.LVL150
 3137 0dde FB0E0000 		.4byte	0xefb
 3138 0de2 1A       		.uleb128 0x1a
 3139 0de3 3C000000 		.4byte	.LVL154
 3140 0de7 060F0000 		.4byte	0xf06
 3141 0deb 1E       		.uleb128 0x1e
 3142 0dec 42000000 		.4byte	.LVL155
 3143 0df0 580F0000 		.4byte	0xf58
 3144 0df4 FE0D0000 		.4byte	0xdfe
 3145 0df8 1F       		.uleb128 0x1f
 3146 0df9 01       		.uleb128 0x1
 3147 0dfa 50       		.byte	0x50
 3148 0dfb 01       		.uleb128 0x1
 3149 0dfc 31       		.byte	0x31
 3150 0dfd 00       		.byte	0
 3151 0dfe 1A       		.uleb128 0x1a
 3152 0dff 46000000 		.4byte	.LVL156
 3153 0e03 FB0E0000 		.4byte	0xefb
 3154 0e07 1A       		.uleb128 0x1a
 3155 0e08 50000000 		.4byte	.LVL159
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 110


 3156 0e0c 060F0000 		.4byte	0xf06
 3157 0e10 00       		.byte	0
 3158 0e11 25       		.uleb128 0x25
 3159 0e12 B2070000 		.4byte	.LASF156
 3160 0e16 04       		.byte	0x4
 3161 0e17 5C04     		.2byte	0x45c
 3162 0e19 1B050000 		.4byte	0x51b
 3163 0e1d 25       		.uleb128 0x25
 3164 0e1e E1080000 		.4byte	.LASF157
 3165 0e22 04       		.byte	0x4
 3166 0e23 5D04     		.2byte	0x45d
 3167 0e25 290E0000 		.4byte	0xe29
 3168 0e29 22       		.uleb128 0x22
 3169 0e2a 80060000 		.4byte	0x680
 3170 0e2e 0D       		.uleb128 0xd
 3171 0e2f CB080000 		.4byte	0x8cb
 3172 0e33 3E0E0000 		.4byte	0xe3e
 3173 0e37 0E       		.uleb128 0xe
 3174 0e38 AC010000 		.4byte	0x1ac
 3175 0e3c 09       		.byte	0x9
 3176 0e3d 00       		.byte	0
 3177 0e3e 25       		.uleb128 0x25
 3178 0e3f 92010000 		.4byte	.LASF158
 3179 0e43 04       		.byte	0x4
 3180 0e44 5E04     		.2byte	0x45e
 3181 0e46 4A0E0000 		.4byte	0xe4a
 3182 0e4a 22       		.uleb128 0x22
 3183 0e4b 2E0E0000 		.4byte	0xe2e
 3184 0e4f 26       		.uleb128 0x26
 3185 0e50 4E0C0000 		.4byte	.LASF159
 3186 0e54 01       		.byte	0x1
 3187 0e55 BB       		.byte	0xbb
 3188 0e56 B0000000 		.4byte	0xb0
 3189 0e5a 05       		.uleb128 0x5
 3190 0e5b 03       		.byte	0x3
 3191 0e5c 00000000 		.4byte	CapSense_1_widgetIndex
 3192 0e60 26       		.uleb128 0x26
 3193 0e61 C1090000 		.4byte	.LASF160
 3194 0e65 01       		.byte	0x1
 3195 0e66 BC       		.byte	0xbc
 3196 0e67 B0000000 		.4byte	0xb0
 3197 0e6b 05       		.uleb128 0x5
 3198 0e6c 03       		.byte	0x3
 3199 0e6d 00000000 		.4byte	CapSense_1_sensorIndex
 3200 0e71 26       		.uleb128 0x26
 3201 0e72 9B020000 		.4byte	.LASF161
 3202 0e76 01       		.byte	0x1
 3203 0e77 BD       		.byte	0xbd
 3204 0e78 6B000000 		.4byte	0x6b
 3205 0e7c 05       		.uleb128 0x5
 3206 0e7d 03       		.byte	0x3
 3207 0e7e 00000000 		.4byte	CapSense_1_requestScanAllWidget
 3208 0e82 26       		.uleb128 0x26
 3209 0e83 A7000000 		.4byte	.LASF162
 3210 0e87 01       		.byte	0x1
 3211 0e88 C0       		.byte	0xc0
 3212 0e89 40060000 		.4byte	0x640
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 111


 3213 0e8d 05       		.uleb128 0x5
 3214 0e8e 03       		.byte	0x3
 3215 0e8f 00000000 		.4byte	CapSense_1_curRamSnsPtr
 3216 0e93 26       		.uleb128 0x26
 3217 0e94 E80A0000 		.4byte	.LASF163
 3218 0e98 01       		.byte	0x1
 3219 0e99 AE       		.byte	0xae
 3220 0e9a 1C010000 		.4byte	0x11c
 3221 0e9e 05       		.uleb128 0x5
 3222 0e9f 03       		.byte	0x3
 3223 0ea0 00000000 		.4byte	CapSense_1_currentSenseMethod
 3224 0ea4 26       		.uleb128 0x26
 3225 0ea5 39020000 		.4byte	.LASF164
 3226 0ea9 01       		.byte	0x1
 3227 0eaa B2       		.byte	0xb2
 3228 0eab 6B000000 		.4byte	0x6b
 3229 0eaf 05       		.uleb128 0x5
 3230 0eb0 03       		.byte	0x3
 3231 0eb1 00000000 		.4byte	CapSense_1_scanFreqIndex
 3232 0eb5 26       		.uleb128 0x26
 3233 0eb6 6F0B0000 		.4byte	.LASF165
 3234 0eba 01       		.byte	0x1
 3235 0ebb B4       		.byte	0xb4
 3236 0ebc 9C010000 		.4byte	0x19c
 3237 0ec0 05       		.uleb128 0x5
 3238 0ec1 03       		.byte	0x3
 3239 0ec2 00000000 		.4byte	CapSense_1_immunity
 3240 0ec6 26       		.uleb128 0x26
 3241 0ec7 67010000 		.4byte	.LASF166
 3242 0ecb 01       		.byte	0x1
 3243 0ecc CF       		.byte	0xcf
 3244 0ecd C5080000 		.4byte	0x8c5
 3245 0ed1 05       		.uleb128 0x5
 3246 0ed2 03       		.byte	0x3
 3247 0ed3 00000000 		.4byte	CapSense_1_curSnsIOPtr
 3248 0ed7 27       		.uleb128 0x27
 3249 0ed8 370A0000 		.4byte	.LASF167
 3250 0edc 370A0000 		.4byte	.LASF167
 3251 0ee0 05       		.byte	0x5
 3252 0ee1 D401     		.2byte	0x1d4
 3253 0ee3 27       		.uleb128 0x27
 3254 0ee4 A7090000 		.4byte	.LASF168
 3255 0ee8 A7090000 		.4byte	.LASF168
 3256 0eec 05       		.byte	0x5
 3257 0eed B701     		.2byte	0x1b7
 3258 0eef 27       		.uleb128 0x27
 3259 0ef0 F9000000 		.4byte	.LASF169
 3260 0ef4 F9000000 		.4byte	.LASF169
 3261 0ef8 05       		.byte	0x5
 3262 0ef9 B901     		.2byte	0x1b9
 3263 0efb 28       		.uleb128 0x28
 3264 0efc 190B0000 		.4byte	.LASF170
 3265 0f00 190B0000 		.4byte	.LASF170
 3266 0f04 06       		.byte	0x6
 3267 0f05 E5       		.byte	0xe5
 3268 0f06 28       		.uleb128 0x28
 3269 0f07 7E050000 		.4byte	.LASF171
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 112


 3270 0f0b 7E050000 		.4byte	.LASF171
 3271 0f0f 06       		.byte	0x6
 3272 0f10 E6       		.byte	0xe6
 3273 0f11 27       		.uleb128 0x27
 3274 0f12 CF010000 		.4byte	.LASF172
 3275 0f16 CF010000 		.4byte	.LASF172
 3276 0f1a 05       		.byte	0x5
 3277 0f1b C001     		.2byte	0x1c0
 3278 0f1d 27       		.uleb128 0x27
 3279 0f1e 52020000 		.4byte	.LASF173
 3280 0f22 52020000 		.4byte	.LASF173
 3281 0f26 05       		.byte	0x5
 3282 0f27 D001     		.2byte	0x1d0
 3283 0f29 28       		.uleb128 0x28
 3284 0f2a 19040000 		.4byte	.LASF174
 3285 0f2e 19040000 		.4byte	.LASF174
 3286 0f32 07       		.byte	0x7
 3287 0f33 18       		.byte	0x18
 3288 0f34 27       		.uleb128 0x27
 3289 0f35 76090000 		.4byte	.LASF175
 3290 0f39 76090000 		.4byte	.LASF175
 3291 0f3d 05       		.byte	0x5
 3292 0f3e BD01     		.2byte	0x1bd
 3293 0f40 27       		.uleb128 0x27
 3294 0f41 3E000000 		.4byte	.LASF176
 3295 0f45 3E000000 		.4byte	.LASF176
 3296 0f49 05       		.byte	0x5
 3297 0f4a DB01     		.2byte	0x1db
 3298 0f4c 27       		.uleb128 0x27
 3299 0f4d 65080000 		.4byte	.LASF177
 3300 0f51 65080000 		.4byte	.LASF177
 3301 0f55 05       		.byte	0x5
 3302 0f56 C101     		.2byte	0x1c1
 3303 0f58 28       		.uleb128 0x28
 3304 0f59 84030000 		.4byte	.LASF178
 3305 0f5d 84030000 		.4byte	.LASF178
 3306 0f61 06       		.byte	0x6
 3307 0f62 DA       		.byte	0xda
 3308 0f63 00       		.byte	0
 3309              		.section	.debug_abbrev,"",%progbits
 3310              	.Ldebug_abbrev0:
 3311 0000 01       		.uleb128 0x1
 3312 0001 11       		.uleb128 0x11
 3313 0002 01       		.byte	0x1
 3314 0003 25       		.uleb128 0x25
 3315 0004 0E       		.uleb128 0xe
 3316 0005 13       		.uleb128 0x13
 3317 0006 0B       		.uleb128 0xb
 3318 0007 03       		.uleb128 0x3
 3319 0008 0E       		.uleb128 0xe
 3320 0009 1B       		.uleb128 0x1b
 3321 000a 0E       		.uleb128 0xe
 3322 000b 55       		.uleb128 0x55
 3323 000c 17       		.uleb128 0x17
 3324 000d 11       		.uleb128 0x11
 3325 000e 01       		.uleb128 0x1
 3326 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 113


 3327 0010 17       		.uleb128 0x17
 3328 0011 00       		.byte	0
 3329 0012 00       		.byte	0
 3330 0013 02       		.uleb128 0x2
 3331 0014 24       		.uleb128 0x24
 3332 0015 00       		.byte	0
 3333 0016 0B       		.uleb128 0xb
 3334 0017 0B       		.uleb128 0xb
 3335 0018 3E       		.uleb128 0x3e
 3336 0019 0B       		.uleb128 0xb
 3337 001a 03       		.uleb128 0x3
 3338 001b 0E       		.uleb128 0xe
 3339 001c 00       		.byte	0
 3340 001d 00       		.byte	0
 3341 001e 03       		.uleb128 0x3
 3342 001f 24       		.uleb128 0x24
 3343 0020 00       		.byte	0
 3344 0021 0B       		.uleb128 0xb
 3345 0022 0B       		.uleb128 0xb
 3346 0023 3E       		.uleb128 0x3e
 3347 0024 0B       		.uleb128 0xb
 3348 0025 03       		.uleb128 0x3
 3349 0026 08       		.uleb128 0x8
 3350 0027 00       		.byte	0
 3351 0028 00       		.byte	0
 3352 0029 04       		.uleb128 0x4
 3353 002a 16       		.uleb128 0x16
 3354 002b 00       		.byte	0
 3355 002c 03       		.uleb128 0x3
 3356 002d 0E       		.uleb128 0xe
 3357 002e 3A       		.uleb128 0x3a
 3358 002f 0B       		.uleb128 0xb
 3359 0030 3B       		.uleb128 0x3b
 3360 0031 05       		.uleb128 0x5
 3361 0032 49       		.uleb128 0x49
 3362 0033 13       		.uleb128 0x13
 3363 0034 00       		.byte	0
 3364 0035 00       		.byte	0
 3365 0036 05       		.uleb128 0x5
 3366 0037 35       		.uleb128 0x35
 3367 0038 00       		.byte	0
 3368 0039 49       		.uleb128 0x49
 3369 003a 13       		.uleb128 0x13
 3370 003b 00       		.byte	0
 3371 003c 00       		.byte	0
 3372 003d 06       		.uleb128 0x6
 3373 003e 0F       		.uleb128 0xf
 3374 003f 00       		.byte	0
 3375 0040 0B       		.uleb128 0xb
 3376 0041 0B       		.uleb128 0xb
 3377 0042 49       		.uleb128 0x49
 3378 0043 13       		.uleb128 0x13
 3379 0044 00       		.byte	0
 3380 0045 00       		.byte	0
 3381 0046 07       		.uleb128 0x7
 3382 0047 15       		.uleb128 0x15
 3383 0048 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 114


 3384 0049 27       		.uleb128 0x27
 3385 004a 19       		.uleb128 0x19
 3386 004b 00       		.byte	0
 3387 004c 00       		.byte	0
 3388 004d 08       		.uleb128 0x8
 3389 004e 04       		.uleb128 0x4
 3390 004f 01       		.byte	0x1
 3391 0050 0B       		.uleb128 0xb
 3392 0051 0B       		.uleb128 0xb
 3393 0052 49       		.uleb128 0x49
 3394 0053 13       		.uleb128 0x13
 3395 0054 3A       		.uleb128 0x3a
 3396 0055 0B       		.uleb128 0xb
 3397 0056 3B       		.uleb128 0x3b
 3398 0057 0B       		.uleb128 0xb
 3399 0058 01       		.uleb128 0x1
 3400 0059 13       		.uleb128 0x13
 3401 005a 00       		.byte	0
 3402 005b 00       		.byte	0
 3403 005c 09       		.uleb128 0x9
 3404 005d 28       		.uleb128 0x28
 3405 005e 00       		.byte	0
 3406 005f 03       		.uleb128 0x3
 3407 0060 0E       		.uleb128 0xe
 3408 0061 1C       		.uleb128 0x1c
 3409 0062 0B       		.uleb128 0xb
 3410 0063 00       		.byte	0
 3411 0064 00       		.byte	0
 3412 0065 0A       		.uleb128 0xa
 3413 0066 16       		.uleb128 0x16
 3414 0067 00       		.byte	0
 3415 0068 03       		.uleb128 0x3
 3416 0069 0E       		.uleb128 0xe
 3417 006a 3A       		.uleb128 0x3a
 3418 006b 0B       		.uleb128 0xb
 3419 006c 3B       		.uleb128 0x3b
 3420 006d 0B       		.uleb128 0xb
 3421 006e 49       		.uleb128 0x49
 3422 006f 13       		.uleb128 0x13
 3423 0070 00       		.byte	0
 3424 0071 00       		.byte	0
 3425 0072 0B       		.uleb128 0xb
 3426 0073 13       		.uleb128 0x13
 3427 0074 01       		.byte	0x1
 3428 0075 0B       		.uleb128 0xb
 3429 0076 0B       		.uleb128 0xb
 3430 0077 3A       		.uleb128 0x3a
 3431 0078 0B       		.uleb128 0xb
 3432 0079 3B       		.uleb128 0x3b
 3433 007a 0B       		.uleb128 0xb
 3434 007b 01       		.uleb128 0x1
 3435 007c 13       		.uleb128 0x13
 3436 007d 00       		.byte	0
 3437 007e 00       		.byte	0
 3438 007f 0C       		.uleb128 0xc
 3439 0080 0D       		.uleb128 0xd
 3440 0081 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 115


 3441 0082 03       		.uleb128 0x3
 3442 0083 0E       		.uleb128 0xe
 3443 0084 3A       		.uleb128 0x3a
 3444 0085 0B       		.uleb128 0xb
 3445 0086 3B       		.uleb128 0x3b
 3446 0087 0B       		.uleb128 0xb
 3447 0088 49       		.uleb128 0x49
 3448 0089 13       		.uleb128 0x13
 3449 008a 38       		.uleb128 0x38
 3450 008b 0B       		.uleb128 0xb
 3451 008c 00       		.byte	0
 3452 008d 00       		.byte	0
 3453 008e 0D       		.uleb128 0xd
 3454 008f 01       		.uleb128 0x1
 3455 0090 01       		.byte	0x1
 3456 0091 49       		.uleb128 0x49
 3457 0092 13       		.uleb128 0x13
 3458 0093 01       		.uleb128 0x1
 3459 0094 13       		.uleb128 0x13
 3460 0095 00       		.byte	0
 3461 0096 00       		.byte	0
 3462 0097 0E       		.uleb128 0xe
 3463 0098 21       		.uleb128 0x21
 3464 0099 00       		.byte	0
 3465 009a 49       		.uleb128 0x49
 3466 009b 13       		.uleb128 0x13
 3467 009c 2F       		.uleb128 0x2f
 3468 009d 0B       		.uleb128 0xb
 3469 009e 00       		.byte	0
 3470 009f 00       		.byte	0
 3471 00a0 0F       		.uleb128 0xf
 3472 00a1 13       		.uleb128 0x13
 3473 00a2 01       		.byte	0x1
 3474 00a3 0B       		.uleb128 0xb
 3475 00a4 0B       		.uleb128 0xb
 3476 00a5 3A       		.uleb128 0x3a
 3477 00a6 0B       		.uleb128 0xb
 3478 00a7 3B       		.uleb128 0x3b
 3479 00a8 05       		.uleb128 0x5
 3480 00a9 01       		.uleb128 0x1
 3481 00aa 13       		.uleb128 0x13
 3482 00ab 00       		.byte	0
 3483 00ac 00       		.byte	0
 3484 00ad 10       		.uleb128 0x10
 3485 00ae 0D       		.uleb128 0xd
 3486 00af 00       		.byte	0
 3487 00b0 03       		.uleb128 0x3
 3488 00b1 0E       		.uleb128 0xe
 3489 00b2 3A       		.uleb128 0x3a
 3490 00b3 0B       		.uleb128 0xb
 3491 00b4 3B       		.uleb128 0x3b
 3492 00b5 05       		.uleb128 0x5
 3493 00b6 49       		.uleb128 0x49
 3494 00b7 13       		.uleb128 0x13
 3495 00b8 38       		.uleb128 0x38
 3496 00b9 0B       		.uleb128 0xb
 3497 00ba 00       		.byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 116


 3498 00bb 00       		.byte	0
 3499 00bc 11       		.uleb128 0x11
 3500 00bd 0D       		.uleb128 0xd
 3501 00be 00       		.byte	0
 3502 00bf 03       		.uleb128 0x3
 3503 00c0 08       		.uleb128 0x8
 3504 00c1 3A       		.uleb128 0x3a
 3505 00c2 0B       		.uleb128 0xb
 3506 00c3 3B       		.uleb128 0x3b
 3507 00c4 05       		.uleb128 0x5
 3508 00c5 49       		.uleb128 0x49
 3509 00c6 13       		.uleb128 0x13
 3510 00c7 38       		.uleb128 0x38
 3511 00c8 0B       		.uleb128 0xb
 3512 00c9 00       		.byte	0
 3513 00ca 00       		.byte	0
 3514 00cb 12       		.uleb128 0x12
 3515 00cc 13       		.uleb128 0x13
 3516 00cd 01       		.byte	0x1
 3517 00ce 0B       		.uleb128 0xb
 3518 00cf 05       		.uleb128 0x5
 3519 00d0 3A       		.uleb128 0x3a
 3520 00d1 0B       		.uleb128 0xb
 3521 00d2 3B       		.uleb128 0x3b
 3522 00d3 05       		.uleb128 0x5
 3523 00d4 01       		.uleb128 0x1
 3524 00d5 13       		.uleb128 0x13
 3525 00d6 00       		.byte	0
 3526 00d7 00       		.byte	0
 3527 00d8 13       		.uleb128 0x13
 3528 00d9 0D       		.uleb128 0xd
 3529 00da 00       		.byte	0
 3530 00db 03       		.uleb128 0x3
 3531 00dc 0E       		.uleb128 0xe
 3532 00dd 3A       		.uleb128 0x3a
 3533 00de 0B       		.uleb128 0xb
 3534 00df 3B       		.uleb128 0x3b
 3535 00e0 05       		.uleb128 0x5
 3536 00e1 49       		.uleb128 0x49
 3537 00e2 13       		.uleb128 0x13
 3538 00e3 38       		.uleb128 0x38
 3539 00e4 05       		.uleb128 0x5
 3540 00e5 00       		.byte	0
 3541 00e6 00       		.byte	0
 3542 00e7 14       		.uleb128 0x14
 3543 00e8 26       		.uleb128 0x26
 3544 00e9 00       		.byte	0
 3545 00ea 00       		.byte	0
 3546 00eb 00       		.byte	0
 3547 00ec 15       		.uleb128 0x15
 3548 00ed 0F       		.uleb128 0xf
 3549 00ee 00       		.byte	0
 3550 00ef 0B       		.uleb128 0xb
 3551 00f0 0B       		.uleb128 0xb
 3552 00f1 00       		.byte	0
 3553 00f2 00       		.byte	0
 3554 00f3 16       		.uleb128 0x16
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 117


 3555 00f4 2E       		.uleb128 0x2e
 3556 00f5 01       		.byte	0x1
 3557 00f6 03       		.uleb128 0x3
 3558 00f7 0E       		.uleb128 0xe
 3559 00f8 3A       		.uleb128 0x3a
 3560 00f9 0B       		.uleb128 0xb
 3561 00fa 3B       		.uleb128 0x3b
 3562 00fb 05       		.uleb128 0x5
 3563 00fc 27       		.uleb128 0x27
 3564 00fd 19       		.uleb128 0x19
 3565 00fe 11       		.uleb128 0x11
 3566 00ff 01       		.uleb128 0x1
 3567 0100 12       		.uleb128 0x12
 3568 0101 06       		.uleb128 0x6
 3569 0102 40       		.uleb128 0x40
 3570 0103 18       		.uleb128 0x18
 3571 0104 9742     		.uleb128 0x2117
 3572 0106 19       		.uleb128 0x19
 3573 0107 01       		.uleb128 0x1
 3574 0108 13       		.uleb128 0x13
 3575 0109 00       		.byte	0
 3576 010a 00       		.byte	0
 3577 010b 17       		.uleb128 0x17
 3578 010c 05       		.uleb128 0x5
 3579 010d 00       		.byte	0
 3580 010e 03       		.uleb128 0x3
 3581 010f 0E       		.uleb128 0xe
 3582 0110 3A       		.uleb128 0x3a
 3583 0111 0B       		.uleb128 0xb
 3584 0112 3B       		.uleb128 0x3b
 3585 0113 05       		.uleb128 0x5
 3586 0114 49       		.uleb128 0x49
 3587 0115 13       		.uleb128 0x13
 3588 0116 02       		.uleb128 0x2
 3589 0117 18       		.uleb128 0x18
 3590 0118 00       		.byte	0
 3591 0119 00       		.byte	0
 3592 011a 18       		.uleb128 0x18
 3593 011b 34       		.uleb128 0x34
 3594 011c 00       		.byte	0
 3595 011d 03       		.uleb128 0x3
 3596 011e 0E       		.uleb128 0xe
 3597 011f 3A       		.uleb128 0x3a
 3598 0120 0B       		.uleb128 0xb
 3599 0121 3B       		.uleb128 0x3b
 3600 0122 05       		.uleb128 0x5
 3601 0123 49       		.uleb128 0x49
 3602 0124 13       		.uleb128 0x13
 3603 0125 1C       		.uleb128 0x1c
 3604 0126 0B       		.uleb128 0xb
 3605 0127 00       		.byte	0
 3606 0128 00       		.byte	0
 3607 0129 19       		.uleb128 0x19
 3608 012a 34       		.uleb128 0x34
 3609 012b 00       		.byte	0
 3610 012c 03       		.uleb128 0x3
 3611 012d 0E       		.uleb128 0xe
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 118


 3612 012e 3A       		.uleb128 0x3a
 3613 012f 0B       		.uleb128 0xb
 3614 0130 3B       		.uleb128 0x3b
 3615 0131 05       		.uleb128 0x5
 3616 0132 49       		.uleb128 0x49
 3617 0133 13       		.uleb128 0x13
 3618 0134 02       		.uleb128 0x2
 3619 0135 17       		.uleb128 0x17
 3620 0136 00       		.byte	0
 3621 0137 00       		.byte	0
 3622 0138 1A       		.uleb128 0x1a
 3623 0139 898201   		.uleb128 0x4109
 3624 013c 00       		.byte	0
 3625 013d 11       		.uleb128 0x11
 3626 013e 01       		.uleb128 0x1
 3627 013f 31       		.uleb128 0x31
 3628 0140 13       		.uleb128 0x13
 3629 0141 00       		.byte	0
 3630 0142 00       		.byte	0
 3631 0143 1B       		.uleb128 0x1b
 3632 0144 2E       		.uleb128 0x2e
 3633 0145 00       		.byte	0
 3634 0146 3F       		.uleb128 0x3f
 3635 0147 19       		.uleb128 0x19
 3636 0148 03       		.uleb128 0x3
 3637 0149 0E       		.uleb128 0xe
 3638 014a 3A       		.uleb128 0x3a
 3639 014b 0B       		.uleb128 0xb
 3640 014c 3B       		.uleb128 0x3b
 3641 014d 0B       		.uleb128 0xb
 3642 014e 27       		.uleb128 0x27
 3643 014f 19       		.uleb128 0x19
 3644 0150 49       		.uleb128 0x49
 3645 0151 13       		.uleb128 0x13
 3646 0152 11       		.uleb128 0x11
 3647 0153 01       		.uleb128 0x1
 3648 0154 12       		.uleb128 0x12
 3649 0155 06       		.uleb128 0x6
 3650 0156 40       		.uleb128 0x40
 3651 0157 18       		.uleb128 0x18
 3652 0158 9742     		.uleb128 0x2117
 3653 015a 19       		.uleb128 0x19
 3654 015b 00       		.byte	0
 3655 015c 00       		.byte	0
 3656 015d 1C       		.uleb128 0x1c
 3657 015e 2E       		.uleb128 0x2e
 3658 015f 01       		.byte	0x1
 3659 0160 3F       		.uleb128 0x3f
 3660 0161 19       		.uleb128 0x19
 3661 0162 03       		.uleb128 0x3
 3662 0163 0E       		.uleb128 0xe
 3663 0164 3A       		.uleb128 0x3a
 3664 0165 0B       		.uleb128 0xb
 3665 0166 3B       		.uleb128 0x3b
 3666 0167 05       		.uleb128 0x5
 3667 0168 27       		.uleb128 0x27
 3668 0169 19       		.uleb128 0x19
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 119


 3669 016a 49       		.uleb128 0x49
 3670 016b 13       		.uleb128 0x13
 3671 016c 11       		.uleb128 0x11
 3672 016d 01       		.uleb128 0x1
 3673 016e 12       		.uleb128 0x12
 3674 016f 06       		.uleb128 0x6
 3675 0170 40       		.uleb128 0x40
 3676 0171 18       		.uleb128 0x18
 3677 0172 9742     		.uleb128 0x2117
 3678 0174 19       		.uleb128 0x19
 3679 0175 01       		.uleb128 0x1
 3680 0176 13       		.uleb128 0x13
 3681 0177 00       		.byte	0
 3682 0178 00       		.byte	0
 3683 0179 1D       		.uleb128 0x1d
 3684 017a 05       		.uleb128 0x5
 3685 017b 00       		.byte	0
 3686 017c 03       		.uleb128 0x3
 3687 017d 0E       		.uleb128 0xe
 3688 017e 3A       		.uleb128 0x3a
 3689 017f 0B       		.uleb128 0xb
 3690 0180 3B       		.uleb128 0x3b
 3691 0181 05       		.uleb128 0x5
 3692 0182 49       		.uleb128 0x49
 3693 0183 13       		.uleb128 0x13
 3694 0184 02       		.uleb128 0x2
 3695 0185 17       		.uleb128 0x17
 3696 0186 00       		.byte	0
 3697 0187 00       		.byte	0
 3698 0188 1E       		.uleb128 0x1e
 3699 0189 898201   		.uleb128 0x4109
 3700 018c 01       		.byte	0x1
 3701 018d 11       		.uleb128 0x11
 3702 018e 01       		.uleb128 0x1
 3703 018f 31       		.uleb128 0x31
 3704 0190 13       		.uleb128 0x13
 3705 0191 01       		.uleb128 0x1
 3706 0192 13       		.uleb128 0x13
 3707 0193 00       		.byte	0
 3708 0194 00       		.byte	0
 3709 0195 1F       		.uleb128 0x1f
 3710 0196 8A8201   		.uleb128 0x410a
 3711 0199 00       		.byte	0
 3712 019a 02       		.uleb128 0x2
 3713 019b 18       		.uleb128 0x18
 3714 019c 9142     		.uleb128 0x2111
 3715 019e 18       		.uleb128 0x18
 3716 019f 00       		.byte	0
 3717 01a0 00       		.byte	0
 3718 01a1 20       		.uleb128 0x20
 3719 01a2 2E       		.uleb128 0x2e
 3720 01a3 01       		.byte	0x1
 3721 01a4 3F       		.uleb128 0x3f
 3722 01a5 19       		.uleb128 0x19
 3723 01a6 03       		.uleb128 0x3
 3724 01a7 0E       		.uleb128 0xe
 3725 01a8 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 120


 3726 01a9 0B       		.uleb128 0xb
 3727 01aa 3B       		.uleb128 0x3b
 3728 01ab 05       		.uleb128 0x5
 3729 01ac 27       		.uleb128 0x27
 3730 01ad 19       		.uleb128 0x19
 3731 01ae 11       		.uleb128 0x11
 3732 01af 01       		.uleb128 0x1
 3733 01b0 12       		.uleb128 0x12
 3734 01b1 06       		.uleb128 0x6
 3735 01b2 40       		.uleb128 0x40
 3736 01b3 18       		.uleb128 0x18
 3737 01b4 9742     		.uleb128 0x2117
 3738 01b6 19       		.uleb128 0x19
 3739 01b7 01       		.uleb128 0x1
 3740 01b8 13       		.uleb128 0x13
 3741 01b9 00       		.byte	0
 3742 01ba 00       		.byte	0
 3743 01bb 21       		.uleb128 0x21
 3744 01bc 898201   		.uleb128 0x4109
 3745 01bf 01       		.byte	0x1
 3746 01c0 11       		.uleb128 0x11
 3747 01c1 01       		.uleb128 0x1
 3748 01c2 31       		.uleb128 0x31
 3749 01c3 13       		.uleb128 0x13
 3750 01c4 00       		.byte	0
 3751 01c5 00       		.byte	0
 3752 01c6 22       		.uleb128 0x22
 3753 01c7 26       		.uleb128 0x26
 3754 01c8 00       		.byte	0
 3755 01c9 49       		.uleb128 0x49
 3756 01ca 13       		.uleb128 0x13
 3757 01cb 00       		.byte	0
 3758 01cc 00       		.byte	0
 3759 01cd 23       		.uleb128 0x23
 3760 01ce 34       		.uleb128 0x34
 3761 01cf 00       		.byte	0
 3762 01d0 03       		.uleb128 0x3
 3763 01d1 0E       		.uleb128 0xe
 3764 01d2 3A       		.uleb128 0x3a
 3765 01d3 0B       		.uleb128 0xb
 3766 01d4 3B       		.uleb128 0x3b
 3767 01d5 05       		.uleb128 0x5
 3768 01d6 49       		.uleb128 0x49
 3769 01d7 13       		.uleb128 0x13
 3770 01d8 00       		.byte	0
 3771 01d9 00       		.byte	0
 3772 01da 24       		.uleb128 0x24
 3773 01db 34       		.uleb128 0x34
 3774 01dc 00       		.byte	0
 3775 01dd 03       		.uleb128 0x3
 3776 01de 0E       		.uleb128 0xe
 3777 01df 3A       		.uleb128 0x3a
 3778 01e0 0B       		.uleb128 0xb
 3779 01e1 3B       		.uleb128 0x3b
 3780 01e2 05       		.uleb128 0x5
 3781 01e3 49       		.uleb128 0x49
 3782 01e4 13       		.uleb128 0x13
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 121


 3783 01e5 02       		.uleb128 0x2
 3784 01e6 18       		.uleb128 0x18
 3785 01e7 00       		.byte	0
 3786 01e8 00       		.byte	0
 3787 01e9 25       		.uleb128 0x25
 3788 01ea 34       		.uleb128 0x34
 3789 01eb 00       		.byte	0
 3790 01ec 03       		.uleb128 0x3
 3791 01ed 0E       		.uleb128 0xe
 3792 01ee 3A       		.uleb128 0x3a
 3793 01ef 0B       		.uleb128 0xb
 3794 01f0 3B       		.uleb128 0x3b
 3795 01f1 05       		.uleb128 0x5
 3796 01f2 49       		.uleb128 0x49
 3797 01f3 13       		.uleb128 0x13
 3798 01f4 3F       		.uleb128 0x3f
 3799 01f5 19       		.uleb128 0x19
 3800 01f6 3C       		.uleb128 0x3c
 3801 01f7 19       		.uleb128 0x19
 3802 01f8 00       		.byte	0
 3803 01f9 00       		.byte	0
 3804 01fa 26       		.uleb128 0x26
 3805 01fb 34       		.uleb128 0x34
 3806 01fc 00       		.byte	0
 3807 01fd 03       		.uleb128 0x3
 3808 01fe 0E       		.uleb128 0xe
 3809 01ff 3A       		.uleb128 0x3a
 3810 0200 0B       		.uleb128 0xb
 3811 0201 3B       		.uleb128 0x3b
 3812 0202 0B       		.uleb128 0xb
 3813 0203 49       		.uleb128 0x49
 3814 0204 13       		.uleb128 0x13
 3815 0205 3F       		.uleb128 0x3f
 3816 0206 19       		.uleb128 0x19
 3817 0207 02       		.uleb128 0x2
 3818 0208 18       		.uleb128 0x18
 3819 0209 00       		.byte	0
 3820 020a 00       		.byte	0
 3821 020b 27       		.uleb128 0x27
 3822 020c 2E       		.uleb128 0x2e
 3823 020d 00       		.byte	0
 3824 020e 3F       		.uleb128 0x3f
 3825 020f 19       		.uleb128 0x19
 3826 0210 3C       		.uleb128 0x3c
 3827 0211 19       		.uleb128 0x19
 3828 0212 6E       		.uleb128 0x6e
 3829 0213 0E       		.uleb128 0xe
 3830 0214 03       		.uleb128 0x3
 3831 0215 0E       		.uleb128 0xe
 3832 0216 3A       		.uleb128 0x3a
 3833 0217 0B       		.uleb128 0xb
 3834 0218 3B       		.uleb128 0x3b
 3835 0219 05       		.uleb128 0x5
 3836 021a 00       		.byte	0
 3837 021b 00       		.byte	0
 3838 021c 28       		.uleb128 0x28
 3839 021d 2E       		.uleb128 0x2e
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 122


 3840 021e 00       		.byte	0
 3841 021f 3F       		.uleb128 0x3f
 3842 0220 19       		.uleb128 0x19
 3843 0221 3C       		.uleb128 0x3c
 3844 0222 19       		.uleb128 0x19
 3845 0223 6E       		.uleb128 0x6e
 3846 0224 0E       		.uleb128 0xe
 3847 0225 03       		.uleb128 0x3
 3848 0226 0E       		.uleb128 0xe
 3849 0227 3A       		.uleb128 0x3a
 3850 0228 0B       		.uleb128 0xb
 3851 0229 3B       		.uleb128 0x3b
 3852 022a 0B       		.uleb128 0xb
 3853 022b 00       		.byte	0
 3854 022c 00       		.byte	0
 3855 022d 00       		.byte	0
 3856              		.section	.debug_loc,"",%progbits
 3857              	.Ldebug_loc0:
 3858              	.LLST0:
 3859 0000 06000000 		.4byte	.LVL1
 3860 0004 19000000 		.4byte	.LVL5-1
 3861 0008 0100     		.2byte	0x1
 3862 000a 53       		.byte	0x53
 3863 000b 00000000 		.4byte	0
 3864 000f 00000000 		.4byte	0
 3865              	.LLST1:
 3866 0013 00000000 		.4byte	.LVL6
 3867 0017 37000000 		.4byte	.LVL8-1
 3868 001b 0100     		.2byte	0x1
 3869 001d 50       		.byte	0x50
 3870 001e 37000000 		.4byte	.LVL8-1
 3871 0022 40000000 		.4byte	.LFE2
 3872 0026 0400     		.2byte	0x4
 3873 0028 F3       		.byte	0xf3
 3874 0029 01       		.uleb128 0x1
 3875 002a 50       		.byte	0x50
 3876 002b 9F       		.byte	0x9f
 3877 002c 00000000 		.4byte	0
 3878 0030 00000000 		.4byte	0
 3879              	.LLST2:
 3880 0034 30000000 		.4byte	.LVL7
 3881 0038 3A000000 		.4byte	.LVL9
 3882 003c 0100     		.2byte	0x1
 3883 003e 54       		.byte	0x54
 3884 003f 3A000000 		.4byte	.LVL9
 3885 0043 40000000 		.4byte	.LFE2
 3886 0047 0100     		.2byte	0x1
 3887 0049 50       		.byte	0x50
 3888 004a 00000000 		.4byte	0
 3889 004e 00000000 		.4byte	0
 3890              	.LLST3:
 3891 0052 02000000 		.4byte	.LVL10
 3892 0056 22000000 		.4byte	.LVL12
 3893 005a 0200     		.2byte	0x2
 3894 005c 30       		.byte	0x30
 3895 005d 9F       		.byte	0x9f
 3896 005e 22000000 		.4byte	.LVL12
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 123


 3897 0062 2C000000 		.4byte	.LFE3
 3898 0066 0100     		.2byte	0x1
 3899 0068 50       		.byte	0x50
 3900 0069 00000000 		.4byte	0
 3901 006d 00000000 		.4byte	0
 3902              	.LLST4:
 3903 0071 02000000 		.4byte	.LVL13
 3904 0075 12000000 		.4byte	.LVL14
 3905 0079 0300     		.2byte	0x3
 3906 007b 09       		.byte	0x9
 3907 007c FF       		.byte	0xff
 3908 007d 9F       		.byte	0x9f
 3909 007e 12000000 		.4byte	.LVL14
 3910 0082 14000000 		.4byte	.LVL15
 3911 0086 0100     		.2byte	0x1
 3912 0088 50       		.byte	0x50
 3913 0089 18000000 		.4byte	.LVL16
 3914 008d 31000000 		.4byte	.LVL17-1
 3915 0091 0100     		.2byte	0x1
 3916 0093 50       		.byte	0x50
 3917 0094 32000000 		.4byte	.LVL17
 3918 0098 3C000000 		.4byte	.LVL19
 3919 009c 0100     		.2byte	0x1
 3920 009e 50       		.byte	0x50
 3921 009f 3C000000 		.4byte	.LVL19
 3922 00a3 3E000000 		.4byte	.LVL20
 3923 00a7 0300     		.2byte	0x3
 3924 00a9 09       		.byte	0x9
 3925 00aa FF       		.byte	0xff
 3926 00ab 9F       		.byte	0x9f
 3927 00ac 3E000000 		.4byte	.LVL20
 3928 00b0 48000000 		.4byte	.LFE4
 3929 00b4 0100     		.2byte	0x1
 3930 00b6 50       		.byte	0x50
 3931 00b7 00000000 		.4byte	0
 3932 00bb 00000000 		.4byte	0
 3933              	.LLST5:
 3934 00bf 12000000 		.4byte	.LVL14
 3935 00c3 3C000000 		.4byte	.LVL19
 3936 00c7 0100     		.2byte	0x1
 3937 00c9 54       		.byte	0x54
 3938 00ca 00000000 		.4byte	0
 3939 00ce 00000000 		.4byte	0
 3940              	.LLST6:
 3941 00d2 00000000 		.4byte	.LVL21
 3942 00d6 08000000 		.4byte	.LVL22
 3943 00da 0100     		.2byte	0x1
 3944 00dc 50       		.byte	0x50
 3945 00dd 08000000 		.4byte	.LVL22
 3946 00e1 A0000000 		.4byte	.LFE6
 3947 00e5 0400     		.2byte	0x4
 3948 00e7 F3       		.byte	0xf3
 3949 00e8 01       		.uleb128 0x1
 3950 00e9 50       		.byte	0x50
 3951 00ea 9F       		.byte	0x9f
 3952 00eb 00000000 		.4byte	0
 3953 00ef 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 124


 3954              	.LLST7:
 3955 00f3 00000000 		.4byte	.LVL21
 3956 00f7 12000000 		.4byte	.LVL24
 3957 00fb 0100     		.2byte	0x1
 3958 00fd 51       		.byte	0x51
 3959 00fe 12000000 		.4byte	.LVL24
 3960 0102 A0000000 		.4byte	.LFE6
 3961 0106 0400     		.2byte	0x4
 3962 0108 F3       		.byte	0xf3
 3963 0109 01       		.uleb128 0x1
 3964 010a 51       		.byte	0x51
 3965 010b 9F       		.byte	0x9f
 3966 010c 00000000 		.4byte	0
 3967 0110 00000000 		.4byte	0
 3968              	.LLST8:
 3969 0114 00000000 		.4byte	.LVL21
 3970 0118 0C000000 		.4byte	.LVL23
 3971 011c 0100     		.2byte	0x1
 3972 011e 52       		.byte	0x52
 3973 011f 0C000000 		.4byte	.LVL23
 3974 0123 98000000 		.4byte	.LVL38
 3975 0127 0100     		.2byte	0x1
 3976 0129 56       		.byte	0x56
 3977 012a 98000000 		.4byte	.LVL38
 3978 012e A0000000 		.4byte	.LFE6
 3979 0132 0400     		.2byte	0x4
 3980 0134 F3       		.byte	0xf3
 3981 0135 01       		.uleb128 0x1
 3982 0136 52       		.byte	0x52
 3983 0137 9F       		.byte	0x9f
 3984 0138 00000000 		.4byte	0
 3985 013c 00000000 		.4byte	0
 3986              	.LLST9:
 3987 0140 16000000 		.4byte	.LVL25
 3988 0144 1A000000 		.4byte	.LVL26
 3989 0148 0200     		.2byte	0x2
 3990 014a 30       		.byte	0x30
 3991 014b 9F       		.byte	0x9f
 3992 014c 1A000000 		.4byte	.LVL26
 3993 0150 98000000 		.4byte	.LVL37
 3994 0154 0100     		.2byte	0x1
 3995 0156 55       		.byte	0x55
 3996 0157 00000000 		.4byte	0
 3997 015b 00000000 		.4byte	0
 3998              	.LLST10:
 3999 015f 1E000000 		.4byte	.LVL27
 4000 0163 3D000000 		.4byte	.LVL28-1
 4001 0167 0100     		.2byte	0x1
 4002 0169 50       		.byte	0x50
 4003 016a 50000000 		.4byte	.LVL29
 4004 016e 6F000000 		.4byte	.LVL30-1
 4005 0172 0100     		.2byte	0x1
 4006 0174 50       		.byte	0x50
 4007 0175 76000000 		.4byte	.LVL31
 4008 0179 87000000 		.4byte	.LVL32-1
 4009 017d 0100     		.2byte	0x1
 4010 017f 50       		.byte	0x50
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 125


 4011 0180 00000000 		.4byte	0
 4012 0184 00000000 		.4byte	0
 4013              	.LLST11:
 4014 0188 16000000 		.4byte	.LVL25
 4015 018c 98000000 		.4byte	.LVL36
 4016 0190 0100     		.2byte	0x1
 4017 0192 54       		.byte	0x54
 4018 0193 00000000 		.4byte	0
 4019 0197 00000000 		.4byte	0
 4020              	.LLST12:
 4021 019b 00000000 		.4byte	.LVL39
 4022 019f 13000000 		.4byte	.LVL40-1
 4023 01a3 0100     		.2byte	0x1
 4024 01a5 50       		.byte	0x50
 4025 01a6 13000000 		.4byte	.LVL40-1
 4026 01aa 3C000000 		.4byte	.LFE8
 4027 01ae 0400     		.2byte	0x4
 4028 01b0 F3       		.byte	0xf3
 4029 01b1 01       		.uleb128 0x1
 4030 01b2 50       		.byte	0x50
 4031 01b3 9F       		.byte	0x9f
 4032 01b4 00000000 		.4byte	0
 4033 01b8 00000000 		.4byte	0
 4034              	.LLST13:
 4035 01bc 08000000 		.4byte	.LVL43
 4036 01c0 40000000 		.4byte	.LFE9
 4037 01c4 0100     		.2byte	0x1
 4038 01c6 53       		.byte	0x53
 4039 01c7 00000000 		.4byte	0
 4040 01cb 00000000 		.4byte	0
 4041              	.LLST14:
 4042 01cf 02000000 		.4byte	.LVL42
 4043 01d3 08000000 		.4byte	.LVL43
 4044 01d7 0200     		.2byte	0x2
 4045 01d9 30       		.byte	0x30
 4046 01da 9F       		.byte	0x9f
 4047 01db 08000000 		.4byte	.LVL43
 4048 01df 40000000 		.4byte	.LFE9
 4049 01e3 0100     		.2byte	0x1
 4050 01e5 50       		.byte	0x50
 4051 01e6 00000000 		.4byte	0
 4052 01ea 00000000 		.4byte	0
 4053              	.LLST15:
 4054 01ee 0C000000 		.4byte	.LVL44
 4055 01f2 1E000000 		.4byte	.LVL47
 4056 01f6 0100     		.2byte	0x1
 4057 01f8 52       		.byte	0x52
 4058 01f9 20000000 		.4byte	.LVL48
 4059 01fd 26000000 		.4byte	.LVL49
 4060 0201 0100     		.2byte	0x1
 4061 0203 51       		.byte	0x51
 4062 0204 26000000 		.4byte	.LVL49
 4063 0208 36000000 		.4byte	.LVL53
 4064 020c 0100     		.2byte	0x1
 4065 020e 52       		.byte	0x52
 4066 020f 00000000 		.4byte	0
 4067 0213 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 126


 4068              	.LLST16:
 4069 0217 16000000 		.4byte	.LVL55
 4070 021b 29000000 		.4byte	.LVL56-1
 4071 021f 0100     		.2byte	0x1
 4072 0221 50       		.byte	0x50
 4073 0222 29000000 		.4byte	.LVL56-1
 4074 0226 2C000000 		.4byte	.LVL57
 4075 022a 0100     		.2byte	0x1
 4076 022c 54       		.byte	0x54
 4077 022d 2C000000 		.4byte	.LVL57
 4078 0231 54000000 		.4byte	.LVL58
 4079 0235 0100     		.2byte	0x1
 4080 0237 50       		.byte	0x50
 4081 0238 54000000 		.4byte	.LVL58
 4082 023c 58000000 		.4byte	.LVL59
 4083 0240 0200     		.2byte	0x2
 4084 0242 30       		.byte	0x30
 4085 0243 9F       		.byte	0x9f
 4086 0244 58000000 		.4byte	.LVL59
 4087 0248 6A000000 		.4byte	.LVL60
 4088 024c 0100     		.2byte	0x1
 4089 024e 50       		.byte	0x50
 4090 024f 6A000000 		.4byte	.LVL60
 4091 0253 6E000000 		.4byte	.LVL61
 4092 0257 0100     		.2byte	0x1
 4093 0259 54       		.byte	0x54
 4094 025a 00000000 		.4byte	0
 4095 025e 00000000 		.4byte	0
 4096              	.LLST17:
 4097 0262 00000000 		.4byte	.LVL62
 4098 0266 05000000 		.4byte	.LVL63-1
 4099 026a 0100     		.2byte	0x1
 4100 026c 50       		.byte	0x50
 4101 026d 05000000 		.4byte	.LVL63-1
 4102 0271 08000000 		.4byte	.LFE11
 4103 0275 0400     		.2byte	0x4
 4104 0277 F3       		.byte	0xf3
 4105 0278 01       		.uleb128 0x1
 4106 0279 50       		.byte	0x50
 4107 027a 9F       		.byte	0x9f
 4108 027b 00000000 		.4byte	0
 4109 027f 00000000 		.4byte	0
 4110              	.LLST18:
 4111 0283 00000000 		.4byte	.LVL64
 4112 0287 08000000 		.4byte	.LVL65
 4113 028b 0100     		.2byte	0x1
 4114 028d 50       		.byte	0x50
 4115 028e 08000000 		.4byte	.LVL65
 4116 0292 0A000000 		.4byte	.LVL66
 4117 0296 0300     		.2byte	0x3
 4118 0298 70       		.byte	0x70
 4119 0299 01       		.sleb128 1
 4120 029a 9F       		.byte	0x9f
 4121 029b 0A000000 		.4byte	.LVL66
 4122 029f 30000000 		.4byte	.LFE12
 4123 02a3 0400     		.2byte	0x4
 4124 02a5 F3       		.byte	0xf3
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 127


 4125 02a6 01       		.uleb128 0x1
 4126 02a7 50       		.byte	0x50
 4127 02a8 9F       		.byte	0x9f
 4128 02a9 00000000 		.4byte	0
 4129 02ad 00000000 		.4byte	0
 4130              	.LLST19:
 4131 02b1 00000000 		.4byte	.LVL67
 4132 02b5 0A000000 		.4byte	.LVL71
 4133 02b9 0100     		.2byte	0x1
 4134 02bb 50       		.byte	0x50
 4135 02bc 0A000000 		.4byte	.LVL71
 4136 02c0 0C000000 		.4byte	.LVL72
 4137 02c4 0300     		.2byte	0x3
 4138 02c6 70       		.byte	0x70
 4139 02c7 01       		.sleb128 1
 4140 02c8 9F       		.byte	0x9f
 4141 02c9 0C000000 		.4byte	.LVL72
 4142 02cd 14000000 		.4byte	.LFE13
 4143 02d1 0400     		.2byte	0x4
 4144 02d3 F3       		.byte	0xf3
 4145 02d4 01       		.uleb128 0x1
 4146 02d5 50       		.byte	0x50
 4147 02d6 9F       		.byte	0x9f
 4148 02d7 00000000 		.4byte	0
 4149 02db 00000000 		.4byte	0
 4150              	.LLST20:
 4151 02df 04000000 		.4byte	.LVL68
 4152 02e3 06000000 		.4byte	.LVL69
 4153 02e7 0100     		.2byte	0x1
 4154 02e9 53       		.byte	0x53
 4155 02ea 08000000 		.4byte	.LVL70
 4156 02ee 0C000000 		.4byte	.LVL72
 4157 02f2 0100     		.2byte	0x1
 4158 02f4 53       		.byte	0x53
 4159 02f5 0C000000 		.4byte	.LVL72
 4160 02f9 14000000 		.4byte	.LFE13
 4161 02fd 0100     		.2byte	0x1
 4162 02ff 50       		.byte	0x50
 4163 0300 00000000 		.4byte	0
 4164 0304 00000000 		.4byte	0
 4165              	.LLST21:
 4166 0308 00000000 		.4byte	.LVL73
 4167 030c 06000000 		.4byte	.LVL74
 4168 0310 0100     		.2byte	0x1
 4169 0312 50       		.byte	0x50
 4170 0313 06000000 		.4byte	.LVL74
 4171 0317 10000000 		.4byte	.LVL77
 4172 031b 0100     		.2byte	0x1
 4173 031d 54       		.byte	0x54
 4174 031e 10000000 		.4byte	.LVL77
 4175 0322 12000000 		.4byte	.LFE14
 4176 0326 0400     		.2byte	0x4
 4177 0328 F3       		.byte	0xf3
 4178 0329 01       		.uleb128 0x1
 4179 032a 50       		.byte	0x50
 4180 032b 9F       		.byte	0x9f
 4181 032c 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 128


 4182 0330 00000000 		.4byte	0
 4183              	.LLST22:
 4184 0334 00000000 		.4byte	.LVL73
 4185 0338 09000000 		.4byte	.LVL75-1
 4186 033c 0100     		.2byte	0x1
 4187 033e 51       		.byte	0x51
 4188 033f 09000000 		.4byte	.LVL75-1
 4189 0343 12000000 		.4byte	.LFE14
 4190 0347 0400     		.2byte	0x4
 4191 0349 F3       		.byte	0xf3
 4192 034a 01       		.uleb128 0x1
 4193 034b 51       		.byte	0x51
 4194 034c 9F       		.byte	0x9f
 4195 034d 00000000 		.4byte	0
 4196 0351 00000000 		.4byte	0
 4197              	.LLST23:
 4198 0355 00000000 		.4byte	.LVL78
 4199 0359 0A000000 		.4byte	.LVL80
 4200 035d 0100     		.2byte	0x1
 4201 035f 50       		.byte	0x50
 4202 0360 0A000000 		.4byte	.LVL80
 4203 0364 0C000000 		.4byte	.LVL81
 4204 0368 0100     		.2byte	0x1
 4205 036a 53       		.byte	0x53
 4206 036b 0C000000 		.4byte	.LVL81
 4207 036f 0E000000 		.4byte	.LVL82
 4208 0373 0100     		.2byte	0x1
 4209 0375 50       		.byte	0x50
 4210 0376 0E000000 		.4byte	.LVL82
 4211 037a 19000000 		.4byte	.LVL84-1
 4212 037e 0100     		.2byte	0x1
 4213 0380 53       		.byte	0x53
 4214 0381 19000000 		.4byte	.LVL84-1
 4215 0385 1C000000 		.4byte	.LFE15
 4216 0389 0400     		.2byte	0x4
 4217 038b F3       		.byte	0xf3
 4218 038c 01       		.uleb128 0x1
 4219 038d 50       		.byte	0x50
 4220 038e 9F       		.byte	0x9f
 4221 038f 00000000 		.4byte	0
 4222 0393 00000000 		.4byte	0
 4223              	.LLST24:
 4224 0397 04000000 		.4byte	.LVL79
 4225 039b 0E000000 		.4byte	.LVL82
 4226 039f 0200     		.2byte	0x2
 4227 03a1 30       		.byte	0x30
 4228 03a2 9F       		.byte	0x9f
 4229 03a3 0E000000 		.4byte	.LVL82
 4230 03a7 16000000 		.4byte	.LVL83
 4231 03ab 0100     		.2byte	0x1
 4232 03ad 50       		.byte	0x50
 4233 03ae 1A000000 		.4byte	.LVL84
 4234 03b2 1C000000 		.4byte	.LFE15
 4235 03b6 0100     		.2byte	0x1
 4236 03b8 50       		.byte	0x50
 4237 03b9 00000000 		.4byte	0
 4238 03bd 00000000 		.4byte	0
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 129


 4239              	.LLST25:
 4240 03c1 02000000 		.4byte	.LVL85
 4241 03c5 08000000 		.4byte	.LVL86
 4242 03c9 0200     		.2byte	0x2
 4243 03cb 30       		.byte	0x30
 4244 03cc 9F       		.byte	0x9f
 4245 03cd 08000000 		.4byte	.LVL86
 4246 03d1 18000000 		.4byte	.LVL91
 4247 03d5 0100     		.2byte	0x1
 4248 03d7 55       		.byte	0x55
 4249 03d8 18000000 		.4byte	.LVL91
 4250 03dc 1A000000 		.4byte	.LFE16
 4251 03e0 0100     		.2byte	0x1
 4252 03e2 50       		.byte	0x50
 4253 03e3 00000000 		.4byte	0
 4254 03e7 00000000 		.4byte	0
 4255              	.LLST26:
 4256 03eb 02000000 		.4byte	.LVL85
 4257 03ef 08000000 		.4byte	.LVL86
 4258 03f3 0200     		.2byte	0x2
 4259 03f5 30       		.byte	0x30
 4260 03f6 9F       		.byte	0x9f
 4261 03f7 08000000 		.4byte	.LVL86
 4262 03fb 18000000 		.4byte	.LVL90
 4263 03ff 0100     		.2byte	0x1
 4264 0401 54       		.byte	0x54
 4265 0402 00000000 		.4byte	0
 4266 0406 00000000 		.4byte	0
 4267              	.LLST27:
 4268 040a 00000000 		.4byte	.LVL92
 4269 040e 04000000 		.4byte	.LVL93
 4270 0412 0100     		.2byte	0x1
 4271 0414 50       		.byte	0x50
 4272 0415 04000000 		.4byte	.LVL93
 4273 0419 14000000 		.4byte	.LFE17
 4274 041d 0400     		.2byte	0x4
 4275 041f F3       		.byte	0xf3
 4276 0420 01       		.uleb128 0x1
 4277 0421 50       		.byte	0x50
 4278 0422 9F       		.byte	0x9f
 4279 0423 00000000 		.4byte	0
 4280 0427 00000000 		.4byte	0
 4281              	.LLST28:
 4282 042b 00000000 		.4byte	.LVL94
 4283 042f 42000000 		.4byte	.LVL106
 4284 0433 0100     		.2byte	0x1
 4285 0435 50       		.byte	0x50
 4286 0436 42000000 		.4byte	.LVL106
 4287 043a 74000000 		.4byte	.LFE18
 4288 043e 0400     		.2byte	0x4
 4289 0440 F3       		.byte	0xf3
 4290 0441 01       		.uleb128 0x1
 4291 0442 50       		.byte	0x50
 4292 0443 9F       		.byte	0x9f
 4293 0444 00000000 		.4byte	0
 4294 0448 00000000 		.4byte	0
 4295              	.LLST29:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 130


 4296 044c 18000000 		.4byte	.LVL99
 4297 0450 62000000 		.4byte	.LVL114
 4298 0454 0100     		.2byte	0x1
 4299 0456 55       		.byte	0x55
 4300 0457 00000000 		.4byte	0
 4301 045b 00000000 		.4byte	0
 4302              	.LLST30:
 4303 045f 02000000 		.4byte	.LVL95
 4304 0463 18000000 		.4byte	.LVL99
 4305 0467 0200     		.2byte	0x2
 4306 0469 30       		.byte	0x30
 4307 046a 9F       		.byte	0x9f
 4308 046b 18000000 		.4byte	.LVL99
 4309 046f 2C000000 		.4byte	.LVL101
 4310 0473 0200     		.2byte	0x2
 4311 0475 31       		.byte	0x31
 4312 0476 9F       		.byte	0x9f
 4313 0477 2C000000 		.4byte	.LVL101
 4314 047b 3E000000 		.4byte	.LVL104
 4315 047f 0100     		.2byte	0x1
 4316 0481 51       		.byte	0x51
 4317 0482 00000000 		.4byte	0
 4318 0486 00000000 		.4byte	0
 4319              	.LLST31:
 4320 048a 02000000 		.4byte	.LVL95
 4321 048e 18000000 		.4byte	.LVL99
 4322 0492 0200     		.2byte	0x2
 4323 0494 30       		.byte	0x30
 4324 0495 9F       		.byte	0x9f
 4325 0496 18000000 		.4byte	.LVL99
 4326 049a 2C000000 		.4byte	.LVL101
 4327 049e 0200     		.2byte	0x2
 4328 04a0 32       		.byte	0x32
 4329 04a1 9F       		.byte	0x9f
 4330 04a2 2C000000 		.4byte	.LVL101
 4331 04a6 45000000 		.4byte	.LVL107-1
 4332 04aa 0100     		.2byte	0x1
 4333 04ac 53       		.byte	0x53
 4334 04ad 00000000 		.4byte	0
 4335 04b1 00000000 		.4byte	0
 4336              	.LLST32:
 4337 04b5 46000000 		.4byte	.LVL107
 4338 04b9 48000000 		.4byte	.LVL108
 4339 04bd 0100     		.2byte	0x1
 4340 04bf 50       		.byte	0x50
 4341 04c0 00000000 		.4byte	0
 4342 04c4 00000000 		.4byte	0
 4343              	.LLST33:
 4344 04c8 1A000000 		.4byte	.LVL100
 4345 04cc 50000000 		.4byte	.LVL109
 4346 04d0 0600     		.2byte	0x6
 4347 04d2 74       		.byte	0x74
 4348 04d3 00       		.sleb128 0
 4349 04d4 08       		.byte	0x8
 4350 04d5 FF       		.byte	0xff
 4351 04d6 1A       		.byte	0x1a
 4352 04d7 9F       		.byte	0x9f
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 131


 4353 04d8 50000000 		.4byte	.LVL109
 4354 04dc 52000000 		.4byte	.LVL110
 4355 04e0 0600     		.2byte	0x6
 4356 04e2 74       		.byte	0x74
 4357 04e3 05       		.sleb128 5
 4358 04e4 08       		.byte	0x8
 4359 04e5 FF       		.byte	0xff
 4360 04e6 1A       		.byte	0x1a
 4361 04e7 9F       		.byte	0x9f
 4362 04e8 00000000 		.4byte	0
 4363 04ec 00000000 		.4byte	0
 4364              	.LLST34:
 4365 04f0 14000000 		.4byte	.LVL98
 4366 04f4 40000000 		.4byte	.LVL105
 4367 04f8 0100     		.2byte	0x1
 4368 04fa 52       		.byte	0x52
 4369 04fb 00000000 		.4byte	0
 4370 04ff 00000000 		.4byte	0
 4371              	.LLST35:
 4372 0503 02000000 		.4byte	.LVL115
 4373 0507 06000000 		.4byte	.LVL116
 4374 050b 0200     		.2byte	0x2
 4375 050d 30       		.byte	0x30
 4376 050e 9F       		.byte	0x9f
 4377 050f 06000000 		.4byte	.LVL116
 4378 0513 1E000000 		.4byte	.LVL120
 4379 0517 0100     		.2byte	0x1
 4380 0519 54       		.byte	0x54
 4381 051a 00000000 		.4byte	0
 4382 051e 00000000 		.4byte	0
 4383              	.LLST36:
 4384 0522 12000000 		.4byte	.LVL117
 4385 0526 17000000 		.4byte	.LVL118-1
 4386 052a 0100     		.2byte	0x1
 4387 052c 51       		.byte	0x51
 4388 052d 00000000 		.4byte	0
 4389 0531 00000000 		.4byte	0
 4390              	.LLST37:
 4391 0535 08000000 		.4byte	.LVL121
 4392 0539 18000000 		.4byte	.LVL122
 4393 053d 0100     		.2byte	0x1
 4394 053f 53       		.byte	0x53
 4395 0540 18000000 		.4byte	.LVL122
 4396 0544 1C000000 		.4byte	.LVL123
 4397 0548 0500     		.2byte	0x5
 4398 054a 03       		.byte	0x3
 4399 054b 00000000 		.4byte	CapSense_1_immunity
 4400 054f 1C000000 		.4byte	.LVL123
 4401 0553 2A000000 		.4byte	.LVL124
 4402 0557 0100     		.2byte	0x1
 4403 0559 53       		.byte	0x53
 4404 055a 2A000000 		.4byte	.LVL124
 4405 055e 2E000000 		.4byte	.LVL125
 4406 0562 0500     		.2byte	0x5
 4407 0564 03       		.byte	0x3
 4408 0565 00000000 		.4byte	CapSense_1_immunity
 4409 0569 2E000000 		.4byte	.LVL125
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 132


 4410 056d 38000000 		.4byte	.LVL126
 4411 0571 0100     		.2byte	0x1
 4412 0573 53       		.byte	0x53
 4413 0574 38000000 		.4byte	.LVL126
 4414 0578 3D000000 		.4byte	.LVL128-1
 4415 057c 0500     		.2byte	0x5
 4416 057e 03       		.byte	0x3
 4417 057f 00000000 		.4byte	CapSense_1_immunity
 4418 0583 00000000 		.4byte	0
 4419 0587 00000000 		.4byte	0
 4420              	.LLST38:
 4421 058b 02000000 		.4byte	.LVL131
 4422 058f 06000000 		.4byte	.LVL132
 4423 0593 0200     		.2byte	0x2
 4424 0595 30       		.byte	0x30
 4425 0596 9F       		.byte	0x9f
 4426 0597 06000000 		.4byte	.LVL132
 4427 059b 38000000 		.4byte	.LVL138
 4428 059f 0100     		.2byte	0x1
 4429 05a1 55       		.byte	0x55
 4430 05a2 00000000 		.4byte	0
 4431 05a6 00000000 		.4byte	0
 4432              	.LLST39:
 4433 05aa 10000000 		.4byte	.LVL133
 4434 05ae 14000000 		.4byte	.LVL134
 4435 05b2 0200     		.2byte	0x2
 4436 05b4 30       		.byte	0x30
 4437 05b5 9F       		.byte	0x9f
 4438 05b6 14000000 		.4byte	.LVL134
 4439 05ba 34000000 		.4byte	.LVL137
 4440 05be 0100     		.2byte	0x1
 4441 05c0 54       		.byte	0x54
 4442 05c1 00000000 		.4byte	0
 4443 05c5 00000000 		.4byte	0
 4444              	.LLST40:
 4445 05c9 10000000 		.4byte	.LVL133
 4446 05cd 34000000 		.4byte	.LVL137
 4447 05d1 0100     		.2byte	0x1
 4448 05d3 56       		.byte	0x56
 4449 05d4 00000000 		.4byte	0
 4450 05d8 00000000 		.4byte	0
 4451              	.LLST41:
 4452 05dc 00000000 		.4byte	.LVL139
 4453 05e0 04000000 		.4byte	.LVL140
 4454 05e4 0100     		.2byte	0x1
 4455 05e6 50       		.byte	0x50
 4456 05e7 04000000 		.4byte	.LVL140
 4457 05eb 0C000000 		.4byte	.LFE22
 4458 05ef 0400     		.2byte	0x4
 4459 05f1 F3       		.byte	0xf3
 4460 05f2 01       		.uleb128 0x1
 4461 05f3 50       		.byte	0x50
 4462 05f4 9F       		.byte	0x9f
 4463 05f5 00000000 		.4byte	0
 4464 05f9 00000000 		.4byte	0
 4465              	.LLST42:
 4466 05fd 0A000000 		.4byte	.LVL143
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 133


 4467 0601 13000000 		.4byte	.LVL145-1
 4468 0605 0100     		.2byte	0x1
 4469 0607 53       		.byte	0x53
 4470 0608 1C000000 		.4byte	.LVL147
 4471 060c 25000000 		.4byte	.LVL149-1
 4472 0610 0100     		.2byte	0x1
 4473 0612 53       		.byte	0x53
 4474 0613 2E000000 		.4byte	.LVL151
 4475 0617 3B000000 		.4byte	.LVL154-1
 4476 061b 0100     		.2byte	0x1
 4477 061d 53       		.byte	0x53
 4478 061e 48000000 		.4byte	.LVL157
 4479 0622 4F000000 		.4byte	.LVL159-1
 4480 0626 0100     		.2byte	0x1
 4481 0628 53       		.byte	0x53
 4482 0629 00000000 		.4byte	0
 4483 062d 00000000 		.4byte	0
 4484              	.LLST43:
 4485 0631 06000000 		.4byte	.LVL142
 4486 0635 13000000 		.4byte	.LVL145-1
 4487 0639 0100     		.2byte	0x1
 4488 063b 50       		.byte	0x50
 4489 063c 18000000 		.4byte	.LVL146
 4490 0640 25000000 		.4byte	.LVL149-1
 4491 0644 0100     		.2byte	0x1
 4492 0646 50       		.byte	0x50
 4493 0647 2A000000 		.4byte	.LVL150
 4494 064b 3B000000 		.4byte	.LVL154-1
 4495 064f 0100     		.2byte	0x1
 4496 0651 50       		.byte	0x50
 4497 0652 46000000 		.4byte	.LVL156
 4498 0656 4F000000 		.4byte	.LVL159-1
 4499 065a 0100     		.2byte	0x1
 4500 065c 50       		.byte	0x50
 4501 065d 00000000 		.4byte	0
 4502 0661 00000000 		.4byte	0
 4503              		.section	.debug_aranges,"",%progbits
 4504 0000 D4000000 		.4byte	0xd4
 4505 0004 0200     		.2byte	0x2
 4506 0006 00000000 		.4byte	.Ldebug_info0
 4507 000a 04       		.byte	0x4
 4508 000b 00       		.byte	0
 4509 000c 0000     		.2byte	0
 4510 000e 0000     		.2byte	0
 4511 0010 00000000 		.4byte	.LFB20
 4512 0014 06000000 		.4byte	.LFE20-.LFB20
 4513 0018 00000000 		.4byte	.LFB7
 4514 001c 24000000 		.4byte	.LFE7-.LFB7
 4515 0020 00000000 		.4byte	.LFB1
 4516 0024 10000000 		.4byte	.LFE1-.LFB1
 4517 0028 00000000 		.4byte	.LFB2
 4518 002c 40000000 		.4byte	.LFE2-.LFB2
 4519 0030 00000000 		.4byte	.LFB3
 4520 0034 2C000000 		.4byte	.LFE3-.LFB3
 4521 0038 00000000 		.4byte	.LFB4
 4522 003c 48000000 		.4byte	.LFE4-.LFB4
 4523 0040 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 134


 4524 0044 A0000000 		.4byte	.LFE6-.LFB6
 4525 0048 00000000 		.4byte	.LFB8
 4526 004c 3C000000 		.4byte	.LFE8-.LFB8
 4527 0050 00000000 		.4byte	.LFB9
 4528 0054 40000000 		.4byte	.LFE9-.LFB9
 4529 0058 00000000 		.4byte	.LFB10
 4530 005c 78000000 		.4byte	.LFE10-.LFB10
 4531 0060 00000000 		.4byte	.LFB11
 4532 0064 08000000 		.4byte	.LFE11-.LFB11
 4533 0068 00000000 		.4byte	.LFB12
 4534 006c 30000000 		.4byte	.LFE12-.LFB12
 4535 0070 00000000 		.4byte	.LFB13
 4536 0074 14000000 		.4byte	.LFE13-.LFB13
 4537 0078 00000000 		.4byte	.LFB14
 4538 007c 12000000 		.4byte	.LFE14-.LFB14
 4539 0080 00000000 		.4byte	.LFB15
 4540 0084 1C000000 		.4byte	.LFE15-.LFB15
 4541 0088 00000000 		.4byte	.LFB16
 4542 008c 1A000000 		.4byte	.LFE16-.LFB16
 4543 0090 00000000 		.4byte	.LFB17
 4544 0094 14000000 		.4byte	.LFE17-.LFB17
 4545 0098 00000000 		.4byte	.LFB18
 4546 009c 74000000 		.4byte	.LFE18-.LFB18
 4547 00a0 00000000 		.4byte	.LFB19
 4548 00a4 24000000 		.4byte	.LFE19-.LFB19
 4549 00a8 00000000 		.4byte	.LFB5
 4550 00ac 54000000 		.4byte	.LFE5-.LFB5
 4551 00b0 00000000 		.4byte	.LFB21
 4552 00b4 40000000 		.4byte	.LFE21-.LFB21
 4553 00b8 00000000 		.4byte	.LFB22
 4554 00bc 0C000000 		.4byte	.LFE22-.LFB22
 4555 00c0 00000000 		.4byte	.LFB23
 4556 00c4 0C000000 		.4byte	.LFE23-.LFB23
 4557 00c8 00000000 		.4byte	.LFB24
 4558 00cc 60000000 		.4byte	.LFE24-.LFB24
 4559 00d0 00000000 		.4byte	0
 4560 00d4 00000000 		.4byte	0
 4561              		.section	.debug_ranges,"",%progbits
 4562              	.Ldebug_ranges0:
 4563 0000 00000000 		.4byte	.LFB20
 4564 0004 06000000 		.4byte	.LFE20
 4565 0008 00000000 		.4byte	.LFB7
 4566 000c 24000000 		.4byte	.LFE7
 4567 0010 00000000 		.4byte	.LFB1
 4568 0014 10000000 		.4byte	.LFE1
 4569 0018 00000000 		.4byte	.LFB2
 4570 001c 40000000 		.4byte	.LFE2
 4571 0020 00000000 		.4byte	.LFB3
 4572 0024 2C000000 		.4byte	.LFE3
 4573 0028 00000000 		.4byte	.LFB4
 4574 002c 48000000 		.4byte	.LFE4
 4575 0030 00000000 		.4byte	.LFB6
 4576 0034 A0000000 		.4byte	.LFE6
 4577 0038 00000000 		.4byte	.LFB8
 4578 003c 3C000000 		.4byte	.LFE8
 4579 0040 00000000 		.4byte	.LFB9
 4580 0044 40000000 		.4byte	.LFE9
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 135


 4581 0048 00000000 		.4byte	.LFB10
 4582 004c 78000000 		.4byte	.LFE10
 4583 0050 00000000 		.4byte	.LFB11
 4584 0054 08000000 		.4byte	.LFE11
 4585 0058 00000000 		.4byte	.LFB12
 4586 005c 30000000 		.4byte	.LFE12
 4587 0060 00000000 		.4byte	.LFB13
 4588 0064 14000000 		.4byte	.LFE13
 4589 0068 00000000 		.4byte	.LFB14
 4590 006c 12000000 		.4byte	.LFE14
 4591 0070 00000000 		.4byte	.LFB15
 4592 0074 1C000000 		.4byte	.LFE15
 4593 0078 00000000 		.4byte	.LFB16
 4594 007c 1A000000 		.4byte	.LFE16
 4595 0080 00000000 		.4byte	.LFB17
 4596 0084 14000000 		.4byte	.LFE17
 4597 0088 00000000 		.4byte	.LFB18
 4598 008c 74000000 		.4byte	.LFE18
 4599 0090 00000000 		.4byte	.LFB19
 4600 0094 24000000 		.4byte	.LFE19
 4601 0098 00000000 		.4byte	.LFB5
 4602 009c 54000000 		.4byte	.LFE5
 4603 00a0 00000000 		.4byte	.LFB21
 4604 00a4 40000000 		.4byte	.LFE21
 4605 00a8 00000000 		.4byte	.LFB22
 4606 00ac 0C000000 		.4byte	.LFE22
 4607 00b0 00000000 		.4byte	.LFB23
 4608 00b4 0C000000 		.4byte	.LFE23
 4609 00b8 00000000 		.4byte	.LFB24
 4610 00bc 60000000 		.4byte	.LFE24
 4611 00c0 00000000 		.4byte	0
 4612 00c4 00000000 		.4byte	0
 4613              		.section	.debug_line,"",%progbits
 4614              	.Ldebug_line0:
 4615 0000 12040000 		.section	.debug_str,"MS",%progbits,1
 4615      0200C400 
 4615      00000201 
 4615      FB0E0D00 
 4615      01010101 
 4616              	.LASF67:
 4617 0000 736E7343 		.ascii	"snsCsdClk\000"
 4617      7364436C 
 4617      6B00
 4618              	.LASF111:
 4619 000a 73656E73 		.ascii	"sensorElement\000"
 4619      6F72456C 
 4619      656D656E 
 4619      7400
 4620              	.LASF155:
 4621 0018 43617053 		.ascii	"CapSense_1_BistDischargeExtCapacitors\000"
 4621      656E7365 
 4621      5F315F42 
 4621      69737444 
 4621      69736368 
 4622              	.LASF176:
 4623 003e 43617053 		.ascii	"CapSense_1_SsCSDGetNumberOfConversions\000"
 4623      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 136


 4623      5F315F53 
 4623      73435344 
 4623      4765744E 
 4624              	.LASF103:
 4625 0065 43617053 		.ascii	"CapSense_1_SsCSDDisableMode\000"
 4625      656E7365 
 4625      5F315F53 
 4625      73435344 
 4625      44697361 
 4626              	.LASF94:
 4627 0081 43617053 		.ascii	"CapSense_1_FLASH_WD_STRUCT\000"
 4627      656E7365 
 4627      5F315F46 
 4627      4C415348 
 4627      5F57445F 
 4628              	.LASF109:
 4629 009c 7363616E 		.ascii	"scanStatus\000"
 4629      53746174 
 4629      757300
 4630              	.LASF162:
 4631 00a7 43617053 		.ascii	"CapSense_1_curRamSnsPtr\000"
 4631      656E7365 
 4631      5F315F63 
 4631      75725261 
 4631      6D536E73 
 4632              	.LASF70:
 4633 00bf 736E7254 		.ascii	"snrTestWidgetId\000"
 4633      65737457 
 4633      69646765 
 4633      74496400 
 4634              	.LASF137:
 4635 00cf 43617053 		.ascii	"CapSense_1_SsChangeClkFreq\000"
 4635      656E7365 
 4635      5F315F53 
 4635      73436861 
 4635      6E676543 
 4636              	.LASF147:
 4637 00ea 63656E74 		.ascii	"centerFreqTrim\000"
 4637      65724672 
 4637      65715472 
 4637      696D00
 4638              	.LASF169:
 4639 00f9 43617053 		.ascii	"CapSense_1_CSDScan\000"
 4639      656E7365 
 4639      5F315F43 
 4639      53445363 
 4639      616E00
 4640              	.LASF8:
 4641 010c 756E7369 		.ascii	"unsigned int\000"
 4641      676E6564 
 4641      20696E74 
 4641      00
 4642              	.LASF120:
 4643 0119 43617053 		.ascii	"CapSense_1_SsSetIOsInDefaultState\000"
 4643      656E7365 
 4643      5F315F53 
 4643      73536574 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 137


 4643      494F7349 
 4644              	.LASF145:
 4645 013b 43617053 		.ascii	"CapSense_1_SsInitialize\000"
 4645      656E7365 
 4645      5F315F53 
 4645      73496E69 
 4645      7469616C 
 4646              	.LASF60:
 4647 0153 7363616E 		.ascii	"scanCounter\000"
 4647      436F756E 
 4647      74657200 
 4648              	.LASF58:
 4649 015f 6877436C 		.ascii	"hwClock\000"
 4649      6F636B00 
 4650              	.LASF166:
 4651 0167 43617053 		.ascii	"CapSense_1_curSnsIOPtr\000"
 4651      656E7365 
 4651      5F315F63 
 4651      7572536E 
 4651      73494F50 
 4652              	.LASF146:
 4653 017e 696E6974 		.ascii	"initStatus\000"
 4653      53746174 
 4653      757300
 4654              	.LASF122:
 4655 0189 72656756 		.ascii	"regValue\000"
 4655      616C7565 
 4655      00
 4656              	.LASF158:
 4657 0192 43617053 		.ascii	"CapSense_1_ioList\000"
 4657      656E7365 
 4657      5F315F69 
 4657      6F4C6973 
 4657      7400
 4658              	.LASF115:
 4659 01a4 696E7465 		.ascii	"interruptState\000"
 4659      72727570 
 4659      74537461 
 4659      746500
 4660              	.LASF182:
 4661 01b3 43617053 		.ascii	"CapSense_1_IsBusy\000"
 4661      656E7365 
 4661      5F315F49 
 4661      73427573 
 4661      7900
 4662              	.LASF101:
 4663 01c5 6C667372 		.ascii	"lfsrScale\000"
 4663      5363616C 
 4663      6500
 4664              	.LASF172:
 4665 01cf 43617053 		.ascii	"CapSense_1_CSDConnectSns\000"
 4665      656E7365 
 4665      5F315F43 
 4665      5344436F 
 4665      6E6E6563 
 4666              	.LASF154:
 4667 01e8 64697669 		.ascii	"dividerVal\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 138


 4667      64657256 
 4667      616C00
 4668              	.LASF132:
 4669 01f3 43617053 		.ascii	"CapSense_1_CalibrateWidget\000"
 4669      656E7365 
 4669      5F315F43 
 4669      616C6962 
 4669      72617465 
 4670              	.LASF119:
 4671 020e 6D6F6465 		.ascii	"mode\000"
 4671      00
 4672              	.LASF144:
 4673 0213 43617053 		.ascii	"CapSense_1_SsInitializeSourceSenseClk\000"
 4673      656E7365 
 4673      5F315F53 
 4673      73496E69 
 4673      7469616C 
 4674              	.LASF164:
 4675 0239 43617053 		.ascii	"CapSense_1_scanFreqIndex\000"
 4675      656E7365 
 4675      5F315F73 
 4675      63616E46 
 4675      72657149 
 4676              	.LASF173:
 4677 0252 43617053 		.ascii	"CapSense_1_SsCSDInitialize\000"
 4677      656E7365 
 4677      5F315F53 
 4677      73435344 
 4677      496E6974 
 4678              	.LASF48:
 4679 026d 43617053 		.ascii	"CapSense_1_RAM_WD_LIST_STRUCT\000"
 4679      656E7365 
 4679      5F315F52 
 4679      414D5F57 
 4679      445F4C49 
 4680              	.LASF113:
 4681 028b 656C7464 		.ascii	"eltdNum\000"
 4681      4E756D00 
 4682              	.LASF99:
 4683 0293 70747257 		.ascii	"ptrWdgt\000"
 4683      64677400 
 4684              	.LASF161:
 4685 029b 43617053 		.ascii	"CapSense_1_requestScanAllWidget\000"
 4685      656E7365 
 4685      5F315F72 
 4685      65717565 
 4685      73745363 
 4686              	.LASF121:
 4687 02bb 6C6F6F70 		.ascii	"loopIndex\000"
 4687      496E6465 
 4687      7800
 4688              	.LASF12:
 4689 02c5 666C6F61 		.ascii	"float\000"
 4689      7400
 4690              	.LASF83:
 4691 02cb 73686966 		.ascii	"shift\000"
 4691      7400
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 139


 4692              	.LASF179:
 4693 02d1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4693      43313120 
 4693      352E342E 
 4693      31203230 
 4693      31363036 
 4694 0304 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4694      20726576 
 4694      6973696F 
 4694      6E203233 
 4694      37373135 
 4695 0337 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4695      67202D66 
 4695      66756E63 
 4695      74696F6E 
 4695      2D736563 
 4696              	.LASF143:
 4697 0363 736E7343 		.ascii	"snsClkSrc\000"
 4697      6C6B5372 
 4697      6300
 4698              	.LASF107:
 4699 036d 43617053 		.ascii	"CapSense_1_SetupWidget\000"
 4699      656E7365 
 4699      5F315F53 
 4699      65747570 
 4699      57696467 
 4700              	.LASF178:
 4701 0384 43794465 		.ascii	"CyDelayUs\000"
 4701      6C617955 
 4701      7300
 4702              	.LASF69:
 4703 038e 736E734C 		.ascii	"snsList\000"
 4703      69737400 
 4704              	.LASF7:
 4705 0396 6C6F6E67 		.ascii	"long long unsigned int\000"
 4705      206C6F6E 
 4705      6720756E 
 4705      7369676E 
 4705      65642069 
 4706              	.LASF71:
 4707 03ad 736E7254 		.ascii	"snrTestSensorId\000"
 4707      65737453 
 4707      656E736F 
 4707      72496400 
 4708              	.LASF92:
 4709 03bd 77646774 		.ascii	"wdgtType\000"
 4709      54797065 
 4709      00
 4710              	.LASF100:
 4711 03c6 6C667372 		.ascii	"lfsrSize\000"
 4711      53697A65 
 4711      00
 4712              	.LASF19:
 4713 03cf 43617053 		.ascii	"CapSense_1_LOW_BSLN_RST_TYPE\000"
 4713      656E7365 
 4713      5F315F4C 
 4713      4F575F42 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 140


 4713      534C4E5F 
 4714              	.LASF25:
 4715 03ec 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ENUM\000"
 4715      656E7365 
 4715      5F315F53 
 4715      454E5345 
 4715      5F4D4554 
 4716              	.LASF136:
 4717 0409 76616C75 		.ascii	"value\000"
 4717      6500
 4718              	.LASF66:
 4719 040f 6D6F6443 		.ascii	"modCsdClk\000"
 4719      7364436C 
 4719      6B00
 4720              	.LASF174:
 4721 0419 43617053 		.ascii	"CapSense_1_ISR_StartEx\000"
 4721      656E7365 
 4721      5F315F49 
 4721      53525F53 
 4721      74617274 
 4722              	.LASF77:
 4723 0430 64725074 		.ascii	"drPtr\000"
 4723      7200
 4724              	.LASF125:
 4725 0436 43617053 		.ascii	"CapSense_1_SsIsrInitialize\000"
 4725      656E7365 
 4725      5F315F53 
 4725      73497372 
 4725      496E6974 
 4726              	.LASF23:
 4727 0451 43617053 		.ascii	"CapSense_1_SENSE_METHOD_BIST_E\000"
 4727      656E7365 
 4727      5F315F53 
 4727      454E5345 
 4727      5F4D4554 
 4728              	.LASF181:
 4729 0470 433A5C55 		.ascii	"C:\\Users\\michael.machate\\Desktop\\Cypress_Firstt"
 4729      73657273 
 4729      5C6D6963 
 4729      6861656C 
 4729      2E6D6163 
 4730 049f 65737473 		.ascii	"ests\\FirstTest.cydsn\000"
 4730      5C466972 
 4730      73745465 
 4730      73742E63 
 4730      7964736E 
 4731              	.LASF32:
 4732 04b4 6C6F7742 		.ascii	"lowBslnRst\000"
 4732      736C6E52 
 4732      737400
 4733              	.LASF117:
 4734 04bf 43617053 		.ascii	"CapSense_1_SetPinState\000"
 4734      656E7365 
 4734      5F315F53 
 4734      65745069 
 4734      6E537461 
 4735              	.LASF102:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 141


 4736 04d6 43617053 		.ascii	"CapSense_1_SsSetWidgetSenseClkSrc\000"
 4736      656E7365 
 4736      5F315F53 
 4736      73536574 
 4736      57696467 
 4737              	.LASF127:
 4738 04f8 43617053 		.ascii	"CapSense_1_SsSetModClkClockDivider\000"
 4738      656E7365 
 4738      5F315F53 
 4738      73536574 
 4738      4D6F6443 
 4739              	.LASF91:
 4740 051b 746F7461 		.ascii	"totalNumSns\000"
 4740      6C4E756D 
 4740      536E7300 
 4741              	.LASF128:
 4742 0527 6D6F6443 		.ascii	"modClk\000"
 4742      6C6B00
 4743              	.LASF151:
 4744 052e 43617053 		.ascii	"CapSense_1_SsCSDGetColSnsClkDivider\000"
 4744      656E7365 
 4744      5F315F53 
 4744      73435344 
 4744      47657443 
 4745              	.LASF28:
 4746 0552 6E6F6973 		.ascii	"noiseTh\000"
 4746      65546800 
 4747              	.LASF118:
 4748 055a 43617053 		.ascii	"CapSense_1_SsSwitchSensingMode\000"
 4748      656E7365 
 4748      5F315F53 
 4748      73537769 
 4748      74636853 
 4749              	.LASF14:
 4750 0579 63686172 		.ascii	"char\000"
 4750      00
 4751              	.LASF171:
 4752 057e 43794578 		.ascii	"CyExitCriticalSection\000"
 4752      69744372 
 4752      69746963 
 4752      616C5365 
 4752      6374696F 
 4753              	.LASF110:
 4754 0594 43617053 		.ascii	"CapSense_1_ScanAllWidgets\000"
 4754      656E7365 
 4754      5F315F53 
 4754      63616E41 
 4754      6C6C5769 
 4755              	.LASF81:
 4756 05ae 6873696F 		.ascii	"hsiomShift\000"
 4756      6D536869 
 4756      667400
 4757              	.LASF10:
 4758 05b9 75696E74 		.ascii	"uint16\000"
 4758      313600
 4759              	.LASF142:
 4760 05c0 636F6E76 		.ascii	"conversionsNum\000"
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 142


 4760      65727369 
 4760      6F6E734E 
 4760      756D00
 4761              	.LASF26:
 4762 05cf 7265736F 		.ascii	"resolution\000"
 4762      6C757469 
 4762      6F6E00
 4763              	.LASF74:
 4764 05da 43617053 		.ascii	"CapSense_1_RAM_STRUCT\000"
 4764      656E7365 
 4764      5F315F52 
 4764      414D5F53 
 4764      54525543 
 4765              	.LASF61:
 4766 05f0 73746174 		.ascii	"status\000"
 4766      757300
 4767              	.LASF53:
 4768 05f7 69646163 		.ascii	"idacComp\000"
 4768      436F6D70 
 4768      00
 4769              	.LASF76:
 4770 0600 70635074 		.ascii	"pcPtr\000"
 4770      7200
 4771              	.LASF6:
 4772 0606 6C6F6E67 		.ascii	"long long int\000"
 4772      206C6F6E 
 4772      6720696E 
 4772      7400
 4773              	.LASF18:
 4774 0614 43617053 		.ascii	"CapSense_1_THRESHOLD_TYPE\000"
 4774      656E7365 
 4774      5F315F54 
 4774      48524553 
 4774      484F4C44 
 4775              	.LASF31:
 4776 062e 6F6E4465 		.ascii	"onDebounce\000"
 4776      626F756E 
 4776      636500
 4777              	.LASF129:
 4778 0639 43617053 		.ascii	"CapSense_1_SsSetSnsClockDivider\000"
 4778      656E7365 
 4778      5F315F53 
 4778      73536574 
 4778      536E7343 
 4779              	.LASF133:
 4780 0659 63616C69 		.ascii	"calibrateStatus\000"
 4780      62726174 
 4780      65537461 
 4780      74757300 
 4781              	.LASF68:
 4782 0669 77646774 		.ascii	"wdgtList\000"
 4782      4C697374 
 4782      00
 4783              	.LASF85:
 4784 0672 70747232 		.ascii	"ptr2SnsFlash\000"
 4784      536E7346 
 4784      6C617368 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 143


 4784      00
 4785              	.LASF73:
 4786 067f 736E7254 		.ascii	"snrTestRawCount\000"
 4786      65737452 
 4786      6177436F 
 4786      756E7400 
 4787              	.LASF140:
 4788 068f 66726571 		.ascii	"freqOffset1\000"
 4788      4F666673 
 4788      65743100 
 4789              	.LASF29:
 4790 069b 6E4E6F69 		.ascii	"nNoiseTh\000"
 4790      73655468 
 4790      00
 4791              	.LASF65:
 4792 06a4 63736430 		.ascii	"csd0Config\000"
 4792      436F6E66 
 4792      696700
 4793              	.LASF17:
 4794 06af 63796973 		.ascii	"cyisraddress\000"
 4794      72616464 
 4794      72657373 
 4794      00
 4795              	.LASF141:
 4796 06bc 66726571 		.ascii	"freqOffset2\000"
 4796      4F666673 
 4796      65743200 
 4797              	.LASF97:
 4798 06c8 6C6F6E67 		.ascii	"long double\000"
 4798      20646F75 
 4798      626C6500 
 4799              	.LASF36:
 4800 06d4 43617053 		.ascii	"CapSense_1_RAM_WD_BASE_STRUCT\000"
 4800      656E7365 
 4800      5F315F52 
 4800      414D5F57 
 4800      445F4241 
 4801              	.LASF75:
 4802 06f2 6873696F 		.ascii	"hsiomPtr\000"
 4802      6D507472 
 4802      00
 4803              	.LASF11:
 4804 06fb 75696E74 		.ascii	"uint32\000"
 4804      333200
 4805              	.LASF30:
 4806 0702 68797374 		.ascii	"hysteresis\000"
 4806      65726573 
 4806      697300
 4807              	.LASF88:
 4808 070d 70747232 		.ascii	"ptr2FltrHistory\000"
 4808      466C7472 
 4808      48697374 
 4808      6F727900 
 4809              	.LASF20:
 4810 071d 43617053 		.ascii	"CapSense_1_UNDEFINED_E\000"
 4810      656E7365 
 4810      5F315F55 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 144


 4810      4E444546 
 4810      494E4544 
 4811              	.LASF55:
 4812 0734 43617053 		.ascii	"CapSense_1_RAM_SNS_LIST_STRUCT\000"
 4812      656E7365 
 4812      5F315F52 
 4812      414D5F53 
 4812      4E535F4C 
 4813              	.LASF80:
 4814 0753 6D61736B 		.ascii	"mask\000"
 4814      00
 4815              	.LASF180:
 4816 0758 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_1_Sensing.c\000"
 4816      72617465 
 4816      645F536F 
 4816      75726365 
 4816      5C50536F 
 4817              	.LASF135:
 4818 0784 43617053 		.ascii	"CapSense_1_SsChangeImoFreq\000"
 4818      656E7365 
 4818      5F315F53 
 4818      73436861 
 4818      6E676549 
 4819              	.LASF98:
 4820 079f 77646774 		.ascii	"wdgtIndex\000"
 4820      496E6465 
 4820      7800
 4821              	.LASF149:
 4822 07a9 736E7349 		.ascii	"snsIndex\000"
 4822      6E646578 
 4822      00
 4823              	.LASF156:
 4824 07b2 43617053 		.ascii	"CapSense_1_dsRam\000"
 4824      656E7365 
 4824      5F315F64 
 4824      7352616D 
 4824      00
 4825              	.LASF108:
 4826 07c3 43617053 		.ascii	"CapSense_1_Scan\000"
 4826      656E7365 
 4826      5F315F53 
 4826      63616E00 
 4827              	.LASF24:
 4828 07d3 43617053 		.ascii	"CapSense_1_SENSE_METHOD_ISX_E\000"
 4828      656E7365 
 4828      5F315F53 
 4828      454E5345 
 4828      5F4D4554 
 4829              	.LASF16:
 4830 07f1 72656733 		.ascii	"reg32\000"
 4830      3200
 4831              	.LASF72:
 4832 07f7 736E7254 		.ascii	"snrTestScanCounter\000"
 4832      65737453 
 4832      63616E43 
 4832      6F756E74 
 4832      657200
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 145


 4833              	.LASF56:
 4834 080a 636F6E66 		.ascii	"configId\000"
 4834      69674964 
 4834      00
 4835              	.LASF87:
 4836 0813 70747232 		.ascii	"ptr2SnsRam\000"
 4836      536E7352 
 4836      616D00
 4837              	.LASF96:
 4838 081e 43617053 		.ascii	"CapSense_1_FLASH_STRUCT\000"
 4838      656E7365 
 4838      5F315F46 
 4838      4C415348 
 4838      5F535452 
 4839              	.LASF64:
 4840 0836 736E7353 		.ascii	"snsStatus\000"
 4840      74617475 
 4840      7300
 4841              	.LASF124:
 4842 0840 706F7374 		.ascii	"postScanStatus\000"
 4842      5363616E 
 4842      53746174 
 4842      757300
 4843              	.LASF34:
 4844 084f 736E7343 		.ascii	"snsClkSource\000"
 4844      6C6B536F 
 4844      75726365 
 4844      00
 4845              	.LASF35:
 4846 085c 73697A65 		.ascii	"sizetype\000"
 4846      74797065 
 4846      00
 4847              	.LASF177:
 4848 0865 43617053 		.ascii	"CapSense_1_CSDDisconnectSns\000"
 4848      656E7365 
 4848      5F315F43 
 4848      53444469 
 4848      73636F6E 
 4849              	.LASF2:
 4850 0881 73686F72 		.ascii	"short int\000"
 4850      7420696E 
 4850      7400
 4851              	.LASF153:
 4852 088b 43617053 		.ascii	"CapSense_1_SsCSDSetColSnsClkDivider\000"
 4852      656E7365 
 4852      5F315F53 
 4852      73435344 
 4852      53657443 
 4853              	.LASF4:
 4854 08af 6C6F6E67 		.ascii	"long int\000"
 4854      20696E74 
 4854      00
 4855              	.LASF62:
 4856 08b8 77646774 		.ascii	"wdgtEnable\000"
 4856      456E6162 
 4856      6C6500
 4857              	.LASF131:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 146


 4858 08c3 43617053 		.ascii	"CapSense_1_SsSetClockDividers\000"
 4858      656E7365 
 4858      5F315F53 
 4858      73536574 
 4858      436C6F63 
 4859              	.LASF157:
 4860 08e1 43617053 		.ascii	"CapSense_1_dsFlash\000"
 4860      656E7365 
 4860      5F315F64 
 4860      73466C61 
 4860      736800
 4861              	.LASF51:
 4862 08f4 64696666 		.ascii	"diff\000"
 4862      00
 4863              	.LASF59:
 4864 08f9 74756E65 		.ascii	"tunerCmd\000"
 4864      72436D64 
 4864      00
 4865              	.LASF78:
 4866 0902 70735074 		.ascii	"psPtr\000"
 4866      7200
 4867              	.LASF22:
 4868 0908 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSX_E\000"
 4868      656E7365 
 4868      5F315F53 
 4868      454E5345 
 4868      5F4D4554 
 4869              	.LASF38:
 4870 0926 62757474 		.ascii	"button0\000"
 4870      6F6E3000 
 4871              	.LASF39:
 4872 092e 62757474 		.ascii	"button1\000"
 4872      6F6E3100 
 4873              	.LASF40:
 4874 0936 62757474 		.ascii	"button2\000"
 4874      6F6E3200 
 4875              	.LASF41:
 4876 093e 62757474 		.ascii	"button3\000"
 4876      6F6E3300 
 4877              	.LASF42:
 4878 0946 62757474 		.ascii	"button4\000"
 4878      6F6E3400 
 4879              	.LASF43:
 4880 094e 62757474 		.ascii	"button5\000"
 4880      6F6E3500 
 4881              	.LASF44:
 4882 0956 62757474 		.ascii	"button6\000"
 4882      6F6E3600 
 4883              	.LASF45:
 4884 095e 62757474 		.ascii	"button7\000"
 4884      6F6E3700 
 4885              	.LASF46:
 4886 0966 62757474 		.ascii	"button8\000"
 4886      6F6E3800 
 4887              	.LASF47:
 4888 096e 62757474 		.ascii	"button9\000"
 4888      6F6E3900 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 147


 4889              	.LASF175:
 4890 0976 43617053 		.ascii	"CapSense_1_CSDCalibrateWidget\000"
 4890      656E7365 
 4890      5F315F43 
 4890      53444361 
 4890      6C696272 
 4891              	.LASF93:
 4892 0994 6E756D43 		.ascii	"numCols\000"
 4892      6F6C7300 
 4893              	.LASF63:
 4894 099c 77646774 		.ascii	"wdgtStatus\000"
 4894      53746174 
 4894      757300
 4895              	.LASF168:
 4896 09a7 43617053 		.ascii	"CapSense_1_CSDSetupWidget\000"
 4896      656E7365 
 4896      5F315F43 
 4896      53445365 
 4896      74757057 
 4897              	.LASF160:
 4898 09c1 43617053 		.ascii	"CapSense_1_sensorIndex\000"
 4898      656E7365 
 4898      5F315F73 
 4898      656E736F 
 4898      72496E64 
 4899              	.LASF21:
 4900 09d8 43617053 		.ascii	"CapSense_1_SENSE_METHOD_CSD_E\000"
 4900      656E7365 
 4900      5F315F53 
 4900      454E5345 
 4900      5F4D4554 
 4901              	.LASF82:
 4902 09f6 64725368 		.ascii	"drShift\000"
 4902      69667400 
 4903              	.LASF5:
 4904 09fe 6C6F6E67 		.ascii	"long unsigned int\000"
 4904      20756E73 
 4904      69676E65 
 4904      6420696E 
 4904      7400
 4905              	.LASF152:
 4906 0a10 72657456 		.ascii	"retVal\000"
 4906      616C00
 4907              	.LASF126:
 4908 0a17 61646472 		.ascii	"address\000"
 4908      65737300 
 4909              	.LASF33:
 4910 0a1f 69646163 		.ascii	"idacMod\000"
 4910      4D6F6400 
 4911              	.LASF89:
 4912 0a27 70747232 		.ascii	"ptr2DebounceArr\000"
 4912      4465626F 
 4912      756E6365 
 4912      41727200 
 4913              	.LASF167:
 4914 0a37 43617053 		.ascii	"CapSense_1_SsCSDElectrodeCheck\000"
 4914      656E7365 
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 148


 4914      5F315F53 
 4914      73435344 
 4914      456C6563 
 4915              	.LASF27:
 4916 0a56 66696E67 		.ascii	"fingerTh\000"
 4916      65725468 
 4916      00
 4917              	.LASF134:
 4918 0a5f 43617053 		.ascii	"CapSense_1_CalibrateAllWidgets\000"
 4918      656E7365 
 4918      5F315F43 
 4918      616C6962 
 4918      72617465 
 4919              	.LASF50:
 4920 0a7e 62736C6E 		.ascii	"bslnExt\000"
 4920      45787400 
 4921              	.LASF138:
 4922 0a86 63684964 		.ascii	"chId\000"
 4922      00
 4923              	.LASF15:
 4924 0a8b 63797374 		.ascii	"cystatus\000"
 4924      61747573 
 4924      00
 4925              	.LASF1:
 4926 0a94 756E7369 		.ascii	"unsigned char\000"
 4926      676E6564 
 4926      20636861 
 4926      7200
 4927              	.LASF183:
 4928 0aa2 70747246 		.ascii	"ptrFlashWdgt\000"
 4928      6C617368 
 4928      57646774 
 4928      00
 4929              	.LASF90:
 4930 0aaf 73746174 		.ascii	"staticConfig\000"
 4930      6963436F 
 4930      6E666967 
 4930      00
 4931              	.LASF116:
 4932 0abc 696F5074 		.ascii	"ioPtr\000"
 4932      7200
 4933              	.LASF86:
 4934 0ac2 70747232 		.ascii	"ptr2WdgtRam\000"
 4934      57646774 
 4934      52616D00 
 4935              	.LASF112:
 4936 0ace 73746174 		.ascii	"state\000"
 4936      6500
 4937              	.LASF114:
 4938 0ad4 656C7464 		.ascii	"eltdIndex\000"
 4938      496E6465 
 4938      7800
 4939              	.LASF79:
 4940 0ade 6873696F 		.ascii	"hsiomMask\000"
 4940      6D4D6173 
 4940      6B00
 4941              	.LASF163:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 149


 4942 0ae8 43617053 		.ascii	"CapSense_1_currentSenseMethod\000"
 4942      656E7365 
 4942      5F315F63 
 4942      75727265 
 4942      6E745365 
 4943              	.LASF150:
 4944 0b06 63757253 		.ascii	"curSnsIOPtr\000"
 4944      6E73494F 
 4944      50747200 
 4945              	.LASF130:
 4946 0b12 736E7343 		.ascii	"snsClk\000"
 4946      6C6B00
 4947              	.LASF170:
 4948 0b19 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4948      74657243 
 4948      72697469 
 4948      63616C53 
 4948      65637469 
 4949              	.LASF0:
 4950 0b30 7369676E 		.ascii	"signed char\000"
 4950      65642063 
 4950      68617200 
 4951              	.LASF49:
 4952 0b3c 62736C6E 		.ascii	"bsln\000"
 4952      00
 4953              	.LASF3:
 4954 0b41 73686F72 		.ascii	"short unsigned int\000"
 4954      7420756E 
 4954      7369676E 
 4954      65642069 
 4954      6E7400
 4955              	.LASF84:
 4956 0b54 43617053 		.ascii	"CapSense_1_FLASH_IO_STRUCT\000"
 4956      656E7365 
 4956      5F315F46 
 4956      4C415348 
 4956      5F494F5F 
 4957              	.LASF165:
 4958 0b6f 43617053 		.ascii	"CapSense_1_immunity\000"
 4958      656E7365 
 4958      5F315F69 
 4958      6D6D756E 
 4958      69747900 
 4959              	.LASF104:
 4960 0b83 6E657752 		.ascii	"newRegValue\000"
 4960      65675661 
 4960      6C756500 
 4961              	.LASF148:
 4962 0b8f 43617053 		.ascii	"CapSense_1_SsClearCSDSensors\000"
 4962      656E7365 
 4962      5F315F53 
 4962      73436C65 
 4962      61724353 
 4963              	.LASF9:
 4964 0bac 75696E74 		.ascii	"uint8\000"
 4964      3800
 4965              	.LASF13:
ARM GAS  C:\Users\MICHAE~1.MAC\AppData\Local\Temp\cc5trKH4.s 			page 150


 4966 0bb2 646F7562 		.ascii	"double\000"
 4966      6C6500
 4967              	.LASF52:
 4968 0bb9 6E656742 		.ascii	"negBslnRstCnt\000"
 4968      736C6E52 
 4968      7374436E 
 4968      7400
 4969              	.LASF54:
 4970 0bc7 43617053 		.ascii	"CapSense_1_RAM_SNS_STRUCT\000"
 4970      656E7365 
 4970      5F315F52 
 4970      414D5F53 
 4970      4E535F53 
 4971              	.LASF139:
 4972 0be1 736E7343 		.ascii	"snsClkDivider\000"
 4972      6C6B4469 
 4972      76696465 
 4972      7200
 4973              	.LASF57:
 4974 0bef 64657669 		.ascii	"deviceId\000"
 4974      63654964 
 4974      00
 4975              	.LASF106:
 4976 0bf8 77696467 		.ascii	"widgetStatus\000"
 4976      65745374 
 4976      61747573 
 4976      00
 4977              	.LASF37:
 4978 0c05 43617053 		.ascii	"CapSense_1_RAM_WD_BUTTON_STRUCT\000"
 4978      656E7365 
 4978      5F315F52 
 4978      414D5F57 
 4978      445F4255 
 4979              	.LASF105:
 4980 0c25 77696467 		.ascii	"widgetId\000"
 4980      65744964 
 4980      00
 4981              	.LASF123:
 4982 0c2e 43617053 		.ascii	"CapSense_1_SsPostAllWidgetsScan\000"
 4982      656E7365 
 4982      5F315F53 
 4982      73506F73 
 4982      74416C6C 
 4983              	.LASF159:
 4984 0c4e 43617053 		.ascii	"CapSense_1_widgetIndex\000"
 4984      656E7365 
 4984      5F315F77 
 4984      69646765 
 4984      74496E64 
 4985              	.LASF95:
 4986 0c65 77646774 		.ascii	"wdgtArray\000"
 4986      41727261 
 4986      7900
 4987              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
